{"version":3,"sources":["webpack:///./routes/settings/general.js"],"names":["MARGIN_TOP_BACK","mu","marginTopBack","initialState","searchText","flags","no","en","es","de","fr","ru","se","Settings","observer","Component","constructor","props","super","toggleDarkmode","e","appState","this","stores","toggleViewmode","mode","target","closest","dataset","changeLanguage","lang","userStore","user","setLanguage","email","language","back","history","goBack","state","componentWillReceiveProps","nextProps","search","loadAll","render","viewmode","settings","class","style","onClick","id","map","idx","className","activeClassName","data-mode","data-lang","href"],"mappings":"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","file":"104.chunk.c45eb.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport { route } from 'preact-router';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\n\nconst initialState = {\n\tsearchText: '',\n};\n\nconst flags = {\n    no: 'ðŸ‡³ðŸ‡´',\n    en: 'ðŸ‡¬ðŸ‡§',\n    es: 'ðŸ‡ªðŸ‡¸',\n    de: 'ðŸ‡©ðŸ‡ª',\n    fr: 'ðŸ‡«ðŸ‡·',\n    ru: 'ðŸ‡·ðŸ‡º',\n    se: 'ðŸ‡¸ðŸ‡ª',\n};\n\n@observer\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.search !== this.props.search) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    toggleDarkmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tappState.toggleDarkmode();\n\t}\n\n    toggleViewmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tconst { mode } = e.target.closest('a').dataset;\n\t\tappState.toggleViewmode(mode);\n\t}\n\n    changeLanguage = (e) => {\n        const { lang } = e.target.closest('a').dataset;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tuserStore.setLanguage({ email: user.email, language: lang });\n\t}\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\trender() {\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tconst { search } = this.props;\n\n\t\tconst { isAdmin } = userStore;\n\t\tconst { darkmode, viewmode } = appState;\n\t\tconst { searchText } = this.state;\n\n        const { user } = userStore;\n        const { settings = {}, language = 'en' } = user;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style='margin-bottom: 200px; margin-top: 60px;'>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n\t\t\t\t<div class='row m-2'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t\t<h1><Text id='settings.title'>Settings</Text></h1>\n                    </div>\n                </div>\n\t\t\t\t<div class='row m-2'>\n\t\t\t\t\t{/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t\t<div class='d-flex justify-content-center py-3'>\n\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t<input class='form-control form-control mr-2' type='search' placeholder={<Text id='settings.search-placeholder'>Search for settings...</Text>}\n\t\t\t\t\t\t\t\t\tvalue={searchText}\n\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'searchText')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Localizer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> */}\n\n\t\t\t\t\t{/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                <button class='btn btn-secondary py-0 px-1 mr-3' style='width: 2.0em;'>\n                                    <i class='fas fa-moon text-warning' />\n                                </button>\n                                <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                    Darkmode<br />\n                                    <small class='text-muted'><Text id='settings.darkmode'>Dark or light layout</Text></small>\n                                </span>\n                                <div class='custom-control custom-switch custom-switch-lg mt-2' style=\"transform: scale(1.8);\">\n                                    <input type='checkbox' class='custom-control-input' id='settingsDarkmode' onInput={() => this.toggleDarkmode()} checked={darkmode} />\n                                    <label class='custom-control-label' for='settingsDarkmode' />\n                                </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n                    </div> */}\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='settings.viewmode'>View mode</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {['simple', 'normal', 'advanced', 'beta'].map((mode, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1'>\n                                        <Link className='stretched-link' activeClassName={'active'}\n                                            data-mode={mode}\n                                            onClick={this.toggleViewmode}\n                                        >\n                                            <Text id={`settings.viewmode-${mode}`}>{mode}</Text>\n                                        </Link>\n                                    </span>\n                                    {viewmode === mode && <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                        <i class='fas fa-check text-primary' />\n                                    </button>}\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='settings.language'>Language</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {['no', 'en', 'de', 'es', 'fr', 'ru', 'se'].map((lang, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <button class='btn btn-link py-0 px-1 mr-3' style='width: 2.0em;'>\n                                        {flags[lang]}\n                                    </button>\n                                    <span class='flex-grow-1'>\n                                        <Link className='stretched-link' activeClassName={'active'}\n                                            data-lang={lang}\n                                            onClick={this.changeLanguage}\n                                        >\n                                            <Text id={`settings.language-${lang}`}>{lang}</Text>\n                                        </Link>\n                                    </span>\n                                    {language === lang && <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                        <i class='fas fa-check text-primary' />\n                                    </button>}\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        <div class='row'>\n                            <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                <button class='btn btn-secondary py-0 px-1 mr-3' style='width: 2.0em;'>\n                                    <i class='fas fa-sign-out-alt' />\n                                </button>\n                                <span class='flex-grow-1'>\n                                    <Link className='stretched-link' activeClassName={'active'} href='/logout'>\n                                        <Text id='settings.logout'>Logout</Text>\n                                    </Link>\n                                </span>\n                            </div>\n                        </div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Settings;\n"],"sourceRoot":""}