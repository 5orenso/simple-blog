{"version":3,"sources":["webpack:///./routes/wizards/startup.js","webpack:///./components/form/files.js","webpack:///./routes/users/edit.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["WizardStartup","observer","Component","constructor","props","super","scrollImages","e","scrollLeft","clientWidth","target","imageIdx","nearestInt","Math","round","diff","abs","Number","isInteger","this","setState","state","newsStore","userStore","stores","isAdmin","query","tag","showall","load","componentDidMount","loadNews","render","appState","language","newsList","class","style","onScroll","map","news","editFields","mu","replaceFieldTags","ingress","onTouchstart","stopPropagation","onTouchend","onTouchmove","images","src","s3LargeLink","title","markdown","replaceImages","markdownOpts","getMarkdownOptions","field","name","type","help","body","img","idx","Files","handleAddImage","file","updateField","object","id","value","files","uploadStatus","before","after","autoOpen","apiUrl","height","width","MARGIN_TOP","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","Input","handleImageErrored","image","onerror","setTimeout","Date","removeImage","async","user","parentElement","dataset","removeMainImage","saved","icon","onInput","skipImageList","byMd5","md5","for","s3SmallLink","onError","onClick","data-name","filter","aria-describedby","data-id","data-field","UserEdit","elementtype","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","updateTimer","back","history","goBack","getInfo","saveField","loadUser","insertStatus","email","role","Images","addToImages","push","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","handleDragIn","dragCounter","dataTransfer","items","length","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","util","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","position","ref","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","c","Object","keys","key","isImage","match","result","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax","children"],"mappings":"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","file":"84.chunk.3a0df.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport linkState from 'linkstate';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport UserEditField from '../users/edit';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WizardStartup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    async loadNews(props = this.props) {\n\t\tconst { newsStore, userStore } = props.stores;\n\t\tconst { isAdmin } = userStore;\n\t\tconst query = {\n\t\t\ttag: 'wizardStartup',\n\t\t};\n\t\tif (isAdmin) {\n\t\t\tquery.showall = 1;\n\t\t}\n\t\tawait newsStore.load({ query });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n    render() {\n        const { imageIdx } = this.state;\n        const { appState } = this.props.stores;\n        const { language = 'en' } = appState;\n\n        const { newsStore } = this.props.stores;\n\t\tconst { newsList } = newsStore;\n\n        const darkmode = true;\n\n        return (\n            <div class='container-fluid'>\n                <div class='row'>\n                    <div class='fixed-bottom' style='height: 90vh;'>\n                        <div\n                            class='d-flex flex-row flex-nowrap no-scrollbar h-100'\n                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                            onScroll={this.scrollImages}\n                        >\n                            {newsList.map((news, idx) => {\n                                const editFields = mu.replaceFieldTags(news.ingress);\n                                return (<>\n                                    <div class='col-12 clearfix p-0 position-relative'>\n                                        <div\n                                            class={`w-100 h-100 text-center`}\n                                            style={`\n                                                flex-wrap: wrap;\n                                                overflow-y: hidden;\n                                                scroll-snap-align: start;\n                                            `}\n                                            onTouchstart={(e) => { e.stopPropagation(); }}\n                                            onTouchend={(e) => { e.stopPropagation(); }}\n                                            onTouchmove={(e) => { e.stopPropagation(); }}\n                                        >\n                                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 overflow-hidden' style='height: 25%;'>\n                                                {(news.images && news.images[0]) && <img src={news.images[0].s3LargeLink} class='img-fluid ' />}\n                                            </div>\n\n                                            <div class='bg-white text-dark' style='height: 75%;'>\n                                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 pt-5'>\n                                                    <h3>{news.title}</h3>\n                                                    <Markdown markdown={mu.replaceImages(news.ingress, news.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n\n                                                    <div class='text-left'>\n                                                        {editFields && editFields.map(field => <>\n                                                            <UserEditField stores={this.props.stores} field={field.name} type={field.type} title={field.title} help={field.help} />\n                                                        </>)}\n                                                    </div>\n                                                    <small><Markdown markdown={mu.replaceImages(news.body, news.images, language, false)} markdownOpts={mu.getMarkdownOptions()} /></small>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n                        </div>\n                        <div class='w-100 text-center position-absolute bg-white text-dark' style='bottom: 20px; right: 0px;'>\n                            <small>\n                                <small>\n                                    {newsList.map((img, idx) => <>\n                                        <i class={`${idx === imageIdx ? 'fas' : 'far'} fa-circle mr-1`} />\n                                    </>)}\n                                </small>\n                            </small>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WizardStartup;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Map from '../../components/map';\n\nconst initialState = {};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { userStore } = this.props.stores;\n        const { user } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        userStore.removeImage({\n            id: user.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { user, field, updateField } = this.props;\n        updateField({ id: user.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, user, type = 'text', field, title, icon, help, onInput, updateField, skipImageList } = this.props;\n        const value = user[field];\n        const byMd5 = e => user.image ? e.md5 !== user.image.md5 : true;\n\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    {!skipImageList && <div class='container-fluid'>\n                        <div class='row'>\n                            {user.image && user.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={user.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={user.image.name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {user.images && user.images.filter(byMd5).map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>}\n                    <Images saved={saved} object={user} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={user} field={field} updateField={updateField} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={user.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass UserEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    async loadUser() {\n\t\tconst { userStore } = this.props.stores;\n        userStore.getInfo();\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { userStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { user } = userStore;\n        if (field === 'images') {\n            if (Array.isArray(user.images) && Array.isArray(value)) {\n                localObjectValue = [...user.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        userStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { userStore } = this.props.stores;\n        await userStore.saveField(id, field, value);\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadUser();\n    }\n\n\trender() {\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { insertStatus, saved, user } = userStore;\n        const { email } = user;\n        const { field, title, help, icon, type } = this.props;\n\n        if (field) {\n            return <>\n                <Input\n                    saved={saved}\n                    user={user}\n                    field={field}\n                    icon={icon}\n                    type={type}\n                    stores={this.props.stores}\n                    title={title}\n                    help={help}\n                    onInput={this.updateField}\n                    updateField={this.updateFieldValue}\n                    skipImageList={false}\n                />\n            </>;\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='offset-0 col-12 offset-sm-2 col-sm-8 offset-lg-4 col-lg-4' style='padding-left: 35px;'>\n                        <div>\n                            <h5><Text id='users.edit'>Endre</Text>: {email}</h5>\n\n                            <Input saved={saved} user={user} field='username' icon='fas fa-user'\n                                title={<Text id='users.username'>Brukernavn</Text>}\n                                help={<Text id='users.username-help'>Ditt brukernavn på The Musher</Text>}\n                                onInput={this.updateField} />\n\n                            <div class='row'>\n                                <div class='col-6'>\n                                    <Input saved={saved} user={user} field='firstname'\n                                        title={<Text id='users.firstname'>Fornavn</Text>}\n                                        help={<Text id='users.firstname-help'>Ditt fornavn</Text>}\n                                        onInput={this.updateField} />\n                                </div>\n                                <div class='col-6'>\n                                    <Input saved={saved} user={user} field='lastname'\n                                        title={<Text id='users.lastname'>Etternavn</Text>}\n                                        help={<Text id='users.lastname-help'>Ditt etternavn</Text>}\n                                        onInput={this.updateField} />\n                                </div>\n                            </div>\n\n                            <Input saved={saved} user={user} field='cellphone' icon='fas fa-mobile'\n                                title={<Text id='users.cellphone'>Mobil</Text>}\n                                help={<Text id='users.cellphone-help'>Ditt mobilnummer</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='url' icon='fas fa-link'\n                                title={<Text id='users.url'>Hjemmeside</Text>}\n                                help={<Text id='users.url-help'>Din hjemmeside</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='facebook' icon='fab fa-facebook-square'\n                                title={<Text id='users.facebook'>Facebook</Text>}\n                                help={<Text id='users.facebook-help'>Din Facebook profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='instagram' icon='fab fa-instagram'\n                                title={<Text id='users.instagram'>Instagram</Text>}\n                                help={<Text id='users.instagram-help'>Din Instagram profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='snapchat' icon='fab fa-snapchat'\n                                title={<Text id='users.snapchat'>Snapchat</Text>}\n                                help={<Text id='users.snapchat-help'>Din Snapchat profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='image' icon='fas fa-camera' type='image'\n                                stores={this.props.stores}\n                                title={<Text id='users.photos'>Bilder</Text>}\n                                help={<Text id='users.photos-help'>Bilder av deg.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n                        </div>                                                        \n\t\t\t\t\t</div>\n\n\t\t\t\t\t{insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n\t\t\t\t\t\t<Text id='users.saved'>Profilen er lagret.</Text>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UserEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}