{"version":3,"sources":["webpack:///./components/form/files.js","webpack:///./routes/users/edit.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["Files","observer","Component","constructor","props","super","handleAddImage","file","updateField","object","field","this","id","value","state","files","render","uploadStatus","before","after","autoOpen","class","apiUrl","style","height","width","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","Input","handleImageErrored","e","image","target","onerror","setTimeout","src","Date","removeImage","async","userStore","stores","user","name","parentElement","dataset","removeMainImage","saved","type","title","icon","help","onInput","skipImageList","byMd5","md5","for","s3SmallLink","onError","onClick","data-name","images","filter","map","img","aria-describedby","data-id","data-field","UserEdit","elementtype","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","updateTimer","back","history","goBack","getInfo","saveField","componentDidMount","loadUser","insertStatus","email","role","Images","addToImages","push","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","setState","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","util","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","position","ref","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","c","Object","keys","key","isImage","match","result","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax","children"],"mappings":"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","file":"90.chunk.674d3.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Map from '../../components/map';\n\nconst initialState = {};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { userStore } = this.props.stores;\n        const { user } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        userStore.removeImage({\n            id: user.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { user, field, updateField } = this.props;\n        updateField({ id: user.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, user, type = 'text', field, title, icon, help, onInput, updateField, skipImageList } = this.props;\n        const value = user[field];\n        const byMd5 = e => user.image ? e.md5 !== user.image.md5 : true;\n\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    {!skipImageList && <div class='container-fluid'>\n                        <div class='row'>\n                            {user.image && user.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={user.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={user.image.name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {user.images && user.images.filter(byMd5).map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>}\n                    <Images saved={saved} object={user} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={user} field={field} updateField={updateField} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={user.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass UserEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    async loadUser() {\n\t\tconst { userStore } = this.props.stores;\n        userStore.getInfo();\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { userStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { user } = userStore;\n        if (field === 'images') {\n            if (Array.isArray(user.images) && Array.isArray(value)) {\n                localObjectValue = [...user.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        userStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { userStore } = this.props.stores;\n        await userStore.saveField(id, field, value);\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadUser();\n    }\n\n\trender() {\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { insertStatus, saved, user } = userStore;\n        const { email } = user;\n        const { field, title, help, icon, type } = this.props;\n\n        if (field) {\n            return <>\n                <Input\n                    saved={saved}\n                    user={user}\n                    field={field}\n                    icon={icon}\n                    type={type}\n                    stores={this.props.stores}\n                    title={title}\n                    help={help}\n                    onInput={this.updateField}\n                    updateField={this.updateFieldValue}\n                    skipImageList={false}\n                />\n            </>;\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='offset-0 col-12 offset-sm-2 col-sm-8 offset-lg-4 col-lg-4' style='padding-left: 35px;'>\n                        <div>\n                            <h5><Text id='users.edit'>Endre</Text>: {email}</h5>\n\n                            <Input saved={saved} user={user} field='username' icon='fas fa-user'\n                                title={<Text id='users.username'>Brukernavn</Text>}\n                                help={<Text id='users.username-help'>Ditt brukernavn på The Musher</Text>}\n                                onInput={this.updateField} />\n\n                            <div class='row'>\n                                <div class='col-6'>\n                                    <Input saved={saved} user={user} field='firstname'\n                                        title={<Text id='users.firstname'>Fornavn</Text>}\n                                        help={<Text id='users.firstname-help'>Ditt fornavn</Text>}\n                                        onInput={this.updateField} />\n                                </div>\n                                <div class='col-6'>\n                                    <Input saved={saved} user={user} field='lastname'\n                                        title={<Text id='users.lastname'>Etternavn</Text>}\n                                        help={<Text id='users.lastname-help'>Ditt etternavn</Text>}\n                                        onInput={this.updateField} />\n                                </div>\n                            </div>\n\n                            <Input saved={saved} user={user} field='cellphone' icon='fas fa-mobile'\n                                title={<Text id='users.cellphone'>Mobil</Text>}\n                                help={<Text id='users.cellphone-help'>Ditt mobilnummer</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='url' icon='fas fa-link'\n                                title={<Text id='users.url'>Hjemmeside</Text>}\n                                help={<Text id='users.url-help'>Din hjemmeside</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='facebook' icon='fab fa-facebook-square'\n                                title={<Text id='users.facebook'>Facebook</Text>}\n                                help={<Text id='users.facebook-help'>Din Facebook profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='instagram' icon='fab fa-instagram'\n                                title={<Text id='users.instagram'>Instagram</Text>}\n                                help={<Text id='users.instagram-help'>Din Instagram profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='snapchat' icon='fab fa-snapchat'\n                                title={<Text id='users.snapchat'>Snapchat</Text>}\n                                help={<Text id='users.snapchat-help'>Din Snapchat profil</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} user={user} field='image' icon='fas fa-camera' type='image'\n                                stores={this.props.stores}\n                                title={<Text id='users.photos'>Bilder</Text>}\n                                help={<Text id='users.photos-help'>Bilder av deg.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n                        </div>                                                        \n\t\t\t\t\t</div>\n\n\t\t\t\t\t{insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n\t\t\t\t\t\t<Text id='users.saved'>Profilen er lagret.</Text>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UserEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}