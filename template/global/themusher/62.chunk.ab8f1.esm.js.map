{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/dog/dogs.js","webpack:///./components/form/files.js","webpack:///./routes/workouts/edit.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","placeholder","id","name","getPlaceholder","newPlaceholder","unique","Date","getTime","util","randomPassword","List","provided","snapshot","innerRef","children","className","class","droppableProps","style","isDraggingOver","borderStyle","width","Dog","removeThisPlaceholder","removePlaceholder","idx","list","dog","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","background","maxWidth","height","onClick","image","s3ThumbLink","ucfirst","shortname","filterby","get","Dogs","toggleDog","async","e","target","closest","dataset","dogId","parseInt","object","type","elementtype","field","updateField","isNew","showPositions","value","toJS","indexOf","action","splice","push","skipTimer","singleValue","setState","filterText","dndDogs","findAllDogsInTeams","dogStore","stores","dogs","currentTeam","selectedTeams","teams","currentTeamId","filter","team","some","r","map","addAllDogsInTeam","allDogsInTeam","dogFilter","allDogs","filterLeft","find","a","dogsRight","filterRight","dogsLeft","defaultDogsRight","n","Math","ceil","length","defaultDogsLeft","idxLeft","findIndex","idxRight","dogPositionUpdated","updateDogPositions","addPlaceholderLeft","addPlaceholderRight","clearAllDogs","resetDogPositions","toggleSearchField","showSearchField","getList","onDragEnd","result","source","destination","droppableId","items","startIndex","endIndex","Array","from","removed","reorder","index","droppableSource","droppableDestination","sourceClone","destClone","move","datatype","clearDogPositions","changeFilter","set","loadDog","getFilteredDogs","match","RegExp","getNestedValue","filteredDogs","load","query","deceased","addData","componentWillReceiveProps","nextProps","userStore","user","language","saved","title","icon","help","teamNames","findTeam","for","onInput","linkState","selected","fields","total","isArray","dogStatus","findDogstatus","status","dogPosition","findDogposition","position","dogHistoryStatuses","findHistoryStatuses","data-id","format","findHarness","harness","birth","age","gender","specialNeeds","v","isoDate","endDate","key","draggableId","Files","handleAddImage","file","files","uploadStatus","before","after","autoOpen","apiUrl","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","newWorkout","InputNew","workoutStore","updateObjectKeyValue","updateDuration","isUndefined","onInputDuration","decDuration","newValue","incDuration","setDateToNow","undefined","setTimeToNow","isoTime","setRightValue","rightValueReal","datalist","min","max","step","rightValue","displayValue","maxValue","secToHms","checkNested","yr","instant","details","date","air_temperature","wind_speed","windDirection","wind_from_direction","cloud_area_fraction","air_pressure_at_sea_level","relative_humidity","aria-describedby","el","hh","floor","mi","data-name","data-field","checked","rows","onKeyUp","resizeTextarea","onFocus","Input","workout","parts","split","isNaN","ss","handleImageErrored","onerror","setTimeout","src","removeImage","parentElement","removeMainImage","setValue","insertValue","asNumber","images","img","s3SmallLink","onError","data-value","data-type","data-elementtype","Mushers","toggleMusher","musherId","mushers","musher","firstname","lastname","email","Teams","toggleTeam","teamId","selectTeam","removeTeam","addTeam","setCurrentTeam","isDefined","highlight","isPrimary","isSecondary","hintTeam","role","Tracks","toggleFilter","showAll","toggleTrack","trackId","track","types","DAY_OF_WEEK","getDays","distanceKm","elevation","dayOfWeek","getDay","tracks","trackFilter","filteredTracks","hintTrack","Types","updateTextField","toggleType","typeId","raceStore","hasRaces","getSignupByUserEmail","lang","Intensities","intensities","intensity","hintIntensity","Equipments","toggleEquipment","equipmentId","equipments","equipment","RaceInProgress","raceInProgress","activeRace","race","WorkoutsEdit","loadAll","loadDogs","loadWorkout","loadRaceInProgress","workouts","createNew","skipUpdate","limit","sort","lastWorkout","fallbackTeam","duration","rest","rating","sledWeight","lastUsedTracks","w","d","isLoading","insertWorkout","response","insert","PubSub","publish","topics","STATUS_MESSAGE","message","error","resetDog","getInfo","route","data","fieldType","updateFieldValue","localObjectValue","parseFloat","doUpdateField","clearTimeout","updateTimer","totalDistance","maxSpeed","avgSpeed","ascent","decent","startLatlng","endLatlng","gpx","gpxInfo","updateObject","roundTo","speedmax","speedAvg","save","back","history","goBack","getYrWeather","firstPoint","getFirstPoint","midPoint","getMidPoint","weather","getWeather","lat","lon","altitude","weatherMid","yrValue","temperature","chooseSubmenu","submenu","menu","toggleAdminDebug","showAdminDebug","updateKeyValue","saveField","appState","viewmode","isAdmin","insertStatus","raceTeams","isStationary","data-menu","public","isLocked","minEpoch","startTime","maxEpoch","endTime","avgMovingSpeeds","avgGpsSpeed","avgGpsMovingSpeed","calculatedTotalDistance","calculatedAscend","calculatedDescend","descent","mapId","geojson","geoJSON","Images","addToImages","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","Object","keys","isImage","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax"],"mappings":"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","file":"62.chunk.ab8f1.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst placeholder = {\n    id: 0,\n    name: 'empty',\n};\n\nconst getPlaceholder = () => {\n    const newPlaceholder = { ...placeholder };\n    newPlaceholder.unique= `${new Date().getTime()}-${util.randomPassword()}`;\n    return newPlaceholder;\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    // padding: grid * 2,\n    // margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"#808080\" : \"\",\n    maxWidth: 92,\n    height: 100,\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    borderStyle: isDraggingOver ? \"dashed\" : \"\",\n    // background: isDraggingOver ? \"#a0a0a0\" : \"\",\n    // padding: grid,\n    width: 110,\n});\n\nclass List extends Component {\n  render() {\n    const { provided, snapshot, innerRef, children, className } = this.props;\n    return (\n        <div class={`h-100 border ${className}`} {...provided.droppableProps} ref={innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n        >\n            {children}\n        </div>\n    );\n  }\n}\n\n\nclass Dog extends Component {\n    removeThisPlaceholder = () => {\n        const { removePlaceholder = () => {}, idx, list } = this.props;\n        removePlaceholder({ idx, list });\n    }\n\n    render() {\n        const { provided, snapshot, innerRef, dog } = this.props;\n        return (\n            <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={innerRef}\n                class='mx-2 my-2 p-2'\n                style={getItemStyle(\n                    snapshot.isDragging,\n                    provided.draggableProps.style\n                )}\n            >\n                {dog.id === 0 ? (\n                    <>\n                        <div>\n                            <div class={`text-center border rounded-circle imageRounded text-muted pt-2`}>\n                                <span class='font-weight-lighter' style='font-size: 35px;'>&nbsp;</span>\n                            </div>\n                            <div class='text-center'>\n                                <button class='btn btn-sm btn-link float-right p-0' onClick={this.removeThisPlaceholder}>\n                                    <i class='fas fa-trash-alt' />\n                                </button>\n                                &nbsp;\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div>\n                            <div class={`text-center border rounded-circle imageRounded text-muted pt-2`} style={`${dog.image ? `background-image: url(\"${dog.image.s3ThumbLink}\");` : ''}`}>\n                                {/* {!dog.image && <i class='fas fa-dog' style='font-size: 20px;' />} */}\n                                {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                            </div>\n                            <div class='text-center'>\n                                <small>\n                                    {dog.shortname || dog.name}<br />\n                                </small>\n\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\n\nconst initialState = {\n    filterby: util.get('dogs-filter'),\n};\n\n@observer\nclass Dogs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dogsLeft: [],\n            dogsRight: [],\n            ...initialState,\n        };\n    }\n\n    toggleDog = async (e) => {\n        const { id } = e.target.closest('#dogContainer').dataset;\n        const dogId = parseInt(id, 10);\n        const { object, type, elementtype, field, updateField, isNew, showPositions } = this.props;\n        const value = toJS(object[field]) || [];\n        const idx = value.indexOf(dogId);\n        let action;\n        if (idx > -1) {\n            value.splice(idx, 1);\n            action = 'remove';\n        } else {\n            value.push(dogId);\n            action = 'add';\n        }\n        await updateField({ id: object.id, field, value, type, elementtype, isNew, skipTimer: true, singleValue: dogId });\n        this.setState({\n            filterText: '',\n        });\n        if (showPositions) {\n            this.dndDogs({ dogId, action });\n        }\n    }\n\n    findAllDogsInTeams = () => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object, currentTeam = {} } = this.props;\n        const selectedTeams = toJS(object.teams || []);\n        const currentTeamId = currentTeam.id;\n        const filter = (e) => {\n            if (e.team === currentTeamId || (e.teams && e.teams.indexOf(currentTeamId) > -1)) {\n                return true;\n            }\n            if (selectedTeams.indexOf(e.team) > -1) {\n                return true;\n            }\n            if (e.teams) {\n                return e.teams.some(r => selectedTeams.indexOf(r) >= 0);\n            }\n            return false;\n        };\n        const allDogsInTeam = dogs.filter(filter).map(e => e.id);\n        return allDogsInTeam;\n    }\n\n    addAllDogsInTeam = async () => {\n        const { object, type, elementtype, field, updateField, isNew } = this.props;\n        const allDogsInTeam = this.findAllDogsInTeams();\n        await updateField({ id: object.id, field, value: allDogsInTeam, type, elementtype, isNew, skipTimer: true });\n    }\n\n    // toggleFilter = () => {\n    //     const { showAll } = this.state;\n    //     this.setState({\n    //         showAll: showAll ? 0 : 1,\n    //     });\n    //     this.loadDog();\n    // }\n\n    // toggleSelectedFilter = () => {\n    //     const { showOnlySelected } = this.state;\n    //     this.setState({\n    //         showOnlySelected: showOnlySelected ? 0 : 1,\n    //     });\n    // }\n\n    dndDogs = ({ dogId, action }) => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object } = this.props;\n        const dogFilter = object.dogs ? (e) => object.dogs.indexOf(e.id) > -1 : () => false;\n        const allDogs = toJS(dogs);\n        const filterLeft = (dogId) => dogId === 0 || (allDogs.find(a => a.id === dogId) && object.dogsRight.indexOf(dogId) === -1);\n        const filterRight = (dogId) => dogId === 0 || (allDogs.find(a => a.id === dogId) && object.dogsLeft.indexOf(dogId) === -1);\n\n        const defaultDogsRight = allDogs.filter(dogFilter);\n        const n = Math.ceil(defaultDogsRight.length / 2);\n        const defaultDogsLeft = defaultDogsRight.splice(0, n);\n\n        let dogsLeft = [];\n        if (object.dogsLeft && object.dogsLeft.length > 0) {\n            dogsLeft = object.dogsLeft.filter(filterLeft)\n                .map((dogId) => {\n                    const dog = allDogs.find(e => e.id === dogId) || getPlaceholder();\n                    // console.log('dogId', dogId, dog);\n                    return dog;\n                });\n        }\n\n        let dogsRight = [];\n        if (object.dogsRight && object.dogsRight.length > 0) {\n            dogsRight = object.dogsRight.filter(filterRight)\n                .map((dogId) => {\n                    const dog = allDogs.find(e => e.id === dogId) || getPlaceholder();\n                    // console.log('dogId', dogId, dog);\n                    return dog;\n                });\n        }\n\n\n        if (action === 'add') {\n            const dog = dogs.find(e => e.id === dogId);\n            if (dog) {\n                if (dogsLeft.length > dogsRight.length) {\n                    dogsRight.push(dog);\n                } else {\n                    dogsLeft.push(dog);\n                }\n            }\n        }\n        if (action === 'remove') {\n            const idxLeft = dogsLeft.findIndex(e => e.id === dogId);\n            if (idxLeft > -1) {\n                dogsLeft.splice(idxLeft, 1);\n            }\n            const idxRight = dogsRight.findIndex(e => e.id === dogId);\n            if (idxRight > -1) {\n                dogsRight.splice(idxRight, 1);\n            }\n        }\n        // I owe Mariska Kleintjens a beer for this one: \n        if (dogsLeft.length === 0 && dogsRight.length === 0) {\n            dogsLeft = defaultDogsLeft;\n            dogsRight = defaultDogsRight;\n        }\n        if (action) {\n            this.setState({\n                dogsLeft,\n                dogsRight,\n                dogPositionUpdated: true,\n            }, () => this.updateDogPositions());\n            \n        } else {\n            this.setState({\n                dogsLeft,\n                dogsRight,\n            });\n        }\n    }\n\n    addPlaceholderLeft = () => {\n        const { dogsLeft = [] } = this.state;\n        dogsLeft.push(getPlaceholder());\n        this.setState({\n            dogsLeft,\n            dogPositionUpdated: true,\n        });\n    }\n\n    addPlaceholderRight = () => {\n        const { dogsRight = [] } = this.state;\n        dogsRight.push(getPlaceholder());\n        this.setState({\n            dogsRight,\n            dogPositionUpdated: true,\n        });\n    }\n\n    removePlaceholder = ({ idx, list }) => {\n        if (list === 'dogsLeft') {\n            const { dogsLeft = [] } = this.state;\n            dogsLeft.splice(idx, 1);\n            this.setState({\n                dogsLeft,\n                dogPositionUpdated: true,\n            });\n        }\n        if (list === 'dogsRight') {\n            const { dogsRight = [] } = this.state;\n            dogsRight.splice(idx, 1);\n            this.setState({\n                dogsRight,\n                dogPositionUpdated: true,\n            });\n        }\n    }\n\n    async loadDog(props = this.props) {\n        const { showPositions } = this.props;\n\t\tconst { dogStore } = props.stores;\n        await dogStore.load({ query: { deceased: 0 }, addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n\n        if (showPositions) {\n            this.dndDogs({});\n        }\n        this.getFilteredDogs();\n    }\n\n    clearAllDogs = async () => {\n        const { object, type, elementtype, field, updateField, isNew } = this.props;\n        await updateField({ id: object.id, field, value: [], type, elementtype, isNew, skipTimer: true });\n        this.resetDogPositions();\n    }\n    \n    toggleSearchField = () => {\n        const { showSearchField } = this.state;\n        this.setState({\n            showSearchField: showSearchField ? null : 1,\n        });\n    }\n\n    getList = id => this.state[id];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n            this.setState({\n                [source.droppableId]: items,\n                dogPositionUpdated: true,\n            });\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                dogsLeft: result.dogsLeft,\n                dogsRight: result.dogsRight,\n                dogPositionUpdated: true,\n            });\n        }\n    }\n\n    updateDogPositions = async () => {\n        const { dogsLeft = [], dogsRight = [] } = this.state;\n        const { object, updateField, isNew } = this.props;\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft.map(e => e.id), isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight.map(e => e.id), isNew, datatype: 'array' });\n        this.setState({ dogPositionUpdated: false });\n    }\n\n    resetDogPositions = async () => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object, updateField, isNew } = this.props;\n        const dogFilter = (e) => object.dogs.indexOf(e.id) > -1;\n        const allDogs = toJS(dogs);\n\n        const dogsRight = allDogs.filter(dogFilter);\n        const n = Math.ceil(dogsRight.length / 2);\n        const dogsLeft = dogsRight.splice(0, n);\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft.map(e => e.id), isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight.map(e => e.id), isNew, datatype: 'array' });\n        this.setState({\n            dogsLeft,\n            dogsRight,\n            dogPositionUpdated: false,\n        });\n    }\n\n    clearDogPositions = async () => {\n        const { object, updateField, isNew } = this.props;\n        const dogsRight = [];\n        const dogsLeft = [];\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft, isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight, isNew, datatype: 'array' });\n        this.setState({\n            dogsLeft,\n            dogsRight,\n            dogPositionUpdated: false,\n        });\n    }\n\n    changeFilter = (e) => {\n\t\tconst value = e.target.value;\n\t\tthis.setState({\n\t\t\tfilterby: value,\n\t\t});\n        util.set('dogs-filter', value);\n        this.loadDog();\n\t}\n\n    getFilteredDogs = (props = this.props) => {\n        const { filterby, filterText } = this.state;\n        const { object, filter = () => true } = props;\n        const { dogStore } = this.props.stores;\n\t\tconst { dogs = [] } = dogStore;\n\n        let dogFilter = filter;\n        if (object.dogs) {\n            switch (filterby) {\n                case 'all':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = () => true;\n                    }\n                    break;\n                case 'onlySelected':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = (e) => object.dogs.indexOf(e.id) > -1;\n                    }\n                    break;\n                case 'onlyTeam':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = (e) => object.team === e.team || object.dogs.indexOf(e.id) > -1;\n                    }\n                    break;        \n                case 'leadOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.lead.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'pointOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.point.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'teamOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.team.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'wheelOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.wheel.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n            }\n        }\n        let filteredDogs = dogs.filter(dogFilter);\n        this.setState({\n            filteredDogs,\n        })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.filter !== this.props.filter) {\n            this.getFilteredDogs(nextProps);\n        }\n    }\n\n    componentDidMount() {\n        this.loadDog();\n    }\n\n    render() {\n        const { filterby, filterText, showSearchField, dogsLeft = [], dogsRight = [], dogPositionUpdated, filteredDogs = [] } = this.state;\n        const { userStore, dogStore } = this.props.stores;\n\t\tconst { dogs = [] } = dogStore;\n        const { isAdmin, user } = userStore;\n        const { language = 'en' } = user;\n\n        const { saved = {}, object, field, title, icon, help, showPositions = false, currentTeam = {} } = this.props;\n        const value = toJS(object[field]) || [];\n\n        const allDogsInTeam = this.findAllDogsInTeams();\n        const teamNames = object.teams ? object.teams.map(e => userStore.findTeam(e)) : [];\n\n        return (\n            <div class={`form-group  mb-5 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <span class='float-right' onClick={this.toggleSearchField}>\n                    <i class='fas fa-search' />\n                </span>\n                <button class='btn btn-sm btn-link float-right mr-5' onClick={this.clearAllDogs}>\n                    <i class='fas fa-eraser' /> <Text id='dog.dogs.remove-all-dogs'>Fjern alle hundene</Text>\n                </button>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                <div class='container-fluid px-0'>\n                    {showSearchField && <div class='row'>\n                        <div class='col-12'>\n                            <Localizer>\n                                <input\n                                    class='form-control form-control-sm'\n                                    type='text'\n                                    placeholder={<Text id='dog.dogs.search-for-dogs'>Søk etter hund</Text>}\n                                    value={filterText}\n                                    onInput={linkState(this, 'filterText')}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>}\n                    <div class='row'>\n                        <div class='col-12'>\n                            <div class='form-row align-items-center'>\n                                <div class='col-auto my-2 mx-auto'>\n                                    <select class='custom-select'\n                                        style='background-color: inherit; border: none; padding-top: 0; padding-bottom: 0; height: 1.4em; font-size: 0.8em;'\n                                        onInput={this.changeFilter}\n                                    >\n                                        <option value='' selected={!filterby}>-- <Text id='dog.dogs.choose-filter'>Choose filter</Text> ---</option>\n                                        <option value='all' selected={filterby === 'all'}><Text id='dog.dogs.show-all'>Vis alle</Text></option>\n                                        <option value='onlySelected' selected={filterby === 'onlySelected'}><Text id='dog.dogs.show-only-selected'>Vis kun valgte</Text></option>\n                                        <option value='onlyTeam' selected={filterby === 'onlyTeam'}><Text id='dog.dogs.show-only-team-dogs'>Vis kun hundene i teamet</Text></option>\n                                        <option value='leadOnly' selected={filterby === 'leadOnly'}><Text id='dog.dogs.show-lead-dogs-only'>Vis kun lederhunder</Text></option>\n                                        <option value='pointOnly' selected={filterby === 'pointOnly'}><Text id='dog.dogs.show-point-dogs-only'>Vis kun pointhunder</Text></option>\n                                        <option value='teamOnly' selected={filterby === 'teamOnly'}><Text id='dog.dogs.show-team-dogs-only'>Vis kun teamhunder</Text></option>\n                                        <option value='wheelOnly' selected={filterby === 'wheelOnly'}><Text id='dog.dogs.show-wheel-dogs-only'>Vis kun wheelhunder</Text></option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='row'>\n                        {allDogsInTeam.length > 0 && <>\n                            <button class='btn btn-primary btn-block'\n                                onClick={this.addAllDogsInTeam}\n                            >\n                               <i class='fas fa-plus mr-2' /> <Text id='dog.dogs.add-all-in-team' fields={{ total: allDogsInTeam.length }}>Add all dogs in team</Text>{currentTeam.name ? `: ${currentTeam.name}` : ''}\n                               {teamNames && teamNames.length > 0 && <span class='font-weight-lighter'>\n                                    , {teamNames.map((name, idx) => <>{idx > 0 ? ', ' : ''}{name}</>)}\n                                </span>}\n                            </button>\n                        </>}\n\n                        {util.isArray(dogs) && filteredDogs.map(dog => {\n                            const dogStatus = userStore.findDogstatus({ status: dog.status, language });\n                            const dogPosition = userStore.findDogposition({ position: dog.position, language });\n                            const dogHistoryStatuses = dogStore.findHistoryStatuses(dog.id);\n                            return (\n                                <div class='col-6 col-sm-6 col-md-6 col-lg-6 mb-1'>\n                                    <div class={`border rounded px-3 pt-2 pb-1 ${value.indexOf(dog.id) > -1 ? 'bg-success' : ''} position-relative`}\n                                        onClick={this.toggleDog}\n                                        id='dogContainer'\n                                        data-id={dog.id}\n                                        style='padding: .3rem !important; line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                    >\n                                        {dogPosition && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-${dogPosition.class || 'primary'} mr-3`}>{dogPosition.icon && <i class={dogPosition.icon} />} {dogPosition.name}</span>\n                                        </small>}\n\n                                        {filterby === 'leadOnly' && util.getNestedValue(dog, 'positions.lead.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-lead'>Lead</Text>: {util.format(util.getNestedValue(dog, 'positions.lead.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'pointOnly' && util.getNestedValue(dog, 'positions.point.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-point'>Point</Text>: {util.format(util.getNestedValue(dog, 'positions.point.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'teamOnly' && util.getNestedValue(dog, 'positions.team.distanceKm')> 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-team'>Team</Text>: {util.format(util.getNestedValue(dog, 'positions.team.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'wheelOnly' && util.getNestedValue(dog, 'positions.wheel.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-wheel'>Wheel</Text>: {util.format(util.getNestedValue(dog, 'positions.wheel.distanceKm'), 0)}km</span>\n                                        </small>}\n\n                                        <div class='d-flex'>\n                                            <div class={`text-center border rounded-circle imageRounded imageRoundedSmall text-muted pt-2`} style={`${dog.image ? `background-image: url(\"${dog.image.s3ThumbLink}\");` : ''}`}>\n                                                {/* {!dog.image && <i class='fas fa-dog' style='font-size: 20px;' />} */}\n                                                {!dog.image && <span class='font-weight-lighter' style='font-size: 20px;'>{util.ucfirst(dog.name, true)}</span>}\n                                            </div>\n                                            <div class='flex-grow-1 pl-2 pr-1'\n                                                style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 0.9em;`}\n                                            >\n                                                <small>\n                                                    <small class='float-right'>\n                                                        {dog.birth && <span class='mr-1'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                                    </small>\n                                                    {dog.shortname || dog.name}<br />\n                                                    <div style='line-height: 0.8em;'><small>{userStore.findTeam(dog.team)}</small></div>\n                                                </small>\n                                                <small class='float-right'>\n                                                    {dogStatus && dogStatus.id && <span class={`badge badge-${dogStatus.class} mr-2 font-weight-light`}>{dogStatus.icon && <i class={dogStatus.icon} />} {dogStatus.name}</span>}\n                                                    {dog.specialNeeds && <span class={`badge badge-warning mr-2 font-weight-light`}><i class='fas fa-exclamation-triangle' /> {dog.specialNeeds}</span>}\n                                                    {dogHistoryStatuses && dogHistoryStatuses.map(v => (\n                                                        <span class={`badge badge-warning mr-2`} title={util.isoDate(v.endDate, false, false, true)}>{v.title}</span>\n                                                    ))}\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dog.dogs.saved-changes'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n\n\n                {showPositions && <>\n                    <div class='container-fluid px-0 clearfix'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='dog.dogs.dogs-positions'>Posisjoner i spannet</Text></h5>\n                            </div>\n                        </div>\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <div class='row'>\n                                <div class='col-6 pr-0' style='min-height: 100px;'>\n                                    <Droppable droppableId=\"dogsLeft\">\n                                        {(provided, snapshot) => (\n                                            <List provided={provided} snapshot={snapshot} innerRef={provided.innerRef} className='ml-auto'>\n                                                {dogsLeft && dogsLeft.map((dog, idx) =>\n                                                    <Draggable key={`${dog.id}-${dog.unique}`} draggableId={`dragId-${dog.id}-${dog.unique}`} index={idx}>\n                                                        {provided => (\n                                                            <Dog provided={provided} snapshot={snapshot} innerRef={provided.innerRef} dog={dog} removePlaceholder={this.removePlaceholder} idx={idx} list='dogsLeft' />\n                                                        )}\n                                                    </Draggable>\n                                                )}\n                                                {provided.placeholder}\n                                            </List>\n                                        )}\n                                    </Droppable>\n                                </div>\n                                <div class='col-6 pl-0' style='min-height: 100px;'>\n                                    <Droppable droppableId=\"dogsRight\">\n                                        {(provided, snapshot) => (\n                                            <List provided={provided} snapshot={snapshot} innerRef={provided.innerRef} className='mr-auto'>\n                                                {dogsRight && dogsRight.map((dog, idx) =>\n                                                    <Draggable key={`${dog.id}-${dog.unique}`} draggableId={`dragId-${dog.id}-${dog.unique}`} index={idx}>\n                                                        {provided => (\n                                                            <Dog provided={provided} snapshot={snapshot} innerRef={provided.innerRef} dog={dog} removePlaceholder={this.removePlaceholder} idx={idx} list='dogsRight' />\n                                                        )}\n                                                    </Draggable>\n                                                )}\n                                                {provided.placeholder}\n                                            </List>\n                                        )}\n                                    </Droppable>\n                                </div>\n                            </div>\n                        </DragDropContext>\n                        <div class='row mb-3 mt-2'>\n                            <div class='col-6 pr-0'>\n                                <button class='btn btn-sm btn-outline-secondary' onClick={this.addPlaceholderLeft}>\n                                    <i class='fas fa-plus-circle' /> <Text id='dog.dogs.addplaceholder'>Add placeholder</Text>\n                                </button>\n                            </div>\n                            <div class='col-6 pl-0'>\n                                <button class='float-right btn btn-sm btn-outline-secondary' onClick={this.addPlaceholderRight}>\n                                    <i class='fas fa-plus-circle' /> <Text id='dog.dogs.addplaceholder'>Add placeholder</Text>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='container-fluid px-0'>\n                        <div class='row'>\n                            <div class='col-6'>\n                                <button class={`btn btn-sm btn-${dogPositionUpdated ? 'primary' : 'secondary'}`} onClick={this.updateDogPositions}>\n                                    <i class='fas fa-save' /> <Text id='dog.dogs.saveDogPositions'>Save dog positions</Text>\n                                </button>\n                            </div>\n                            <div class='col-6'>\n                                <button class={`float-right btn btn-sm btn-warning`} onClick={this.resetDogPositions}>\n                                    <i class='fas fa-sync' /> <Text id='dog.dogs.resetDogPositions'>Reset dog positions</Text>\n                                </button>\n                            </div>\n                        </div>\n                        <div class='row mt-2'>\n                            <div class='col-6'>\n                                &nbsp;\n                            </div>\n                            <div class='col-6'>\n                                <button class={`float-right btn btn-sm btn-link`} onClick={this.clearDogPositions}>\n                                    <i class='fas fa-eraser' /> <Text id='dog.dogs.clearDogPositions'>Clear dog positions</Text>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n\n            </div>\n        );\n    }\n}\n\nexport default Dogs;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport PubSub, { topics } from '../../lib/pubsub';\n// import DatePicker from '../../components/form/datePicker';\n// import TimePicker from '../../components/form/timePicker';\nimport Images from '../../components/form/images';\nimport Dogs from '../../components/dog/dogs';\nimport Map from '../../components/map';\nimport Files from '../../components/form/files';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nconst initialState = {\n    newWorkout: {},\n};\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        workoutStore.updateObjectKeyValue('newWorkout', `updated-${field}`, new Date().getTime());\n    }\n\n    updateDuration = (name, value) => {\n        const { field } = this.props;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', name, value);\n        const { newWorkout } = workoutStore;\n\n        if (util.isUndefined(newWorkout[`${field}-hours`])) {\n            // const hh = Math.floor(newWorkout[field] / 3600);\n            const hh = 0;\n            workoutStore.updateObjectKeyValue('newWorkout', `${field}-hours`, hh);\n        }\n        if (util.isUndefined(newWorkout[`${field}-minutes`])) {\n            // const mi = Math.floor(newWorkout[field] % 3600 / 60);\n            const mi = 0;\n            workoutStore.updateObjectKeyValue('newWorkout', `${field}-minutes`, mi);\n        }\n        // console.log({ newWorkout, field, name, value });\n        // console.log({ newWorkout, field, name, value });\n        const hours = newWorkout[`${field}-hours`] || 0;\n        const minutes = newWorkout[`${field}-minutes`] || 0;\n        const combinedValue = (hours * 3600) + (minutes * 60);\n        workoutStore.updateObjectKeyValue('newWorkout', field, combinedValue);\n        workoutStore.updateObjectKeyValue('newWorkout', `updated-${field}`, new Date().getTime());\n    }\n\n    onInputDuration = (e) => {\n        const value = parseInt(e.target.value, 10);\n        const name = e.target.name;\n        this.updateDuration(name, value);\n    }\n\n    decDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        const currentValue = newWorkout[name] || 0\n        const newValue = currentValue - 1;\n        const value = newValue < 0 ? 0 : newValue;\n        // console.log({ name, currentValue, newValue, value });\n        this.updateDuration(name, value);\n    }\n\n    incDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        const currentValue = newWorkout[name] || 0\n        const newValue = currentValue + 1;\n        const value = newValue < 0 ? 0 : newValue;\n        this.updateDuration(name, value);\n    }\n\n    // selectDate = (value) => {\n    //     const { field } = this.props;\n    //     const { workoutStore } = this.props.stores;\n    //     workoutStore.updateObjectKeyValue('newWorkout', field, util.isoDate(value));\n    // }\n\n    setDateToNow = () => {\n        const { field } = this.props;\n        const value = util.isoDate(undefined, false, false, true);\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n    }\n\n    setTimeToNow = () => {\n        const { field } = this.props;\n        const value = util.isoTime();\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n    }\n\n    setRightValue = () => {\n        const { field, rightValueReal } = this.props;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, rightValueReal);\n    }\n\n    render() {\n        const { type, datalist = [], min, max, step, elementtype, field, title, icon, help, placeholder, rightValue, updateField } = this.props;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        let maxValue = max;\n        if (type === 'date') {\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        let displayValue;\n        if (field === 'duration' || field === 'rest') {\n            displayValue = util.secToHms(newWorkout[field], true);\n        }\n        if (field === 'weather' && util.checkNested(newWorkout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(newWorkout.yr[0].instant.details);\n            const yrDate = util.isoDate(newWorkout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(newWorkout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n            }                        \n        }\n        if (field === 'temperature' && util.checkNested(newWorkout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(newWorkout.yr[0].instant.details);\n            const yrDate = util.isoDate(newWorkout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(newWorkout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C`;\n            }                        \n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        onInput={this.onInput}\n                        value={newWorkout[field]}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n        if (type === 'duration') {\n            const hh = Math.floor(newWorkout[field] / 3600);\n            const mi = Math.floor(newWorkout[field] % 3600 / 60);\n            // const ss = Math.floor(newWorkout[field] % 3600 % 60);\n\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <span class='float-right'>\n                        <strong>{displayValue}</strong>\n                    </span>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='form-row'>\n                        <div class='input-group col-5 offset-1 col-xl-3 offset-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-hours`}\n                                value={hh}\n                                type='number'\n                                min='0'\n                                max='24'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        <div class='input-group col-5 col-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-minutes`}\n                                value={mi}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                    </div>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={newWorkout[field] === 1 ? 0 : 1}\n                            data-field={field}\n                            onInput={this.onInput}\n                            checked={newWorkout[field] == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n\n        if (type === 'textarea') {\n            return (<> \n                <div class='form-group mb-1 pb-1 border-bottom'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea\n                        class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        min={min}\n                        max={maxValue}\n                        step={step}\n                        rows={5}\n                        onInput={this.onInput}\n                        value={newWorkout[field]}\n                        placeholder={placeholder}\n                        onKeyUp={mu.resizeTextarea}\n                        onFocus={mu.resizeTextarea}\n                    />\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            </>);\n        }\n\n        return (\n            <div class='form-group mb-1 pb-1 border-bottom'>\n                {type === 'date' && <span class='float-right text-muted font-weight-lighter' onClick={this.setDateToNow}>I dag <i class='far fa-check-circle' /></span>}\n                {type === 'time' && <span class='float-right text-muted font-weight-lighter' onClick={this.setTimeToNow}>Nå <i class='far fa-check-circle' /></span>}\n                {rightValue && <span class='float-right text-muted font-weight-lighter' onClick={this.setRightValue}>{rightValue}</span>}\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                {displayValue && <span class='float-right'>\n                    <strong>{displayValue}</strong>\n                </span>}\n                <input\n                    type={type}\n                    class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''}`}\n                    id={`${field}Input`}\n                    aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    onInput={this.onInput}\n                    value={newWorkout[field]}\n                    placeholder={placeholder}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass Input extends Component {\n    updateDuration = (name, value) => {\n        const { field, updateField, workout } = this.props;\n\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            if (isNaN(value)) {\n                hh = 0;\n            } else {\n                hh = value;\n            }\n        }\n        if (name.match(/-minutes/)) {\n            if (isNaN(value)) {\n                mi = 0;\n            } else {\n                mi = value;\n            }\n        }\n        if (name.match(/-seconds/)) {\n            if (isNaN(value)) {\n                ss = 0;\n            } else {\n                ss = value;\n            }\n        }\n        const combinedValue = (hh * 3600) + (mi * 60) + ss;\n        updateField({ id: workout.id, field, value: combinedValue });\n\n    }\n\n    onInputDuration = (e) => {\n        const value = parseInt(e.target.value, 10);\n        const name = e.target.name;\n        this.updateDuration(name, value);\n    }\n\n    decDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { field, workout } = this.props;\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            const value = hh - 1 < 0 ? 0 : hh - 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-minutes/)) {\n            const value = mi - 1 < 0 ? 0 : mi - 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-seconds/)) {\n            const value = ss - 1 < 0 ? 0 : ss - 1;\n            this.updateDuration(name, value);\n        }\n    }\n\n    incDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { field, workout } = this.props;\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            const value = hh + 1 < 0 ? 0 : hh + 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-minutes/)) {\n            const value = mi + 1 < 0 ? 0 : mi + 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-seconds/)) {\n            const value = ss + 1 < 0 ? 0 : ss + 1;\n            this.updateDuration(name, value);\n        }\n\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { workoutStore } = this.props.stores;\n        const { workout } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        workoutStore.removeImage({\n            id: workout.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { workout, field, updateField } = this.props;\n        updateField({ id: workout.id, field, value: {} });\n    }\n\n    setDateToNow = () => {\n        const { field, updateField, workout } = this.props;\n        const value = util.isoDate(undefined, false, false, true);\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        updateField({ id: workout.id, field, value });\n    }\n\n    setTimeToNow = () => {\n        const { field, updateField, workout } = this.props;\n        const value = util.isoTime();\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        updateField({ id: workout.id, field, value });\n    }\n\n    setValue = (e) => {\n        const value = e.target.parentElement.dataset.value || e.target.dataset.value;\n        if (value) {\n            const { field, updateField, workout } = this.props;\n            // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n            updateField({ id: workout.id, field, value });\n        }\n    }\n\n    setRightValue = () => {\n        const { field, updateField, workout, rightValueReal } = this.props;\n        updateField({ id: workout.id, field, value: rightValueReal });\n    }\n\n    render() {\n        const { saved, workout, type, datalist = [], min, max, step, elementtype, field, title, icon, help, onInput, updateField, rightValue } = this.props;\n        let value = toJS(workout[field]);\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(workout[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        // if (type === 'time') {\n        //     if (value) {\n        //         value = util.isoTime(workout[field]);\n        //     }\n        // }\n        let displayValue;\n        let insertValue;\n        if (field === 'duration' || field === 'rest') {\n            displayValue = util.secToHms(value, true);\n        }\n        if (field === 'weather' && util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(workout.yr[0].instant.details);\n            const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(workout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                insertValue = displayValue;\n            }                        \n        }\n        if (field === 'temperature' && util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(workout.yr[0].instant.details);\n            const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(workout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C`;\n                insertValue = util.asNumber(yr.air_temperature);\n            }                        \n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={workout} field={field} updateField={updateField} />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {/* {workout.image && workout.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={workout.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={workout.image.name}\n                                ><i class='fas fa-trash' /> Remove</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>} */}\n                            {workout.images && workout.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Remove</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={workout} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'>Endringene er lagret</div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={workout.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'duration') {\n            const hh = Math.floor(workout[field] / 3600);\n            const mi = Math.floor(workout[field] % 3600 / 60);\n            const ss = Math.floor(workout[field] % 3600 % 60);\n\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <span class='float-right'>\n                        <strong onClick={this.setValue} data-value={insertValue}>{displayValue}</strong>\n                    </span>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='form-row'>\n                        <div class='input-group col-5 offset-1 col-xl-3 offset-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-hours`}\n                                value={hh}\n                                type='number'\n                                min='0'\n                                max='24'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        <div class='input-group col-5 col-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-minutes`}\n                                value={mi}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        {/* <div class='form-group col-3'>\n                            <input class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-seconds`}\n                                value={ss}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                        </div> */}\n                    </div>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={value === 1 ? 0 : 1}\n                            data-id={workout.id}\n                            data-field={field}\n                            onInput={onInput}\n                            checked={value == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        if (type === 'textarea') {\n            return (<> \n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea\n                        class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''} ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        min={min}\n                        max={maxValue}\n                        step={step}\n                        rows={5}\n                        value={value}\n                        data-id={workout.id}\n                        data-field={field}\n                        data-type={type}\n                        data-elementtype={elementtype}\n                        onInput={onInput}\n                        onKeyUp={mu.resizeTextarea}\n                        onFocus={mu.resizeTextarea}\n                    />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            </>);\n        }\n\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                {type === 'date' && <span class='float-right text-muted font-weight-lighter' onClick={this.setDateToNow}>I dag <i class='far fa-check-circle' /></span>}\n                {type === 'time' && <span class='float-right text-muted font-weight-lighter' onClick={this.setTimeToNow}>Nå <i class='far fa-check-circle' /></span>}\n                {rightValue && <span class='float-right text-muted font-weight-lighter' onClick={this.setRightValue}>{rightValue}</span>}\n\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                {displayValue && <span class='float-right'>\n                    <strong onClick={this.setValue} data-value={insertValue}>{displayValue}</strong>\n                </span>}\n                <input type={type}\n                    class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''} ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}\n                    id={`${field}Input`}\n                    aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={workout.id}\n                    data-field={field}\n                    data-type={type}\n                    data-elementtype={elementtype}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass Mushers extends Component {\n    toggleMusher(musherId) {\n        const { workout, type, elementtype, field, updateField, isNew } = this.props;\n        const value = toJS(workout[field]) || [];\n        const idx = value.indexOf(musherId);\n        if (idx > -1) {\n            value.splice(idx, 1);\n        } else {\n            value.push(musherId);\n        }\n        updateField({ id: workout.id, field, value, type, elementtype, isNew} );\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { mushers } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]) || [];\n        // console.log('Dogs.render: type, elementType, value:', type, elementtype, value);\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-column pb-2 px-1'\n                            >\n                                {mushers && mushers.map((musher, idx) => (\n                                    <div class='col mb-2 px-1'\n                                        ref={value.indexOf(musher.id) > -1 ? c => this.container = c : null}\n                                    >\n                                        <button\n                                            class={`btn btn-block \n                                                rounded-lg\n                                                btn${value.indexOf(musher.id) > -1 ? '' : '-outline'}-success\n                                                text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleMusher(musher.id)}\n                                        >\n                                            <i class='fas fa-user mr-2' />\n                                            {musher.firstname ? <>\n                                                {musher.firstname} {musher.lastname}\n                                            </> : <>\n                                                {musher.email}\n                                            </>}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleTeam(teamId) {\n        const { dogStore, workoutStore } = this.props.stores;\n        const { workout, type, field, updateField, isNew, selectTeam } = this.props;\n        let value = toJS(workout[field]);\n\n        if (value === teamId) {\n            value = null;\n        } else {\n            value = teamId;\n        }\n        if (value === null) {\n            updateField({ id: workout.id, field, value, type, isNew });\n        } else if (workout.teams && workout.teams.indexOf(value) > -1) {\n            workoutStore.removeTeam({ id: workout.id, team: value });\n        } else if (workout.team) {\n            workoutStore.addTeam({ id: workout.id, team: value });\n        } else {\n            dogStore.setCurrentTeam(value);\n\t\t\tworkoutStore.setCurrentTeam(value);\n            updateField({ id: workout.id, field, value, type, isNew });\n            if (util.isDefined(selectTeam)) {\n                selectTeam(teamId);\n            }\n        }        \n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]) || [];\n        const { highlight } = this.props;\n        // console.log('Dogs.render: type, elementType, value:', type, elementtype, value);\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = workout && util.isArray(workout.teams) && workout.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block \n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleTeam(team.id)}\n                                            >\n                                                {workout.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n                                                \n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n                                                    </>}\n                                                </>}\n                                                \n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Tracks extends Component {\n    toggleTrack(trackId, track) {\n        const { showAll } = this.state;\n        const { workout = {}, type, field, updateField, isNew } = this.props;\n        const { userStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n\n        const DAY_OF_WEEK = mu.getDays(language);\n\n        let value = toJS(workout[field]);\n        if (value === trackId) {\n            value = null;\n        } else {\n            value = trackId;\n        }\n        const skipTimer = true;\n        updateField({ id: workout.id, field, value, type, isNew, skipTimer });\n        if (!workout.distanceKm) {\n            updateField({ id: workout.id, field: 'distanceKm', value: track.distanceKm, type: 'number', isNew, skipTimer });\n        }\n        if (!workout.elevation) {\n            updateField({ id: workout.id, field: 'elevation', value: track.elevation, type: 'number', isNew, skipTimer });\n        }\n        if (!workout.name) {\n            const date = workout.date ? new Date(workout.date) : new Date();\n            const dayOfWeek = DAY_OF_WEEK[date.getDay()];\n            const type = types.find(e => e.id === workout.type);\n            updateField({\n                id: workout.id,\n                field: 'name',\n                value: `${track.name}: ${dayOfWeek}${type ? ` ${type.name}` : 'stur'}`,\n                type: 'string',\n                isNew,\n                skipTimer,\n            });\n        }\n        this.setState({\n            filterText: '',\n        });\n        if (showAll) {            \n            this.toggleFilter();\n        }\n    }\n\n    toggleFilter = () => {\n        const { showAll } = this.state;\n        this.setState({\n            showAll: showAll ? 0 : 1,\n        });\n    }\n\n    toggleSearchField = () => {\n        const { showSearchField } = this.state;\n        this.setState({\n            showSearchField: showSearchField ? null : 1,\n        });\n    }\n\n    render() {\n        const { showAll, filterText, showSearchField } = this.state;\n        const { userStore } = this.props.stores;\n        const { tracks } = userStore;\n        const { saved, workout, field, title, icon, help, filter = () => true } = this.props;\n        const value = toJS(workout[field]);\n        let trackFilter = showAll ? () => true : filter;\n        if (filterText) {\n            trackFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || workout.track === e.id;\n        }\n        const filteredTracks = tracks.filter(trackFilter);\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <span class='float-right' onClick={this.toggleSearchField}><i class='fas fa-search' /></span>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    {showSearchField && <div class='row'>\n                        <div class='col-12'>\n                            <input class='form-control form-control-sm' type='text' placeholder='Søk etter runder' value={filterText} onInput={linkState(this, 'filterText')} />\n                        </div>\n                    </div>}\n                    <div class='row'>\n                        {filteredTracks && filteredTracks.map(track => (\n                            <div class='col-6 col-sm-6 col-md-6 col-lg-6 mb-2'>\n                                <div class={`border position-relative rounded p-2 pt-3 pb-1 ${value === track.id ? 'bg-success' : ''}`}\n                                    onClick={() => this.toggleTrack(track.id, track)}\n                                    style='line-height: 0.9em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small class='float-right position-absolute' style='top: 0; right: 5px;'>\n                                        <small>\n                                            <i class='fas fa-road' /> {util.format(track.distanceKm, 1)} km\n                                            <i class='fas fa-mountain ml-2' /> {util.format(track.elevation, 0)} m\n                                        </small>\n                                    </small>\n                                    {/* <div style='overflow: hidden; white-space: nowrap;'> */}\n                                    <div style='overflow: hidden;'>\n                                        {workout.hintTrack === track.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                        <small>\n                                            <i class='fas fa-map-marked mr-2' />\n                                            {track.name}\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div class='row'>\n                        <div class='col-12 text-right'>\n                            {showAll ?\n                                <button class='btn btn-sm btn-link' onClick={this.toggleFilter}><Text id='workouts.show-last-used-tracks'>Vis kun de sist brukte rundene</Text></button> :\n                                <button class='btn btn-sm btn-link' onClick={this.toggleFilter}><Text id='workouts.show-all-tracks'>Vis alle rundene</Text></button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Types extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    updateTextField = (e) => {\n        const { type, updateField, isNew } = this.props;\n        const { id, field } = e.target.dataset;\n        const value = e.target.value;\n        updateField({ id: parseInt(id, 10), field, value, type, isNew });\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore, raceStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help, isNew } = this.props;\n        const value = toJS(workout[field]);\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const hasRaces = raceInProgress.length > 0;\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {types && types.map((type, idx) => (\n                                    <div class='col mb-0 px-0'\n                                        ref={value === type.id ? c => this.container = c : null}\n                                    >\n                                        <button\n                                            class={`btn btn-block \n        \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === types.length ? 'rounded-pill-right': '')}                                    \n                                                btn${value === type.id ? '' : '-outline'}-success\n                                                text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleType(type.id)}\n                                        >\n                                            {type.icon && <i class={type.icon} />} {language && type.lang && type.lang[language] ? type.lang[language] : type.name}\n\n                                            {hasRaces && type.id === 2 && <>\n                                                {value === type.id ? <>\n                                                    <i class='fas fa-check float-right' />\n                                                </> : <>\n                                                    <div class='spinner-grow text-warning float-right' role='status'>\n                                                        <span class='sr-only'>Loading...</span>\n                                                    </div>\n                                                    <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                </>}\n                                            </>}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    {value === 4 && (\n                        <div class='row'>\n                            {isNew ? \n                                <div class='col-12'>\n                                    <InputNew stores={this.props.stores} field='typeTitle'\n                                        title={<Text id='workouts.other'>Annet</Text>}\n                                        help={<Text id='workouts.other-help'>Hva slags type tur/aktivitet var dette?</Text>} />\n                                </div>\n                                : <div class='col-12'>\n                                    <Input saved={saved} workout={workout} field='typeTitle'\n                                        title={<Text id='workouts.other'>Annet</Text>}\n                                        help={<Text id='workouts.other-help'>Hva slags type tur/aktivitet var dette?</Text>}\n                                        onInput={this.updateTextField} />\n                                </div>}\n                        </div>\n                    )}\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Intensities extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { intensities } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]);\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {intensities && intensities.map(intensity => (\n                            <div class='col-12 mb-2'>\n                                <button\n                                    class={`btn btn-block btn${value === intensity.id ? '' : '-outline'}-${intensity.class || 'success'} text-nowrap overflow-hidden`}\n                                    style='text-overflow: ellipsis;'\n                                    onClick={() => this.toggleType(intensity.id)}\n                                >\n                                    {workout.hintIntensity === intensity.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                    <span style='font-size: 1.5em;'>{intensity.icon || ''} {intensity.name}</span>\n                                    {intensity.help && <>\n                                        <br />\n                                        <small>{intensity.help}</small>\n                                    </>}\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass Equipments extends Component {\n    toggleEquipment(equipmentId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === equipmentId) {\n            value = null;\n        } else {\n            value = equipmentId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { equipments, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]);\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-column'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {equipments && equipments.map(equipment => (\n                                    <div class='col px-1 mb-1'>\n                                        <button\n                                            class={`btn btn-block btn${value === equipment.id ? '' : '-outline'}-success text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleEquipment(equipment.id)}\n                                        >\n                                            {equipment.icon && <i class={equipment.icon} />} {language && equipment.lang && equipment.lang[language] ? equipment.lang[language] : equipment.name}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass RaceInProgress extends Component {\n    // loadAll = async () => {\n    //     const { raceStore } = this.props.stores;\n    //     raceStore.loadRaceInProgress();\n    // }\n\n\t// componentDidMount() {\n    //     this.loadAll();\n    // }\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n\n        if (raceInProgress && raceInProgress.length > 0) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                    <div class='alert alert-warning'>\n                        <h5><Text id='races.race-in-progress'>Løp pågår</Text></h5>\n                        <ul>\n                            {raceInProgress.map(activeRace => <li>\n                                {activeRace.race.title}\n                            </li>)}\n                        </ul>\n                        <i class='fas fa-exclamation-triangle' /> <Text id='races.choose-correct-team-and-type'>Velg riktig team og type for løpet.</Text>\n                    </div>\n                </div>\n            );\n        }\n        return '';\n    }\n}\n\n@observer\nclass WorkoutsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    loadAll = async () => {\n        await this.loadDogs();\n        await this.loadWorkout();\n\n        const { raceStore } = this.props.stores;\n        raceStore.loadRaceInProgress();\n    }\n\n    loadWorkout = async (team) => {\n\t\tconst { workoutStore, userStore, dogStore } = this.props.stores;\n        const { user } = userStore;\n        const { language } = user;\n        const DAY_OF_WEEK = mu.getDays(language);\n\n        let { workouts = [], newWorkout } = workoutStore;\n        const { currentTeam } = workoutStore;\n        if (this.props.workout === 'new') {\n            this.setState({ createNew: true });\n            workouts = await workoutStore.load({ query: { team: (team || currentTeam) }, skipUpdate: 1, limit: 5, sort: '-createdDate' });\n            let lastWorkout = workouts[0];\n            const fallbackTeam = currentTeam || user.team;\n            if (lastWorkout) {\n                // console.log({ lastWorkout, fallbackTeam, currentTeam });\n                if (!newWorkout.team) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'team', fallbackTeam);\n                }\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogs', lastWorkout.dogs || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', lastWorkout.dogsLeft || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', lastWorkout.dogsRight || []);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', []);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'mushers', lastWorkout.mushers);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'temperature', lastWorkout.temperature || 5);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'name', lastWorkout.name);\n                workoutStore.updateObjectKeyValue('newWorkout', 'type', lastWorkout.type);\n                workoutStore.updateObjectKeyValue('newWorkout', 'equipment', lastWorkout.equipment);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration', lastWorkout.duration);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration-hours', Math.floor(lastWorkout.duration / 3600));\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration-minutes', Math.floor(lastWorkout.duration % 3600 / 60));\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest', lastWorkout.rest || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest-hours', Math.floor(lastWorkout.rest / 3600) || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest-minutes', Math.floor(lastWorkout.rest % 3600 / 60) || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rating', lastWorkout.rating || 3);\n                workoutStore.updateObjectKeyValue('newWorkout', 'sledWeight', lastWorkout.sledWeight);\n\n                if (!newWorkout['updated-date']) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'date', util.isoDate(lastWorkout.date, false,  false, true));\n                }\n                if (!newWorkout['updated-time']) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'time', util.isoTime(lastWorkout.date));\n                }\n\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintTeam', lastWorkout.team);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintType', lastWorkout.type);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintTrack', lastWorkout.track);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintIntensity', lastWorkout.intensity);\n\n                const lastUsedTracks = workouts.map(w => w.track);\n                this.setState({ lastUsedTracks });\n            } else {\n                const date = new Date();\n                const dayOfWeek = DAY_OF_WEEK[date.getDay()];\n                const dogs = await dogStore.load({ query: { team: (team || currentTeam) }, skipUpdate: 1 });\n                if (!newWorkout.team) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'team', fallbackTeam);\n                }\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogs', dogs.map(d => d.id) || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'mushers', [user.id]);\n                workoutStore.updateObjectKeyValue('newWorkout', 'name', util.ucfirst(`${dayOfWeek} - Tur med hundene`));\n                // workoutStore.updateObjectKeyValue('newWorkout', 'temperature', 5);\n                workoutStore.updateObjectKeyValue('newWorkout', 'type', 1);\n                workoutStore.updateObjectKeyValue('newWorkout', 'equipment', 2);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration', 3600);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest', 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rating', 3);\n                workoutStore.updateObjectKeyValue('newWorkout', 'date', util.isoDate(undefined, false,  false, true));\n                workoutStore.updateObjectKeyValue('newWorkout', 'time', util.isoTime());\n            }\n            workoutStore.updateObjectKeyValue('newWorkout', 'temperature', -1);\n        } else {\n            workoutStore.load(this.props.workout);\n        }\n    }\n\n    loadDogs = async () => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { dogStore } = this.props.stores;\n\t\t// const { currentTeam } = dogStore;\n\t\t// await dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t\tawait dogStore.load({ query: { deceased: 0 }, addData: ['workoutSummary'] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tresetDog() {\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateKeyValue('newWorkout', {});\n\t}\n\n\tinsertWorkout = async () => {\n\t\tconst { workoutStore, userStore } = this.props.stores;\n\t\tconst { newWorkout } = workoutStore;\n\t\tconst response = await workoutStore.insert({ ...newWorkout });\n        if (response.status === 422) {\n            PubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\t\tmessage: 'Mangler tittel på treningsøkten',\n\t\t\t\ttype: 'warning',\n\t\t\t\ticon: 'fas fa-exclamation-triangle',\n\t\t\t});\n        } else if (response.status >= 500) {\n            PubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\t\tmessage: response.message || response.error,\n\t\t\t\ttype: 'danger',\n\t\t\t\ticon: 'fas fa-exclamation-triangle',\n\t\t\t});\n        } else {\n            this.resetDog();\n            userStore.getInfo();\n            route(`/workouts/${response.data.id}`);\n        }\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = async ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        const { workoutStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        const { workout } = workoutStore;\n        if (field === 'images') {\n            if (Array.isArray(workout.images) && Array.isArray(value)) {\n                localObjectValue = [...workout.images, ...value];\n            }\n        }\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n        if (isNew) {\n            workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        } else {\n            workoutStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                await this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n\n        // GPX update stuff\n        if (field === 'gpx' && workout && util.checkNested(workout, 'gpx', 'gpxInfo')) {\n            const { totalDistance, maxSpeed, avgSpeed, ascent, decent, duration, rest, startLatlng, endLatlng } = workout.gpx.gpxInfo;\n            const updateObject = {};\n            if (duration) {\n                workoutStore.updateField(id, 'duration', duration);\n                updateObject.duration = duration;\n            }\n            if (rest) {\n                workoutStore.updateField(id, 'rest', rest);\n                updateObject.rest = rest;\n            }\n            if (totalDistance) {\n                workoutStore.updateField(id, 'distanceKm', util.roundTo(totalDistance, 10));\n                updateObject.distanceKm = util.roundTo(totalDistance, 10);\n            }\n            if (maxSpeed) {\n                workoutStore.updateField(id, 'speedmax', util.roundTo(maxSpeed, 10));\n                updateObject.speedmax = util.roundTo(maxSpeed, 10);\n            }\n            if (avgSpeed) {\n                workoutStore.updateField(id, 'speedAvg', util.roundTo(avgSpeed, 10));\n                updateObject.speedAvg = util.roundTo(avgSpeed, 10);\n            }\n            if (ascent) {\n                workoutStore.updateField(id, 'elevation', ascent);\n                updateObject.elevation = ascent;\n            }\n            if (decent) {\n                workoutStore.updateField(id, 'decent', decent);\n                updateObject.decent = decent;\n            }\n            if (startLatlng) {\n                workoutStore.updateField(id, 'startLatlng', startLatlng);\n                updateObject.startLatlng = startLatlng;\n            }\n            if (endLatlng) {\n                workoutStore.updateField(id, 'endLatlng', endLatlng);\n                updateObject.endLatlng = endLatlng;\n            }\n            await workoutStore.save(updateObject, workout.id);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { workoutStore } = this.props.stores;\n        if (id && field) {\n            await workoutStore.saveField(id, field, value);\n        }\n    }\n\n    dogFilter = (e) => {\n        const { workoutStore } = this.props.stores;\n        const { workout } = workoutStore;\n        if (workout && workout.dogs) {\n            return (e.team === workout.team || workout.dogs.indexOf(e.id) > -1);\n        }\n        return false;\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n    getYrWeather = async (position) => {\n        const { createNew } = this.state;\n        const { workoutStore, userStore } = this.props.stores;\n\t\tconst { workout = {}, newWorkout } = workoutStore;\n\n        const firstPoint = mu.getFirstPoint(workout);\n        const midPoint = mu.getMidPoint(workout, 0.5);\n        // const endPoint = mu.getMidPoint(workout, 1);\n\n        const weather = await userStore.getWeather({ lat: firstPoint[0], lon: firstPoint[1], altitude: firstPoint[2] });\n        const weatherMid = await userStore.getWeather({ lat: midPoint[0], lon: midPoint[1], altitude: midPoint[2] });\n\n        if (createNew) {\n            this.updateFieldValue({ id: newWorkout.id, field: 'yr', value: weather, isNew: true, skipTimer: false });\n            this.updateFieldValue({ id: newWorkout.id, field: 'yrMid', value: weatherMid, isNew: true, skipTimer: false });\n            if (util.checkNested(newWorkout, 'yr', '0', 'instant', 'details') && !newWorkout.weather) {\n                let yrValue = '';\n                const yr = toJS(newWorkout.yr[0].instant.details);\n                // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n                yrValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                // console.log({ yrValue });\n                this.updateFieldValue({ id: newWorkout.id, field: 'weather', value: yrValue, isNew: true, skipTimer: false });\n                if (!newWorkout.temperature) {\n                    this.updateFieldValue({ id: newWorkout.id, field: 'temperature', value: yr.air_temperature, isNew: true, skipTimer: false });\n                }\n            }\n\n        } else {\n            this.updateFieldValue({ id: workout.id, field: 'yr', value: weather, isNew: false, skipTimer: false });\n            this.updateFieldValue({ id: workout.id, field: 'yrMid', value: weatherMid, isNew: false, skipTimer: false });\n            if (util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n                let yrValue = '';\n                const yr = toJS(workout.yr[0].instant.details);\n                const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n                const workoutDate = util.isoDate(workout.date, false, false, true);\n                // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n                if (yrDate === workoutDate && (!workout.weather || workout.weather === '')) {\n                    yrValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                    // console.log({ yrValue, yrDate, workoutDate });\n                    this.updateFieldValue({ id: workout.id, field: 'weather', value: yrValue, isNew: false, skipTimer: false });\n                    if (!workout.temperature) {\n                        this.updateFieldValue({ id: workout.id, field: 'temperature', value: yr.air_temperature, isNew: true, skipTimer: false });\n                    }\n                }\n            }\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n    toggleAdminDebug = () => {\n        const { showAdminDebug } = this.state;\n        this.setState({ showAdminDebug: !showAdminDebug });\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n    }\n\n\trender() {\n        const { createNew, lastUsedTracks, submenu, showAdminDebug = true } = this.state;\n\t\tconst { workoutStore, userStore, appState, raceStore } = this.props.stores;\n        const { viewmode } = appState;\n        const { isAdmin, user } = userStore;\n\t\tconst { insertStatus, saved, workout = {}, newWorkout = {}, workoutLocations, isTracking } = workoutStore;\n        const { currentTeam: currentTeamId } = workoutStore;\n        const currentTeam = userStore.findTeam(workout.team || currentTeamId, true);\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const raceTeams = raceInProgress.map(e => parseInt(e.musher.team, 10));\n\n        const { name, gpxInfo = {}, gpx = { gpxInfo: {} } } = workout;\n\n        let isStationary = false;\n        if (createNew) {\n            isStationary = [6, 8].indexOf(newWorkout.type) > -1;\n        } else {\n            isStationary = [6, 8].indexOf(workout.type) > -1;\n        }\n\n        if (createNew) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <button class='btn btn-link float-left pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}\n                    >\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                    <div class='row'>\n                        <RaceInProgress stores={this.props.stores} />\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3' style='padding-left: 35px;'>\n                            <div> \n                                <h5><Text id='workouts.add-new'>Legg til ny treningstur</Text></h5>\n                            </div>\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class='row'>\n                                <div class='w-100 overflow-hidden'>\n                                    <div\n                                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                                    >\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='info'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-info-circle' /> <Text id='workouts.info'>Info</Text></button>\n                                            {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='team'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-users' /> <Text id='workouts.team'>Team</Text></button>\n                                            {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'user' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='user'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-user' /> <Text id='workouts.user'>Musher</Text></button>\n                                            {submenu === 'user' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'images' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='images'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-images' /> <Text id='workouts.images'>Bilder</Text></button>\n                                            {submenu === 'images' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'gps' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='gps'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-map-marker-alt' /> <Text id='workouts.gps'>GPS</Text></button>\n                                            {submenu === 'gps' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'equipment' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='equipment'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-sleigh' /> <Text id='workouts.equipment'>Equipment</Text></button>\n                                            {submenu === 'equipment' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='advanced'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-cogs' /> <Text id='workouts.advanced'>advanced</Text></button>\n                                            {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {submenu === 'info' && <>\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                        <Types stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='type' icon='fas fa-running'\n                                            title={<Text id='workouts.type'>Type tur</Text>}\n                                            help={<Text id='workouts.type-help'>Type treningstur. 'trening', 'konkurranse', 'tur'.</Text>}\n                                            updateField={this.updateFieldValue} />\n                                </div>\n                            </>}\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='name' icon='fas fa-heading'\n                                    title={<Text id='workouts.title'>Tittel</Text>}\n                                    help={<Text id='workouts.title-help'>Tittel på denne turen. 'Fin høsttur i øsende regn...'</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='comment' type='textarea'\n                                    title={<Text id='workouts.comment'>Kommentar</Text>}\n                                    help={<Text id='workouts.comment-help'>Kommentar til turen. Hvordan gikk det?</Text>}\n                                />\n                            </div>\n                            {currentTeam && currentTeam.public > 0 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='private' icon='fas fa-eye' type='toggle'\n                                        title={<Text id='workouts.private'>Skjul treningsturen</Text>}\n                                        help={<Text id='workouts.private-help'>Skal denne turen være skjult for de som følger teamet ditt?</Text>}\n                                    />\n                                </div>\n                            </>}\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                    title={<Text id='workouts.date'>Dato</Text>}\n                                    help={<Text id='workouts.date-help'>Dato for turen. Format på dato er: 'YYYY-MM-DD'.</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='time' icon='fas fa-clock' type='time'\n                                    title={<Text id='workouts.time'>Klokka</Text>}\n                                    help={<Text id='workouts.time-help'>Klokkeslett for turen. Format: 'HH:MI'.</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='duration' type='duration' icon='fas fa-stopwatch'\n                                    title={<Text id='workouts.duration'>Varighet på treningen</Text>}\n                                    help={<Text id='workouts.duration-help'>Hvor lenge var du ute? (HH:MI)</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='rest' type='duration' icon='fas fa-stopwatch'\n                                    title={<Text id='workouts.rest'>Hviletid på treningen</Text>}\n                                    help={<Text id='workouts.rest-help'>Hvor lenge stod du stille? (HH:MI)</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                    <InputNew stores={this.props.stores} field='speedAvg'\n                                        rightValue={`${util.format(mu.speedAvg({\n                                            duration: newWorkout.duration,\n                                            rest: newWorkout.rest,\n                                            distanceKm: newWorkout.distanceKm,\n                                        }), 1, '.', ' ')} km/t`}\n                                        rightValueReal={mu.speedAvg({\n                                            duration: newWorkout.duration,\n                                            rest: newWorkout.rest,\n                                            distanceKm: newWorkout.distanceKm,\n                                        })}\n                                        updateField={this.updateFieldValue}\n                                        icon='fas fa-tachometer-alt'\n                                        type='number' min='0' max='100' step='0.1'\n                                        title={<Text id='workouts.avg-speed'\n                                    >Gjennomsnittsfart</Text>}\n                                        help={<Text id='workouts.avg-speed-help'>Gjennomsnittsfart når du var i bevegelse. Dersom du ikke vet dette så legger du bare inn distanse og varighet så blir dette regnet ut.</Text>} />\n                                </>}\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='row px-0'>\n                                    <div class='col-6'>\n                                        <InputNew stores={this.props.stores} field='distanceKm' icon='fas fa-road'\n                                            title={<Text id='workouts.distance'>Distanse i km</Text>}\n                                            type='number' min='0' max='300' step='1'\n                                            help={<Text id='workouts.distance-help'>Hvor lang var turen i km.</Text>}\n                                        />\n                                    </div>\n                                    <div class='col-6'>\n                                        <InputNew stores={this.props.stores} field='elevation' icon='fas fa-mountain'\n                                            title={<Text id='workouts.ascend'>Høydemeter</Text>}\n                                            type='number' min='0' max='3000' step='1'\n                                            help={<Text id='workouts.ascend-help'>Høydemeter du klatret på denne turen.</Text>}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </>}\n\n                        {submenu === 'team' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Teams stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='team' icon='fas fa-users'\n                                    title={<Text id='workouts.team'>Team</Text>}\n                                    help={<Text id='workouts.team-help'>Teamet som er på tur.</Text>}\n                                    updateField={this.updateFieldValue} selectTeam={this.loadWorkout}\n                                    highlight={raceTeams}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Dogs stores={this.props.stores} isNew={1} saved={saved} object={newWorkout} type='array' icon='fas fa-dog' elementtype='number' field='dogs'\n                                    title={<Text id='workouts.dogs'>Hunder</Text>}\n                                    help={<Text id='workouts.dogs-help'>Hvilke hunder var med på turen.</Text>}\n                                    updateField={this.updateFieldValue} filter={(e) => (e.team === newWorkout.team || (newWorkout.dogs && newWorkout.dogs.indexOf(e.id) > -1))}\n                                    showPositions={isStationary ? false : ['beta', 'advanced', 'normal'].indexOf(viewmode) > -1}\n                                    currentTeam={currentTeam}\n                                    key={`dogs-${util.getNestedValue(currentTeam, 'id')}`}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'user' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Mushers stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='array' elementtype='number' field='mushers' icon='fas fa-user'\n                                    title={<Text id='workouts.mushers'>Kjørere</Text>}\n                                    help={<Text id='workouts.mushers-help'>Hvem av kjørerne var med på turen.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>                        \n                        </>}\n\n                        {submenu === 'images' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-images' /></div>\n                                    <Text id='workouts.save-to-add-images'>Please save workout and then go into edit mode to add images.</Text>\n                                </div>                                \n                            </div>\n                        </>}\n\n                        {submenu === 'gps' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='text-center text-muted mb-3'>\n                                    <div class='display-1'><i class='fas fa-map-marker-alt' /></div>\n                                    <Text id='workouts.save-to-add-gpx'>Please save workout and then you will be able to upload a GPX-file if you like.</Text>\n                                </div> \n\n                                <Tracks stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='track' icon='fas fa-map-marked'\n                                    title={<Text id='workouts.track'>Runde</Text>}\n                                    help={<Text id='workouts.track-help'>Hvilken treningsrunde er dette.</Text>}\n                                    updateField={this.updateFieldValue} filter={(e) => (e.id === newWorkout.track || (lastUsedTracks && lastUsedTracks.indexOf(e.id) > -1))}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'equipment' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Equipments stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='equipment' icon='fas fa-sleigh'\n                                    title={<Text id='workouts.equipment'>Utstyr</Text>}\n                                    help={<Text id='workouts.equipment-help'>Utstyr som ble brukt. 'trollvogn', 'atv', 'slede'.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='sledWeight' icon='fas fa-sleigh'\n                                    title={<Text id='workouts.sledWeight'>Sledevekt</Text>}\n                                    help={<Text id='workouts.sledWeight-help'>Vekt på sleden denne turen.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'advanced' && <>\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='weather' icon='fas fa-cloud-sun-rain'\n                                        title={<Text id='workouts.weather'>Været på turen</Text>}\n                                        help={<Text id='workouts.weather-help'>Hvordan var været.</Text>}\n                                    />\n                                </div>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='temperature' icon='fas fa-temperature-low'\n                                        title={<Text id='workouts.temperature'>Temperatur</Text>}\n                                        type='number' min='-40' max='20' step='0.5'\n                                        help={<Text id='workouts.temperature-help'>Hvilken temperatur var det.</Text>}\n                                    />\n                                </div>\n                            </>}\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='rating' icon='fas fa-dice'\n                                        title={<Text id='workouts.rating'>Rating av turen</Text>}\n                                        type='number' min='0' max='6' step='1'\n                                        help={<Text id='workouts.rating-help'>Din rating av turen. 1-6</Text>}\n                                    />\n                                </div>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <Intensities stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='intensity' icon='fas fa-dumbbell'\n                                        title={<Text id='workouts.intensity'>Intensitet</Text>}\n                                        help={<Text id='workouts.intensity-help'>Hvor stor belastning var denne turen?</Text>}\n                                        updateField={this.updateFieldValue}\n                                    />\n                                </div>\n                            </>}\n                        </>}\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class={`form-group mb-1 pb-1 border-bottom`}>\n                                <button type='button' class='btn btn-block btn-primary'\n                                    onClick={this.insertWorkout}\n                                >\n                                    <Text id='workouts.add-save-new'>Lagre treningstur</Text>\n                                </button>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    {insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n\t\t\t\t\t\t<Text id='workouts.workout-saved'>Treningen er lagret.</Text>\n\t\t\t\t\t</div>}\n\n                </div>\n            );\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link float-left pl-0 fixed-top'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}\n                >\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n                    <RaceInProgress stores={this.props.stores} />\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3' style='padding-left: 35px;'>                       \n                        <div>\n                            <h5><Text id='workouts.edit-workout'>Endre trening</Text>: {name}                                \n                                {workout.isLocked === 1 && <i class='fas fa-lock text-danger ml-3' />}\n                            </h5>\n                        </div>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                        <div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='workouts.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-users' /> <Text id='workouts.team'>Team</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'user' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='user'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-user' /> <Text id='workouts.user'>Musher</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'images' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='images'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-images' /> <Text id='workouts.images'>Bilder</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'gps' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='gps'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='workouts.gps'>GPS</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'equipment' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='equipment'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-sleigh' /> <Text id='workouts.equipment'>Equipment</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='advanced'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-cogs' /> <Text id='workouts.advanced'>advanced</Text></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {submenu === 'info' && <>\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Types stores={this.props.stores} saved={saved} workout={workout} type='number' field='type' icon='fas fa-running'\n                                    title={<Text id='workouts.type'>Type tur</Text>}\n                                    help={<Text id='workouts.type-help'>Type treningstur. 'trening', 'konkurranse', 'tur'.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='name' icon='fas fa-heading'\n                                title={<Text id='workouts.title'>Tittel</Text>}\n                                help={<Text id='workouts.title-help'>Tittel på denne turen. 'Fin høsttur i øsende regn...'</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='comment' type='textarea'\n                                title={<Text id='workouts.comment'>Kommentar</Text>}\n                                help={<Text id='workouts.comment-help'>Kommentar til turen. Hvordan gikk det?</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {currentTeam && currentTeam.public > 0 && <Input stores={this.props.stores} saved={saved} workout={workout} field='private' icon='fas fa-eye' type='toggle'\n                                title={<Text id='workouts.private'>Skjul treningsturen</Text>}\n                                help={<Text id='workouts.private-help'>Skal denne turen være skjult for de som følger teamet ditt?</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input stores={this.props.stores} saved={saved} workout={workout} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                title={<Text id='workouts.date'>Dato</Text>}\n                                help={<Text id='workouts.date-help'>Dato for turen. Format på dato er: 'YYYY-MM-DD'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.minEpoch: {util.isoDate(gpxInfo.minEpoch, true, true)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.startTime > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.startTime {util.isoDate(gpx.gpxInfo.startTime, true, true)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input stores={this.props.stores} saved={saved} workout={workout} field='time' icon='fas fa-clock' type='time'\n                                title={<Text id='workouts.time'>Klokka</Text>}\n                                help={<Text id='workouts.time-help'>Klokkeslett for turen. Format: 'HH:MI'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='duration' type='duration' icon='fas fa-stopwatch'\n                                title={<Text id='workouts.duration'>Varighet på treningen</Text>}\n                                help={<Text id='workouts.duration-help'>Hvor lenge var du ute? (HH:MI)</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && gpxInfo.maxEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.maxEpoch-minEpoch: {util.secToHms(gpxInfo.maxEpoch - gpxInfo.minEpoch)} <br />\n                                </small>}\n                                {isAdmin && gpxInfo.duration > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.duration: {util.secToHms(gpxInfo.duration)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.endTime > 0 && gpx.gpxInfo.startTime > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.endTime-startTime: {util.secToHms((gpx.gpxInfo.endTime - gpx.gpxInfo.startTime) / 1000)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.duration > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.duration: {util.secToHms(gpx.gpxInfo.duration)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='rest' type='duration' icon='fas fa-stopwatch'\n                                title={<Text id='workouts.rest'>Hviletid på treningen</Text>}\n                                help={<Text id='workouts.rest-help'>Hvor lenge stod du stille? (HH:MI)</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && gpxInfo.maxEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.maxEpoch-minEpoch: {util.secToHms(gpxInfo.rest)} <br />\n                                </small>}\n                                {isAdmin && gpxInfo.rest > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.rest: {util.secToHms(gpxInfo.rest)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.rest > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.rest: {util.secToHms(gpx.gpxInfo.rest)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {!isStationary && <>\n                                {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                    <Input saved={saved} workout={workout} field='speedAvg'\n                                        rightValue={`${util.format(mu.speedAvg({\n                                            duration: workout.duration,\n                                            rest: workout.rest,\n                                            distanceKm: workout.distanceKm,\n                                        }), 1, '.', ' ')} km/t`}\n                                        rightValueReal={mu.speedAvg({\n                                            duration: workout.duration,\n                                            rest: workout.rest,\n                                            distanceKm: workout.distanceKm,\n                                        })}\n                                        updateField={this.updateFieldValue}\n                                        icon='fas fa-tachometer-alt'\n                                        title={<Text id='workouts.avg-speed'>Gjennomsnittsfart</Text>}\n                                        type='number' min='0' max='100' step='0.1'\n                                        help={<Text id='workouts.avg-speed-help'>Gjennomsnittsfart når du var i bevegelse. Dersom du ikke vet dette så legger du bare inn distanse og varighet så blir dette regnet ut.</Text>}\n                                        onInput={this.updateField}\n                                    />\n                                    {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                        {isAdmin && gpxInfo.avgMovingSpeeds > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgMovingSpeeds {util.format(gpxInfo.avgMovingSpeeds * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpxInfo.avgGpsSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgGpsSpeed {util.format(gpxInfo.avgGpsSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpxInfo.avgGpsMovingSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgGpsMovingSpeed {util.format(gpxInfo.avgGpsMovingSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpx.gpxInfo && gpx.gpxInfo.avgSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpx.gpxInfo.avgSpeed {util.format(gpx.gpxInfo.avgSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                    </div>}\n                                </>}\n                            </>}\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class='row px-0'>\n                                {!isStationary && <>\n                                    <div class='col-6'>\n                                        <Input saved={saved} workout={workout} field='distanceKm' icon='fas fa-road'\n                                            title={<Text id='workouts.distance'>Distanse i km</Text>}\n                                            type='number' min='0' max='300' step='1'\n                                            help={<Text id='workouts.distance-help'>Hvor lang var turen i km.</Text>}\n                                            onInput={this.updateField}\n                                            updateField={this.updateFieldValue}\n                                        />\n                                        {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                            {isAdmin && gpxInfo.calculatedTotalDistance > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedTotalDistance: {util.format(gpxInfo.calculatedTotalDistance, 2)} km <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.totalDistance > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.totalDistance: {util.format(gpx.gpxInfo.totalDistance, 2)} km <br />\n                                            </small>}\n                                        </div>}\n                                    </div>\n                                    <div class='col-6'>\n                                        <Input saved={saved} workout={workout} field='elevation' icon='fas fa-mountain'\n                                            title={<Text id='workouts.ascend'>Høydemeter</Text>}\n                                            type='number' min='0' max='3000' step='1'\n                                            help={<Text id='workouts.ascend-help'>Høydemeter du klatret på denne turen.</Text>}\n                                            onInput={this.updateField}\n                                            updateField={this.updateFieldValue}\n                                        />\n                                        {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                            {isAdmin && gpxInfo.calculatedAscend > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedAscend: {util.format(gpxInfo.calculatedAscend, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpxInfo.calculatedDescend > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedDescend: {util.format(gpxInfo.calculatedDescend, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.ascent > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.ascent: {util.format(gpx.gpxInfo.ascent, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.descent > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.descent: {util.format(gpx.gpxInfo.descent, 0)} m <br />\n                                            </small>}\n                                        </div>}\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Teams stores={this.props.stores} saved={saved} workout={workout} type='number' field='team' icon='fas fa-users'\n                                title={<Text id='workouts.team'>Team</Text>}\n                                help={<Text id='workouts.team-help'>Teamet som er på tur.</Text>}\n                                updateField={this.updateFieldValue}\n                                highlight={raceTeams}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Dogs stores={this.props.stores} saved={saved} object={workout} type='array' elementtype='number' field='dogs' icon='fas fa-dog'\n                                title={<Text id='workouts.dogs'>Hunder</Text>}\n                                help={<Text id='workouts.dogs-help'>Hvilke hunder var med på turen.</Text>}\n                                updateField={this.updateFieldValue}  filter={this.dogFilter}\n                                showPositions={isStationary ? false : ['beta', 'advanced', 'normal'].indexOf(viewmode) > -1}\n                                currentTeam={currentTeam}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'user' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Mushers stores={this.props.stores} saved={saved} workout={workout} type='array' elementtype='number' field='mushers' icon='fas fa-user'\n                                title={<Text id='workouts.mushers'>Kjørere</Text>}\n                                help={<Text id='workouts.mushers-help'>Hvem av kjørerne var med på turen.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'images' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='image' type='image'\n                                stores={this.props.stores}\n                                title={<Text id='workouts.photos'>Bilder</Text>}\n                                help={<Text id='workouts.photos-help'>Legg til bilde fra treningen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'gps' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {gpx && <div style='height: 300px;'>\n                                <Map stores={this.props.stores} mapId={workout.id} geojson={gpx.geoJSON} gpxInfo={gpx.gpxInfo} height={300} />\n                            </div>}\n                            <Input saved={saved} workout={workout} field='gpx' type='file'\n                                title={<Text id='workouts.gpx'>Gpx</Text>}\n                                help={<Text id='workouts.gpx-help'>Gpx til denne treningen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Tracks stores={this.props.stores} saved={saved} workout={workout} type='number' field='track' icon='fas fa-map-marked'\n                                title={<Text id='workouts.track'>Runde</Text>}\n                                help={<Text id='workouts.track-help'>Hvilken treningsrunde er dette.</Text>}\n                                updateField={this.updateFieldValue}\n                                filter={(e) => (e.id === workout.track)}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'equipment' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Equipments stores={this.props.stores} saved={saved} workout={workout} type='number' field='equipment' icon='fas fa-sleigh'\n                                title={<Text id='workouts.equipment'>Utstyr</Text>}\n                                help={<Text id='workouts.equipment-help'>Utstyr som ble brukt. 'trollvogn', 'atv', 'slede'.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='sledWeight' type='number' step='1' icon='fas fa-sleigh'\n                                title={<Text id='workouts.sledWeight'>Sledevekt</Text>}\n                                help={<Text id='workouts.sledWeight-help'>Vekt på sleden denne turen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                {!util.checkNested(workout, 'yr', '0', 'instant', 'details') && <button class='btn btn-sm float-right btn-secondary' onClick={this.getYrWeather}>\n                                    <Text id='workouts.fetch-weather'>Hent fra yr</Text>\n                                </button>}\n                                <Input saved={saved} workout={workout} field='weather' icon='fas fa-cloud-sun-rain'\n                                    title={<Text id='workouts.weather'>Været på turen</Text>}\n                                    help={<Text id='workouts.weather-help'>Hvordan var været.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Input saved={saved} workout={workout} field='temperature' icon='fas fa-temperature-low'\n                                    title={<Text id='workouts.temperature'>Temperatur</Text>}\n                                    type='number' min='-40' max='20' step='0.5' \n                                    help={<Text id='workouts.temperature-help'>Hvilken temperatur var det.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Input saved={saved} workout={workout} field='rating' type='number' min='0' max='6' step='1' icon='fas fa-dice'\n                                    title={<Text id='workouts.rating'>Rating av turen</Text>}\n                                    help={<Text id='workouts.rating-help'>Din rating av turen. 1-6</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Intensities stores={this.props.stores} saved={saved} workout={workout} type='number' field='intensity' icon='fas fa-dumbbell'\n                                    title={<Text id='workouts.intensity'>Intensitet</Text>}\n                                    help={<Text id='workouts.intensity-help'>Hvor stor belastning var denne turen?</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                    </>}\n\n\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WorkoutsEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}