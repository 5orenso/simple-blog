{"version":3,"sources":["webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","workoutFilter","Workouts","observer","props","loadWorkouts","currentMonth","currentYear","setState","userStore","stores","currentTeam","workoutStore","Date","getMonth","util","getYear","month","year","Promise","all","load","query","team","loadWorkoutSummary","loadWorkoutPlans","getNotifications","loadStravaActivities","loadGarminActivities","workoutPlanCurrent","workoutPlanStore","seasonYear","workoutPlans","id","prepareWeekGraphs","chooseSubmenu","e","target","parentElement","dataset","menu","chooseDay","day","state","dd","mm","yyyy","w","date","d","getDate","m","y","getFullYear","parseInt","this","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummary","getWorkoutSummaryDay","daysBack","componentDidMount","appState","checkCordova","componentWillReceiveProps","nextProps","render","percentComplete","workoutPlan","user","language","MONTHS","getMonths","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","planMonth","sumWorkoutPlanMonth","summaryMonth","findWorkoutSummaryMonth","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","seasonStart","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","format","callback","key","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","basehref","showNavigation","showHeader","data-menu","onClick","strava","map","act","activity","garmin","url","fields","name","workout","Component","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","monthRange","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","xTicks","i","l","push","scope"],"mappings":"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","file":"route-workouts.chunk.df24f.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n};\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tawait Promise.all([\n\t\t\tworkoutStore.load({ query: { team: currentTeam, year, month } }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t]);\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\t// loadDogs = async () => {\n\t// \tconst { dogStore } = this.props.stores;\n\t// \tconst { currentTeam } = dogStore;\n\t// \tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t// }\n\n\t// async loadTracks() {\n\t// \tconst { trackStore } = this.props.stores;\n\t// \tawait trackStore.load();\n\t// }\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore, teamStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user } = userStore;\n        const { language = 'no' } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\t\tconst { workoutSummaryWeek = [] } = userStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst seasonStart = parseInt(year || (currentMonth < 8 ? currentYear - 1 : currentYear), 10);\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={`${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={`${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalDistanceKmMonth, 0)} <small><small><small>km</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalSpeedavgMonth, 1)} <small><small><small>km/t</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}`}\n\t\t\t\t\t\t\tshowNavigation={false}\n\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\n\n\t\t\t\t{1 === 2 && <div class='row'>\n\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n\t\t\t\t\t\t\t<h5 class='mt-4'><Text id='workout.index.workout-overview'>Treningsoversikt</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* {JSON.stringify(workoutSummaryWeek)} */}\n\t\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.reverse().map(summary => (\n\t\t\t\t\t\t\t<WorkoutSummary stores={this.props.stores} summary={summary} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}