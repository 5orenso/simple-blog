{"version":3,"sources":["webpack:///./components/admin/userInvites.js","webpack:///./components/admin/heatmap.js","webpack:///./components/admin/pageViews.js","webpack:///./components/admin/applications.js","webpack:///./components/admin/notification.js","webpack:///./components/data/distance.js","webpack:///./components/admin/competition.js","webpack:///./components/admin/graph.js","webpack:///./components/admin/development.js","webpack:///./components/user/index.js","webpack:///./components/admin/jwttoken.js","webpack:///./components/admin/weeklyTotals.js","webpack:///./components/data/temperature.js","webpack:///./components/admin/weeklyAvg.js","webpack:///./components/data/weight.js","webpack:///./components/admin/miniAdGraph.js","webpack:///./routes/home/admin.js","webpack:///./components/admin/keyNumbers.js","webpack:///./components/data/elevation.js","webpack:///./components/admin/ads.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./components/admin/veterinaryHistory.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/admin/demographics.js","webpack:///./components/admin/miniPageViewGraph.js","webpack:///./components/admin/errors.js"],"names":["UserInvites","observer","Component","loadResults","async","adminStore","props","stores","getUserInviteResults","this","setState","isLoading","componentDidMount","loadAll","render","inviteResults","class","map","res","util","isoDate","date","user","email","activities","invitedUser","username","firstname","lastname","lastActivityEpoch","teams","t","name","members","length","dogs","workouts","initialState","showAddComment","Heatmap","constructor","super","state","updateTimer","inputRef","getHeatmap","loadHeatmap","heatmap","mapId","minZoom","height","PageView","getPageViews","loadPageView","pageViewsKeys","graphFieldsLeftFrontpage","graphLegendsLeftFrontpage","graphFieldsLeftRace","graphLegendsLeftRace","graphFieldsLeftSearch","graphLegendsLeftSearch","graphFieldsLeftInbox","graphLegendsLeftInbox","graphFieldsLeftSettings","graphLegendsLeftSettings","graphFieldsLeftUsers","graphLegendsLeftUsers","graphFieldsLeftDogs","graphLegendsLeftDogs","graphFieldsLeftWorkouts","graphLegendsLeftWorkouts","graphFieldsLeftTeams","graphLegendsLeftTeams","graphFieldsLeftTracks","graphLegendsLeftTracks","pages","e","graphKey","forEach","key","match","push","fieldsLeft","legendLeft","Input","handleImageErrored","image","target","onerror","setTimeout","src","Date","removeImage","applicationStore","application","id","parentElement","dataset","removeMainImage","field","updateField","value","saved","type","rows","title","icon","help","onInput","for","images","img","s3SmallLink","onError","onClick","data-name","object","autoOpen","style","aria-describedby","data-id","data-field","InputNew","updateObjectKeyValue","newApplication","Application","insertApplication","insert","load","query","showall","resetApplicaton","selectApplication","applicationId","resetApplication","updateKeyValue","elementtype","isNew","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","addData","saveField","loadApplication","appState","applications","apiServer","returnUrl","getIcon","AdminNotification","confirmRequest","notification","teamStore","confirmFollowRequest","team","addedBy","deleteRequest","deleteFollowRequest","showDate","displayNameShort","ucfirst","displayName","userImage","undefined","dogIds","grouped","dog","indexOf","isDimmed","read","isLinked","s3ThumbLink","href","url","message","toggleDate","formatDate","locale","formatDistance","d","displayDistance","distance","format","Distance","smallUnit","userStore","settings","imperial","kmToMiles","Competition","workoutStore","workoutResults","competitionResults","competitionAllResults","competitionTeams","language","year","month","findTeamType","findTeamAmbition","ambition","ambitions","count","avgDogs","totalDistanceKm","distanceKm","elevation","secToHms","duration","speedAvg","colspan","filter","line","find","postalcode","place","country","diffTotalDistanceKm","AdminGraph","withText","week","ascend","plan","fieldsRight","legendRight","showDebug","xTicksVal","val","xTicksCnt","yTicksLeftVal","yTicksRightVal","dataLeft","getNestedValue","dataRight","firstData","xTicks","partSize","Math","ceil","parts","floor","console","log","i","l","epoch","width","showXTicks","paddingTop","paddingLeft","yTicksLeftWidth","lineFromXzero","lineFromXmax","showYTicksLeft","avgWindowLeft","smoothLeft","showYTicksRight","avgWindowRight","smoothRight","legendFontSize","legendLineHeight","ticksFontSize","scrollToRight","Development","setApiServer","apiserver","closest","showError","data-apiserver","User","removeUser","parentNode","removeMember","adminUpdateUser","doAdminUpdateUser","simulateUser","getSimulateUser","currentUser","isAdmin","findTeams","summary","findMusherSummary","isTeamAdmin","mu","getImage","cellphone","asUrl","rel","facebook","asFacebookLink","instagram","asInstagramLink","snapchat","asSnapchatLink","data-email","JSON","stringify","subscription","deviceInfo","notifications","notificationTopics","shadowTags","garmin","strava","currentLocationGeocode","veterinaryAllowed","checked","twoFactorLogin","isVeterinary","avgDistance","avgElevation","avgDuration","data-team","copyToClipboard","textArea","select","document","execCommand","focus","copySuccess","jwtToken","userEmail","ref","c","WeeklyTotals","submenu","totalKey","totalUsersWeekNumber","totalUsersMonthNumber","totalWeek","totalMonth","getWeek","stat","Temperature","celciusToFahrenheit","avgKey","Weight","kgToPounds","MiniAdGraph","adStore","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","subMenuMarginTop","getJwtToken","Admin","loadStats","getStatsAvg","getStatsTotal","getStats","limit","loadAdminHistory","getAdminHistory","simulateUserByClick","setQuery","innerText","setWorkoutQuery","workoutQuery","sendNotification","fixGpxInfo","getFixWorkoutGpxInfo","search","searchText","searchUsers","showAll","chooseSubmenu","menu","checkForEnter","componentWillUnmount","cleanupMemory","searchUsersResult","stats","adminHistory","lastStat","sm","data-menu","window","location","native","placeholder","linkstate","data-url","urlList","doSend","onclick","createdDate","messages","teamTypesCounts","Object","keys","teamAmbitionsCounts","workoutPlans","totalDistance","totalElevation","totalDuration","tracks","users","usersGarmin","usersStrava","usersProminentDisclosure","usersVeterinaryAllowed","usersInboxEmails","usersImperial","usersDarkmode","avgSpeed","avgTemperature","dogsHistoryAnimalchiropractor","dogsHistoryBodyScore","dogsHistoryClawClip","dogsHistoryDeworming","dogsHistoryDiarrhea","dogsHistoryFight","dogsHistoryFoodLeftover","dogsHistoryInjury","dogsHistoryMassage","dogsHistoryMating","dogsHistoryMaturity","dogsHistoryNewStraw","dogsHistoryOther","dogsHistorySick","dogsHistoryStoolProblem","dogsHistoryUnwantedMating","dogsHistoryUpdate","dogsHistoryVaccine","dogsHistoryVeterinarianVisit","dogsHistoryWeek","dogsHistoryWeight","dogsHistoryYear","dogsInjured","dogsMaturity","dogsMedication","dogsNoBreeding","dogsPregnant","dogsPuppy","dogsRelocation","dogsRetired","dogsSick","dogsSterilized","onKeyDown","KeyNumbers","userDeviceInfoPlatformCounts","userDeviceInfoManufacturerCounts","platformKeys","sort","manufacturerKeys","Elevation","meterToFeet","ad","newAd","Ad","insertAd","loadAd","resetAd","selectAd","adId","adContent","loadById","ads","viewCounts","clickCounts","graphFieldsLeft","graphLegendsLeft","graphFieldsRight","graphLegendsRight","page","active","section","Speed","kmtToMph","Images","handleAddImage","file","addToImages","files","uploadStatus","before","after","apiUrl","VeterinaryHistory","getVeterinaryHistory","toggleLine","idx","veterinaryHistory","vetLog","veterinary","searchResults","ip","ua","platform","os","browser","version","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","isImage","result","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax","children","byCount","a","b","byId","_id","secMap","Demographics","getDemographics","demographicsLanguage","demographicsDarkmode","demographicsImperial","demographicsVeterinary","demographicsFirebase","demographicsLocation","demographicsActivities","demographicsActivitiesPeriodes","demographicsTeamWorkouts","demographicsTeamFollowers","demographicsTeamDogs","storyViews","storyLikes","storyComments","storyDurationAvg","searchCount","darkmode","firebase","next","isNumber","isDefined","views","likes","comments","durationAvg","replace","Errors","loadErrors","getErrors","errors","data-idx","timestamp","stack"],"mappings":"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","file":"63.chunk.ad118.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass UserInvites extends Component {\n    async loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadResults();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadResults = async () => {\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getUserInviteResults();\n\t}\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n    render() {\n        const { adminStore, userStore } = this.props.stores;\n        const { inviteResults } = adminStore;\n        return (\n            <div class='col-12'>\n                <h5>Competition results</h5>\n                <div>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Invite Date</th>\n                                <th>Invitee</th>\n                                <th>Invited</th>\n                                <th>activities</th>\n                                <th>last activity</th>\n                                <th>teams</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {inviteResults && inviteResults.map(res => <>\n                                <tr>\n                                    <td>{util.isoDate(res.date)}</td>\n                                    <td>{res.user.email} ({res.user.activities})</td>\n                                    <td>\n                                        {res.invitedUser.email}<br />\n                                        <span class='ml-2 font-weight-lighter'>{res.invitedUser.username}</span>\n                                        <span class='ml-2 font-weight-lighter'>{res.invitedUser.firstname} {res.invitedUser.lastname}</span>\n                                    </td>\n                                    <td>{res.invitedUser.activities}</td>\n                                    <td>{res.invitedUser.lastActivityEpoch ? util.isoDate(res.invitedUser.lastActivityEpoch) : ''}</td>\n                                    <td>{res.teams && res.teams.map(t => <>\n                                        <span class='ml-3'>\n                                            {t.name}\n                                            <i class='fas fa-users text-muted ml-3' /> {t.members.length}\n                                            <i class='fas fa-dog text-muted ml-3' /> {t.dogs.length}\n                                            <i class='fas fa-running text-muted ml-3' /> {t.workouts.length}\n                                        </span><br />\n                                    </>)}</td>\n                                </tr>\n                            </>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserInvites;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Heatmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadHeatmap() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getHeatmap();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadHeatmap();\n\t}\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const { heatmap } = adminStore;\n\n        return (\n            <>\n                {/* {JSON.stringify(heatmap)} */}\n                <Map\n                    stores={this.props.stores}\n                    mapId={heatmap.length}\n                    heatmap={heatmap}\n                    minZoom={2}\n                    height={800}\n                />\n            </>\n        );\n    }\n}\n\nexport default Heatmap;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport MiniPageViewGraph from '../../components/admin/miniPageViewGraph';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass PageView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadPageView() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getPageViews();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadPageView();\n\t}\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const { pageViews, pageViewsKeys } = adminStore;\n\n        let graphFieldsLeftFrontpage = [];\n        let graphLegendsLeftFrontpage = [];\n        let graphFieldsLeftRace = [];\n        let graphLegendsLeftRace = [];\n        let graphFieldsLeftSearch = [];\n        let graphLegendsLeftSearch = [];\n        let graphFieldsLeftInbox = [];\n        let graphLegendsLeftInbox = [];\n        let graphFieldsLeftSettings = [];\n        let graphLegendsLeftSettings = [];\n        let graphFieldsLeftUsers = [];\n        let graphLegendsLeftUsers = [];\n        let graphFieldsLeftDogs = [];\n        let graphLegendsLeftDogs = [];\n        let graphFieldsLeftWorkouts = [];\n        let graphLegendsLeftWorkouts = [];\n        let graphFieldsLeftTeams = [];\n        let graphLegendsLeftTeams = [];\n        let graphFieldsLeftTracks = [];\n        let graphLegendsLeftTracks = [];\n\n        // const pages = Object.keys(pageViews);\n        const pages = pageViewsKeys.map(e => e.name);\n        const graphKey = `pageViews-${pages.length}`;\n        pages.forEach((key) => {\n            if (key.match(/^(frontpage|feed|news|dashboard)/)) {\n                graphFieldsLeftFrontpage.push(`pageViews.${key}`);\n                graphLegendsLeftFrontpage.push(`${key}`);\n            }\n            if (key.match(/^(app-races)/)) {\n                graphFieldsLeftRace.push(`pageViews.${key}`);\n                graphLegendsLeftRace.push(`${key}`);\n            }\n            if (key.match(/^(search)/)) {\n                graphFieldsLeftSearch.push(`pageViews.${key}`);\n                graphLegendsLeftSearch.push(`${key}`);\n            }\n            if (key.match(/^(inbox)/)) {\n                graphFieldsLeftInbox.push(`pageViews.${key}`);\n                graphLegendsLeftInbox.push(`${key}`);\n            }\n            if (key.match(/^(settings)/)) {\n                graphFieldsLeftSettings.push(`pageViews.${key}`);\n                graphLegendsLeftSettings.push(`${key}`);\n            }\n            if (key.match(/^(user|todo|admin)/)) {\n                graphFieldsLeftUsers.push(`pageViews.${key}`);\n                graphLegendsLeftUsers.push(`${key}`);\n            }\n            if (key.match(/^dog/)) {\n                graphFieldsLeftDogs.push(`pageViews.${key}`);\n                graphLegendsLeftDogs.push(`${key}`);\n            }\n            if (key.match(/^workout/)) {\n                graphFieldsLeftWorkouts.push(`pageViews.${key}`);\n                graphLegendsLeftWorkouts.push(`${key}`);\n            }\n            if (key.match(/^team/)) {\n                graphFieldsLeftTeams.push(`pageViews.${key}`);\n                graphLegendsLeftTeams.push(`${key}`);\n            }\n            if (key.match(/^track/)) {\n                graphFieldsLeftTracks.push(`pageViews.${key}`);\n                graphLegendsLeftTracks.push(`${key}`);\n            }\n        });\n\n        return (\n            <>\n                {/* <xmp>{JSON.stringify(pageViewsKeys, null, 4)}</xmp> */}\n                <div class='w-100 mb-3'>\n                    <h5>frontpage|feed|news|dashboard</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftFrontpage}\n                        legendLeft={graphLegendsLeftFrontpage}\n                        key={`frontpage-${graphKey}`}\n                    />\n                    <h5>app-races</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftRace}\n                        legendLeft={graphLegendsLeftRace}\n                        key={`race-${graphKey}`}\n                    />\n                    <h5>search</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftSearch}\n                        legendLeft={graphLegendsLeftSearch}\n                        key={`search-${graphKey}`}\n                    />\n                    <h5>inbox</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftInbox}\n                        legendLeft={graphLegendsLeftInbox}\n                        key={`inbox-${graphKey}`}\n                    />\n                    <h5>settings</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftSettings}\n                        legendLeft={graphLegendsLeftSettings}\n                        key={`settings-${graphKey}`}\n                    />\n                    <h5>user|todo|admin</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftUsers}\n                        legendLeft={graphLegendsLeftUsers}\n                        key={`users-${graphKey}`}\n                    />\n                    <h5>dog</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftDogs}\n                        legendLeft={graphLegendsLeftDogs}\n                        key={`dogs-${graphKey}`}\n                    />\n                    <h5>workout</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftWorkouts}\n                        legendLeft={graphLegendsLeftWorkouts}\n                        key={`workouts-${graphKey}`}\n                    />\n                    <h5>team</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftTeams}\n                        legendLeft={graphLegendsLeftTeams}\n                        key={`teams-${graphKey}`}\n                    />\n                    <h5>track</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftTracks}\n                        legendLeft={graphLegendsLeftTracks}\n                        key={`tracks-${graphKey}`}\n                    />\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default PageView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport Images from '../../components/form/images';\nimport MiniAdGraph from '../../components/admin/miniAdGraph';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n    \n    removeImage = async (e) => {\n        const { applicationStore } = this.props.stores;\n        const { application } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        applicationStore.removeImage({\n            id: application.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { application, field, updateField } = this.props;\n        updateField({ id: application.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, application, type = 'text', rows, field, title, icon, help, onInput, updateField } = this.props;\n        const value = application[field];\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {application.images && application.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={application} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${application.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='application.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type={type} class={`form-control ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        rows={rows}\n                        data-id={application.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${application.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='application.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'date') {\n            return (\n                <div class={`form-group ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input type={type} class={`form-control ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={util.isoDate(value, false, false, true)}\n                        data-id={application.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${application.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='application.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n\n        return (\n            <div class={`form-group ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type={type} class={`form-control ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={application.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${application.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='application.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { applicationStore } = this.props.stores;\n        // console.log('applicationStore.newApplication', applicationStore.newApplication);\n        applicationStore.updateObjectKeyValue('newApplication', field, value);\n    }\n\n    render() {\n        const { field, icon, title, help } = this.props;\n        const { applicationStore } = this.props.stores;\n        const { newApplication } = applicationStore;\n        return (\n            <div class='form-group'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    onInput={this.onInput}\n                    value={newApplication[field]}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass Application extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadApplication() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { applicationStore } = this.props.stores;\n\t\tawait applicationStore.load({ query: { showall: 1 }, addData: [] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tresetApplication() {\n        const { applicationStore } = this.props.stores;\n        applicationStore.updateKeyValue('newApplication', {});\n\t}\n\n    insertApplication = async () => {\n\t\tconst { applicationStore } = this.props.stores;\n\t\tconst { newApplication } = applicationStore;\n\t\tawait applicationStore.insert({ ...newApplication });\n        await applicationStore.load({ query: { showall: 1 } });\n        this.resetApplicaton();\n\t}\n\n    selectApplication = async (e) => {\n        const applicationId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { applicationStore } = this.props.stores;\n        await applicationStore.load(applicationId);\n    }\n\n    resetApplication = async () => {\n        const { applicationStore } = this.props.stores;\n        applicationStore.updateKeyValue('application', {});\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { applicationStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { application } = applicationStore;\n        if (field === 'images') {\n            if (Array.isArray(application.images) && Array.isArray(value)) {\n                localObjectValue = [...application.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            applicationStore.updateObjectKeyValue('newApplication', field, value);\n        } else {\n            applicationStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { applicationStore } = this.props.stores;\n        await applicationStore.saveField(id, field, value);\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadApplication();\n\t}\n\n    render() {\n        const { applicationStore, appState } = this.props.stores;\n        const { application = {}, applications = [], saved } = applicationStore;\n        const { apiServer } = appState;\n        return (\n            <>\n                <div class='w-100 mb-3'>\n                    <div class='row'>\n                        <div class='col-12 mb-0 position-relative'>\n                            {applications && applications.length > 0 && <>\n                                <table class='table table-sm table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <th>id</th>\n                                            <th>title</th>\n                                            <th>returnUrl</th>\n                                            <th>email</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {applications.map(application => (\n                                            <tr data-id={application.id} onClick={this.selectApplication}>\n                                                <td>{application.id}</td>\n                                                <td>{application.title}</td>\n                                                <td>{application.returnUrl}</td>\n                                                <td>{application.email}</td>\n                                                <td>{apiServer}/#/grant-access?returnUrl={application.returnUrl}&id={application.id}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </>}\n                        </div>\n                    </div>\n\n                    <div class='row'>\n                        {(!application || !application.id) && <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-5 mb-0 position-relative'>\n                            <button class='btn btn-danger float-right' onClick={this.resetApplication}><i class='fas fa-times' /></button>\n\n                            <h5>New application</h5>\n                            <InputNew stores={this.props.stores} field='title' icon='fas fa-heading'\n                                title={<Text id='application.title'>Tittel</Text>}\n                                help={<Text id='application.title-help'>Tittel på denne annonsen.</Text>} />\n                            <button type='button' class='btn btn-primary'\n                                onClick={this.insertApplication}\n                            >\n                                <Text id='application.save'>Save new application</Text>\n                            </button>\n                        </div>}\n                    </div>\n\n                    {application && application.id && <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-5 mb-0 position-relative'>\n                            <button class='btn btn-danger float-right' onClick={this.resetApplication}><i class='fas fa-times' /></button>\n\n                            <h3>How to</h3>\n                            <ol>\n                                <li>\n                                    Have your application point to this url: {apiServer}/#/grant-access?returnUrl={application.returnUrl}&id={application.id}\n                                </li>\n                            </ol>\n\n                            <h5>Endre annonse: \"{application.title}\"</h5>\n\n                            <Input saved={saved} application={application} field='title' icon='fas fa-heading'\n                                title={<Text id='application.title'>Title</Text>}\n                                help={<Text id='application.title-help'>Title of this application story</Text>}\n                                onInput={this.updateField} />\n                            \n                            <Input saved={saved} application={application} field='returnUrl' icon='fas fa-heading'\n                                title={<Text id='application.returnUrl'>Return URL</Text>}\n                                help={<Text id='application.returnUrl-help'>Application returnUrl</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} application={application} field='email' icon='fas fa-heading'\n                                title={<Text id='application.email'>Email</Text>}\n                                help={<Text id='application.email-help'>Application email</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} application={application} field='body' icon='fas fa-quote-right'\n                                type='textarea' rows={5}\n                                title={<Text id='application.body'>Body</Text>}\n                                help={<Text id='application.body-help'>Body of this application story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} application={application} field='offline' icon='fas fa-heading'\n                                title={<Text id='application.offline'>Offline</Text>}\n                                help={<Text id='application.offline-help'>Application offline</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} application={application} field='image' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='application.photo'>Bilder</Text>} \n                                help={<Text id='application.photo-help'>Images for this application story.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n                        </div>\n                    </div>}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Application;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction getIcon(type) {\n\tswitch (type) {\n\t\tcase 'dogHistory':\n\t\t\treturn 'fas fa-rss';\n\t\tcase 'dogStatus':\n\t\t\treturn 'fas fa-dog';\n\t\tcase 'dogSpecialNeeds':\n\t\t\treturn 'fas fa-dog';\n\t\tcase 'dogImage':\n\t\t\treturn 'fas fa-image';\n\t\tcase 'dog':\n\t\t\treturn 'fas fa-dog';\n\t\tcase 'dogChanged':\n\t\t\treturn 'fas fa-dog';\n\t\tcase 'track':\n\t\t\treturn 'fas fa-map-marked-alt';\n\t\tcase 'trackChanged':\n\t\t\treturn 'fas fa-map-marked-alt';\n\t\tcase 'workoutPlan':\n\t\t\treturn 'fas fa-calendar-alt';\n\t\tcase 'workout':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'newGarminWorkout':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'newStravaWorkout':\n\t\t\treturn 'fab fa-strava';\n\t\tcase 'workoutChanged':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'teamMember':\n\t\t\treturn 'fas fa-user';\n\t\tcase 'team':\n\t\t\treturn 'fas fa-users';\n\n        case 'newsLiked':\n            return 'fas fa-thumbs-up';\n        case 'newsCommentLiked':\n        case 'newsCommentedLiked':\n            return 'fas fa-thumbs-up';\n        case 'newsCommentReplyLiked':\n        case 'newsCommentedReplyLiked':\n            return 'fas fa-thumbs-up'\n        case 'newsComment':\n        case 'newsCommented':\n            return 'fas fa-comment';\n        case 'newsCommentReply':\n        case 'newsCommentedReply':\n            return 'fas fa-comments';\n\n        case 'trackLiked':\n            return 'fas fa-thumbs-up';\n        case 'trackCommentLiked':\n        case 'trackCommentedLiked':\n            return 'fas fa-thumbs-up';\n        case 'trackCommentReplyLiked':\n        case 'trackCommentedReplyLiked':\n            return 'fas fa-thumbs-up'\n        case 'trackComment':\n        case 'trackCommented':\n            return 'fas fa-comment';\n        case 'trackCommentReply':\n        case 'trackCommentedReply':\n            return 'fas fa-comments';\n\n        case 'workoutComment':\n        case 'workoutCommented':\n            return 'fas fa-comment';\n        case 'workoutCommentReply':\n        case 'workoutCommentedReply':\n            return 'fas fa-comments'\n        case 'workoutLiked':\n            return 'fas fa-thumbs-up';\n        case 'workoutCommentLiked':\n        case 'workoutCommentedLiked':\n            return 'fas fa-thumbs-up';\n        case 'workoutCommentReplyLiked':\n        case 'workoutCommentedReplyLiked':\n            return 'fas fa-thumbs-up'; \n\n        case 'story':\n            return 'fas fa-rss';\n        case 'storyComment':\n        case 'storyCommented':\n            return 'fas fa-comment';\n        case 'storyCommentReply':\n        case 'storyCommentedReply':\n            return 'fas fa-comments'\n        case 'storyLiked':\n            return 'fas fa-thumbs-up';\n        case 'storyCommentLiked':\n        case 'storyCommentedLiked':\n            return 'fas fa-thumbs-up';\n        case 'storyCommentReplyLiked':\n        case 'storyCommentedReplyLiked':\n            return 'fas fa-thumbs-up'; \n\n        case 'teamFollowRequest':\n            return 'fas fa-project-diagram';\n        case 'happyBirthday':\n            return 'fas fa-birthday-cake';\n\n        case 'trophy':\n            return 'fas fa-trophy';\n\t\tdefault:\n\t\t\treturn 'fas fa-rss';\n\t}\n}\n\n@observer\nclass AdminNotification extends Component {\n    confirmRequest = () => {\n        const { notification } = this.props;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: notification.team,\n            user: notification.addedBy.id,\n        });\n    }\n\n    deleteRequest = () => {\n        const { notification } = this.props;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: notification.team,\n            user: notification.addedBy.id,\n        });\n    }\n\n    render() {\n        const { notification, showDate } = this.props;\n        const { addedBy: user  = {} } = notification;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        const dogIds = [];\n        const dogs = [];\n        if (notification.grouped) {\n            notification.grouped.forEach((e) => {\n                if (e.dog && e.dog.id && dogIds.indexOf(e.dog.id) === -1) {\n                    dogs.push(e.dog);\n                    dogIds.push(e.dog.id);\n                }\n            });\n        }\n        const hasMultiElements = dogs.length > 0;\n        const isDimmed = notification.read && notification.type !== 'teamFollowRequest';\n        const isLinked =!hasMultiElements && notification.type !== 'teamFollowRequest';\n        return (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-2 position-relative' style={`opacity: ${isDimmed ? 0.6: 1};`}>\n                <div \n                    class={`text-center border rounded-circle imageRoundedSmall imageRounded`} \n                    style={`padding-top: 7px; ${userImage ? `background-image: url(\"${userImage.s3ThumbLink}\"); background-size: cover;` : ''}`}\n                >\n                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                </div>\n\n                <div class='flex-grow-1 pl-3 pr-2'>\n                    <span class='float-right ml-2'>\n                        {notification.type && <span class='mr-2' style='font-size: 2.0em;'><i class={getIcon(notification.type)} /></span>}\n                    </span>\n                    <div style='font-size: 0.8em;'>\n                        {isLinked ? <a href={notification.url}>\n                            {notification.message}{notification.title ? `: ${notification.title}` : ''}\n                        </a> : <>\n                            {notification.message}\n                        </>}\n                        {notification.type === 'teamFollowRequest' && <>\n                            <button class='btn btn-sm btn-danger float-right' onClick={this.deleteRequest}>\n                                <Text id='notifications.delete'>Del</Text>\n                            </button>\n                            <button class='btn btn-sm btn-success float-right mr-2' onClick={this.confirmRequest}>\n                                <Text id='notifications.confirm'>Confirm</Text>\n                            </button>\n                        </>}\n                    </div>\n                    <small class='text-muted'>\n                        {notification.date && <span onClick={this.toggleDate} class='mr-2'>\n                            {showDate ? util.formatDate(notification.date, { locale: 'no-NB' }) : util.formatDistance(notification.date, new Date(), { locale: 'no-NB' })}\n                        </span>}\n                        <i class='far fa-user' /> {displayName}\n                        <br />\n                        {dogs && dogs.map(d => <span class='mr-2'>\n                            <a href={`/dogs/${d.id}`}><i class='fas fa-dog' /> {d.name}</a>\n                        </span>)}\n                        <br />\n                    </small>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdminNotification;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Competition extends Component {\n    async loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadResults();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadResults = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        await workoutStore.workoutResults();\n\t}\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n    render() {\n        const { workoutStore, userStore } = this.props.stores;\n        const { competitionResults, competitionAllResults, competitionTeams } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        return (\n            <div class='col-12'>\n                <h5>Competition results</h5>\n                <div>\n                    <table class='table table-striped table-sm'>\n                        <tbody>\n                            {competitionResults.map(res => <>\n                            <tr>\n                                <th>Date</th>\n                                <th>Type</th>\n                                <th>Ambitions</th>\n                                <th>Count</th>\n                                <th>Avg dogs</th>\n                                <th>total km</th>\n                                <th>km</th>\n                                <th>elevation</th>\n                                <th>duration</th>\n                                <th>speedAvg</th>\n                            </tr>\n                                <tr>\n                                    <td class='font-weight-bold'>{res.year}-{res.month}</td>\n                                    <td class='font-weight-bold'>{userStore.findTeamType({ type: res.type, language })} ({res.type})</td>\n                                    <td class='font-weight-bold'>{userStore.findTeamAmbition({ ambition: res.ambitions, language })} ({res.ambitions})</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.count, 1)}</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.avgDogs, 0)}</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.totalDistanceKm, 1)} km</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.distanceKm, 1)} km</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.elevation, 0)} m</td>\n                                    <td class='text-right font-weight-bold'>{util.secToHms(res.duration)}</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.speedAvg, 1)} km/t</td>\n                                </tr>\n                                <tr>\n                                    <td colspan='10' class='mb-5 pb-5 pt-2'>\n                                        <small>\n                                        <table class='table table-striped table-sm'>\n                                            <thead>\n                                                <tr>\n                                                    <th>Team</th>\n                                                    <th>Email</th>\n                                                    <th>Place</th>\n                                                    <th>Country</th>\n                                                    <th>Count</th>\n                                                    <th>Avg dogs</th>\n                                                    <th>total km</th>\n                                                    <th>km</th>\n                                                    <th>elevation</th>\n                                                    <th>duration</th>\n                                                    <th>speedAvg</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {/* {\n                                                        \"team\":773,\n                                                        \"type\":1,\n                                                        \"ambitions\":1,\n                                                        \"year\":2020,\n                                                        \"month\":11,\n                                                        \"count\":2,\n                                                        \"distanceKm\":14.1,\n                                                        \"totalDistanceKm\":28.2,\n                                                        \"diffTotalDistanceKm\":18.22078,\n                                                        \"elevation\":0,\n                                                        \"duration\":3000,\n                                                        \"speedAvg\":null,\n                                                        \"avgDogs\":2\n                                                    },\n                                                */}\n                                                {competitionAllResults.filter(t => t.type === res.type && t.ambitions === res.ambitions).map((line) => {\n                                                    const team = competitionTeams.find(e => e.id === line.team);\n                                                    return (\n                                                        <tr>\n                                                            <td>{line.team}: {team.name}</td>\n                                                            <td>{team.email}</td>\n                                                            <td>{team.postalcode} {team.place}</td>\n                                                            <td>{team.country}</td>\n                                                            <td class='text-right'>{util.format(line.count, 0)}</td>\n                                                            <td class='text-right'>{util.format(line.avgDogs, 1)}</td>\n                                                            <td class='text-right'>\n                                                                {util.format(line.totalDistanceKm, 1)} km\n                                                                <span class={`ml-2 text-${res.totalDistanceKm > line.totalDistanceKm ? 'danger' : 'success'}`}>\n                                                                    {res.totalDistanceKm > line.totalDistanceKm ? '-' : '+'}{util.format(line.diffTotalDistanceKm, 1)}\n                                                                </span>\n                                                            </td>\n                                                            <td class='text-right'>{util.format(line.distanceKm, 1)} km</td>\n                                                            <td class='text-right'>{util.format(line.elevation, 0)} m</td>\n                                                            <td class='text-right'>{util.secToHms(line.duration)}</td>\n                                                            <td class='text-right'>{util.format(line.speedAvg, 1)} km/t</td>\n                                                        </tr>\n                                                    );\n                                                })}\n                                            </tbody>\n                                        </table>\n                                        </small>\n                                    </td>\n                                </tr>\n                            </>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Competition;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass AdminGraph extends Component {\n    render() {\n        const {\n            fieldsLeft = [], \n            legendLeft = [], \n            fieldsRight = [], \n            legendRight = [], \n            showDebug,\n            xTicksVal = val => util.isoDate(val),\n            xTicksCnt = 5,\n            yTicksLeftVal = val => val,\n            yTicksRightVal = val => val,\n        } = this.props;\n        const { adminStore } = this.props.stores;\n        const dataLeft = fieldsLeft.map(e => util.getNestedValue(adminStore, e) || []);\n        const dataRight = fieldsRight.map(e => util.getNestedValue(adminStore, e) || []);\n\n        const firstData = dataLeft && dataLeft[0] ? dataLeft[0] : [];\n        const xTicks = [];\n        if (firstData.length) {\n            const partSize = Math.ceil(firstData.length / (xTicksCnt - 1));\n            const parts = Math.floor(firstData.length / partSize);\n            if (showDebug) {\n                console.log({ firstData, parts, partSize });\n            }\n            for (let i = 0, l = firstData.length; i < l; i += partSize) {\n                xTicks.push(firstData[i].epoch);\n            }\n            xTicks.push(firstData[firstData.length - 1].epoch);\n        }\n        return (\n            <>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={2000}\n                        height={300}\n                        showXTicks={1}\n                        xTicksVal={xTicksVal}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        paddingLeft={70}\n                        yTicksLeftWidth={'70px'}\n                        lineFromXzero={false}\n                        lineFromXmax={false}\n                        // xTicksLink={'/workouts/week/'}\n\n                        dataLeft={dataLeft}\n                        legendLeft={legendLeft}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        // yTicksLeftPostfix={'km'}\n                        // unitLeft={['km', 'km', 'km']}\n                        yTicksLeftVal={yTicksLeftVal}\n                        avgWindowLeft={[0, 0, 0, 0, 0, 0, 0]}\n                        smoothLeft={[1, 1, 1, 1, 1, 1, 1]}\n\n\n                        dataRight={dataRight}\n                        legendRight={legendRight}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                        // yTicksRightPostfix={'m'}\n                        // unitRight={['m', 'm']}\n                        yTicksRightVal={yTicksRightVal}\n                        avgWindowRight={[0, 0, 0, 0, 0, 0, 0]}\n                        smoothRight={[1, 1, 1, 1, 1, 1, 1]}\n\n                        legendFontSize={'18px'}\n                        legendLineHeight={18}\n\n                        ticksFontSize={'15px'}\n\n                        scrollToRight={true}\n\n                        // marker={week}\n                    />\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default AdminGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Development extends Component {\n    setApiServer = (e) => {\n\t\tconst { apiserver } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.setApiServer(apiserver);\n    }\n\n    render() {\n        const { showError = {} } = this.state;\n        const { appState } = this.props.stores;\n        const { apiServer } = appState;\n        return (\n            <div class='col-12'>\n                <h5>API Server: {apiServer}</h5>\n\n                <button\n                    class={`btn btn-block btn-${apiServer === 'https://themusher.app' ? '' : 'outline-'}success`}\n                    onClick={this.setApiServer}\n                    data-apiserver='https://themusher.app'\n                >Prod</button>\n\n                <button\n                    class={`btn btn-block btn-${apiServer === 'https://dev.themusher.app' ? '' : 'outline-'}success`}\n                    onClick={this.setApiServer}\n                    data-apiserver='https://dev.themusher.app'\n                >Dev</button>\n\n                <button\n                    class={`btn btn-block btn-${apiServer === 'http://localhost:8888' ? '' : 'outline-'}success`}\n                    onClick={this.setApiServer}\n                    data-apiserver='http://localhost:8888'\n                >localhost:8888</button>\n            </div>\n        );\n    }\n}\n\nexport default Development;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.updateTimer = {};\n    }\n    \n    removeUser = async (e) => {\n        let id =  e.target.dataset.id;\n        let email =  e.target.dataset.email;\n        let team =  e.target.dataset.team;\n        if (!id && e.target.parentNode) {\n            id =  e.target.parentNode.dataset.id;\n            email =  e.target.parentNode.dataset.email;\n            team =  e.target.parentNode.dataset.team;\n\t\t}\n        console.log('id, email, team', id, email, team);\n        const { teamStore } = this.props.stores;\n        await teamStore.removeMember(team, { id, email });\n    }\n\n    adminUpdateUser = (e) => {\n        const { email } = e.target.closest('input').dataset;\n        const { name } = e.target;\n        const field = `${email}-${name}`;\n\n        clearTimeout(this.updateTimer[field]);\n        this.updateTimer[field] = setTimeout(() => {\n            this.doAdminUpdateUser(e);\n        }, 500);\n    }\n\n    doAdminUpdateUser = async (e) => {\n        const { email } = e.target.closest('input').dataset;\n        const { name, value } = e.target;\n\n        // console.log({ email, name, value });\n\t\tconst { userStore } = this.props.stores;\n        await userStore.adminUpdateUser(email, { [name]: value });\n    }\n\n    simulateUser = (e) => {\n        const { email } = e.target.closest('button').dataset;\n        const { userStore } = this.props.stores;\n\t\tuserStore.getSimulateUser(email);\n    }\n\n    render() {\n        const { user, team = {} } = this.props;\n\t\tconst { userStore, teamStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const teams = userStore.findTeams(user.teams);\n        const summary = teamStore.findMusherSummary(user.id, team.id) || {};\n        const isTeamAdmin = team.user === currentUser.id;\n        const image = mu.getImage({ user, team });\n        const name = mu.displayName(user);\n\n        // const workoutSummary = dogStore.findWorkoutSummary(dog.id, 2020) || {};\n        // {'0':{'year':2020,'dog':16,'count':1,'distanceKm':9.9,'elevation':202,'duration':0,'speedAvg':0}}\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    <div class='col-12 d-flex mb-0 position-relative'>\n                        {/* {JSON.stringify(dog, null, 4)} */}\n                        <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url('${image}'); background-size: cover;` : ''}>\n                            {!image && <i class='fas fa-user text-muted mt-3' style='font-size: 40px;' />}\n                        </div>\n                        <div class='flex-grow-1 pl-3 pr-2'>\n                            {/* <span class='float-right'>\n                                {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                            </span> */}\n                            \n                            <h5>{name}</h5>\n                            <div>\n                                <small class='text-muted'>\n                                    <div class='d-flex justify-content-left'>\n                                        {user.cellphone && <div class='mr-2'><i class='fas fa-mobile-alt' /> {user.cellphone}</div>}\n                                        {user.email && <div class='mr-2'><i class='fas fa-envelope ml-3' /> {user.email}</div>}\n                                        {user.url && <div class='mr-2'><a href={mu.asUrl(user.url)} target='_blank' rel='noreferrer'><i class='fas fa-link' /></a></div>}\n                                        {user.facebook && <div class='mr-2'><a href={mu.asFacebookLink(user.facebook)} target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a></div>}\n                                        {user.instagram && <div class='mr-2'><a href={mu.asInstagramLink(user.instagram)} target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a></div>}\n                                        {user.snapchat && <div class='mr-2'><a href={mu.asSnapchatLink(user.snapchat)} target='_blank' rel='noreferrer'><i class='fab fa-snapchat' /></a></div>}\n                                    </div>\n                                </small>\n                            </div>\n                            {isAdmin && <>\n                                <button class='btn btn-block btn-success' onClick={this.simulateUser} data-email={user.email}>\n                                    Simulate user\n                                </button>\n\n                                <small>\n                                    <details>\n                                        <summary>settings</summary>\n                                        <xmp>{JSON.stringify(user.settings, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>subscription</summary>\n                                        <xmp>{JSON.stringify(user.subscription, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>deviceInfo</summary>\n                                        <xmp>{JSON.stringify(user.deviceInfo, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>subscription</summary>\n                                        <xmp>{JSON.stringify(user.subscription, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>notifications</summary>\n                                        <xmp>{JSON.stringify(user.notifications, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>notificationTopics</summary>\n                                        <xmp>{JSON.stringify(user.notificationTopics, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>applications</summary>\n                                        <xmp>{JSON.stringify(user.applications, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>shadowTags</summary>\n                                        <xmp>{JSON.stringify(user.shadowTags, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>garmin</summary>\n                                        <xmp>{JSON.stringify(user.garmin, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>strava</summary>\n                                        <xmp>{JSON.stringify(user.strava, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>currentLocationGeocode</summary>\n                                        <xmp>{JSON.stringify(user.currentLocationGeocode, null, 4)}</xmp>\n                                    </details>\n                                    lastActivityEpoch: {util.isoDate(user.lastActivityEpoch)}<br />\n                                    activities: {util.format(user.activities)}<br />\n\n                                    {user.settings && <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.settings.veterinaryAllowed ? 0 : 1} id={`settings.veterinaryAllowed-${user.id}`} name='settings.veterinaryAllowed' checked={user.settings.veterinaryAllowed ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`settings.veterinaryAllowed-${user.id}`}>\n                                            settings.veterinaryAllowed\n                                        </label>\n                                    </div>}\n                                    <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.twoFactorLogin ? 0 : 1} id={`twoFactorLogin-${user.id}`} name='twoFactorLogin' checked={user.twoFactorLogin ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`twoFactorLogin-${user.id}`}>\n                                            twoFactorLogin\n                                        </label>\n                                    </div>\n                                    <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.isVeterinary ? 0 : 1} id={`isVeterinary-${user.id}`} name='isVeterinary' checked={user.isVeterinary ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`isVeterinary-${user.id}`}>\n                                            isVeterinary\n                                        </label>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`cellphone-${user.id}`}>cellphone</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`cellphone-${user.id}`} name='cellphone' class='form-control' value={user.cellphone} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`firstname-${user.id}`}>firstname</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`firstname-${user.id}`} name='firstname' class='form-control' value={user.firstname} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`lastname-${user.id}`}>lastname</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`lastname-${user.id}`} name='lastname' class='form-control' value={user.lastname} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                </small>\n                            </>}\n                            {user.teams && <>\n                                {teams.map(team => (\n                                    <span class='badge badge-pill badge-info mr-2'>{team.name}</span>\n                                ))}<br />\n                            </>}\n                            {team.id && summary && <>\n                                <small class='text-muted'>\n                                    Total:\n                                    {summary && <span class='ml-2'><i class='fas fa-road' /> <Distance stores={this.props.stores} value={summary.distanceKm} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-mountain' /> <Elevation stores={this.props.stores} value={summary.elevation} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-clock' /> {util.secToHms(summary.duration || 0)}</span>}\n                                </small><br />\n                                <small class='text-muted'>\n                                    Avg: \n                                    {summary && <span class='ml-2'><i class='fas fa-road' /> <Distance stores={this.props.stores} value={summary.avgDistance} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-mountain' /> <Elevation stores={this.props.stores} value={summary.avgElevation} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-clock' /> {util.secToHms(summary.avgDuration || 0)}</span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-tachometer-alt' /> <Speed stores={this.props.stores} value={summary.speedAvg} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-dog' /> {util.format(summary.avgDogs, 1)}</span>}\n                                </small>\n                            </>}\n                        </div>\n                        <div>\n                            {isTeamAdmin && user.id !== currentUser.id && <button class='btn btn-sm btn-danger'\n                                onClick={this.removeUser}\n                                data-email={user.email}\n                                data-id={user.id}\n                                data-team={team.id}\n                            ><i class='fas fa-ban' /></button>}\n                            {!isTeamAdmin && user.id === currentUser.id && <button class='btn btn-sm btn-secondary'\n                                onClick={this.removeUser}\n                                data-email={user.email}\n                                data-id={user.id}\n                                data-team={team.id}\n                            ><i class='fas fa-sign-out-alt' />{team.id}</button>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default User;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Development extends Component {\n    setApiServer = (e) => {\n\t\tconst { apiserver } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.setApiServer(apiserver);\n    }\n\n    copyToClipboard = (e) => {\n        this.textArea.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the whole text area selected.\n        e.target.focus();\n        this.setState({ copySuccess: 'Copied!' });\n    };\n\n    render() {\n        const { showError = {}, copySuccess } = this.state;\n        const { appState } = this.props.stores;\n        const { jwtToken, userEmail } = appState;\n        return (\n            <div class='col-12'>\n                <h5>JWT Token: {userEmail}</h5>\n\n                <textarea\n                    class='form-control'\n                    value={jwtToken}\n                    rows={5}\n                    onClick={this.copyToClipboard}\n                    ref={c => this.textArea = c}\n                />\n                <small id='passwordHelpBlock' class='form-text text-success'>\n                    {copySuccess}\n                </small>\n\n            </div>\n        );\n    }\n}\n\nexport default Development;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport mu from '../../lib/musher-util';\n\nimport AdminGraph from './graph';\n\n@observer\nclass WeeklyTotals extends Component {\n    render() {\n        const { adminStore } = this.props.stores;\n        const { submenu } = this.props;\n        const { totalKey, totalUsersWeekAcc, totalUsersWeekNumber, totalUsersMonthNumber } = adminStore;\n        let totalWeek = 0;\n        let totalMonth = 0;\n\n        if (submenu === 'weeklyTotal') {\n            return (\n                <>\n                    <h4>Weekly: Accumulated Total Users & Dogs</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-acc-total-users-dogs-${totalKey}`}\n                        fieldsLeft={['totalUsersWeekAcc']}\n                        legendLeft={['totalUsersWeekAcc']}\n                        fieldsRight={['totalDogsWeekAcc']}\n                        legendRight={['totalDogsWeekAcc']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    {/* <xmp>{JSON.stringify(totalUsersWeekNumber, null, 4)}</xmp> */}\n\n                    <table class='table table-sm table-striped'>\n                        <thead>\n                            <tr>\n                                <th>Year</th>\n                                <th>Month</th>\n                                <th>This month</th>\n                                <th>Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {totalUsersMonthNumber && totalUsersMonthNumber.map((stat) => {\n                                totalMonth += stat.count;\n                                return (<tr>\n                                    <td>{stat.year}</td>\n                                    <td>{stat.month}</td>\n                                    <td>{stat.count}</td>\n                                    <td>{totalMonth}</td>\n                                </tr>);\n                            })}\n                        </tbody>\n                    </table>\n\n                    <table class='table table-sm table-striped'>\n                        <thead>\n                            <tr>\n                                <th>Month</th>\n                                <th>Year Week</th>\n                                <th>This week</th>\n                                <th>Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {totalUsersWeekNumber && totalUsersWeekNumber.map((stat) => {\n                                totalWeek += stat.count;\n                                return (<tr>\n                                    <td>{stat.month}</td>\n                                    <td>{stat.year} - {stat.week}</td>\n                                    <td>{stat.count}</td>\n                                    <td>{totalWeek}</td>\n                                </tr>);\n                            })}\n                        </tbody>\n                    </table>\n\n                    <h4>Weekly: Total Users & Dogs</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-users-dogs-${totalKey}`}\n                        fieldsLeft={['totalUsersWeek']}\n                        legendLeft={['totalUsersWeek']}\n                        fieldsRight={['totalDogsWeek']}\n                        legendRight={['totalDogsWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Total Workouts & avg Teamsize</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-workouts-teamsize-${totalKey}`}\n                        fieldsLeft={['totalWorkoutsWeek']}\n                        legendLeft={['totalWorkoutsWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Total Distance & Ascend</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-distance-ascend-${totalKey}`}\n                        fieldsLeft={['totalDistanceWeek']}\n                        legendLeft={['totalDistanceWeek']}\n                        fieldsRight={['totalAscendWeek']}\n                        legendRight={['totalAscendWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Total Duration & Dogs running</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-duration-dogs-running-${totalKey}`}\n                        fieldsLeft={['totalDurationWeek']}\n                        legendLeft={['totalDurationWeek']}\n                        yTicksLeftVal={val => util.secToHms(val, true)}\n                        fieldsRight={['totalDogsrunningWeek']}\n                        legendRight={['totalDogsrunningWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                </>\n            );\n        }\n    }\n}\n\nexport default WeeklyTotals;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport mu from '../../lib/musher-util';\n\nimport AdminGraph from './graph';\n\n@observer\nclass WeeklyTotals extends Component {\n    render() {\n        const { adminStore } = this.props.stores;\n        const { submenu } = this.props;\n        const { avgKey } = adminStore;\n\n        if (submenu === 'weeklyAvg') {\n            return (\n                <>\n                    <h4>Weekly: Avg Distance, Speed, Ascend</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-speed-ascend-${avgKey}`}\n                        fieldsLeft={['avgDistanceWeek', 'avgSpeedWeek' ]}\n                        legendLeft={['avgDistanceWeek', 'avgSpeedWeek' ]}\n                        fieldsRight={['avgAscendWeek']}\n                        legendRight={['avgAscendWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n\n                    <h4>Weekly: Avg Teamsize</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-workouts-teamsize-${avgKey}`}\n                        fieldsLeft={['avgTeamsizeWeek']}\n                        legendLeft={['avgTeamsizeWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n\n                    <h4>Weekly: Avg LoadIndex for types</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-loadindex-teamtype-${avgKey}`}\n                        fieldsLeft={['avgLoadIndexWeek.1', 'avgLoadIndexWeek.2', 'avgLoadIndexWeek.3', 'avgLoadIndexWeek.4', 'avgLoadIndexWeek.5', 'avgLoadIndexWeek.n/a']}\n                        legendLeft={['Tur', 'Turistkjøring', 'Sprint', 'Mellomdistanse', 'Langdistanse', 'Ikke valgt']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Duration & RealDuration</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-duration-realduration-${avgKey}`}\n                        fieldsLeft={['avgRealDurationWeek', 'avgDurationWeek']}\n                        legendLeft={['avgRealDurationWeek', 'avgDurationWeek']}\n                        yTicksLeftVal={val => util.secToHms(val, true)}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for types</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-${avgKey}`}\n                        fieldsLeft={['avgDistanceTeamTypeWeek.1', 'avgDistanceTeamTypeWeek.2', 'avgDistanceTeamTypeWeek.3', 'avgDistanceTeamTypeWeek.4', 'avgDistanceTeamTypeWeek.5', 'avgDistanceTeamTypeWeek.n/a']}\n                        legendLeft={['Tur', 'Turistkjøring', 'Sprint', 'Mellomdistanse', 'Langdistanse', 'Ikke valgt']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for ambitions</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-ambnitions-${avgKey}`}\n                        fieldsLeft={['avgDistanceTeamAmbitionsWeek.1', 'avgDistanceTeamAmbitionsWeek.2', 'avgDistanceTeamAmbitionsWeek.3', 'avgDistanceTeamAmbitionsWeek.4', 'avgDistanceTeamAmbitionsWeek.5', 'avgDistanceTeamAmbitionsWeek.n/a']}\n                        legendLeft={['Ingen', 'Glad amatør', 'Amatør', 'Seriøs amatør', 'Proff', 'Ikke valgt']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n\n                    <h4>Weekly: Avg Distance for type-ambitions: Tur</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-1-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.1-1',\n                            'avgDistanceTeamTypeAmbitionWeek.1-2',\n                            'avgDistanceTeamTypeAmbitionWeek.1-3',\n                            'avgDistanceTeamTypeAmbitionWeek.1-4',\n                            'avgDistanceTeamTypeAmbitionWeek.1-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for type-ambitions: Turist</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-2-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.2-1',\n                            'avgDistanceTeamTypeAmbitionWeek.2-2',\n                            'avgDistanceTeamTypeAmbitionWeek.2-3',\n                            'avgDistanceTeamTypeAmbitionWeek.2-4',\n                            'avgDistanceTeamTypeAmbitionWeek.2-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for type-ambitions: Sprint</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-3-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.3-1',\n                            'avgDistanceTeamTypeAmbitionWeek.3-2',\n                            'avgDistanceTeamTypeAmbitionWeek.3-3',\n                            'avgDistanceTeamTypeAmbitionWeek.3-4',\n                            'avgDistanceTeamTypeAmbitionWeek.3-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for type-ambitions: MD</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-4-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.4-1',\n                            'avgDistanceTeamTypeAmbitionWeek.4-2',\n                            'avgDistanceTeamTypeAmbitionWeek.4-3',\n                            'avgDistanceTeamTypeAmbitionWeek.4-4',\n                            'avgDistanceTeamTypeAmbitionWeek.4-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for type-ambitions: LD</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-5-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.5-1',\n                            'avgDistanceTeamTypeAmbitionWeek.5-2',\n                            'avgDistanceTeamTypeAmbitionWeek.5-3',\n                            'avgDistanceTeamTypeAmbitionWeek.5-4',\n                            'avgDistanceTeamTypeAmbitionWeek.5-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n\n                </>\n            );\n        }\n    }\n}\n\nexport default WeeklyTotals;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass MiniAdGraph extends Component {\n    render() {\n        const {\n            fieldsLeft = [], \n            legendLeft = [], \n            fieldsRight = [], \n            legendRight = [], \n            showDebug,\n            xTicksVal = val => util.isoDate(val, false, false, true),\n            xTicksCnt = 5,\n            yTicksLeftVal = val => val,\n            yTicksRightVal = val => val,\n        } = this.props;\n        const { adStore } = this.props.stores;\n        const dataLeft = fieldsLeft.map(e => util.getNestedValue(adStore, e) || []);\n        const dataRight = fieldsRight.map(e => util.getNestedValue(adStore, e) || []);\n\n        const firstData = dataLeft && dataLeft[0] ? dataLeft[0] : [];\n        const xTicks = [];\n        if (firstData.length) {\n            const partSize = Math.ceil(firstData.length / (xTicksCnt - 1));\n            const parts = Math.floor(firstData.length / partSize);\n            if (showDebug) {\n                console.log({ firstData, parts, partSize });\n            }\n            for (let i = 0, l = firstData.length; i < l; i += partSize) {\n                xTicks.push(firstData[i].epoch);\n            }\n            xTicks.push(firstData[firstData.length - 1].epoch);\n        }\n        return (\n            <>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1500}\n                        height={400}\n                        showXTicks={1}\n                        xTicksVal={xTicksVal}\n                        xTicks={xTicks}\n                        paddingTop={50}\n                        paddingLeft={50}\n                        yTicksLeftWidth={'50px'}\n                        lineFromXzero={false}\n                        lineFromXmax={false}\n                        // xTicksLink={'/workouts/week/'}\n\n                        dataLeft={dataLeft}\n                        legendLeft={legendLeft}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        // yTicksLeftPostfix={'km'}\n                        // unitLeft={['km', 'km', 'km']}\n                        yTicksLeftVal={yTicksLeftVal}\n                        avgWindowLeft={[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}\n                        smoothLeft={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n\n\n                        dataRight={dataRight}\n                        legendRight={legendRight}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                        // yTicksRightPostfix={'m'}\n                        // unitRight={['m', 'm']}\n                        yTicksRightVal={yTicksRightVal}\n                        avgWindowRight={[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}\n                        smoothRight={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n\n                        legendFontSize={'18px'}\n                        legendLineHeight={18}\n\n                        ticksFontSize={'15px'}\n                        // marker={week}\n                        scrollToRight={true}\n                    />\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default MiniAdGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\nimport AdminNotification from '../../components/admin/notification';\nimport WeeklyTotals from '../../components/admin/weeklyTotals';\nimport WeeklyAvg from '../../components/admin/weeklyAvg';\nimport KeyNumbers from '../../components/admin/keyNumbers';\nimport Ads from '../../components/admin/ads';\nimport Applications from '../../components/admin/applications';\nimport UserInvites from '../../components/admin/userInvites';\nimport Heatmap from '../../components/admin/heatmap';\nimport PageViews from '../../components/admin/pageViews';\nimport Competition from '../../components/admin/competition';\nimport Errors from '../../components/admin/errors';\nimport Development from '../../components/admin/development';\nimport JwtToken from '../../components/admin/jwttoken';\nimport VeterinaryHistory from '../../components/admin/veterinaryHistory';\nimport Demographics from '../../components/admin/demographics';\nimport User from '../../components/user';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n\temail: '',\n\tsubmenu: 'simulate',\n\tjwtToken: util.getJwtToken(),\n};\n\n@observer\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadStats();\n\t\tawait this.loadAdminHistory();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadStats = async () => {\n\t\tconst { submenu } = this.state;\n\t\tif (['ads', 'applications', 'notifications', 'simulate', 'heatmap', 'userInvites', 'graphql', 'errors', 'dev', 'jwtToken', 'demographics'].indexOf(submenu) > -1) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n\t\t//'main', 'weeklyAvg', 'weeklyTotal', 'accTotals', 'accAverages', 'notification', 'news', 'simulate', 'ads'\n\n\t\tswitch (submenu) {\n\t\t\tcase 'weeklyAvg':\n\t\t\t\tawait adminStore.getStatsAvg();\n\t\t\t\tbreak;\n\t\t\tcase 'weeklyTotal':\n\t\t\t\tawait adminStore.getStatsTotal();\n\t\t\t\tbreak;\n\t\t\tcase 'pageviews':\n\t\t\t\tbreak;\n\t\t\tcase 'veterinary':\n\t\t\t\tbreak;\n\t\t\tcase 'competition':\n\t\t\t\tbreak;\n\t\t\tcase 'main':\n\t\t\t\tawait adminStore.getStats({ limit: 1 });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tawait adminStore.getStats({});\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tloadAdminHistory = async () => {\n\t\tconst { adminStore } = this.props.stores;\n\t\tconst { submenu } = this.state;\n\t\tif (['simulate'].indexOf(submenu) > -1) {\n\t\t\tawait adminStore.getAdminHistory();\n\t\t}\n\t}\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n\tcomponentWillUnmount() {\n        const { adminStore } = this.props.stores;\n\t\tadminStore.cleanupMemory();\n    }\n\n\tsimulateUser = (e) => {\n\t\tconst { email } = this.state;\n        const { userStore } = this.props.stores;\n\t\tuserStore.getSimulateUser(email);\n\t}\n\n\tsimulateUserByClick = (e) => {\n\t\tconst email = e.target.closest('div').dataset.email;\n        const { userStore } = this.props.stores;\n\t\tuserStore.getSimulateUser(email);\n\t}\n\n\tsetQuery = (e) => {\n\t\tconst { notification = {} } = this.state;\n\t\tnotification.query = e.target.innerText;\n\t\tnotification.url = e.target.dataset.url;\n\t\tthis.setState({ notification });\n\t}\n\n\tsetWorkoutQuery = (e) => {\n\t\tconst { notification = {} } = this.state;\n\t\tnotification.workoutQuery = e.target.innerText;\n\t\tnotification.url = e.target.dataset.url;\n\t\tthis.setState({ notification });\n\t}\n\n\tsendNotification = () => {\n        const { adminStore } = this.props.stores;\n\t\tconst { notification } = this.state;\n\t\tadminStore.sendNotification({ ...notification });\n\t}\n\n\tfixGpxInfo = () => {\n\t\tconsole.log('fixGpxInfo');\n\t\tconst { adminStore } = this.props.stores;\n\t\tadminStore.getFixWorkoutGpxInfo();\n\t}\n\t\n\tsearch = async () => {\n        const { userStore } = this.props.stores;\n        const { searchText } = this.state;\n        await userStore.searchUsers({ search: searchText, showAll: 1 });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu }, () => {\n\t\t\tthis.loadAll();\n\t\t});\n\t}\n\n\tcheckForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.search();\n        }\n    }\n\n\trender() {\n\t\tconst { appState, adminStore, userStore } = this.props.stores;\n\t\tconst { notification = {}, submenu, jwtToken } = this.state;\n        const { darkmode } = appState;\n\t\tconst { isAdmin, user, searchUsersResult } = userStore;\n        const { stats, adminHistory } = adminStore;\n        const lastStat = stats[0] || {};\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n\t\t\t\t\t\t<div class='row'>\n\n\t\t\t\t\t\t\t{['main', 'demographics', 'weeklyAvg', 'weeklyTotal', 'accTotals', 'accAverages', 'notification', 'simulate',\n\t\t\t\t\t\t\t\t'ads', 'applications', 'competition', 'pageviews', 'veterinary', 'heatmap', 'userInvites', 'graphql', 'errors', 'dev', 'jwtToken'].map(sm => (\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === sm ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu={sm}\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-running' /> {sm}</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<xmp>{JSON.stringify(window.location.href, null, 4)}</xmp>\n\n\t\t\t\t<div class='row border-bottom'>\n\t\t\t\t\t{submenu === 'ads' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Ads stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'demographics' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Demographics stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'applications' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Applications stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'userInvites' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<UserInvites stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'heatmap' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Heatmap stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'pageviews' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<PageViews stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'veterinary' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<VeterinaryHistory stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'competition' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Competition stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'errors' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Errors stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'dev' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Development stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t{submenu === 'jwtToken' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<JwtToken stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'graphql' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<a href={`http://localhost:8888/api/graphql?token=${jwtToken}`} native target='_blank' rel='noreferrer'>\n\t\t\t\t\t\t\tGraphQL\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'notification' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<h5>Send notification</h5>\n\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputLanguage'> Language</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>Lang</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputLanguage' placeholder='Notification language: en, no' onInput={linkstate(this, 'notification.language')} value={notification.language} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12 mt-2 mb-4'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputLanguage'>User Query</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>User Query</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputLanguage' placeholder='Mongodb user query: { \"id\": 2 }' onInput={linkstate(this, 'notification.query')} value={notification.query} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='text-muted'>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"garmin.access.oauth_token\": { \"$exists\": true } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"strava.access_token\": { \"$exists\": true } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users/edit'>{'{ \"username\": { \"$eq\": \"\" } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users/edit'>{'{ \"firstname\": { \"$eq\": \"\" } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"images\": { \"$exists\": false } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"termsAndCondition\": { \"$eq\": \"\" } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"settings.summaryEmails\": { \"$exists\": false } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"settings.infoEmails\": { \"$exists\": false } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"settings.partnerEmails\": { \"$exists\": false } }'}</code></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12 mt-2 mb-4'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputLanguage'>Workout Query</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>Workout Query</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputLanguage' placeholder='Mongodb query: { \"id\": 2 }' onInput={linkstate(this, 'notification.workoutQuery')} value={notification.workoutQuery} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='text-muted'>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setWorkoutQuery}>{'{ \"username\": { \"$eq\": \"\" } }'}</code></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputMessage'> Message</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>M</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputMessage' placeholder='Notification message' onInput={linkstate(this, 'notification.message')} value={notification.message} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputTitle'> Title</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>T</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputTitle' placeholder='Notification title' onInput={linkstate(this, 'notification.title')} value={notification.title} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputUrl'> URL</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>URL</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputUrl' placeholder='/news/123' onInput={linkstate(this, 'notification.url')} value={notification.url} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputUrlList'> URL List</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>URL List</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputUrlList' placeholder='/news/' onInput={linkstate(this, 'notification.urlList')} value={notification.urlList} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputUrlList'> Do send</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>Do send</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputUrlList' placeholder='' onInput={linkstate(this, 'notification.doSend')} value={notification.doSend} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<button type='button' class='btn btn-primary mb-2' onclick={this.sendNotification}>Send notification</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h5>Preview</h5>\n\t\t\t\t\t\t<AdminNotification notification={{ ...notification, addedBy: { ...user } }} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'weeklyTotal' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<WeeklyTotals stores={this.props.stores} submenu={submenu} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t{submenu === 'weeklyAvg' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<WeeklyAvg stores={this.props.stores} submenu={submenu} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t<div class='col-12 mb-4'>\n\t\t\t\t\t\t<KeyNumbers stores={this.props.stores} submenu={submenu} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{submenu === 'main' && <div class='col-12 mb-4'>\n                        <table class='table table-striped'>\n                            <tbody>\n\t                            <tr><th>createdDate</th><td>{util.isoDate(lastStat.createdDate)}</td></tr>\n\t                            <tr><th>dogs</th><td>{lastStat.dogs}</td></tr>\n\t                            <tr><th>notifications</th><td>{lastStat.notifications}</td></tr>\n\t                            <tr><th>messages</th><td>{lastStat.messages}</td></tr>\n\t                            <tr><th>teams</th><td>{lastStat.teams}</td></tr>\n\n\t                            {lastStat.teamTypesCounts && Object.keys(lastStat.teamTypesCounts).map(key => (\n\t\t\t\t\t\t\t\t\t<tr><th class='pl-5'>teams by type: {key}</th><td>{lastStat.teamTypesCounts[key]}</td></tr>\n\t\t\t\t\t\t\t\t))}\n\t                            {lastStat.teamAmbitionsCounts && Object.keys(lastStat.teamAmbitionsCounts).map(key => (\n\t\t\t\t\t\t\t\t\t<tr><th class='pl-5'>teamsby ambition: {key}</th><td>{lastStat.teamAmbitionsCounts[key]}</td></tr>\n\t\t\t\t\t\t\t\t))}\n\n\t                            <tr><th>workoutPlans</th><td>{lastStat.workoutPlans}</td></tr>\n\t                            <tr><th>totalDistance</th><td>\n                                    {util.format(lastStat.totalDistance)} km<br />\n                                    {util.format(lastStat.totalDistance / 40075, 2)} <span class='text-muted'>times around the world</span><br />\n                                    {util.format(lastStat.totalDistance / 4509, 2)} <span class='text-muted'>times accross USA</span><br />\n                                    {util.format(lastStat.totalDistance / 4700, 2)} <span class='text-muted'>times accross Europe</span><br />\n                                    {util.format(lastStat.totalDistance / 1729, 1)} <span class='text-muted'>times from Oslo to Alta</span><br />\n                                    {util.format(lastStat.totalDistance / 384400, 3)} <span class='text-muted'>times to the moon</span><br />\n                                    {util.format(lastStat.totalDistance / 400, 1)} <span class='text-muted'>recharges (400 km range)</span><br />\n                                </td></tr>\n\t\t\t\t\t\t\t\t{/* <tr><th>totalDistanceEquipment</th><td>{JSON.stringify(lastStat.totalDistanceEquipment)}</td></tr> */}\n\t                            <tr><th>totalElevation</th><td>\n                                    {util.format(lastStat.totalElevation)} m<br />\n                                    {util.format(lastStat.totalElevation / 8848, 1)} <span class='text-muted'>times to the top of Mount Everest</span><br />\n                                </td></tr>\n\t                            <tr><th>totalDuration</th><td>\n                                    {util.secToHms(lastStat.totalDuration)}<br />\n                                    {Math.floor(lastStat.totalDuration / 86400)} days, &nbsp;\n                                    {Math.floor(lastStat.totalDuration % 86400 / 3600)} hours\n                                </td></tr>\n\t                            <tr><th>tracks</th><td>{lastStat.tracks}</td></tr>\n\t                            <tr><th>users</th><td>{lastStat.users}</td></tr>\n\t                            <tr><th>usersGarmin</th><td>{lastStat.usersGarmin}</td></tr>\n\t                            <tr><th>usersStrava</th><td>{lastStat.usersStrava}</td></tr>\n\n\t                            <tr><th>usersProminentDisclosure</th><td>{lastStat.usersProminentDisclosure}</td></tr>\n\t                            <tr><th>usersVeterinaryAllowed</th><td>{lastStat.usersVeterinaryAllowed}</td></tr>\n\t                            <tr><th>usersInboxEmails</th><td>{lastStat.usersInboxEmails}</td></tr>\n\t                            <tr><th>usersImperial</th><td>{lastStat.usersImperial}</td></tr>\n\t                            <tr><th>usersDarkmode</th><td>{lastStat.usersDarkmode}</td></tr>\n\n\t                            <tr><th>workouts</th><td>{lastStat.workouts}</td></tr>\n\n                                <tr><th>avgDistance</th><td>{util.format(lastStat.avgDistance, 1)} km</td></tr>\n                                {/* <tr><th>avgDistanceEquipment</th><td>{JSON.stringify(lastStat.avgDistanceEquipment)}</td></tr> */}\n\t                            <tr><th>avgDogs</th><td>{util.format(lastStat.avgDogs, 1)}</td></tr>\n\t                            <tr><th>avgDuration</th><td>{util.secToHms(lastStat.avgDuration)}</td></tr>\n\t                            <tr><th>avgSpeed</th><td>{util.format(lastStat.avgSpeed, 1)} km/t</td></tr>\n\t                            <tr><th>avgElevation</th><td>{util.format(lastStat.avgElevation, 1)} m</td></tr>\n\t                            <tr><th>avgTemperature</th><td>{util.format(lastStat.avgTemperature, 1)} C</td></tr>\n\n\t                            <tr><th>dogsHistoryAnimalchiropractor</th><td>{lastStat.dogsHistoryAnimalchiropractor}</td></tr>\n\t                            <tr><th>dogsHistoryBodyScore</th><td>{lastStat.dogsHistoryBodyScore}</td></tr>\n\t                            <tr><th>dogsHistoryClawClip</th><td>{lastStat.dogsHistoryClawClip}</td></tr>\n\t                            <tr><th>dogsHistoryDeworming</th><td>{lastStat.dogsHistoryDeworming}</td></tr>\n\t                            <tr><th>dogsHistoryDiarrhea</th><td>{lastStat.dogsHistoryDiarrhea}</td></tr>\n\t                            <tr><th>dogsHistoryFight</th><td>{lastStat.dogsHistoryFight}</td></tr>\n\t                            <tr><th>dogsHistoryFoodLeftover</th><td>{lastStat.dogsHistoryFoodLeftover}</td></tr>\n\t                            <tr><th>dogsHistoryInjury</th><td>{lastStat.dogsHistoryInjury}</td></tr>\n\t                            <tr><th>dogsHistoryMassage</th><td>{lastStat.dogsHistoryMassage}</td></tr>\n\t                            <tr><th>dogsHistoryMating</th><td>{lastStat.dogsHistoryMating}</td></tr>\n\t                            <tr><th>dogsHistoryMaturity</th><td>{lastStat.dogsHistoryMaturity}</td></tr>\n\t                            <tr><th>dogsHistoryNewStraw</th><td>{lastStat.dogsHistoryNewStraw}</td></tr>\n\t                            <tr><th>dogsHistoryOther</th><td>{lastStat.dogsHistoryOther}</td></tr>\n\t                            <tr><th>dogsHistorySick</th><td>{lastStat.dogsHistorySick}</td></tr>\n\t                            <tr><th>dogsHistoryStoolProblem</th><td>{lastStat.dogsHistoryStoolProblem}</td></tr>\n\t                            <tr><th>dogsHistoryUnwantedMating</th><td>{lastStat.dogsHistoryUnwantedMating}</td></tr>\n\t                            <tr><th>dogsHistoryUpdate</th><td>{lastStat.dogsHistoryUpdate}</td></tr>\n\t                            <tr><th>dogsHistoryVaccine</th><td>{lastStat.dogsHistoryVaccine}</td></tr>\n\t                            <tr><th>dogsHistoryVeterinarianVisit</th><td>{lastStat.dogsHistoryVeterinarianVisit}</td></tr>\n\t                            <tr><th>dogsHistoryWeek</th><td>{lastStat.dogsHistoryWeek}</td></tr>\n\t                            <tr><th>dogsHistoryWeight</th><td>{lastStat.dogsHistoryWeight}</td></tr>\n\t                            <tr><th>dogsHistoryYear</th><td>{lastStat.dogsHistoryYear}</td></tr>\n\n\t                            <tr><th>dogsInjured</th><td>{lastStat.dogsInjured}</td></tr>\n\t                            <tr><th>dogsMaturity</th><td>{lastStat.dogsMaturity}</td></tr>\n\t                            <tr><th>dogsMedication</th><td>{lastStat.dogsMedication}</td></tr>\n\t                            <tr><th>dogsNoBreeding</th><td>{lastStat.dogsNoBreeding}</td></tr>\n\t                            <tr><th>dogsPregnant</th><td>{lastStat.dogsPregnant}</td></tr>\n\t                            <tr><th>dogsPuppy</th><td>{lastStat.dogsPuppy}</td></tr>\n\t                            <tr><th>dogsRelocation</th><td>{lastStat.dogsRelocation}</td></tr>\n\t                            <tr><th>dogsRetired</th><td>{lastStat.dogsRetired}</td></tr>\n\t                            <tr><th>dogsSick</th><td>{lastStat.dogsSick}</td></tr>\n\t                            <tr><th>dogsSterilized</th><td>{lastStat.dogsSterilized}</td></tr>\n                            </tbody>\n                        </table>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{submenu === 'simulate' && <>\n\t\t\t\t\t\n\t\t\t\t\t\t<div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<h5><Text id='users.connect.title'>Finn dine venner</Text></h5>\n\t\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t\t<div class='col-auto w-75'>\n\t\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInput'><Text id='users.connect.search'>Søk</Text></label>\n\t\t\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control form-control-sm mb-2' id='inlineFormInput'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={<Text id='users.connect.search-placeholder'>Søk etter venner og bekjente</Text>}\n\t\t\t\t\t\t\t\t\t\t\tonInput={linkstate(this, 'searchText')}\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={this.checkForEnter}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Localizer>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-auto'>\n\t\t\t\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-primary mb-2' onClick={this.search}>\n\t\t\t\t\t\t\t\t\t\t<Text id='users.connect.doSearch'>Søk</Text>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 mt-3'>\n\t\t\t\t\t\t\t{searchUsersResult && searchUsersResult.map(user => (\n\t\t\t\t\t\t\t\t<User stores={this.props.stores} user={user} />\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class='col-12 mt-3'>\n\t\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t\t<div class='col-auto'>\n\t\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputGroup'>Email</label>\n\t\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>@</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputGroup' placeholder='Email' onInput={linkstate(this, 'email')} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-auto'>\n\t\t\t\t\t\t\t\t\t<button type='button' class='btn btn-primary mb-2' onclick={this.simulateUser}>Simulate user</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{adminHistory && adminHistory.map(e => <div class='pointerCursor' data-email={e.email} onClick={this.simulateUserByClick}>\n\t\t\t\t\t\t\t\t<span class='font-weight-lighter'>{util.isoDate(e.date)}</span> - {e.title}: {e.email} <span class='text-muted'>({e.url} by user: {e.user})</span>\n\t\t\t\t\t\t\t</div>)}\n\n\t\t\t\t\t\t\t<br />isAdmin: {JSON.stringify(isAdmin)}<br />\n\t\t\t\t\t\t\t<xmp>user: {JSON.stringify(user, null, 4)}</xmp>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\t\t\t\t</div>\n\t\t\t\t{/* <div class='row'>\n\t\t\t\t\t<button class='btn btn-secondary' type='button' onClick={this.fixGpxInfo}>\n\t\t\t\t\t\tFix GpxInfo\n\t\t\t\t\t</button>\n\t\t\t\t</div> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Admin;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport mu from '../../lib/musher-util';\n\nimport AdminGraph from './graph';\n\n@observer\nclass KeyNumbers extends Component {\n    render() {\n        const { appState, adminStore, userStore } = this.props.stores;\n        const { submenu } = this.props;\n\t\tconst { notification = {} } = this.state;\n        const { darkmode } = appState;\n\t\tconst { isAdmin, user } = userStore;\n        const { stats, totalTeamsAmbitions, totalTeamsTypes, userDeviceInfoPlatformCounts = {}, userDeviceInfoManufacturerCounts = {} } = adminStore;\n        const platformKeys = Object.keys(userDeviceInfoPlatformCounts).sort();\n        const manufacturerKeys = Object.keys(userDeviceInfoManufacturerCounts).sort();\n        if (submenu === 'accTotals') {\n            return (\n                <>\n                    <h5>Platforms && Manufacturers</h5>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-platforms-${stats.length}`}\n                        fieldsLeft={platformKeys.map(key => `userDeviceInfoPlatformCounts.${key}`)}\n                        legendLeft={platformKeys}\n                        fieldsRight={manufacturerKeys.map(key => `userDeviceInfoManufacturerCounts.${key}`)}\n                        legendRight={manufacturerKeys}\n                    />\n                    <h5>Dogs</h5>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-dogs-${stats.length}`}\n                        fieldsLeft={['totalDogs']}\n                        legendLeft={['dogs']}\n                    />\n                    <h5>Users & workoutPlans</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-${stats.length}`}\n                        fieldsLeft={['totalUsers', 'totalWorkoutPlans']}\n                        legendLeft={['users', 'totalWorkoutPlans']}\n                        fieldsRight={['totalUsersGarmin', 'totalUsersStrava']}\n                        legendRight={['Garmin', 'Strava']}\n                    />\n                    <h5>Users & settings</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-settings-${stats.length}`}\n                        fieldsLeft={['totalUsersProminentDisclosure', 'totalUsersVeterinaryAllowed', 'totalUsersInboxEmails', 'totalUsersImperial', 'totalUsersDarkmode']}\n                        legendLeft={['prominentDisclosure', 'VeterinaryAllow', 'InboxEmails', 'Imperial', 'Darkmode']}\n                    />\n                    <h5>Users & notifications</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-notifications-${stats.length}`}\n                        fieldsLeft={['totalUsersFirebase']}\n                        legendLeft={['firebase']}\n                    />\n                    <h5>User profiles</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-profile-${stats.length}`}\n                        fieldsLeft={['totalUsersCellphone', 'totalUsersUsername', 'totalUsersFirstname', 'totalUsersFacebook', 'totalUsersInstagram', 'totalUsersSnapchat', 'totalUsersUrl', 'totalUsersImages']}\n                        legendLeft={['totalUsersCellphone', 'totalUsersUsername', 'totalUsersFirstname', 'totalUsersFacebook', 'totalUsersInstagram', 'totalUsersSnapchat', 'totalUsersUrl', 'totalUsersImages']}\n                    />\n                    <h5>User emails</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-summary-${stats.length}`}\n                        fieldsLeft={['totalUsersSummaryEmail', 'totalUsersInfoEmail', 'totalUsersPartnerEmail']}\n                        legendLeft={['totalUsersSummaryEmail', 'totalUsersInfoEmail', 'totalUsersPartnerEmail']}\n                        fieldsRight={['totalUsersHideProfile', 'totalUsersHideInvite']}\n                        legendRight={['totalUsersHideProfile', 'totalUsersHideInvite']}\n                    />\n                    <h5>Teams & tracks</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-teams-${stats.length}`}\n                        fieldsLeft={['totalTeams', 'totalTracks']}\n                        legendLeft={['teams', 'tracks']}\n                    />\n\n                    <h5>Teams & type</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-teams-types-${stats.length}`}\n                        fieldsLeft={['totalTeamsTypes.Tur', 'totalTeamsTypes.Turist', 'totalTeamsTypes.Sprint', 'totalTeamsTypes.Mellomdistanse', 'totalTeamsTypes.Langdistanse']}\n                        legendLeft={['Tur', 'Turist', 'Sprint', 'Mellomdistanse', 'Langdistanse']}\n                    />\n                    <h5>Teams & ambitions</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-teams-ambitions-${stats.length}`}\n                        fieldsLeft={['totalTeamsAmbitions.Ingen ambisjoner', 'totalTeamsAmbitions.Glad amatør', 'totalTeamsAmbitions.Amatør', 'totalTeamsAmbitions.Seriøs amatør', 'totalTeamsAmbitions.Proff']}\n                        legendLeft={['Ingen ambisjoner', 'Glad amatør', 'Amatør', 'Seriøs amatør', 'Proff']}\n                    />\n\n\n                    <h5>Workouts & distance</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totalWorkouts-${stats.length}`}\n                        fieldsLeft={['totalWorkouts']}\n                        legendLeft={['totalWorkouts']}\n                        fieldsRight={['totalDistance']}\n                        legendRight={['totalDistance']}\n                    />\n                    <h5>Distance and equipment</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totaldistance-equipment-${stats.length}`}\n                        fieldsLeft={['totalDistanceEquipment.1', 'totalDistanceEquipment.2', 'totalDistanceEquipment.3',\n                            'totalDistanceEquipment.4', 'totalDistanceEquipment.5', 'totalDistanceEquipment.6', \n                            'totalDistanceEquipment.7', 'totalDistanceEquipment.8', 'totalDistanceEquipment.9', 'totalDistanceEquipment.10']}\n                        legendLeft={['slede', 'atv', 'trollvogn', 'ski', 'annen vogn', 'sykkel', 'kickbike', 'jogging', 'bil', 'utv']}\n                    />\n                    <h5>Distance and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totaldistance-teamsize-${stats.length}`}\n                        // 19-22, 23-, 7-10, 15-18, 3-6, 11-14, 1-2\n                        fieldsLeft={['totalDistanceTeamSize.1-2', 'totalDistanceTeamSize.3-6', 'totalDistanceTeamSize.7-10', 'totalDistanceTeamSize.11-14', 'totalDistanceTeamSize.15-18', 'totalDistanceTeamSize.19-22', 'totalDistanceTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n                    <h5>Ascending</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totalElevation-${stats.length}`}\n                        fieldsLeft={['totalElevation']}\n                        legendLeft={['totalElevation']}\n                        fieldsRight={['avgElevation']}\n                        legendRight={['avgElevation']}\n                    />\n                    <h5>Ascending and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totalelevation-teamsize-${stats.length}`}\n                        // 19-22, 23-, 7-10, 15-18, 3-6, 11-14, 1-2\n                        fieldsLeft={['totalElevationTeamSize.1-2', 'totalElevationTeamSize.3-6', 'totalElevationTeamSize.7-10', 'totalElevationTeamSize.11-14', 'totalElevationTeamSize.15-18', 'totalElevationTeamSize.19-22', 'totalElevationTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n                    <h5>Temperature</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgTemperature-${stats.length}`}\n                        fieldsLeft={['avgTemperature']}\n                        legendLeft={['avgTemperature']}\n                    />\n                    <h5>Duration and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totalduration-teamsize-${stats.length}`}\n                        // 19-22, 23-, 7-10, 15-18, 3-6, 11-14, 1-2\n                        fieldsLeft={['totalDurationTeamSize.1-2', 'totalDurationTeamSize.3-6', 'totalDurationTeamSize.7-10', 'totalDurationTeamSize.11-14', 'totalDurationTeamSize.15-18', 'totalDurationTeamSize.19-22', 'totalDurationTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n                </>\n            );\n        }\n\n        if (submenu === 'accAverages') {\n            return (\n                <>\n                    <h5>Avg distance and equipment</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgdistance-equipment-${stats.length}`}\n                        fieldsLeft={['avgDistanceEquipment.1', 'avgDistanceEquipment.2', 'avgDistanceEquipment.3',\n                            'avgDistanceEquipment.4', 'avgDistanceEquipment.5', 'avgDistanceEquipment.6', \n                            'avgDistanceEquipment.7', 'avgDistanceEquipment.8', 'avgDistanceEquipment.9', 'avgDistanceEquipment.10']}\n                        legendLeft={['slede', 'atv', 'trollvogn', 'ski', 'annen vogn', 'sykkel', 'kickbike', 'jogging', 'bil', 'utv']}\n                    />\n\n                    <h5>Avg distance and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgdistance-teamsize-${stats.length}`}\n                        fieldsLeft={['avgDistanceTeamSize.1-2', 'avgDistanceTeamSize.3-6', 'avgDistanceTeamSize.7-10', 'avgDistanceTeamSize.11-14', 'avgDistanceTeamSize.15-18', 'avgDistanceTeamSize.19-22', 'avgDistanceTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n\n                    <h5>Avg Ascending and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgelevation-teamsize-${stats.length}`}\n                        fieldsLeft={['avgElevationTeamSize.1-2', 'avgElevationTeamSize.3-6', 'avgElevationTeamSize.7-10', 'avgElevationTeamSize.11-14', 'avgElevationTeamSize.15-18', 'avgElevationTeamSize.19-22', 'avgElevationTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n\n                    <h5>Avg distance, dogs, speed & duration</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgDistance-${stats.length}`}\n                        fieldsLeft={['avgDistance', 'avgDogs', 'avgSpeed']}\n                        legendLeft={['avgDistance', 'avgDogs', 'avgSpeed']}\n                        fieldsRight={['avgDuration']}\n                        legendRight={['avgDuration']}\n                    />\n\n                    <h5>Avg speed and equipment</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgspeed-equipment-${stats.length}`}\n                        fieldsLeft={['avgSpeedEquipment.1', 'avgSpeedEquipment.2', 'avgSpeedEquipment.3',\n                            'avgSpeedEquipment.4', 'avgSpeedEquipment.5', 'avgSpeedEquipment.6', \n                            'avgSpeedEquipment.7', 'avgSpeedEquipment.8', 'avgSpeedEquipment.9', 'avgSpeedEquipment.10']}\n                        legendLeft={['slede', 'atv', 'trollvogn', 'ski', 'annen vogn', 'sykkel', 'kickbike', 'jogging', 'bil', 'utv']}\n                    />\n\n                    <h5>Avg speed and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgspeed-teamsize-${stats.length}`}\n                        fieldsLeft={['avgSpeedTeamSize.1-2', 'avgSpeedTeamSize.3-6', 'avgSpeedTeamSize.7-10', 'avgSpeedTeamSize.11-14', 'avgSpeedTeamSize.15-18', 'avgSpeedTeamSize.19-22', 'avgSpeedTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n\n                    <h5>Avg Duration and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgduration-teamsize-${stats.length}`}\n                        fieldsLeft={['avgDurationTeamSize.1-2', 'avgDurationTeamSize.3-6', 'avgDurationTeamSize.7-10', 'avgDurationTeamSize.11-14', 'avgDurationTeamSize.15-18', 'avgDurationTeamSize.19-22', 'avgDurationTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n                </>\n            );\n        }\n    }\n}\n\nexport default KeyNumbers;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport Images from '../../components/form/images';\nimport MiniAdGraph from '../../components/admin/miniAdGraph';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n    \n    removeImage = async (e) => {\n        const { adStore } = this.props.stores;\n        const { ad } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        adStore.removeImage({\n            id: ad.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { ad, field, updateField } = this.props;\n        updateField({ id: ad.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, ad, type = 'text', rows, field, title, icon, help, onInput, updateField } = this.props;\n        const value = ad[field];\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {ad.images && ad.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={ad} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${ad.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='ad.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type={type} class={`form-control ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        rows={rows}\n                        data-id={ad.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${ad.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='ad.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'date') {\n            return (\n                <div class={`form-group ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input type={type} class={`form-control ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={util.isoDate(value, false, false, true)}\n                        data-id={ad.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${ad.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='ad.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n\n        return (\n            <div class={`form-group ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type={type} class={`form-control ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={ad.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${ad.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='ad.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { adStore } = this.props.stores;\n        // console.log('adStore.newAd', adStore.newAd);\n        adStore.updateObjectKeyValue('newAd', field, value);\n    }\n\n    render() {\n        const { field, icon, title, help } = this.props;\n        const { adStore } = this.props.stores;\n        const { newAd } = adStore;\n        return (\n            <div class='form-group'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    onInput={this.onInput}\n                    value={newAd[field]}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadAd() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore } = this.props.stores;\n\t\tawait adStore.load({ query: { showall: 1 }, addData: ['adViews', 'adClicks', 'viewCounts', 'clickCounts'] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tresetAd() {\n        const { adStore } = this.props.stores;\n        adStore.updateKeyValue('newAd', {});\n\t}\n\n    insertAd = async () => {\n\t\tconst { adStore } = this.props.stores;\n\t\tconst { newAd } = adStore;\n\t\tawait adStore.insert({ ...newAd });\n        await adStore.loadAd({ query: { showall: 1 } });\n        this.resetAd();\n\t}\n\n    selectAd = async (e) => {\n        const adId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { adStore } = this.props.stores;\n        const adContent = await adStore.loadById({ id: adId, showall: 1 });\n        adStore.updateKeyValue('ad', adContent);\n    }\n\n    resetAd = async () => {\n        const { adStore } = this.props.stores;\n        adStore.updateKeyValue('ad', {});\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { adStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { ad } = adStore;\n        if (field === 'images') {\n            if (Array.isArray(ad.images) && Array.isArray(value)) {\n                localObjectValue = [...ad.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            adStore.updateObjectKeyValue('newAd', field, value);\n        } else {\n            adStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { adStore } = this.props.stores;\n        await adStore.saveField(id, field, value);\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    render() {\n        const { adStore } = this.props.stores;\n        const { ad = {}, ads = [], saved, adViews, adClicks, viewCounts, clickCounts } = adStore;\n\n        let graphFieldsLeft = [];\n        let graphLegendsLeft = [];\n        let graphFieldsRight = [];\n        let graphLegendsRight = [];\n        let graphKey;\n        if (ad && ad.id) {\n            graphKey = ad.id;\n            graphFieldsLeft.push(`adViews.${ad.id}`);\n            graphLegendsLeft.push(`${ad.id}: ${ad.title} (${ad.page})`);\n            graphFieldsRight.push(`adClicks.${ad.id}`);\n            graphLegendsRight.push(`${ad.id}: ${ad.title} (${ad.page})`);\n        } else if (ads && ads.length > 0) {\n            graphKey = ads.length;\n            ads.forEach((ad) => {\n                graphFieldsLeft.push(`adViews.${ad.id}`);\n                graphLegendsLeft.push(`${ad.id}: ${ad.title} (${ad.page})`);\n                graphFieldsRight.push(`adClicks.${ad.id}`);\n                graphLegendsRight.push(`${ad.id}: ${ad.title} (${ad.page})`);\n            });\n        }\n\n        return (\n            <>\n                <div class='w-100 mb-3'>\n                    <div class='row'>\n                        <div class='col-12 mb-0 position-relative'>\n                            {ads && ads.length > 0 && <>\n                                <table class='table table-sm table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <th>id</th>\n                                            <th>active</th>\n                                            <th>title</th>\n                                            <th>page</th>\n                                            <th>section</th>\n                                            <th>url</th>\n                                            <th>email</th>\n                                            <th class='text-right'>views</th>\n                                            <th class='text-right'>clicks</th>\n                                            <th class='text-right'>CTR</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {ads.map(ad => (\n                                            <tr data-id={ad.id} onClick={this.selectAd}>\n                                                <td>{ad.id}</td>\n                                                <td>{ad.active}</td>\n                                                <td>{ad.title}</td>\n                                                <td>{ad.page}</td>\n                                                <td>{ad.section}</td>\n                                                <td>{ad.url}</td>\n                                                <td>{ad.email}</td>\n                                                <td class='text-right'>{viewCounts[ad.id]}</td>\n                                                <td class='text-right'>{clickCounts[ad.id]}</td>\n                                                <td class='text-right'>{util.format(clickCounts[ad.id] / viewCounts[ad.id] * 100, 1)} %</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </>}\n                        </div>\n                    </div>\n\n                    <MiniAdGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeft}\n                        legendLeft={graphLegendsLeft}\n                        fieldsRight={graphFieldsRight}\n                        legendRight={graphLegendsRight}\n                        key={graphKey}\n                    />\n\n                    <div class='row'>\n                        {(!ad || !ad.id) && <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-5 mb-0 position-relative'>\n                            <button class='btn btn-danger float-right' onClick={this.resetAd}><i class='fas fa-times' /></button>\n\n                            <h5>Ny annonse</h5>\n                            <InputNew stores={this.props.stores} field='title' icon='fas fa-heading'\n                                title={<Text id='ad.title'>Tittel</Text>}\n                                help={<Text id='ad.title-help'>Tittel på denne annonsen.</Text>} />\n                            <button type='button' class='btn btn-primary'\n                                onClick={this.insertAd}\n                            >\n                                <Text id='ad.save'>Registrer ny annonse</Text>\n                            </button>\n                        </div>}\n                    </div>\n\n                    {ad && ad.id && <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-5 mb-0 position-relative'>\n                            <button class='btn btn-danger float-right' onClick={this.resetAd}><i class='fas fa-times' /></button>\n\n                            <h5>Endre annonse: \"{ad.title}\"</h5>\n\n                            <Input saved={saved} ad={ad} field='title' icon='fas fa-heading'\n                                title={<Text id='ad.title'>Title</Text>}\n                                help={<Text id='ad.title-help'>Title of this ad story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='page' icon='fas fa-heading'\n                                title={<Text id='ad.page'>Page ('/', '/workouts/', '/workouts/detail', '/dogs', '/dogs/detail')</Text>}\n                                help={<Text id='ad.page-help'>Page to show this ad</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='section' icon='fas fa-heading'\n                                title={<Text id='ad.section'>Section</Text>}\n                                help={<Text id='ad.section-help'>Section on page to show this ad</Text>}\n                                onInput={this.updateField} />\n                            <small>\n                                frontpage (/, /home-workout, /home-totals)<br />\n                                /workout: (totals, seasontotals, analysis, table, workoutplan, calendar)<br />\n                                /workout/detail: (current, totals, analysis, images, dogs, handlers, gpx)<br />\n                                /dogs<br />\n                                /dogs/detail<br />\n                            </small>\n                            \n                            <Input saved={saved} ad={ad} field='url' icon='fas fa-heading'\n                                title={<Text id='ad.url'>URL</Text>}\n                                help={<Text id='ad.url-help'>Ad url</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='target' icon='fas fa-heading'\n                                title={<Text id='ad.target'>Target</Text>}\n                                help={<Text id='ad.target-help'>Ad url target</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='email' icon='fas fa-heading'\n                                title={<Text id='ad.email'>Email</Text>}\n                                help={<Text id='ad.email-help'>Ad email</Text>}\n                                onInput={this.updateField} />\n\n\n                            <Input saved={saved} ad={ad} field='offline' icon='fas fa-heading'\n                                title={<Text id='ad.offline'>Offline</Text>}\n                                help={<Text id='ad.offline-help'>Ad offline</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='active' icon='fas fa-heading'\n                                title={<Text id='ad.active'>Active</Text>}\n                                help={<Text id='ad.active-help'>Ad active</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='startDate' icon='fas fa-heading'\n                                title={<Text id='ad.startDate'>Start Date</Text>}\n                                type='date'\n                                help={<Text id='ad.startDate-help'>Ad startDate</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='endDate' icon='fas fa-heading'\n                                title={<Text id='ad.endDate'>End Date</Text>}\n                                type='date'\n                                help={<Text id='ad.endDate-help'>Ad endDate</Text>}\n                                onInput={this.updateField} />\n\n\n                            <Input saved={saved} ad={ad} field='body' icon='fas fa-quote-right'\n                                type='textarea' rows={5}\n                                title={<Text id='ad.body'>Body</Text>}\n                                help={<Text id='ad.body-help'>Body of this ad story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='image' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='ad.photo'>Bilder</Text>} \n                                help={<Text id='ad.photo-help'>Images for this ad story.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n                        </div>\n                    </div>}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass VeterinaryHistory extends Component {\n    async loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.getVeterinaryHistory();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tgetVeterinaryHistory = async () => {\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getVeterinaryHistory();\n\t}\n\n    toggleLine = (e) => {\n\t\tconst { idx } = e.target.closest('tr').dataset;\n        const { showError = {} } = this.state;\n        showError[idx] = !showError[idx];\n        this.setState({ showError });\n    }\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n    render() {\n        const { showError = {} } = this.state;\n        const { adminStore } = this.props.stores;\n        const { veterinaryHistory } = adminStore;\n        return (\n            <div class='col-12'>\n                <h5>Veterinary searches</h5>\n                <div>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Vet</th>\n                                <th>Search</th>\n                                <th>User</th>\n                                <th>IP</th>\n                                <th>UA</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {veterinaryHistory.map((vetLog) => <>\n                                <tr>\n                                    <td class='text-overflow'>\n                                        {vetLog.date && <>\n                                            {util.isoDate(vetLog.date)}\n                                        </>}\n                                    </td>\n                                    <td class='text-overflow'>{vetLog.veterinary}</td>\n                                    <td class='text-overflow'>{vetLog.searchText} ({vetLog.searchResults})</td>\n                                    <td class='text-overflow'>{vetLog.user}</td>\n                                    <td class='text-overflow'>{vetLog.ip}</td>\n                                    <td class='text-overflow'>\n                                        {vetLog.ua && <>\n                                            {vetLog.ua.platform}, {vetLog.ua.os}, {vetLog.ua.browser} ({vetLog.ua.version})\n                                        </>}\n                                    </td>\n                                </tr>\n                            </>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VeterinaryHistory;","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport mu from '../../lib/musher-util';\n\nimport AdminGraph from './graph';\n\nconst secHour = 3600;\nconst secDay = secHour * 24;\nconst secWeek = secDay * 7;\nconst secMonth = secDay * 30;\nconst sec2Month = secMonth * 2;\nconst secQuarter = secMonth * 3;\nconst secHalfYear = secMonth * 6;\nconst secYear = secMonth * 12;\n\nconst secMap = {\n    [secHour]: 'Last hour',\n    [secDay]: 'Last day',\n    [secWeek]: 'Last week',\n    [secMonth]: 'Last month',\n    [sec2Month]: 'Last 2 months',\n    [secQuarter]: 'Last quarter',\n    [secHalfYear]: 'Last 6 months',\n    [secYear]: 'Last year',\n}\n\nfunction byCount(a, b) {\n    if (a.count < b.count){\n        return 1;\n    }\n    if (a.count > b.count){\n        return -1;\n    }\n    return 0;\n}\nfunction byId(a, b) {\n    if (a._id < b._id){\n        return -1;\n    }\n    if (a._id > b._id){\n        return 1;\n    }\n    return 0;\n}\n\nconst initialState = {\n};\n\n@observer\nclass Demographics extends Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n\t\tawait adminStore.getDemographics();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const {\n            demographicsLanguage, demographicsDarkmode, demographicsImperial, demographicsVeterinary,\n            demographicsFirebase,\n            demographicsLocation, demographicsActivities, demographicsActivitiesPeriodes,\n            demographicsTeamWorkouts, demographicsTeamFollowers, demographicsTeamDogs,\n            storyViews, storyLikes, storyComments, storyDurationAvg,\n            searchCount,\n        } = adminStore;\n\n        return (<>\n            <div class='row'>\n                <div class='col-6'>\n                    <h5>Language</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>language</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsLanguage && demographicsLanguage.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.language || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>Darkmode</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>darkmode</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsDarkmode && demographicsDarkmode.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.darkmode || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>Imperial</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>imperial</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsImperial && demographicsImperial.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.imperial || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>Firebase</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>usersFirebase</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsFirebase && demographicsFirebase.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.firebase || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>veterinaryAllowed</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>veterinaryAllowed</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsVeterinary && demographicsVeterinary.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.veterinaryAllowed || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>Location</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLocation, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>location</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsLocation && demographicsLocation.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.country || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n\n                    <h5>Activities</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivities, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>activities</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsActivities && demographicsActivities.sort(byId).map((line, idx) => {\n                                    const next = util.isNumber(line._id) ? demographicsActivities[idx + 1] : undefined;\n                                    return (<>\n                                        <tr>\n                                            <td>{util.isDefined(line._id) ? `${line._id} - ${next ? `${next._id}` : ''}` : 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>ActivitiesPeriodes</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivitiesPeriodes, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>activity periode</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsActivitiesPeriodes && demographicsActivitiesPeriodes.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div class='col-6'>\n\n                    <h5>storyViews</h5>\n                    {/* <xmp>{JSON.stringify(storyViews, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>created periode</th>\n                                    <th>views</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {storyViews && storyViews.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{line.views}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>storyLikes</h5>\n                    {/* <xmp>{JSON.stringify(storyViews, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>created periode</th>\n                                    <th>likes</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {storyLikes && storyLikes.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{line.likes}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>storyComments</h5>\n                    {/* <xmp>{JSON.stringify(storyViews, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>created periode</th>\n                                    <th>comments</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {storyComments && storyComments.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{line.comments}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>storyDurationAvg</h5>\n                    {/* <xmp>{JSON.stringify(storyViews, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>created periode</th>\n                                    <th>durationAvg</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {storyDurationAvg && storyDurationAvg.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{Math.floor(line.durationAvg / 1000)} s</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div class='col-6'>\n                    <h5>TeamWorkouts</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivities, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>workouts</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsTeamWorkouts && demographicsTeamWorkouts.sort(byId).map((line, idx) => {\n                                    const next = util.isNumber(line._id) ? demographicsTeamWorkouts[idx + 1] : undefined;\n                                    return (<>\n                                        <tr>\n                                            <td>{util.isDefined(line._id) ? `${line._id} - ${next ? `${next._id}` : ''}` : 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>TeamFollowers</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivities, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>followers</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsTeamFollowers && demographicsTeamFollowers.sort(byId).map((line, idx) => {\n                                    const next = util.isNumber(line._id) ? demographicsTeamFollowers[idx + 1] : undefined;\n                                    return (<>\n                                        <tr>\n                                            <td>{util.isDefined(line._id) ? `${line._id} - ${next ? `${next._id}` : ''}` : 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>TeamDogs</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivities, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>dogs</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsTeamDogs && demographicsTeamDogs.sort(byId).map((line, idx) => {\n                                    const next = util.isNumber(line._id) ? demographicsTeamDogs[idx + 1] : undefined;\n\n                                    return (<>\n                                        <tr>\n                                            <td>{util.isDefined(line._id) ? `${line._id} - ${next ? `${next._id}` : ''}` : 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n\n                </div>\n                <div class='col-6'>\n                    <h5>Search</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>searchText</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {searchCount && searchCount.sort(byCount).map(line => {\n                                    const searchText = line.searchText.replace(/^search\\./, '');\n                                    return (<>\n                                        <tr>\n                                            <td>{searchText || 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Demographics;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass MiniAdGraph extends Component {\n    render() {\n        const {\n            fieldsLeft = [], \n            legendLeft = [], \n            fieldsRight = [], \n            legendRight = [], \n            showDebug,\n            xTicksVal = val => util.isoDate(val, false, false, true),\n            xTicksCnt = 5,\n            yTicksLeftVal = val => val,\n            yTicksRightVal = val => val,\n        } = this.props;\n        const { adminStore } = this.props.stores;\n        const dataLeft = fieldsLeft.map(e => util.getNestedValue(adminStore, e) || []);\n        const dataRight = fieldsRight.map(e => util.getNestedValue(adminStore, e) || []);\n\n        const firstData = dataLeft && dataLeft[0] ? dataLeft[0] : [];\n        const xTicks = [];\n        if (firstData.length) {\n            const partSize = Math.ceil(firstData.length / (xTicksCnt - 1));\n            const parts = Math.floor(firstData.length / partSize);\n            if (showDebug) {\n                console.log({ firstData, parts, partSize });\n            }\n            for (let i = 0, l = firstData.length; i < l; i += partSize) {\n                xTicks.push(firstData[i].epoch);\n            }\n            xTicks.push(firstData[firstData.length - 1].epoch);\n        }\n        return (\n            <>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1500}\n                        height={300}\n                        showXTicks={1}\n                        xTicksVal={xTicksVal}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        paddingLeft={50}\n                        yTicksLeftWidth={'50px'}\n                        lineFromXzero={false}\n                        lineFromXmax={false}\n                        // xTicksLink={'/workouts/week/'}\n\n                        dataLeft={dataLeft}\n                        legendLeft={legendLeft}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        // yTicksLeftPostfix={'km'}\n                        // unitLeft={['km', 'km', 'km']}\n                        yTicksLeftVal={yTicksLeftVal}\n                        avgWindowLeft={[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}\n                        smoothLeft={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n\n\n                        dataRight={dataRight}\n                        legendRight={legendRight}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                        // yTicksRightPostfix={'m'}\n                        // unitRight={['m', 'm']}\n                        yTicksRightVal={yTicksRightVal}\n                        avgWindowRight={[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}\n                        smoothRight={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n                        scrollToRight={true}\n\n                        // marker={week}\n                    />\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default MiniAdGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Errors extends Component {\n    async loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadErrors();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadErrors = async () => {\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getErrors();\n\t}\n\n    toggleLine = (e) => {\n\t\tconst { idx } = e.target.closest('tr').dataset;\n        const { showError = {} } = this.state;\n        showError[idx] = !showError[idx];\n        this.setState({ showError });\n    }\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n    render() {\n        const { showError = {} } = this.state;\n        const { adminStore } = this.props.stores;\n        const { errors } = adminStore;\n        return (\n            <div class='col-12'>\n                <h5>Klient errors</h5>\n                <div>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Date</th>\n                                <th>User</th>\n                                <th>Location</th>\n                                <th>Error</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {errors.map((error, idx) => <>\n                                <tr class='pointerCursor' onClick={this.toggleLine} data-idx={idx}>\n                                    <td>{idx + 1}</td>\n                                    <td class='text-overflow'>{util.isoDate(error.timestamp)}</td>\n                                    {/* <td>{JSON.stringify(error.user, null, 4)}</td> */}\n                                    <td class='text-overflow'>{error.user.email}</td>\n                                    {/* <td><xmp>{JSON.stringify(error.location, null, 4)}</xmp></td> */}\n                                    <td class='text-overflow'>{error.location.href}</td>\n                                    {/* <td>\n                                        <xmp>{JSON.stringify(error.error.name, null, 4)}</xmp>\n                                        <xmp>{JSON.stringify(error.error.message, null, 4)}</xmp>\n                                        <xmp>{error.error.stack.replace(/\\\\n/g, '\\n')}</xmp>\n                                    </td> */}\n                                    <td>\n                                        <strong>{error.error.name}:</strong> {error.error.message}<br />\n                                        {showError[idx] && <xmp>{error.error.stack.replace(/\\\\n/g, '\\n')}</xmp>}\n                                    </td>\n                                </tr>\n                            </>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Errors;"],"sourceRoot":""}