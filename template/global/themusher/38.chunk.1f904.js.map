{"version":3,"sources":["webpack:///./components/forgotten/index.js","webpack:///./components/error/index.js"],"names":["Login","observer","props","handleEmailInput","e","userStore","stores","email","target","value","setState","clearTimeout","checkEmailTimer","setTimeout","checkEmail","updateCapsLockStatus","isCapsLock","sendLoginLink","state","validateCode","validateLoginCode","code","resetLoginLinkMessages","resetLoginMessages","resetEmailSent","updateObjectField","newUser","routeLoginNew","route","login","routeLogin","changeLanguage","appState","setLanguage","showToken","componentDidMount","this","language","render","showLogo","emailIsAvailable","loginLink","emailSent","message","messageIcon","error","errorIcon","loginMessage","loginMessageIcon","loginError","loginErrorIcon","isValidEmail","util","validateEmail","isOkToSendLink","isValidCode","class","src","height","icon","remove","type","style","id","onInput","linkState","placeholder","onClick","disabled","onKeypress","href","role","Component","Error","componentDidUpdate","removeTimer","componentWillUnmount","onclick","className"],"mappings":"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","file":"38.chunk.1f904.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport linkState from 'linkstate';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Error from '../error';\nimport Message from '../message';\n\n@observer\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showToken: false,\n            isCapsLock: false,\n            email: this.props.email,\n            code: '',\n        };\n    }\n\n    handleEmailInput = async (e) => {\n        const { userStore } = this.props.stores;\n        const email = e.target.value;\n        this.setState({ email });\n        clearTimeout(this.checkEmailTimer);\n        this.checkEmailTimer = setTimeout(() => userStore.checkEmail(email), 1000);\n    }\n\n    updateCapsLockStatus = (isCapsLock) => {\n        this.setState({\n            isCapsLock,\n        });\n    }\n\n    sendLoginLink = () => {\n        const { email = '' } = this.state;\n        const { userStore } = this.props.stores;\n        userStore.sendLoginLink(email);\n    }\n\n    validateCode = () => {\n        const { email, code } = this.state;\n        const { userStore } = this.props.stores;\n        userStore.validateLoginCode(email, code);\n    }\n\n    resetLoginLinkMessages = () => {\n        const { userStore } = this.props.stores;\n        userStore.resetLoginLinkMessages();\n    }\n\n    resetLoginMessages = () => {\n        const { userStore } = this.props.stores;\n        userStore.resetLoginMessages();\n    }\n\n    resetEmailSent = () => {\n        const { userStore } = this.props.stores;\n        userStore.updateObjectField('loginLink', 'emailSent', false);\n    }\n\n    newUser = () => {\n        const { email = '' } = this.state;\n        const { routeLoginNew = `/register/${email}` } = this.props;\n        route(routeLoginNew);\n    }\n\n    login = () => {\n        const { email = '' } = this.state;\n        const { routeLogin = `/${email}` } = this.props;\n        route(routeLogin);\n    }\n\n    changeLanguage = (e) => {\n        const lang = e.target.value;\n\t\tconst { appState } = this.props.stores;\n        appState.setLanguage(lang);\n    }\n\n    componentDidMount() {\n        const { userStore, appState } = this.props.stores;\n        const { language = 'en' } = appState;\n        if (this.props.email) {\n            clearTimeout(this.checkEmailTimer);\n            this.checkEmailTimer = setTimeout(() => userStore.checkEmail(this.props.email, language), 1000);\n        }\n    }\n\n    render() {\n        const { isCapsLock, email, code } = this.state;\n        const { appState, userStore } = this.props.stores;\n        const { showLogo = true } = this.props;\n        const { language = 'en' } = appState;\n        const { emailIsAvailable, loginLink, login } = userStore;\n        const { emailSent, message, messageIcon, error, errorIcon } = loginLink;\n        const {\n            message: loginMessage, messageIcon: loginMessageIcon,\n            error: loginError, errorIcon: loginErrorIcon\n        } = login;\n\n        const isValidEmail = util.validateEmail(email);\n        const isOkToSendLink = isValidEmail && !emailIsAvailable;\n        const isValidCode = util.validateCode(code, 100000, 999999);\n\n        const darkmode = true;\n\n        if (emailSent) {\n            return (\n                <div class='container-fluid'>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 pt-5'>\n                            {showLogo && <>\n                                <div class='d-flex justify-content-center mb-5 mt-5'>\n                                    {darkmode ? <>\n                                        <img src={`https://themusher.app/assets/logo-qpaws-dark.png`} height='100' />\n                                    </> : <>\n                                        <img src={`https://themusher.app/assets/logo-qpaws-light.png`} height='100' />\n                                    </>}\n                                </div>\n                            </>}\n                            {/* <div class='d-flex justify-content-center'>\n                                <h5 class='mt-1 mb-5'><Text id='forgotten.forgotten'>Glemt passord</Text></h5>\n                            </div> */}\n\n                            <Error message={error} icon={errorIcon} remove={this.resetLoginLinkMessages} />\n                            <Error message={loginError} icon={loginErrorIcon} remove={this.resetLoginMessages} />\n                            <Message message={message} icon={messageIcon} remove={this.resetLoginLinkMessages}  />\n                            <Message message={loginMessage} icon={loginMessageIcon} remove={this.resetLoginMessages}  />\n\n                            <div class='form-group'>\n                                {/* <label for='codeInput'><i class='fas fa-unlock-alt' /> <Text id='forgotten.one-time-code'>Engangskode for</Text> {email}</label> */}\n                                <Localizer>\n                                    <input type='text'\n                                        class={`form-control form-control-lg ${code ? (isValidCode ? 'is-valid' : 'is-invalid') : ''}`}\n                                        style='font-size: 40px; letter-spacing: 5px'\n                                        id='codeInput'\n                                        onInput={linkState(this, 'code')}\n                                        value={code}\n                                        placeholder={<Text id='forgotten.one-time-code'>Engangskode</Text>}\n                                    />\n                                </Localizer>\n                                {code && !isValidCode && <div class=\"invalid-feedback text-white\" style={'display: block;'}>\n                                    <Text id='forgotten.otp-not-valid'>Hmm, koden ser ikke helt riktig ut. Kan det være en skrivefeil?</Text>\n                                </div>}\n                                {code && isValidCode && !emailIsAvailable && <div class=\"invalid-feedback text-white\" style={'display: block;'}>\n                                    <Text id='forgotten.otp-valid'>Koden ser bra ut.</Text>\n                                </div>}\n                            </div>\n\n                            <button class={`btn btn-block btn-lg ${isValidCode ? 'btn-primary' : 'btn-primary'}`} type='button'\n                                onClick={this.validateCode}\n                                disabled={!isValidCode}\n                            >\n                                <i class='far fa-paper-plane mr-2' />\n                                <Text id='forgotten.login-with-otp'>Logg meg inn med koden</Text>\n                            </button>\n\n\n                            <small class='form-text text-muted mt-5 text-center'>\n                                <button class='btn btn-small btn-link text-white'\n                                    onClick={this.login}\n                                >\n                                    <Text id='forgotten.goto-login'>Jeg husker passordet. Gå til logg inn.</Text>\n                                </button>\n                            </small>\n\n                            <small class='form-text text-muted mt-2 text-center'>\n                                <button class='btn btn-small btn-link text-white'\n                                    onClick={this.resetEmailSent}\n                                >\n                                    <Text id='forgotten.send-new-otp'>Jeg trenger en ny kode.</Text>\n                                </button>\n                            </small>\n\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div class='container-fluid'>\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 pt-5'>\n                        {showLogo && <>\n                            <div class='d-flex justify-content-center mb-5 mt-5'>\n                                {darkmode ? <>\n                                    <img src={`https://themusher.app/assets/logo-qpaws-dark.png`} height='100' />\n                                </> : <>\n                                    <img src={`https://themusher.app/assets/logo-qpaws-light.png`} height='100' />\n                                </>}\n                            </div>\n                        </>}\n                        {/* <div class='d-flex justify-content-center'>\n                            <h5 class='mt-1 mb-5'><Text id='forgotten.forgotten'>Glemt passord</Text></h5>\n                        </div> */}\n\n                        <Error message={error} icon={errorIcon} remove={this.resetLoginLinkMessages} />\n                        <Message message={message} icon={messageIcon} remove={this.resetLoginLinkMessages}  />\n\n                        <div class='form-group'>\n                            {/* <label for='emailInput'><i class='far fa-envelope' /> <Text id='forgotten.email'>E-post</Text></label> */}\n                            <Localizer>\n                                <input type='email'\n                                    class={`form-control form-control-lg ${email ? (isValidEmail && !emailIsAvailable ? 'is-valid' : 'is-invalid') : ''}`}\n                                    id='emailInput'\n                                    onInput={this.handleEmailInput}\n                                    value={email}\n                                    onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                    placeholder={<Text id='forgotten.email'>E-post</Text>}\n                                />\n                            </Localizer>\n                            {email && isValidEmail && emailIsAvailable && <div class='invalid-feedback text-white' style={`display: block;`}>\n                                <Text id='forgotten.email-not-found'>E-posten finnes ikke.</Text> <a href={`/register/${email}`}><Text id='forgotten.register'>registrere deg</Text></a> 😃\n                            </div>}\n                            {email && !isValidEmail && <div class=\"invalid-feedback text-white\" style={'display: block;'}>\n                                <Text id='forgotten.email-not-valid'>Hmm, e-posten ser ikke helt riktig ut. Kan det være en skrivefeil?</Text>\n                            </div>}\n                            {email && isValidEmail && !emailIsAvailable && <div class=\"invalid-feedback text-white\" style={'display: block;'}>\n                                <Text id='forgotten.email-looks-good'>E-post ser bra ut.</Text>\n                            </div>}\n                        </div>\n\n\n                        {isCapsLock && <div class='alert alert-danger' role='alert'>\n                            <Text id='forgotten.caps-lock-is-on'>CAPS LOCK er på!</Text>\n                        </div>}\n\n                        <button class={`btn btn-block btn-lg ${isOkToSendLink ? 'btn-primary' : 'btn-primary'}`} type='button'\n                            onClick={this.sendLoginLink}\n                            disabled={!isOkToSendLink}\n                        >\n                            <i class='far fa-paper-plane mr-2' />\n                            <Text id='forgotten.send-reset-link'>Send meg en reset link</Text>\n                        </button>\n\n                        <small class='form-text text-muted mt-5 text-center'>\n                            <button class='btn btn-small btn-link text-white'\n                                onClick={this.login}\n                            >\n                                <Text id='forgotten.goto-login'>Jeg husker passordet. Gå til logg inn.</Text>\n                            </button>\n                        </small>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst ERROR_DISPLAY_MS = 10000;\n\n@observer\nclass Error extends Component {\n    componentDidUpdate() {\n        const { remove = () => {} } = this.props;\n        clearTimeout(this.removeTimer);\n        this.removeTimer = setTimeout(() => remove(), ERROR_DISPLAY_MS);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.removeTimer);\n    }\n\n    render() {\n        const { message, icon, remove = () => {} } = this.props;\n\n        if (!message) {\n            return '';\n        }\n        return (\n            <div class='container'>\n                <div class='alert alert-danger row'>\n                    <div class={`col-12`}>\n                        <a href='#' onclick={remove} class='float-right'>\n                            <i className='fas fa-times' />\n                        </a>\n                        {icon && <h1 class='float-left mr-3'><i class={icon} /></h1>}\n                        {message && <span>{message}</span>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Error;\n"],"sourceRoot":""}