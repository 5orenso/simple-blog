{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/data/distance.js","webpack:///./routes/workouts/tracking.js","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js","webpack:///./components/team/teams.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","displayDistance","distance","util","format","Distance","value","smallUnit","userStore","stores","user","settings","imperial","kmToMiles","class","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","badGpsStatuses","subMenuMarginTop","isLoading","isSaving","hideProminentDisclosure","mapHeight","reloadLastEpoch","Types","updateTextField","e","type","updateField","isNew","id","field","target","dataset","parseInt","toggleType","typeId","workout","toJS","raceStore","types","language","saved","help","hasRaces","getSignupByUserEmail","email","length","filter","map","idx","style","onClick","icon","lang","name","role","WorkoutTracking","updateFieldValue","async","datatype","elementtype","skipTimer","workoutStore","newValue","localObjectValue","Array","isArray","images","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","setTimeout","checkNested","totalDistance","maxSpeed","avgSpeed","ascent","decent","duration","rest","startLatlng","endLatlng","gpx","gpxInfo","updateObject","roundTo","distanceKm","speedmax","speedAvg","elevation","save","getState","backgroundGeoLocationReady","cordovaGetState","cordovaProviderState","cordovaIsPowerSaveMode","cordovaGetCurrentPosition","checkForErrors","currentTeam","totalTime","currentSpeed","isRunning","cordovaAuthorizationStatus","powerSaveStatus","providerState","geoLocationState","cordovaActiveTrackingParams","battery","pluginState","enabled","gpsPluginEnabled","hasAccessToGPS","indexOf","data","timestamp","Math","floor","Date","getTime","error","message","stack","JSON","stringify","deviceInfo","platformId","platformVersion","location","window","fetchApi","method","err","console","log","loadStartup","appState","workoutid","getFingerprint","getInfo","loadExistingWorkout","loadRaceInProgress","setState","load","limit","startEpoch","date","now","cordovaSetTimes","startTime","lastTime","calculatedTotalDistance","setTotalDistance","cordovaSetOdometer","startTracking","newWorkout","isInProgress","lastWorkout","query","team","skipUpdate","sort","lastWoutoutObject","dogs","dogsLeft","dogsRight","mushers","equipment","sledWeight","response","insert","isoDate","cordovaResetTracking","cordovaStartTracking","resumeTracking","cordovaResumeTracking","pauseTracking","cordovaPauseTracking","finishTracking","cordovaSaveTracking","route","confirmProminentDisclosure","updateSetting","cancelTracking","debug","saveField","reloadInSec","normalizeBetween","activeTrackingWorkoutId","activeTrackingTeamId","coords","bgGeo","workoutInProgressId","heading","windDirection","isCordova","year","getYear","isAdmin","teamName","findTeam","workoutType","findWorkoutType","workoutTypeIcon","raceInProgress","raceTeams","musher","hasStarted","typeOfTracking","batteryUsage","battegryLevelStart","battegryLevelEnd","prominentDisclosure","activeRace","race","title","callback","key","unsetTeamIfSelected","highlight","showAll","secToHms","altitude","params","aria-hidden","href","native","Temperature","celciusToFahrenheit","Weight","kgToPounds","Elevation","meterToFeet","Speed","kmtToMph","Teams","toggleTeam","dogStore","setCurrentTeam","undefined","isDefined","showAllTeams","teams"],"mappings":"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","file":"32.chunk.03a9a.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst badGpsStatuses = ['NOT DETERMINED', 'RESTRICTED', 'DENIED', 'WHEN_IN_USE'];\n\n// import Workout from '../../components/workout';\n// import WorkoutWeek from '../../components/workout/week';\nimport Teams from '../../components/team/teams';\n// import Map from '../../components/map';\n// import Gauge from '../../components/gauge';\n\nconst initialState = {\n\tisLoading: false,\n\tisSaving: false,\n    hideProminentDisclosure: false,\n    mapHeight: 300,\n    reloadLastEpoch: null,\n};\n\nconst BUTTON_SIZE = '80px';\nconst RELOAD_INTERVAL_IN_SEC = 300;\n\n@observer\nclass Types extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    updateTextField = (e) => {\n        const { type, updateField, isNew } = this.props;\n        const { id, field } = e.target.dataset;\n        const value = e.target.value;\n        updateField({ id: parseInt(id, 10), field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore, raceStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help, isNew } = this.props;\n        const value = workout[field];\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const hasRaces = raceInProgress.length > 0;\n\n        return (\n            <div class={`form-group pb-1 mt-4 ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                {/* <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label> */}\n                <div class='container-fluid px-1'>\n                    <div class='row'>\n                        {types && types.filter(e => e.id <= 2).map((type, idx) => (\n                            <div class='col-6 mb-1 px-0'>\n                                <button\n                                    class={`btn btn-sm btn-block rounded-none\n\t\t\t\t\t\t\t\t\t\t${idx === 0 ? 'rounded-pill-left' : (idx + 1 === 2 ? 'rounded-pill-right': '')}\n                                        clearfix ${value === type.id ? 'btn-info' : 'btn-outline-info'} text-nowrap`}\n\t\t                            style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={() => this.toggleType(type.id)}\n                                >\n                                    {type.icon && <i class={type.icon} />} {language && type.lang && type.lang[language] ? type.lang[language] : type.name}\n                                    {hasRaces && type.id === 2 && <>\n                                        {value === type.id ? <>\n                                            <i class='fas fa-check float-right' />\n                                        </> : <>\n                                            <div class='spinner-grow text-warning float-right' role='status'>\n                                                <span class='sr-only'>Loading...</span>\n                                            </div>\n                                            <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                        </>}\n                                    </>}\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass WorkoutTracking extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    updateFieldValue = async ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        const { workoutStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        const { workout } = workoutStore;\n        if (field === 'images') {\n            if (Array.isArray(workout.images) && Array.isArray(value)) {\n                localObjectValue = [...workout.images, ...value];\n            }\n        }\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n        if (isNew) {\n            workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        } else {\n            workoutStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                await this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n\n        // GPX update stuff\n        if (field === 'gpx' && workout && util.checkNested(workout, 'gpx', 'gpxInfo')) {\n            const { totalDistance, maxSpeed, avgSpeed, ascent, decent, duration, rest, startLatlng, endLatlng } = workout.gpx.gpxInfo;\n            const updateObject = {};\n            if (duration) {\n                workoutStore.updateField(id, 'duration', duration);\n                updateObject.duration = duration;\n            }\n            if (rest) {\n                workoutStore.updateField(id, 'rest', rest);\n                updateObject.rest = rest;\n            }\n            if (totalDistance) {\n                workoutStore.updateField(id, 'distanceKm', util.roundTo(totalDistance, 10));\n                updateObject.distanceKm = util.roundTo(totalDistance, 10);\n            }\n            if (maxSpeed) {\n                workoutStore.updateField(id, 'speedmax', util.roundTo(maxSpeed, 10));\n                updateObject.speedmax = util.roundTo(maxSpeed, 10);\n            }\n            if (avgSpeed) {\n                workoutStore.updateField(id, 'speedAvg', util.roundTo(avgSpeed, 10));\n                updateObject.speedAvg = util.roundTo(avgSpeed, 10);\n            }\n            if (ascent) {\n                workoutStore.updateField(id, 'elevation', ascent);\n                updateObject.elevation = ascent;\n            }\n            if (decent) {\n                workoutStore.updateField(id, 'decent', decent);\n                updateObject.decent = decent;\n            }\n            if (startLatlng) {\n                workoutStore.updateField(id, 'startLatlng', startLatlng);\n                updateObject.startLatlng = startLatlng;\n            }\n            if (endLatlng) {\n                workoutStore.updateField(id, 'endLatlng', endLatlng);\n                updateObject.endLatlng = endLatlng;\n            }\n            await workoutStore.save(updateObject, workout.id);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { workoutStore } = this.props.stores;\n        if (id && field) {\n            await workoutStore.saveField(id, field, value);\n        }\n    }\n\n\tgetState = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        const { backgroundGeoLocationReady } = workoutStore;\n\n        if (!backgroundGeoLocationReady) {\n            await workoutStore.cordovaGetState();\n            await workoutStore.cordovaProviderState();\n            await workoutStore.cordovaIsPowerSaveMode();\n        }\n\t\tawait workoutStore.cordovaGetCurrentPosition(true);\n\t}\n\n    checkForErrors = () => {\n        try{\n            const { workoutStore, userStore } = this.props.stores;\n            const { user } = userStore;\n            const {\n                currentTeam, totalTime = 0, currentSpeed = 0, totalDistance = 0,\n                isRunning, saved, workout, newWorkout, cordovaAuthorizationStatus, powerSaveStatus,\n                providerState, geoLocationState,\n                cordovaActiveTrackingParams,\n                activeTrackingWorkoutId, activeTrackingTeamId,\n                battery, activity, coords, bgGeo,\n                pluginState,\n            } = workoutStore;\n\n            const { enabled: gpsPluginEnabled, status: gpsPluginStatus, gps: gpsPluginGps, network: gpsPluginNetwork } = providerState;\n            const { workout: gpsPluginWorkout, team: gpsPluginTeam } = cordovaActiveTrackingParams;\n            const hasAccessToGPS = badGpsStatuses.indexOf(cordovaAuthorizationStatus) === -1;\n\n\n            if (gpsPluginEnabled && !powerSaveStatus && hasAccessToGPS) {\n                return false;\n            }\n\n            const data = {\n                timestamp: Math.floor(new Date().getTime() / 1000),\n                error: {\n                    name: 'BackgroundGeolocation',\n                    message: 'Problem with BackgroundGeolocation',\n                    stack: `Status:\nuser.email: ${JSON.stringify(user.email, null, 4)}\nuser.deviceInfo: ${JSON.stringify(user.deviceInfo, null, 4)}\nuser.platformId: ${JSON.stringify(user.platformId, null, 4)}\nuser.platformVersion: ${JSON.stringify(user.platformVersion, null, 4)}\ncurrentTeam: ${JSON.stringify(currentTeam, null, 4)}\nisRunning: ${JSON.stringify(isRunning, null, 4)}\ntotalTime: ${JSON.stringify(totalTime, null, 4)}\ncurrentSpeed: ${JSON.stringify(currentSpeed, null, 4)}\ntotalDistance: ${JSON.stringify(totalDistance, null, 4)}\ncordovaActiveTrackingParams: ${JSON.stringify(cordovaActiveTrackingParams)}\nhasAccessToGPS: ${JSON.stringify(hasAccessToGPS)}\n\nproviderState:\n${JSON.stringify(providerState, null, 4)}\n\npluginState:\n${JSON.stringify(pluginState, null, 4)}\n\ngeoLocationState:\n${JSON.stringify(geoLocationState, null, 4)}\n\npowerSaveStatus:\n${JSON.stringify(powerSaveStatus, null, 4)}\n\ncordovaAuthorizationStatus:\n${JSON.stringify(cordovaAuthorizationStatus, null, 4)}\n\nbattery:\n${JSON.stringify(battery, null, 4)}\n\n                    `,\n                },\n                location: window.location,\n            };\n            util.fetchApi('/api/errors/', { method: 'POST' }, data);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    loadStartup = async () => {\n\t\tconst { workoutStore, raceStore, appState, userStore } = this.props.stores;\n        const { workoutid } = this.props;\n        const { cordovaActiveTrackingParams } = workoutStore;\n\n        await appState.getFingerprint();\n        await userStore.getInfo();\n        await this.getState();\n\n        if (workoutid || cordovaActiveTrackingParams.workout) {\n            await this.loadExistingWorkout();\n        } else {\n            this.updateFieldValue({\n                field: 'type',\n                value: 1,\n                isNew: true,\n            });\n        }\n        await raceStore.loadRaceInProgress();\n        this.checkForErrors();\n    }\n\n    loadExistingWorkout = async () => {\n        this.setState({ isLoading: true });\n        const { workoutStore } = this.props.stores;\n        const { cordovaActiveTrackingParams } = workoutStore;\n        const { workoutid } = this.props;\n\n        if (cordovaActiveTrackingParams.workout || workoutid) {\n            await workoutStore.load(cordovaActiveTrackingParams.workout || workoutid, {}, { limit: 10 });\n        }\n        const { workout } = workoutStore;\n        if (workout && workout.id) {\n            const startEpoch = Math.floor(new Date(workout.date).getTime() / 1000);\n            const now = Math.floor(new Date().getTime() / 1000);\n            workoutStore.cordovaSetTimes({\n                startTime: startEpoch,\n                lastTime: now,\n                totalTime: now - startEpoch,\n            });\n            let distanceKm = workout.distanceKm;\n            if (distanceKm <= 0 && workout.gpxInfo && workout.gpxInfo.calculatedTotalDistance) {\n                distanceKm = workout.gpxInfo.calculatedTotalDistance;\n            }\n            workoutStore.setTotalDistance(distanceKm * 1000);\n            workoutStore.cordovaSetOdometer(distanceKm * 1000);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    // loadWorkout = async () => {\n    //     const { workoutStore } = this.props.stores;\n    //     const { workout } = workoutStore;\n    //     if (workout.id) {\n    //         await workoutStore.load(workout.id);\n    //     }\n    // }\n\n    startTracking = async () => {\n        this.setState({ isLoading: true });\n\t\tconst { workoutStore } = this.props.stores;\n        const { workoutid } = this.props;\n        const { currentTeam, newWorkout = {} } = workoutStore;\n        if (workoutid) {\n            await workoutStore.load(workoutid);\n            const updateObject = {\n                isInProgress: 1,\n            };\n            await workoutStore.save(updateObject, workoutid);\n        } else {\n            const workouts = await workoutStore.load({ query: { team: currentTeam }, skipUpdate: 1, limit: 5, sort: '-createdDate' });\n            let lastWorkout = workouts[0];\n            const lastWoutoutObject = {};\n            if (lastWorkout) {\n                lastWoutoutObject.dogs = lastWorkout.dogs || [];\n                lastWoutoutObject.dogsLeft = [];\n                lastWoutoutObject.dogsRight = [];\n                lastWoutoutObject.mushers = lastWorkout.mushers;\n                lastWoutoutObject.type = lastWorkout.type || 2;\n                lastWoutoutObject.equipment = lastWorkout.equipment;\n                lastWoutoutObject.sledWeight = lastWorkout.sledWeight;\n            }\n\n            const response = await workoutStore.insert({\n                name: `New workout tracking ${util.isoDate()}`,\n                team: currentTeam,\n                isInProgress: 1,\n                ...lastWoutoutObject,\n                type: newWorkout.type || 1,\n            });\n\n            await workoutStore.cordovaResetTracking();\n            await workoutStore.load(response.data.id);\n        }\n\n        const { workout } = workoutStore;\n        workoutStore.cordovaStartTracking({ workout: workout.id, team: currentTeam });\n        // this.setTimers();\n        this.setState({ isLoading: false });\n    }\n\n    // tickReloadTimeer() {\n\t// \tconst { reloadIsActive, reloadLastEpoch } = this.state;\n    //     if (reloadIsActive) {\n\t// \t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t// \t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t// \t\tthis.setState({ reloadInSec });\n\t// \t\tclearTimeout(this.updateTimer.tick);\n\t// \t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n    //     }\n\t// \treturn false;\n    // }\n\n    // setTimers = () => {\n    //     // Set reload timer\n    //     const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \tthis.setState({\n\t// \t\treloadIsActive: true,\n\t// \t\treloadLastEpoch,\n\t// \t}, () => this.tickReloadTimeer());\n\n\t// \tclearTimeout(this.updateTimer.reload);\n\t// \tthis.updateTimer.reload = setTimeout(async () => {\n\t// \t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \t\tthis.setState({ reloadLastEpoch });\n\t// \t\tthis.loadWorkout();\n\t// \t}, RELOAD_INTERVAL_IN_SEC * 1000);\n    // }\n\n    resumeTracking = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        await workoutStore.cordovaResumeTracking();\n        const { workout, currentTeam } = workoutStore;\n        const updateObject = {\n            isInProgress: 1,\n            team: currentTeam,\n        };\n        await workoutStore.save(updateObject, workout.id);\n    }\n\n    pauseTracking = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        await workoutStore.cordovaPauseTracking();\n        const { workout } = workoutStore;\n        const updateObject = {\n            isInProgress: 2,\n        };\n        await workoutStore.save(updateObject, workout.id);\n    }\n\n    finishTracking = async () => {\n        this.setState({ isSaving: true });\n\t\tconst { workoutStore } = this.props.stores;\n        await workoutStore.cordovaSaveTracking();\n        await workoutStore.cordovaResetTracking();\n        const { workout, currentTeam } = workoutStore;\n        const updateObject = {\n            isInProgress: 0,\n            team: currentTeam,\n        };\n        await workoutStore.save(updateObject, workout.id);\n        this.setState({ isSaving: false });\n\n        route('/workouts/list');\n    }\n\n    confirmProminentDisclosure = async () => {\n        const { userStore } = this.props.stores;\n        this.setState({ hideProminentDisclosure: true })\n        await userStore.updateSetting({ 'settings.prominentDisclosure': 1 });\n        await userStore.getInfo();\n    }\n\n    cancelTracking = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        workoutStore.cordovaResetTracking();\n        route('/workouts/list');\n    }\n\n    componentDidMount() {\n        this.loadStartup();\n    }\n\n    debug = () => {\n        const { workoutStore } = this.props.stores;\n        const { currentTeam, newWorkout = {} } = workoutStore;\n        console.log({ currentTeam, newWorkout });\n    }\n\n\trender() {\n\t\tconst { isLoading, isSaving, hideProminentDisclosure, mapHeight, reloadLastEpoch, reloadInSec } = this.state;\n        const reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\tconst { userStore, appState, workoutStore, raceStore } = this.props.stores;\n        const { currentTeam, totalTime = 0, currentSpeed = 0, totalDistance = 0,\n            isRunning, saved, workout, newWorkout, cordovaAuthorizationStatus, powerSaveStatus,\n            providerState, geoLocationState,\n            cordovaActiveTrackingParams,\n            activeTrackingWorkoutId, activeTrackingTeamId,\n            battery, activity, coords, bgGeo,\n            pluginState,\n        } = workoutStore;\n\n        const { enabled: gpsPluginEnabled, status: gpsPluginStatus, gps: gpsPluginGps, network: gpsPluginNetwork } = providerState;\n        const { workout: gpsPluginWorkout, team: gpsPluginTeam } = cordovaActiveTrackingParams;\n\n        const { workout: workoutInProgressId } = cordovaActiveTrackingParams;\n\n        const heading = mu.windDirection(coords.heading);\n\n        const { mapColorMode, mapRangeMin, mapRangeMax, isCordova } = appState;\n\t\tconst { week, year = util.getYear(), workoutid } = this.props;\n\t\tconst { user, isAdmin } = userStore;\n        const { settings = {}, language = 'en' } = user;\n        const teamName = userStore.findTeam(workout.team);\n        const workoutType = userStore.findWorkoutType({ type: workout.type, language });\n        const workoutTypeIcon = userStore.findWorkoutType({ type: workout.type, field: 'icon' });\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const hasRaces = raceInProgress.length > 0;\n        const raceTeams = raceInProgress.map(e => parseInt(e.musher.team, 10));\n\n        const hasStarted = user && user.email;\n\n        const isNew = !workout.id;\n\n        const typeOfTracking = isNew ? newWorkout.type : workout.type;\n\n        const hasAccessToGPS = badGpsStatuses.indexOf(cordovaAuthorizationStatus) === -1;\n\n        // if (!gpsPluginEnabled && workoutid !== 'debug') {\n        //     return (<>\n        //        <div class='container-fluid h-100 fixed-top bg-light' style='z-index: 10000;'>\n        //             <div class='row h-100'>\n        //                 <div class='col-12 text-center my-auto'>\n        //                     <div class='display-1 text-muted'>\n        //                         <i class='fas fa-bomb' />\n        //                     </div>\n        //                     <h3>Lost connection to the gps plugin...</h3>\n        //                     <p>Please restart the app to continue the tracking.</p>\n\n        //                     {isAdmin && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n        //                         <xmp>\n        //                             gpsPluginEnabled: {JSON.stringify(gpsPluginEnabled, null, 4)}<br />\n        //                             providerState: {JSON.stringify(providerState, null, 4)}<br />\n        //                             activeTrackingWorkoutId: {JSON.stringify(activeTrackingWorkoutId, null, 4)}<br />\n        //                             activeTrackingTeamId: {JSON.stringify(activeTrackingTeamId, null, 4)}<br />\n        //                             {bgGeo && <>bgGeo: {JSON.stringify(bgGeo.params, null, 4)}<br /></>}\n        //                         </xmp>\n        //                     </div>}\n\n        //                 </div>\n        //             </div>\n        //         </div>\n        //     </>);\n        // }\n\n        let batteryUsage;\n        if (workout && workout.gpxInfo && workout.gpxInfo.battegryLevelStart) {\n            batteryUsage = (workout.gpxInfo.battegryLevelStart - workout.gpxInfo.battegryLevelEnd) * 100;\n        }\n\n        if (hasStarted && !isLoading && !hideProminentDisclosure && !settings.prominentDisclosure) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5>Background Location Access</h5>\n                            <p>\n                                QPaws collects location data when a workout session is in progress.\n                                This is done to enable tracking your workouts, calculating distance and load index.\n                                The location data is collected even when the app is closed or not in use.\n                            </p>\n                            <p>\n                                The data will be uploaded to your account at themusher.app where you may\n                                view and/or delete your location history.\n                            </p>\n                            <p>\n                                The complete <a href='https://litt.no/v2/the-musher/privacy-policy-for-the-musher/247' native>PRIVACY POLICY FOR QPAWS</a> is located at the litt.no.\n                            </p>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <button class='btn btn-primary float-right' onClick={this.confirmProminentDisclosure}>I understand</button>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (!hasStarted) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-center mt-5 pt-5'>\n                            <div class='spinner-border text-primary mx-auto' role='status' style='width: 100px; height: 100px;'>\n                                <span class='sr-only'>Loading...</span>\n                            </div>\n                            <br />\n                            Loading user info and other stuff...\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid fixed-top h-100' style={`\n                padding-bottom: ${MARGIN_BOTTOM};\n                padding-top: ${MARGIN_TOP};\n                height: calc(100vh) !important;\n                overflow-x: auto;\n                overflow-y: auto;\n                transition: .3s;\n                overscroll-behavior: contain;\n                z-index: 10000;\n            `}>\n                <div class={`navbar-themed fixed-top text-center bg-${isRunning ? 'success' : 'warning'} p-2`}>\n                    {isRunning ? <>\n                        <h1 class='text-white font-weight-bold'>\n                            Tracking\n                            <div class='spinner-grow ml-3' role='status' />\n                        </h1>\n                    </> : <>\n                        {totalTime > 0 ? <>\n                            <h1 class='text-white font-weight-bold'>\n                                Stopped\n                                <i class='fas fa-pause-circle text-warning ml-3' />\n                            </h1>\n                        </> : <>\n                            <h1 class={`text-${typeOfTracking === 2 ? 'primary' : 'white'} font-weight-bold`}>\n                                Ready to {typeOfTracking === 2 ? <>\n                                    race <i class='fas fa-flag-checkered' />\n                                </> : <>\n                                    start <i class='fas fa-running' />\n                                </>}\n                            </h1>\n                        </>}\n                    </>}\n                    {/* {reloadInSec >= 0 && <>\n                        <div class='progress' style='height: 2px;'>\n                            <div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n                        </div>\n                    </>} */}\n                </div>\n\t\t\t\t<div class='row bg-light'>\n                    {/* <xmp>\n                    totalTime: {totalTime}<br />\n                    cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams)}<br />\n                    </xmp> */}\n\n                    {!isRunning && raceInProgress && raceInProgress.length > 0 && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='alert alert-warning'>\n                            <h5><Text id='races.race-in-progress'>Løp pågår</Text></h5>\n                            <ul>\n                                {raceInProgress.map(activeRace => <li>\n                                    {activeRace.race.title}\n                                </li>)}\n                            </ul>\n                            <i class='fas fa-exclamation-triangle' /> <Text id='races.choose-correct-team-and-type'>Velg riktig team og type for løpet.</Text>\n                        </div>\n                    </div>}\n\n\t\t\t\t\t{isRunning && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 font-weight-bold position-relative text-center bg-light'>\n                        {workout.name}\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 bg-light'>\n                        {isRunning ? <>\n                            <span class='float-left'>\n                                <i class={`fas fa-users text-muted`} /> {teamName}\n                            </span>\n                            <span class='float-right'>\n                                <i class={`${workoutTypeIcon} text-muted`} /> {workoutType}\n                            </span>\n                            {/* {JSON.stringify({ cordovaActiveTrackingParams, activeTrackingWorkoutId, activeTrackingTeamId })} */}\n                        </> : <>\n                            {/* <label for='teams'><i class={`fas fa-users text-muted`} /> Team</label> */}\n                            <Teams stores={this.props.stores} callback={this.debug} key={`teams-${currentTeam}`} unsetTeamIfSelected={false} highlight={raceTeams} showAll={false} />\n                            {!currentTeam && <>\n                                <div class='alert alert-danger' role='alert'>\n                                    <i class='fas fa-hand-point-up mr-4 float-left' style='font-size: 2.0em;' /> Please choose team before starting tracking.\n                                </div>\n                            </>}\n\n                            <Types\n                                stores={this.props.stores}\n                                saved={saved}\n                                workout={isNew ? newWorkout : workout}\n                                type='number'\n                                field='type'\n                                icon='fas fa-running'\n                                title={<Text id='workouts.type'>Type tur</Text>}\n                                updateField={this.updateFieldValue}\n                                isNew={isNew}\n                            />\n                            {isNew && !newWorkout.type && <>\n                                <div class='alert alert-danger' role='alert'>\n                                    <i class='fas fa-hand-point-up mr-4 float-left' style='font-size: 2.0em;' /> Please choose type before starting tracking.\n                                </div>\n                            </>}\n                        </>}\n\t\t\t\t\t</div>\n                </div>\n\t\t\t\t<div class='row'>\n                    {/* cordovaAuthorizationStatus: {cordovaAuthorizationStatus} */}\n                    {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} />\n\t\t\t\t\t</div> */}\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-center'>\n                        <i class='fas fa-clock text-muted' /> Time\n                        {batteryUsage > 0 && <small class='text-muted ml-3'>\n                            <i class='fas fa-battery-three-quarters' /> {util.format(batteryUsage, 1)}% used\n                        </small>}\n                        <div class='display-3 my-0 py-0 font-weight-bold d-flex justify-content-center' style='line-height: 1.0em;'>\n                            {util.secToHms(totalTime).split(':').map((e, idx) => <>\n                                <div class='text-center' style='width: 100px;'>{e}</div>\n                                {idx < 2 && <div class='text-muted'>:</div>}\n                            </>)}\n                        </div>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <i class='fas fa-tachometer-alt text-muted' /> Speed\n                        <div class='display-3 my-0 py-0 font-weight-bold d-flex justify-content-center' style='line-height: 1.0em;'>\n                            {/* <div class='text-center w-50'>{util.format(currentSpeed * 3.6, 2)}</div>\n                            <div class='text-muted font-weight-lighter'>km/t</div> */}\n                            <Speed stores={this.props.stores} value={currentSpeed * 3.6} smallUnit={true} />\n                        </div>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <i class='fas fa-road text-muted' /> Distance\n                        <div class='display-3 my-0 py-0 font-weight-bold d-flex justify-content-center' style='line-height: 1.0em;'>\n                            {/* <div class='text-center w-50'>{util.format(totalDistance / 1000, 2)}</div>\n                            <div class='text-muted font-weight-lighter'>km</div> */}\n                            <Distance stores={this.props.stores} value={totalDistance / 1000} smallUnit={true} />\n                        </div>\n                    </div>\n                    <div class='col-6 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <i class='fas fa-compass text-muted' /> Direction\n                        <div class='display-4 my-0 py-0 d-flex justify-content-center' style='line-height: 1.0em;'>\n                            <div class='text-center mr-4'>{heading}</div>\n                        </div>\n                    </div>\n                    <div class='col-6 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <i class='fas fa-mountain text-muted' /> Elevation\n                        <div class='display-4 my-0 py-0 d-flex justify-content-center' style='line-height: 1.0em;'>\n                            {/* <div class='text-center mr-4'>\n                                {util.format(coords.altitude, 0)} <span class='text-muted font-weight-lighter'>m</span>\n                            </div> */}\n                            <Elevation stores={this.props.stores} value={coords.altitude} smallUnit={true} />\n                        </div>\n                        {/* {workout && workout.gpxInfo ? <svg viewBox='0 0 300 100' style='width: 180px; height: 60px; top: 0; left: 0;'>\n                            <path d={`${workout.gpxInfo.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n                        </svg> : <div>-</div>}\n\n                        {workout && workout.gpxInfo ? <svg viewBox='0 0 300 300' style='width: 180px; height: 180px; top: 0; left: 0;'>\n                            <path d={`${workout.gpxInfo.svgMap}`} style='fill: none; stroke: #FF6300; stroke-width: 5; opacity: 0.2;' />\n                        </svg> : <div>-</div>} */}\n\n                    </div>\n\n                    {isAdmin && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <xmp>\n                            gpsPluginEnabled: {JSON.stringify(gpsPluginEnabled, null, 4)}<br />\n                            pluginState: {JSON.stringify(pluginState, null, 4)}<br />\n                            cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams, null, 4)}<br />\n                            activeTrackingWorkoutId: {JSON.stringify(activeTrackingWorkoutId, null, 4)}<br />\n                            activeTrackingTeamId: {JSON.stringify(activeTrackingTeamId, null, 4)}<br />\n                            {bgGeo && <>bgGeo: {JSON.stringify(bgGeo.params, null, 4)}<br /></>}\n                        </xmp>\n                    </div>}\n\n                    {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        {isRunning && workout && workout.gpx && <>\n\t\t\t\t\t\t\t<div style={`height: ${mapHeight}px;`}>\n\t\t\t\t\t\t\t\t<Map\n\t\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\t\tmapId={`${workout.id}-${mapHeight}`}\n\t\t\t\t\t\t\t\t\tgeojson={workout.gpx.geoJSON}\n\t\t\t\t\t\t\t\t\tskipGeojson={false}\n\t\t\t\t\t\t\t\t\tgpxInfo={workout.gpxInfo}\n\t\t\t\t\t\t\t\t\theight={mapHeight}\n\t\t\t\t\t\t\t\t\tmapColorMode={mapColorMode}\n\t\t\t\t\t\t\t\t\tmapRangeMin={mapRangeMin}\n\t\t\t\t\t\t\t\t\tmapRangeMax={mapRangeMax}\n\t\t\t\t\t\t\t\t\tkey={`workout-map-${reloadLastEpoch}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>}\n                    </div> */}\n\n                    <div class='navbar-themed fixed-bottom text-center pb-2'>\n                        {!isCordova && <>\n                            <div class='alert alert-danger' role='alert'>\n                                GPS tracking is not enabled!\n                            </div>\n                        </>}\n                        {!hasAccessToGPS && <>\n                            <div class='alert alert-danger' role='alert'>\n                                No access to GPS in background! Unable to track your workouts. Please go to settings and enable this.\n                            </div>\n                        </>}\n                        {powerSaveStatus && <>\n                            <div class='alert alert-danger' role='alert'>\n                                Powersave is enabled! Unable to track your workouts. Please go to settings and enable this.\n                            </div>\n                        </>}\n\n                        {settings.prominentDisclosure && isCordova && <>\n                            {isRunning ? <>\n                                <button class='btn btn-link' onClick={this.pauseTracking}>\n                                    <i class='fas fa-pause-circle text-danger' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                    <small>Pause</small>\n                                </button>\n                            </> : <>\n                                {workoutInProgressId ? <>\n                                    {isSaving ? <>\n                                        <span class='spinner-border spinner-border-sm' style={`width: ${BUTTON_SIZE}; height: ${BUTTON_SIZE};`} role='status' aria-hidden='true' />\n                                    </> : <>\n                                        <button class='btn btn-link' onClick={this.resumeTracking}>\n                                            <i class='fas fa-play-circle text-danger' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                            <small>Resume</small>\n                                        </button>\n                                        <button class='btn btn-link'  onClick={this.finishTracking}>\n                                            <i class='fas fa-check-circle text-success' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                            <small>Finish</small>\n                                        </button>\n                                    </>}\n                                </> : <>\n                                    {isLoading ? <>\n                                        <span class='spinner-border spinner-border-sm' style={`width: ${BUTTON_SIZE}; height: ${BUTTON_SIZE};`} role='status' aria-hidden='true' />\n                                    </> : <>\n                                        <button class='btn btn-link' onClick={this.startTracking}>\n                                            <i class='fas fa-play-circle text-danger' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                            <small>Start</small>\n                                        </button>\n                                        <button class='btn btn-link'  onClick={this.cancelTracking}>\n                                            <i class='fas fa-times-circle text-warning' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                            <small>Cancel</small>\n                                        </button>\n                                    </>}\n                                </>}\n                            </>}\n                        </>}\n                    </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WorkoutTracking;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Teams extends Component {\n    toggleTeam = (team) => {\n\t\tconst { callback, unsetTeamIfSelected = true } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\t\tif (unsetTeamIfSelected && team === currentTeam) {\n\t\t\tdogStore.setCurrentTeam(undefined);\n\t\t\tworkoutStore.setCurrentTeam(undefined);\n\t\t} else {\n\t\t\tdogStore.setCurrentTeam(team);\n\t\t\tworkoutStore.setCurrentTeam(team);\n\t\t}\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n    showAllTeams = () => {\n\t\tconst { callback } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tdogStore.setCurrentTeam(undefined);\n\t\tworkoutStore.setCurrentTeam(undefined);\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// componentDidMount() {\n\t// \tif (this.container) {\n\t// \t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'center' });\n\t// \t}\n\t// }\n\n    render() {\n        const { userStore, dogStore } = this.props.stores;\n        const { teams } = userStore;\n\t\tconst { currentTeam } = dogStore;\n\t\tconst { highlight, showAll = true } = this.props;\n        return (\n\t\t\t<div class='row mt-2'>\n\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1'\n\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* <xmp><br /><br /><br /><br />{JSON.stringify(teams, null, 4)}</xmp> */}\n\t\t\t\t\t\t{teams && teams.map((team, idx) => (\n\t\t\t\t\t\t\t<div class='col mb-0 px-0 clearfix' key={team.id}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-sm btn-block \n\t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n\t\t\t\t\t\t\t\t\t\t${currentTeam === team.id ? 'btn-success' : 'btn-outline-success'}\n\t\t\t\t\t\t\t\t\t\ttext-nowrap clearfix`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tonClick={() => this.toggleTeam(team.id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i class='fas fa-users' /> {team.name}\n\n\t\t\t\t\t\t\t\t\t{highlight && highlight.indexOf(team.id) > -1 && <>\n\t\t\t\t\t\t\t\t\t\t{currentTeam === team.id ? <>\n\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check float-right' />\n\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-warning float-right' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/* {currentTeam === team.id && <ScrollIntoView horizontal={'center'} vertical={'end'} />} */}\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t{showAll && <div class='row'>\n\t\t\t\t\t\t<div class='col-12 mb-1 px-1 d-flex justify-content-center'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass={`btn btn-sm rounded-lg btn-link text-nowrap clearfix`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tonClick={this.showAllTeams}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-users' /> <Text id='teams.show-all'>Show all</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n    }\n}\n\nexport default Teams;\n"],"sourceRoot":""}