{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/imageSlider/index.js","webpack:///./components/data/distance.js","webpack:///./components/style.css","webpack:///./components/track/commentReply.js","webpack:///./components/track/infoGraph.js","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/workout/graph.js","webpack:///./components/gauge/style.css","webpack:///./components/track/commentAdd.js","webpack:///./components/data/elevation.js","webpack:///./components/track/comments.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./routes/tracks/detail.js","webpack:///./components/imageScroller/index.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/gauge/index.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","touchStart","e","stopPropagation","setState","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","scrollDistance","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","length","imageDots","Array","fill","map","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","img","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","class","style","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","image1","image2","i","displayDistance","distance","util","format","Distance","value","smallUnit","userStore","stores","user","settings","imperial","kmToMiles","module","exports","TrackCommentReply","commentTrack","async","callback","commentId","track","trackStore","comment","response","commentReplyTrack","id","status","inputRef","displayNameShort","firstname","ucfirst","lastname","email","userImage","image","s3SmallLink","for","type","placeholder","onInput","linkState","onClick","WorkoutInfoGraph","showTemperatur","gpx","gpxInfo","subGpxInfo","finalGpxInfo","speeds","elevations","temperatures","climbs","distances","ecor","dataLeft","dataLeft2","dataLeft3","dataRight","dataRight3","legendLeft","legendLeft2","legendLeft3","legendRight3","unitLeft","unitLeft2","unitLeft3","unitRight3","data","mu","smoothArray","idx","push","xTicks","distanceKm","xTicksRange","range","Math","ceil","partSize","floor","l","showXTicks","xTicksVal","val","paddingTop","lineFromXzero","lineFromXmax","showYTicksLeft","yTicksLeftPostfix","avgWindowLeft","smoothLeft","legendRight","showYTicksRight","yTicksRightPostfix","unitRight","avgWindowRight","smoothRight","yMaxMinLeftRound","yTicksRightVal","v","Temperature","celciusToFahrenheit","Weight","kgToPounds","WorkoutGraph","withText","week","duration","rest","ascend","plan","speedAvg","loadIndex","avgDogs","avgImages","sledWeight","rating","temperature","workoutPlanStore","graphWorkoutSummaryWeekDistanceCurrent","graphWorkoutSummaryWeekDistancePrev","graphWorkoutSummaryWeekElevationCurrent","graphWorkoutSummaryWeekElevationPrev","avgDayDistance","avgDayElevation","avgDayDuration","avgDaySpeedAvg","avgDayLoadIndex","avgDayAvgDogs","avgDayAvgImages","avgDaySledWeight","avgDayRest","avgDayRating","avgDayTemperature","graphPlanWeekDistanceCurrent","currentMonth","Date","getMonth","currentYear","getFullYear","isLoading","year","month","showExtra","seasonStart","parseInt","seasonWeeks","weekRange","seasonDays","dayRange","xTicksAll","wo","parts","xTicksAllDays","day","partsDays","xTicksDays","xTicksLink","dataFillLeft","paddingLeft","yTicksLeftWidth","yTicksLeftVal","secToHms","TrackAdd","inputRefObject","showAddImage","body","resizeTextarea","addImage","addImages","handleImageErrored","target","onerror","setTimeout","data-id","isArray","onError","removeImage","data-name","name","object","updateField","autoOpen","Elevation","meterToFeet","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","TrackComments","parentElement","dataset","likeTrackComment","replyId","likeTrackCommentReply","replyComment","focus","toggleComments","toggleReplies","col","offset","compact","currentUser","language","filteredComments","totalComments","diplayedComments","comments","slice","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","max_comments","imgs","toJS","imageIdx","currentImage","currentLocationGeocode","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","addLikeComment","viewImage","data-idx","formatDistance","createdDate","locale","reply","hasLikedReply","data-comment","fields","more","Speed","kmtToMph","Images","handleAddImage","file","addToImages","field","skipTimer","files","uploadStatus","before","after","apiUrl","MARGIN_TOP","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","MAX_LOADINDEX","getMaxLoadIndex","weather","newTrack","showAdminInfo","showWeatherDetails","submenu","TracksDetail","deleteTrack","saveField","PubSub","publish","topics","STATUS_MESSAGE","message","icon","route","toggleAdminInfo","isAdmin","likeTrack","toggleAddComment","toggleShowWeatherDetails","chooseSubmenu","menu","back","history","goBack","updateTimer","load","firstPoint","getWeather","lat","lon","altitude","force","updateItem","resetGraphPlanWeekDistanceCurrent","getWorkoutSummary","loadTrack","isPublic","graphWorkoutSummaryWeekDistanceCurrentTotal","teams","weightedTotalKcal","isAllowedToEdit","indexOf","team","hasLikedNews","href","place","s3Link","native","formatBytes","bytes","isoDate","date","updatedDate","public","userObject","data-menu","mapId","geojson","geoJSON","fullscreenMap","w","getNestedValue","windDirection","isoTime","time","formatDate","weekday","localeMatcher","calculatedTotalDistance","elevation","calculatedAscend","decent","calculatedDescend","normalSpeedMs","normalSpeed","checkNested","key","radius","showPercentText","color","getLoadIndexColor","normalizeBetween","percent","completed","getLoadIndexText","prefix","totalKcalRelated","normalDuration","durationFactor","noimagestext","cols","hasImage","isObject","ImageScroller","scrollImages","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","onClickScrollLeft","el","imageScrollerRef","scrollBy","top","left","onClickScrollRight","event","hypot","pageY","pinchZoomOnTouchStart","preventDefault","start","pinchZoomOnTouchMove","imageElementScale","imageElementMaxScale","scale","min","transform","transition","WebkitTransform","zIndex","pinchZoomOnTouchEnd","dblClick","likeRef","minHeight","appState","isCordova","hasPrev","hasNext","onScroll","filter","title","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","position","border","backgroundColor","bottom","right","textAlign","fontSize","multiple","onchange","Object","keys","isImage","match","result","role","aria-valuenow","aria-valuemin","aria-valuemax","children","mouseData","Gauge","svgRef","heightAdd","showCenterText","centerText","centerTextSize","centerTextX","centerTextY","totalY","totalX","totalTextAnchor","completedY","completedX","completedTextAnchor","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","textSize","textSizeSmall","xmlns","svg","preserveAspectRatio","gaugeBackground","cx","cy","r","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","gaugeText","dominant-baseline","text-anchor","font-size","secondary"],"mappings":"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","file":"31.chunk.bdf27.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackCommentReply extends Component {\n    commentTrack = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await trackStore.commentReplyTrack({ id: track.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TrackCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass WorkoutInfoGraph extends Component {\n    render() {\n        const { showDebug, showTemperatur = true } = this.props;\n        const { trackStore, userStore } = this.props.stores;\n        const { track = {} } = trackStore;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        const { gpx = {}, gpxInfo } = track;\n        const { gpxInfo: subGpxInfo = {} } = gpx;\n\n        const finalGpxInfo = {\n            ...subGpxInfo,\n            ...gpxInfo,\n        };\n        const { speeds = [], elevations = [], temperatures = [], climbs = [], distances = [], ecor = [] } = finalGpxInfo;\n\n        let dataLeft = [];\n        let dataLeft2 = [];\n        let dataLeft3 = [];\n        let dataRight = [];\n        let dataRight3 = [];\n        const legendLeft = [];\n        const legendLeft2 = [];\n        const legendLeft3 = [];\n        const legendRight = [];\n        const legendRight3 = [];\n        const unitLeft = [];\n        const unitLeft2 = [];\n        const unitLeft3 = [];\n        const unitRight = [];\n        const unitRight3 = [];\n\n        if (elevations.length > 0) {\n            const smoothed = mu.smoothArray(elevations, 5);\n            const data = smoothed.map((e, idx) => ({\n                x: idx,\n                y: settings.imperial ? meterToFeet(e) : e,\n            }));\n            dataLeft.push(data);\n            legendLeft.push('Elevation');\n            unitLeft.push('m');\n        }\n        if (showTemperatur) {\n            if (temperatures.length > 0) {\n                const smoothed = mu.smoothArray(temperatures, 2);\n                const data = smoothed.map((e, idx) => ({\n                    x: idx,\n                    y: settings.imperial ? celciusToFahrenheit(e) : e,\n                }));\n                dataLeft2.push(data);\n                legendLeft2.push('Temp');\n                unitLeft2.push('°C');\n            }\n        }\n        if (climbs.length > 0) {\n            const smoothed = mu.smoothArray(climbs, 2);\n            const data = smoothed.map((e, idx) => ({\n                x: idx,\n                y: e,\n            }));\n            dataLeft3.push(data);\n            legendLeft3.push('Climblevel');\n            unitLeft3.push('%');\n        }\n        if (ecor.length > 0) {\n            const smoothed = mu.smoothArray(ecor, 2);\n            const data = smoothed.map((e, idx) => ({\n                x: idx,\n                y: e * 1000,\n            }));\n            dataRight3.push(data);\n            legendRight3.push('ECOR (kcal/kg/km)');\n            unitRight3.push('kcal/kg/km');\n        }\n        // if (distances.length > 0) {\n        //     const smoothed = mu.smoothArray(distances, 30);\n        //     const data = smoothed.map((e, idx) => ({\n        //         x: idx,\n        //         y: e * 1000,\n        //     }));\n        //     dataRight3.push(data);\n        //     legendRight3.push('Distance');\n        //     unitRight3.push('km');\n        // }\n\n        // const firstData = dataLeft[0] || [];\n        const xTicks = [];\n        if (track.distanceKm > 0) {\n            const distance = settings.imperial ? kmToMiles(track.distanceKm) : track.distanceKm;\n            const xTicksRange = util.range(0, Math.ceil(distance), 1);\n            const partSize = Math.ceil(xTicksRange.length / 5);\n            const parts = Math.floor(xTicksRange.length / partSize);\n            // if (showDebug) {\n                // console.log({ xTicksRange, parts, partSize });\n            // }\n            for (let i = 0, l = xTicksRange.length; i < l; i += partSize) {\n                xTicks.push(xTicksRange[i]);\n            }\n            xTicks.push(xTicksRange[xTicksRange.length - 1]);\n        }\n        // if (firstData.length) {\n        //     const partSize = Math.ceil(firstData.length / 4);\n        //     const parts = Math.floor(firstData.length / partSize);\n        //     if (showDebug) {\n        //         console.log({ firstData, parts, partSize });\n        //     }\n        //     for (let i = 0, l = firstData.length; i < l; i += partSize) {\n        //         xTicks.push(firstData[i].epoch);\n        //     }\n        //     xTicks.push(firstData[firstData.length - 1].epoch);\n        // }\n        return (\n            <>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1000}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => settings.imperial ? `${val}mi` : `${val}km`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        // xTicksLink={'/tracks/week/'}\n\n                        dataLeft={dataLeft}\n                        legendLeft={legendLeft}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'ft' : 'm'}\n                        unitLeft={unitLeft}\n                        avgWindowLeft={[0, 0, 0]}\n                        smoothLeft={[1, 1, 1]}\n\n                        dataRight={dataRight}\n                        legendRight={legendRight}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                        yTicksRightPostfix={settings.imperial ? 'mph' : 'km/t'}\n                        unitRight={unitRight}\n                        avgWindowRight={[0, 0, 0]}\n                        smoothRight={[1, 1, 1]}\n\n                        // marker={week}\n                    />\n                </div>\n\n                {dataLeft2.length > 0 && <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1000}\n                        height={100}\n                        showXTicks={1}\n                        xTicksVal={val => settings.imperial ? `${val}mi` : `${val}km`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        // xTicksLink={'/tracks/week/'}\n\n                        dataLeft={dataLeft2}\n                        legendLeft={legendLeft2}\n                        // yMaxLeft={10}\n                        // yMinLeft={-20}\n                        yMaxMinLeftRound={false}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={'°C'}\n                        unitLeft={unitLeft2}\n                        avgWindowLeft={[0]}\n                        smoothLeft={[1]}\n                        // marker={week}\n                    />\n                </div>}\n\n                {dataLeft3.length > 0 && <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1000}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => settings.imperial ? `${val}mi` : `${val}km`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        // xTicksLink={'/tracks/week/'}\n\n                        dataLeft={dataLeft3}\n                        legendLeft={legendLeft3}\n                        // yMaxLeft={20}\n                        // yMinLeft={-20}\n                        yMaxMinLeftRound={false}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={'%'}\n                        unitLeft={unitLeft3}\n                        avgWindowLeft={[0]}\n                        smoothLeft={[1]}\n                        // marker={week}\n\n                        dataRight={dataRight3}\n                        legendRight={legendRight3}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight3.length > 0 ? 1 : 0}\n                        yTicksRightVal={v => util.format(v / 1000, 2)}\n                        // yTicksRightPostfix={'kcal/kg/km'}\n                        unitRight={unitRight3}\n                        avgWindowRight={[0, 0, 0]}\n                        smoothRight={[1, 1, 1]}\n                    />\n                </div>}\n\n            </>\n        );\n    }\n}\n\nexport default WorkoutInfoGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    duration: <Text id='workout.graph.duration'>Duration</Text>,\n    rest: <Text id='workout.graph.rest'>Rest</Text>,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n    speedAvg: <Text id='workout.graph.speedavg'>Speed</Text>,\n    loadIndex: <Text id='workout.graph.loadindex'>Loadindex</Text>,\n\n    avgDogs: <Text id='workout.graph.avgdogs'>Avg dogs</Text>,\n    avgImages: <Text id='workout.graph.avgimages'>Avg images</Text>,\n    sledWeight: <Text id='workout.graph.sledweight'>Sled weight</Text>,\n    rating: <Text id='workout.graph.rating'>Rating</Text>,\n    temperature: <Text id='workout.graph.temperature'>Temperature</Text>,\n}))\n@observer\nclass WorkoutGraph extends Component {\n    render() {\n        const { userStore, workoutPlanStore } = this.props.stores;\n        const {\n            user,\n\t\t\tworkoutSummary,\n\t\t\tgraphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev,\n\t\t\tgraphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev,\n            avgDayDistance, avgDayElevation, \n            avgDayDuration, avgDaySpeedAvg, avgDayLoadIndex, \n            avgDayAvgDogs, avgDayAvgImages, avgDaySledWeight,\n            avgDayRest, avgDayRating, avgDayTemperature,\n\t\t} = userStore;\n        const { settings = {} } = user;\n        const { graphPlanWeekDistanceCurrent } = workoutPlanStore;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const {\n            isLoading,\n            week,\n            distance,\n            duration,\n            rest,\n            ascend,\n            plan,\n            speedAvg,\n            loadIndex,\n            avgDogs,\n            avgImages,\n            sledWeight,\n            rating,\n            temperature,\n            year = currentYear,\n            month = currentMonth,\n            showExtra = false,\n        } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const seasonDays = util.dayRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = Math.floor(xTicksAll.length / 5);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += parts) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        const xTicksAllDays = seasonDays.map(wo => `${wo.day}.${wo.month}`);\n        const partsDays = Math.floor(xTicksAllDays.length / 5);\n        const xTicksDays = [];\n        for (let i = 0, l = xTicksAllDays.length; i < l; i += partsDays) {\n            xTicksDays.push(xTicksAllDays[i]);\n        }\n\n        return (\n            <>\n                {/* <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5> */}\n                <div class='w-100 mt-3 mb-4 border-top pt-5'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <h5 class='text-center'><Text id='workout.graph.total-distance'>Total distance</Text></h5>\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        xTicksLink={'/workouts/week/'}\n\n                        dataLeft={[graphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev, graphPlanWeekDistanceCurrent]}\n                        legendLeft={[`${seasonStart} ${distance}`, `${seasonStart - 1} ${distance}`, `${seasonStart} ${plan}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                        unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                        avgWindowLeft={[0, 0, 0]}\n                        smoothLeft={[1, 1, 1]}\n\n                        dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={1}\n                        yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                        unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                        avgWindowRight={[0, 0]}\n                        smoothRight={[1, 1]}\n\n                        // marker={week}\n                    />\n                </div>\n\n                {!isLoading && graphWorkoutSummaryWeekDistanceCurrent && graphWorkoutSummaryWeekDistanceCurrent.length < 3 && (\n                    <div class='mb-5 py-3 border-top border-bottom'>\n                        <div class='text-left' style='line-height: 1.0em;'>\n                            <div class='display-4 float-left text-warning mr-3'>\n                                <i class='fas fa-paw' />\n                            </div>\n                            <small>\n                                <Text id='workout.graph.too-little-data'>Foreløpig er det litt lite data for å kunne vise noen fine grafer. \n                                Etterhvert som du legger inn flere treninger så vil dette bli en fin tabell og graf som viser progresjonen din.</Text>\n                            </small>\n                        </div>\n                    </div>\n                )}\n                {showExtra && <>\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-rating'>Average rating/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayRating]}\n                            legendLeft={[`${seasonStart} ${rating}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayTemperature]}\n                            legendRight={[`${seasonStart} ${temperature}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? '°F' : '°C'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-distance'>Average distance/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDistance]}\n                            legendLeft={[`${seasonStart} ${distance}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayElevation]}\n                            legendRight={[`${seasonStart} ${ascend}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-duration'>Average duration/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            paddingLeft={50}\n                            yTicksLeftWidth={'50px'}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDuration]}\n                            legendLeft={[`${seasonStart} ${duration}`]}\n                            yTicksLeftVal={val => `${util.secToHms(val)}`}\n\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            // unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayRest]}\n                            legendRight={[`${seasonStart} ${rest}`]}\n                            showYTicksRight={1}\n                            yTicksRightVal={val => `${util.secToHms(val)}`}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-speed'>Average speed/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDaySpeedAvg]}\n                            legendLeft={[`${seasonStart} ${speedAvg}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayLoadIndex]}\n                            legendRight={[`${seasonStart} ${loadIndex}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-dogs'>Average dogs/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayAvgDogs, avgDayAvgImages]}\n                            legendLeft={[`${seasonStart} ${avgDogs}`, `${seasonStart} ${avgImages}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDaySledWeight]}\n                            legendRight={[`${seasonStart} ${sledWeight}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    {/* <xmp>{JSON.stringify(avgDayDuration, null, 4)}</xmp> */}\n                </>}\n            </>\n        );\n    }\n}\n\nexport default WorkoutGraph;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n        };\n        this.inputRef = {};\n    }\n\n    commentTrack = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n\n\t\tconst response = await trackStore.commentTrack({ id: track.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[track.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, track } = this.props;\n        const { comment, showAddImage } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-3 position-relative'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={track.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default TrackAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport TrackReplyComment from '../../components/track/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass TrackComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackComment({ id: track.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackCommentReply({ id: track.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, likeComment } = this.state;\n\t\tconst { track, callback = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'en', isAdmin } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (track.comments) {\n            totalComments = track.comments.length;\n            if (showAllComments) {\n                filteredComments = track.comments;\n            } else {\n                // filteredComments = track.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = track.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n                {track && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n    \n                    const { currentLocationGeocode = {} } = comment;\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded-lg'>\n                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                        <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                    <div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row position-relative'>\n                                                <div\n                                                    class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 60vh;`}\n                                                    onDblclick={this.addLikeComment}\n                                                    data-id={comment.id}\n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                                {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                    <i class='fas fa-heart likeStory' />\n                                                </span>}\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {util.isArray(images) && images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                        {reply.comment}\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <TrackReplyComment stores={this.props.stores} track={track}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default TrackComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst MAX_LOADINDEX = mu.getMaxLoadIndex();\n\nimport Map from '../../components/map';\nimport ImageSlider from '../../components/imageSlider';\nimport ImageScroller from '../../components/imageScroller';\nimport WorkoutGraph from '../../components/workout/graph';\nimport TrackInfoGraph from '../../components/track/infoGraph';\nimport Gauge from '../../components/gauge';\nimport TrackComments from '../../components/track/comments';\nimport TrackAddComment from '../../components/track/commentAdd';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nconst initialState = {\n    weather: [],\n    newTrack: {},\n    showAdminInfo: false,\n    showWeatherDetails: false,\n    submenu: 'map',\n};\n\n@observer\nclass TracksDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n        this.inputRef = {};\n    }\n\n    async loadTrack(props = this.props) {\n\t\tconst { trackStore, userStore, workoutPlanStore } = this.props.stores;\n        await trackStore.load(props.track);\n        const { track } = trackStore;\n\n        if (track.firstPoint) {\n            const weather = await userStore.getWeather({\n                lat: track.firstPoint[1],\n                lon: track.firstPoint[0],\n                altitude: track.firstPoint[2],\n                force: 1,\n            });\n            this.setState({\n                weather,\n            });\n        }\n\n        workoutPlanStore.updateItem('workoutPlans', []);\n\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n        workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n        await userStore.getWorkoutSummary({ track: track.id });\n    }\n\n\tdeleteTrack = async () => {\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst { track } = trackStore;\n        await trackStore.saveField(track.id, 'offline', 1);\n\t\tPubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\tmessage: 'Runden er slettet',\n\t\t\ttype: 'success',\n\t\t\ticon: 'fas fa-check',\n\t\t});\n        route(`/tracks/`);\n\t}\n\n    toggleAdminInfo = () => {\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { isAdmin } = userStore;\n\t\tif (isAdmin) {\n\t\t\tconst { showAdminInfo } = this.state;\n\t\t\tthis.setState({\n\t\t\t\tshowAdminInfo: !showAdminInfo,\n\t\t\t});\n\t\t}\n\t}\n\n    likeTrack = async () => {\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst { track } = trackStore;\n\t\tconst response = await trackStore.likeTrack({ id: track.id });\n\n        if (response && response.status === 200) {\n\t\t\t// this.loadNewsDetail({ news });\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[id]) {\n\t\t\t\tthis.inputRef[id].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    toggleShowWeatherDetails = () => {\n        const { showWeatherDetails } = this.state;\n        this.setState({\n            showWeatherDetails: !showWeatherDetails,\n        })\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadTrack();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.track !== this.props.track) {\n            this.loadTrack(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { trackStore, userStore } = this.props.stores;\n        const { submenu, showAdminInfo, showAddComment, weather, showWeatherDetails } = this.state;\n        const { isPublic } = this.props;\n\n        const { isAdmin, graphWorkoutSummaryWeekDistanceCurrentTotal, user = {} } = userStore;\n        const { teams = [] } = user;\n\t\tconst { track = {} } = trackStore;\n        const { gpx, gpxInfo = {} } = track;\n        const { weightedTotalKcal = 0, loadIndex = 0 } = gpxInfo;\n\t\tconst loadMultiplier = loadIndex / 100;\n\n        const isAllowedToEdit = track.user === user.id || teams.indexOf(track.team) > -1;\n\n        const { likes = [], comments = [] } = track;\n\t\tconst hasLikedNews = track.likes && track.likes.findIndex(e => e.user === user.id) > -1;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <div class='d-flex justify-content-between'>\n                    <div>\n                        <button class='btn btn-link pl-0 fixed-top text-primary'\n                            style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                            onClick={this.back}>\n                            <i class='fas fa-arrow-circle-left' />\n                        </button>\n                    </div>\n                    <div>\n                        <h5 class='text-muted'>&nbsp;</h5>\n                    </div>\n                    <div>\n                        {isAllowedToEdit && <a class='btn btn-sm btn-primary float-right'\n                            href={`/tracks/edit/${track.id}`}\n                        >\n                            <i class='fas fa-edit' /> <Text id='tracks.edit'>Endre</Text>\n                        </a>}\n                    </div>\n                </div>\n\n                <div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='d-flex mb-2'>\n                            {/* {JSON.stringify(dog, null, 4)} */}\n                            <div class={`text-center border rounded-circle imageRounded`} style={track.image ? `background-image: url(\"${track.image.s3SmallLink}\");` : ''}>\n                                {!track.image && <i class='fas fa-map-marked text-muted mt-3' style='font-size: 40px;' />}\n                            </div>\n                            <div class='flex-grow-1 pl-3'>\n                                <h5>{track.name}</h5>\n                                <div>{track.place}</div>\n                                <i class='fas fa-calendar-alt mr-1' />\n                                {track.gpx && track.gpx.s3Link && <span class='float-right font-weight-lighter'><a href={track.gpx.s3Link} native>\n                                    <i class='fas fa-download' /> {util.formatBytes(track.gpx.bytes, 0)}\n                                </a></span>}\n                                {util.isoDate(track.date || track.updatedDate || track.createdDate)}<br />\n                                {track.public === 1 && <span class='badge badge-success'>Is public</span>}\n                                {isPublic && track.userObject && <span class='text-muted font-weight-lighter ml-3'>{mu.displayName(track.userObject)}</span>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'map' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='map'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marked-alt' /> <Text id='tracks.map'>Map</Text></button>\n                                        {submenu === 'map' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'stats' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='stats'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-chart-line' /> <Text id='tracks.stats'>Your stats</Text></button>\n                                        {submenu === 'stats' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'weather' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='weather'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-cloud-sun-rain' /> <Text id='tracks.weather'>Weather</Text></button>\n                                        {submenu === 'weather' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'summary' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='summary'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='tracks.summary'>Summary</Text></button>\n                                        {submenu === 'summary' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'photos' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='photos'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-camera' /> <Text id='tracks.photos'>Photos</Text></button>\n                                        {submenu === 'photos' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {submenu === 'map' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 p-0'>\n                            {track.gpx && <div class='mb-4' style='height: 500px;'>\n                                <Map\n                                    stores={this.props.stores}\n                                    mapId={track.id}\n                                    geojson={track.gpx.geoJSON}\n                                    gpxInfo={track.gpxInfo || track.gpx.gpxInfo}\n                                    fullscreenMap={true}\n                                />\n                            </div>}\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'stats' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5><Text id='tracks.your-workout-summary'>Your workout summary</Text></h5>\n                            {graphWorkoutSummaryWeekDistanceCurrentTotal > 0 ? <>\n                                <WorkoutGraph stores={this.props.stores} isLoading={false} />\n                                {/* {util.format(graphWorkoutSummaryWeekDistanceCurrentTotal, 0)} km */}\n                            </> : <>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'>\n                                        <i class='fas fa-chart-line' />\n                                    </div>\n                                    <h3 class='font-weight-lighter'>\n                                        <Text id='tracks.no-workout-summary'>You have no workout summary for this track. You can choose track inside your workouts to have the summary calculated.</Text>\n                                    </h3>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'weather' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5><Text id='tracks.weather-start'>Weather at the start position</Text></h5>\n\n                            <div class='row'>\n                                {weather && weather.length > 0 ? weather.slice(0, 4).map(w => (\n                                    <div class='col-3 text-center'>\n                                        <img loading='lazy' src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`} /><br />\n                                        <nobr>\n                                            <small>\n                                                <i class='fas fa-temperature-low text-muted ml-1' />\n                                            </small> {util.getNestedValue(w, 'instant.details.air_temperature')} <span class='text-muted'>°C</span>\n                                        </nobr><br />\n                                        <small>\n                                            <i class='fas fa-compass text-muted ml-1' /> {mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}<br />\n                                            <i class='fas fa-wind text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.wind_speed')} <span class='text-muted'>m/s</span><br />\n                                            <i class='fas fa-cloud-rain text-muted ml-1' /> {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')} <span class='text-muted'>mm</span><br />\n                                            <i class='fas fa-tint text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.relative_humidity')} <span class='text-muted'>%</span><br />\n                                        </small>\n                                        <span class='font-weight-strong'>{util.isoTime(w.time)}</span><br />\n                                    </div>\n                                )) : <>                        \n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'>\n                                            <i class='fas fa-cloud-sun-rain' />\n                                        </div>\n                                        <h3 class='font-weight-lighter'>\n                                            <Text id='tracks.no-weather'>Can't find weather for this track.</Text>\n                                        </h3>\n                                    </div>\n                                </>}\n                            </div>\n                            <small>\n                                {showWeatherDetails ? <>\n                                    <table class='table table-sm table-striped mt-4'>\n                                        {weather && weather.length > 0 && weather.slice(4, 70).map(w => (\n                                            <tr>\n                                                <td><img loading='lazy' src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code') || util.getNestedValue(w, 'next_6_hours.summary.symbol_code')}.svg`} style='height: 20px;' /></td>\n                                                <td class='text-center'><i class='fas fa-temperature-low text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.air_temperature')} <span class='text-muted'>°C</span></td>\n                                                <td class='text-center'><i class='fas fa-compass text-muted ml-1' /> {mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</td>\n                                                <td class='text-center'><i class='fas fa-wind text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.wind_speed')} <span class='text-muted'>m/s</span></td>\n                                                <td class='text-center'><i class='fas fa-cloud-rain text-muted ml-1' /> {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') || util.getNestedValue(w, 'next_6_hours.details.precipitation_amount') || 0} <span class='text-muted'>mm</span></td>\n                                                <td class='text-center'><i class='fas fa-tint text-muted ml-1' /> {util.getNestedValue(w, 'instant.details.relative_humidity')} <span class='text-muted'>%</span></td>\n                                                <td class='font-weight-strong text-right'>\n                                                    {util.isoDate(new Date(), false, false, true) !== util.isoDate(w.time, false, false, true) \n                                                        ? util.formatDate(w.time, { year: undefined, weekday: 'short', localeMatcher: 'lookup' }) : ''} {util.isoTime(w.time)}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </table>\n                                    <button class='btn btn-link' onClick={this.toggleShowWeatherDetails}><i class='fas fa-eye-slash' /> <Text id='tracks.weather-hide-details'>Hide details</Text></button>\n                                </>\n                                : <button class='btn btn-link' onClick={this.toggleShowWeatherDetails}><i class='fas fa-eye' /> <Text id='tracks.weather-show-details'>Show details</Text></button>}\n                            </small>\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'summary' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5><Text id='tracks.summary'>Track summary</Text></h5>\n                            <p><Text id='tracks.summary-info'>The summary for this track is estimated based on the tracks profile and your team settings.</Text></p>\n                        </div>\n                    </div>\n                    <div class='row mt-2'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-road' /> <Text id='tracks.distance'>Distance</Text></small>\n                                    <h3>\n                                        <Distance stores={this.props.stores} value={track.distanceKm} />\n                                    </h3>\n                                    {gpxInfo.calculatedTotalDistance > 0 && <small class='text-muted' style='line-height: 0.8em;'>\n                                        <Text id='workouts.kcal-calculated'>Beregnet:</Text> <Distance stores={this.props.stores} value={gpxInfo.calculatedTotalDistance} /><br />\n                                    </small>}\n                                </div>\n                                <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-mountain' /> <Text id='tracks.elevation'>Elevation</Text></small>\n                                    <h3>\n                                        <Elevation stores={this.props.stores} value={track.elevation} />\n                                    </h3>\n                                    {gpxInfo.calculatedAscend > 0 && <small class='text-muted' style='line-height: 0.8em;'>\n                                        <Text id='workouts.kcal-calculated'>Beregnet:</Text> <Elevation stores={this.props.stores} value={gpxInfo.calculatedAscend} /><br />\n                                    </small>}\n                                </div>\n                                <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-mountain' /> <Text id='tracks.downhill'>Downhill</Text></small>\n                                    <h3>\n                                        <Elevation stores={this.props.stores} value={track.decent} />\n                                    </h3>\n                                    {gpxInfo.calculatedDescend > 0 && <small class='text-muted' style='line-height: 0.8em;'>\n                                        <Text id='workouts.kcal-calculated'>Beregnet:</Text> <Elevation stores={this.props.stores} value={gpxInfo.calculatedDescend} /><br />\n                                    </small>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='row mt-2'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-clock' /> <Text id='tracks.duration'>Duration</Text></small>\n                                    <h3>\n                                        {util.secToHms(gpxInfo.duration)}\n                                    </h3>\n                                </div>\n                                {gpxInfo.normalSpeedMs > 0 ? <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-tachometer-alt' /> <Text id='tracks.speed'>Speed</Text></small>\n                                    <h3>\n                                        <Speed stores={this.props.stores} value={gpxInfo.normalSpeedMs * 3.6} />\n                                    </h3>\n                                </div> : <div class='col text-center'>\n                                    <small class='text-muted'><i class='fas fa-tachometer-alt' /> <Text id='tracks.speed'>Speed</Text></small>\n                                    <h3>\n                                        <Speed stores={this.props.stores} value={gpxInfo.normalSpeed} />\n                                    </h3>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            {(util.checkNested(track, 'gpxInfo', 'elevations') || util.checkNested(track, 'gpx', 'gpxInfo', 'elevations')) && <TrackInfoGraph\n                                stores={this.props.stores}\n                                showTemperatur={false}\n                                key={`track-elevation-${track.id}`}\n                            />}\n                        </div>\n                    </div>\n\n                    {loadIndex > 0 && <div class='row mt-2'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5 onClick={this.toggleAdminInfo}>\n                                <Text id='workouts.load-index'>Belastningsindex</Text>\n                            </h5>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-center'>\n                            <Gauge key={`gauge-${loadIndex}`}\n                                radius={100}\n                                showPercentText={true}\n                                color={mu.getLoadIndexColor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                percent={Math.floor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                completed={mu.getLoadIndexText(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                prefix=''\n                            />\n                            <div>\n                                <span class='badge badge-pill badge-secondary'>Long distance</span>\n                                <span class='badge badge-pill badge-secondary ml-2'>Serious amature</span><br />\n                            </div>\n                            \n                            {isAdmin && showAdminInfo && <div>\n                                <small>\n                                    <span class='badge badge-secondary mr-2'>loadIndex: {gpxInfo.loadIndex}</span>\n                                    <span class='badge badge-secondary mr-2'>Max loadIndex: {MAX_LOADINDEX}</span>\n                                    <span class='badge badge-secondary mr-2'>totalKcalRelated: {util.format(gpxInfo.totalKcalRelated, 1)}</span>\n                                    <span class='badge badge-secondary mr-2'>normalSpeedMs: {gpxInfo.normalSpeedMs}</span>\n                                    <span class='badge badge-secondary mr-2'>normalDuration: {gpxInfo.normalDuration}</span>\n                                    <span class='badge badge-secondary mr-2'>durationFactor: {util.format(gpxInfo.durationFactor, 2)}</span>\n                                    <div>\n                                        <small class='text-muted'>\n                                            loadIndex = Math.floor(totalKcalRelated * durationFactor * speedFactor * typeFactor * ambitionFactor);\n                                        </small>\n                                    </div>\n                                </small>\n                            </div>}\n                        </div>\n                    </div>}\n                </>}\n\n                {submenu === 'photos' && <>\n                    <div class='row mt-4'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5><Text id='tracks.photos'>Photos from this track</Text></h5>\n                        </div>\n                    </div>\n                    <div class='row'>\n                        <Localizer>\n                            <ImageScroller stores={this.props.stores} images={track.images} noimagestext={<Text id='tracks.no-photos'>No photos for this track.</Text>} />\n                        </Localizer>\n                    </div>\n                </>}\n\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                        {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </small>}\n                        {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                            <i class='fas fa-comment text-primary' /> {comments.length}\n                        </small>}\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                        <div class='row'>\n                            <div class='col-6 text-center'>\n                                <button type='button' class={`btn btn-outline-${hasLikedNews ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedNews ? 'text-primary' : ''}`}\n                                    onClick={this.likeTrack}\n                                    // disabled={hasLikedNews}\n                                >\n                                    <i class={`${hasLikedNews ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> Like\n                                </button>\n                            </div>\n                            <div class='col-6 text-center'>\n                                <button type='button' class='btn btn-outline-secondary btn-lg btn-block'\n                                    data-id={track.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> Comment\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {showAddComment && <TrackAddComment\n                        stores={this.props.stores}\n                        track={track}\n                        // callback={this.loadNewsDetail}\n                        inputRef={c => this.inputRef[track.id] = c}\n                        inputRefObject={this.inputRef}\n                    />}\n                    <TrackComments\n                        stores={this.props.stores}\n                        track={track}\n                        cols='12'\n                        // callback={this.loadNewsDetail}\n                    />\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-5'>\n                        {isAllowedToEdit && <button class='btn btn-sm btn-danger mt-5 float-right'\n                            onClick={this.deleteTrack}\n                        >\n                            <i class='fas fa-trash' /> <Text id='tracks.delete'>Slett</Text> {track.name}\n                        </button>}\n                    </div>\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TracksDetail;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nfunction hasImage(img) {\n    return (util.isObject(img) && img.s3LargeLink);\n}\n\n\n@observer\nclass ImageScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n            imageElementScale: 1,\n            imageElementMaxScale: 5,\n            start: {},\n        };\n        this.imageScrollerRef;\n    }\n\n    scrollImages = (e) => {\n        const { images, callback = () => {} } = this.props;\n        const totalImages = images.length - 1;\n\n        // scrollHeight: 705\n        // scrollLeft: 564\n        // scrollTop: 0\n        // scrollWidth: 1692\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n            callback(nearestInt);\n        }\n    }\n\n    onClickScrollLeft = (e) => {\n        const el = this.imageScrollerRef;\n        const width = 0 - el.clientWidth;\n        el.scrollBy({\n            top: 0,\n            left: width,\n            behavior: 'smooth'\n        });\n    }\n\n    onClickScrollRight = (e) => {\n        const el = this.imageScrollerRef;\n        const width = el.clientWidth;\n        el.scrollBy({\n            top: 0,\n            left: width,\n            behavior: 'smooth'\n        });\n    }\n\n    distance = (event) => {\n        return Math.hypot(event.touches[0].pageX - event.touches[1].pageX, event.touches[0].pageY - event.touches[1].pageY);\n    }\n\n    pinchZoomOnTouchStart = (event) => {\n        // console.log('touchstart', event);\n        if (event.touches.length === 2) {\n            event.preventDefault(); // Prevent page scroll\n            event.stopPropagation();\n\n            // Calculate where the fingers have started on the X and Y axis\n            const start = {};\n            start.x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n            start.y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n            start.distance = this.distance(event);\n            this.setState({ start });\n        }    \n    }\n\n    pinchZoomOnTouchMove = (event) => {\n        // console.log('touchmove', event);\n        let { imageElementScale, imageElementMaxScale } = this.state;\n        const { start } = this.state;\n        if (event.touches.length === 2) {\n            event.preventDefault(); // Prevent page scroll\n            event.stopPropagation();\n            let scale;\n\n            // Safari provides event.scale as two fingers move on the screen\n            // For other browsers just calculate the scale manually\n            if (event.scale) {\n                scale = event.scale;\n            } else {\n            const deltaDistance = this.distance(event);\n                scale = deltaDistance / start.distance;\n            }\n\n            imageElementScale = Math.min(Math.max(1, scale), imageElementMaxScale);\n            this.setState({ imageElementScale }, () => {\n                // Calculate how much the fingers have moved on the X and Y axis\n                const deltaX = (((event.touches[0].pageX + event.touches[1].pageX) / 2) - start.x) * 2; // x2 for accelarated movement\n                const deltaY = (((event.touches[0].pageY + event.touches[1].pageY) / 2) - start.y) * 2; // x2 for accelarated movement\n\n                // Transform the image to make it grow and move with fingers\n                const transform = `translate3d(${deltaX}px, ${deltaY}px, 0) scale(${imageElementScale})`;\n                event.target.style.transition = '';\n                event.target.style.transform = transform;\n                event.target.style.WebkitTransform = transform;\n                event.target.style.zIndex = '100000';\n                // event.target.style.maxHeight = '';\n                // event.target.style.maxWidth = '';\n            });\n\n        }\n    }\n\n    pinchZoomOnTouchEnd = (event) => {\n        // console.log('touchend', event);\n        // Reset image to it's original format\n        this.setState({ imageElementScale: 1 });\n        event.target.style.transition = 'transform 250ms';\n        event.target.style.transform = '';\n        event.target.style.WebkitTransform = '';\n        event.target.style.zIndex = '';\n        // event.target.style.maxHeight = '75vh';\n        // event.target.style.maxWidth = '100%';\n    }\n\n    render() {\n        const { imageIdx, imageElementScale } = this.state;\n        const { images, id, dblClick = () => {}, likeRef = {}, noimagestext, minHeight = '100px' } = this.props;\n        const { appState } = this.props.stores;\n        const { isCordova } = appState;\n        const hasPrev = imageIdx > 0;\n        const hasNext = imageIdx < images.length - 1;\n    \n        if (!images || images.length === 0) {\n            if (noimagestext) {\n                return (<>            \n                    <div class='col-12 text-center text-muted'>\n                        <div class='display-1'>\n                            <i class='fas fa-camera' />\n                        </div>\n                        <h3 class='font-weight-lighter'>\n                            {noimagestext}\n                        </h3>\n                    </div>\n                </>);\n            }\n            return <></>;\n        }\n\n        return (\n            <div class='w-100 position-relative'>\n                <div\n                    class='d-flex flex-row flex-nowrap bg-light border-top border-bottom no-scrollbar'\n                    style={`\n                        overflow-x: ${imageElementScale > 1 && images.length === 1 ? 'visible !important' : 'auto'};\n                        overflow-y: ${imageElementScale > 1 ? 'visible !important' : 'auto'};\n                        scroll-snap-type: x mandatory;\n                    `}\n                    onScroll={this.scrollImages}\n                    ref={c => this.imageScrollerRef = c}\n                >\n                    {images && images.filter(hasImage).map((img, idx) => (\n                        <div class='col-12 clearfix p-0'>\n                            <div\n                                class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center position-relative `}\n                                style={`\n                                    scroll-snap-align: start;\n                                    flex-wrap: wrap;\n                                `}\n                                // overflow: ${imageElementScale > 1 ? 'visible !important' : 'hidden'};\n                                onDblclick={dblClick}\n                                data-id={id}\n                                onTouchstart={(e) => { e.stopPropagation(); }}\n                                onTouchend={(e) => { e.stopPropagation(); }}\n                                onTouchmove={(e) => { e.stopPropagation(); }}\n                            >\t\t\t\t\t\n                                <div\n                                    class='position-absolute w-100 h-100'\n                                    style={`\n                                        background-image: url('${img.s3SmallLink}'); background-size: cover;\n                                        filter: blur(10px);\n                                        opacity: 0.5;\n                                    `}\n                                        // overflow-y: ${imageElementScale > 1 ? 'visible !important' : 'hidden'};\n                                />\n                                {img.s3LargeLink ? <img\n                                    class='img-fluid position-relative'\n                                    src={`${img.s3LargeLink}${img.updatedDate ? `?updated=${`${img.updatedDate}`}`: ''}`}\n                                    loading='lazy'\n                                    style={`max-height: 75vh; min-height: ${minHeight}; ${idx !== imageIdx ? '' : ''}`}\n\n                                    onTouchstart={this.pinchZoomOnTouchStart}\n                                    onTouchend={this.pinchZoomOnTouchEnd}\n                                    onTouchmove={this.pinchZoomOnTouchMove}\n                                /> : <>\n                                    <span class='display-1 text-muted'>\n                                        <i class='fas fa-camera' />\n                                    </span>\n                                </>}\n\n                                {img.title && <div class='position-absolute w-100 text-center' style='bottom: 0px; background-color: rgba(0, 0, 0, 0.5);'>{img.title}</div>}\n\n                                {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                            </div>\n                            {likeRef[id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                <i class='fas fa-heart likeStory' />\n                            </span>}\n                        </div>\n                    ))}\n                </div>\n                {images && images.length > 1 && <>\n                    <div class='w-100 text-center'>\n                        <small>\n                            <small>\n                                {images && images.filter(hasImage).map((img, idx) => <>\n                                    <i class={`${idx === imageIdx ? 'fas' : 'far'} fa-circle mr-1`} />\n                                </>)}\n                            </small>\n                        </small>\n                    </div>\n                    <div\n                        class='position-absolute text-white font-weight-lighter px-1 py-1 rounded-lg'\n                        style='top: 10px; right: 10px; background-color: rgba(0, 0, 0, 0.3); line-height: 1.0em;'\n                    >\n                        <small>{imageIdx + 1} / {images.length}</small>\n                    </div>\n                </>}\n                \n                {isCordova ? <></> : <>\n                    {hasPrev && <div\n                        class='position-absolute d-none d-lg-block'\n                        style={`top: 50%; left: 5px;`}\n                    >\n                        <button type='button' class={`btn btn-link text-secondary`} style={`font-size: 3.0em; opacity: 0.7;`} onClick={this.onClickScrollLeft}><i class='fas fa-arrow-circle-left' /></button>\n                    </div>}\n                    {hasNext && <div\n                        class='position-absolute d-none d-lg-block'\n                        style={`top: 50%; right: 5px;`}\n                    >\n                        <button type='button' class={`btn btn-link text-secondary`} style={`font-size: 3.0em; opacity: 0.7;`} onClick={this.onClickScrollRight}><i class='fas fa-arrow-circle-right' /></button>\n                    </div>}\n                </>}\n\n            </div>\n        );\n    }\n}\n\nexport default ImageScroller;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const {\n            radius = 50,\n            heightAdd = 0,\n            color = 'success',\n\n            showPercentText = true,\n            percent = 0,\n            prefix = '',\n\n            showCenterText= false,\n            centerText,\n            centerTextSize,\n            centerTextX,\n            centerTextY,\n\n            total = '',\n            totalY = '90%',\n            totalX = '50%',\n            totalTextAnchor = 'middle',\n                        \n            completed = '',\n            completedY = '65%',\n            completedX = '50%',\n            completedTextAnchor = 'middle',\n        } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = centerTextSize || radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2 + heightAdd}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    {showPercentText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>}\n\n                    {showCenterText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{centerText}</text>}\n\n                    {completed && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={completedX}\n                        y={completedY}\n                        dominant-baseline='middle'\n                        text-anchor={completedTextAnchor}\n                        font-size={textSizeSmall}\n                    >{completed}</text>}\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x={totalX}\n                        y={totalY}\n                        dominant-baseline='middle'\n                        text-anchor={totalTextAnchor}\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n"],"sourceRoot":""}