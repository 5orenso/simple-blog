{"version":3,"sources":["webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","workoutFilter","Workouts","observer","Component","constructor","props","super","loadWorkouts","async","setState","workoutStore","userStore","stores","currentTeam","currentMonth","Date","getMonth","currentYear","util","getYear","month","year","Promise","all","load","query","team","loadWorkoutSummary","loadWorkoutPlans","getNotifications","loadStravaActivities","loadGarminActivities","loadTeams","seasonStart","workoutPlanStore","seasonYear","workoutPlans","workoutPlanCurrent","id","prepareWeekGraphs","chooseSubmenu","e","this","target","parentElement","dataset","menu","chooseDay","day","dd","mm","yyyy","state","w","date","d","getDate","m","y","getFullYear","parseInt","teamStore","skipMusherWorkoutSummary","addData","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummary","getWorkoutSummaryDay","daysBack","componentDidMount","appState","checkCordova","componentWillReceiveProps","nextProps","render","workoutPlan","user","language","MONTHS","getMonths","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","planMonth","sumWorkoutPlanMonth","summaryMonth","findWorkoutSummaryMonth","percentComplete","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","format","callback","key","data-menu","onClick","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","url","section","basehref","showNavigation","showHeader","strava","map","act","activity","garmin","fields","name","workout","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","monthRange","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","xTicks","i","l","push","scope"],"mappings":"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","file":"route-workouts.chunk.0e856.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n};\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tawait Promise.all([\n\t\t\tworkoutStore.load({ query: { team: currentTeam, year, month } }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(),\n\t\t]);\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user } = userStore;\n        const { language = 'no' } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst seasonStart = parseInt(year || (currentMonth < 8 ? currentYear - 1 : currentYear), 10);\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={`${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={`${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalDistanceKmMonth, 0)} <small><small><small>km</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalSpeedavgMonth, 1)} <small><small><small>km/t</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}`}\n\t\t\t\t\t\t\tshowNavigation={false}\n\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}