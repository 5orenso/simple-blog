{"version":3,"sources":["webpack:///./routes/settings/user.js"],"names":["initialState","searchText","showInfo","MARGIN_TOP_BACK","mu","marginTopBack","Settings","withText","hideProfile","id","hideProfileHelp","veterinaryAllowed","veterinaryAllowedHelp","hideInvite","hideInviteHelp","hideSettings","hideSettingsHelp","imperial","imperialHelp","summaryEmails","summaryEmailsHelp","notificationEmails","notificationEmailsHelp","infoEmails","infoEmailsHelp","partnerEmails","partnerEmailsHelp","inboxEmails","inboxEmailsHelp","storyLike","storyLikeHelp","storyComment","storyCommentHelp","workoutLike","workoutLikeHelp","workoutComment","workoutCommentHelp","message","messageHelp","messageLike","messageLikeHelp","pushNotifications","pushNotificationsHelp","workoutChanged","workoutChangedHelp","trackChanged","trackChangedHelp","dogChanged","dogChangedHelp","allStories","allStoriesHelp","observer","props","toggleDarkmode","e","stores","appState","toggleDropdown","toggleViewmode","mode","target","closest","dataset","changeLanguage","lang","userStore","setLanguage","email","user","language","toggleSetting","field","settings","updateSetting","toggleInfo","name","state","setState","toggleNotification","notifications","setNotification","value","toggleNotificationTopic","notificationTopics","setNotificationTopic","togglePushNotifications","checkNotificationPermission","displayNotificationTopic","topic","parts","split","parseInt","test","findSubscribedRace","title","findSubscribedTeam","back","history","goBack","runInit","hasFirebasePlugin","componentDidMount","this","render","firebase","class","style","onClick","href","map","setting","idx","data-name","type","onInput","checked","for","role","hasPermission","Object","keys","length","className","activeClassName","Component"],"mappings":"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","file":"97.chunk.48a50.js","sourcesContent":["import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport { route } from 'preact-router';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tsearchText: '',\n    showInfo: {},\n};\n\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\n\n@withText({\n    hideProfile: <Text id='users.settings-hide-profile' />,\n    hideProfileHelp: <Text id='users.settings-hide-profile-help' />,\n    veterinaryAllowed: <Text id='users.settings-allow-racevet'>Tillat veterinær</Text>,\n    veterinaryAllowedHelp: <Text id='users.settings-veterinary-help'>Dersom du ønsker at godkjente veterinærer skal kunne søke deg opp og legge inn vaksiner må du skru på her.</Text>,\n    hideInvite: <Text id='users.settings-hide-invite'>Skjul invitasjonsboks</Text>,\n    hideInviteHelp: <Text id='users.settings-hide-invite-help'>Skjul invitasjonsboksen på forsiden.</Text>,\n    hideSettings: <Text id='users.settings-hide-settings'>Skjul innstillinger</Text>,\n    hideSettingsHelp: <Text id='users.settings-hide-settings-help'>Skjul innstillinger på forsiden.</Text>,\n    imperial: <Text id='users.settings-imperial'>Imperial units</Text>,\n    imperialHelp: <Text id='users.settings-imperial-email'>Use imperial units like mils, mph, Fahrenheit.</Text>,\n    summaryEmails: <Text id='users.settings-summary-email'>Oppsummeringer</Text>,\n    summaryEmailsHelp: <Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text>,\n    notificationEmails: <Text id='users.settings-notification-email'>Notifications</Text>,\n    notificationEmailsHelp: <Text id='users.settings-receive-notification-email'>Receive notifications via email</Text>,\n    infoEmails: <Text id='users.settings-info-email'>Info</Text>,\n    infoEmailsHelp: <Text id='users.settings-receive-info-email'>Motta info via e-post</Text>,\n    partnerEmails: <Text id='users.settings-partner-email'>Partners</Text>,\n    partnerEmailsHelp: <Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text>,\n    inboxEmails: <Text id='users.settings-inbox-email'>Inbox emails</Text>,\n    inboxEmailsHelp: <Text id='users.settings-inbox-email-help'>Receive inbox notifications via email.</Text>,\n\n    storyLike: <Text id='notifications.story-like'>Story likes</Text>,\n    storyLikeHelp: <Text id='notifications.story-like-help'>Receive notification when your stories are liked.</Text>,\n    storyComment: <Text id='notifications.story-comment'>Story comments</Text>,\n    storyCommentHelp: <Text id='notifications.story-comment-help'>Receive notification when your stories are commented.</Text>,\n    workoutLike: <Text id='notifications.workout-like'>Workout likes</Text>,\n    workoutLikeHelp: <Text id='notifications.workout-like-help'>Receive notification when your workouts are liked.</Text>,\n    workoutComment: <Text id='notifications.workout-comment'>Workout comments</Text>,\n    workoutCommentHelp: <Text id='notifications.workout-comment-help'>Receive notification when your workouts are commented.</Text>,\n    message: <Text id='notifications.message'>Inbox messages</Text>,\n    messageHelp: <Text id='notifications.message-help'>Receive notification when your receive an inbox message.</Text>,\n    messageLike: <Text id='notifications.message-like'>Inbox message likes</Text>,\n    messageLikeHelp: <Text id='notifications.message-like-help'>Receive notification when your inbox messages are liked.</Text>,\n\n    pushNotifications: <Text id='notifications.push-notifications'>Push notifications</Text>,\n    pushNotificationsHelp: <Text id='notifications.message-like-help'>Enable push notifications on your phone.</Text>,\n\n    workoutChanged: <Text id='notifications.workout-changed'>Workout changed</Text>,\n    workoutChangedHelp: <Text id='notifications.workout-changed-help'>Receive notification when a workout is changed.</Text>,\n    trackChanged: <Text id='notifications.track-changed'>Track changed</Text>,\n    trackChangedHelp: <Text id='notifications.track-changed-help'>Receive notification when a track is changed.</Text>,\n    dogChanged: <Text id='notifications.dog-changed'>Dog changed</Text>,\n    dogChangedHelp: <Text id='notifications.dog-changed-help'>Receive notification when a dog is changed.</Text>,\n\n    allStories: <Text id='notifications.stories-new'>New stories</Text>,\n    allStoriesHelp: <Text id='notifications.stories-new-help'>Receive notification when a new story is posted.</Text>,\n})\n@observer\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleDarkmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tappState.toggleDarkmode();\n\t\tthis.toggleDropdown(e);\n\t}\n\n    toggleViewmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tconst { mode } = e.target.closest('a').dataset;\n\t\tappState.toggleViewmode(mode);\n\t}\n\n    changeLanguage = (e) => {\n        const { lang } = e.target.closest('a').dataset;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tuserStore.setLanguage({ email: user.email, language: lang });\n\t}\n\n\ttoggleSetting = async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 }, { [field]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    toggleInfo = (e) => {\n        const { name } = e.target.closest('i').dataset;\n        const { showInfo } = this.state;\n        showInfo[name] = !showInfo[name];\n        this.setState({ showInfo });\n\t}\n\n    toggleNotification = async (field) => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { notifications = {} } = user;\n        const value = notifications[field] ? 0 : 1;\n        await userStore.setNotification({\n            field: `notifications.${field}`,\n            value,\n        });\n    }\n\n    toggleNotificationTopic = async (field) => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { notificationTopics = {} } = user;\n        const value = notificationTopics[field] ? 0 : 1;\n        await userStore.setNotificationTopic({\n            field: `notificationTopics.${field}`,\n            value,\n        });\n    }\n\n    togglePushNotifications = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.checkNotificationPermission();\n    }\n\n    displayNotificationTopic = (topic) => {\n        const { userStore } = this.props.stores;\n        const parts = topic.split('-');\n        const id = parseInt(parts[1], 10);\n        const regex1 = /^race-\\d+/;\n        const regex2 = /^team-\\d+/;\n        switch (true) {\n            case regex1.test(topic):\n                const race = userStore.findSubscribedRace(id);\n                return race.title;\n            case regex2.test(topic):\n                const team = userStore.findSubscribedTeam(id);\n                return team.name;\n            default:\n                return topic;\n        }\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n    runInit = () => {\n        const { userStore } = this.props.stores;\n        const hasFirebasePlugin = userStore.hasFirebasePlugin();\n        this.setState({ hasFirebasePlugin });\n    }\n\n    componentDidMount() {\n        this.runInit();\n    }\n\n\trender() {\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tconst { isAdmin } = userStore;\n\t\tconst { darkmode, viewmode } = appState;\n\t\tconst { searchText, showInfo = {}, hasFirebasePlugin } = this.state;\n\n        const { user } = userStore;\n        const { settings = {}, notifications = {}, notificationTopics = {}, language = 'en', firebase = {} } = user;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style='margin-bottom: 200px; margin-top: 60px;'>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n\t\t\t\t<div class='row m-2'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t\t<h1><Text id='settings.user'>User</Text></h1>\n                    </div>\n                </div>\n\n\t\t\t\t<div class='row m-2'>\n                    {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                        <h5 class='m-0 text-muted'><Text id='settings.veterinary'>Veterinary</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {['veterinaryAllowed'].map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting]}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleSetting(setting)} checked={settings[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div> */}\n\n                    {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='settings.units'>Units</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {['imperial'].map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting]}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleSetting(setting)} checked={settings[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div> */}\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='settings.profile'>Profile</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        <div class='row'>\n                            <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                <button class='btn btn-success py-0 px-1 mr-3' style='width: 2.0em;'>\n                                    <i class='fas fa-user' />\n                                </button>\n                                <span class='flex-grow-1'>\n                                    <a href='/users/' class='stretched-link'><Text id='users.title'>Din profil</Text></a>\n                                </span>\n                                <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                    <i class='fas fa-angle-right' />\n                                </button>\n                            </div>\n                        </div>\n                        <div class='row border-top'>\n                            <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                <button class='btn btn-warning py-0 px-1 mr-3' style='width: 2.0em;'>\n                                    <i class='fas fa-user-edit' />\n                                </button>\n                                <span class='flex-grow-1'>\n                                    <a href='/users/edit' class='stretched-link'><Text id='users.edit-profile'>Edit profil</Text></a>\n                                </span>\n                                <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                    <i class='fas fa-angle-right' />\n                                </button>\n                            </div>\n                        </div>\n                        <div class='row border-top'>\n                            <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                <button class='btn btn-danger py-0 px-1 mr-3' style='width: 2.0em;'>\n                                    <i class='fas fa-key' />\n                                </button>\n                                <span class='flex-grow-1'>\n                                    <a href='/users/edit-password' class='stretched-link'><Text id='users.change-password'>Change password</Text></a>\n                                </span>\n                                <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                    <i class='fas fa-angle-right' />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='settings.user-email'>Email</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {['summaryEmails', 'notificationEmails', 'infoEmails', 'partnerEmails', 'inboxEmails'].map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting]}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleSetting(setting)} checked={settings[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='settings.notifications'>Notifications</Text></h5>\n                    </div>\n\t\t\t\t\t{!hasFirebasePlugin && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style={`font-size: 1.2em;`}>\n                        <div class='alert alert-danger' role='alert'>\n                            <i class='fas fa-exclamation-triangle' style='font-size: 1.5em;' /> <Text id='notifications.push-notifications-not-supported'>Push notifications is not supported on your device.</Text>\n                        </div>\n                    </div>}\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style={`font-size: 1.2em; opacity: ${hasFirebasePlugin ? 1.0 : 0.2};`}>\n                        <div class={`row`}>\n                            <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                    {this.props['pushNotifications']}\n                                    {this.props[`${'pushNotifications'}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={'pushNotifications'} />}\n                                    {this.props[`${'pushNotifications'}Help`] && showInfo['pushNotifications'] && <>\n                                        <br /><small class='text-muted'>{this.props[`${'pushNotifications'}Help`]}</small>\n                                    </>}\n                                </span>\n                                <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                    <input type='checkbox' class='custom-control-input' id={`settingspushNotifications`} onInput={() => this.togglePushNotifications()} checked={firebase.hasPermission} />\n                                    <label class='custom-control-label' for={`settingspushNotifications`} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style={`font-size: 1.2em; opacity: ${firebase.hasPermission ? 1.0 : 0.2};`}>\n                        {['storyLike', 'storyComment', 'workoutLike', 'workoutComment', 'message', 'messageLike',\n                            'workoutChanged', 'trackChanged', 'dogChanged'].map((setting, idx) => <>\n                            <div class={`row ${idx >= 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting]}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleNotification(setting)} checked={notifications[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='settings.notification-topics'>Notification topics</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style={`font-size: 1.2em; opacity: ${firebase.hasPermission ? 1.0 : 0.2};`}>\n                        {Object.keys(notificationTopics).length === 0 && <>\n                            <div class='text-center text-muted'>\n                                <div class='display-4'>\n                                    <i class='fas fa-rss' />\n                                </div>\n                                <h3 class='font-weight-lighter'>\n                                    <Text id='users.settings-no-topics'>No notification topics found for your user.</Text>\n                                </h3>\n                            </div>\n                        </>}\n                        {Object.keys(notificationTopics).map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.displayNotificationTopic(this.props[setting] || setting)}\n                                        {(notificationTopics[`${setting}Help`] || this.props[`${setting}Help`]) && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {(notificationTopics[`${setting}Help`] || this.props[`${setting}Help`]) && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{notificationTopics[`${setting}Help`] || this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleNotificationTopic(setting)} checked={notificationTopics[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {['hideProfile'].map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting]}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleSetting(setting)} checked={settings[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div> */}\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        <div class='row'>\n                            <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                <button class='btn btn-secondary py-0 px-1 mr-3' style='width: 2.0em;'>\n                                    <i class='fas fa-sign-out-alt' />\n                                </button>\n                                <span class='flex-grow-1'>\n                                    <Link className='stretched-link' activeClassName={'active'} href='/logout'>\n                                        <Text id='settings.logout'>Logout</Text>\n                                    </Link>\n                                </span>\n                            </div>\n                        </div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Settings;\n"],"sourceRoot":""}