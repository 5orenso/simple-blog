{"version":3,"sources":["webpack:///./routes/workouts/index.js"],"names":["initialState","isLoading","Teams","observer","toggleTeam","team","callback","props","workoutStore","stores","setCurrentTeam","currentTeam","undefined","util","isDefined","render","this","teams","userStore","class","map","id","style","onClick","name","Component","Workouts","loadWorkouts","setState","loadWorkoutSummary","loadWorkoutPlans","currentMonth","currentYear","seasonStart","workoutPlanCurrent","year","Date","getMonth","getYear","parseInt","workoutPlanStore","updateItem","load","query","seasonYear","seasonMonth","workoutPlans","prepareWeekGraphs","state","getWorkoutSummary","componentDidMount","componentWillReceiveProps","nextProps","month","workoutPlan","darkmode","appState","workouts","getLatests","href","key","basehref","length","fields","total","workout"],"mappings":"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","file":"route-workouts.chunk.be4a6.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutCalendar from '../../components/workout/calendar';\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Teams extends Component {\n    toggleTeam = (team) => {\n\t\tconst { callback } = this.props;\n        const { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tif (team === currentTeam) {\n\t\t\tworkoutStore.setCurrentTeam(undefined);\n\t\t} else {\n\t\t\tworkoutStore.setCurrentTeam(team);\n\t\t}\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n    render() {\n        const { userStore, workoutStore } = this.props.stores;\n        const { teams } = userStore;\n\t\tconst { currentTeam } = workoutStore;\n        return (\n\t\t\t<div class='container-fluid px-0'>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{teams && teams.map(team => (\n\t\t\t\t\t\t<div class='col-6 mb-2'>\n\t\t\t\t\t\t\t<div class={`border rounded rounded-pill px-3 py-2 ${currentTeam === team.id ? 'bg-success' : ''}`}\n\t\t\t\t\t\t\t\tstyle='line-height: 0.9em; cursor: pointer; pointer-events: inherit;'\n\t\t\t\t\t\t\t\tonClick={() => this.toggleTeam(team.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<i class='fas fa-users mr-2' />\n\t\t\t\t\t\t\t\t\t{team.name}\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n    }\n}\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\t// await workoutStore.load({ query: { team: currentTeam, year } });\n\t\tawait this.loadWorkoutSummary(props);\n\t\tawait this.loadWorkoutPlans(props);\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\t// loadDogs = async () => {\n\t// \tconst { dogStore } = this.props.stores;\n\t// \tconst { currentTeam } = dogStore;\n\t// \tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t// }\n\n\t// async loadTracks() {\n\t// \tconst { trackStore } = this.props.stores;\n\t// \tawait trackStore.load();\n\t// }\n\n\tasync loadWorkoutSummary(props = this.props) {\n\n\t\tconst { userStore, workoutStore } = props.stores;\n\t\tconst { year } = props;\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore } = this.props.stores;\n\t\tconst { workoutPlan } = workoutPlanStore;\n\n\t\tconst { month, year } = this.props;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { darkmode } = appState;\n\t\tconst workouts = workoutStore.getLatests();\n\t\tconst { workoutSummaryWeek = [] } = userStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style='margin-bottom: 100px; margin-top: 90px;'>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: 58px; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} year={year} key={workoutPlan.id} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} team={currentTeam} basehref={`/workouts/`} month={month} year={year} key={workoutPlan.id} />\n\t\t\t\t</div>\n\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workouts && workouts.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5><Text id='workout.index.last-workouts' fields={{ total: workouts.length }}>Nyeste treningsturer - {workouts.length} stk</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workouts && workouts.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\n\n\t\t\t\t{1 === 2 && <div class='row'>\n\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n\t\t\t\t\t\t\t<h5 class='mt-4'><Text id='workout.index.workout-overview'>Treningsoversikt</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* {JSON.stringify(workoutSummaryWeek)} */}\n\t\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.reverse().map(summary => (\n\t\t\t\t\t\t\t<WorkoutSummary stores={this.props.stores} summary={summary} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n"],"sourceRoot":""}