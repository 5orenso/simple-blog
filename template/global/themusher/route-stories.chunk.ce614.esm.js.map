{"version":3,"sources":["webpack:///./routes/stories/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","isLoading","submenu","viewmenu","Home","observer","Component","constructor","props","super","reloadFeeds","async","e","preventDefault","setState","PubSub","publish","topics","REFRESH_PAGE","message","sortby","storyStore","this","stores","sortBy","target","value","a","b","likes","length","comments","sortPublicFeed","state","appState","userStore","getFingerprint","getInfo","getNotifications","user","currentLocationInfo","coords","latitude","lat","longitude","lon","altitude","getWeatherUser","componentDidMount","loadAll","render","story","hashtag","yrWeather","currentLocationGeocode","formatted_address","place","class","style","url","data","id","onChange","href"],"mappings":"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","file":"route-stories.chunk.ce614.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport linkState from 'linkstate';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport StoryPublicDetail from '../../components/story/publicDetail';\nimport Ad from '../../components/ad/';\nimport YrWeather from '../../components/yrweather/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n\tviewmenu: 'wall',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\n\t\tconst { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n\t\t}\n\t\tthis.setState({ isLoading: false });\n    }\n\n\treloadFeeds = async (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n        PubSub.publish(topics.REFRESH_PAGE, {\n            message: 'Refresh page.',\n        });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    sortby = (e) => {\n        const { storyStore } = this.props.stores;\n        const sortField = e.target.value;\n        let sortBy = () => {};\n        switch (sortField) {\n            case 'likes':\n                sortBy = (a, b) => a.likes.length < b.likes.length;\n                break;\n            case '-likes':\n                sortBy = (a, b) => a.likes.length > b.likes.length;\n                break;\n            case 'comments':\n                sortBy = (a, b) => a.comments.length < b.comments.length;\n                break;\n            case '-comments':\n                sortBy = (a, b) => a.comments.length > b.comments.length;\n                break;\n            default:\n                break;\n        }\n        storyStore.sortPublicFeed(sortBy);\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n        const { isLoading, viewmenu } = this.state;\n        const { story, hashtag } = this.props;\n\t\tconst { userStore, appState } = this.props.stores;\n        const { darkmode } = appState;\n\n\t\tconst { user } = userStore;\n\t\tconst { yrWeather, currentLocationGeocode = {} } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <Ad stores={this.props.stores} url={this.props.url} />\n                <div class='bg-light'>\n                    <YrWeather stores={this.props.stores} data={yrWeather} place={place} />\n                </div>\n\n                <StoryAdd stores={this.props.stores} />\n\n                <div class='row bg-light'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                        <small class='float-right'>\n                            <select\n                                class='custom-select custom-select-sm'\n                                id='team'\n                                onChange={this.sortby}\n                            >                    \n                                <option value=''><Text id='story.sort.new'>Nyeste først</Text></option>\n                                <option value='likes'><Text id='story.sort.likes-desc'>Flest likes først</Text></option>\n                                <option value='-likes'><Text id='story.sort.likes-asc'>Færrest likes først</Text></option>\n                                <option value='comments'><Text id='story.sort.comments-desc'>Flest kommentarer først</Text></option>\n                                <option value='-comments'><Text id='story.sort.comments-asc'>Færrest kommentarer først</Text></option>\n                            </select>\n                        </small>\n\n                        <div>\n                            <h3>\n                                <a href='/stories'><i class='fas fa-home' /></a>\n                                {hashtag && <>\n                                    <span class='badge badge-primary ml-4'>#{hashtag}</span>\n                                </>}\n                            </h3>\n                        </div>\n                    </div>\n                </div>\n\n                <StoryPublicFeed stores={this.props.stores} story={story} hashtag={hashtag} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n"],"sourceRoot":""}