{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./routes/public/race/raceheader.js","webpack:///./components/public/heatmap.js","webpack:///./components/data/distance.js","webpack:///./routes/public/race/submenu.js","webpack:///./routes/public/race/style.css","webpack:///./components/races/liveAddResult.js","webpack:///./components/data/temperature.js","webpack:///./components/races/liveMusherResult.js","webpack:///./routes/public/race/header.js","webpack:///./components/data/weight.js","webpack:///./routes/public/race/raceText.js","webpack:///./components/races/liveResults.js","webpack:///./routes/public/race/results.js","webpack:///./components/races/musherInfoHeader.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js"],"names":["initialState","ScrollIntoView","observer","props","state","container","componentDidMount","this","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Component","RaceHeader","stores","appState","title","language","race","raceStore","today","Date","status","startDate","endDate","signupStartDate","signupEndDate","class","classes","useEffect","document","PageTitle","style","util","formatDate","locale","hour12","hour","minute","liveRace","role","id","showAddComment","Heatmap","updateTimer","inputRef","loadHeatmap","setState","isLoading","adminStore","getPublicHeatmap","raceid","waypoints","zoomToMarkers","mapid","fullscreenMap","heatmap","publicHeatmap","mapId","length","minZoom","maxZoom","height","key","displayDistance","distance","format","Distance","value","smallUnit","userStore","user","settings","imperial","kmToMiles","mu","marginTop","marginBottom","subMenuMarginTop","email","submenu","jwtToken","getJwtToken","PublicRaceDetail","path","darkmode","currentMenu","match","href","module","exports","fieldSorter","fields","a","b","map","o","dir","substring","reduce","p","n","LastResults","lastResults","currentClass","selectedMusher","selectResult","res","currentCheckpoint","checkpoints","find","cp","checkpoint","requiredRestMin","direction","requiredRestMinutes","timeEqualization","timestamp","getTime","data-resultid","onClick","year","month","sortOrder","name","dogs","RaceLiveAddResult","addResult","e","classId","classid","showTimestamp","newResult","checkpointId","result","bib","message","selectedCheckpoint","clearTimeout","setTimeout","target","closest","dataset","getClassById","selectedClassIds","editContestant","field","editResult","currentResult","resultid","selectedClassId","data","raceClassId","resultId","ucfirst","editClass","updateClassesResultLocal","sortContestantsByResult","contestants","results","updateField","selectedResult","isCheckedIn","isCheckedOut","isScratched","prevCheckpoint","isCheckedInPrev","isCheckedOutPrev","isScratchedPrev","sortedContestants","parseInt","slice","sort","filter","getPreviousCheckpoint","toJS","lastResult","isoDate","startTime","deleteResult","raceClassResultDelete","doneEditResult","selectCheckpoint","toggleTimestamp","lastTimestamp","reverse","componentWillReceiveProps","lastCheckpoint","idx","resIn","resOut","type","data-id","firstname","lastname","for","aria-describedby","data-classid","data-field","onInput","linkstate","replace","min","data-direction","disabled","Temperature","celciusToFahrenheit","RaceLiveMusherResult","onClickNav","lastResOut","selectedMusherIdx","findIndex","team","getTeamById","members","m","totalDistance","getImage","priority","displayNameShort","totalTime","totalMovingTime","totalInCpTime","lastEstTimeOut","lastAvgSpeed","nextBib","prevBib","contestant","onTeamClick","onUserClick","onDogClick","rank","now","Math","floor","resScratched","timeInCp","isStartLine","deltaSec","movingTime","hasBeenInCp","avgSpeed","distanceFromPrev","line","percentRest","reqTotalRestInSec","estTimeOutClass","totalRestClass","estTimeOut","estRest","restInCpSoFar","addDeltaSec","day","isFinishLine","secToHms","estTimeIn","movingTimeSoFar","estTimeToNext","estTimeToCpMinutes","estRestMinutes","menu","profile","main","searchText","Navigation","toggleDropdown","menuName","parentNode","toggleDarkmode","toggleViewmode","mode","reloadApp","window","location","reload","adminLoadAll","getInfo","changeLanguage","lang","console","log","setLanguage","search","route","notifications","read","src","data-name","className","activeClassName","selected","Weight","kgToPounds","text","finalText","regex","RegExp","Checkpoints","thClass","thStyle","selectedCheckpointId","width","widthCp","onClickCheckpoint","dotColor","cpIdx","Contestants","limit","onClickMusher","tdClass","tdStyle","progressStyle","progressbarStyle","finalContestants","co","coIdx","hasLeftCpPrev","bibIdxOutPrev","estTimeToCpMinutesPrev","hasScratchedPrev","data-bib","isoTime","percentInCp","checkpointResults","hasLeftCp","hasArrivedCp","hasScratched","bibIdxIn","bibIdxOut","nowEpoch","prevCpOutEpoch","timeUsedOnStage","percentDone","aria-valuenow","aria-valuemin","aria-valuemax","data-prevtimestamp","data-timeUsedOnStage","data-estTimeToCpMinutesPrev","data-nowEpoch","data-prevCpOutEpoch","cpId","output","colspan","getRankingColor","flag","RaceLiveResults","nextProps","reloadLastEpoch","sortOrderResults","tableClass","MARGIN_TOP","MARGIN_BOTTOM","contentIsNotLoaded","reloadInSec","reloadIsActive","ReloadTimer","initComponent","tickReloadTimeer","tick","componentWillUnmount","reloadPercent","normalizeBetween","loadLiveRaceResults","classInfo","teamIds","focusOnMushers","bibs","historySteps","historyPointIndex","replayHistory","timerRunning","showDrawerReplay","getRaceTrackerData","raceTrackerRace","history","isAdmin","getRaceTrackerActiveTeams","loadRaceResults","loadWorkoutSummary","getWorkoutSummaryActiveTeams","RELOAD_INTERVAL_IN_SEC","toggleDisplayDetails","adminToggleEditUser","stopPropagation","toggleEditUserDetails","adminSignupEdit","contestantId","contestantid","lockAllWorkoutsInRace","lockMessage","filterByClass","toggleSelectedClassId","toggleDrawer","showDrawer","showDrawerCheckpoint","showDrawerMusher","toggleDrawerMusher","selectedMusherBib","selectMusher","closeDrawerMusher","toggleDrawerCheckpoint","closeDrawerCheckpoint","loadRace","allClassIds","allTeamIds","loadTimes","filterByBibs","load","getAllClassesSortedBy","indexOf","setSelectedClassId","musher","flat","loadTeams","join","displayDetails","editUserDetails","activeTeams","lastAllowedChangeDate","setHours","getHours","filterByClassId","isLiveRace","resultsUrl","rel","native","resultsText","getMusherByTeamId","currentSpeed","currentLocation","coords","speed","spinnerColor","secSinceLastUpdate","lastUpdated","isInProgress","avgDogs","battery","level","formatDistance","date","distanceKm","elevation","speedAvg","duration","rest","loadIndex","altitude","viewBox","d","svgElevation","resultDanger","markdown","replaceImages","images","markdownOpts","getMarkdownOptions","resultWarning","resultSuccess","totalMushers","totalFinished","endTime","scope","currentTeam","currentStages","currentResults","completed","normalizedDuration","weightedNormalizedDuration","isDone","finishedDate","totalWorkoutTimeUsedSec","totals","getTotalsByTeamId","data-email","isLocked","sportsClub","facebook","asFacebookLink","instagram","asInstagramLink","price1","priceSent","price2","price3","cellphone","data-contestantid","raceStatus","raceComment","gpxResultsApproved","stage","percent","currentEpoch","inDate","setUTCSeconds","nonstop","totalRest","firstEpoch","firstGpxStartEpoch","lastGpxStartEpoch","JSON","stringify","onCloseClick","MusherInfoHeader","toggleAdminInfo","showAdminInfo","toggleInfo","showInfo","dogid","preventDefault","currentDog","uuidv4","showDog","chooseSubmenu","dog","totalTrackLength","onMarkerClick","children","wp","findWaypointByBib","getMusherByBibId","getMusherByBibEmail","getClassByBib","image","fallback","image1","shortname","color","hasBirthday","birth","daysUntilBirthday","ceil","daysUntilNextBirthday","totalDistanceOnTrack","findNearestMushers","inFront","behind","headerImage","imageHeader","s3XXLargeLink","topImage1","teamImages","i","push","s3SmallLink","s3LargeLink","data-submenu","public","description","allDogs","findHarness","harness","age","deceased","gender","Elevation","meterToFeet","Speed","kmtToMph"],"mappings":"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","file":"68.chunk.9fc71.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport { useEffect } from \"preact/hooks\";\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nfunction PageTitle(title, classes = '') {\n\tuseEffect(() => {\n\t\tdocument.title = `Homerun Race: ${title}`;\n\t}, [title]);\n\treturn <h1 class={classes}>{title}</h1>;\n}\n\nconst initialState = {\n};\n\n@observer\nclass RaceHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { raceStore, appState } = this.props.stores;\n\t\tconst { title } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\t\tconst { race } = raceStore;\n\n\t\tconst today = new Date();\n\t\tlet status = '';\n\t\tif (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n\t\t\tstatus = 'race';\n\t\t} else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n\t\t\tstatus = 'signup';\n\t\t} else if (today > new Date(race.endDate)) {\n\t\t\tstatus = 'done';\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div class='d-flex'>\n\t\t\t\t\t<div class='flex-fill'>\n\t\t\t\t\t\t{PageTitle(title, 'mb-0')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='flex-fill text-center d-none d-md-block'>\n\t\t\t\t\t\t<h1 class='mb-0' style='line-height: 0.8em;'><span class='font-weight-lighter' style='letter-spacing: -1px;'>{race.title}</span></h1>\n\t\t\t\t\t\t<small class=''>\n\t\t\t\t\t\t\t{race.startDate && <>{util.formatDate(race.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n\t\t\t\t\t\t\t{race.endDate && <> - {util.formatDate(race.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='flex-fill'>\n\t\t\t\t\t\t<h3 class='float-right'>\n\t\t\t\t\t\t\t{status === 'signup' && !race.liveRace && <>\n\t\t\t\t\t\t\t\t<div class='spinner-grow text-primary' role='status' />\n\t\t\t\t\t\t\t\t<span class='badge badge-primary ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t{status === 'race' && <>\n\t\t\t\t\t\t\t\t<div class='spinner-grow text-danger' role='status' />\n\t\t\t\t\t\t\t\t<span class='badge badge-danger ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t{status === 'done' && <>\n\t\t\t\t\t\t\t\t<i class='fas fa-check text-success' />\n\t\t\t\t\t\t\t\t<span class='badge badge-success ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='d-block d-md-none'>\n\t\t\t\t\t<h4 class='mb-0' style='line-height: 0.8em;'><span class='font-weight-light' style='letter-spacing: -1px;'>{race.title}</span></h4>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t{race.startDate && <>{util.formatDate(race.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n\t\t\t\t\t\t{race.endDate && <> - {util.formatDate(race.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n\t\t\t\t\t</small>\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Heatmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadHeatmap() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n        const { raceid } = this.props;\n        await adminStore.getPublicHeatmap(raceid);\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadHeatmap();\n\t}\n\n    // componentWillReceiveProps() {\n\t// \tthis.loadHeatmap();\n\t// }\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const { waypoints, zoomToMarkers, mapid, fullscreenMap } = this.props;\n        const { publicHeatmap: heatmap } = adminStore;\n        // const heatmap = publicHeatmap.slice(0, 10);\n        // const heatmap = [[60.4433,8.8996,14],[61.384,9.1152,14],[60.42,8.9422,15]];\n\n        return (\n            <>\n                {/* heatmap: {`map-${mapid}`}<br /> */}\n                {/* {JSON.stringify(heatmap)} */}\n                <Map\n                    stores={this.props.stores}\n                    mapId={heatmap.length}\n                    heatmap={heatmap}\n                    minZoom={2}\n                    maxZoom={18}\n                    height={600}\n                    waypoints={waypoints}\n                    zoomToMarkers={zoomToMarkers}\n                    fullscreenMap={fullscreenMap}\n                    key={`map-${mapid}`}\n                />\n            </>\n        );\n    }\n}\n\nexport default Heatmap;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\nimport Header from './header';\nimport Heatmap from '../../../components/public/heatmap';\n\nimport mu from '../../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n\temail: '',\n\tsubmenu: 'ads',\n\tjwtToken: util.getJwtToken(),\n};\n\n@observer\nclass PublicRaceDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\trender() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { raceid, path } = this.props;\n\t\tconst { darkmode } = appState;\n\n        let currentMenu = 'default';\n        if (path.match(/\\/race\\/:raceid$/)) {\n            currentMenu = 'default';\n        } else if (path.match(/\\/race\\/:raceid\\/mushers$/)) {\n            currentMenu = 'mushers';\n        } else if (path.match(/\\/race\\/:raceid\\/results$/)) {\n            currentMenu = 'results';\n        } else if (path.match(/\\/race\\/:raceid\\/media$/)) {\n            currentMenu = 'media';\n        } else if (path.match(/\\/race\\/:raceid\\/tracking$/)) {\n            currentMenu = 'tracking';\n        }\n\n\t\treturn (\n\t\t\t<>\t\t\t\t\n                <div class='row fixed-top pr-3' style={`margin-top: 40px; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\n                    <div class='col-12 my-2 mx-2'>\n                        <ul class='nav nav-pills nav-fill flex-nowrap'>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}`} class={`text-overflow nav-link ${currentMenu === 'default' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-info-circle' /> <Text id='race.therace'>Løpet</Text></nobr>\n                                </a>\n                            </li>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}/mushers`} class={`text-overflow nav-link ${currentMenu === 'mushers' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-users' /> <Text id='race.mushers'>Deltakere</Text></nobr>\n                                </a>\n                            </li>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}/results`} class={`text-overflow nav-link ${currentMenu === 'results' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-poll' /> <Text id='race.results'>Resultater</Text></nobr>\n                                </a>\n                            </li>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}/media`} class={`text-overflow nav-link ${currentMenu === 'media' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-images' /> <Text id='race.media'>Bilder</Text></nobr>\n                                </a>\n                            </li>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}/tracking`} class={`text-overflow nav-link ${currentMenu === 'tracking' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-map-marked-alt' /> <Text id='race.tracking'>Tracking</Text></nobr>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n\n\n                    {/* <div class={`col text-center subtopmenu ${path.match(/\\/race\\/:raceid$/) ? 'border-bottom border-primary' : ''}`}>\n                        <a href={`/race/${raceid}`} class={`text-${path.match(/\\/race\\/:raceid$/) ? 'primary' : 'secondary'} stretched-link`}>\n                            <nobr><i class='fas fa-chart-line' /> <Text id='race.therace'>Løpet</Text></nobr>\n                        </a>\n                    </div>\n                    <div class={`col text-center subtopmenu ${path.match(/\\/race\\/:raceid\\/mushers$/) ? 'border-bottom border-primary' : ''}`}>\n                        <a href={`/race/${raceid}/mushers`} class={`text-${path.match(/\\/race\\/:raceid\\/mushers$/) ? 'primary' : 'secondary'} stretched-link`}>\n                            <nobr><i class='fas fa-chart-line' /> <Text id='race.mushers'>Deltakere</Text></nobr>\n                        </a>\n                    </div>\n                    <div class={`col text-center subtopmenu ${path.match(/\\/race\\/:raceid\\/results$/) ? 'border-bottom border-primary' : ''}`}>\n                        <a href={`/race/${raceid}/results`} class={`text-${path.match(/\\/race\\/:raceid\\/results$/) ? 'primary' : 'secondary'} stretched-link`}>\n                            <nobr><i class='fas fa-chart-line' /> <Text id='race.results'>Resultater</Text></nobr>\n                        </a>\n                    </div>\n                    <div class={`col text-center subtopmenu ${path.match(/\\/race\\/:raceid\\/tracking$/) ? 'border-bottom border-primary' : ''}`}>\n                        <a href={`/race/${raceid}/tracking`} class={`text-${path.match(/\\/race\\/:raceid\\/tracking$/) ? 'primary' : 'secondary'} stretched-link`}>\n                            <nobr><i class='fas fa-chart-line' /> <Text id='race.tracking'>Tracking</Text></nobr>\n                        </a>\n                    </div> */}\n                </div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default PublicRaceDetail;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointerCursor\":\"pointerCursor__1W6mM\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\nimport { toJS } from 'mobx';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass LastResults extends Component {\n    render() {\n        const { lastResults = [], currentClass = {}, selectedMusher = {}, selectResult = () => {} } = this.props;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n        return (<>\n\n            <table class='table table-striped'>\n                <thead>\n                    <tr>\n                        <th style='width: 10%'>Time</th>\n                        <th style='width: 5%'>Dir</th>\n                        <th style='width: 75%'>Checkpoint</th>\n                        <th style='width: 10%'>Dogs</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {lastResults && lastResults.length > 0 && lastResults.map(res => {\n                        const currentCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === res.checkpoint) : null;\n                        const requiredRestMin = res.direction === 'in' && currentCheckpoint.requiredRestMinutes ? (\n                            currentCheckpoint.timeEqualization ? selectedMusher.timeEqualization + currentCheckpoint.requiredRestMinutes : currentCheckpoint.requiredRestMinutes\n                        ) : null;\n                        const firstOutTime = new Date(new Date(res.timestamp).getTime() + requiredRestMin * 60000);\n                        return (<>\n                            <tr \n                                class='resultLine'\n                                data-resultid={res.id}\n                                onClick={selectResult}\n                            >\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-clock' /></span> {util.formatDate(res.timestamp, { locale: language, year: '2-digit', month: '2-digit', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </nobr>\n                                </td>\n                                <td>\n                                    {res.direction === 'in' && <>\n                                        <i class='fas fa-sign-in-alt mr-2 text-success' />\n                                    </>}\n                                    {res.direction === 'out' && <>\n                                        <i class='fas fa-sign-out-alt mr-2 text-info' />\n                                    </>}\n                                    {res.direction === 'scratched' && <>\n                                        <i class='fas fa-times mr-2 text-danger' />\n                                    </>}\n                                </td>\n                                <td>\n                                    <span class='text-muted'>{currentCheckpoint.sortOrder}:</span> {currentCheckpoint.name}\n                                    {/* {requiredRestMin && <>\n                                        <div>\n                                            {selectedMusher.timeEqualization ? <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} + {selectedMusher.timeEqualization} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </> : <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </>}\n                                        </div>\n                                    </>} */}\n                                </td>\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-dog ml-3' /></span> {res.dogs}<br />\n                                    </nobr>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </tbody>\n            </table>\n        </>);\n    }\n}\n\n@observer\nclass RaceLiveAddResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: {},\n            message: '',\n        };\n        this.updateTimer = {};\n    }\n\n    addResult = async (e) => {\n\t\tconst { raceStore, appState } = this.props.stores;\n        const { direction, classid } = e.target.closest('button').dataset;\n        const { checkpointId, selectedClassIds = [] } = appState;\n\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { result, showTimestamp } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        if (showTimestamp) {\n            result.timestamp = result.timestamp ? result.timestamp : new Date();\n        } else {\n            result.timestamp = new Date();\n        }\n\n        if (direction === 'scratched') {\n            await raceStore.addResult({\n                id: raceid,\n                classId: classid,\n                showTimestamp: false,\n                newResult: {\n                    direction: 'in',\n                    checkpoint: checkpointId,\n                    ...result,\n                }\n            });\n            await raceStore.editContestant({\n                id: raceid,\n                classId: classid,\n                bib: result.bib,\n                field: 'raceStatus',\n                value: 'DNF',\n            });\n        }\n\n\t\tawait raceStore.addResult({\n\t\t\tid: raceid,\n\t\t\tclassId: classid,\n            showTimestamp: false,\n\t\t\tnewResult: {\n                direction,\n                checkpoint: checkpointId,\n                ...result,\n\t\t\t}\n        });\n\n        // const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        // raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.setState({\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n            selectedMusher: null,\n            lastResults: null,\n            message: `Added ${result.bib} with ${result.dogs} dogs ${direction} ${direction === 'in' ? 'to' : 'of'} checkpoint ${selectedCheckpoint.name}.`,\n        });\n\n        clearTimeout(this.updateTimer.message);\n        this.updateTimer.message = setTimeout(async () => {\n\t\t\tthis.setState({\n                message: '',\n            });\n\t\t}, 3000);\n\t}\n\n    editResult = (e) => {\n        const { raceStore, appState } = this.props.stores;\n        const { currentResult } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        // const resultIdx = lastResults.findIndex(e => e.id === resultid);\n        // if (resultIdx > -1) {\n        //     console.log({ resultIdx })\n        //     lastResults[resultIdx][field] = value;\n        //     this.setState({ lastResults });\n        // }\n        currentResult[field] = value;\n        this.setState({ currentResult });\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        \n        const data = {\n            raceClassId: classid,\n            resultId: resultid,\n\t\t\t[`raceClassResult${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n            await raceStore.editClass({\n                id: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.updateClassesResultLocal(classid, resultid, field, value);\n            const currentClass = raceStore.getClassById(selectedClassId);\n\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t\t}, 500);\n    }\n\n    updateField = (e) => {\n        const { raceStore, appState } = this.props.stores;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const { result, selectedResult, showTimestamp } = this.state;\n        result[field] = value;\n        \n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        \n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        if (!selectedMusher) {\n            this.setState({\n                result,\n            });\n            return false;\n        }\n        let lastResults;\n        let isCheckedIn;\n        let isCheckedOut;\n        let isScratched;\n        let currentResult;\n        let prevCheckpoint;\n        let isCheckedInPrev;\n        let isCheckedOutPrev;\n        let isScratchedPrev;\n\n        if (currentClass) {\n            lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n            if (lastResults && lastResults.length > 0) {\n                isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n                isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n                isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n                prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n                if (prevCheckpoint) {\n                    isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n                    isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n                    isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n                }\n            }\n            currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === selectedResult)) : {};\n        }\n\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : null;\n        if (lastResult) {\n            const lastTimestamp = lastResults && lastResults[0] ? lastResults[0].timestamp : (selectedMusher && selectedMusher.startTime ? selectedMusher.startTime : currentClass.startDate);\n            if (showTimestamp) {\n                result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n            }\n            result.dogs = lastResult.dogs;\n        }\n        \n        this.setState({\n            result,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            prevCheckpoint,\n            currentResult,\n            lastResults,\n        });\n    }\n\n\n    deleteResult = async () => {\n        const { selectedResult } = this.state;\n        const { appState, raceStore } = this.props.stores;\n\n        const { race } = raceStore;\n        const raceid = race.id;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: currentClass.id,\n            resultId: selectedResult,\n\t\t\traceClassResultDelete: 1,\n\t\t};\n        await raceStore.editClass({\n            id: raceid,\n            data,\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.doneEditResult();\n    }\n\n    selectCheckpoint = (e) => {\n        const { showTimestamp, result } = this.state;\n        const checkpointId = e.target.closest('button').dataset.id;\n        const { appState, raceStore } = this.props.stores;\n        appState.selectCheckpoint(checkpointId);\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { sortedContestants = [] } = raceStore;\n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n\n        const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n        const prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n        const isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n        const isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n        const isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n        \n        this.setState({\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            lastResults,\n        });\n\n    }\n\n    toggleTimestamp = () => {\n        const { showTimestamp, result } = this.state;\n\n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedMusher = currentClass.contestants ? currentClass.contestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp'])).reverse().filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        let lastTimestamp;\n        if (lastResults && lastResults[0]) {\n            lastTimestamp = lastResults[0].timestamp;\n        } else if (selectedMusher.startTime) {\n            lastTimestamp = selectedMusher.startTime;\n        } else if (currentClass.startDate) {\n            lastTimestamp = currentClass.startDate;\n        } else {\n            lastTimestamp = new Date();\n        }\n        result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n\n        this.setState({\n            showTimestamp: !showTimestamp,\n            result,\n        });\n    }\n\n    doneEditResult = () => {\n        const { raceStore, appState } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const { checkpointId } = appState;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        this.setState({\n            selectedResult: '',\n            selectedCheckpoint,\n            currentResult: null,\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n        });\n    }\n\n    selectResult = (e) => {\n        const resultid = e.target.closest('.resultLine').dataset.resultid;\n        \n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === resultid)) : {};\n        \n        this.setState({\n            selectedResult: resultid,\n            currentResult,\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n        //     const { currentClass } = this.props;\n        //     const { raceStore } = this.props.stores;\n        //     const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        //     raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        // }\n\t}\n\n    componentDidMount() {\n        this.doneEditResult();\n\t}\n\n    render() {\n        const {\n            result,\n            showTimestamp,\n            message,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            currentResult,\n            lastResults = [],\n        } = this.state;\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { checkpointId } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : {};\n        let lastCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === lastResult.checkpoint) : null;\n        lastCheckpoint = lastCheckpoint ? lastCheckpoint : {};\n\n        // const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        // const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        // const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        // const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        // const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        // const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n        // const currentResult = currentClass.results ? currentClass.results.find(e => e.id === selectedResult) : {};\n\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n\n        return (<>\n            <div class='mt-2 pb-5' style='height: 70vh;'>\n                <h3>Admin timing - {currentClass.title}</h3>\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n\n                        {currentClass.checkpoints && currentClass.checkpoints.map((currentCheckpoint, idx) => {\n                            let resIn = {};\n                            let resOut = {};\n                            let resScratched = {};\n                            if (lastResults && lastResults.length > 0) {\n                                resIn = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'in') || {};\n                                resOut = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'out') || {};\n                                resScratched = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'scratched') || {};\n                            }\n                            \n                            return (<>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === currentClass.checkpoints.length - 1 && 'rounded-pill-right'} rounded-none ${checkpointId === currentCheckpoint.id ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.selectCheckpoint}\n                                        data-id={currentCheckpoint.id}\n                                    >\n                                        {currentCheckpoint.sortOrder}: {currentCheckpoint.name}\n                                        {resOut && resOut.id ? <i class='fas fa-check text-white ml-2' /> : ''}\n                                        {resIn && resIn.id && !resOut.id ? <i class='fas fa-map-marker-alt text-white ml-2' /> : ''}\n                                    </button>\n                                </div>\n                            </>);\n                        })}\n\n                    </div>\n                </div>\n                <div class='w-100 overflow-hidden'>\n                    {selectedCheckpoint && <>\n                        <h3>\n                            {selectedMusher && <><i class='fas fa-user text-muted' /> {selectedMusher.firstname} {selectedMusher.lastname}</>}\n                        </h3>\n\n                        {currentResult ? <>\n                            {['bib', 'dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={currentResult[field]}\n                                        onInput={this.editResult}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['timestamp'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                    <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={util.isoDate(currentResult[field], false, false, false)}\n                                        onInput={this.editResult}\n                                    />\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                </div>\n                            </>)}\n\n                            <button class='btn btn-lg btn-danger float-left' onClick={this.deleteResult}>\n                                Delete\n                            </button>\n                            <button class='btn btn-lg btn-info float-right' onClick={this.doneEditResult}>\n                                Done\n                            </button>\n                        </> : <>\n\n                            {selectedCheckpoint.sortOrder > lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Previous checkpoint is not logged yet.\n                                </div>\n                            </>}\n\n                            {!isCheckedOutPrev && selectedCheckpoint.sortOrder === lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Not checked out of prev.\n                                </div>\n                            </>}\n                            {/* {selectedCheckpoint.sortOrder} gt\n                            {lastCheckpoint.sortOrder}<br />\n                            isCheckedIn: {JSON.stringify(isCheckedIn, null, 4)}<br />\n                            isCheckedOut: {JSON.stringify(isCheckedOut, null, 4)}<br />\n                            isScratched: {JSON.stringify(isScratched, null, 4)}<br /> */}\n\n                            {/* bib: String,\n                            position: [],\n                            checkpointIn: String,\n                            checkpointOut: String,\n                            dogs: Number,\n                            timestamp: Date,\n                            addedByUser: Number, */}\n                            {['bib'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={this.updateField}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-dog' /> {field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {showTimestamp ? <>\n                                {['timestamp'].map(field => <>\n                                    <div class='form-group'>\n                                        <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                        <input\n                                            type='datetime-local'\n                                            class='form-control'\n                                            id={field}\n                                            aria-describedby={`${field}Help`}\n                                            onInput={linkstate(this, `result.${field}`)}\n                                            value={util.isoDate(result[field], false, false, false).replace(/ /g, 'T')}\n                                            min={util.isoDate(lastResult.timestamp, false, false, false).replace(/ /g, 'T')}\n                                        />\n                                        <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Hide timestamp</button>\n                                    </div>\n                                </>)}\n                            </> : <>\n                                <div class='form-group'>\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Show timestamp</button>\n                                </div>\n                            </>}\n\n\n                            {isCheckedIn && isCheckedOut && <>\n                                <div class='alert alert-warning my-2 clearfix' role='alert'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    {selectedMusher && <>{selectedMusher.firstname} {selectedMusher.lastname}</>} Has checked in and out of this checkpoint!\n                                </div>\n                            </>}\n\n                            <div class='d-flex justify-content-between'>\n                                <div class='text-center'>\n                                    <h3><i class='fas fa-campground text-muted' /> {selectedCheckpoint.name}</h3>\n                                </div>\n                            </div>\n\n                            <div class='d-flex justify-content-between'>\n                                <button class='btn btn-lg btn-success float-left' onClick={this.addResult} data-direction='in' data-classid={currentClass.id} disabled={isCheckedIn ? 'disabled' : ''}>\n                                    CP In <i class='fas fa-sign-in-alt ml-2' />\n                                </button>\n                                <button class='btn btn-lg btn-info float-right' onClick={this.addResult} data-direction='out' data-classid={currentClass.id} disabled={isCheckedOut ? 'disabled' : ''}>\n                                    <i class='fas fa-sign-out-alt mr-2' /> CP Out\n                                </button>\n                            </div>\n                        </>}\n\n                    </>}\n                </div>\n                {message && <div class='alert alert-success mt-3 clearfix' role='alert'>\n                    {message}\n                </div>}\n\n                <div class='overflow-hidden mb-5 mt-3'>\n                    <LastResults\n                        stores={this.props.stores}\n                        lastResults={lastResults}\n                        currentClass={currentClass}\n                        selectedMusher={selectedMusher}\n                        selectResult={this.selectResult}\n                    />\n                </div>\n\n                <div class='d-flex justify-content-center mt-3 mb-5'>\n                    <button class='btn btn-sm btn-block btn-danger' onClick={this.addResult} data-direction='scratched' data-classid={currentClass.id} disabled={isScratched ? 'disabled' : ''}>\n                        Scratch <i class='fas fa-times ml-2' />\n                    </button>\n                </div>\n\n            </div>\n        </>);\n    }\n}\n\nexport default RaceLiveAddResult;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport MusherInfoHeader from '../races/musherInfoHeader';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveMusherResult extends Component {\n    render() {\n        const { bib, onClickNav = () => {} } = this.props;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId) || {};\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(bib, 10)) : null;\n        selectedMusher = selectedMusher ? selectedMusher : {};\n        const selectedMusherIdx = sortedContestants ? sortedContestants.findIndex(e => e.bib === parseInt(bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(bib, 10)) : null;\n\n        const team = raceStore.getTeamById(selectedMusher.team);\n        const user = team.members ? team.members.find(m => m.email === selectedMusher.email) : {};\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(selectedMusher);\n\n        let lastResOut;\n        let lastResIn;\n        let totalDistance = 0;\n        let totalTime = 0;\n        let totalMovingTime = 0;\n        let totalInCpTime = 0;\n        let lastEstTimeOut = currentClass.startDate;\n        let lastAvgSpeed = 0;\n\n        const nextBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx + 1] ? sortedContestants[selectedMusherIdx + 1].bib : null;\n        const prevBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx - 1] ? sortedContestants[selectedMusherIdx - 1].bib : null;\n\n        const locale = 'en-GB';\n\n        return (<>\n            {nextBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextBib)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevBib)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <MusherInfoHeader\n                stores={this.props.stores}\n                contestant={selectedMusher}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n                onClickNav={onClickNav}\n                rank={selectedMusherIdx + 1}\n            >\n                {/* {\n                    \"id\": \"305e720b-12bc-4be3-8244-47a2529c1a26\",\n                    \"user\": 679,\n                    \"Løp\": \"Finnmarksløpet 1200\",\n                    \"bib\": 32,\n                    \"firstname\": \"Thomas\",\n                    \"lastname\": \"Wærner\",\n                    \"cellphone\": \"48176051\",\n                    \"email\": \"thomas.waerner@icloud.com\",\n                    \"country\": \"NO\",\n                    \"flag\": \"🇳🇴\",\n                    \"team\": 2278,\n                    \"startTime\": \"2019-03-08T18:32:00.000Z\",\n                    \"maxStartTime\": 1552071480000,\n                    \"startEpoch\": 1552069920000,\n                    \"timeEqualization\": 26,\n                    \"cpId\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                    \"cpDirection\": \"out\",\n                    \"cpDogs\": 13,\n                    \"cpTimestamp\": \"2019-03-13T00:08:00.000Z\",\n                    \"cpSortOrder\": 8\n                } */}\n                {/* [\n                    {\n                        \"position\": [],\n                        \"id\": \"d9f3d1b6-55e0-4185-b051-e96f1d4eaead\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"out\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-13T00:08:00.000Z\"\n                    },\n                    {\n                        \"position\": [],\n                        \"id\": \"1503b852-3a61-4b91-8323-5e4f862c4399\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"in\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-12T19:49:00.000Z\"\n                    }, */}\n                    {/* {\n                        \"position\":[],\n                        \"polygon\":[],\n                        \"id\":\"fa914e06-c56c-4b5b-9719-2dc6ee12c05d\",\n                        \"name\":\"Jergul\",\n                        \"distanceFromStart\":101,\n                        \"sortOrder\":3,\n                        \"distanceFromPrev\":101,\n                        \"estTimeToCpMinutes\":484\n                    } */}\n\n                    {/* <h3>RaceLiveMusherResult</h3> */}\n                    {/* <h5>{bib} {selectedMusher.lastname}</h5> */}\n                    {/* <xmp>{JSON.stringify(team.imageHeader, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(user, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(image, null, 4)}</xmp> */}\n                <div class='table-responsive'>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Checkpoint</th>\n                                <th class='text-center'>In</th>\n                                <th class='text-center'>Out</th>\n                                <th class='text-center'>Moving time</th>\n                                <th class='text-center'>Avg speed</th>\n                                <th class='text-center'>Total moving time</th>\n                                <th class='text-center'>Rest</th>\n                                <th class='text-center'>Total rest</th>\n                                <th class='text-center'>% rest</th>\n                                <th class='text-center'>Distance</th>\n                                <th class='text-center'>Total distance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {checkpoints && checkpoints.map((cp, cpIdx) => {\n                                const now = Math.floor(new Date().getTime() / 1000, 10);\n                                const resIn = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'in') || {};\n                                const resOut = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'out') || {};\n                                const resScratched = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'scratched') || {};\n                                let timeInCp = 0;\n                                if (!cp.isStartLine && resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                    timeInCp = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                }\n                                let movingTime = 0;\n                                if (lastResOut && resIn && lastResOut.timestamp && resIn.timestamp) {\n                                    movingTime = mu.deltaSec(lastResOut.timestamp, resIn.timestamp);\n                                }\n\n                                let hasBeenInCp = false;\n                                let avgSpeed = 0;\n                                if (resIn && resIn.timestamp) {\n                                    hasBeenInCp = true;\n                                    avgSpeed = cp.distanceFromPrev / (movingTime / 3600);\n                                }\n                                totalDistance += cp.distanceFromPrev ? parseInt(cp.distanceFromPrev, 10) : 0;\n                                totalMovingTime += movingTime ? movingTime : 0;\n                                totalInCpTime += timeInCp ? timeInCp : 0;\n                                totalTime += (movingTime ? movingTime : 0) + (timeInCp ? timeInCp : 0);\n                                const percentRest = totalTime ? totalInCpTime / totalTime * 100 : 0;\n                                const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n                                let line;\n                                let estTimeOutClass = 'text-muted font-weight-lighter';\n                                let totalRestClass = 'text-info';\n                                if (hasBeenInCp) {\n                                    let estTimeOut;\n                                    let estRest;\n                                    let restInCpSoFar;\n                                    // if (cp.isStartLine) {\n                                    //     estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                    //     estRest = 0;\n                                    if (!resOut || !resOut.timestamp) {\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.timeEqualization) {\n                                            if (currentClass.requiredRestMinutes && totalInCpTime < reqTotalRestInSec) {\n                                                estRest = reqTotalRestInSec - totalInCpTime + selectedMusher.timeEqualization * 60;\n                                                estTimeOutClass = 'text-warning font-weight-bold';\n                                            }\n                                            if (!estRest && cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                                estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                            }\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = 180 * 60;\n                                        }\n                                        if (cp.isStartLine) {\n                                            estTimeOut = mu.addDeltaSec(selectedMusher.startTime || currentClass.startDate, 0);\n                                        } else {\n                                            estTimeOut = mu.addDeltaSec(resIn.timestamp, estRest);\n                                            restInCpSoFar = mu.deltaSec(resIn.timestamp, now);\n                                        }\n                                        lastEstTimeOut = estTimeOut;\n\n                                        if (reqTotalRestInSec) {\n                                            if ((totalInCpTime + restInCpSoFar) > (reqTotalRestInSec + (selectedMusher.timeEqualization * 60))) {\n                                                totalRestClass = 'text-success';\n                                            } else {\n                                                totalRestClass = 'text-danger';\n                                            }\n                                        }\n                                    }\n\n                                    line = (<>\n                                        <tr>\n                                            <td><nobr>{cp.name}</nobr></td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resIn.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resIn.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    {resIn.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resIn.dogs}</>}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resOut.timestamp && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(resOut.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(resOut.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        {resOut.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resOut.dogs}</>}\n                                                    </nobr>}\n                                                    {!resScratched.timestamp && estTimeOut && <nobr class={`${estTimeOutClass}`}>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </>}\n                                                {resScratched.timestamp && <nobr class='text-danger'>\n                                                    <i class='fas fa-times' />\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resScratched.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resScratched.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(movingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(totalMovingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine || cp.isStartLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!resOut || !resOut.timestamp ? <>\n                                                            <nobr class='text-info'>\n                                                                {util.secToHms(restInCpSoFar, true)}\n                                                            </nobr>\n                                                        </> : <>\n                                                            {!cp.isStartLine && <>\n                                                                {estRest > 0 ? <>\n                                                                    <nobr class='text-muted font-weight-lighter'>\n                                                                        {util.secToHms(estRest, true)}\n                                                                    </nobr>\n                                                                </> : <>\n                                                                    <nobr>\n                                                                        {util.secToHms(timeInCp, true)}\n                                                                    </nobr>\n                                                                </>}\n                                                            </>}\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    <nobr>\n                                                        {util.secToHms(totalInCpTime, true)}\n                                                    </nobr>\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!cp.isStartLine && <>\n                                                            <nobr>\n                                                                {restInCpSoFar ? <>\n                                                                    <span class={totalRestClass}>\n                                                                        {util.secToHms(totalInCpTime + restInCpSoFar, true)}\n                                                                    </span> <span class='text-muted font-weight-lighter'>/ {util.secToHms(reqTotalRestInSec + (selectedMusher.timeEqualization * 60), true)}</span>\n                                                                </> : <>\n                                                                    {util.secToHms(totalInCpTime, true)}\n                                                                </>}\n                                                            </nobr>\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                                {/* {cp.timeEqualization && <>\n                                                    <br />\n                                                    {currentClass.requiredRestMinutes}\n                                                </>} */}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isStartLine || resScratched.timestamp ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {percentRest > 0 && <nobr>\n                                                        {util.format(percentRest || 0, 0)} <span class='text-muted font-weight-lighter'>%</span>\n                                                    </nobr>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {totalDistance} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                        </tr>\n                                    </>);\n                                    if (resOut && resOut.timestamp) {\n                                        lastEstTimeOut = resOut.timestamp;\n                                        lastAvgSpeed = avgSpeed;\n                                    }\n                                } else {\n                                    let estTimeIn;\n                                    let estTimeOut;\n                                    let estRest;\n                                    let movingTimeSoFar;\n                                    const distanceMeters = cp.distanceFromPrev * 1000;\n                                    const avgSpeedMs = lastAvgSpeed / 3.6;\n                                    let estTimeToNext = lastAvgSpeed ? (distanceMeters / avgSpeedMs / 60) : (cp.estTimeToCpMinutes || 0);\n                                    if (cp.isStartLine) {\n                                        estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                        estRest = 0;\n                                    } else if (lastEstTimeOut) {\n                                        estTimeIn = mu.addDeltaSec(lastEstTimeOut, estTimeToNext * 60);\n                                        // requiredRestMinutes: Number,\n                                        // estTimeToCpMinutes: Number,\n                                        // timeEqualization: Number,\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = (cp.estRestMinutes || 180) * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(estTimeIn, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n                                    if (lastResOut && lastResOut.timestamp) {\n                                        movingTimeSoFar = mu.deltaSec(lastResOut.timestamp, now);\n                                    }\n\n                                    avgSpeed = lastAvgSpeed || cp.distanceFromPrev / (estTimeToNext * 60 / 3600);\n                                    line = (\n                                        <tr>\n                                            <td>{cp.name}</td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info font-weight-light'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        est:\n                                                        <span class='text-muted mr-1 ml-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isFinishLine && estTimeOut && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && <nobr>\n                                                        {util.secToHms(cp.estTimeToCpMinutes * 60, true)}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar + totalMovingTime, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && !cp.isFinishLine && <nobr>\n                                                    {util.secToHms(estRest, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                        </tr>\n                                    );\n                                }\n                                lastResOut = resOut;\n                                lastResIn = resIn;\n                                return line;\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n\n                {/* <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(currentClass, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(lastResults, null, 4)}</xmp> */}\n            </MusherInfoHeader>\n        </>);\n    }\n}\n\nexport default RaceLiveMusherResult;\n","import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport style from './style.css';\n\n\nconst initialState = {\n    menu: {\n\t\tprofile: false,\n\t\tmain: false,\n\t},\n\tsearchText: '',\n};\n\n@observer\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\ttoggleDropdown = (e) => {\n\t\tconst { menu } = this.state;\n\t\tlet menuName = e.target.dataset.name;\n\t\tif (!menuName && e.target.parentNode) {\n\t\t\tmenuName = e.target.parentNode.dataset.name;\n\t\t}\n\t\tif (menuName) {\n\t\t\tmenu[menuName] = !menu[menuName];\n\t\t}\n\t\tthis.setState({ menu });\n\t}\n\n\ttoggleDarkmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tappState.toggleDarkmode();\n\t\tthis.toggleDropdown(e);\n\t}\n\n\ttoggleViewmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tlet mode = e.target.dataset.mode;\n\t\tif (!mode && e.target.parentNode) {\n\t\t\tmode = e.target.parentNode.dataset.mode;\n\t\t}\n\t\tappState.toggleViewmode(mode);\n\t\tthis.toggleDropdown(e);\n\t}\n\n\treloadApp = () => {\n\t\twindow.location.reload(true);\n\t}\n\n\tadminLoadAll = async (e) => {\n        const { userStore } = this.props.stores;\n        await userStore.getInfo(true);\n\t}\n\n\tchangeLanguage = (e) => {\n\t\tconst lang = e.target.value;\n\t\tconsole.log('changeLanguage', lang);\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\t\tif (user.email) {\n\t\t\tuserStore.setLanguage({ email: user.email, language: lang });\n\t\t}\n\t\tappState.setLanguage(lang);\n\t}\n\n\tsearch = () => {\n\t\tconst { searchText } = this.state;\n\t\troute(`/search/${searchText}`);\n\t}\n\n    render() {\n\t\tconst { menu, searchText } = this.state;\n        const { appState, userStore } = this.props.stores;\n        const { darkmode, viewmode, isCordova } = appState;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst unreadNotificatins = notifications.filter(e => !e.read);\n\t\tconst unread = unreadNotificatins.length || 0;\n\t\tconst { language = 'en' } = user;\n\n\t\treturn (\n\t\t\t<nav class='navbar navbar-expand-lg navbar-themed fixed-top py-1' style='z-index: 99999;'>\n\t\t\t\t<a class='navbar-brand' href='/race/'>\n\t\t\t\t\t{/* <img src={`./assets/logo-jul-2020-v2-${darkmode ? 'black' : 'white'}.png`} height='30' class='position-absolute' style='top: 8px; left: 6px' /> */}\n\t\t\t\t\t<img src={`./assets/homerun-race-logo-2-${darkmode ? 'white-' : ''}small.png`} height='37' class='position-absolute' style='top: 5px; left: 6px' />\n\t\t\t\t\t<span class='font-weight-normal' style='margin-left: 30px; font-size: 20px;'>Homerun Race</span>\n\t\t\t\t</a>\n\n\t\t\t\t<button class='navbar-toggler' type='button'\n\t\t\t\t\tdata-name='main'\n\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t>\n\t\t\t\t\t<span class='navbar-toggler-icon' />\n\t\t\t\t</button>\n\n\t\t\t\t<div class={`collapse navbar-collapse ${menu.main ? 'show' : ''}`} id='navbarSupportedContent'>\n\t\t\t\t\t<ul class='navbar-nav mr-auto ml-5'>\n\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tstyle='font-size: 1.0em !important;'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-flag-checkered' /> <Text id='header.races'>Løpene</Text></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race/support'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tstyle='font-size: 1.0em !important;'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='far fa-question-circle' /> <Text id='header.support'>Support</Text></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race/news'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tstyle='font-size: 1.0em !important;'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.news'>Nyheter</Text></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{/* <li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-dog' /> <Text id='header.backtoapp'>The Musher</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t{/* <li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/news'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.news'>Nyheter</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t{/* <li class='nav-item d-block d-lg-none'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/howto'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.howto'>Hvordan gjør man det?</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<ul class='navbar-nav ml-auto '>\n\t\t\t\t\t\t{/* <li class='nav-item mr-2'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'}\n\t\t\t\t\t\t\t\thref='/users/notifications'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-bell mr-1' />\n\t\t\t\t\t\t\t\t{unread > 0 && <>\n\t\t\t\t\t\t\t\t\t<span class='badge badge-pill badge-danger'>{unread > 9 ? '9+' : unread}</span>\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t<li class='nav-item mr-2'>\n\t\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t\t<div class='col-auto my-1' style='width: 80px;'>\n\t\t\t\t\t\t\t\t\t<select class='custom-select'\n\t\t\t\t\t\t\t\t\t\tstyle='background-color: inherit; border: none; padding: 0; height: 1.1em; font-size: 0.9em;'\n\t\t\t\t\t\t\t\t\t\tonInput={this.changeLanguage}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value='no' selected={language === 'no'}>🇳🇴 NO</option>\n\t\t\t\t\t\t\t\t\t\t<option value='en' selected={language === 'en'}>🇬🇧 EN</option>\n\t\t\t\t\t\t\t\t\t\t<option value='es' selected={language === 'es'}>🇪🇸 ES</option>\n\t\t\t\t\t\t\t\t\t\t<option value='de' selected={language === 'de'}>🇩🇪 DE</option>\n\t                                    <option value='fr' selected={language === 'fr'}>🇫🇷 FR</option>\n\t                                    <option value='ru' selected={language === 'ru'}>🇷🇺 RU</option>\n\t                                    <option value='se' selected={language === 'se'}>🇸🇪 SE</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item d-block d-lg-none'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'}\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDarkmode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class={`${darkmode ? 'fas text-warning' : 'far'} fa-moon`} /> <Text id='header.darkmode'>Nattmodus</Text>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item mr-2 d-none d-lg-block'>\n\t\t\t\t\t\t\t<button class='btn btn-link'\n\t\t\t\t\t\t\t\tdata-name='profile'\n\t\t\t\t\t\t\t\tonClick={this.toggleDarkmode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class={`${darkmode ? 'fas text-warning' : 'far'} fa-moon`} />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{/* <li class='nav-item ml-auto d-none d-lg-block'>\n\t\t\t\t\t\t\t<form class='form-inline my-2 my-lg-0'>\n\t\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t\t<input class='form-control form-control-sm mr-sm-2' type='search' placeholder={<Text id='header.search-placeholder'>Søk etter det meste...</Text>}\n\t\t\t\t\t\t\t\t\t\tvalue={searchText}\n\t\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'searchText')}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Localizer>\n\t\t\t\t\t\t\t\t<button class='btn btn-sm btn-outline-success my-2 my-sm-0' type='button'\t\n\t\t\t\t\t\t\t\t\tonClick={this.search}\n\t\t\t\t\t\t\t\t><Text id='header.search'>Søk</Text></button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t</ul>\n\n\t\t\t\t    \n\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Navigation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {\n};\n\n@observer\nclass RaceText extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { text } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\n        let finalText = text;\n\n        const regex = new RegExp(`/<${language}>(.*?)<\\/${language}>/`);\n        const parsedText = text.replace(regex, '$1');\n        if (parsedText) {\n            finalText = text;\n        }\n\n\t\treturn (\n\t\t\t<>\n                {finalText}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceText;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass Checkpoints extends Component {\n    render() {\n        const { checkpoints, thClass, thStyle, selectedCheckpointId, width, widthCp, onClickCheckpoint = () => {}, dotColor } = this.props;\n        return (<>\n            {checkpoints && checkpoints.map((cp, cpIdx) => <>\n                {cpIdx > 0 && <th class={thClass} style={thStyle}>\n                    <div class='' style={`width: ${width}px;`}>\n                        &nbsp;\n                    </div>\n                </th>}\n                <th class={thClass} style={thStyle}>\n                    <div\n                        class={`checkpoint position-relative ${selectedCheckpointId === cp.id ? 'text-primary' : ''}`}\n                        style={`width: ${widthCp}px; font-size: 1.1em;`}\n                        onClick={onClickCheckpoint}\n                        data-id={cp.id}\n                    >\n                        <i class='fas fa-campground' />\n\n                        <div\n                            class={`rounded-pill-both px-1 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: 0px; right: -20px; font-size: 0.6em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {cp.sortOrder && cp.sortOrder !== 'n/a' && <>{cp.sortOrder}</>}\n                        </div>\n\n                    </div>\n                </th>\n            </>)}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantLineCheckpoint extends Component {\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n@observer\nclass Contestants extends Component {\n    render() {\n        const {\n            currentClass,\n            contestants,\n            limit,\n            onClickMusher,\n            tdClass,\n            tdStyle,\n            progressStyle,\n            progressbarStyle,\n        } = this.props;\n\n        const { checkpoints = [], results = [] } = currentClass;\n        const finalContestants = contestants && limit ? contestants.slice(0, limit) : contestants;\n\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n\n        const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n        const now = Math.floor(new Date().getTime() / 1000, 10);\n\n        return (<>\n            {finalContestants && finalContestants.map((co, coIdx) => {\n                let cpIdx = 0;\n                let hasLeftCpPrev;\n                let bibIdxOutPrev;\n                let estTimeToCpMinutesPrev;\n                let hasScratchedPrev;\n                let totalInCpTime = 0;\n\n                let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(co.bib, 10)) : null;\n                selectedMusher = selectedMusher ? selectedMusher : {};\n\n                return(<>\n                    <tr class='musher' onClick={onClickMusher} data-bib={co.bib}>\n                        <td class={tdClass} style={tdStyle}>\n                            {co.startTime ? util.isoTime(co.startTime) : ''}\n                        </td>\n\n                        {checkpoints && checkpoints.map((cp, idx) => {\n                            const checkpointResults = results.slice().filter(e => e.checkpoint === cp.id).sort(fieldSorter(['timestamp']));\n                            const res = checkpointResults.filter(e => parseInt(e.bib, 10) == co.bib);\n                            const hasLeftCp = res.find(e => e.direction === 'out');\n                            const hasArrivedCp = res.find(e => e.direction === 'in');\n                            const hasScratched = res.find(e => e.direction === 'scratched');\n\n                            const allResultsIn = checkpointResults.filter(e => (e.direction === 'in' || e.direction === 'scratched'));\n                            const bibIdxIn = allResultsIn.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            const allResultsOut = checkpointResults.filter(e => e.direction === 'out');\n                            const bibIdxOut = allResultsOut.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            let timeInCp = 0;\n                            let percentInCp;\n                            if (!cp.isStartLine && hasArrivedCp && hasLeftCp && hasArrivedCp.timestamp && hasLeftCp.timestamp) {\n                                timeInCp = mu.deltaSec(hasArrivedCp.timestamp, hasLeftCp.timestamp);\n                            }\n                            totalInCpTime += timeInCp ? timeInCp : 0;\n\n                            if (!hasLeftCp && hasArrivedCp && !cp.isStartLine) {\n                                if (cp.timeEqualization && reqTotalRestInSec) {\n                                    const restInCpSoFar = mu.deltaSec(hasArrivedCp.timestamp, now);\n                                    // console.log({ reqTotalRestInSec, totalInCpTime, restInCpSoFar })\n                                    percentInCp = (totalInCpTime + restInCpSoFar) / reqTotalRestInSec * 100;\n                                    percentInCp = percentInCp > 100 ? 100 : percentInCp;\n                                    // console.log({ percentInCp })\n                                }\n                            }\n\n                            if (hasScratchedPrev) {\n                                return '';\n                            }\n\n                            if (bibIdxIn === -1)  {\n                                if (hasLeftCpPrev) {\n                                    const nowEpoch = Math.floor(new Date().getTime() / 1000);\n                                    const prevCpOutEpoch = Math.floor(new Date(hasLeftCpPrev.timestamp).getTime() / 1000);\n                                    const timeUsedOnStage = Math.floor((nowEpoch - prevCpOutEpoch) / 60);\n                                    // let percentDone = timeUsedOnStage / estTimeToCpMinutesPrev * 100;\n                                    let percentDone = timeUsedOnStage / cp.estTimeToCpMinutes * 100;\n                                    percentDone = percentDone > 95 ? 95 : percentDone;\n                                    const line = (<>\n                                        <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                            <div class='progress' style={`${progressStyle}`}>\n                                                <div\n                                                    class={`progress-bar progress-bar-striped`}\n                                                    role='progressbar'\n                                                    style={`width: ${percentDone}%; ${progressbarStyle}`}\n                                                    aria-valuenow={percentDone}\n                                                    aria-valuemin='0'\n                                                    aria-valuemax='100'\n                                                    data-prevtimestamp={hasLeftCpPrev.timestamp}\n                                                    data-timeUsedOnStage={timeUsedOnStage}\n                                                    data-estTimeToCpMinutesPrev={estTimeToCpMinutesPrev}\n                                                    data-nowEpoch={nowEpoch}\n                                                    data-prevCpOutEpoch={prevCpOutEpoch}\n                                                >{bibIdxOutPrev + 1 > 0 ? bibIdxOutPrev + 1 : ''}</div>\n                                            </div>\n\n                                            {/* estTimeToCpMinutesPrev: {estTimeToCpMinutesPrev}\n                                            timeUsedOnStage: {timeUsedOnStage}\n                                            percentDone: {percentDone} */}\n                                            {co.cpId && res.length > 0 && <>\n                                                {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                            </>}\n                                        </td>\n                                    </>);\n                                    bibIdxOutPrev = bibIdxOut;\n                                    hasLeftCpPrev = hasLeftCp;\n                                    estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                    return line;\n                                }\n                                return '';\n                            }\n                            cpIdx = idx;\n                            bibIdxOutPrev = bibIdxOut;\n                            hasLeftCpPrev = hasLeftCp;\n                            estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n\n                            const output = (<>\n                                {(hasArrivedCp || hasScratched) && idx > 0 && <>\n                                    <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                        <div class='progress' style={`${progressStyle}`}>\n                                            <div\n                                                class={`progress-bar`}\n                                                role='progressbar'\n                                                style={`width: 100%; ${progressbarStyle}`}\n                                                aria-valuenow='100'\n                                                aria-valuemin='0'\n                                                aria-valuemax='100'\n                                            />\n                                        </div>\n                                        {co.cpId && res.length > 0 && <>\n                                            {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                        </>}\n                                    </td>\n                                </>}\n                                <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                    <div class='progress' style={`${progressStyle}`}>\n                                        <div\n                                            class={`progress-bar ${percentInCp > 0 ? 'progress-bar-striped' : ''} ${hasScratched ? 'bg-danger' : 'bg-success'}`}\n                                            role='progressbar'\n                                            style={`width: ${percentInCp || 100}%; ${progressbarStyle}`}\n                                            aria-valuenow={percentInCp}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        >{hasScratched ? <i class='fas fa-times' /> : <>{bibIdxIn + 1 > 0 ? bibIdxIn + 1 : ''}</>}</div>\n                                    </div>\n                                    {co.cpId && res.length > 0 && <>\n                                        {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                    </>}\n                                </td>\n                            </>);\n\n                            hasScratchedPrev = hasScratched;\n                            return output;\n                        })}\n                        <td colspan={checkpoints.length * 2 - cpIdx} class={tdClass} style={tdStyle}>\n                            <div class='d-flex flex-nowrap'>\n                                <div\n                                    class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                    style={`background-color: ${mu.getRankingColor(coIdx + 1)}; width: 45px;`}\n                                >\n                                    {co.bib}\n                                </div>\n                                <div>\n                                    <nobr>\n                                        {co.flag} {co.lastname}\n                                    </nobr>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </>);\n            })}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantCheckpoint extends Component {\n\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n\n@observer\nclass RaceLiveResults extends Component {\n    componentWillReceiveProps(nextProps) {\n        if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n            const { currentClass } = this.props;\n            const { raceStore } = this.props.stores;\n            const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n        }\n\t}\n\n    componentDidMount() {\n        const { currentClass } = this.props;\n        const { raceStore } = this.props.stores;\n        const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n\t}\n\n    render() {\n        const widthCp = 20;\n        const width = 40;\n\t\tconst {\n            race,\n            currentClass,\n            onClickMusher = () => {},\n            onClickCheckpoint = () => {},\n            selectedCheckpointId,\n            limit = 100,\n            tableClass = 'table-striped table-sm',\n            thClass,\n            thStyle,\n            tdClass,\n            tdStyle,\n            progressStyle = 'height: 20px;',\n            progressbarStyle,\n        } = this.props;\n        const { checkpoints = [], sortOrderResults } = currentClass;\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n        const dotColor = '#808080';\n\n\t\treturn (<>\n            <div class='table-responsive'>\n                <table class={`table ${tableClass}`}>\n                    <thead>\n                        <tr>\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${width}px;`}>\n                                    <i class='fas fa-flag' />\n                                </div>\n                            </th>\n\n                            <Checkpoints stores={this.props.stores}\n                                checkpoints={checkpoints}\n                                thClass={thClass}\n                                thStyle={thStyle}\n                                selectedCheckpointId={selectedCheckpointId}\n                                width={width}\n                                widthCp={widthCp}\n                                onClickCheckpoint={onClickCheckpoint}\n                                dotColor={dotColor}\n                            />\n\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${widthCp}px;`}>\n                                    <i class='fas fa-flag-checkered' />\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <Contestants\n                            stores={this.props.stores}\n                            currentClass={currentClass}\n                            contestants={sortedContestants}\n                            limit={limit}\n                            onClickMusher={onClickMusher}\n                            tdClass={tdClass}\n                            tdStyle={tdStyle}\n                            progressStyle={progressStyle}\n                            progressbarStyle={progressbarStyle}\n                        />\n                    </tbody>\n                </table>\n            </div>\n\t\t</>);\n\t}\n}\n\nexport default RaceLiveResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport Header from './header';\nimport Submenu from './submenu';\nimport RaceHeader from './raceheader';\nimport RaceText from './raceText';\n\n\nimport ScrollIntoView from '../../../components/util/scrollIntoView';\nimport Drawer from '../../../components/drawer/';\nimport Gauge from '../../../components/gauge';\nimport DogScroller from '../../../components/dog/scroller';\nimport HeaderCustom from '../../../components/header/custom';\n\nimport RaceLiveResults from '../../../components/races/liveResults';\nimport MusherInfoHeader from '../../../components/races/musherInfoHeader';\nimport RaceLiveAddResult from '../../../components/races/liveAddResult';\nimport RaceLiveMusherResult from '../../../components/races/liveMusherResult';\nimport RaceLiveCheckpointResult from '../../../components/races/liveCheckpointResult';\n\nimport mu from '../../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, true);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\temail: '',\n\tsubmenu: 'ads',\n\tjwtToken: util.getJwtToken(),\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n\t\tconst { reloadLastEpoch } = this.props;\n\t\tconst { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass PublicRaceDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\t\t\ttimerRunning: true,\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs, true);\n\n        // // Set reload timer\n        // if (timerRunning) {\n        //     clearTimeout(this.updateTimer.reload);\n        //     this.updateTimer.reload = setTimeout(() => {\n        //         console.log('loadLiveRaceResults.reloading...');\n        //         const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n        //         this.setState({ reloadLastEpoch });\n        //         // this.loadRace(props);\n        //         this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n        //     }, RELOAD_INTERVAL_IN_SEC * 1000);\n        // }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n\tasync loadRace(props = this.props) {\n        const { loadTimes = 0 } = this.state;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore, appState } = props.stores;\n\t\tconst { raceid, classid, filterByBibs, historySteps } = props;\n        await raceStore.load(raceid);\n        raceStore.getAllClassesSortedBy();\n        \n        const { race } = raceStore;\n        const { focusOnMushers } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const allClassIds = race?.classes.map(e => e.id);\n        let selectedClassId = selectedClassIds[0];\n        if (allClassIds.indexOf(selectedClassId) === -1) {\n            selectedClassId = allClassIds[0];\n            appState.setSelectedClassId(selectedClassId);\n        }\n        if (classid) {\n            appState.toggleSelectedClassId(classid, true);\n        }\n\t\tconst allTeamIds = race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n            })\n            .flat();\n\n        const bibs = filterByBibs ? filterByBibs : race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n            })\n            .flat();\n\n        if (allTeamIds.length > 0) {\n            await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n        }\n\n        if (race.liveRace > 0) {\n            await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\t\t\tclearTimeout(this.updateTimer.reload);\n\t\t\tthis.updateTimer.reload = setTimeout(async () => {\n\t\t\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\t\t\tthis.setState({ reloadLastEpoch });\n\t\t\t\tthis.loadRace();\n\t\t\t}, RELOAD_INTERVAL_IN_SEC * 1000);\n        } else {\n            await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n        }\n\n        // if (allTeamIds.length > 0 && raceid) {\n        //     if (!race.liveRace) {\n        //         await raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n        //         raceStore.getWorkoutSummaryActiveTeams();\n        //     }\n        //     if (loadTimes === 0) {\n        //         await raceStore.loadTeams(allTeamIds.join(','));\n        //     }\n\t\t// }\n\n\t\t// // Set reload timer\n\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\tcontentIsNotLoaded: false,\n            loadTimes: loadTimes + 1,\n\t\t});\n\t}\n\n\t// async loadRace(props = this.props) {\n\t// \tthis.setState({ isLoading: true });\n\t// \tconst { raceStore } = props.stores;\n\t// \tconst { raceid } = props;\n\t// \tawait raceStore.load(raceid);\n\t// \tconst { race } = raceStore;\n\n\t// \tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n    //         return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t// \t}).flat();\n\n\t// \tif (allTeamIds.length > 0) {\n\t// \t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t// \t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t// \t\traceStore.getWorkoutSummaryActiveTeams();\n\t// \t}\n\t// \traceStore.getAllClassesSortedBy();\n\n\t// \t// Set reload timer\n\t// \tclearTimeout(this.updateTimer.reload);\n\t// \tthis.updateTimer.reload = setTimeout(async () => {\n\t// \t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \t\tthis.setState({ reloadLastEpoch });\n\t// \t\tthis.loadRace();\n\t// \t}, RELOAD_INTERVAL_IN_SEC * 1000);\n\n\t// \tthis.setState({\n\t// \t\tisLoading: false,\n\t// \t\tcontentIsNotLoaded: false,\n\t// \t});\n\t// }\n\n\ttoggleDisplayDetails = (e) => {\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleDisplayDetails(email)\n\t}\n\n\tadminToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleEditUserDetails(email)\n\t}\n\n\tadminSignupEdit = (e) => {\n        const { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n\tlockAllWorkoutsInRace = async () => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n\t\tconst lockMessage = await raceStore.lockAllWorkoutsInRace({ id: raceid });\n\t\tthis.setState({ lockMessage });\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n\t}\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        // if (!showDrawer) {\n        //     // Stop reload when we are updating results.\n        //     clearTimeout(this.updateTimer.reload);\n        // } else {\n        //     this.loadRace();\n        // }\n        this.setState({\n            showDrawer: !showDrawer,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerMusher = (e) => {\n\t\tconst selectedMusherBib = e.target.closest('.musher').dataset.bib;\n        const { showDrawerMusher } = this.state;\n        this.selectMusher(selectedMusherBib);\n    }\n\n    selectMusher = (selectedMusherBib) => {\n        this.setState({\n            selectedMusherBib,\n            showDrawerMusher: true,\n            showDrawerCheckpoint: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerMusher = () => {\n        this.setState({\n            selectedMusherBib: '',\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerCheckpoint = (e) => {\n\t\tconst selectedCheckpointId = e.target.closest('.checkpoint').dataset.id;\n        const { showDrawerCheckpoint } = this.state;\n        this.selectCheckpoint(selectedCheckpointId)\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerCheckpoint = () => {\n        this.setState({\n            selectedCheckpointId: '',\n            showDrawerCheckpoint: false,\n        });\n    }\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n\trender() {\n\t\tconst { appState, raceStore, userStore } = this.props.stores;\n\t\tconst { user = {}, isAdmin } = userStore;\n\t\tconst { raceid, path } = this.props;\n\t\tconst { darkmode, displayDetails, editUserDetails, language = 'en', selectedClassIds = [] } = appState;\n\t\tconst { race, teamList, classes } = raceStore;\n\n\t\tconst { contentIsNotLoaded, lockMessage, showDrawer, showDrawerCheckpoint, showDrawerMusher, reloadLastEpoch, selectedCheckpointId, selectedMusherBib } = this.state;\n\t\tconst { activeTeams, waypoints, zoomToMarkers } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n\t\tconst filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const isLiveRace = race.liveRace === 1;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header stores={this.props.stores} />\n\n\t\t\t\t<div class='container-fluid ' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t\t<Submenu stores={this.props.stores} path={path} raceid={raceid} />\n\n\t\t\t\t\t<div class='row border-bottom '>\n\t\t\t\t\t\t<div class='col-12'>\n\n\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t<RaceHeader stores={this.props.stores} title={<Text id='races.results'>Resultater</Text>} />\n\t\t\t\t\t\t\t</Localizer>\n\n\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t<a href={`/race/${raceid}/resultsMain`}>New results demo</a>\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t<ReloadTimer stores={this.props.stores} reloadLastEpoch={reloadLastEpoch} />\n\n\t\t\t\t\t\t\t{isLiveRace ? <>\n                    \n\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t{user.email && <div class='alert alert-primary' role='alert'>\n\t\t\t\t\t\t\t\t\t{language === 'no' && <>\n\t\t\t\t\t\t\t\t\t\tResultatene hentes direkte fra treningsøktene i QPaws appen.<br />\n\t\t\t\t\t\t\t\t\t\t<strong>For at treningsøktene skal bli registrert må øktene:</strong>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li>Ha riktig dato som er innenfor løpsperioden.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Være markert som 'Konkurranse'.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Være registrert på teamet som er påmeldt.</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t{language === 'en' && <>\n\t\t\t\t\t\t\t\t\t\tThe results are imported directly from the workouts inside QPaws app.<br />\n\t\t\t\t\t\t\t\t\t\t<strong>To make sure your workouts are registered check the following:</strong>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li>Use the correct date on your workout. Has to be inside the race period.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Mark the workout as 'Race'.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Workout has to be on the same team as you signed up with.</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t{race.resultsUrl ? <div class='p-3 my-4 bg-light'>\n\t\t\t\t\t\t\t\t<a href={race.resultsUrl} target='_blank' rel='noreferrer' native>\n\t\t\t\t\t\t\t\t\t{race.resultsText ? race.resultsText : <><Text id='races.results-here'>Se resultater her</Text> </>} <i class='fas fa-chevron-circle-right' />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div> : <>\n\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t{isLiveRace ? <></> : <>\n\t\t\t\t\t\t\t\t{(contentIsNotLoaded || !classes || classes.length === 0) && <div class='d-flex justify-content-center my-5 py-5'>\n\t\t\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{isLiveRace ? <>\n\t\t\t\t\t\t\t{!showDrawer && <>\n\t\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t\t<h1><Text id='races.classes'>Classes</Text></h1>\n\t\t\t\t\t\t\t\t\t<nav class=\"flex-column flex-sm-row\">\n\t\t\t\t\t\t\t\t\t\t{race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-lg flex-sm-fill text-sm-center btn${selectedClassIds.indexOf(currentClass.id) > -1 ? '' : '-outline'}-primary mr-2 mb-2`}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.filterByClass}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-id={currentClass.id}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{currentClass.title}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t\t{race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <div class='mt-5 mb-5'>\n\t\t\t\t\t\t\t\t\t\t<RaceLiveResults\n\t\t\t\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\t\t\t\trace={race}\n\t\t\t\t\t\t\t\t\t\t\tcurrentClass={currentClass}\n\t\t\t\t\t\t\t\t\t\t\treloadLastEpoch={reloadLastEpoch}\n\t\t\t\t\t\t\t\t\t\t\tkey={`raceclass-${currentClass.id}`}\n\t\t\t\t\t\t\t\t\t\t\tonClickMusher={this.toggleDrawerMusher}\n\t\t\t\t\t\t\t\t\t\t\tonClickCheckpoint={this.toggleDrawerCheckpoint}\n\t\t\t\t\t\t\t\t\t\t\tselectedCheckpointId={selectedCheckpointId}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>}\t\t\t\t\t\t\n\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t<div class='col-12 overflow-auto bg-light py-4 border rounded-lg mb-5' style='max-height: 30vh;'>\n\t\t\t\t\t\t\t\t{(activeTeams && activeTeams.length > 0) && <>\n\t\t\t\t\t\t\t\t\t<span class='float-right'>\n\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><Text id='races.mushers-on-trail'>Mushers on trail</Text>: {activeTeams.length}</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t<h5><Text id='races.on-trail'>På sporet nå</Text>:</h5>\n\t\t\t\t\t\t\t\t<div class='table-responsive-md'>\n\t\t\t\t\t\t\t\t\t<table class='table table-sm table-striped'>\n\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th><Text id='races.name'>Navn</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th><Text id='races.start-date'>Startdato</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.distance'>Distanse</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.ascend'>Høydemeter</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.avg-speed'>Gj.snittsfart</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.race-time'>Kjøretid</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.rest-time'>Hviletid</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.load-index'>B.index</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.current-speed'>Fart nå</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <th>Posisjon</th> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<th><Text id='races.elevation'>Moh</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <th>Retning</th> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<th><Text id='races.elevation-graph'>Høydekurve</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{(activeTeams && activeTeams.length > 0) ? activeTeams.map((line, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst team = raceStore.getTeamById(line.team);\n\t\t\t\t\t\t\t\t\t\t\t\tconst musher = raceStore.getMusherByTeamId(team.id);\n\t\t\t\t\t\t\t\t\t\t\t\tconst currentSpeed = util.format(line.currentLocation.coords.speed * 3.6, 1);\n\t\t\t\t\t\t\t\t\t\t\t\tconst spinnerColor = line.secSinceLastUpdate > 1800 ? 'danger' : (line.secSinceLastUpdate > 600 ? 'warning' : 'success');\n\t\t\t\t\t\t\t\t\t\t\t\tconst lastUpdated = line.currentLocation.timestamp;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>{idx + 1}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{line.isInProgress === 1 && <div class={`spinner-grow text-${spinnerColor} float-left`} role='status' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{line.isInProgress === 2 && <i class='fas fa-pause-circle text-warning mr-2 float-left' style='font-size: 1.8em;' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.firstname} {musher.lastname}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team.name && <> / <span class='text-muted'>{team.name}</span></>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-dog text-muted ml-2' /> {line.avgDogs}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-battery-three-quarters text-muted ml-2' /> {util.format(line.currentLocation.battery.level * 100, 0)}%\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-hourglass-half text-muted ml-2' /> Updated: {util.formatDistance(lastUpdated, new Date())} ago\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{util.formatDate(line.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{util.format(line.distanceKm, 1)} km</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{util.format(line.elevation, 0)} m</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{util.format(line.speedAvg, 1)} km/t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-center'>{util.secToHms(line.duration)}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-center'>{util.secToHms(line.rest)}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{line.loadIndex}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{currentSpeed} km/t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{line.currentLocation.coords.latitude},{line.currentLocation.coords.longitude}</td> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{line.currentLocation.coords.altitude} moh</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{heading}</td> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg viewBox='0 0 300 100' style='width: 100%; height: 50px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path d={`${line.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>);\n\t\t\t\t\t\t\t\t\t\t\t}) : <tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td colspan='11' class='text-center py-4'><h5><Text id='races.no-team-on-trail'>Ingen team tracker live i The Musher appen akkurat nå...</Text></h5></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* {JSON.stringify(activeTeams)} */}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h1><Text id='races.classes'>Classes</Text></h1>\n\t\t\t\t\t\t\t\t<nav class=\"flex-column flex-sm-row\">\n\t\t\t\t\t\t\t\t\t{race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-lg flex-sm-fill text-sm-center btn${selectedClassIds.indexOf(currentClass.id) > -1 ? '' : '-outline'}-primary mr-2 mb-2`}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.filterByClass}\n\t\t\t\t\t\t\t\t\t\t\tdata-id={currentClass.id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{currentClass.title}\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t{race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <div class='mt-5 mb-5'>\n\t\t\t\t\t\t\t\t\t{race.resultDanger && <div class='alert alert-danger' role='alert'>\n\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-danger float-left' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={mu.replaceImages(race.resultDanger, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t{race.resultWarning && <div class='alert alert-warning' role='alert'>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-exclamation float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={mu.replaceImages(race.resultWarning, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t{race.resultSuccess && <div class='alert alert-success' role='alert'>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={mu.replaceImages(race.resultSuccess, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\t\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t\t\t<span class='float-right'>\n\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><Text id='races.mushers'>Mushers</Text>: {currentClass.totalMushers || 0}</span>\n\t\t\t\t\t\t\t\t\t\t<span class='text-muted ml-4'><Text id='races.finished-mushers'>Finished mushers</Text>: {currentClass.totalFinished || 0} </span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<h3>{currentClass.title} {currentClass.startDate && <>\n\t\t\t\t\t\t\t\t\t\t\t: <span class='font-weight-lighter'>\n\t\t\t\t\t\t\t\t\t\t\t\t{util.formatDate(`${currentClass.startDate} ${currentClass.startTime || '00:00:00'}`, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(`${currentClass.endDate} ${currentClass.endTime || '00:00:00'}`, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t\t\t<div class='table-responsive-md'>\n\t\t\t\t\t\t\t\t\t\t<table class='table table-sm table-striped'>\n\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>#</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col' style='min-width: 200px;'><Text id='races.name'>Navn</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'><i class='fas fa-user-shield' /> Cellphone</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'><i class='fas fa-user-shield' /> Email</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <th scope='col' class='d-none d-sm-block' style='min-width: 400px;'><Text id='races.stages'>Etapper</Text></th>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'><Text id='races.result'>Resultat</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t{classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.map((contestant, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst { musher, currentTeam, currentStages, currentResults, completed, duration,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnormalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tflatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfinishedDate, totalWorkoutTimeUsedSec,\n\t\t\t\t\t\t\t\t\t\t\t\t\t} = contestant;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr onClick={this.toggleDisplayDetails} data-email={musher.email}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='row'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{idx + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && currentResults && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />{currentResults.isLocked ? <i class='fas fa-lock text-danger mr-2' /> : <i class='fas fa-lock-open text-success mr-2' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass={`${displayDetails[musher.email] ? 'font-weight-bold' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`${displayDetails[musher.email] ? '' : 'line-height: 0.8em;'}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{displayDetails[musher.email] ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.firstname} {musher.lastname}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'>{currentTeam.name}</span><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>{musher.sportsClub}</small><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.price1 && <div class='font-weight-lighter'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-trophy text-warning' /> {musher.price1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.priceSent && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check text-success' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-trophy' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.priceSent && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check text-success' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.firstname} {musher.lastname}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>{musher.sportsClub}</small><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{musher.cellphone}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{musher.email}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <td class='d-none d-md-block'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class='btn btn-primary btn-sm float-right' onClick={this.adminToggleEditUser}><i class='fas fa-user-edit' /></button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(isAdmin && editUserDetails[musher.email]) && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>Admin edit:</h5>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class='col-sm-2 col-form-label text-right'>Email</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class='col-sm-2 col-form-label text-right'>Cellphone</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.cellphone}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='team' class='col-sm-2 col-form-label text-right'>Race status</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class='form-control-plaintext' id='raceStatus'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.raceStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=''>-- Choose race status --</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='OK'>OK - Everything ok</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DNS'>DNS - Did Not Start</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DNF'>DNF - Did Not Finish</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DNQ'>DNQ - Did not qualify</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DQ'>DQ - Disqualified</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DC'>DC - Data changed by user</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='raceComment' class='col-sm-2 col-form-label text-right'>Race comment</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control-plaintext' id='raceComment'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.raceComment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='gpxResultsApproved' class='col-sm-2 col-form-label text-right'>GPX Results approved (date)</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' class='form-control-plaintext' id='gpxResultsApproved'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='price1' class='col-sm-2 col-form-label text-right'>Price 1</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control-plaintext' id='price1'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.price1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='price2' class='col-sm-2 col-form-label text-right'>Price 2</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control-plaintext' id='price2'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.price2}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='price3' class='col-sm-2 col-form-label text-right'>Price 3</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control-plaintext' id='price3'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.price3}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='priceSent' class='col-sm-2 col-form-label text-right'>Price sent</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' class='form-control-plaintext' id='priceSent'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <div class='d-flex flex-wrap'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentStages && currentStages.map((stage, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst percent = stage.distanceKm / currentClass.distance * 100;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst width = percent > 100 ? 100 : parseInt(percent, 10);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst currentEpoch = Math.floor(new Date(stage.date).getTime() / 1000);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst inDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinDate.setUTCSeconds(currentEpoch + parseInt(stage.duration, 10));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst images = stage.images.flat();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (displayDetails[musher.email]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='bg-light border rounded-lg  text-right position-relative mr-1 mb-1' style={`width: 350px; min-width: 320px;`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg viewBox='0 0 300 100' class='position-absolute' style='width: 100%; height: 95%; bottom: 0px; left: 0px; z-index: 0;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path d={`${stage.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='position-relative px-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='position-absolute' style='top: 3px; left: 3px; font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{idx + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <span class='position-absolute' style='top: 0px; right: -5px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-success' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='float-left'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-sign-out-alt text-muted' /> {util.formatDate(stage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-sign-in-alt text-muted' /> {util.formatDate(inDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='float-right'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {restTimeText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{restTimeTrackText} */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(stage.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr><br />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(stage.rest) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(stage.duration - stage.rest) || 'n/a'}</nobr><br />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(stage.avgDogs, 0) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='bg-light border rounded-lg text-right position-relative px-3 mr-1 mb-1' style={`width: 300px; min-width: 300px;`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <span class='position-absolute' style='top: 2px; right: -5px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-sucess' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='float-left'>{idx + 1}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right position-relative pl-4'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{raceStatus(musher)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.raceComment && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='alert alert-warning text-left' role='alert'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Markdown markdown={mu.replaceImages(musher.raceComment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(isAdmin && currentResults.lastUpdated > lastAllowedChangeDate) && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='alert alert-danger text-left d-none d-md-block' role='alert'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-user-shield' /> Last changed: {util.formatDate(currentResults.lastUpdated, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{completed >= 99 ? <span class='position-absolute' style='top: 10px; left: 0px;'><i class='fas fa-flag-checkered text-success' /></span> : ''}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{displayDetails[musher.email] ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='progress mb-1' style='height: 3px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trole='progressbar'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`width: ${completed}%`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuenow={`${completed}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuemin='0'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuemax='100'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{race.nonstop ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br /><nobr><i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(totals.firstEpoch)} - <i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(finishedDate)}</nobr>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-danger'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{totals.firstGpxStartEpoch && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>firstGpxStartEpoch: {util.isoDate(totals.firstGpxStartEpoch)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{totals.lastGpxStartEpoch && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>lastGpxStartEpoch: {util.isoDate(totals.lastGpxStartEpoch)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>totalWorkoutTimeUsedSec: {util.secToHms(totals.totalWorkoutTimeUsedSec)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>rest: {util.secToHms(totals.rest)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>totalRest: {util.secToHms(totals.totalRest)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>duration: {util.secToHms(totals.duration)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(currentResults.avgDogs, 0) || 'n/a'}</nobr> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='progress mb-1' style='height: 3px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trole='progressbar'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`width: ${completed}%`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuenow={`${completed}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuemin='0'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuemax='100'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{race.nonstop ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isDone === 1 ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr class='font-weight-bold'><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* raceDistance: {raceDistance}<br /> */}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* duration: {util.secToHms(duration)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnormalizedDuration: {util.secToHms(normalizedDuration)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweightedNormalizedDuration: {util.secToHms(weightedNormalizedDuration)}<br /> */}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* totalKcalRelated: {totalKcalRelated}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweightedTotalKcal: {weightedTotalKcal}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflatTotalKcal: {flatTotalKcal}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentHarder: {percentHarder}<br /> */}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* loadIndex: {loadIndex}<br /> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tADMIN:<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{['firstDate', 'lastDate', 'distanceKm', 'elevation'].map(field => <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'>{field}</span>: {JSON.stringify(totals[field])}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{['totalTimeUsedSec', 'totalWorkoutTimeUsedSec', 'duration', 'rest', 'totalRest', 'lastDuration'].map(field => <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'>{field}</span>: {util.secToHms(totals[field])}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{totals.distanceKm >= currentClass.distance && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStarted: {totals.firstDate}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfinished: {util.isoDate(finishedDate)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotal used: {util.secToHms(totalWorkoutTimeUsedSec)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotal rest: {util.secToHms(totals.totalRest)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>} */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class='text-center text-muted'>\n\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t{language === 'no' && <>\n\t\t\t\t\t\t\t\t\t\t\t\tOBS! Ref reglene så er det ikke lov til å endre treningsøktene som er med i konkurransen etter at løpet er ferdig.<br />\n\t\t\t\t\t\t\t\t\t\t\t\tForsøk på dette vil resultere i automatisk deplassering på listene.\n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t{language === 'en' && <>\n\t\t\t\t\t\t\t\t\t\t\t\tIMPORTANT! According to the rules: It is NOT allowed to try alter the workouts related to the competition after the race has ended.<br />\n\t\t\t\t\t\t\t\t\t\t\t\tAttempts will result in automatic deplacement on the resultlists.\n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>)}\n\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{!isLiveRace && isAdmin && <>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass='btn btn-danger btn-lg float-right m-4'\n\t\t\t\t\t\tonClick={this.lockAllWorkoutsInRace}\n\t\t\t\t\t>\n\t\t\t\t\t\tLock all workouts in this race\n\t\t\t\t\t</button>\n\t\t\t\t\t<xmp class='m-5'>{JSON.stringify(lockMessage, null, 4)}</xmp>\n\t\t\t\t</>}\n\n\t\t\t\t{showDrawer && <>\n\t\t\t\t\t<Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n\t\t\t\t\t\t<RaceLiveAddResult stores={this.props.stores} />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</>}\n\t\t\t\t{showDrawerCheckpoint && <>\n\t\t\t\t\t<Drawer stores={this.props.stores} onCloseClick={this.closeDrawerCheckpoint}>\n\t\t\t\t\t\t<RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</>}\n\t\t\t\t{showDrawerMusher && <>\n\t\t\t\t\t<Drawer stores={this.props.stores} onCloseClick={this.closeDrawerMusher}>\n\t\t\t\t\t\t<RaceLiveMusherResult stores={this.props.stores} bib={selectedMusherBib} onClickNav={this.selectMusher}  />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</>}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default PublicRaceDetail;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport DogScroller from '../dog/scroller';\nimport ImageScroller from '../imageScroller';\nimport RaceTrackingMusherDetail from '../public/raceTrackingMusherDetail';\n\n@observer\nclass MusherInfoHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { contestant = {}, onMarkerClick = () => {}, children, rank } = this.props;\n        const wp = raceStore.findWaypointByBib(contestant.bib);\n\n        const { isAdmin } = userStore;\n        const musher = (contestant.bib ? raceStore.getMusherByBibId(contestant.bib) : raceStore.getMusherByBibEmail(contestant.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(contestant.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        let image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = contestant.color;\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(contestant.bib);\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n            />\n\n            <div class='d-flex position-relative' style='margin-top: 17vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; font-size: 1.2em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {/* {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>} */}\n                        {rank && <>{rank}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-0' style='line-height: 1.2em;'>\n                    <h5 class='mb-0'>\n                        <div class='d-flex flex-nowrap'>\n                            <div\n                                class='text-white font-weight-bold pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                style={`background-color: ${mu.getRankingColor(rank)}; width: 55px;`}\n                            >\n                                {musher.bib}\n                            </div>\n                            <div>\n                                <nobr>\n                                    {musher.flag} {musher.firstname} {musher.lastname}\n                                </nobr>\n                            </div>\n                        </div>\n                    </h5>\n                    <span class='mb-0' style='margin-left: 93px;'>{musher.sportsClub || team.name || <>&nbsp;</>}</span>\n                </div>\n            </div>\n\n            <div class='d-flex justify-content-center mb-3'>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='details'\n                    >\n                        Details\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'gpsdata' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='gpsdata'\n                    >\n                        GPS Data\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='team'\n                    >\n                        Team\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='dogs'\n                    >\n                        Dogs\n                    </button>\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                // style='max-height: 60vh;'\n            >\n                {submenu === 'details' && <>\n                    {children}\n                </>}\n\n                {submenu === 'gpsdata' && <>\n                    <RaceTrackingMusherDetail\n                        stores={this.props.stores}\n                        wp={wp}\n                        musher={musher}\n                    />\n                </>}\n\n                {submenu === 'team' && <>\n                    {team.public > 0 ? <>\n                        <h3>{team.name}</h3>\n                        <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        <ImageScroller stores={this.props.stores} images={teamImages} />\n\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                        </div>\n                    </>}\n                </>}\n\n                {submenu === 'dogs' && <>\n                    {team.public > 0 ? <>\n                        {team.dogs && <div class='w-100 container-fluid'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n                        {showDog && <>                    \n                            <div class='d-flex mb-0 mt-3 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pr-2'\n                                    style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                >\n                                    <h5 class='mb-1'>\n                                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </h5>\n                                    <div>\n                                        {daysUntilBirthday < 7 && <>\n                                            <span class='text-muted mr-2'>\n                                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                            </span>\n                                        </>}                                \n                                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                        </>}\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                    <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                        Toggle admin info\n                    </button>\n                    {showAdminInfo && <>\n                        <small>\n                            <xmp>\n                                musher: {JSON.stringify(musher, null, 4)}<br />\n                                user: {JSON.stringify(user, null, 4)}<br />\n                                team: {JSON.stringify(team, null, 4)}<br />\n                                totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                {/* {\n                                    \"firstDate\": \"2021-03-19 11:59\",\n                                    \"lastDate\": \"2021-03-20 17:13\",\n                                    \"firstEpoch\": 1616151540000,\n                                    \"lastEpoch\": 1616256780000,\n                                    \"now\": {\n                                        \"$numberDecimal\": \"1642675856939\"\n                                    },\n                                    \"totalTimeUsedSec\": 26524316,\n                                    \"totalWorkoutTimeUsedSec\": 130895,\n                                    \"lastDuration\": 25655,\n                                    \"team\": 84,\n                                    \"count\": 4,\n                                    \"distanceKm\": 301.5906237951766,\n                                    \"elevation\": 3610.019075719202,\n                                    \"duration\": 77343,\n                                    \"rest\": 1332,\n                                    \"speedAvg\": 8.294634979660305,\n                                    \"totalRest\": 54884,\n                                    \"loadIndex\": 1080.75,\n                                    \"totalKcalRelated\": 544.535560976128,\n                                    \"weightedTotalKcal\": 12303.171406247127,\n                                    \"flatTotalKcal\": 9424.70699359927,\n                                    \"firstGpxStartEpoch\": null,\n                                    \"lastGpxStartEpoch\": null\n                                } */}\n\n                            </xmp>\n                        </small>\n                    </>}\n                </div>}\n                <div class='d-flex position-absolute' style='right: 10px; bottom: 10px;'>\n                    {inFront.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-left' />\n                    </a>}\n                    {behind.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-right' />\n                    </a>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default MusherInfoHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n"],"sourceRoot":""}