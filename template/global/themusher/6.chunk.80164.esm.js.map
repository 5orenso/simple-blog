{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/workout/commentAdd.js","webpack:///./components/workout/commentReply.js","webpack:///./components/data/distance.js","webpack:///./components/style.css","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./components/workout/comments.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/feedback/views.js"],"names":["initialState","DisplayLikesAndComments","observer","Component","constructor","props","super","toggleLikes","showLikesList","this","state","setState","render","storyStore","teamStore","workoutStore","raceStore","stores","likes","comments","type","onTeamClick","onUserClick","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","e","public","image","mu","getImage","team","priority","shortname","displayNameShort","href","uuidv4","title","name","id","fields","total","displayName","WorkoutAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentWorkout","async","callback","inputRefObject","workout","comment","showAddImage","response","status","body","images","resizeTextarea","addImage","addImages","value","push","handleImageErrored","target","onerror","setTimeout","src","Date","inputRef","col","offset","showAvatar","extraClass","userStore","firstname","ucfirst","lastname","email","userImage","undefined","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","ref","data-id","disabled","img","onError","removeImage","data-name","object","updateField","before","after","autoOpen","WorkoutCommentReply","commentId","commentReplyWorkout","displayDistance","distance","format","Distance","smallUnit","settings","imperial","kmToMiles","module","exports","Temperature","celciusToFahrenheit","Weight","kgToPounds","Elevation","meterToFeet","Speed","kmtToMph","Images","handleAddImage","file","addToImages","field","skipTimer","files","uploadStatus","apiUrl","height","width","showAddComment","showAllComments","showAllReplies","viewImageIdx","WorkoutComments","likeComment","parentElement","dataset","likeWorkoutComment","likeReply","replyId","likeWorkoutCommentReply","replyComment","focus","toggleComments","toggleReplies","viewImage","idx","closest","translate","preventDefault","stopPropagation","replyid","commentid","showOriginal","translatedText","key","translateCommentReply","translateComment","compact","currentUser","isAdmin","language","max_comments","filteredComments","totalComments","diplayedComments","Math","max","reverse","hasLikedComment","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","loading","s3LargeLink","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","formatted_address","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-comment","data-replyid","more","c","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","componentDidMount","div","current","click","componentWillUnmount","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","Object","keys","isImage","match","result","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax","children","toggleViews","showViewList","isTeamAdmin","views","viewUsersArrays","entries","statistics","forEach","year","yearObject","week","weekObject","viewUsers","flat","userId"],"mappings":"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","file":"6.chunk.80164.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, 3).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            return (<>\n                                {publicTeam ? <>\n                                    <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                        <div\n                                            class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                            style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                        >\n                                            {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                        </div>\n                                    </a>\n                                </> : <>\n                                    <div\n                                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                        style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                                    >\n                                        {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                    </div>\n                                </>}\n                            </>);\n                        })}\n                        {likes.length > 3 && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - 3 }}>and {likes.length - 3} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n    \n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentWorkout({ id: workout.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[workout.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ workout, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, col = 12, offset = 0, showAvatar = true, extraClass = '', workout } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class={`col-${col} offset-${offset} ${extraClass}`}>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    {showAvatar && <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>}\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={workout.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {comment.images && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' />  <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentReplyWorkout({ id: workout.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ workout, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WorkoutCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport WorkoutReplyComment from '../../components/workout/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n};\n\nconst MAX_COMMENTS = 1;\n\n@observer\nclass WorkoutComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutComment({ id: workout.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', workout, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutCommentReply({ id: workout.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', workout, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { workout } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await teamStore.translateCommentReply({ commentid, replyid, object: workout, user });\n        } else {\n            translatedText[key] = await teamStore.translateComment({ commentid, object: workout, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { workout, callback = () => {}, col = 12, offset = 0, compact = false } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (workout.comments) {\n            totalComments = workout.comments.length;\n            if (showAllComments) {\n                filteredComments = workout.comments;\n            } else {\n                // filteredComments = workout.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = workout.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {/* {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>} */}\n                {workout && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                   const translation = teamStore.getCommentTranslations({\n                        object: workout,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                    {displayName}\n                                                </h5>\n\n                                                {teams && teams.length > 0 && <div class='mb-2'>\n                                                    <small class='font-weight-lighter text-muted'>\n                                                        {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                            <a href={`/teams/public/${t.uuidv4}`} class='mr-2'><i class='fas fa-users text-muted' /> {t.name}</a>\n                                                        </>)}\n                                                    </small>\n                                                </div>}\n\n                                                <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                            </span>\n                                        </div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row'>\n                                                <div\n                                                    class={`col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 30vh;`}                                                    \n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                        {isAdmin && currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                            <span class='ml-2 text-muted'>\n                                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                            </span>\n                                        </>}\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    const replyTranslation = teamStore.getCommentReplyTranslations({\n                                        object: workout,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                            </h5>\n\n                                                            {teams && teams.length > 0 && <div class='mb-2'>\n                                                                <small class='font-weight-lighter text-muted'>\n                                                                    {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                                        <a href={`/teams/public/${t.uuidv4}`} class='mr-2'>\n                                                                            <i class='fas fa-users text-muted' /> {t.name}\n                                                                        </a>\n                                                                    </>)}\n                                                                </small>\n                                                            </div>}\n\n                                                            <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <WorkoutReplyComment stores={this.props.stores} workout={workout}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutComments;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                <small class='ml-2 text-muted'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </small>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n"],"sourceRoot":""}