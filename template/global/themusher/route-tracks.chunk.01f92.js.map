{"version":3,"sources":["webpack:///./components/garmin/index.js","webpack:///./components/strava/index.js","webpack:///./routes/tracks/index.js"],"names":["Garmin","observer","toggleDate","e","stopPropagation","preventDefault","setState","showDate","state","ignoreGarminWorkout","props","stores","garminActivityDetailsStore","ignoreWorkout","target","parentElement","dataset","id","loadGarminActivities","importGarminWorkout","loadWorkouts","currentTeam","workoutStore","asTrack","importTrack","importWorkout","load","query","team","toggleDetail","showDetail","this","hideImported","componentDidMount","render","activities","forceShowDate","userStore","selectedTeam","findTeam","class","length","type","onClick","map","activity","summary","startDate","util","parseInputDate","startTimeInSeconds","style","deviceName","activityType","formatDate","locale","formatDistance","Date","value","distanceInMeters","totalElevationGainInMeters","averageSpeedInMetersPerSecond","secToHms","durationInSeconds","data-id","Component","Strava","ignoreStravaWorkout","stravaActivityStore","loadStravaActivities","importStravaWorkout","name","start_date","distance","total_elevation_gain","average_speed","elapsed_time","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","Tracks","loadTracks","messageStore","trackStore","getNotifications","getUnReadMessages","scrolledDown","searchText","tracks","user","darkmode","appState","garminActivityDetails","href","fields","total","garmin","key","placeholder","onInput","linkState","filter","RegExp","test","track"],"mappings":"iNAYMA,G,UADLC,Y,sJAEGC,WAAa,SAACC,GACVA,EAAEC,kBACFD,EAAEE,iBAEF,EAAKC,SAAS,CAAEC,UADK,EAAKC,MAAlBD,Y,EAIZE,oBAAsB,SAAON,GAAP,kCAIxB,OAHMA,EAAEC,kBAGR,gBAD6C,EAAKM,MAAMC,OAA1CC,2BACmBC,cAFhBV,EAAEW,OAAOC,cAAcC,QAAQC,IAAMd,EAAEW,OAAOE,QAAQC,KAEvE,MAAkD,sBAC5C,EAAKC,uBADuC,mC,EAIhDC,oBAAsB,SAAOhB,GAAP,sDAWlB,EAAKe,uBACL,EAAKE,eAZa,QAEZH,EAFY,MAMlB,OALAd,EAAEC,kBACIa,EAAKd,EAAEW,OAAOC,cAAcC,QAAQC,IAAMd,EAAEW,OAAOE,QAAQC,GAEzDL,GAJU,EAImC,EAAKF,MAAMC,QAAxDC,2BACNS,EALgB,EAIkBC,aAClCD,YAFkB,EAAKX,MAAjBa,QAIJ,gBAAMX,EAA2BY,YAAYP,EAAII,IAAjD,KAA6D,wEAE7D,gBAAMT,EAA2Ba,cAAcR,EAAII,IAAnD,KAA+D,4E,EAWvED,aAAe,mDAGjB,OAFQE,EAAiB,EAAKZ,MAAMC,OAA5BW,aAER,gBAAMA,EAAaI,KAAK,CAAEC,MAAO,CAAEC,KADXN,EAAhBD,gBACR,MAAyD,yD,EAGvDQ,aAAe,WAAM,MACc,EAAKrB,MAA5BsB,WACR,EAAKxB,SAAS,CACVwB,kBAHa,a,4HAXfZ,qBAAN,iDACqCa,KAAKrB,MAAMC,OAA1CC,2BACmBc,KAAK,CAAEC,MAAO,CAAEK,aAAc,KAFvD,kB,EAkBAC,kBAAA,WACFF,KAAKb,wB,EAGHgB,OAAA,WAAS,aACoCH,KAAKvB,MAAtCD,EADH,EACGA,SADH,IACauB,kBADb,WAEiEC,KAAKrB,MAFtE,IAEGyB,kBAFH,MAEgB,GAFhB,EAE8BC,EAF9B,EAEoB7B,SAFpB,IAE6CgB,eAF7C,WAGyBQ,KAAKrB,MAAMC,OAAvC0B,EAHG,EAGHA,UAIIC,EAAeD,EAAUE,SAP1B,EAGQjB,aACLD,aACSgB,EAATT,KAEoDX,IAE5D,OAAKa,EAcG,mBACJ,mBAAKU,MAAM,eACP,mBAAKA,MAAM,OACNL,GAAcA,EAAWM,OAAS,GAC/B,mBACID,MAAM,2DAEN,sBAAQE,KAAK,SAASF,MAAM,kCAAkCG,QAASZ,KAAKF,cACxE,iBAAGW,MAAM,oBADb,IACkC,YAAC,IAAD,CAAMvB,GAAG,oBAAT,cAElC,sBAAI,YAAC,IAAD,CAAMA,GAAG,iCAAT,kCAAJ,IAAoFkB,EAAWM,QAC9FN,GAAcA,EAAWS,KAAI,SAAAC,GAAY,MACbA,EAAjBC,eAD8B,MACpB,GADoB,EAEhCC,EAAYC,IAAKC,eAAeH,EAAQI,oBAE9C,OAAQ,mBAqBJ,mBAAKV,MAAM,wCACP,mBAAKA,MAAK,iDAAoDW,MAAK,uFAAnE,KAGA,mBAAKX,MAAM,mBAAmBW,MAAM,uBAChC,kBAAIX,MAAM,YAAYW,MAAM,uBAAuBL,EAAQM,YAC1DN,EAAQO,aAAa,uBACtB,qBAAOb,MAAM,cACRO,GAAa,qBAAOJ,QAAS,EAAKzC,YAC9BkC,GAAiB7B,EAAWyC,IAAKM,WAAWP,EAAW,CAAEQ,OAAQ,UAAaP,IAAKQ,eAAeT,EAAW,IAAIU,KAAQ,CAAEF,OAAQ,WAExI,oBAAMf,MAAM,cACR,iBAAGA,MAAM,qBADb,IACmC,YAAC,IAAD,CAAU7B,OAAQ,EAAKD,MAAMC,OAAQ+C,MAAOZ,EAAQa,iBAAmB,MACtG,iBAAGnB,MAAM,yBAFb,IAEuC,YAAC,IAAD,CAAW7B,OAAQ,EAAKD,MAAMC,OAAQ+C,MAAOZ,EAAQc,6BACxF,iBAAGpB,MAAM,+BAHb,IAG6C,YAAC,IAAD,CAAO7B,OAAQ,EAAKD,MAAMC,OAAQ+C,MAA+C,IAAxCZ,EAAQe,gCAC1F,iBAAGrB,MAAM,0BAJb,IAIyCQ,IAAKc,SAAShB,EAAQiB,qBAGnE,uBACA,sBAAQvB,MAAM,mCAAmCG,QAAS,EAAKxB,oBAAqB6C,UAASnB,EAAS5B,IAClG,iBAAGuB,MAAM,uBADb,IACsCjB,EAAU,YAAC,IAAD,CAAMN,GAAG,uBAAT,mBAAwD,mBAAE,YAAC,IAAD,CAAMA,GAAG,iBAAT,kBAAF,IAAiD,iBAAGuB,MAAM,uBAA1D,IAAmFF,IAE3L,sBAAQE,MAAM,sBAAsBG,QAAS,EAAKlC,oBAAqBuD,UAASnB,EAAS5B,IACrF,iBAAGuB,MAAM,qBADb,IACmC,YAAC,IAAD,CAAMvB,GAAG,iBAAT,yBAOnD,sBAAQyB,KAAK,SAASF,MAAM,iCAAiCG,QAASZ,KAAKF,cACvE,iBAAGW,MAAM,oBADb,IACkC,YAAC,IAAD,CAAMvB,GAAG,oBAAT,kBAhF9CkB,GAAcA,EAAWM,OAAS,EAC1B,mBACJ,mBAAKD,MAAM,eACP,sBAAQE,KAAK,SAASF,MAAM,iCAAiCG,QAASZ,KAAKF,cACvE,mBAAKW,MAAK,mFAAsFW,MAAK,0DACrG,YAAC,IAAD,CAAMlC,GAAG,iCAAT,kCAFJ,IAEoFkB,EAAWM,UAKnG,qB,GAzECwB,e,GA0JNjE,Q,oLC1JTkE,G,UADLjE,Y,sJAEGC,WAAa,SAACC,GACVA,EAAEC,kBACFD,EAAEE,iBAEF,EAAKC,SAAS,CAAEC,UADK,EAAKC,MAAlBD,Y,EAIZ4D,oBAAsB,SAAOhE,GAAP,kCAIxB,OAHMA,EAAEC,kBAGR,gBADsC,EAAKM,MAAMC,OAAnCyD,oBACYvD,cAFTV,EAAEW,OAAOC,cAAcC,QAAQC,IAAMd,EAAEW,OAAOE,QAAQC,KAEvE,MAA2C,sBACrC,EAAKoD,uBADgC,mC,EAIzCC,oBAAsB,SAAOnE,GAAP,wCAKxB,OAJMA,EAAEC,kBADgB,EAG4B,EAAKM,MAAMC,OAE/D,gBALwB,EAGVyD,oBAEY3C,cAHTtB,EAAEW,OAAOC,cAAcC,QAAQC,IAAMd,EAAEW,OAAOE,QAAQC,GAF/C,EAGWK,aAC3BD,cACR,MAAwD,sBAClD,EAAKgD,uBACL,EAAKjD,eAF6C,mC,EAUtDA,aAAe,mDAGjB,OAFQE,EAAiB,EAAKZ,MAAMC,OAA5BW,aAER,gBAAMA,EAAaI,KAAK,CAAEC,MAAO,CAAEC,KADXN,EAAhBD,gBACR,MAAyD,yD,EAGvDQ,aAAe,WAAM,MACc,EAAKrB,MAA5BsB,WACR,EAAKxB,SAAS,CACVwB,kBAHa,a,4HAXfuC,qBAAN,iDAC8BtC,KAAKrB,MAAMC,OAAnCyD,oBACY1C,KAAK,CAAEC,MAAO,CAAEK,aAAc,KAFhD,kB,EAkBHC,kBAAA,WACCF,KAAKsC,wB,EAGHnC,OAAA,WAAS,aACoCH,KAAKvB,MAAtCD,EADH,EACGA,SADH,IACauB,kBADb,WAE2CC,KAAKrB,MAA7CyB,EAFH,EAEGA,WAAsBC,EAFzB,EAEe7B,SAFf,EAGyBwB,KAAKrB,MAAMC,OAAvC0B,EAHG,EAGHA,UAIIC,EAAeD,EAAUE,SAP1B,EAGQjB,aACLD,aACSgB,EAATT,KAEoDX,IAE3D,OAAKa,EAcE,mBACJ,mBAAKU,MAAM,eACP,mBAAKA,MAAM,OACNL,GAAcA,EAAWM,OAAS,GAC/B,mBACID,MAAM,2DAEN,sBAAQE,KAAK,SAASF,MAAM,kCAAkCG,QAASZ,KAAKF,cACxE,iBAAGW,MAAM,oBADb,IACkC,YAAC,IAAD,CAAMvB,GAAG,oBAAT,cAElC,sBAAI,YAAC,IAAD,CAAMA,GAAG,iCAAT,kCAAJ,IAAoFkB,EAAWM,QAC9FN,GAAcA,EAAWS,KAAI,SAAAC,GAAY,MACbA,EAAjBC,QACUE,IAAKC,qBAFe,MACpB,GADoB,GAEQC,oBAE9C,OAAQ,mBAIJ,mBAAKV,MAAM,wCACP,mBAAKA,MAAK,iDAAoDW,MAAK,oFAAnE,KAGA,mBAAKX,MAAM,mBAAmBW,MAAM,uBAChC,kBAAIX,MAAM,YAAYW,MAAM,uBAAuBN,EAAS0B,MAC3D1B,EAASH,KAAK,uBACf,qBAAOF,MAAM,cACRK,EAAS2B,YAAc,qBAAO7B,QAAS,EAAKzC,YACxCkC,GAAiB7B,EAAWyC,IAAKM,WAAWT,EAAS2B,WAAY,CAAEjB,OAAQ,UAAaP,IAAKQ,eAAeX,EAAS2B,WAAY,IAAIf,KAAQ,CAAEF,OAAQ,WAE5J,oBAAMf,MAAM,cACR,iBAAGA,MAAM,qBADb,IACmC,YAAC,IAAD,CAAU7B,OAAQ,EAAKD,MAAMC,OAAQ+C,MAAOb,EAAS4B,SAAW,MAC/F,iBAAGjC,MAAM,yBAFb,IAEuC,YAAC,IAAD,CAAW7B,OAAQ,EAAKD,MAAMC,OAAQ+C,MAAOb,EAAS6B,uBACzF,iBAAGlC,MAAM,+BAHb,IAG6C,YAAC,IAAD,CAAO7B,OAAQ,EAAKD,MAAMC,OAAQ+C,MAAgC,IAAzBb,EAAS8B,gBAC3F,iBAAGnC,MAAM,0BAJb,IAIyCQ,IAAKc,SAASjB,EAAS+B,gBAGpE,uBACA,sBAAQpC,MAAM,mCAAmCG,QAAS,EAAK2B,oBAAqBN,UAASnB,EAAS5B,IAClG,iBAAGuB,MAAM,uBADb,IACqC,YAAC,IAAD,CAAMvB,GAAG,iBAAT,kBADrC,IACoF,iBAAGuB,MAAM,uBAD7F,IACsHF,GAEtH,sBAAQE,MAAM,sBAAsBG,QAAS,EAAKwB,oBAAqBH,UAASnB,EAAS5B,IACrF,iBAAGuB,MAAM,qBADb,IACmC,YAAC,IAAD,CAAMvB,GAAG,iBAAT,yBAOnD,sBAAQyB,KAAK,SAASF,MAAM,iCAAiCG,QAASZ,KAAKF,cACvE,iBAAGW,MAAM,oBADb,IACkC,YAAC,IAAD,CAAMvB,GAAG,oBAAT,kBA/D9CkB,GAAcA,EAAWM,OAAS,EAC1B,mBACJ,mBAAKD,MAAM,eACP,sBAAQE,KAAK,SAASF,MAAM,iCAAiCG,QAASZ,KAAKF,cACvE,mBAAKW,MAAK,mFAAsFW,MAAK,uDACrG,YAAC,IAAD,CAAMlC,GAAG,iCAAT,kCAFJ,IAEoFkB,EAAWM,UAKnG,qB,GApECwB,e,GAmINC,Q,4hBCpITW,EAAaC,IAAGC,WAAU,GAC1BC,EAAgBF,IAAGG,eACnBC,EAAsBJ,IAAGK,mBAEzBC,EAAe,CACpBC,WAAW,GAINC,EADLrF,Y,cAEG,WAAYS,GAAO,aACf,cAAMA,IAAN,MACKF,M,+VAAL,IACO4E,GAHQ,E,0HAOhBG,WAAN,sDAGC,OAFAxD,KAAKzB,SAAS,CAAE+E,WAAW,IACPhD,GAFrB,EAEiDN,KAAKrB,MAAMC,QAAvC0B,UAAWmD,EAFhC,EAEgCA,aAC/B,gBAHD,EAESC,WACS/D,QAAjB,KAAuB,eACvB,uBAAMW,EAAUqD,oBAAhB,KAAkC,eAC5B,uBAAMF,EAAaG,qBAAnB,KAAsC,sBAC5C5D,KAAKzB,SAAS,CAAE+E,WAAW,IADiB,yCADV,qCADX,sCAHxB,a,EASMhB,qBAAN,iDACiCtC,KAAKrB,MAAMC,OAAnCyD,oBACY1C,KAAK,CAAEC,MAAO,CAAEK,aAAc,KAFnD,kB,EAKMd,qBAAN,iDACwCa,KAAKrB,MAAMC,OAA1CC,2BACmBc,KAAK,CAAEC,MAAO,CAAEK,aAAc,KAF1D,kB,EAKAC,kBAAA,WACCF,KAAKwD,aAELxD,KAAKb,wB,EAGNgB,OAAA,WAAS,WACM0D,EAAiB7D,KAAKrB,MAAtBkF,aADN,EAE0B7D,KAAKvB,MAA/B6E,EAFA,EAEAA,UAAWQ,EAFX,EAEWA,WAFX,EAGmG9D,KAAKrB,MAAMC,OAC9GmF,EAJA,EAGAL,WACAK,OACAC,EALA,EAGY1D,UAEZ0D,KACAC,EANA,EAGuBC,SAGvBD,SACA3E,EAPA,EAGiCC,aAIjCD,YAPA,IAGoET,2BAQpEsF,6BAXA,MAWwB,GAXxB,EAeR,OACC,mBAAK1D,MAAM,kBAAkBW,MAAK,kBAAoB6B,EAApB,iBAAkDH,EAAlD,KACjC,mBAAKrC,MAAM,qBAAqBW,MAAK,gBAAiByC,EAAe,EAAI,EAAIV,GAAxC,wBAAkFc,EAAW,UAAY,WAAzG,uCACpC,mBAAKxD,MAAM,2DACV,iBAAG2D,KAAK,WAAW3D,MAAM,+BAA8B,wBAAM,iBAAGA,MAAM,sBAAf,IAAsC,YAAC,IAAD,CAAMvB,GAAG,sBAAT,kBAE9F,mBAAKuB,MAAM,8BACV,iBAAG2D,KAAK,iBAAiB3D,MAAM,iCAAgC,wBAAM,iBAAGA,MAAM,sBAAf,IAAsC,YAAC,IAAD,CAAMvB,GAAG,wBAAT,yBAIvG,mBAAKuB,MAAM,OACV,mBAAKA,MAAM,UACV,mBAAKA,MAAM,kEACV,sBAAI,YAAC,IAAD,CAAMvB,GAAG,oBAAoBmF,OAAQ,CAAEC,MAAOP,EAAOrD,SAArD,0BAAuFqD,EAAOrD,OAA9F,UAEL,mBAAKD,MAAM,gFACV,iBAAGA,MAAM,qCACR2D,KAAK,oBAEL,iBAAG3D,MAAM,gBAHV,IAG2B,YAAC,IAAD,CAAMvB,GAAG,kBAAT,qBAI1BoE,GAAaS,GAA4B,IAAlBA,EAAOrD,QAC/B,mBAAKD,MAAM,wEACV,mBAAKA,MAAM,oBACV,mBAAKA,MAAM,aACV,iBAAGA,MAAM,uBAEV,sBACC,YAAC,IAAD,CAAMvB,GAAG,wBAAT,sCAGF,iBAAGuB,MAAM,eACR,qBACC,YAAC,IAAD,CAAMvB,GAAG,2BAAT,gEAED,qBACC,YAAC,IAAD,CAAMA,GAAG,2BAAT,uEADD,KAJD,kBAOgB,iBAAGkF,KAAK,0EAAR,OAPhB,SAQO,iBAAGA,KAAK,wFAAR,WARP,KAUA,YAAC,IAAD,CAAMlF,GAAG,sBAAT,yBAnBD,IAoBC,sBACC,sBAAI,YAAC,IAAD,CAAMA,GAAG,kBAAT,yDAOR8E,GAAQA,EAAKO,QAAS,mBAAK9D,MAAM,OACjC,mBAAKA,MAAM,kEACV,mBAAKA,MAAM,YAITuD,GAAQA,EAAKO,QAAU,mBACvB,YAAC,IAAD,CAAQ3F,OAAQoB,KAAKrB,MAAMC,OAAQwB,WAAY+D,EAAuB3E,SAAS,EAAMgF,IAAG,UAAYlF,EAAZ,IAA2B6E,EAAsBzD,aAM7I,mBAAKD,MAAM,OACV,mBAAKA,MAAM,kEACV,mBAAKA,MAAM,sCACV,YAAC,IAAD,KACC,qBAAOA,MAAM,iCAAiCE,KAAK,SAAS8D,YAAa,YAAC,IAAD,CAAMvF,GAAG,6BAAT,0BACxEyC,MAAOmC,EACPY,QAASC,YAAU3E,KAAM,oBAO9B,mBAAKS,MAAM,OACV,mBAAKA,MAAM,UAETsD,GAAUA,EAAOa,QApFC,SAAAxG,GAAC,OAAI0F,GAAa,IAAIe,OAAOf,EAAY,KAAKgB,KAAK1G,EAAEoE,SAoF/B3B,KAAI,SAAAkE,GAAK,OACjD,YAAC,IAAD,CAAOnG,OAAQ,EAAKD,MAAMC,OAAQmG,MAAOA,W,GAnI3B7C,e,EA6INqB,a","file":"route-tracks.chunk.01f92.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass Garmin extends Component {\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    ignoreGarminWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { garminActivityDetailsStore } = this.props.stores;\n\t\tawait garminActivityDetailsStore.ignoreWorkout(id);\n        this.loadGarminActivities();\n    }\n\n    importGarminWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { asTrack } = this.props;\n        const { garminActivityDetailsStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n        if (asTrack) {\n            await garminActivityDetailsStore.importTrack(id, currentTeam);\n        } else {\n            await garminActivityDetailsStore.importWorkout(id, currentTeam);\n        }\n        this.loadGarminActivities();\n        this.loadWorkouts();\n    }\n\n    async loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n    loadWorkouts = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait workoutStore.load({ query: { team: currentTeam } });\n\t}\n\n    toggleDetail = () => {\n        const { showDetail = false } = this.state;\n        this.setState({\n            showDetail: !showDetail,\n        });\n    }\n\n    componentDidMount() {\n\t\tthis.loadGarminActivities();\n\t}\n\n    render() {\n        const { showDate, showDetail = false } = this.state;\n        const { activities = [], showDate: forceShowDate, asTrack = false } = this.props;\n\t\tconst { userStore, workoutStore } = this.props.stores;\n        const { currentTeam } = workoutStore;\n        const { team } = userStore;\n\n        const selectedTeam = userStore.findTeam(currentTeam || team.id);\n\n        if (!showDetail) {\n            if (activities && activities.length > 0) {\n                return (<>\n                    <div class='col-12 mb-3'>\n                        <button type='button' class='btn btn-block btn-outline-info' onClick={this.toggleDetail}>\n                            <div class={`float-right ml-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url('./assets/garmin-connect.png');`} />\n                            <Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text> {activities.length}\n                        </button>\n                    </div>\n                </>);\n            }\n            return (<></>);\n        }\n\n        return (<>\n            <div class='col-12 mb-3'>\n                <div class='row'>\n                    {activities && activities.length > 0 && (\n                        <div\n                            class='col-12 border-top border-bottom pt-3 pb-3 my-2 bg-light'\n                        >\n                            <button type='button' class='float-right btn btn-sm btn-link' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='garmin.hide-list'>Hide list</Text>\n                            </button>\n                            <h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text> {activities.length}</h5>\n                            {activities && activities.map(activity => {\n                                const { summary = {} } = activity;\n                                const startDate = util.parseInputDate(summary.startTimeInSeconds);\n\n                                return (<>\n                                    {/* <td>{util.secToHms(activity.moving_time)}</td> */}\n                                    {/* <td>{util.secToHms(activity.elapsed_time)}</td> */}\n\n                                    {/* {\n                                        \"durationInSeconds\": 616,\n                                        \"startTimeInSeconds\": 1602065947,\n                                        \"startTimeOffsetInSeconds\": 7200,\n                                        \"activityType\": \"ROAD_BIKING\",\n                                        \"averageSpeedInMetersPerSecond\": 0.152,\n                                        \"averagePaceInMinutesPerKilometer\": 109.649124, \n                                        \"activeKilocalories\": 1, \n                                        \"deviceName\": \"edge1000\", \n                                        \"distanceInMeters\": 94.02, \n                                        \"maxPaceInMinutesPerKilometer\": 14.6455765, \n                                        \"maxSpeedInMetersPerSecond\": 1.138, \n                                        \"startingLatitudeInDegree\": 61.00674974732101, \n                                        \"startingLongitudeInDegree\": 9.975536987185478, \n                                        \"totalElevationLossInMeters\": 2\n                                    } */}\n\n                                    <div class='col-12 d-flex mb-4 position-relative'>\n                                        <div class={`text-center border rounded-circle imageRounded`} style={`background-image: url(\"./assets/garmin-connect.png\"); border-width: 3px !important;`}>\n                                            &nbsp;\n                                        </div>\n                                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                            <h5 class='my-0 mb-1' style='line-height: 1.0em;'>{summary.deviceName}</h5>\n                                            {summary.activityType}<br />\n                                            <small class='text-muted'>\n                                                {startDate && <small onClick={this.toggleDate}>\n                                                    {forceShowDate || showDate ? util.formatDate(startDate, { locale: 'no-NB' }) : util.formatDistance(startDate, new Date(), { locale: 'no-NB' })}\n                                                </small>}\n                                                <span class='text-muted'>\n                                                    <i class='fas fa-road ml-2' /> <Distance stores={this.props.stores} value={summary.distanceInMeters / 1000} />\n                                                    <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={summary.totalElevationGainInMeters} />\n                                                    <i class='fas fa-tachometer-alt ml-2' /> <Speed stores={this.props.stores} value={summary.averageSpeedInMetersPerSecond * 3.6} />\n                                                    <i class='fas fa-stopwatch ml-2' /> {util.secToHms(summary.durationInSeconds)}\n                                                </span>\n                                            </small>\n                                            <br />\n                                            <button class='btn btn-sm btn-block btn-primary' onClick={this.importGarminWorkout} data-id={activity.id}>\n                                                <i class='fas fa-file-import' /> {asTrack ? <Text id='garmin.import-track'>Import as track</Text> : <><Text id='garmin.import'>Import workout</Text> <i class='fas fa-arrow-right' /> {selectedTeam}</>} \n                                            </button>\n                                            <button class='btn btn-sm btn-link' onClick={this.ignoreGarminWorkout} data-id={activity.id}>\n                                                <i class='fas fa-trash-alt' /> <Text id='garmin.ignore'>Ignore workout</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n\n                            <button type='button' class='btn btn-block btn-primary mt-3' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='garmin.hide-list'>Hide list</Text>\n                            </button>\n                        </div>\n                    )}\n\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Garmin;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass Strava extends Component {\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    ignoreStravaWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { stravaActivityStore } = this.props.stores;\n\t\tawait stravaActivityStore.ignoreWorkout(id);\n        this.loadStravaActivities();\n    }\n\n    importStravaWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { stravaActivityStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait stravaActivityStore.importWorkout(id, currentTeam);\n        this.loadStravaActivities();\n        this.loadWorkouts();\n    }\n\n    async loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n    loadWorkouts = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait workoutStore.load({ query: { team: currentTeam } });\n\t}\n\n    toggleDetail = () => {\n        const { showDetail = false } = this.state;\n        this.setState({\n            showDetail: !showDetail,\n        });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadStravaActivities();\n\t}\n\n    render() {\n        const { showDate, showDetail = false } = this.state;\n        const { activities, showDate: forceShowDate } = this.props;\n\t\tconst { userStore, workoutStore } = this.props.stores;\n        const { currentTeam } = workoutStore;\n        const { team } = userStore;\n\n        const selectedTeam = userStore.findTeam(currentTeam || team.id);\n\n         if (!showDetail) {\n            if (activities && activities.length > 0) {\n                return (<>\n                    <div class='col-12 mb-3'>\n                        <button type='button' class='btn btn-block btn-outline-info' onClick={this.toggleDetail}>\n                            <div class={`float-right ml-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url('./assets/strava-icon.png');`} />\n                            <Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text> {activities.length}\n                        </button>\n                    </div>\n                </>);\n            }\n            return (<></>);\n        }\n\n        return (<>\n            <div class='col-12 mb-3'>\n                <div class='row'>\n                    {activities && activities.length > 0 && (\n                        <div\n                            class='col-12 border-top border-bottom pt-3 pb-3 my-2 bg-light'\n                        >\n                            <button type='button' class='float-right btn btn-sm btn-link' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='strava.hide-list'>Hide list</Text>\n                            </button>\n                            <h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text> {activities.length}</h5>\n                            {activities && activities.map(activity => {\n                                const { summary = {} } = activity;\n                                const startDate = util.parseInputDate(summary.startTimeInSeconds);\n\n                                return (<>\n                                    {/* <td>{util.secToHms(activity.moving_time)}</td> */}\n                                    {/* <td>{util.secToHms(activity.elapsed_time)}</td> */}\n\n                                    <div class='col-12 d-flex mb-4 position-relative'>\n                                        <div class={`text-center border rounded-circle imageRounded`} style={`background-image: url(\"./assets/strava-icon.png\"); border-width: 3px !important;`}>\n                                            &nbsp;\n                                        </div>\n                                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                            <h5 class='my-0 mb-1' style='line-height: 1.0em;'>{activity.name}</h5>\n                                            {activity.type}<br />\n                                            <small class='text-muted'>\n                                                {activity.start_date && <small onClick={this.toggleDate}>\n                                                    {forceShowDate || showDate ? util.formatDate(activity.start_date, { locale: 'no-NB' }) : util.formatDistance(activity.start_date, new Date(), { locale: 'no-NB' })}\n                                                </small>}\n                                                <span class='text-muted'>\n                                                    <i class='fas fa-road ml-2' /> <Distance stores={this.props.stores} value={activity.distance / 1000} />\n                                                    <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={activity.total_elevation_gain} />\n                                                    <i class='fas fa-tachometer-alt ml-2' /> <Speed stores={this.props.stores} value={activity.average_speed * 3.6} />\n                                                    <i class='fas fa-stopwatch ml-2' /> {util.secToHms(activity.elapsed_time)}\n                                                </span>\n                                            </small>\n                                            <br />\n                                            <button class='btn btn-sm btn-block btn-primary' onClick={this.importStravaWorkout} data-id={activity.id}>\n                                                <i class='fas fa-file-import' /> <Text id='strava.import'>Import workout</Text> <i class='fas fa-arrow-right' /> {selectedTeam}\n                                            </button>\n                                            <button class='btn btn-sm btn-link' onClick={this.ignoreStravaWorkout} data-id={activity.id}>\n                                                <i class='fas fa-trash-alt' /> <Text id='strava.ignore'>Ignore workout</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n\n                            <button type='button' class='btn btn-block btn-primary mt-3' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='strava.hide-list'>Hide list</Text>\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Strava;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Track from '../../components/track';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Tracks extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTracks() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { trackStore, userStore, messageStore } = this.props.stores;\n\t\tawait trackStore.load();\n\t\tawait userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadTracks();\n\t\t// this.loadStravaActivities(),\n\t\tthis.loadGarminActivities();\n\t}\n\n\trender() {\n        const { scrolledDown } = this.props;\n\t\tconst { isLoading, searchText } = this.state;\n\t\tconst { trackStore, userStore, appState, workoutStore, stravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { tracks } = trackStore;\n\t\tconst { user } = userStore;\n\t\tconst { darkmode } = appState;\n\t\tconst { currentTeam } = workoutStore;\n\n\n\t\tconst { stravaActivities = [] } = stravaActivityStore;\n\t\tconst { garminActivityDetails = [] } = garminActivityDetailsStore;\n\n\t\tconst filterBySearch = e => searchText ? new RegExp(searchText, 'i').test(e.name) : true;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top pt-2' style={`margin-top: ${scrolledDown > 0 ? 0 : SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'}; transition: all 0.3s ease-in-out;`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/tracks/' class='text-primary stretched-link'><nobr><i class='fas fa-map-marked' /> <Text id='tracks.your-tracks'>Dine runder</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/tracks/public' class='text-secondary stretched-link'><nobr><i class='fas fa-map-marked' /> <Text id='tracks.public-tracks'>Offentlige runder</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n\t\t\t\t\t\t\t<h5><Text id='tracks.all-tracks' fields={{ total: tracks.length }}>Treningsrundene dine - {tracks.length} stk</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 clearfix mb-2'>\n\t\t\t\t\t\t\t<a class='btn btn-sm btn-primary float-right'\n\t\t\t\t\t\t\t\thref='/tracks/edit/new'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='tracks.add-new'>Legg til runde</Text>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{!isLoading && tracks && tracks.length === 0 && (\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-muted'>\n\t\t\t\t\t\t\t\t<div class='text-center mb-5'>\n\t\t\t\t\t\t\t\t\t<div class='display-1'>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-map-marked' />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<Text id='tracks.no-tracks-yet'>Ingen runder er registrert ennå.</Text>\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p class='text-center'>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<Text id='tracks.no-tracks-info-1'>Du har mulighet til å laste opp GPX-filer fra rundene dine.</Text>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<Text id='tracks.no-tracks-info-2'>Det finnes mange apper som lar deg lage GPX-filer, men vi anbefaler</Text>:\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\tViewRanger for <a href='https://apps.apple.com/gb/app/viewranger-hike-ride-or-walk/id404581674'>iOS</a> and\n\t\t\t\t\t\t\t\t\t&nbsp;<a href='https://play.google.com/store/apps/details?id=com.augmentra.viewranger.android&hl=en'>Android</a>.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<Text id='tracks.howto-title'>Slik kommer du i gang</Text>:\n\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t<li><Text id='tracks.howto-1'>Trykk på knappen \"Legg til runde\" rett nedenfor.</Text></li>\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{user && user.garmin &&<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n\t\t\t\t\t\t<div class='row mt-3'>\n\t\t\t\t\t\t\t{/* {user && user.strava && <>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activities={stravaActivities} key={`strava-${currentTeam}-${stravaActivities.length}`} />\n\t\t\t\t\t\t\t</>} */}\n\t\t\t\t\t\t\t{user && user.garmin && <>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activities={garminActivityDetails} asTrack={true} key={`garmin-${currentTeam}-${garminActivityDetails.length}`} />\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n\t\t\t\t\t\t<div class='d-flex justify-content-center py-3'>\n\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t<input class='form-control form-control mr-2' type='search' placeholder={<Text id='header.search-placeholder'>Søk etter det meste...</Text>}\n\t\t\t\t\t\t\t\t\tvalue={searchText}\n\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'searchText')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Localizer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12'>\n\n\t\t\t\t\t\t{tracks && tracks.filter(filterBySearch).map(track => (\n\t\t\t\t\t\t\t<Track stores={this.props.stores} track={track} />\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tracks;\n"],"sourceRoot":""}