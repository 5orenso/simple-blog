{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/form/files.js","webpack:///./routes/workouts/edit.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Files","handleAddImage","file","updateField","object","field","id","value","files","uploadStatus","before","after","autoOpen","class","apiUrl","style","height","width","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","newWorkout","InputNew","onInput","e","target","workoutStore","stores","updateObjectKeyValue","Date","getTime","updateDuration","name","util","isUndefined","onInputDuration","parseInt","decDuration","closest","dataset","newValue","incDuration","setDateToNow","isoDate","undefined","setTimeToNow","isoTime","setRightValue","rightValueReal","type","datalist","min","max","step","title","icon","help","placeholder","rightValue","displayValue","maxValue","secToHms","checkNested","yr","toJS","instant","details","date","air_temperature","wind_speed","windDirection","wind_from_direction","cloud_area_fraction","air_pressure_at_sea_level","relative_humidity","for","list","aria-describedby","map","el","hh","Math","floor","mi","data-name","onClick","data-field","checked","rows","onKeyUp","resizeTextarea","onFocus","Input","workout","parts","split","isNaN","ss","match","handleImageErrored","image","onerror","setTimeout","src","removeImage","async","parentElement","removeMainImage","setValue","saved","elementtype","insertValue","asNumber","images","img","s3SmallLink","onError","data-id","data-value","data-type","data-elementtype","Mushers","toggleMusher","musherId","isNew","idx","indexOf","splice","push","userStore","mushers","musher","firstname","lastname","email","Teams","toggleTeam","teamId","dogStore","selectTeam","teams","removeTeam","team","addTeam","setCurrentTeam","isDefined","highlight","isPrimary","isSecondary","isArray","length","hintTeam","role","Tracks","toggleFilter","showAll","setState","toggleSearchField","showSearchField","toggleTrack","trackId","track","types","user","language","DAY_OF_WEEK","getDays","skipTimer","distanceKm","elevation","dayOfWeek","getDay","find","filterText","tracks","filter","trackFilter","RegExp","filteredTracks","linkState","format","hintTrack","Types","updateTextField","toggleType","typeId","raceStore","hasRaces","getSignupByUserEmail","lang","Intensities","intensities","intensity","hintIntensity","Equipments","toggleEquipment","equipmentId","equipments","equipment","RaceInProgress","raceInProgress","activeRace","race","WorkoutsEdit","loadAll","loadDogs","loadWorkout","loadRaceInProgress","workouts","currentTeam","createNew","load","query","skipUpdate","limit","sort","lastWorkout","fallbackTeam","dogs","dogsLeft","dogsRight","duration","rest","rating","sledWeight","lastUsedTracks","w","d","ucfirst","isLoading","deceased","addData","insertWorkout","response","insert","status","PubSub","publish","topics","STATUS_MESSAGE","message","error","resetDog","getInfo","route","data","fieldType","updateFieldValue","datatype","localObjectValue","Array","parseFloat","doUpdateField","clearTimeout","updateTimer","totalDistance","maxSpeed","avgSpeed","ascent","decent","startLatlng","endLatlng","gpx","gpxInfo","updateObject","roundTo","speedmax","speedAvg","save","dogFilter","back","history","goBack","getYrWeather","firstPoint","getFirstPoint","midPoint","getMidPoint","weather","getWeather","lat","lon","altitude","weatherMid","yrValue","temperature","chooseSubmenu","submenu","menu","toggleAdminDebug","showAdminDebug","updateKeyValue","saveField","appState","viewmode","isAdmin","insertStatus","currentTeamId","findTeam","raceTeams","isStationary","data-menu","public","showPositions","key","getNestedValue","isLocked","minEpoch","startTime","maxEpoch","endTime","avgMovingSpeeds","avgGpsSpeed","avgGpsMovingSpeed","calculatedTotalDistance","calculatedAscend","calculatedDescend","descent","mapId","geojson","geoJSON"],"mappings":"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","file":"15.chunk.b26b5.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport PubSub, { topics } from '../../lib/pubsub';\n// import DatePicker from '../../components/form/datePicker';\n// import TimePicker from '../../components/form/timePicker';\nimport Images from '../../components/form/images';\nimport Dogs from '../../components/dog/dogs';\nimport Map from '../../components/map';\nimport Files from '../../components/form/files';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nconst initialState = {\n    newWorkout: {},\n};\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        workoutStore.updateObjectKeyValue('newWorkout', `updated-${field}`, new Date().getTime());\n    }\n\n    updateDuration = (name, value) => {\n        const { field } = this.props;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', name, value);\n        const { newWorkout } = workoutStore;\n\n        if (util.isUndefined(newWorkout[`${field}-hours`])) {\n            // const hh = Math.floor(newWorkout[field] / 3600);\n            const hh = 0;\n            workoutStore.updateObjectKeyValue('newWorkout', `${field}-hours`, hh);\n        }\n        if (util.isUndefined(newWorkout[`${field}-minutes`])) {\n            // const mi = Math.floor(newWorkout[field] % 3600 / 60);\n            const mi = 0;\n            workoutStore.updateObjectKeyValue('newWorkout', `${field}-minutes`, mi);\n        }\n        // console.log({ newWorkout, field, name, value });\n        // console.log({ newWorkout, field, name, value });\n        const hours = newWorkout[`${field}-hours`] || 0;\n        const minutes = newWorkout[`${field}-minutes`] || 0;\n        const combinedValue = (hours * 3600) + (minutes * 60);\n        workoutStore.updateObjectKeyValue('newWorkout', field, combinedValue);\n        workoutStore.updateObjectKeyValue('newWorkout', `updated-${field}`, new Date().getTime());\n    }\n\n    onInputDuration = (e) => {\n        const value = parseInt(e.target.value, 10);\n        const name = e.target.name;\n        this.updateDuration(name, value);\n    }\n\n    decDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        const currentValue = newWorkout[name] || 0\n        const newValue = currentValue - 1;\n        const value = newValue < 0 ? 0 : newValue;\n        // console.log({ name, currentValue, newValue, value });\n        this.updateDuration(name, value);\n    }\n\n    incDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        const currentValue = newWorkout[name] || 0\n        const newValue = currentValue + 1;\n        const value = newValue < 0 ? 0 : newValue;\n        this.updateDuration(name, value);\n    }\n\n    // selectDate = (value) => {\n    //     const { field } = this.props;\n    //     const { workoutStore } = this.props.stores;\n    //     workoutStore.updateObjectKeyValue('newWorkout', field, util.isoDate(value));\n    // }\n\n    setDateToNow = () => {\n        const { field } = this.props;\n        const value = util.isoDate(undefined, false, false, true);\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n    }\n\n    setTimeToNow = () => {\n        const { field } = this.props;\n        const value = util.isoTime();\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n    }\n\n    setRightValue = () => {\n        const { field, rightValueReal } = this.props;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, rightValueReal);\n    }\n\n    render() {\n        const { type, datalist = [], min, max, step, elementtype, field, title, icon, help, placeholder, rightValue, updateField } = this.props;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        let maxValue = max;\n        if (type === 'date') {\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        let displayValue;\n        if (field === 'duration' || field === 'rest') {\n            displayValue = util.secToHms(newWorkout[field], true);\n        }\n        if (field === 'weather' && util.checkNested(newWorkout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(newWorkout.yr[0].instant.details);\n            const yrDate = util.isoDate(newWorkout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(newWorkout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n            }                        \n        }\n        if (field === 'temperature' && util.checkNested(newWorkout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(newWorkout.yr[0].instant.details);\n            const yrDate = util.isoDate(newWorkout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(newWorkout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C`;\n            }                        \n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        onInput={this.onInput}\n                        value={newWorkout[field]}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n        if (type === 'duration') {\n            const hh = Math.floor(newWorkout[field] / 3600);\n            const mi = Math.floor(newWorkout[field] % 3600 / 60);\n            // const ss = Math.floor(newWorkout[field] % 3600 % 60);\n\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <span class='float-right'>\n                        <strong>{displayValue}</strong>\n                    </span>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='form-row'>\n                        <div class='input-group col-5 offset-1 col-xl-3 offset-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-hours`}\n                                value={hh}\n                                type='number'\n                                min='0'\n                                max='24'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        <div class='input-group col-5 col-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-minutes`}\n                                value={mi}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                    </div>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={newWorkout[field] === 1 ? 0 : 1}\n                            data-field={field}\n                            onInput={this.onInput}\n                            checked={newWorkout[field] == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n\n        if (type === 'textarea') {\n            return (<> \n                <div class='form-group mb-1 pb-1 border-bottom'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea\n                        class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        min={min}\n                        max={maxValue}\n                        step={step}\n                        rows={5}\n                        onInput={this.onInput}\n                        value={newWorkout[field]}\n                        placeholder={placeholder}\n                        onKeyUp={mu.resizeTextarea}\n                        onFocus={mu.resizeTextarea}\n                    />\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            </>);\n        }\n\n        return (\n            <div class='form-group mb-1 pb-1 border-bottom'>\n                {type === 'date' && <span class='float-right text-muted font-weight-lighter' onClick={this.setDateToNow}>I dag <i class='far fa-check-circle' /></span>}\n                {type === 'time' && <span class='float-right text-muted font-weight-lighter' onClick={this.setTimeToNow}>Nå <i class='far fa-check-circle' /></span>}\n                {rightValue && <span class='float-right text-muted font-weight-lighter' onClick={this.setRightValue}>{rightValue}</span>}\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                {displayValue && <span class='float-right'>\n                    <strong>{displayValue}</strong>\n                </span>}\n                <input\n                    type={type}\n                    class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''}`}\n                    id={`${field}Input`}\n                    aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    onInput={this.onInput}\n                    value={newWorkout[field]}\n                    placeholder={placeholder}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass Input extends Component {\n    updateDuration = (name, value) => {\n        const { field, updateField, workout } = this.props;\n\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            if (isNaN(value)) {\n                hh = 0;\n            } else {\n                hh = value;\n            }\n        }\n        if (name.match(/-minutes/)) {\n            if (isNaN(value)) {\n                mi = 0;\n            } else {\n                mi = value;\n            }\n        }\n        if (name.match(/-seconds/)) {\n            if (isNaN(value)) {\n                ss = 0;\n            } else {\n                ss = value;\n            }\n        }\n        const combinedValue = (hh * 3600) + (mi * 60) + ss;\n        updateField({ id: workout.id, field, value: combinedValue });\n\n    }\n\n    onInputDuration = (e) => {\n        const value = parseInt(e.target.value, 10);\n        const name = e.target.name;\n        this.updateDuration(name, value);\n    }\n\n    decDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { field, workout } = this.props;\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            const value = hh - 1 < 0 ? 0 : hh - 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-minutes/)) {\n            const value = mi - 1 < 0 ? 0 : mi - 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-seconds/)) {\n            const value = ss - 1 < 0 ? 0 : ss - 1;\n            this.updateDuration(name, value);\n        }\n    }\n\n    incDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { field, workout } = this.props;\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            const value = hh + 1 < 0 ? 0 : hh + 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-minutes/)) {\n            const value = mi + 1 < 0 ? 0 : mi + 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-seconds/)) {\n            const value = ss + 1 < 0 ? 0 : ss + 1;\n            this.updateDuration(name, value);\n        }\n\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { workoutStore } = this.props.stores;\n        const { workout } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        workoutStore.removeImage({\n            id: workout.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { workout, field, updateField } = this.props;\n        updateField({ id: workout.id, field, value: {} });\n    }\n\n    setDateToNow = () => {\n        const { field, updateField, workout } = this.props;\n        const value = util.isoDate(undefined, false, false, true);\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        updateField({ id: workout.id, field, value });\n    }\n\n    setTimeToNow = () => {\n        const { field, updateField, workout } = this.props;\n        const value = util.isoTime();\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        updateField({ id: workout.id, field, value });\n    }\n\n    setValue = (e) => {\n        const value = e.target.parentElement.dataset.value || e.target.dataset.value;\n        if (value) {\n            const { field, updateField, workout } = this.props;\n            // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n            updateField({ id: workout.id, field, value });\n        }\n    }\n\n    setRightValue = () => {\n        const { field, updateField, workout, rightValueReal } = this.props;\n        updateField({ id: workout.id, field, value: rightValueReal });\n    }\n\n    render() {\n        const { saved, workout, type, datalist = [], min, max, step, elementtype, field, title, icon, help, onInput, updateField, rightValue } = this.props;\n        let value = toJS(workout[field]);\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(workout[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        // if (type === 'time') {\n        //     if (value) {\n        //         value = util.isoTime(workout[field]);\n        //     }\n        // }\n        let displayValue;\n        let insertValue;\n        if (field === 'duration' || field === 'rest') {\n            displayValue = util.secToHms(value, true);\n        }\n        if (field === 'weather' && util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(workout.yr[0].instant.details);\n            const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(workout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                insertValue = displayValue;\n            }                        \n        }\n        if (field === 'temperature' && util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(workout.yr[0].instant.details);\n            const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(workout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C`;\n                insertValue = util.asNumber(yr.air_temperature);\n            }                        \n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={workout} field={field} updateField={updateField} />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {/* {workout.image && workout.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={workout.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={workout.image.name}\n                                ><i class='fas fa-trash' /> Remove</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>} */}\n                            {workout.images && workout.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Remove</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={workout} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'>Endringene er lagret</div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={workout.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'duration') {\n            const hh = Math.floor(workout[field] / 3600);\n            const mi = Math.floor(workout[field] % 3600 / 60);\n            const ss = Math.floor(workout[field] % 3600 % 60);\n\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <span class='float-right'>\n                        <strong onClick={this.setValue} data-value={insertValue}>{displayValue}</strong>\n                    </span>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='form-row'>\n                        <div class='input-group col-5 offset-1 col-xl-3 offset-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-hours`}\n                                value={hh}\n                                type='number'\n                                min='0'\n                                max='24'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        <div class='input-group col-5 col-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-minutes`}\n                                value={mi}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        {/* <div class='form-group col-3'>\n                            <input class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-seconds`}\n                                value={ss}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                        </div> */}\n                    </div>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={value === 1 ? 0 : 1}\n                            data-id={workout.id}\n                            data-field={field}\n                            onInput={onInput}\n                            checked={value == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        if (type === 'textarea') {\n            return (<> \n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea\n                        class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''} ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        min={min}\n                        max={maxValue}\n                        step={step}\n                        rows={5}\n                        value={value}\n                        data-id={workout.id}\n                        data-field={field}\n                        data-type={type}\n                        data-elementtype={elementtype}\n                        onInput={onInput}\n                        onKeyUp={mu.resizeTextarea}\n                        onFocus={mu.resizeTextarea}\n                    />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            </>);\n        }\n\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                {type === 'date' && <span class='float-right text-muted font-weight-lighter' onClick={this.setDateToNow}>I dag <i class='far fa-check-circle' /></span>}\n                {type === 'time' && <span class='float-right text-muted font-weight-lighter' onClick={this.setTimeToNow}>Nå <i class='far fa-check-circle' /></span>}\n                {rightValue && <span class='float-right text-muted font-weight-lighter' onClick={this.setRightValue}>{rightValue}</span>}\n\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                {displayValue && <span class='float-right'>\n                    <strong onClick={this.setValue} data-value={insertValue}>{displayValue}</strong>\n                </span>}\n                <input type={type}\n                    class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''} ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}\n                    id={`${field}Input`}\n                    aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={workout.id}\n                    data-field={field}\n                    data-type={type}\n                    data-elementtype={elementtype}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass Mushers extends Component {\n    toggleMusher(musherId) {\n        const { workout, type, elementtype, field, updateField, isNew } = this.props;\n        const value = toJS(workout[field]) || [];\n        const idx = value.indexOf(musherId);\n        if (idx > -1) {\n            value.splice(idx, 1);\n        } else {\n            value.push(musherId);\n        }\n        updateField({ id: workout.id, field, value, type, elementtype, isNew} );\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { mushers } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]) || [];\n        // console.log('Dogs.render: type, elementType, value:', type, elementtype, value);\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-column pb-2 px-1'\n                            >\n                                {mushers && mushers.map((musher, idx) => (\n                                    <div class='col mb-2 px-1'\n                                        ref={value.indexOf(musher.id) > -1 ? c => this.container = c : null}\n                                    >\n                                        <button\n                                            class={`btn btn-block \n                                                rounded-lg\n                                                btn${value.indexOf(musher.id) > -1 ? '' : '-outline'}-success\n                                                text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleMusher(musher.id)}\n                                        >\n                                            <i class='fas fa-user mr-2' />\n                                            {musher.firstname ? <>\n                                                {musher.firstname} {musher.lastname}\n                                            </> : <>\n                                                {musher.email}\n                                            </>}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleTeam(teamId) {\n        const { dogStore, workoutStore } = this.props.stores;\n        const { workout, type, field, updateField, isNew, selectTeam } = this.props;\n        let value = toJS(workout[field]);\n\n        if (value === teamId) {\n            value = null;\n        } else {\n            value = teamId;\n        }\n        if (value === null) {\n            updateField({ id: workout.id, field, value, type, isNew });\n        } else if (workout.teams && workout.teams.indexOf(value) > -1) {\n            workoutStore.removeTeam({ id: workout.id, team: value });\n        } else if (workout.team) {\n            workoutStore.addTeam({ id: workout.id, team: value });\n        } else {\n            dogStore.setCurrentTeam(value);\n\t\t\tworkoutStore.setCurrentTeam(value);\n            updateField({ id: workout.id, field, value, type, isNew });\n            if (util.isDefined(selectTeam)) {\n                selectTeam(teamId);\n            }\n        }        \n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]) || [];\n        const { highlight } = this.props;\n        // console.log('Dogs.render: type, elementType, value:', type, elementtype, value);\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = workout && util.isArray(workout.teams) && workout.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block \n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleTeam(team.id)}\n                                            >\n                                                {workout.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n                                                \n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n                                                    </>}\n                                                </>}\n                                                \n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Tracks extends Component {\n    toggleTrack(trackId, track) {\n        const { showAll } = this.state;\n        const { workout = {}, type, field, updateField, isNew } = this.props;\n        const { userStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n\n        const DAY_OF_WEEK = mu.getDays(language);\n\n        let value = toJS(workout[field]);\n        if (value === trackId) {\n            value = null;\n        } else {\n            value = trackId;\n        }\n        const skipTimer = true;\n        updateField({ id: workout.id, field, value, type, isNew, skipTimer });\n        if (!workout.distanceKm) {\n            updateField({ id: workout.id, field: 'distanceKm', value: track.distanceKm, type: 'number', isNew, skipTimer });\n        }\n        if (!workout.elevation) {\n            updateField({ id: workout.id, field: 'elevation', value: track.elevation, type: 'number', isNew, skipTimer });\n        }\n        if (!workout.name) {\n            const date = workout.date ? new Date(workout.date) : new Date();\n            const dayOfWeek = DAY_OF_WEEK[date.getDay()];\n            const type = types.find(e => e.id === workout.type);\n            updateField({\n                id: workout.id,\n                field: 'name',\n                value: `${track.name}: ${dayOfWeek}${type ? ` ${type.name}` : 'stur'}`,\n                type: 'string',\n                isNew,\n                skipTimer,\n            });\n        }\n        this.setState({\n            filterText: '',\n        });\n        if (showAll) {            \n            this.toggleFilter();\n        }\n    }\n\n    toggleFilter = () => {\n        const { showAll } = this.state;\n        this.setState({\n            showAll: showAll ? 0 : 1,\n        });\n    }\n\n    toggleSearchField = () => {\n        const { showSearchField } = this.state;\n        this.setState({\n            showSearchField: showSearchField ? null : 1,\n        });\n    }\n\n    render() {\n        const { showAll, filterText, showSearchField } = this.state;\n        const { userStore } = this.props.stores;\n        const { tracks } = userStore;\n        const { saved, workout, field, title, icon, help, filter = () => true } = this.props;\n        const value = toJS(workout[field]);\n        let trackFilter = showAll ? () => true : filter;\n        if (filterText) {\n            trackFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || workout.track === e.id;\n        }\n        const filteredTracks = tracks.filter(trackFilter);\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <span class='float-right' onClick={this.toggleSearchField}><i class='fas fa-search' /></span>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    {showSearchField && <div class='row'>\n                        <div class='col-12'>\n                            <input class='form-control form-control-sm' type='text' placeholder='Søk etter runder' value={filterText} onInput={linkState(this, 'filterText')} />\n                        </div>\n                    </div>}\n                    <div class='row'>\n                        {filteredTracks && filteredTracks.map(track => (\n                            <div class='col-6 col-sm-6 col-md-6 col-lg-6 mb-2'>\n                                <div class={`border position-relative rounded p-2 pt-3 pb-1 ${value === track.id ? 'bg-success' : ''}`}\n                                    onClick={() => this.toggleTrack(track.id, track)}\n                                    style='line-height: 0.9em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small class='float-right position-absolute' style='top: 0; right: 5px;'>\n                                        <small>\n                                            <i class='fas fa-road' /> {util.format(track.distanceKm, 1)} km\n                                            <i class='fas fa-mountain ml-2' /> {util.format(track.elevation, 0)} m\n                                        </small>\n                                    </small>\n                                    {/* <div style='overflow: hidden; white-space: nowrap;'> */}\n                                    <div style='overflow: hidden;'>\n                                        {workout.hintTrack === track.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                        <small>\n                                            <i class='fas fa-map-marked mr-2' />\n                                            {track.name}\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div class='row'>\n                        <div class='col-12 text-right'>\n                            {showAll ?\n                                <button class='btn btn-sm btn-link' onClick={this.toggleFilter}><Text id='workouts.show-last-used-tracks'>Vis kun de sist brukte rundene</Text></button> :\n                                <button class='btn btn-sm btn-link' onClick={this.toggleFilter}><Text id='workouts.show-all-tracks'>Vis alle rundene</Text></button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Types extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    updateTextField = (e) => {\n        const { type, updateField, isNew } = this.props;\n        const { id, field } = e.target.dataset;\n        const value = e.target.value;\n        updateField({ id: parseInt(id, 10), field, value, type, isNew });\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore, raceStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help, isNew } = this.props;\n        const value = toJS(workout[field]);\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const hasRaces = raceInProgress.length > 0;\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {types && types.map((type, idx) => (\n                                    <div class='col mb-0 px-0'\n                                        ref={value === type.id ? c => this.container = c : null}\n                                    >\n                                        <button\n                                            class={`btn btn-block \n        \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === types.length ? 'rounded-pill-right': '')}                                    \n                                                btn${value === type.id ? '' : '-outline'}-success\n                                                text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleType(type.id)}\n                                        >\n                                            {type.icon && <i class={type.icon} />} {language && type.lang && type.lang[language] ? type.lang[language] : type.name}\n\n                                            {hasRaces && type.id === 2 && <>\n                                                {value === type.id ? <>\n                                                    <i class='fas fa-check float-right' />\n                                                </> : <>\n                                                    <div class='spinner-grow text-warning float-right' role='status'>\n                                                        <span class='sr-only'>Loading...</span>\n                                                    </div>\n                                                    <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                </>}\n                                            </>}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    {value === 4 && (\n                        <div class='row'>\n                            {isNew ? \n                                <div class='col-12'>\n                                    <InputNew stores={this.props.stores} field='typeTitle'\n                                        title={<Text id='workouts.other'>Annet</Text>}\n                                        help={<Text id='workouts.other-help'>Hva slags type tur/aktivitet var dette?</Text>} />\n                                </div>\n                                : <div class='col-12'>\n                                    <Input saved={saved} workout={workout} field='typeTitle'\n                                        title={<Text id='workouts.other'>Annet</Text>}\n                                        help={<Text id='workouts.other-help'>Hva slags type tur/aktivitet var dette?</Text>}\n                                        onInput={this.updateTextField} />\n                                </div>}\n                        </div>\n                    )}\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Intensities extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { intensities } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]);\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {intensities && intensities.map(intensity => (\n                            <div class='col-12 mb-2'>\n                                <button\n                                    class={`btn btn-block btn${value === intensity.id ? '' : '-outline'}-${intensity.class || 'success'} text-nowrap overflow-hidden`}\n                                    style='text-overflow: ellipsis;'\n                                    onClick={() => this.toggleType(intensity.id)}\n                                >\n                                    {workout.hintIntensity === intensity.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                    <span style='font-size: 1.5em;'>{intensity.icon || ''} {intensity.name}</span>\n                                    {intensity.help && <>\n                                        <br />\n                                        <small>{intensity.help}</small>\n                                    </>}\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass Equipments extends Component {\n    toggleEquipment(equipmentId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === equipmentId) {\n            value = null;\n        } else {\n            value = equipmentId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { equipments, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]);\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-column'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {equipments && equipments.map(equipment => (\n                                    <div class='col px-1 mb-1'>\n                                        <button\n                                            class={`btn btn-block btn${value === equipment.id ? '' : '-outline'}-success text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleEquipment(equipment.id)}\n                                        >\n                                            {equipment.icon && <i class={equipment.icon} />} {language && equipment.lang && equipment.lang[language] ? equipment.lang[language] : equipment.name}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass RaceInProgress extends Component {\n    // loadAll = async () => {\n    //     const { raceStore } = this.props.stores;\n    //     raceStore.loadRaceInProgress();\n    // }\n\n\t// componentDidMount() {\n    //     this.loadAll();\n    // }\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n\n        if (raceInProgress && raceInProgress.length > 0) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                    <div class='alert alert-warning'>\n                        <h5><Text id='races.race-in-progress'>Løp pågår</Text></h5>\n                        <ul>\n                            {raceInProgress.map(activeRace => <li>\n                                {activeRace.race.title}\n                            </li>)}\n                        </ul>\n                        <i class='fas fa-exclamation-triangle' /> <Text id='races.choose-correct-team-and-type'>Velg riktig team og type for løpet.</Text>\n                    </div>\n                </div>\n            );\n        }\n        return '';\n    }\n}\n\n@observer\nclass WorkoutsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    loadAll = async () => {\n        await this.loadDogs();\n        await this.loadWorkout();\n\n        const { raceStore } = this.props.stores;\n        raceStore.loadRaceInProgress();\n    }\n\n    loadWorkout = async (team) => {\n\t\tconst { workoutStore, userStore, dogStore } = this.props.stores;\n        const { user } = userStore;\n        const { language } = user;\n        const DAY_OF_WEEK = mu.getDays(language);\n\n        let { workouts = [], newWorkout } = workoutStore;\n        const { currentTeam } = workoutStore;\n        if (this.props.workout === 'new') {\n            this.setState({ createNew: true });\n            workouts = await workoutStore.load({ query: { team: (team || currentTeam) }, skipUpdate: 1, limit: 5, sort: '-createdDate' });\n            let lastWorkout = workouts[0];\n            const fallbackTeam = currentTeam || user.team;\n            if (lastWorkout) {\n                // console.log({ lastWorkout, fallbackTeam, currentTeam });\n                if (!newWorkout.team) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'team', fallbackTeam);\n                }\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogs', lastWorkout.dogs || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', lastWorkout.dogsLeft || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', lastWorkout.dogsRight || []);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', []);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'mushers', lastWorkout.mushers);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'temperature', lastWorkout.temperature || 5);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'name', lastWorkout.name);\n                workoutStore.updateObjectKeyValue('newWorkout', 'type', lastWorkout.type);\n                workoutStore.updateObjectKeyValue('newWorkout', 'equipment', lastWorkout.equipment);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration', lastWorkout.duration);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration-hours', Math.floor(lastWorkout.duration / 3600));\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration-minutes', Math.floor(lastWorkout.duration % 3600 / 60));\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest', lastWorkout.rest || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest-hours', Math.floor(lastWorkout.rest / 3600) || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest-minutes', Math.floor(lastWorkout.rest % 3600 / 60) || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rating', lastWorkout.rating || 3);\n                workoutStore.updateObjectKeyValue('newWorkout', 'sledWeight', lastWorkout.sledWeight);\n\n                if (!newWorkout['updated-date']) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'date', util.isoDate(lastWorkout.date, false,  false, true));\n                }\n                if (!newWorkout['updated-time']) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'time', util.isoTime(lastWorkout.date));\n                }\n\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintTeam', lastWorkout.team);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintType', lastWorkout.type);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintTrack', lastWorkout.track);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintIntensity', lastWorkout.intensity);\n\n                const lastUsedTracks = workouts.map(w => w.track);\n                this.setState({ lastUsedTracks });\n            } else {\n                const date = new Date();\n                const dayOfWeek = DAY_OF_WEEK[date.getDay()];\n                const dogs = await dogStore.load({ query: { team: (team || currentTeam) }, skipUpdate: 1 });\n                if (!newWorkout.team) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'team', fallbackTeam);\n                }\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogs', dogs.map(d => d.id) || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'mushers', [user.id]);\n                workoutStore.updateObjectKeyValue('newWorkout', 'name', util.ucfirst(`${dayOfWeek} - Tur med hundene`));\n                // workoutStore.updateObjectKeyValue('newWorkout', 'temperature', 5);\n                workoutStore.updateObjectKeyValue('newWorkout', 'type', 1);\n                workoutStore.updateObjectKeyValue('newWorkout', 'equipment', 2);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration', 3600);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest', 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rating', 3);\n                workoutStore.updateObjectKeyValue('newWorkout', 'date', util.isoDate(undefined, false,  false, true));\n                workoutStore.updateObjectKeyValue('newWorkout', 'time', util.isoTime());\n            }\n            workoutStore.updateObjectKeyValue('newWorkout', 'temperature', -1);\n        } else {\n            workoutStore.load(this.props.workout);\n        }\n    }\n\n    loadDogs = async () => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { dogStore } = this.props.stores;\n\t\t// const { currentTeam } = dogStore;\n\t\t// await dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t\tawait dogStore.load({ query: { deceased: 0 }, addData: ['workoutSummary'] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tresetDog() {\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateKeyValue('newWorkout', {});\n\t}\n\n\tinsertWorkout = async () => {\n\t\tconst { workoutStore, userStore } = this.props.stores;\n\t\tconst { newWorkout } = workoutStore;\n\t\tconst response = await workoutStore.insert({ ...newWorkout });\n        if (response.status === 422) {\n            PubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\t\tmessage: 'Mangler tittel på treningsøkten',\n\t\t\t\ttype: 'warning',\n\t\t\t\ticon: 'fas fa-exclamation-triangle',\n\t\t\t});\n        } else if (response.status >= 500) {\n            PubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\t\tmessage: response.message || response.error,\n\t\t\t\ttype: 'danger',\n\t\t\t\ticon: 'fas fa-exclamation-triangle',\n\t\t\t});\n        } else {\n            this.resetDog();\n            userStore.getInfo();\n            route(`/workouts/${response.data.id}`);\n        }\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = async ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        const { workoutStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        const { workout } = workoutStore;\n        if (field === 'images') {\n            if (Array.isArray(workout.images) && Array.isArray(value)) {\n                localObjectValue = [...workout.images, ...value];\n            }\n        }\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n        if (isNew) {\n            workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        } else {\n            workoutStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                await this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n\n        // GPX update stuff\n        if (field === 'gpx' && workout && util.checkNested(workout, 'gpx', 'gpxInfo')) {\n            const { totalDistance, maxSpeed, avgSpeed, ascent, decent, duration, rest, startLatlng, endLatlng } = workout.gpx.gpxInfo;\n            const updateObject = {};\n            if (duration) {\n                workoutStore.updateField(id, 'duration', duration);\n                updateObject.duration = duration;\n            }\n            if (rest) {\n                workoutStore.updateField(id, 'rest', rest);\n                updateObject.rest = rest;\n            }\n            if (totalDistance) {\n                workoutStore.updateField(id, 'distanceKm', util.roundTo(totalDistance, 10));\n                updateObject.distanceKm = util.roundTo(totalDistance, 10);\n            }\n            if (maxSpeed) {\n                workoutStore.updateField(id, 'speedmax', util.roundTo(maxSpeed, 10));\n                updateObject.speedmax = util.roundTo(maxSpeed, 10);\n            }\n            if (avgSpeed) {\n                workoutStore.updateField(id, 'speedAvg', util.roundTo(avgSpeed, 10));\n                updateObject.speedAvg = util.roundTo(avgSpeed, 10);\n            }\n            if (ascent) {\n                workoutStore.updateField(id, 'elevation', ascent);\n                updateObject.elevation = ascent;\n            }\n            if (decent) {\n                workoutStore.updateField(id, 'decent', decent);\n                updateObject.decent = decent;\n            }\n            if (startLatlng) {\n                workoutStore.updateField(id, 'startLatlng', startLatlng);\n                updateObject.startLatlng = startLatlng;\n            }\n            if (endLatlng) {\n                workoutStore.updateField(id, 'endLatlng', endLatlng);\n                updateObject.endLatlng = endLatlng;\n            }\n            await workoutStore.save(updateObject, workout.id);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { workoutStore } = this.props.stores;\n        if (id && field) {\n            await workoutStore.saveField(id, field, value);\n        }\n    }\n\n    dogFilter = (e) => {\n        const { workoutStore } = this.props.stores;\n        const { workout } = workoutStore;\n        if (workout && workout.dogs) {\n            return (e.team === workout.team || workout.dogs.indexOf(e.id) > -1);\n        }\n        return false;\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n    getYrWeather = async (position) => {\n        const { createNew } = this.state;\n        const { workoutStore, userStore } = this.props.stores;\n\t\tconst { workout = {}, newWorkout } = workoutStore;\n\n        const firstPoint = mu.getFirstPoint(workout);\n        const midPoint = mu.getMidPoint(workout, 0.5);\n        // const endPoint = mu.getMidPoint(workout, 1);\n\n        const weather = await userStore.getWeather({ lat: firstPoint[0], lon: firstPoint[1], altitude: firstPoint[2] });\n        const weatherMid = await userStore.getWeather({ lat: midPoint[0], lon: midPoint[1], altitude: midPoint[2] });\n\n        if (createNew) {\n            this.updateFieldValue({ id: newWorkout.id, field: 'yr', value: weather, isNew: true, skipTimer: false });\n            this.updateFieldValue({ id: newWorkout.id, field: 'yrMid', value: weatherMid, isNew: true, skipTimer: false });\n            if (util.checkNested(newWorkout, 'yr', '0', 'instant', 'details') && !newWorkout.weather) {\n                let yrValue = '';\n                const yr = toJS(newWorkout.yr[0].instant.details);\n                // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n                yrValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                // console.log({ yrValue });\n                this.updateFieldValue({ id: newWorkout.id, field: 'weather', value: yrValue, isNew: true, skipTimer: false });\n                if (!newWorkout.temperature) {\n                    this.updateFieldValue({ id: newWorkout.id, field: 'temperature', value: yr.air_temperature, isNew: true, skipTimer: false });\n                }\n            }\n\n        } else {\n            this.updateFieldValue({ id: workout.id, field: 'yr', value: weather, isNew: false, skipTimer: false });\n            this.updateFieldValue({ id: workout.id, field: 'yrMid', value: weatherMid, isNew: false, skipTimer: false });\n            if (util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n                let yrValue = '';\n                const yr = toJS(workout.yr[0].instant.details);\n                const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n                const workoutDate = util.isoDate(workout.date, false, false, true);\n                // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n                if (yrDate === workoutDate && (!workout.weather || workout.weather === '')) {\n                    yrValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                    // console.log({ yrValue, yrDate, workoutDate });\n                    this.updateFieldValue({ id: workout.id, field: 'weather', value: yrValue, isNew: false, skipTimer: false });\n                    if (!workout.temperature) {\n                        this.updateFieldValue({ id: workout.id, field: 'temperature', value: yr.air_temperature, isNew: true, skipTimer: false });\n                    }\n                }\n            }\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n    toggleAdminDebug = () => {\n        const { showAdminDebug } = this.state;\n        this.setState({ showAdminDebug: !showAdminDebug });\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n    }\n\n\trender() {\n        const { createNew, lastUsedTracks, submenu, showAdminDebug = true } = this.state;\n\t\tconst { workoutStore, userStore, appState, raceStore } = this.props.stores;\n        const { viewmode } = appState;\n        const { isAdmin, user } = userStore;\n\t\tconst { insertStatus, saved, workout = {}, newWorkout = {}, workoutLocations, isTracking } = workoutStore;\n        const { currentTeam: currentTeamId } = workoutStore;\n        const currentTeam = userStore.findTeam(workout.team || currentTeamId, true);\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const raceTeams = raceInProgress.map(e => parseInt(e.musher.team, 10));\n\n        const { name, gpxInfo = {}, gpx = { gpxInfo: {} } } = workout;\n\n        let isStationary = false;\n        if (createNew) {\n            isStationary = [6, 8].indexOf(newWorkout.type) > -1;\n        } else {\n            isStationary = [6, 8].indexOf(workout.type) > -1;\n        }\n\n        if (createNew) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <button class='btn btn-link float-left pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}\n                    >\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                    <div class='row'>\n                        <RaceInProgress stores={this.props.stores} />\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3' style='padding-left: 35px;'>\n                            <div> \n                                <h5><Text id='workouts.add-new'>Legg til ny treningstur</Text></h5>\n                            </div>\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class='row'>\n                                <div class='w-100 overflow-hidden'>\n                                    <div\n                                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                                    >\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='info'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-info-circle' /> <Text id='workouts.info'>Info</Text></button>\n                                            {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='team'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-users' /> <Text id='workouts.team'>Team</Text></button>\n                                            {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'user' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='user'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-user' /> <Text id='workouts.user'>Musher</Text></button>\n                                            {submenu === 'user' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'images' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='images'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-images' /> <Text id='workouts.images'>Bilder</Text></button>\n                                            {submenu === 'images' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'gps' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='gps'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-map-marker-alt' /> <Text id='workouts.gps'>GPS</Text></button>\n                                            {submenu === 'gps' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'equipment' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='equipment'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-sleigh' /> <Text id='workouts.equipment'>Equipment</Text></button>\n                                            {submenu === 'equipment' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='advanced'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-cogs' /> <Text id='workouts.advanced'>advanced</Text></button>\n                                            {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {submenu === 'info' && <>\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                        <Types stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='type' icon='fas fa-running'\n                                            title={<Text id='workouts.type'>Type tur</Text>}\n                                            help={<Text id='workouts.type-help'>Type treningstur. 'trening', 'konkurranse', 'tur'.</Text>}\n                                            updateField={this.updateFieldValue} />\n                                </div>\n                            </>}\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='name' icon='fas fa-heading'\n                                    title={<Text id='workouts.title'>Tittel</Text>}\n                                    help={<Text id='workouts.title-help'>Tittel på denne turen. 'Fin høsttur i øsende regn...'</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='comment' type='textarea'\n                                    title={<Text id='workouts.comment'>Kommentar</Text>}\n                                    help={<Text id='workouts.comment-help'>Kommentar til turen. Hvordan gikk det?</Text>}\n                                />\n                            </div>\n                            {currentTeam && currentTeam.public > 0 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='private' icon='fas fa-eye' type='toggle'\n                                        title={<Text id='workouts.private'>Skjul treningsturen</Text>}\n                                        help={<Text id='workouts.private-help'>Skal denne turen være skjult for de som følger teamet ditt?</Text>}\n                                    />\n                                </div>\n                            </>}\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                    title={<Text id='workouts.date'>Dato</Text>}\n                                    help={<Text id='workouts.date-help'>Dato for turen. Format på dato er: 'YYYY-MM-DD'.</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='time' icon='fas fa-clock' type='time'\n                                    title={<Text id='workouts.time'>Klokka</Text>}\n                                    help={<Text id='workouts.time-help'>Klokkeslett for turen. Format: 'HH:MI'.</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='duration' type='duration' icon='fas fa-stopwatch'\n                                    title={<Text id='workouts.duration'>Varighet på treningen</Text>}\n                                    help={<Text id='workouts.duration-help'>Hvor lenge var du ute? (HH:MI)</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='rest' type='duration' icon='fas fa-stopwatch'\n                                    title={<Text id='workouts.rest'>Hviletid på treningen</Text>}\n                                    help={<Text id='workouts.rest-help'>Hvor lenge stod du stille? (HH:MI)</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                    <InputNew stores={this.props.stores} field='speedAvg'\n                                        rightValue={`${util.format(mu.speedAvg({\n                                            duration: newWorkout.duration,\n                                            rest: newWorkout.rest,\n                                            distanceKm: newWorkout.distanceKm,\n                                        }), 1, '.', ' ')} km/t`}\n                                        rightValueReal={mu.speedAvg({\n                                            duration: newWorkout.duration,\n                                            rest: newWorkout.rest,\n                                            distanceKm: newWorkout.distanceKm,\n                                        })}\n                                        updateField={this.updateFieldValue}\n                                        icon='fas fa-tachometer-alt'\n                                        type='number' min='0' max='100' step='0.1'\n                                        title={<Text id='workouts.avg-speed'\n                                    >Gjennomsnittsfart</Text>}\n                                        help={<Text id='workouts.avg-speed-help'>Gjennomsnittsfart når du var i bevegelse. Dersom du ikke vet dette så legger du bare inn distanse og varighet så blir dette regnet ut.</Text>} />\n                                </>}\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='row px-0'>\n                                    <div class='col-6'>\n                                        <InputNew stores={this.props.stores} field='distanceKm' icon='fas fa-road'\n                                            title={<Text id='workouts.distance'>Distanse i km</Text>}\n                                            type='number' min='0' max='300' step='1'\n                                            help={<Text id='workouts.distance-help'>Hvor lang var turen i km.</Text>}\n                                        />\n                                    </div>\n                                    <div class='col-6'>\n                                        <InputNew stores={this.props.stores} field='elevation' icon='fas fa-mountain'\n                                            title={<Text id='workouts.ascend'>Høydemeter</Text>}\n                                            type='number' min='0' max='3000' step='1'\n                                            help={<Text id='workouts.ascend-help'>Høydemeter du klatret på denne turen.</Text>}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </>}\n\n                        {submenu === 'team' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Teams stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='team' icon='fas fa-users'\n                                    title={<Text id='workouts.team'>Team</Text>}\n                                    help={<Text id='workouts.team-help'>Teamet som er på tur.</Text>}\n                                    updateField={this.updateFieldValue} selectTeam={this.loadWorkout}\n                                    highlight={raceTeams}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Dogs stores={this.props.stores} isNew={1} saved={saved} object={newWorkout} type='array' icon='fas fa-dog' elementtype='number' field='dogs'\n                                    title={<Text id='workouts.dogs'>Hunder</Text>}\n                                    help={<Text id='workouts.dogs-help'>Hvilke hunder var med på turen.</Text>}\n                                    updateField={this.updateFieldValue} filter={(e) => (e.team === newWorkout.team || (newWorkout.dogs && newWorkout.dogs.indexOf(e.id) > -1))}\n                                    showPositions={isStationary ? false : ['beta', 'advanced', 'normal'].indexOf(viewmode) > -1}\n                                    currentTeam={currentTeam}\n                                    key={`dogs-${util.getNestedValue(currentTeam, 'id')}`}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'user' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Mushers stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='array' elementtype='number' field='mushers' icon='fas fa-user'\n                                    title={<Text id='workouts.mushers'>Kjørere</Text>}\n                                    help={<Text id='workouts.mushers-help'>Hvem av kjørerne var med på turen.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>                        \n                        </>}\n\n                        {submenu === 'images' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-images' /></div>\n                                    <Text id='workouts.save-to-add-images'>Please save workout and then go into edit mode to add images.</Text>\n                                </div>                                \n                            </div>\n                        </>}\n\n                        {submenu === 'gps' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='text-center text-muted mb-3'>\n                                    <div class='display-1'><i class='fas fa-map-marker-alt' /></div>\n                                    <Text id='workouts.save-to-add-gpx'>Please save workout and then you will be able to upload a GPX-file if you like.</Text>\n                                </div> \n\n                                <Tracks stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='track' icon='fas fa-map-marked'\n                                    title={<Text id='workouts.track'>Runde</Text>}\n                                    help={<Text id='workouts.track-help'>Hvilken treningsrunde er dette.</Text>}\n                                    updateField={this.updateFieldValue} filter={(e) => (e.id === newWorkout.track || (lastUsedTracks && lastUsedTracks.indexOf(e.id) > -1))}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'equipment' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Equipments stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='equipment' icon='fas fa-sleigh'\n                                    title={<Text id='workouts.equipment'>Utstyr</Text>}\n                                    help={<Text id='workouts.equipment-help'>Utstyr som ble brukt. 'trollvogn', 'atv', 'slede'.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='sledWeight' icon='fas fa-sleigh'\n                                    title={<Text id='workouts.sledWeight'>Sledevekt</Text>}\n                                    help={<Text id='workouts.sledWeight-help'>Vekt på sleden denne turen.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'advanced' && <>\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='weather' icon='fas fa-cloud-sun-rain'\n                                        title={<Text id='workouts.weather'>Været på turen</Text>}\n                                        help={<Text id='workouts.weather-help'>Hvordan var været.</Text>}\n                                    />\n                                </div>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='temperature' icon='fas fa-temperature-low'\n                                        title={<Text id='workouts.temperature'>Temperatur</Text>}\n                                        type='number' min='-40' max='20' step='0.5'\n                                        help={<Text id='workouts.temperature-help'>Hvilken temperatur var det.</Text>}\n                                    />\n                                </div>\n                            </>}\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='rating' icon='fas fa-dice'\n                                        title={<Text id='workouts.rating'>Rating av turen</Text>}\n                                        type='number' min='0' max='6' step='1'\n                                        help={<Text id='workouts.rating-help'>Din rating av turen. 1-6</Text>}\n                                    />\n                                </div>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <Intensities stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='intensity' icon='fas fa-dumbbell'\n                                        title={<Text id='workouts.intensity'>Intensitet</Text>}\n                                        help={<Text id='workouts.intensity-help'>Hvor stor belastning var denne turen?</Text>}\n                                        updateField={this.updateFieldValue}\n                                    />\n                                </div>\n                            </>}\n                        </>}\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class={`form-group mb-1 pb-1 border-bottom`}>\n                                <button type='button' class='btn btn-block btn-primary'\n                                    onClick={this.insertWorkout}\n                                >\n                                    <Text id='workouts.add-save-new'>Lagre treningstur</Text>\n                                </button>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    {insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n\t\t\t\t\t\t<Text id='workouts.workout-saved'>Treningen er lagret.</Text>\n\t\t\t\t\t</div>}\n\n                </div>\n            );\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link float-left pl-0 fixed-top'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}\n                >\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n                    <RaceInProgress stores={this.props.stores} />\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3' style='padding-left: 35px;'>                       \n                        <div>\n                            <h5><Text id='workouts.edit-workout'>Endre trening</Text>: {name}                                \n                                {workout.isLocked === 1 && <i class='fas fa-lock text-danger ml-3' />}\n                            </h5>\n                        </div>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                        <div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='workouts.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-users' /> <Text id='workouts.team'>Team</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'user' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='user'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-user' /> <Text id='workouts.user'>Musher</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'images' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='images'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-images' /> <Text id='workouts.images'>Bilder</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'gps' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='gps'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='workouts.gps'>GPS</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'equipment' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='equipment'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-sleigh' /> <Text id='workouts.equipment'>Equipment</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='advanced'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-cogs' /> <Text id='workouts.advanced'>advanced</Text></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {submenu === 'info' && <>\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Types stores={this.props.stores} saved={saved} workout={workout} type='number' field='type' icon='fas fa-running'\n                                    title={<Text id='workouts.type'>Type tur</Text>}\n                                    help={<Text id='workouts.type-help'>Type treningstur. 'trening', 'konkurranse', 'tur'.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='name' icon='fas fa-heading'\n                                title={<Text id='workouts.title'>Tittel</Text>}\n                                help={<Text id='workouts.title-help'>Tittel på denne turen. 'Fin høsttur i øsende regn...'</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='comment' type='textarea'\n                                title={<Text id='workouts.comment'>Kommentar</Text>}\n                                help={<Text id='workouts.comment-help'>Kommentar til turen. Hvordan gikk det?</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {currentTeam && currentTeam.public > 0 && <Input stores={this.props.stores} saved={saved} workout={workout} field='private' icon='fas fa-eye' type='toggle'\n                                title={<Text id='workouts.private'>Skjul treningsturen</Text>}\n                                help={<Text id='workouts.private-help'>Skal denne turen være skjult for de som følger teamet ditt?</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input stores={this.props.stores} saved={saved} workout={workout} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                title={<Text id='workouts.date'>Dato</Text>}\n                                help={<Text id='workouts.date-help'>Dato for turen. Format på dato er: 'YYYY-MM-DD'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.minEpoch: {util.isoDate(gpxInfo.minEpoch, true, true)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.startTime > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.startTime {util.isoDate(gpx.gpxInfo.startTime, true, true)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input stores={this.props.stores} saved={saved} workout={workout} field='time' icon='fas fa-clock' type='time'\n                                title={<Text id='workouts.time'>Klokka</Text>}\n                                help={<Text id='workouts.time-help'>Klokkeslett for turen. Format: 'HH:MI'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='duration' type='duration' icon='fas fa-stopwatch'\n                                title={<Text id='workouts.duration'>Varighet på treningen</Text>}\n                                help={<Text id='workouts.duration-help'>Hvor lenge var du ute? (HH:MI)</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && gpxInfo.maxEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.maxEpoch-minEpoch: {util.secToHms(gpxInfo.maxEpoch - gpxInfo.minEpoch)} <br />\n                                </small>}\n                                {isAdmin && gpxInfo.duration > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.duration: {util.secToHms(gpxInfo.duration)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.endTime > 0 && gpx.gpxInfo.startTime > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.endTime-startTime: {util.secToHms((gpx.gpxInfo.endTime - gpx.gpxInfo.startTime) / 1000)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.duration > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.duration: {util.secToHms(gpx.gpxInfo.duration)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='rest' type='duration' icon='fas fa-stopwatch'\n                                title={<Text id='workouts.rest'>Hviletid på treningen</Text>}\n                                help={<Text id='workouts.rest-help'>Hvor lenge stod du stille? (HH:MI)</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && gpxInfo.maxEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.maxEpoch-minEpoch: {util.secToHms(gpxInfo.rest)} <br />\n                                </small>}\n                                {isAdmin && gpxInfo.rest > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.rest: {util.secToHms(gpxInfo.rest)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.rest > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.rest: {util.secToHms(gpx.gpxInfo.rest)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {!isStationary && <>\n                                {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                    <Input saved={saved} workout={workout} field='speedAvg'\n                                        rightValue={`${util.format(mu.speedAvg({\n                                            duration: workout.duration,\n                                            rest: workout.rest,\n                                            distanceKm: workout.distanceKm,\n                                        }), 1, '.', ' ')} km/t`}\n                                        rightValueReal={mu.speedAvg({\n                                            duration: workout.duration,\n                                            rest: workout.rest,\n                                            distanceKm: workout.distanceKm,\n                                        })}\n                                        updateField={this.updateFieldValue}\n                                        icon='fas fa-tachometer-alt'\n                                        title={<Text id='workouts.avg-speed'>Gjennomsnittsfart</Text>}\n                                        type='number' min='0' max='100' step='0.1'\n                                        help={<Text id='workouts.avg-speed-help'>Gjennomsnittsfart når du var i bevegelse. Dersom du ikke vet dette så legger du bare inn distanse og varighet så blir dette regnet ut.</Text>}\n                                        onInput={this.updateField}\n                                    />\n                                    {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                        {isAdmin && gpxInfo.avgMovingSpeeds > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgMovingSpeeds {util.format(gpxInfo.avgMovingSpeeds * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpxInfo.avgGpsSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgGpsSpeed {util.format(gpxInfo.avgGpsSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpxInfo.avgGpsMovingSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgGpsMovingSpeed {util.format(gpxInfo.avgGpsMovingSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpx.gpxInfo && gpx.gpxInfo.avgSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpx.gpxInfo.avgSpeed {util.format(gpx.gpxInfo.avgSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                    </div>}\n                                </>}\n                            </>}\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class='row px-0'>\n                                {!isStationary && <>\n                                    <div class='col-6'>\n                                        <Input saved={saved} workout={workout} field='distanceKm' icon='fas fa-road'\n                                            title={<Text id='workouts.distance'>Distanse i km</Text>}\n                                            type='number' min='0' max='300' step='1'\n                                            help={<Text id='workouts.distance-help'>Hvor lang var turen i km.</Text>}\n                                            onInput={this.updateField}\n                                            updateField={this.updateFieldValue}\n                                        />\n                                        {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                            {isAdmin && gpxInfo.calculatedTotalDistance > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedTotalDistance: {util.format(gpxInfo.calculatedTotalDistance, 2)} km <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.totalDistance > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.totalDistance: {util.format(gpx.gpxInfo.totalDistance, 2)} km <br />\n                                            </small>}\n                                        </div>}\n                                    </div>\n                                    <div class='col-6'>\n                                        <Input saved={saved} workout={workout} field='elevation' icon='fas fa-mountain'\n                                            title={<Text id='workouts.ascend'>Høydemeter</Text>}\n                                            type='number' min='0' max='3000' step='1'\n                                            help={<Text id='workouts.ascend-help'>Høydemeter du klatret på denne turen.</Text>}\n                                            onInput={this.updateField}\n                                            updateField={this.updateFieldValue}\n                                        />\n                                        {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                            {isAdmin && gpxInfo.calculatedAscend > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedAscend: {util.format(gpxInfo.calculatedAscend, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpxInfo.calculatedDescend > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedDescend: {util.format(gpxInfo.calculatedDescend, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.ascent > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.ascent: {util.format(gpx.gpxInfo.ascent, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.descent > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.descent: {util.format(gpx.gpxInfo.descent, 0)} m <br />\n                                            </small>}\n                                        </div>}\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Teams stores={this.props.stores} saved={saved} workout={workout} type='number' field='team' icon='fas fa-users'\n                                title={<Text id='workouts.team'>Team</Text>}\n                                help={<Text id='workouts.team-help'>Teamet som er på tur.</Text>}\n                                updateField={this.updateFieldValue}\n                                highlight={raceTeams}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Dogs stores={this.props.stores} saved={saved} object={workout} type='array' elementtype='number' field='dogs' icon='fas fa-dog'\n                                title={<Text id='workouts.dogs'>Hunder</Text>}\n                                help={<Text id='workouts.dogs-help'>Hvilke hunder var med på turen.</Text>}\n                                updateField={this.updateFieldValue}  filter={this.dogFilter}\n                                showPositions={isStationary ? false : ['beta', 'advanced', 'normal'].indexOf(viewmode) > -1}\n                                currentTeam={currentTeam}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'user' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Mushers stores={this.props.stores} saved={saved} workout={workout} type='array' elementtype='number' field='mushers' icon='fas fa-user'\n                                title={<Text id='workouts.mushers'>Kjørere</Text>}\n                                help={<Text id='workouts.mushers-help'>Hvem av kjørerne var med på turen.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'images' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='image' type='image'\n                                stores={this.props.stores}\n                                title={<Text id='workouts.photos'>Bilder</Text>}\n                                help={<Text id='workouts.photos-help'>Legg til bilde fra treningen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'gps' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {gpx && <div style='height: 300px;'>\n                                <Map stores={this.props.stores} mapId={workout.id} geojson={gpx.geoJSON} gpxInfo={gpx.gpxInfo} height={300} />\n                            </div>}\n                            <Input saved={saved} workout={workout} field='gpx' type='file'\n                                title={<Text id='workouts.gpx'>Gpx</Text>}\n                                help={<Text id='workouts.gpx-help'>Gpx til denne treningen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Tracks stores={this.props.stores} saved={saved} workout={workout} type='number' field='track' icon='fas fa-map-marked'\n                                title={<Text id='workouts.track'>Runde</Text>}\n                                help={<Text id='workouts.track-help'>Hvilken treningsrunde er dette.</Text>}\n                                updateField={this.updateFieldValue}\n                                filter={(e) => (e.id === workout.track)}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'equipment' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Equipments stores={this.props.stores} saved={saved} workout={workout} type='number' field='equipment' icon='fas fa-sleigh'\n                                title={<Text id='workouts.equipment'>Utstyr</Text>}\n                                help={<Text id='workouts.equipment-help'>Utstyr som ble brukt. 'trollvogn', 'atv', 'slede'.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='sledWeight' type='number' step='1' icon='fas fa-sleigh'\n                                title={<Text id='workouts.sledWeight'>Sledevekt</Text>}\n                                help={<Text id='workouts.sledWeight-help'>Vekt på sleden denne turen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                {!util.checkNested(workout, 'yr', '0', 'instant', 'details') && <button class='btn btn-sm float-right btn-secondary' onClick={this.getYrWeather}>\n                                    <Text id='workouts.fetch-weather'>Hent fra yr</Text>\n                                </button>}\n                                <Input saved={saved} workout={workout} field='weather' icon='fas fa-cloud-sun-rain'\n                                    title={<Text id='workouts.weather'>Været på turen</Text>}\n                                    help={<Text id='workouts.weather-help'>Hvordan var været.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Input saved={saved} workout={workout} field='temperature' icon='fas fa-temperature-low'\n                                    title={<Text id='workouts.temperature'>Temperatur</Text>}\n                                    type='number' min='-40' max='20' step='0.5' \n                                    help={<Text id='workouts.temperature-help'>Hvilken temperatur var det.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Input saved={saved} workout={workout} field='rating' type='number' min='0' max='6' step='1' icon='fas fa-dice'\n                                    title={<Text id='workouts.rating'>Rating av turen</Text>}\n                                    help={<Text id='workouts.rating-help'>Din rating av turen. 1-6</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Intensities stores={this.props.stores} saved={saved} workout={workout} type='number' field='intensity' icon='fas fa-dumbbell'\n                                    title={<Text id='workouts.intensity'>Intensitet</Text>}\n                                    help={<Text id='workouts.intensity-help'>Hvor stor belastning var denne turen?</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                    </>}\n\n\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WorkoutsEdit;\n"],"sourceRoot":""}