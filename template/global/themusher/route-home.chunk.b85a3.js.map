{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/team/publicFeedLine.js","webpack:///./components/team/publicFeed.js","webpack:///./components/dog/scroller.js","webpack:///./components/user/updateSettings.js","webpack:///./components/races/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","subMenuMarginTop","isLoading","submenu","Home","observer","props","chooseSubmenu","e","setState","target","parentElement","dataset","menu","addNavigation","viewmenu","appState","stores","setSwipeRight","setSwipeLeft","route","state","loadAll","this","userStore","getFingerprint","getInfo","getNotifications","componentDidMount","componentWillUnmount","componentWillReceiveProps","render","path","workoutStore","user","currentLocationGeocode","yrWeatherKeys","place","formatted_address","currentTeam","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","class","style","role","util","secToHms","format","href","id","yrWeather","join","data-menu","Component","showAddComment","likeWorkout","idxSuggestion","idxAd","limit","offset","hasFollowSugguestions","hasAd","sessionid","Date","getTime","TeamPublicFeedLine","toggleDate","stopPropagation","preventDefault","showDate","workoutId","response","parseInt","closest","setTimeout","status","addLikeToFeed","data","addCommentToFeed","workout","commentId","replyId","teamStore","type","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","addLikeToWorkout","toggleAddComment","inputRef","focus","shareLink","shareUrl","url","title","text","containerRef","image","feed","onTeamClick","onUserClick","onDogClick","isAdmin","language","hasShareApi","publicDogs","team","findPublicTeam","teamType","findTeamAmbition","ambition","ambitions","findTeamType","isTeamAdmin","members","some","m","s3SmallLink","images","likes","comments","hasLikedWorkout","findIndex","totalFollowers","followers","length","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","field","mapImage","push","imgs","toJS","distanceKm","views","getViews","statistics","adminData","getAdminData","name","public","uuidv4","onClick","date","formatDate","locale","hour12","hour","minute","formatDistance","dogs","track","sledWeight","temperature","formattedCounty","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","map","tag","markdown","replaceImages","markdownOpts","getMarkdownOptions","comment","elevation","duration","speedAvg","dblClick","likeRef","allDogs","buttonOnly","data-id","data-url","data-title","rel","object","c","inputRefObject","col","showAvatar","extraClass","callback","compact","dataFields","TeamPublicFeed","setLoadMore","loadTeamsPublicFeed","unsetLoadMore","insertTopRanked","publicTeamsFeed","topRankedRandomized","shuffleArray","topRankedWorkouts","i","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","idxConfirm","insertTeamSuggestions","teamid","showTeam","hideTeam","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","renderContent","obj","idx","loadPublicFeed","sort","componentWillMount","clearInterval","darkmode","back","dataValues","DogScroller","scrollImages","imageIdx","scrollLeft","clientWidth","nearestInt","Math","round","diff","abs","Number","isInteger","sortByName","a","b","dogA","find","dogB","size","onScroll","dogId","dog","onTouchstart","onTouchend","onTouchmove","filter","d","className","showName","showPosition","toggleSetting","settings","updateSetting","hideSettings","forceShow","summaryEmails","infoEmails","partnerEmails","onInput","checked","for","line","isString","match","RegExp","exec","parsedLanguageText","replace","p1","p2","s3XXLargeLink","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","loadRace","raceStore","load","query","nextProps","races","startDate","reverse","race","today","endDate","signupStartDate","signupEndDate","active","src","s3MediumLink","ingress","classes","distance","currentClass"],"mappings":"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","file":"route-home.chunk.b85a3.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport Races from '../../components/races';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport YrWeather from '../../components/yrweather/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.addNavigation();\n\t\tthis.loadAll();\n\t}\n\n\t// Swipe navigation\n\taddNavigation = (props = this.props) => {\n        const { viewmenu } = props;\n        const { appState } = this.props.stores;\n\t\tif (viewmenu === 'wall') {\n\t\t\tappState.setSwipeRight();\n\t\t\tappState.setSwipeLeft(() => {\n\t\t\t\tappState.setSwipeLeft();\n\t\t\t\troute(`/home-workout`);\n\t\t\t});\n\t\t}\n\t\tif (viewmenu === 'workout') {\n\t\t\tappState.setSwipeLeft();\n\t\t\tappState.setSwipeRight(() => {\n\t\t\t\tappState.setSwipeRight();\n\t\t\t\troute(`/`);\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setSwipeRight();\n\t\tappState.setSwipeLeft();\n\t}\n\t// /Swipe navigation\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.viewmenu !== this.props.viewmenu) {\n            // this.addNavigation(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { viewmenu, path } = this.props;\n\t\tconst { userStore, appState, workoutStore } = this.props.stores;\n\t\t// const { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode, apiServer } = appState;\n\t\tconst { isAdmin, user } = userStore;\n\t\tconst { currentLocationGeocode = {}, yrWeatherKeys = [] } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, isRunning, totalDistance, geoLocationState, bgGeo, currentSpeed, totalTime } = workoutStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\n{/* <xmp>cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams, null, 4)}</xmp>\n<xmp>geoLocationState: {JSON.stringify(geoLocationState, null, 4)}</xmp>\n<xmp>isRunning: {JSON.stringify(isRunning, null, 4)}</xmp>\n<xmp>bgGeo: {JSON.stringify(bgGeo, null, 4)}</xmp> */}\n\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class=''>\n\t\t\t\t\t{user.id && <YrWeather stores={this.props.stores} place={place} yrWeather={yrWeatherKeys.join(',')} />}\n\t\t\t\t</div>\n\n\t\t\t\t{user.id && <StoryAdd stores={this.props.stores} />}\n\n\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'wall' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tdata-menu='wall'\n\t\t\t\t\t\t\t\thref='/home-wall'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-comments' /> <Text id='home.wall'>Veggen</Text>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'workout' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tdata-menu='workout'\n\t\t\t\t\t\t\t\thref='/home-workout'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-running' />  <Text id='home.workouts'>Treninger</Text>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\thref='/home-totals'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='home.totals'>Totaler</Text>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t{viewmenu === 'wall' && <>\n\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} path={path} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'workout' && <>\n\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'totals' && <>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} />\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false, \n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { teamStore } = this.props.stores;\n        switch (type) {\n            case 'likeComment':\n                teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                break;\n            case 'likeReply':\n                teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                break;\n        \n            default:\n                if (commentId) {\n                    teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                } else {\n                    teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                }\n                break;\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { teamStore } = this.props.stores;\n        teamStore.addLikeToWorkout({ id, data });\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    render() {\n        const { feed, idx, onTeamClick = () => {}, onUserClick = () => {}, onDogClick = () => {} } = this.props;\n        const { showAddComment, showDate, likeWorkout } = this.state;\n        const { teamStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'no' } = user;\n        const { darkmode, hasShareApi } = appState;\n\n        const { publicDogs } = teamStore;\n        const team = teamStore.findPublicTeam(feed.team) || {};\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        let image;\n        if (team.image && team.image.s3SmallLink) {\n            image = team.image;\n        } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n            image = team.images[0];\n        }\n        const { likes, comments } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                    <span class='badge badge-pill badge-secondary float-right'>{teamType}</span>\n                    <h5 class='mb-1' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    <div>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {feed.public === 1 ? <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-globe-europe' />\n                            </small>\n                        </> : <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> {util.format(feed.sledWeight, 0)} kg\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> {util.format(feed.temperature, 1)}°C\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                        </small>\n\n\n                        {isAdmin && currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <br />\n                            <small class='text-muted'>\n                                Adm: <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {isAdmin && adminData && <>\n                            <br />\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='text-muted'>\n                                Adm:\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right'>{tag}</span>\n                            </>)}\n                        </>}\n\n                    </div>\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;'>\n                    <Markdown markdown={mu.replaceImages(feed.name, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feed.comment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n            </div>\n\n            <div class='row mt-1'>\n                {feed.distanceKm > 0 && <div class='col-3'>\n                    <div class='text-overflow'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {displayDistance(feed.distanceKm)}km\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='col-3'>\n                    <div class='text-overflow'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.format(feed.elevation, 0)}m\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='col-3'>\n                    <div class='text-overflow'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='col-3'>\n                    <div class='text-overflow'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.format(feed.speedAvg, 1)}km/t\n                    </div>\n                </div>}\n            </div>\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='mt-2'>\n                <LikesAndComments \n                    stores={this.props.stores} \n                    likes={likes} \n                    comments={comments} \n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n             {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport TeamConnectBoxes from './connect-boxes';\nimport TeamConnectConfirm from './connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from './fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from './publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 10,\n    offset: 0,\n    hasFollowSugguestions: false, \n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeamsPublicFeed({ props = this.props, limit, offset }) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed({ limit, offset, sort: '-createdDate' });\n\t}\n\n    setLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadTeamsPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {});\n    }\n\n    async loadAll() {\n        const { limit } = this.state;\n\t\tawait this.loadTeamsPublicFeed({ limit, offset: 0 });\n        this.insertTopRanked();\n        // this.insertAds();\n        // this.insertTeamConfirm();\n        // this.insertTeamSuggestions();\n    }\n\n    insertTopRanked = () => {\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed, topRankedWorkouts } = teamStore;\n        const topRankedRandomized = util.shuffleArray(topRankedWorkouts);\n        const feed = [...publicTeamsFeed];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            const randomPlace = mu.randomInt(0, 7);\n            if (util.isObject(topRankedRandomized[i])) {\n                feed.splice(randomPlace, 0, topRankedRandomized[i]);\n            }\n        }\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { teamStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => teamStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { teamStore } = this.props.stores;\n        teamStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n        this.setLoadMore();\n\t}\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <TeamPublicFeedLine\n                stores={this.props.stores}\n                feed={obj}\n                idx={idx}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { showTeam, showDog, handleIntersection, sessionid, dogs } = this.state;\n        const { teamStore, appState } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const { path, darkmode } = appState;\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                <TeamConnectConfirm stores={this.props.stores} />\n\n                <FastList\n                    data={publicTeamsFeed}\n                    wrapperClassNames={'row pb-4'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    dataValues={{ type: '10' }}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs, size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nfunction replaceImages(line = '', images, language = 'no') {\n    function imageReplacer(match, p1, p2, p3, offset, string) {\n        // console.log({ match, p1, p2, p3, offset, string })\n        if (util.isObject(images[p1])) {\n            return `<img src=${images[p1].s3XXLargeLink} class='img-fluid float-right' style='width: ${p2 || 40}%;' />`;\n        }\n        return '';\n    }\n\n    if (util.isString(line)) {\n\t\tlet text = line;\n        const regex = new RegExp(`<${language}>(.*?)</${language}>`, 's');\n\t\tconst match = regex.exec(text);\n\t\tif (match) {\n\t\t\tconst parsedLanguageText = match[0];\n\t\t\tif (parsedLanguageText) {\n\t\t\t\ttext = parsedLanguageText;\n\t\t\t}\n\t\t}\n        return text.replace(/\\{\\{img\\.(\\d+)\\s*(\\d*)\\}\\}/g, imageReplacer);\n    }\n    return line;\n}\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {};\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode, language = 'no' } = appState;\n\t\tconst { showNews } = this.state;\n\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <h5><Text id='races.homerun'>Homerun races</Text></h5>\n                </div>\n\n                {(races || races.length === 0) && <div class='col-12 text-center py-5'>\n                    <h5>No upcoming races!</h5>\n                    Take a look at the previous races:<br />\n                    <a href='https://homerunrace.no/' target='_blank' rel='noreferrer'>homerunrace.no</a>\n                </div>}\n\n                {races && races.sort((a, b) => a.startDate - b.startDate).reverse().map(race =>  {\n                    const today = new Date();\n                    let status = '';\n                    if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                        status = 'race';\n                    } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                        status = 'signup';\n                    } else if (today > new Date(race.endDate)) {\n                        return (<></>);\n                    }\n\n                    return (<>\n                        <div class='col-12 col-sm-12 col-md-6 col-lg-6 mb-3'>\n\n                            <div class='card position-relative'>\n                                <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                    {status === 'signup' && <>\n                                        <div class='spinner-grow text-primary' role='status' />\n                                    </>}\n                                    {status === 'race' && <>\n                                        <div class='spinner-grow text-danger' role='status' />\n                                    </>}\n                                    {status === 'done' && <>\n                                        <span><i class='fas fa-check text-success' /></span>\n                                    </>}\n                                </h5>\n                                <h5 class='card-header'>\n                                    {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                    {race.title}\n                                </h5>\n                                <div class='list-thumb d-flex align-items-center position-relative'>\n                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                        {status === 'signup' && <>\n                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                        </>}\n                                        {status === 'race' && <>\n                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                        </>}\n                                        {status === 'done' && <>\n                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                        </>}\n                                    </h5>\n                                    {(race.images && race.images[0]) ? <img src={race.images[0].s3MediumLink} class='card-img-top' /> : ''}\n                                </div>\n                                <div class='card-body'>\n                                    <p class='card-text'>\n                                        <Markdown markdown={replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\t\t\t\t\t\t\t\t\n                                    </p>\n                                    {race.classes && <>\n                                        <div class='mb-3'>\n                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                    {currentClass.title}\n                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                </span>\n                                            </>)}\t\t\t\t\t\t\t\t\t\t\t\n                                        </div>\n                                    </>}\n                                    <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'><Text id='races.read-more'>Les mer</Text></a>\n                                </div>\n                                <div class='card-footer'>\n                                    <small class='text-muted'>\n                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\t\t\t\t\t\t\n                    </>);\n                })}\n\n\n            </div>\n        );\n    }\n}\n\nexport default Races;\n"],"sourceRoot":""}