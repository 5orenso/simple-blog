{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/form/links.js","webpack:///./routes/public/race/commentAdd.js","webpack:///./components/dog/editBaseInfo.js","webpack:///./components/story/add.js","webpack:///./components/story/comments.js","webpack:///./routes/app-races/tracking.js","webpack:///./components/team/publicFeedLine.js","webpack:///./routes/app-races/notifications.js","webpack:///./components/form/achievements.js","webpack:///./components/races/liveAddResult.js","webpack:///./components/story/publicStory.js","webpack:///./components/story/storyPoll.js","webpack:///./routes/app-races/userImages.js","webpack:///./components/races/liveMusherResult.js","webpack:///./components/form/files.js","webpack:///./routes/app-races/news.js","webpack:///./routes/public/race/commentReply.js","webpack:///./routes/app-races/list.js","webpack:///./components/team/connect-boxes.js","webpack:///./routes/public/race/comments.js","webpack:///./routes/public/race/raceText.js","webpack:///./components/races/liveResults.js","webpack:///./components/ad/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/races/musherInfoHeader.js","webpack:///./routes/app-races/signup.js","webpack:///./routes/app-races/mushers.js","webpack:///./components/team/connect-confirm.js","webpack:///./routes/app-races/classes.js","webpack:///./routes/app-races/results.js","webpack:///./components/team/fastList.js","webpack:///./components/public/raceTracking.js"],"names":["initialState","ScrollIntoView","observer","props","state","container","componentDidMount","this","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Component","touchStart","e","stopPropagation","setState","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","length","imageDots","Array","fill","map","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","imgHeight","imgWidth","img","curImage","dimensions","width","height","orientation","imageRatio","class","style","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","response","callback","inputRefObject","story","storyStore","stores","comment","showAddImage","id","status","body","mu","resizeTextarea","addImage","addImages","push","value","handleImageErrored","image","target","onerror","setTimeout","Date","inputRef","userStore","user","displayNameShort","userImage","displayName","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","onClick","disabled","util","isArray","onError","removeImage","data-name","name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","initCall","Achievements","handleAdd","field","data","url","removeLink","dogStore","closest","dataset","linkId","showFiles","links","file","isoDate","createdDate","aria-describedby","linkstate","RaceAdd","commentRace","race","raceStore","Input","marginTop","marginTopBack","marginBottom","retry","parseInt","dog","parentElement","removeFile","saved","datalist","min","max","step","title","icon","help","refName","showImages","maxValue","files","formatBytes","size","data-field","rows","addToImages","list","el","Teams","toggleType","typeId","isNew","toJS","teams","indexOf","removeTeam","team","addTeam","highlight","idx","isPrimary","isSecondary","hintTeam","role","Harnesses","harnesses","language","harness","colorNonstop","lang","Status","toggleStatus","statuses","removeStatus","addStatus","dogstatuses","Position","dogPositions","DogsEdit","insertDog","insert","newDog","resetDog","route","elementtype","updateFieldValue","datatype","skipTimer","newValue","localObjectValue","achievements","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","chooseMother","dogId","motherDog","findDog","chipId","chooseFather","fatherDog","chooseSubmenu","submenu","menu","back","history","goBack","loadDog","cleanupMemoryDetail","load","addData","createNew","saveField","dogFemales","findDogsByGender","dogMales","hasBirthday","birth","daysUntilBirthday","Math","ceil","daysUntilNextBirthday","age","deceased","gender","data-menu","mother","d","father","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","pinned","public","urlText","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","imageName","findIndex","splice","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","appState","isAdmin","firstname","ucfirst","lastname","email","teamId","findTeam","darkmode","href","onChange","selected","checked","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","likeStoryComment","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","deleteCommentReplyStory","commentid","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","translate","translatedText","key","preventDefault","replyid","translateCommentReply","translateComment","displayTeam","openDrawer","openInbox","fromuser","max_comments","compact","currentUser","filteredComments","totalComments","diplayedComments","comments","slice","reverse","findPublicTeamByMembers","hasLikedComment","likes","filteredReplises","totalReplies","diplayedReplies","imgs","imageIdx","currentImage","translation","getCommentTranslations","targetLang","data-comment","uuidv4","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","fields","more","MARGIN_TOP","subMenuMarginTop","isLoading","AppRaceDetailTracking","raceid","likeWorkout","idxSuggestion","idxAd","limit","hasFollowSugguestions","hasAd","sessionid","getTime","TeamPublicFeedLine","toggleDate","showDate","workoutId","workoutStore","addLikeToFeed","addCommentToFeed","workout","holdingStore","teamStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","workoutsAddLikeToComment","workoutsAddLikeToCommentReply","workoutsAddCommentToWorkoutComment","workoutsAddCommentToWorkout","addLikeToWorkout","workoutsAddLikeToWorkout","toggleAddComment","shareLink","shareUrl","text","showWorkoutDetail","localName","console","log","translatedTextName","translatedTextComment","feed","containerRef","publicDogs","onTeamClick","onUserClick","onDogClick","hasShareApi","publicUser","findPublicTeam","findPublicUser","findTeamAmbition","ambition","ambitions","username","userLink","teamType","findTeamType","isTeamAdmin","members","some","m","getImage","priority","hasLikedWorkout","totalFollowers","followers","isYourTeam","isFollowing","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","gpxInfo","settings","hideProfile","mapImage","currentLocationGeocode","views","getViews","statistics","adminData","getAdminData","translationName","getTranslation","feedName","feedComment","date","formatDate","hour12","hour","minute","format","dogs","track","sledWeight","temperature","formattedCounty","moonIllumination","phaseIcon","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","dblClick","likeRef","allDogs","distanceKm","elevation","duration","secToHms","speedAvg","avgGpsMovingSpeed","buttonOnly","data-url","data-title","rel","data-native","showAvatar","extraClass","AppRaceDetailNotifications","subscribeNotificationTopic","notificationTopics","setNotificationTopic","description","removeAchievement","achievementId","fieldSorter","a","b","o","dir","substring","reduce","p","n","LastResults","lastResults","currentClass","selectedMusher","selectResult","res","currentCheckpoint","checkpoints","find","cp","checkpoint","requiredRestMin","direction","requiredRestMinutes","timeEqualization","timestamp","data-resultid","year","month","sortOrder","RaceLiveAddResult","addResult","classId","classid","showTimestamp","newResult","checkpointId","result","bib","message","selectedCheckpoint","getClassById","selectedClassIds","editContestant","editResult","currentResult","resultid","selectedClassId","raceClassId","resultId","editClass","updateClassesResultLocal","sortContestantsByResult","contestants","results","selectedResult","isCheckedIn","isCheckedOut","isScratched","prevCheckpoint","isCheckedInPrev","isCheckedOutPrev","isScratchedPrev","sortedContestants","sort","getPreviousCheckpoint","lastResult","startTime","deleteResult","raceClassResultDelete","doneEditResult","selectCheckpoint","toggleTimestamp","lastTimestamp","lastCheckpoint","resIn","resOut","data-classid","replace","data-direction","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","publicFeedUpdate","storyType","saveStoryField","subfield","subvalue","query","textareaRef","createRef","opts","current","data-subfield","data-subvalue","StoryTypeRegular","showStoryDetail","setSelectedImage","selectedImageIdx","getInlineComponents","components","finalBody","offline","component","storyId","params","content","StoryTypeAd","componentWillMount","asUrl","currencty","StoryTypeArticle","StoryPublicFeed","likeIds","Object","keys","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","loadStoriesPublicFeed","hashtag","shortname","reports","hasLikedStory","simple","classNames","StoryPoll","pollStory","line","toggleResult","viewResult","lines","trim","hasPolledStory","polls","totalPolls","maxPercent","forEach","percent","md5","voteDays","days","finishDate","addDays","isExpired","hasImageRegexp","RegExp","hasPolledLine","aria-valuenow","aria-valuemin","aria-valuemax","extended","test","data-line","AppRaceDetailUserImages","addRaceUserImage","addUserImage","newUserImage","newRaceUserImage","updateUserImageUpload","removeRaceUserImage","removeUserImage","userImageId","editRaceUserImage","raceUserImageId","editUserImage","element","scrollHeight","tags","RaceLiveMusherResult","onClickNav","lastResOut","selectedMusherIdx","getTeamById","totalDistance","totalTime","totalMovingTime","totalInCpTime","lastEstTimeOut","lastAvgSpeed","nextBib","prevBib","contestant","rank","now","floor","resScratched","timeInCp","isStartLine","deltaSec","movingTime","hasBeenInCp","avgSpeed","distanceFromPrev","percentRest","reqTotalRestInSec","estTimeOutClass","totalRestClass","estTimeOut","estRest","restInCpSoFar","addDeltaSec","day","isFinishLine","estTimeIn","movingTimeSoFar","estTimeToNext","estTimeToCpMinutes","estRestMinutes","Files","handleAddImage","uploadStatus","apiUrl","AppRaceDetailNews","addRaceArticle","addArticle","newArticle","newRaceArticle","editRaceArticle","raceArticleId","editArticle","removeRaceArticle","removeArticle","articleId","updateArticleUpload","RaceCommentReply","commentReplyRace","MARGIN_TOP_BACK","MARGIN_BOTTOM","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","showAdminSendMessage","subject","AppRaceDetailSignup","scrollRaces","raceIdx","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","loadRace","races","today","signupStartDate","signupEndDate","liveRace","active","ingress","classes","distance","requestSent","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","loadTeams","loadPublic","notfollowing","array","publicTeamsToFollow","place","RaceComments","likeRaceComment","likeRaceCommentReply","deleteCommentRace","deleteCommentReplyRace","editCommentRace","editCommentReplyRace","finalText","regex","Checkpoints","thClass","thStyle","selectedCheckpointId","widthCp","onClickCheckpoint","dotColor","cpIdx","Contestants","onClickMusher","tdClass","tdStyle","progressStyle","progressbarStyle","finalContestants","co","coIdx","hasLeftCpPrev","bibIdxOutPrev","estTimeToCpMinutesPrev","hasScratchedPrev","data-bib","isoTime","percentInCp","checkpointResults","hasLeftCp","hasArrivedCp","hasScratched","bibIdxIn","bibIdxOut","nowEpoch","prevCpOutEpoch","timeUsedOnStage","percentDone","data-prevtimestamp","data-timeUsedOnStage","data-estTimeToCpMinutesPrev","data-nowEpoch","data-prevCpOutEpoch","cpId","output","colspan","getRankingColor","flag","RaceLiveResults","reloadLastEpoch","sortOrderResults","tableClass","Ad","withText","logClick","ads","adStore","apiServer","getApiServer","loadAd","page","section","path","currentTeam","postalcode","setTime","time","match","ad","native","idxConfirm","dataFields","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","publicFeed","topRankedRandomized","shuffleArray","topRankedStories","startPosition","parseInputDate","endPosition","randomPlace","randomInt","isObject","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","teamid","showTeam","hideTeam","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","componentWillUnmount","hasNewStories","MusherInfoHeader","toggleAdminInfo","showAdminInfo","toggleInfo","showInfo","currentDog","totalTrackLength","onMarkerClick","children","wp","findWaypointByBib","musher","getMusherByBibId","getMusherByBibEmail","totals","getClassByBib","getTotalsByTeamId","fallback","color","totalDistanceOnTrack","findNearestMushers","inFront","behind","headerImage","imageHeader","s3XXLargeLink","topImage1","teamImages","sportsClub","data-submenu","findHarness","JSON","stringify","removeMainImage","DogLine","vaccineLogStatuses","vac","inKarens","vaccineAgens","durationEnd","karensDaysLeft","signupToRace","signup","addContestant","newContestant","cellphone","facebook","instagram","updateSignup","editSignup","contestantid","contestantId","localUpdateSignup","clearSignupValue","toggleDrawer","showDrawer","findDogsByTeam","signupClass","getRaceClassById","chosenDogChipIds","getAlphabet","letter","byNotChosen","signuppayment","paidSignupfee","signupfee","data-contestantid","rules","termsAndAgreement","declaration","declarationDate","chosenDog","onCloseClick","byBib","aHas","AppRaceDetailMushers","toggleDisplayDetails","editUserDetails","adminToggleEditUser","toggleEditUserDetails","adminStore","getMusherById","getUserByEmail","veterinaryToggleEditUser","toggleVeterinaryUserDetails","toggleAdminSendMessage","toggleAdminSendInboxMessage","showAdminSendInboxMessage","toggleAdminImport","showAdminImport","adminSignupEdit","adminSignupSetValue","sendEmail","raceId","to","raceclassid","emailResponse","resetEmail","sendInboxMessage","inboxMessage","inboxMessageResponse","resetInboxMessage","parseInput","parseInputTimer","doParseInput","String","headers","jsonData","firstLine","values","jsonObject","v","val","toLowerCase","l","addMultipleContestants","filterByClass","toggleSelectedClassId","clearSearchForBib","searchForBib","savePreCheck","vetData","dogData","journalData","dogJournals","dogJournalStore","chipid","checkType","getNestedValue","preCheck","journal","veterinary","displayDetails","raceCheck","isVeterinary","veterinaryUserDetails","filterByBib","selectedUser","selectedUserTeams","scope","hasVaccines","hasMandatoryCheck","mandatoryCheck","raceStatus","raceComment","gpxResultsApproved","alt","asFacebookLink","asInstagramLink","price1","priceSent","price2","price3","dogVaccines","vaccines","vaccineName","dogJournal","veterinaryFirstname","veterinaryLastname","diagnoseId","heartRate","weight","bodyConditionScore","generalFindings","data-chipid","data-shortname","shortName","startOrder","data-value","address","postalplace","countryCode","birthdate","emails","dangerouslySetInnerHTML","__html","$str","data-to","data-raceclassid","data-class","oninput","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","hasFollowRequests","reqUser","isDeleted","isConfirmed","publicTeam","data-user","data-follow","AppRaceDetailClasses","contentIsNotLoaded","reloadInSec","reloadIsActive","ReloadTimer","initComponent","tickReloadTimeer","tick","reloadPercent","normalizeBetween","AppRaceDetailResults","loadLiveRaceResults","classInfo","teamIds","focusOnMushers","bibs","historySteps","historyPointIndex","replayHistory","timerRunning","showDrawerReplay","getRaceTrackerData","raceTrackerRace","getRaceTrackerActiveTeams","loadRaceResults","loadWorkoutSummary","getWorkoutSummaryActiveTeams","reload","RELOAD_INTERVAL_IN_SEC","lockAllWorkoutsInRace","lockMessage","allTeamIds","err","filterByBibs","toggleReplayHistory","cleanupMemoryClass","flat","selectedMusherBib","showDrawerCheckpoint","showDrawerMusher","toggleDrawerMusher","selectMusher","closeDrawerMusher","toggleDrawerCheckpoint","closeDrawerCheckpoint","allClassIds","loadTimes","getAllClassesSortedBy","setSelectedClassId","currentEmail","lastAllowedChangeDate","setHours","getHours","isLiveRace","raceAdmins","isRaceAdmin","getPillClass","resultsUrl","resultsText","resultDanger","resultWarning","resultSuccess","totalMushers","totalFinished","currentStages","currentResults","completed","normalizedDuration","weightedNormalizedDuration","isDone","finishedDate","totalWorkoutTimeUsedSec","data-email","isLocked","stage","currentEpoch","inDate","setUTCSeconds","viewBox","svgElevation","rest","avgDogs","lastUpdated","nonstop","totalRest","firstEpoch","firstGpxStartEpoch","lastGpxStartEpoch","FastListLine","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","entries","isIntersecting","currentHeight","childNodes","offsetHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses","jwtToken","getJwtToken","leaderboardMode","filterByraceClass","showLeaderBoard","showNews","radius","fontSize","showPercentText","showCenterText","centerText","centerTextSize","centerTextY","Results","waypoints","raceClass","restPercent","restTime","raceTime","finishTime","currentState","diffToFirstFinishTime","distanceToFinish","distanceToFirst","distanceToForward","distanceToBehind","currentAvgSpeed","speed","states","showText","MusherInfo","wpData","TrackingMap","handleHistoryPointIndex","historyIdx","updateWaypointPosition","playHistory","replaySpeed","raceTrackerPointTimestamp","getRaceTrackerTimestamp","playingHistory","pauseHistory","setLeaderboardMode","mode","chooseRaceClass","toggleShowLeaderBoard","hide","toggleShowNews","closeAllDrawers","showResults","onMusherClick","onCpMarkerClick","cpData","toggleResults","setReplaySpeed","toggleFocusOnMusher","musherid","toggleBib","checkForEnter","maxPoints","toggleLines","showLines","innerWidth","innerHeight","showHeader","drawerClassNames","drawerWidth","largeMarkers","isAnimatedMarkers","linkBase","geoJSONs","zoomToMarkers","selectedClass","wpCheckpoints","position","lat","lng","showTracking","countryRegexp","formattedCountry","resultsHide","waypoints2","fullscreenMap","onMarker2Click","showHeatmap","showTracks","showDistanceMarkers","groupWaypoints","musherId","data-musherid","mapCredits","data-speed","countryRegexpMessage"],"mappings":"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","file":"66.chunk.94a22.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../../../components/form/images';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentRace = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await raceStore.commentRace({ id: race.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[race.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ race, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, race } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (<>\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={race.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default RaceAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom(false);\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n\n        if (!image.dataset.retry) {\n            image.dataset.retry = 0;\n        }\n        image.dataset.retry = parseInt(image.dataset.retry, 10) + 1;\n        if (image.dataset.retry > 5) {\n            return false;\n        }\n\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeImage({\n            id: dog.id,\n            name: imageName,\n        });\n    }\n\n    removeFile = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const fileName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeFile({\n            id: dog.id,\n            name: fileName,\n        });\n    }\n\n    render() {\n        const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField, refName, showImages = false, showFiles = true } = this.props;\n        let value = dog[field] || '';\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(dog[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!dog.files || dog.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='dogs.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='dogs.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {dog.files && dog.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={10}\n                    />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    {showImages && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {(!dog.images || dog.images.length === 0) && <>\n                                    <div class='text-center text-muted mb-3'>\n                                        <div class='display-1'><i class='fas fa-images' /></div>\n                                        <h3><Text id='dogs.no-images-title'>No images for this dog!</Text></h3>\n                                        <Text id='dogs.no-images-text'>You can add more images to this dog. Puppy pictures, workout pictures, lazy summer pictures, etc. All is a nice way to create a better profile for this dog.</Text>\n                                    </div>\n                                </>}\n                                {field === 'image' ? <>\n                                    {dog.image && dog.image.s3SmallLink && <div class='col-3 p-1'>\n                                        <img src={dog.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={dog.image.name}\n                                        ><i class='fas fa-trash' /> Remove</button>\n                                        <span class='badge badge-success'>Main</span>\n                                    </div>}\n                                </> : <>\n                                    {dog.images && dog.images.map(img => (\n                                        <div class='col-3 p-1'>\n                                            <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                            <button class='btn btn-sm btn-link'\n                                                onClick={this.removeImage}\n                                                data-name={img.name}\n                                            ><i class='fas fa-trash' /> Remove</button>\n                                        </div>\n                                    ))}\n                                </>}\n\n                            </div>\n                        </div>\n                    </>}\n\n                    {field === 'image' ? <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} addToImages={false} />\n                    </> : <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} />\n                    </>}\n\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        // onInput={e => console.log(e)}\n                        // onChange={e => console.log(e)}\n                    />\n                    <datalist id={`list-${field}`}>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'select') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n\n                    <select type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                    >\n                        <option value=''>-- Velg kjønn --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label> {refName}\n                <input type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={dog.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleType(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        if (value === null) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.teams.indexOf(value) > -1) {\n            dogStore.removeTeam({ id: object.id, team: value });\n        } else if (object.team) {\n            dogStore.addTeam({ id: object.id, team: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        const { highlight } = this.props;\n\n        return (\n            <div class={`form-group mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = object && util.isArray(object.teams) && object.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleType(team.id)}\n                                            >\n                                                {object.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n\n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                    </>}\n                                                </>}\n\n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Harnesses extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { harnesses, user } = userStore;\n        const { language = 'en' } = user;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {harnesses && harnesses.map((harness, idx) => (\n                                    <div class='col px-0 mb-2'\n                                        ref={value === harness.id ? c => this.container = c : null}\n                                    >\n                                        <div class={`border\n                                            rounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === harnesses.length ? 'rounded-pill-right': '')}\n                                            p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                            style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                            onClick={() => this.toggleType(harness.id)}\n                                        >\n                                            {harness.lang && harness.lang[language] ? harness.lang[language] : harness.name}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Status extends Component {\n    // toggleStatus(typeId) {\n    //     const { object, type, field, updateField, isNew } = this.props;\n    //     let value = toJS(object[field]);\n    //     if (value === typeId) {\n    //         value = 0;\n    //     } else {\n    //         value = typeId;\n    //     }\n    //     updateField({ id: object.id, field, value, type, isNew });\n    // }\n\n    toggleStatus(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = 0;\n        } else {\n            value = typeId;\n        }\n        if (value === 0) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.statuses.indexOf(value) > -1) {\n            dogStore.removeStatus({ id: object.id, status: value });\n        } else if (object.status) {\n            dogStore.addStatus({ id: object.id, status: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogstatuses, user } = userStore;\n        const { language } = user;\n\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {dogstatuses && dogstatuses.map((status, idx) => {\n                                    const isPrimary = value === status.id;\n                                    const isSecondary = object && util.isArray(object.statuses) && object.statuses.indexOf(status.id) > -1;\n                                    return (\n                                        <div class='col mb-2 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === dogstatuses.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleStatus(status.id)}\n                                            >\n                                                {language && status.lang && status.lang[language] ? status.lang[language] : status.name}\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Position extends Component {\n    toggleStatus(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogPositions } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {dogPositions && dogPositions.map(status => (\n                            <div class='offset-2 col-8 mb-2'>\n                                <div class={`border rounded rounded-pill px-3 py-1 bg-${value === status.id ? status.class || 'success' : ''}`}\n                                    onClick={() => this.toggleStatus(status.id)}\n                                    style='line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small>\n                                        {status.name}\n                                    </small>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDog: {},\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    async loadDog(props = this.props) {\n        const { id } = props;\n\t\tconst { dogStore } = this.props.stores;\n        dogStore.cleanupMemoryDetail();\n        await dogStore.load(id, false, { addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n    }\n\n\tresetDog() {\n\t\tthis.setState({\n            newDog: {},\n            createNew: false,\n        });\n\t}\n\n\tinsertDog = async () => {\n\t\tconst { newDog } = this.state;\n\t\tconst { dogStore } = this.props.stores;\n\t\tawait dogStore.insert({ ...newDog });\n        this.resetDog();\n        route(`/dogs/`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { dogStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { dog } = dogStore;\n        if (field === 'images') {\n            if (Array.isArray(dog.images) && Array.isArray(value)) {\n                localObjectValue = [...dog.images, ...value];\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(dog.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.files, ...value];\n                } else {\n                    localObjectValue = [...dog.files, value];\n                }\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(dog.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.achievements, ...value];\n                } else {\n                    localObjectValue = [...dog.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(dog.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.links, ...value];\n                } else {\n                    localObjectValue = [...dog.links, value];\n                }\n            }\n        }\n\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            dogStore.updateObjectKeyValue('newDog', field, value);\n        } else {\n            dogStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { dogStore } = this.props.stores;\n        await dogStore.saveField(id, field, value);\n    }\n\n    chooseMother = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const motherDog = dogStore.findDog(dogId);\n\n        if (motherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: motherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherName', value: motherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherChipId', value: motherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: null, skipTimer: true });\n        }\n    }\n\n    chooseFather = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const fatherDog = dogStore.findDog(dogId);\n\n        if (fatherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: fatherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherName', value: fatherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherChipId', value: fatherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: null, skipTimer: true });\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/edit/${dog.id}/${submenu}`);\n\t}\n\n    back = () => {\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}`);\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadDog();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.id !== this.props.id) {\n            this.loadDog(nextProps);\n        }\n    }\n\n\trender() {\n        const { createNew, newDog, submenu } = this.state;\n\t\tconst { dogStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\t\tconst { insertStatus, saved, dog } = dogStore;\n        const dogFemales = dogStore.findDogsByGender('female');\n        const dogMales = dogStore.findDogsByGender('male');\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const { name } = dog;\n\n\t\treturn (<>\n            <div class='d-flex position-relative'>\n                <div class={`text-center border rounded-circle imageRounded float-right`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\");` : ''}>\n                    {!dog.image && <i class='fas fa-dog text-muted mt-3' style='font-size: 40px;' />}\n                </div>\n                <div class='flex-grow-1 pl-3'>\n                    <h5>\n                        {name}\n                        {hasBirthday && <>\n                            <i class='fas fa-birthday-cake ml-3' />\n                        </>}\n                    </h5>\n                    <span>\n                        {daysUntilBirthday < 7 && <>\n                            <span class='text-muted mr-2'>\n                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                            </span>\n                        </>}\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                </div>\n            </div>\n\n            <div\n                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                style='overflow: auto; scroll-snap-type: x mandatory;'\n            >\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='info'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-info-circle' /> <Text id='dogs.info'>Info</Text></button>\n                    {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'status' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='status'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-thermometer' /> <Text id='dogs.status'>Status</Text></button>\n                    {submenu === 'status' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='pictures'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-images' /> <Text id='dogs.pictures'>Pictures</Text></button>\n                    {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='team'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-users' /> <Text id='dogs.team'>Team</Text></button>\n                    {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'relations' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='relations'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-project-diagram' /> <Text id='dogs.relations'>Relations</Text></button>\n                    {submenu === 'relations' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='achievements'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-clock' /> <Text id='dogs.achievements'>Achievements</Text></button>\n                    {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'links' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='links'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-link' /> <Text id='dogs.links'>Links</Text></button>\n                    {submenu === 'links' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='advanced'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-cogs' /> <Text id='dogs.advanced'>Advanced</Text></button>\n                    {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                style='max-height: 50vh;'\n            >\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                    {submenu === 'info' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='name'\n                                title={<Text id='dogs.full-name'>Fullt navn</Text>}\n                                help={<Text id='dogs.full-name-help'>Fullt navn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='shortname'\n                                title={<Text id='dogs.short-name'>Kallenavn</Text>}\n                                help={<Text id='dogs.short-name-help'>Kallenavnet på hunden. Hva roper du på innkalling?</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='gender' type='select'\n                                datalist={[\n                                    ['male', <Text id='dogs.gender-male'>Male</Text>],\n                                    ['female', <Text id='dogs.gender-female'>Female</Text>]\n                                ]}\n                                title={<Text id='dogs.gender'>Kjønn</Text>}\n                                help={<Text id='dogs.gender-help'>Kjønn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='chipId'\n                                title={<Text id='dogs.chip-id'>Chip ID</Text>}\n                                help={<Text id='dogs.chip-id-help'>Chip ID på hunden. Står ofte i vetrinærhåndbok eller passet.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='birth' type='date' min='2000-01-01' max='today'\n                                title={<Text id='dogs.birth'>Fødselsdato</Text>}\n                                help={<Text id='dogs.birth-help'>Fødselsdato på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Harnesses stores={this.props.stores} saved={saved} object={dog} type='number' field='harness'\n                                title={<Text id='dogs.harness-size'>Selestørrelse</Text>}\n                                help={<Text id='dogs.harness-size-help'>Sele til hunden</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Input saved={saved} dog={dog} field='description' icon='fas fa-paragraph' type='textarea'\n                                title={<Text id='dogs.description'>Beskrivelse</Text>}\n                                help={<Text id='dogs.description-help'>Beskrivelse av hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n\n                            {/* <div class='mt-5 pt-5'>\n                                <Input saved={saved} dog={dog} field='deceased' type='date' min='2000-01-01' max='today'\n                                    title={<Text id='dogs.deceased'>Død</Text>}\n                                    help={<Text id='dogs.deceased-help'>Dødsdato for hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </div> */}\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'status' && <>\n                        <Localizer>\n                            <Status stores={this.props.stores} saved={saved} object={dog} type='number' field='status'\n                                title={<Text id='dogs.status'>Status</Text>}\n                                help={<Text id='dogs.status-help'>Status til hunden</Text>}\n                                updateField={this.updateFieldValue} />\n                            <Input saved={saved} dog={dog} field='specialNeeds'\n                                title={<Text id='dogs.special-needs'>Spesielle behov</Text>}\n                                help={<Text id='dogs.special-needs-help'>Har hunden spesielle behov? Trenger ekstra mat, utstyr eller annet? Eks: \"Ekstra fett\", \"Husk ulveklobandasje\", etc.</Text>}\n                                onInput={this.updateField} />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'pictures' && <>\n                        <Localizer>\n                            {/* <Input saved={saved} dog={dog} field='imageOther' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.photo'>Bilde</Text>}\n                                help={<Text id='dogs.photo-help'>Bilder av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            /> */}\n                            <Input saved={saved} dog={dog} field='image' type='image' icon='fas fa-portrait'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.profile-photo'>Profilbilde</Text>}\n                                help={<Text id='dogs.profile-photo-help'>Profilbilde av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <Localizer>\n                            <Teams stores={this.props.stores} saved={saved} object={dog} type='number' field='team'\n                                title={<Text id='dogs.team'>Team</Text>}\n                                help={<Text id='dogs.team-help'>Team som hunden er på.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Position stores={this.props.stores} saved={saved} object={dog} type='number' field='position'\n                                title={<Text id='dogs.position'>Plass i spannet</Text>}\n                                help={<Text id='dogs.position-help'>Foretrukket plass i spannet.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'relations' && <>\n                        <h5 class='mt-5'><Text id='dogs.mother'>Mor</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.mother}\n                            onInput={this.chooseMother}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-mother'>Velg blant dine hunder</Text> --</option>\n                            {dogFemales && dogFemales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='motherName' type='text'\n                                title={<Text id='dogs.mother-name'>Navn på mor</Text>}\n                                help={<Text id='dogs.mother-name-help'>Navn på moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherChipId' type='text'\n                                title={<Text id='dogs.mother-chipid'>Chip ID på mor</Text>}\n                                help={<Text id='dogs.mother-chipid-help'>Chip ID til moren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherComment'\n                                title={<Text id='dogs.mother-comment'>Kommentar til mor</Text>}\n                                help={<Text id='dogs.mother-comment-help'>Kommentar til moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n\n                        <h5 class='mt-5'><Text id='dogs.father'>Far</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.father}\n                            onInput={this.chooseFather}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-father'>Velg blant dine hunder</Text> --</option>\n                            {dogMales && dogMales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='fatherName' type='text'\n                                title={<Text id='dogs.father-name'>Navn på far</Text>}\n                                help={<Text id='dogs.father-name-help'>Navn på faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherChipId' type='text'\n                                title={<Text id='dogs.father-chipid'>Chip ID på far</Text>}\n                                help={<Text id='dogs.father-chipid-help'>Chip ID til faren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherComment'\n                                title={<Text id='dogs.father-comment'>Kommentar til far</Text>}\n                                help={<Text id='dogs.father-comment-help'>Kommentar til faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'links' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='links' type='text' icon='fas fa-link'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.links'>Linker</Text>}\n                                help={<Text id='dogs.links-help'>Linker til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'achievements' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='achievements' type='text' icon='fas fa-clock'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.achievements'>Bragder</Text>}\n                                help={<Text id='dogs.achievements-help'>Bragder til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='files' type='file' icon='fas fa-file'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.files'>Files</Text>}\n                                help={<Text id='dogs.files-help'>Filer til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                </div>\n\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\nexport default DogsEdit;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    removeImage = async (e) => {\n        const { story } = this.state;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        if (util.isArray(story.images)) {\n            const idx = story.images.findIndex(e => e.name === imageName);\n            if (idx > -1) {\n                story.images.splice(idx, 1);\n            }\n        }\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`} onClick={(e) => this.displayTeam(e, t.uuidv4)}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                                    <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                                </> : <>\n                                                                    {displayName}\n                                                                </>}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2' onClick={(e) => this.displayTeam(e, t.uuidv4)}> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport RaceTracking from '../../components/public/raceTracking.js';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n    isLoading: false,\n};\n\n@observer\nclass AppRaceDetailTracking extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    back = () => {\n        // const { history } = this.props.stores;\n        // history.goBack();\n        const { raceid, path } = this.props;\n        route(`/app-races/${raceid}`);\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n\n        const { raceid } = this.props;\n\n        return (<>\n            <div class='container-fluid position-relative p-0' style={`margin-top: 0; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                <RaceTracking stores={this.props.stores} raceid={raceid} />\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailTracking;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport { route } from 'preact-router';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport Speed from '../data/speed';\nimport Elevation from '../data/elevation';\nimport Weight from '../data/weight';\nimport Distance from '../data/distance';\nimport Temperature from '../data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false,\n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    storyStore.workoutsAddLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    storyStore.workoutsAddLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        storyStore.workoutsAddCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        storyStore.workoutsAddCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            teamStore.addLikeToWorkout({ id, data });\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            storyStore.workoutsAddLikeToWorkout({ id, data });\n        }\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    showWorkoutDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const target = e.target.closest('#workoutDetail');\n        if (target) {\n            const { id } = target.dataset;\n            if (id) {\n            console.log({ target, id });\n                route(`/workouts/public/${id}`);\n            }\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { feed = {} } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedTextName = await teamStore.translate({ object: feed, user, field: 'name' });\n        let translatedTextComment;\n        if (feed.comment) {\n            translatedTextComment = await teamStore.translate({ object: feed, user, field: 'comment' });\n        }\n        this.setState({ showOriginal: 0, translatedTextName, translatedTextComment });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const { feed, idx, onTeamClick = () => {}, onUserClick = () => {}, onDogClick = () => {}, holdingStore = 'team' } = this.props;\n        const { showAddComment, showDate, likeWorkout, showOriginal, translatedTextName, translatedTextComment } = this.state;\n        const { teamStore, storyStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { darkmode, hasShareApi } = appState;\n        let publicDogs;\n\n        let team = {};\n        let publicUser = {};\n        if (holdingStore === 'team') {\n            team = teamStore.findPublicTeam(feed.team);\n            publicUser = teamStore.findPublicUser(feed.user) || {};\n            const { publicDogs: teamPublicDogs } = teamStore;\n            publicDogs = teamPublicDogs;\n        } else if (holdingStore === 'story') {\n            team = storyStore.findPublicTeam(feed.team);\n            publicUser = storyStore.findPublicUser(feed.user) || {};\n            const { publicDogs: storyPublicDogs } = storyStore;\n            publicDogs = storyPublicDogs;\n        }\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        const image = mu.getImage({ user: publicUser, team, object: feed, priority: 'user' });\n\n        const { likes, comments } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\t\tconst { gpxInfo = {} } = feed;\n\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (publicUser) {\n            shortname = mu.displayNameShort(publicUser);\n            name = mu.displayName(publicUser);\n            username = mu.displayName(publicUser);\n            if (publicUser.settings && publicUser.uuidv4 !== user.uuidv4) {\n                userLink = publicUser.settings.hideProfile ? null : `/inbox/${publicUser.uuidv4}`;\n            }\n        }\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        const translationName = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'name',\n        }) || translatedTextName;\n        let feedName = translationName || feed.name;\n        const translationComment = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'comment',\n        }) || translatedTextComment;\n        let feedComment = translationComment || feed.comment;\n\n        if (showOriginal) {\n            feedName = feed.name;\n            feedComment = feed.comment;\n        }\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                    <span class='badge badge-pill badge-secondary float-right'>{teamType}</span>\n                    <h5 class='mb-1 position-relative' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => this.displayTeam(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    <div class='mb-2'>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {feed.public === 1 ? <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-globe-europe' />\n                            </small>\n                        </> : <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                            </small>\n                        </>}\n                        {username && <>\n                            <small class='ml-2 text-muted'>\n                                {userLink ? <>\n                                    <i class='fas fa-user' /> <a href={userLink} onClick={(e) => this.openInbox(e, publicUser.uuidv4)}>{username}</a>\n                                </> : <>\n                                    <i class='fas fa-user' /> {username}\n                                </>}\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={feed.sledWeight} />\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> <Temperature stores={this.props.stores} value={feed.temperature} />\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                            {feed.moonIllumination && feed.moonIllumination.phaseIcon && <span class='float-right ml-2'>{feed.moonIllumination.phaseIcon}</span>}\n                        </small>\n                    </div>\n\n                    {isAdmin && <div\n                        class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                        style='overflow: auto;'\n                    >\n                        <small class='text-muted mr-2'>Adm:</small>\n                        {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {publicUser.deviceInfo && <>\n                            <span class='badge badge-secondary ml-1 float-right font-weight-light'>\n                                {['platform', 'manufacturer', 'model'].map(e => <>\n                                    <span class='ml-1 text-white'>\n                                        {publicUser.deviceInfo[e]}\n                                    </span>\n                                </>)}\n                            </span>\n                        </>}\n                        {adminData && <>\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                            </>)}\n                        </>}\n                    </div>}\n                </div>\n            </div>\n\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='d-flex justify-content-between bg-light rounded-lg px-2'>\n                {feed.distanceKm > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Distance stores={this.props.stores} value={feed.distanceKm} />\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Elevation stores={this.props.stores} value={feed.elevation} />\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {gpxInfo && gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                            <Speed stores={this.props.stores} value={gpxInfo.avgGpsMovingSpeed * 3.6} />\n                        </> : <>\n                            <Speed stores={this.props.stores} value={feed.speedAvg} />\n                        </>}\n                    </div>\n                </div>}\n            </div>\n\n            <div class='row mt-2'>\n                <div id='workoutDetail' class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;' onClick={this.showWorkoutDetail} data-id={feed.uuidv4}>\n                    <Markdown markdown={mu.replaceImages(feedName, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feedComment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                {feed.language !== language && <>\n                    {!showOriginal && translationName ? <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                    </> : <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                    </>}\n                </>}\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments\n                    stores={this.props.stores}\n                    likes={likes}\n                    comments={comments}\n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                                data-native\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNotifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    subscribeNotificationTopic = async (field) => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { notificationTopics = {} } = user;\n        const value = 1;\n        await userStore.setNotificationTopic({\n            field: `notificationTopics.${field}`,\n            value,\n        });\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { notificationTopics = {} } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const topic = `race-${race.id}`;\n        if (notificationTopics && notificationTopics[topic]) {\n            return '';\n        }\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <button class='btn btn-block btn-info btn-lg' onClick={() => this.subscribeNotificationTopic(topic)}>\n                        <i class='fas fa-bell' /> <Text id='race.notifications'>Subscribe to race notifications</Text>\n                    </button>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailNotifications;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\nimport { toJS } from 'mobx';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass LastResults extends Component {\n    render() {\n        const { lastResults = [], currentClass = {}, selectedMusher = {}, selectResult = () => {} } = this.props;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n        return (<>\n\n            <table class='table table-striped'>\n                <thead>\n                    <tr>\n                        <th style='width: 10%'>Time</th>\n                        <th style='width: 5%'>Dir</th>\n                        <th style='width: 75%'>Checkpoint</th>\n                        <th style='width: 10%'>Dogs</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {lastResults && lastResults.length > 0 && lastResults.map(res => {\n                        const currentCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === res.checkpoint) : null;\n                        const requiredRestMin = res.direction === 'in' && currentCheckpoint.requiredRestMinutes ? (\n                            currentCheckpoint.timeEqualization ? selectedMusher.timeEqualization + currentCheckpoint.requiredRestMinutes : currentCheckpoint.requiredRestMinutes\n                        ) : null;\n                        const firstOutTime = new Date(new Date(res.timestamp).getTime() + requiredRestMin * 60000);\n                        return (<>\n                            <tr \n                                class='resultLine'\n                                data-resultid={res.id}\n                                onClick={selectResult}\n                            >\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-clock' /></span> {util.formatDate(res.timestamp, { locale: language, year: '2-digit', month: '2-digit', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </nobr>\n                                </td>\n                                <td>\n                                    {res.direction === 'in' && <>\n                                        <i class='fas fa-sign-in-alt mr-2 text-success' />\n                                    </>}\n                                    {res.direction === 'out' && <>\n                                        <i class='fas fa-sign-out-alt mr-2 text-info' />\n                                    </>}\n                                    {res.direction === 'scratched' && <>\n                                        <i class='fas fa-times mr-2 text-danger' />\n                                    </>}\n                                </td>\n                                <td>\n                                    <span class='text-muted'>{currentCheckpoint.sortOrder}:</span> {currentCheckpoint.name}\n                                    {/* {requiredRestMin && <>\n                                        <div>\n                                            {selectedMusher.timeEqualization ? <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} + {selectedMusher.timeEqualization} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </> : <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </>}\n                                        </div>\n                                    </>} */}\n                                </td>\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-dog ml-3' /></span> {res.dogs}<br />\n                                    </nobr>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </tbody>\n            </table>\n        </>);\n    }\n}\n\n@observer\nclass RaceLiveAddResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: {},\n            message: '',\n        };\n        this.updateTimer = {};\n    }\n\n    addResult = async (e) => {\n\t\tconst { raceStore, appState } = this.props.stores;\n        const { direction, classid } = e.target.closest('button').dataset;\n        const { checkpointId, selectedClassIds = [] } = appState;\n\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { result, showTimestamp } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        if (showTimestamp) {\n            result.timestamp = result.timestamp ? result.timestamp : new Date();\n        } else {\n            result.timestamp = new Date();\n        }\n\n        if (direction === 'scratched') {\n            await raceStore.addResult({\n                id: raceid,\n                classId: classid,\n                showTimestamp: false,\n                newResult: {\n                    direction: 'in',\n                    checkpoint: checkpointId,\n                    ...result,\n                }\n            });\n            await raceStore.editContestant({\n                id: raceid,\n                classId: classid,\n                bib: result.bib,\n                field: 'raceStatus',\n                value: 'DNF',\n            });\n        }\n\n\t\tawait raceStore.addResult({\n\t\t\tid: raceid,\n\t\t\tclassId: classid,\n            showTimestamp: false,\n\t\t\tnewResult: {\n                direction,\n                checkpoint: checkpointId,\n                ...result,\n\t\t\t}\n        });\n\n        // const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        // raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.setState({\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n            selectedMusher: null,\n            lastResults: null,\n            message: `Added ${result.bib} with ${result.dogs} dogs ${direction} ${direction === 'in' ? 'to' : 'of'} checkpoint ${selectedCheckpoint.name}.`,\n        });\n\n        clearTimeout(this.updateTimer.message);\n        this.updateTimer.message = setTimeout(async () => {\n\t\t\tthis.setState({\n                message: '',\n            });\n\t\t}, 3000);\n\t}\n\n    editResult = (e) => {\n        const { raceStore, appState } = this.props.stores;\n        const { currentResult } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        // const resultIdx = lastResults.findIndex(e => e.id === resultid);\n        // if (resultIdx > -1) {\n        //     console.log({ resultIdx })\n        //     lastResults[resultIdx][field] = value;\n        //     this.setState({ lastResults });\n        // }\n        currentResult[field] = value;\n        this.setState({ currentResult });\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        \n        const data = {\n            raceClassId: classid,\n            resultId: resultid,\n\t\t\t[`raceClassResult${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n            await raceStore.editClass({\n                id: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.updateClassesResultLocal(classid, resultid, field, value);\n            const currentClass = raceStore.getClassById(selectedClassId);\n\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t\t}, 500);\n    }\n\n    updateField = (e) => {\n        const { raceStore, appState } = this.props.stores;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const { result, selectedResult, showTimestamp } = this.state;\n        result[field] = value;\n        \n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        \n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        if (!selectedMusher) {\n            this.setState({\n                result,\n            });\n            return false;\n        }\n        let lastResults;\n        let isCheckedIn;\n        let isCheckedOut;\n        let isScratched;\n        let currentResult;\n        let prevCheckpoint;\n        let isCheckedInPrev;\n        let isCheckedOutPrev;\n        let isScratchedPrev;\n\n        if (currentClass) {\n            lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n            if (lastResults && lastResults.length > 0) {\n                isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n                isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n                isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n                prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n                if (prevCheckpoint) {\n                    isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n                    isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n                    isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n                }\n            }\n            currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === selectedResult)) : {};\n        }\n\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : null;\n        if (lastResult) {\n            const lastTimestamp = lastResults && lastResults[0] ? lastResults[0].timestamp : (selectedMusher && selectedMusher.startTime ? selectedMusher.startTime : currentClass.startDate);\n            if (showTimestamp) {\n                result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n            }\n            result.dogs = lastResult.dogs;\n        }\n        \n        this.setState({\n            result,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            prevCheckpoint,\n            currentResult,\n            lastResults,\n        });\n    }\n\n\n    deleteResult = async () => {\n        const { selectedResult } = this.state;\n        const { appState, raceStore } = this.props.stores;\n\n        const { race } = raceStore;\n        const raceid = race.id;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: currentClass.id,\n            resultId: selectedResult,\n\t\t\traceClassResultDelete: 1,\n\t\t};\n        await raceStore.editClass({\n            id: raceid,\n            data,\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.doneEditResult();\n    }\n\n    selectCheckpoint = (e) => {\n        const { showTimestamp, result } = this.state;\n        const checkpointId = e.target.closest('button').dataset.id;\n        const { appState, raceStore } = this.props.stores;\n        appState.selectCheckpoint(checkpointId);\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { sortedContestants = [] } = raceStore;\n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n\n        const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n        const prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n        const isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n        const isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n        const isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n        \n        this.setState({\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            lastResults,\n        });\n\n    }\n\n    toggleTimestamp = () => {\n        const { showTimestamp, result } = this.state;\n\n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedMusher = currentClass.contestants ? currentClass.contestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp'])).reverse().filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        let lastTimestamp;\n        if (lastResults && lastResults[0]) {\n            lastTimestamp = lastResults[0].timestamp;\n        } else if (selectedMusher.startTime) {\n            lastTimestamp = selectedMusher.startTime;\n        } else if (currentClass.startDate) {\n            lastTimestamp = currentClass.startDate;\n        } else {\n            lastTimestamp = new Date();\n        }\n        result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n\n        this.setState({\n            showTimestamp: !showTimestamp,\n            result,\n        });\n    }\n\n    doneEditResult = () => {\n        const { raceStore, appState } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const { checkpointId } = appState;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        this.setState({\n            selectedResult: '',\n            selectedCheckpoint,\n            currentResult: null,\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n        });\n    }\n\n    selectResult = (e) => {\n        const resultid = e.target.closest('.resultLine').dataset.resultid;\n        \n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === resultid)) : {};\n        \n        this.setState({\n            selectedResult: resultid,\n            currentResult,\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n        //     const { currentClass } = this.props;\n        //     const { raceStore } = this.props.stores;\n        //     const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        //     raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        // }\n\t}\n\n    componentDidMount() {\n        this.doneEditResult();\n\t}\n\n    render() {\n        const {\n            result,\n            showTimestamp,\n            message,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            currentResult,\n            lastResults = [],\n        } = this.state;\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { checkpointId } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : {};\n        let lastCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === lastResult.checkpoint) : null;\n        lastCheckpoint = lastCheckpoint ? lastCheckpoint : {};\n\n        // const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        // const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        // const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        // const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        // const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        // const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n        // const currentResult = currentClass.results ? currentClass.results.find(e => e.id === selectedResult) : {};\n\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n\n        return (<>\n            <div class='mt-2 pb-5' style='height: 70vh;'>\n                <h3>Admin timing - {currentClass.title}</h3>\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n\n                        {currentClass.checkpoints && currentClass.checkpoints.map((currentCheckpoint, idx) => {\n                            let resIn = {};\n                            let resOut = {};\n                            let resScratched = {};\n                            if (lastResults && lastResults.length > 0) {\n                                resIn = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'in') || {};\n                                resOut = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'out') || {};\n                                resScratched = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'scratched') || {};\n                            }\n                            \n                            return (<>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === currentClass.checkpoints.length - 1 && 'rounded-pill-right'} rounded-none ${checkpointId === currentCheckpoint.id ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.selectCheckpoint}\n                                        data-id={currentCheckpoint.id}\n                                    >\n                                        {currentCheckpoint.sortOrder}: {currentCheckpoint.name}\n                                        {resOut && resOut.id ? <i class='fas fa-check text-white ml-2' /> : ''}\n                                        {resIn && resIn.id && !resOut.id ? <i class='fas fa-map-marker-alt text-white ml-2' /> : ''}\n                                    </button>\n                                </div>\n                            </>);\n                        })}\n\n                    </div>\n                </div>\n                <div class='w-100 overflow-hidden'>\n                    {selectedCheckpoint && <>\n                        <h3>\n                            {selectedMusher && <><i class='fas fa-user text-muted' /> {selectedMusher.firstname} {selectedMusher.lastname}</>}\n                        </h3>\n\n                        {currentResult ? <>\n                            {['bib', 'dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={currentResult[field]}\n                                        onInput={this.editResult}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['timestamp'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                    <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={util.isoDate(currentResult[field], false, false, false)}\n                                        onInput={this.editResult}\n                                    />\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                </div>\n                            </>)}\n\n                            <button class='btn btn-lg btn-danger float-left' onClick={this.deleteResult}>\n                                Delete\n                            </button>\n                            <button class='btn btn-lg btn-info float-right' onClick={this.doneEditResult}>\n                                Done\n                            </button>\n                        </> : <>\n\n                            {selectedCheckpoint.sortOrder > lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Previous checkpoint is not logged yet.\n                                </div>\n                            </>}\n\n                            {!isCheckedOutPrev && selectedCheckpoint.sortOrder === lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Not checked out of prev.\n                                </div>\n                            </>}\n                            {/* {selectedCheckpoint.sortOrder} gt\n                            {lastCheckpoint.sortOrder}<br />\n                            isCheckedIn: {JSON.stringify(isCheckedIn, null, 4)}<br />\n                            isCheckedOut: {JSON.stringify(isCheckedOut, null, 4)}<br />\n                            isScratched: {JSON.stringify(isScratched, null, 4)}<br /> */}\n\n                            {/* bib: String,\n                            position: [],\n                            checkpointIn: String,\n                            checkpointOut: String,\n                            dogs: Number,\n                            timestamp: Date,\n                            addedByUser: Number, */}\n                            {['bib'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={this.updateField}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-dog' /> {field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {showTimestamp ? <>\n                                {['timestamp'].map(field => <>\n                                    <div class='form-group'>\n                                        <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                        <input\n                                            type='datetime-local'\n                                            class='form-control'\n                                            id={field}\n                                            aria-describedby={`${field}Help`}\n                                            onInput={linkstate(this, `result.${field}`)}\n                                            value={util.isoDate(result[field], false, false, false).replace(/ /g, 'T')}\n                                            min={util.isoDate(lastResult.timestamp, false, false, false).replace(/ /g, 'T')}\n                                        />\n                                        <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Hide timestamp</button>\n                                    </div>\n                                </>)}\n                            </> : <>\n                                <div class='form-group'>\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Show timestamp</button>\n                                </div>\n                            </>}\n\n\n                            {isCheckedIn && isCheckedOut && <>\n                                <div class='alert alert-warning my-2 clearfix' role='alert'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    {selectedMusher && <>{selectedMusher.firstname} {selectedMusher.lastname}</>} Has checked in and out of this checkpoint!\n                                </div>\n                            </>}\n\n                            <div class='d-flex justify-content-between'>\n                                <div class='text-center'>\n                                    <h3><i class='fas fa-campground text-muted' /> {selectedCheckpoint.name}</h3>\n                                </div>\n                            </div>\n\n                            <div class='d-flex justify-content-between'>\n                                <button class='btn btn-lg btn-success float-left' onClick={this.addResult} data-direction='in' data-classid={currentClass.id} disabled={isCheckedIn ? 'disabled' : ''}>\n                                    CP In <i class='fas fa-sign-in-alt ml-2' />\n                                </button>\n                                <button class='btn btn-lg btn-info float-right' onClick={this.addResult} data-direction='out' data-classid={currentClass.id} disabled={isCheckedOut ? 'disabled' : ''}>\n                                    <i class='fas fa-sign-out-alt mr-2' /> CP Out\n                                </button>\n                            </div>\n                        </>}\n\n                    </>}\n                </div>\n                {message && <div class='alert alert-success mt-3 clearfix' role='alert'>\n                    {message}\n                </div>}\n\n                <div class='overflow-hidden mb-5 mt-3'>\n                    <LastResults\n                        stores={this.props.stores}\n                        lastResults={lastResults}\n                        currentClass={currentClass}\n                        selectedMusher={selectedMusher}\n                        selectResult={this.selectResult}\n                    />\n                </div>\n\n                <div class='d-flex justify-content-center mt-3 mb-5'>\n                    <button class='btn btn-sm btn-block btn-danger' onClick={this.addResult} data-direction='scratched' data-classid={currentClass.id} disabled={isScratched ? 'disabled' : ''}>\n                        Scratch <i class='fas fa-times ml-2' />\n                    </button>\n                </div>\n\n            </div>\n        </>);\n    }\n}\n\nexport default RaceLiveAddResult;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport StoryPoll from './storyPoll';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n        this.textareaRef = createRef();\n        this.state = {\n            sendButtonEnabled: true,\n            storyBody: props.story.body,\n        };\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n        const { subfield, subvalue } = e.target.dataset;\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { storyStore } = this.props.stores;\n        storyStore.publicFeedUpdate(id, name, value);\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value, {\n                query: {\n                    [subfield]: subvalue,\n                },\n            });\n        }, 1000);\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        if (field === 'images') {\n            if (Array.isArray(story.images) && Array.isArray(value)) {\n                localObjectValue = [...story.images, ...value];\n            }\n        }\n    \n        storyStore.updateField(id, field, localObjectValue);\n        storyStore.publicFeedUpdate(id, field, localObjectValue);\n\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, name, value, opts = {}) {\n        this.setState({ sendButtonEnabled: false });\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true, {\n            query: { ...opts.query },\n        });\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    removeImage = async (e) => {\n        const { storyStore } = this.props.stores;\n        const { story } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        storyStore.removeImage({\n            id: story.id,\n            name: imageName,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    componentDidMount() {\n        this.textareaRef.current.focus();\n    }\n\n    render() {\n        const { storyBody, storyType, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        const { id } = story;\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <div class='col-12 text-center mt-2'>\n                        <div class='container-fluid'>\n                            <div class='row d-flex align-items-end'>\n                                {util.isArray(story.images) && story.images.map((img, idx) => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                        <small>\n                                            <input\n                                                class='form-control'\n                                                type='text'\n                                                name={`images.title`}\n                                                data-subfield={`name`}\n                                                data-subvalue={story.images[idx].name}\n                                                onInput={this.saveStoryField}\n                                                value={story.images[idx].title}\n                                            />\n                                        </small>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={story} updateField={this.updateFieldValue} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={false} />\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <label><Text id='story.content'>Content</Text></label>\n                        <div class='border rounded rounded-lg position-relative'>\n                            <Localizer>\n                                <textarea\n                                    class='form-control-plaintext px-2'\n                                    type='text'\n                                    placeholder={<Text id='story.add-content'>Add your text here...</Text>}\n                                    onInput={linkState(this, 'storyBody')}\n                                    // onKeyUp={mu.resizeTextarea}\n                                    onFocus={mu.resizeTextarea}\n                                    style='height: 2.3em;'\n                                    value={storyBody || story.body}\n                                    ref={this.textareaRef}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        {isAdmin && <>\n                            <div class='col-12 mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <input\n                                            type='checkbox'\n                                            id={`pinned-${story.id}`}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? '' : util.isoDate()}\n                                            checked={story.pinned ? 'checked' : ''}\n                                            />\n                                        <label class='ml-2' for={`pinned-${story.id}`}>Pinned to top.</label>\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <button type='button' class={`btn btn-block btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                            onClick={this.saveStory}\n                            data-id={story.id}\n                        ><i class='fas fa-paper-plane' /> <Text id='story.edit-save'>Save changes</Text></button>\n                    </div>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    setSelectedImage = (imageIdx) => {\n        this.setState({ selectedImageIdx: imageIdx });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText, selectedImageIdx = 0 } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n        const { components = [], finalBody = '' } = mu.getInlineComponents(body || '');\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} callback={this.setSelectedImage} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(finalBody, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                    {components && components.map((component, idx) => {\n                        if (component.name === 'poll') {\n                            return <StoryPoll\n                                stores={this.props.stores}\n                                story={story}\n                                storyId={story.id}\n                                params={component.params}\n                                opts={component.opts}\n                                content={component.content}\n                                selectedImageIdx={selectedImageIdx}\n                            />;\n                        }\n                    })}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>\n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => this.displayTeam(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink} onClick={(e) => this.openInbox(e, user.uuidv4)}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    {showEdit[story.id] || showDeleteStory[story.id] ? <>\n                        <div class='row mt-2'>\n                            <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {showEdit[story.id] && <>\n                                    <StoryEditInline\n                                        stores={this.props.stores}\n                                        story={story}\n                                        key={`story-edit-${story.id}`}\n                                        callback={this.doneEdit}\n                                    />\n                                </>}\n                                {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                    <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                </div>}\n                            </div>\n                        </div>\n                    </> : <>\n\n                        {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='mr-2'>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='story'\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                            {views > 0 && <>\n                                <div>\n                                    <Views\n                                        stores={this.props.stores}\n                                        views={views}\n                                        object={story}\n                                        type='story'\n                                        isTeamAdmin={isTeamAdmin}\n                                        isAdmin={isAdmin}\n                                        onTeamClick={onTeamClick}\n                                        onUserClick={onUserClick}\n                                    />\n                                </div>\n                            </>}\n                        </div>\n\n                        {showTeamSetting[story.id] && <>\n                            <small>\n                                <div class='alert alert-info' role='alert'>\n                                    <span class='display-4 float-left'>\n                                        <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                    </span>\n                                    <p>\n                                        <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                    </p>\n                                    <p>\n                                        <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                    </p>\n                                    <p>\n                                        <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                    </p>\n                                </div>\n                            </small>\n                        </>}\n\n                        <div>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                        data-id={story.id}\n                                        onClick={this.likeStory}\n                                    >\n                                        <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                        data-id={story.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                    </button>\n                                </div>\n                                {hasShareApi ? <>\n                                    <div class='col text-center'>\n                                        <button class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                            onClick={this.shareLink}\n                                            data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            data-title={`title: ${story.title}`}\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </button>\n                                    </div>\n                                </> : <>\n                                    <div class='col text-center'>\n                                        <a class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                            href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                            data-native\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </a>\n                                    </div>\n                                </>}\n\n                            </div>\n                        </div>\n\n                        <div class='mt-2'>\n                            <StoryComments\n                                stores={this.props.stores}\n                                story={story}\n                                col='10'\n                                offset='2'\n                                compact={false}\n                                showAllComments={showAllComments}\n                                initCall={this.closeAllAddComments}\n                            />\n                            {showAddComment[story.id] && <StoryAddComment\n                                stores={this.props.stores}\n                                story={story}\n                                inputRef={c => this.inputRef[story.id] = c}\n                                inputRefObject={this.inputRef}\n                                col='10'\n                                offset='2'\n                                key={`story-comment-${story.id}`}\n                            />}\n                        </div>\n                    </>}\n                {/* </div> */}\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryPoll extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {};\n        this.inputRef = {};\n    }\n\n    pollStory = async (e) => {\n        const { storyId } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { line } = e.target.dataset;\n\t\tconst response = await storyStore.pollStory({ id: storyId, line });\n\t}\n\n    toggleResult = () => {\n        const { viewResult } = this.state;\n        this.setState({ viewResult: !viewResult });\n    }\n\n    render() {\n        const { viewResult } = this.state;\n        const { story, storyId, params, opts, content, selectedImageIdx } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const lines = content.split('\\n').map(line => line.trim().replace(/^\\-\\s*/g, ''));\n        const hasPolledStory = story.polls && story.polls.findIndex(e => e.user === currentUser.id) > -1;\n        const totalPolls = story.polls ? story.polls.length : 0;\n        let maxPercent = 0;\n        lines.forEach((line) => {\n            const percent = (story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length / totalPolls : 0) * 100;\n            if (percent > maxPercent) {\n                maxPercent = percent;\n            }\n        });\n        const voteDays = opts.days ? parseInt(opts.days, 10) : 7;\n\n        const finishDate = util.addDays(story.date, voteDays);\n        const isExpired = finishDate < new Date();\n        const hasImageRegexp = new RegExp(/{{img\\./i);\n\n        return (<>\n            <div class='w-100 my-4 storyPoll'>\n                {isExpired || hasPolledStory || viewResult ? <>\n                    {lines && lines.map((line, idx) => {\n                        const hasPolledLine = story.polls && story.polls.findIndex(e => e.user === currentUser.id && e.line === mu.md5(line)) > -1;\n                        const totalLinePolls = story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length : 0;\n                        const percent = totalLinePolls / totalPolls * 100;\n                        return (<>\n                            <div class={`progress position-relative my-2 `} style='height: 1.5em; font-size: 1.3em;'>\n                                <span class='position-absolute' style='right: 10px;'> {util.format(percent || 0, 1)}%</span>\n                                <span class='position-absolute' style='left: 10px;'>\n                                    <Markdown markdown={mu.replaceImages(`${line} ${hasPolledLine && `<i class='fas fa-check-circle' />`}`, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                                </span>\n                                <div\n                                    class={`progress-bar ${maxPercent === percent ? 'bg-primary' : 'bg-secondary'}`}\n                                    role=\"progressbar\"\n                                    style={`width: ${percent}%;`}\n                                    aria-valuenow={percent}\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                />\n                            </div>\n                        </>);\n                    })}\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>\n                            <small>\n                                {util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}\n                            </small>\n                        </div>\n                        {isExpired ? <>\n                            <div class='ml-2'>\n                                <small>\n                                    - <Text id='story.finished'>Finished</Text>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div class='ml-2'>\n                                <small>\n                                    - {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text>\n                                </small>        \n                            </div>\n                            {!hasPolledStory && <div class='ml-2' onClick={this.toggleResult}>\n                                <small>\n                                    - <Text id='story.view-vote'>View vote</Text>\n                                </small>\n                            </div>}\n                        </>}\n                    </div>\n                </> : <>\n                    {lines && lines.map((line, idx) => <>\n                        <button class={`btn btn-block ${hasImageRegexp.test(line) && idx === selectedImageIdx ? 'btn-outline-success' : 'btn-outline-primary'} rounded-pill`} onClick={this.pollStory} data-line={mu.md5(line)}>\n                            {hasImageRegexp.test(line) && idx === selectedImageIdx && <span class='float-right'><i class='fas fa-eye' /></span>}\n                            <Markdown markdown={mu.replaceImages(line, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                        </button>\n                    </>)}\n\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>\n                            <small>\n                                {util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}\n                            </small>\n                        </div>\n                        {isExpired ? <>\n                            <div class='ml-2'>\n                                <small>\n                                    - <Text id='story.finished'>Finished</Text>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div class='ml-2'>\n                                <small>\n                                    - {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text>\n                                </small>        \n                            </div>\n                        </>}\n                        <div class='ml-2' onClick={this.toggleResult}>\n                            <small>    \n                                - <Text id='story.view-results'>View results</Text>\n                            </small>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPoll;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailUserImages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceUserImage: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\taddRaceUserImage = async () => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceUserImage } = this.state;\n\t\tawait raceStore.addUserImage({ id: raceid, newUserImage: newRaceUserImage });\n\t\tthis.setState({\n\t\t\tnewRaceUserImage: {},\n\t\t});\n\t}\n\n\tupdateUserImageUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceUserImage } = this.state;\n\t\tnewRaceUserImage[field] = value;\n\t\tthis.setState({ newRaceUserImage });\n\t}\n\n\tremoveRaceUserImage = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeUserImage({\n\t\t\tid: raceid,\n\t\t\tuserImageId: id,\n\t\t});\n\t}\n\n\teditRaceUserImage = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceUserImageId: id,\n\t\t\t[`raceUserImage${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editUserImage({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceUserImage = {} } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const tags = ['photos'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: Images](/app-races/${race.id}/userImages)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.user-images'>User images</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.userImages && race.userImages.reverse().map(currentUserImage => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                {isAdmin && <>\n                                    <button class='btn btn-danger position-absolute' style='top:5px; right: 5px;' data-id={currentUserImage.id} onClick={this.removeRaceUserImage}>\n                                        <i class='fas fa-times' />\n                                    </button>\n                                </>}\n\n                                <div class='clearfix'>\n                                    <img src={currentUserImage.image.s3LargeLink} class='img-fluid rounded-lg mb-2' />\n                                </div>\n                                <div class='clearfix'>\n                                    <h5 class='mb-0'>{currentUserImage.title}</h5>\n                                    <small class='text-muted'> {util.formatDate(currentUserImage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentUserImage.body, currentUserImage.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin UserImage Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group '>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                        {isAdmin && <>\n                            <div class='col-12 border rounded-lg m-2 p-3 bg-light'>\n                                <h5>Add new user image</h5>\n                                <div class='row'>\n                                    <div class='col'>\n                                        {newRaceUserImage && newRaceUserImage.image && <img src={newRaceUserImage.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n                                        {['title'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                        {['body'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    onKeyUp={this.resizeTextarea}\n                                                    style='height: 3em;'\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                    </div>\n                                </div>\n                                <Images saved={{}} object={{}} field={'image'} updateField={this.updateUserImageUpload} autoOpen={false} />\n                                <button class='btn btn-info' onClick={this.addRaceUserImage}>Add race user image</button>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailUserImages;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport MusherInfoHeader from '../races/musherInfoHeader';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveMusherResult extends Component {\n    render() {\n        const { bib, onClickNav = () => {} } = this.props;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId) || {};\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(bib, 10)) : null;\n        selectedMusher = selectedMusher ? selectedMusher : {};\n        const selectedMusherIdx = sortedContestants ? sortedContestants.findIndex(e => e.bib === parseInt(bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(bib, 10)) : null;\n\n        const team = raceStore.getTeamById(selectedMusher.team);\n        const user = team.members ? team.members.find(m => m.email === selectedMusher.email) : {};\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(selectedMusher);\n\n        let lastResOut;\n        let lastResIn;\n        let totalDistance = 0;\n        let totalTime = 0;\n        let totalMovingTime = 0;\n        let totalInCpTime = 0;\n        let lastEstTimeOut = currentClass.startDate;\n        let lastAvgSpeed = 0;\n\n        const nextBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx + 1] ? sortedContestants[selectedMusherIdx + 1].bib : null;\n        const prevBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx - 1] ? sortedContestants[selectedMusherIdx - 1].bib : null;\n\n        const locale = 'en-GB';\n\n        return (<>\n            {nextBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextBib)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevBib)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <MusherInfoHeader\n                stores={this.props.stores}\n                contestant={selectedMusher}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n                onClickNav={onClickNav}\n                rank={selectedMusherIdx + 1}\n            >\n                {/* {\n                    \"id\": \"305e720b-12bc-4be3-8244-47a2529c1a26\",\n                    \"user\": 679,\n                    \"Løp\": \"Finnmarksløpet 1200\",\n                    \"bib\": 32,\n                    \"firstname\": \"Thomas\",\n                    \"lastname\": \"Wærner\",\n                    \"cellphone\": \"48176051\",\n                    \"email\": \"thomas.waerner@icloud.com\",\n                    \"country\": \"NO\",\n                    \"flag\": \"🇳🇴\",\n                    \"team\": 2278,\n                    \"startTime\": \"2019-03-08T18:32:00.000Z\",\n                    \"maxStartTime\": 1552071480000,\n                    \"startEpoch\": 1552069920000,\n                    \"timeEqualization\": 26,\n                    \"cpId\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                    \"cpDirection\": \"out\",\n                    \"cpDogs\": 13,\n                    \"cpTimestamp\": \"2019-03-13T00:08:00.000Z\",\n                    \"cpSortOrder\": 8\n                } */}\n                {/* [\n                    {\n                        \"position\": [],\n                        \"id\": \"d9f3d1b6-55e0-4185-b051-e96f1d4eaead\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"out\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-13T00:08:00.000Z\"\n                    },\n                    {\n                        \"position\": [],\n                        \"id\": \"1503b852-3a61-4b91-8323-5e4f862c4399\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"in\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-12T19:49:00.000Z\"\n                    }, */}\n                    {/* {\n                        \"position\":[],\n                        \"polygon\":[],\n                        \"id\":\"fa914e06-c56c-4b5b-9719-2dc6ee12c05d\",\n                        \"name\":\"Jergul\",\n                        \"distanceFromStart\":101,\n                        \"sortOrder\":3,\n                        \"distanceFromPrev\":101,\n                        \"estTimeToCpMinutes\":484\n                    } */}\n\n                    {/* <h3>RaceLiveMusherResult</h3> */}\n                    {/* <h5>{bib} {selectedMusher.lastname}</h5> */}\n                    {/* <xmp>{JSON.stringify(team.imageHeader, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(user, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(image, null, 4)}</xmp> */}\n                <div class='table-responsive'>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Checkpoint</th>\n                                <th class='text-center'>In</th>\n                                <th class='text-center'>Out</th>\n                                <th class='text-center'>Moving time</th>\n                                <th class='text-center'>Avg speed</th>\n                                <th class='text-center'>Total moving time</th>\n                                <th class='text-center'>Rest</th>\n                                <th class='text-center'>Total rest</th>\n                                <th class='text-center'>% rest</th>\n                                <th class='text-center'>Distance</th>\n                                <th class='text-center'>Total distance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {checkpoints && checkpoints.map((cp, cpIdx) => {\n                                const now = Math.floor(new Date().getTime() / 1000, 10);\n                                const resIn = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'in') || {};\n                                const resOut = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'out') || {};\n                                const resScratched = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'scratched') || {};\n                                let timeInCp = 0;\n                                if (!cp.isStartLine && resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                    timeInCp = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                }\n                                let movingTime = 0;\n                                if (lastResOut && resIn && lastResOut.timestamp && resIn.timestamp) {\n                                    movingTime = mu.deltaSec(lastResOut.timestamp, resIn.timestamp);\n                                }\n\n                                let hasBeenInCp = false;\n                                let avgSpeed = 0;\n                                if (resIn && resIn.timestamp) {\n                                    hasBeenInCp = true;\n                                    avgSpeed = cp.distanceFromPrev / (movingTime / 3600);\n                                }\n                                totalDistance += cp.distanceFromPrev ? parseInt(cp.distanceFromPrev, 10) : 0;\n                                totalMovingTime += movingTime ? movingTime : 0;\n                                totalInCpTime += timeInCp ? timeInCp : 0;\n                                totalTime += (movingTime ? movingTime : 0) + (timeInCp ? timeInCp : 0);\n                                const percentRest = totalTime ? totalInCpTime / totalTime * 100 : 0;\n                                const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n                                let line;\n                                let estTimeOutClass = 'text-muted font-weight-lighter';\n                                let totalRestClass = 'text-info';\n                                if (hasBeenInCp) {\n                                    let estTimeOut;\n                                    let estRest;\n                                    let restInCpSoFar;\n                                    // if (cp.isStartLine) {\n                                    //     estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                    //     estRest = 0;\n                                    if (!resOut || !resOut.timestamp) {\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.timeEqualization) {\n                                            if (currentClass.requiredRestMinutes && totalInCpTime < reqTotalRestInSec) {\n                                                estRest = reqTotalRestInSec - totalInCpTime + selectedMusher.timeEqualization * 60;\n                                                estTimeOutClass = 'text-warning font-weight-bold';\n                                            }\n                                            if (!estRest && cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                                estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                            }\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = 180 * 60;\n                                        }\n                                        if (cp.isStartLine) {\n                                            estTimeOut = mu.addDeltaSec(selectedMusher.startTime || currentClass.startDate, 0);\n                                        } else {\n                                            estTimeOut = mu.addDeltaSec(resIn.timestamp, estRest);\n                                            restInCpSoFar = mu.deltaSec(resIn.timestamp, now);\n                                        }\n                                        lastEstTimeOut = estTimeOut;\n\n                                        if (reqTotalRestInSec) {\n                                            if ((totalInCpTime + restInCpSoFar) > (reqTotalRestInSec + (selectedMusher.timeEqualization * 60))) {\n                                                totalRestClass = 'text-success';\n                                            } else {\n                                                totalRestClass = 'text-danger';\n                                            }\n                                        }\n                                    }\n\n                                    line = (<>\n                                        <tr>\n                                            <td><nobr>{cp.name}</nobr></td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resIn.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resIn.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    {resIn.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resIn.dogs}</>}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resOut.timestamp && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(resOut.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(resOut.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        {resOut.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resOut.dogs}</>}\n                                                    </nobr>}\n                                                    {!resScratched.timestamp && estTimeOut && <nobr class={`${estTimeOutClass}`}>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </>}\n                                                {resScratched.timestamp && <nobr class='text-danger'>\n                                                    <i class='fas fa-times' />\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resScratched.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resScratched.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(movingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(totalMovingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine || cp.isStartLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!resOut || !resOut.timestamp ? <>\n                                                            <nobr class='text-info'>\n                                                                {util.secToHms(restInCpSoFar, true)}\n                                                            </nobr>\n                                                        </> : <>\n                                                            {!cp.isStartLine && <>\n                                                                {estRest > 0 ? <>\n                                                                    <nobr class='text-muted font-weight-lighter'>\n                                                                        {util.secToHms(estRest, true)}\n                                                                    </nobr>\n                                                                </> : <>\n                                                                    <nobr>\n                                                                        {util.secToHms(timeInCp, true)}\n                                                                    </nobr>\n                                                                </>}\n                                                            </>}\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    <nobr>\n                                                        {util.secToHms(totalInCpTime, true)}\n                                                    </nobr>\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!cp.isStartLine && <>\n                                                            <nobr>\n                                                                {restInCpSoFar ? <>\n                                                                    <span class={totalRestClass}>\n                                                                        {util.secToHms(totalInCpTime + restInCpSoFar, true)}\n                                                                    </span> <span class='text-muted font-weight-lighter'>/ {util.secToHms(reqTotalRestInSec + (selectedMusher.timeEqualization * 60), true)}</span>\n                                                                </> : <>\n                                                                    {util.secToHms(totalInCpTime, true)}\n                                                                </>}\n                                                            </nobr>\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                                {/* {cp.timeEqualization && <>\n                                                    <br />\n                                                    {currentClass.requiredRestMinutes}\n                                                </>} */}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isStartLine || resScratched.timestamp ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {percentRest > 0 && <nobr>\n                                                        {util.format(percentRest || 0, 0)} <span class='text-muted font-weight-lighter'>%</span>\n                                                    </nobr>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {totalDistance} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                        </tr>\n                                    </>);\n                                    if (resOut && resOut.timestamp) {\n                                        lastEstTimeOut = resOut.timestamp;\n                                        lastAvgSpeed = avgSpeed;\n                                    }\n                                } else {\n                                    let estTimeIn;\n                                    let estTimeOut;\n                                    let estRest;\n                                    let movingTimeSoFar;\n                                    const distanceMeters = cp.distanceFromPrev * 1000;\n                                    const avgSpeedMs = lastAvgSpeed / 3.6;\n                                    let estTimeToNext = lastAvgSpeed ? (distanceMeters / avgSpeedMs / 60) : (cp.estTimeToCpMinutes || 0);\n                                    if (cp.isStartLine) {\n                                        estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                        estRest = 0;\n                                    } else if (lastEstTimeOut) {\n                                        estTimeIn = mu.addDeltaSec(lastEstTimeOut, estTimeToNext * 60);\n                                        // requiredRestMinutes: Number,\n                                        // estTimeToCpMinutes: Number,\n                                        // timeEqualization: Number,\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = (cp.estRestMinutes || 180) * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(estTimeIn, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n                                    if (lastResOut && lastResOut.timestamp) {\n                                        movingTimeSoFar = mu.deltaSec(lastResOut.timestamp, now);\n                                    }\n\n                                    avgSpeed = lastAvgSpeed || cp.distanceFromPrev / (estTimeToNext * 60 / 3600);\n                                    line = (\n                                        <tr>\n                                            <td>{cp.name}</td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info font-weight-light'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        est:\n                                                        <span class='text-muted mr-1 ml-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isFinishLine && estTimeOut && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && <nobr>\n                                                        {util.secToHms(cp.estTimeToCpMinutes * 60, true)}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar + totalMovingTime, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && !cp.isFinishLine && <nobr>\n                                                    {util.secToHms(estRest, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                        </tr>\n                                    );\n                                }\n                                lastResOut = resOut;\n                                lastResIn = resIn;\n                                return line;\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n\n                {/* <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(currentClass, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(lastResults, null, 4)}</xmp> */}\n            </MusherInfoHeader>\n        </>);\n    }\n}\n\nexport default RaceLiveMusherResult;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNews extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceArticle: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    addRaceArticle = async () => {\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceArticle } = this.state;\n\t\tawait raceStore.addArticle({ id: raceid, newArticle: newRaceArticle });\n\t\tthis.setState({\n\t\t\tnewRaceArticle: {},\n\t\t});\n\t}\n\n    editRaceArticle = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceArticleId: id,\n\t\t\t[`raceArticle${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editArticle({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    removeRaceArticle = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeArticle({\n\t\t\tid: raceid,\n\t\t\tarticleId: id,\n\t\t});\n\t}\n\n    updateArticleUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceArticle } = this.state;\n\t\tnewRaceArticle[field] = value;\n\t\tthis.setState({ newRaceArticle });\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceArticle } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const tags = ['news'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: News](/app-races/${race.id}/news)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.news'>Nyheter</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.articles && race.articles.reverse().map(currentArticle => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                <h5 class='mb-0'>{mu.replaceImages(currentArticle.title, race.images, language, false)}</h5>\n                                <small class='text-muted'> {util.formatDate(currentArticle.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                {currentArticle.image && <img src={currentArticle.image.s3LargeLink} class='float-right w-50 rounded-lg ml-2' />}\n                                <div class='font-weight-bold'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin News Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['ingress', 'body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n                {isAdmin && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                        <h5>Add new article</h5>\n                        {newRaceArticle && newRaceArticle.image && <img src={newRaceArticle.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n\n                        {['title'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        {['ingress', 'body'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    onKeyUp={this.resizeTextarea}\n                                    style='height: 3em;'\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        <Images saved={{}} object={{}} field={'image'} updateField={this.updateArticleUpload} autoOpen={false} />\n                        <button class='btn btn-info' onClick={this.addRaceArticle}>Add race article</button>\n                    </div>\n                </>}\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailNews;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceCommentReply extends Component {\n    commentRace = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await raceStore.commentReplyRace({ id: race.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ race, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-reply'>Write a reply...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        onFocus={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RaceCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport RaceComments from '../public/race/comments';\nimport RaceAddComment from '../public/race/commentAdd';\nimport RaceText from '../public/race/raceText';\nimport Images from '../../components/form/images';\nimport LikesAndComments from '../../components/feedback/likesAndComments';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nimport RaceResults from './results';\nimport RaceNews from './news';\nimport RaceSignup from './signup';\nimport RaceClasses from './classes';\nimport RaceMushers from './mushers';\nimport RaceUserImages from './userImages';\nimport RaceTracking from './tracking';\nimport RaceNotifications from './notifications';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nconst initialState = {\n\tisLoading: false,\n    showAdminSendMessage: {},\n\tnewRaceArticle: {},\n\tnewRaceUserImage: {},\n\tmessage: {\n\t\tsubject: '',\n\t\tbody: '',\n\t},\n};\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {\n            // relevant: 1,\n        };\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    scrollRaces = (e) => {\n        // scrollHeight: 705\n        // scrollLeft: 564\n        // scrollTop: 0\n        // scrollWidth: 1692\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const step = clientWidth;\n        const raceIdx = scrollLeft / step;\n\n        const nearestInt = Math.round(raceIdx);\n        const diff = Math.abs(nearestInt - raceIdx);\n        // console.log({ e, step, raceIdx, scrollLeft, scrollWidth, clientWidth, nearestInt, diff });\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(raceIdx) || diff < 0.5) {\n            this.setState({\n                raceIdx: nearestInt,\n            });\n        }\n    }\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    back = () => {\n        route(`/`);\n    }\n\n\trender() {\n\t\tconst { userStore, raceStore, newsStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { races = [] } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode } = appState;\n\t\tconst { showNews, hideRaces, raceIdx } = this.state;\n\n        const today = new Date();\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='row m-0'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-1 mb-2 p-0 text-center'>\n                        <h5><Text id='races.all-races'>All Races</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-1 mb-2 p-0'>\n                        <div class='row'>\n                            {races && races.reverse().map((race, idx) =>  {\n                                let status = '';\n                                if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                                    status = 'race';\n                                } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                                    status = 'signup';\n                                } else if (today > new Date(race.endDate)) {\n                                    status = 'done';\n                                }\n                                return (<>\n                                    <div\n                                        class={`col-12 mb-5 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}\n                                        style={`\n                                            scroll-snap-align: center;\n                                            flex-wrap: wrap;\n                                            overflow-y: hidden;\n                                        `}\n                                        onTouchstart={(e) => { e.stopPropagation(); }}\n                                        onTouchend={(e) => { e.stopPropagation(); }}\n                                        onTouchmove={(e) => { e.stopPropagation(); }}\n                                    >\n                                        <div class='row d-flex align-items-center position-relative'>\n                                            <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                                {status === 'signup' && !race.liveRace && <>\n                                                    <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                                </>}\n                                                {status === 'race' && <>\n                                                    <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                                </>}\n                                                {status === 'done' && <>\n                                                    <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                                </>}\n                                            </h5>\n                                            {(race.images && race.images[0]) && <>\n                                                <div\n                                                    class={`w-100`}\n                                                    style={`background-image: url(\"${race.images[0].s3LargeLink}\"); background-size: cover; height: 200px; background-repeat: no-repeat; background-position: 50% 50%;`}\n                                                    onClick={() => route(`/app-races/${race.id}`)}\n                                                />\n                                            </>}\n                                        </div>\n                                        <div class='position-relative'>\n                                            <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                                {status === 'signup' && <>\n                                                    <div class='spinner-grow text-primary' role='status' />\n                                                </>}\n                                                {status === 'race' && <>\n                                                    <div class='spinner-grow text-danger' role='status' />\n                                                </>}\n                                                {status === 'done' && <>\n                                                    <span><i class='fas fa-check text-success' /></span>\n                                                </>}\n                                            </h5>\n                                            <h5 class='pt-2'>\n                                                {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                                <a href={`/app-races/${race.id}`}>\n                                                    {race.title}\n                                                </a>\n                                            </h5>\n                                        </div>\n                                        <div class='w-100'>\n                                            <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\n                                        </div>\n                                        <div class='w-100'>\n                                            {race.classes && <>\n                                                <div class='mb-3'>\n                                                    <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n\n                                                    <div class='w-100 position-relative'>\n                                                        <div\n                                                            class='d-flex flex-row flex-nowrap'\n                                                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                        >\n                                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                                    {currentClass.title}\n                                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                                </span>\n                                                            </>)}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </>}\n                                        </div>\n                                        <div class='w-100 d-flex justify-content-between'>\n                                            <a href={`/app-races/${race.id}/tracking`} class='btn btn-primary'>\n                                                <Text id='races.tracking'>Tracking</Text>\n                                                <i class='fas fa-map-marked ml-2' />\n                                            </a>\n                                            <a href={`/app-races/${race.id}`} class='btn btn-primary'>\n                                                <Text id='races.read-more'>Les mer</Text>\n                                                <i class='fas fa-angle-double-right ml-2' />\n                                            </a>\n                                        </div>\n                                        <div class='w-100 d-flex justify-content-center'>\n                                            <small class='text-muted'>\n                                                <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                                {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n                        </div>\n                    </div>\n                </div>\n\n\n\n            </div>\n\t\t);\n\t}\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport RaceReplyComment from './commentReply';\n\nimport mu from '../../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass RaceComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceComment({ id: race.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', race, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceCommentReply({ id: race.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', race, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentRace({ id: race.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentReplyRace({ id: race.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentRace({ id: race.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentReplyRace({ id: race.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await raceStore.translateCommentReply({ commentid, replyid, race, user });\n        } else {\n            translatedText[key] = await raceStore.translateComment({ commentid, race, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { race, callback = () => {}, initCall = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (race.comments) {\n            totalComments = race.comments.length;\n            if (showAllComments) {\n                filteredComments = race.comments;\n            } else {\n                // filteredComments = race.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = race.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {race && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = raceStore.getCommentTranslations({\n                        race,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = raceStore.getCommentReplyTranslations({\n                                        race,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <RaceReplyComment stores={this.props.stores} race={race}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`race-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default RaceComments;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {\n};\n\n@observer\nclass RaceText extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { text } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\n        let finalText = text;\n\n        const regex = new RegExp(`/<${language}>(.*?)<\\/${language}>/`);\n        const parsedText = text.replace(regex, '$1');\n        if (parsedText) {\n            finalText = text;\n        }\n\n\t\treturn (\n\t\t\t<>\n                {finalText}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceText;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass Checkpoints extends Component {\n    render() {\n        const { checkpoints, thClass, thStyle, selectedCheckpointId, width, widthCp, onClickCheckpoint = () => {}, dotColor } = this.props;\n        return (<>\n            {checkpoints && checkpoints.map((cp, cpIdx) => <>\n                {cpIdx > 0 && <th class={thClass} style={thStyle}>\n                    <div class='' style={`width: ${width}px;`}>\n                        &nbsp;\n                    </div>\n                </th>}\n                <th class={thClass} style={thStyle}>\n                    <div\n                        class={`checkpoint position-relative ${selectedCheckpointId === cp.id ? 'text-primary' : ''}`}\n                        style={`width: ${widthCp}px; font-size: 1.1em;`}\n                        onClick={onClickCheckpoint}\n                        data-id={cp.id}\n                    >\n                        <i class='fas fa-campground' />\n\n                        <div\n                            class={`rounded-pill-both px-1 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: 0px; right: -20px; font-size: 0.6em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {cp.sortOrder && cp.sortOrder !== 'n/a' && <>{cp.sortOrder}</>}\n                        </div>\n\n                    </div>\n                </th>\n            </>)}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantLineCheckpoint extends Component {\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n@observer\nclass Contestants extends Component {\n    render() {\n        const {\n            currentClass,\n            contestants,\n            limit,\n            onClickMusher,\n            tdClass,\n            tdStyle,\n            progressStyle,\n            progressbarStyle,\n        } = this.props;\n\n        const { checkpoints = [], results = [] } = currentClass;\n        const finalContestants = contestants && limit ? contestants.slice(0, limit) : contestants;\n\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n\n        const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n        const now = Math.floor(new Date().getTime() / 1000, 10);\n\n        return (<>\n            {finalContestants && finalContestants.map((co, coIdx) => {\n                let cpIdx = 0;\n                let hasLeftCpPrev;\n                let bibIdxOutPrev;\n                let estTimeToCpMinutesPrev;\n                let hasScratchedPrev;\n                let totalInCpTime = 0;\n\n                let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(co.bib, 10)) : null;\n                selectedMusher = selectedMusher ? selectedMusher : {};\n\n                return(<>\n                    <tr class='musher' onClick={onClickMusher} data-bib={co.bib}>\n                        <td class={tdClass} style={tdStyle}>\n                            {co.startTime ? util.isoTime(co.startTime) : ''}\n                        </td>\n\n                        {checkpoints && checkpoints.map((cp, idx) => {\n                            const checkpointResults = results.slice().filter(e => e.checkpoint === cp.id).sort(fieldSorter(['timestamp']));\n                            const res = checkpointResults.filter(e => parseInt(e.bib, 10) == co.bib);\n                            const hasLeftCp = res.find(e => e.direction === 'out');\n                            const hasArrivedCp = res.find(e => e.direction === 'in');\n                            const hasScratched = res.find(e => e.direction === 'scratched');\n\n                            const allResultsIn = checkpointResults.filter(e => (e.direction === 'in' || e.direction === 'scratched'));\n                            const bibIdxIn = allResultsIn.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            const allResultsOut = checkpointResults.filter(e => e.direction === 'out');\n                            const bibIdxOut = allResultsOut.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            let timeInCp = 0;\n                            let percentInCp;\n                            if (!cp.isStartLine && hasArrivedCp && hasLeftCp && hasArrivedCp.timestamp && hasLeftCp.timestamp) {\n                                timeInCp = mu.deltaSec(hasArrivedCp.timestamp, hasLeftCp.timestamp);\n                            }\n                            totalInCpTime += timeInCp ? timeInCp : 0;\n\n                            if (!hasLeftCp && hasArrivedCp && !cp.isStartLine) {\n                                if (cp.timeEqualization && reqTotalRestInSec) {\n                                    const restInCpSoFar = mu.deltaSec(hasArrivedCp.timestamp, now);\n                                    // console.log({ reqTotalRestInSec, totalInCpTime, restInCpSoFar })\n                                    percentInCp = (totalInCpTime + restInCpSoFar) / reqTotalRestInSec * 100;\n                                    percentInCp = percentInCp > 100 ? 100 : percentInCp;\n                                    // console.log({ percentInCp })\n                                }\n                            }\n\n                            if (hasScratchedPrev) {\n                                return '';\n                            }\n\n                            if (bibIdxIn === -1)  {\n                                if (hasLeftCpPrev) {\n                                    const nowEpoch = Math.floor(new Date().getTime() / 1000);\n                                    const prevCpOutEpoch = Math.floor(new Date(hasLeftCpPrev.timestamp).getTime() / 1000);\n                                    const timeUsedOnStage = Math.floor((nowEpoch - prevCpOutEpoch) / 60);\n                                    // let percentDone = timeUsedOnStage / estTimeToCpMinutesPrev * 100;\n                                    let percentDone = timeUsedOnStage / cp.estTimeToCpMinutes * 100;\n                                    percentDone = percentDone > 95 ? 95 : percentDone;\n                                    const line = (<>\n                                        <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                            <div class='progress' style={`${progressStyle}`}>\n                                                <div\n                                                    class={`progress-bar progress-bar-striped`}\n                                                    role='progressbar'\n                                                    style={`width: ${percentDone}%; ${progressbarStyle}`}\n                                                    aria-valuenow={percentDone}\n                                                    aria-valuemin='0'\n                                                    aria-valuemax='100'\n                                                    data-prevtimestamp={hasLeftCpPrev.timestamp}\n                                                    data-timeUsedOnStage={timeUsedOnStage}\n                                                    data-estTimeToCpMinutesPrev={estTimeToCpMinutesPrev}\n                                                    data-nowEpoch={nowEpoch}\n                                                    data-prevCpOutEpoch={prevCpOutEpoch}\n                                                >{bibIdxOutPrev + 1 > 0 ? bibIdxOutPrev + 1 : ''}</div>\n                                            </div>\n\n                                            {/* estTimeToCpMinutesPrev: {estTimeToCpMinutesPrev}\n                                            timeUsedOnStage: {timeUsedOnStage}\n                                            percentDone: {percentDone} */}\n                                            {co.cpId && res.length > 0 && <>\n                                                {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                            </>}\n                                        </td>\n                                    </>);\n                                    bibIdxOutPrev = bibIdxOut;\n                                    hasLeftCpPrev = hasLeftCp;\n                                    estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                    return line;\n                                }\n                                return '';\n                            }\n                            cpIdx = idx;\n                            bibIdxOutPrev = bibIdxOut;\n                            hasLeftCpPrev = hasLeftCp;\n                            estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n\n                            const output = (<>\n                                {(hasArrivedCp || hasScratched) && idx > 0 && <>\n                                    <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                        <div class='progress' style={`${progressStyle}`}>\n                                            <div\n                                                class={`progress-bar`}\n                                                role='progressbar'\n                                                style={`width: 100%; ${progressbarStyle}`}\n                                                aria-valuenow='100'\n                                                aria-valuemin='0'\n                                                aria-valuemax='100'\n                                            />\n                                        </div>\n                                        {co.cpId && res.length > 0 && <>\n                                            {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                        </>}\n                                    </td>\n                                </>}\n                                <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                    <div class='progress' style={`${progressStyle}`}>\n                                        <div\n                                            class={`progress-bar ${percentInCp > 0 ? 'progress-bar-striped' : ''} ${hasScratched ? 'bg-danger' : 'bg-success'}`}\n                                            role='progressbar'\n                                            style={`width: ${percentInCp || 100}%; ${progressbarStyle}`}\n                                            aria-valuenow={percentInCp}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        >{hasScratched ? <i class='fas fa-times' /> : <>{bibIdxIn + 1 > 0 ? bibIdxIn + 1 : ''}</>}</div>\n                                    </div>\n                                    {co.cpId && res.length > 0 && <>\n                                        {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                    </>}\n                                </td>\n                            </>);\n\n                            hasScratchedPrev = hasScratched;\n                            return output;\n                        })}\n                        <td colspan={checkpoints.length * 2 - cpIdx} class={tdClass} style={tdStyle}>\n                            <div class='d-flex flex-nowrap'>\n                                <div\n                                    class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                    style={`background-color: ${mu.getRankingColor(coIdx + 1)}; width: 45px;`}\n                                >\n                                    {co.bib}\n                                </div>\n                                <div>\n                                    <nobr>\n                                        {co.flag} {co.lastname}\n                                    </nobr>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </>);\n            })}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantCheckpoint extends Component {\n\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n\n@observer\nclass RaceLiveResults extends Component {\n    componentWillReceiveProps(nextProps) {\n        if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n            const { currentClass } = this.props;\n            const { raceStore } = this.props.stores;\n            const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n        }\n\t}\n\n    componentDidMount() {\n        const { currentClass } = this.props;\n        const { raceStore } = this.props.stores;\n        const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n\t}\n\n    render() {\n        const widthCp = 20;\n        const width = 40;\n\t\tconst {\n            race,\n            currentClass,\n            onClickMusher = () => {},\n            onClickCheckpoint = () => {},\n            selectedCheckpointId,\n            limit = 100,\n            tableClass = 'table-striped table-sm',\n            thClass,\n            thStyle,\n            tdClass,\n            tdStyle,\n            progressStyle = 'height: 20px;',\n            progressbarStyle,\n        } = this.props;\n        const { checkpoints = [], sortOrderResults } = currentClass;\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n        const dotColor = '#808080';\n\n\t\treturn (<>\n            <div class='table-responsive'>\n                <table class={`table ${tableClass}`}>\n                    <thead>\n                        <tr>\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${width}px;`}>\n                                    <i class='fas fa-flag' />\n                                </div>\n                            </th>\n\n                            <Checkpoints stores={this.props.stores}\n                                checkpoints={checkpoints}\n                                thClass={thClass}\n                                thStyle={thStyle}\n                                selectedCheckpointId={selectedCheckpointId}\n                                width={width}\n                                widthCp={widthCp}\n                                onClickCheckpoint={onClickCheckpoint}\n                                dotColor={dotColor}\n                            />\n\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${widthCp}px;`}>\n                                    <i class='fas fa-flag-checkered' />\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <Contestants\n                            stores={this.props.stores}\n                            currentClass={currentClass}\n                            contestants={sortedContestants}\n                            limit={limit}\n                            onClickMusher={onClickMusher}\n                            tdClass={tdClass}\n                            tdStyle={tdStyle}\n                            progressStyle={progressStyle}\n                            progressbarStyle={progressbarStyle}\n                        />\n                    </tbody>\n                </table>\n            </div>\n\t\t</>);\n\t}\n}\n\nexport default RaceLiveResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n// const fieldSorter = (fields) => (a, b) => fields.map(o => {\n//     let dir = 1;\n//     if (o[0] === '-') { dir = -1; o=o.substring(1); }\n//     return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n// }).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            // this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    // insertWorkouts = () => {\n    //     const { storyStore } = this.props.stores;\n    //     const { publicWorkouts, publicFeed } = storyStore;\n    //     if (publicWorkouts.length) {\n    //         const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n    //         storyStore.localUpdateField('publicFeed', finalArray);\n    //     }\n    // }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories, publicDogs } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={publicDogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport DogScroller from '../dog/scroller';\nimport ImageScroller from '../imageScroller';\nimport RaceTrackingMusherDetail from '../public/raceTrackingMusherDetail';\n\n@observer\nclass MusherInfoHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { contestant = {}, onMarkerClick = () => {}, children, rank } = this.props;\n        const wp = raceStore.findWaypointByBib(contestant.bib);\n\n        const { isAdmin } = userStore;\n        const musher = (contestant.bib ? raceStore.getMusherByBibId(contestant.bib) : raceStore.getMusherByBibEmail(contestant.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(contestant.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        let image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = contestant.color;\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(contestant.bib);\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n            />\n\n            <div class='d-flex position-relative' style='margin-top: 17vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; font-size: 1.2em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {/* {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>} */}\n                        {rank && <>{rank}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-0' style='line-height: 1.2em;'>\n                    <h5 class='mb-0'>\n                        <div class='d-flex flex-nowrap'>\n                            <div\n                                class='text-white font-weight-bold pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                style={`background-color: ${mu.getRankingColor(rank)}; width: 55px;`}\n                            >\n                                {musher.bib}\n                            </div>\n                            <div>\n                                <nobr>\n                                    {musher.flag} {musher.firstname} {musher.lastname}\n                                </nobr>\n                            </div>\n                        </div>\n                    </h5>\n                    <span class='mb-0' style='margin-left: 93px;'>{musher.sportsClub || team.name || <>&nbsp;</>}</span>\n                </div>\n            </div>\n\n            <div class='d-flex justify-content-center mb-3'>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='details'\n                    >\n                        Details\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'gpsdata' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='gpsdata'\n                    >\n                        GPS Data\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='team'\n                    >\n                        Team\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='dogs'\n                    >\n                        Dogs\n                    </button>\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                // style='max-height: 60vh;'\n            >\n                {submenu === 'details' && <>\n                    {children}\n                </>}\n\n                {submenu === 'gpsdata' && <>\n                    <RaceTrackingMusherDetail\n                        stores={this.props.stores}\n                        wp={wp}\n                        musher={musher}\n                    />\n                </>}\n\n                {submenu === 'team' && <>\n                    {team.public > 0 ? <>\n                        <h3>{team.name}</h3>\n                        <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        <ImageScroller stores={this.props.stores} images={teamImages} />\n\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                        </div>\n                    </>}\n                </>}\n\n                {submenu === 'dogs' && <>\n                    {team.public > 0 ? <>\n                        {team.dogs && <div class='w-100 container-fluid'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n                        {showDog && <>                    \n                            <div class='d-flex mb-0 mt-3 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pr-2'\n                                    style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                >\n                                    <h5 class='mb-1'>\n                                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </h5>\n                                    <div>\n                                        {daysUntilBirthday < 7 && <>\n                                            <span class='text-muted mr-2'>\n                                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                            </span>\n                                        </>}                                \n                                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                        </>}\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                    <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                        Toggle admin info\n                    </button>\n                    {showAdminInfo && <>\n                        <small>\n                            <xmp>\n                                musher: {JSON.stringify(musher, null, 4)}<br />\n                                user: {JSON.stringify(user, null, 4)}<br />\n                                team: {JSON.stringify(team, null, 4)}<br />\n                                totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                {/* {\n                                    \"firstDate\": \"2021-03-19 11:59\",\n                                    \"lastDate\": \"2021-03-20 17:13\",\n                                    \"firstEpoch\": 1616151540000,\n                                    \"lastEpoch\": 1616256780000,\n                                    \"now\": {\n                                        \"$numberDecimal\": \"1642675856939\"\n                                    },\n                                    \"totalTimeUsedSec\": 26524316,\n                                    \"totalWorkoutTimeUsedSec\": 130895,\n                                    \"lastDuration\": 25655,\n                                    \"team\": 84,\n                                    \"count\": 4,\n                                    \"distanceKm\": 301.5906237951766,\n                                    \"elevation\": 3610.019075719202,\n                                    \"duration\": 77343,\n                                    \"rest\": 1332,\n                                    \"speedAvg\": 8.294634979660305,\n                                    \"totalRest\": 54884,\n                                    \"loadIndex\": 1080.75,\n                                    \"totalKcalRelated\": 544.535560976128,\n                                    \"weightedTotalKcal\": 12303.171406247127,\n                                    \"flatTotalKcal\": 9424.70699359927,\n                                    \"firstGpxStartEpoch\": null,\n                                    \"lastGpxStartEpoch\": null\n                                } */}\n\n                            </xmp>\n                        </small>\n                    </>}\n                </div>}\n                <div class='d-flex position-absolute' style='right: 10px; bottom: 10px;'>\n                    {inFront.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-left' />\n                    </a>}\n                    {behind.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-right' />\n                    </a>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default MusherInfoHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Drawer from '../../components/drawer/';\nimport DogsEditBaseInfo from '../../components/dog/editBaseInfo';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { userStore } = this.props.stores;\n        const { user } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        userStore.removeImage({\n            id: user.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { user, field, updateField } = this.props;\n        updateField({ id: user.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, user, type = 'text', field, title, icon, help, onInput, updateField } = this.props;\n        const value = user[field];\n        const byMd5 = e => user.image ? e.md5 !== user.image.md5 : true;\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {user.image && user.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={user.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={user.image.name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {user.images && user.images.filter(byMd5).map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={user} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={user} field={field} updateField={updateField} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={user.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogLine extends Component {\n    render() {\n        const { dog, children, onDogClick = () => {} } = this.props;\n\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { vaccineLogStatuses } = userStore;\n\n        return(\n            <div\n                class='d-flex mb-0 position-relative mb-3 dogInfo'\n                data-id={dog.id}\n            >\n                <div>\n                    <div class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''}>\n                        {/* {!dog.image && <i class='fas fa-dog mt-3' style='font-size: 40px;' />} */}\n                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 pr-2' onClick={onDogClick}>\n                    {children}\n                    <span class='float-right'>\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                    <h6 class='mb-1' style='line-height: 1.0em;'>\n                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                    </h6>\n                    {dog.chipId ? <>\n                        <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                    </> : <>\n                        <div class='alert alert-danger' role='alert'>\n                            <Text id='races.missing-chipid'>Missing chid id</Text>\n                        </div>\n                    </>}\n\n                    <div>\n                        {vaccineLogStatuses && vaccineLogStatuses.filter(e => e.chipId === dog.chipId).map((vac) => {\n                            return (\n                                <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'} mr-2 mb-1`}>\n                                    {vac.vaccineAgens.name}\n                                    <span class='font-weight-lighter ml-2 d-none d-sm-block'>\n                                        <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                        {vac.inKarens && <>\n                                            <br />\n                                            (karens: {util.format(vac.karensDaysLeft, 0)} days left)\n                                        </>}\n                                    </span>\n                                </span>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submenu: 'info',\n            showDrawer: false,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { userStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { user } = userStore;\n        if (field === 'images') {\n            if (Array.isArray(user.images) && Array.isArray(value)) {\n                localObjectValue = [...user.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        userStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { userStore } = this.props.stores;\n        await userStore.saveField(id, field, value);\n    }\n\n\tsignupToRace = async () => {\n\t\tconst { raceStore, userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { signup } = raceStore;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\tteam: user.team,\n\t\t\t\tfirstname: user.firstname,\n\t\t\t\tlastname: user.lastname,\n\t\t\t\tsportsClub: user.sportsClub,\n\t\t\t\temail: user.email,\n\t\t\t\tcellphone: user.cellphone,\n\t\t\t\tfacebook: user.facebook,\n\t\t\t\tinstagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    updateSignup = (e) => {\n        const key = e.target.id;\n        const value = e.target.value;\n        const { raceStore } = this.props.stores;\n        raceStore.updateObjectKeyValue('signup', key, value);\n    }\n\n    editSignup = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.localUpdateSignup(field, value);\n            if (field === 'team') {\n                await raceStore.loadTeams(value, true);\n            }\n\t\t}, 500);\n    }\n\n    clearSignupValue = async (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = 'null';\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n        raceStore.editClass({\n            id: raceid,\n            data,\n        });\n        raceStore.localUpdateSignup(field, value);\n        if (field === 'team') {\n            await raceStore.loadTeams(value, true);\n        }\n    }\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        this.setState({\n            showDrawer: !showDrawer,\n        });\n    }\n\n    onDogClick = (e) => {\n        const { id } = e.target.closest('.dogInfo').dataset;\n        console.log('onDogClick', id);\n        const { userStore, raceStore } = this.props.stores;\n        const { signup } = raceStore;\n        const dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        const currentDog = dogs.find(e => e.id == id);\n        this.setState({\n            showDrawer: true,\n            currentDog,\n        });\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n    render() {\n        const { submenu, showDrawer, currentDog } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, saved } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const { signup } = raceStore;\n\n        let signupClass = {};\n        let dogs = [];\n        if (signup.class) {\n            signupClass = raceStore.getRaceClassById(signup.class);\n        }\n        if (signup.team) {\n            dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        }\n        const { vaccineLogStatuses } = userStore;\n\t\tconst today = new Date();\n\n        const chosenDogChipIds = mu.getAlphabet(signupClass.dogs).filter(letter => signup[`dog${letter}`]).map(letter => signup[`dog${letter}`]);\n        const byNotChosen = e => chosenDogChipIds.indexOf(e.chipId) === -1;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.signup'>Påmelding</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    {today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate) ? <>\n                        <span class='font-weight-lighter'><Text id='races.signed-in-as'>Logget inn som</Text>:</span> {user.email}<br /><br />\n                        {signup.id ? <>\n                            <div class='font-weight-bold mb-4'>\n                                <i class='fas fa-check text-success' /> <Text id='races.signed-up'>Din bruker er påmeldt!</Text><br />\n                                {/* <xmp>{JSON.stringify(signup, null, 4)}</xmp> */}\n                            </div>\n\n                            {!race.liveRace && race.signuppayment && <>\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-2 col-form-label text-right font-weight-lighter'><Text id='races.signup'>Påmelding</Text></label>\n                                    <div class='col-10'>\n                                        {signup.paidSignupfee ? <div class='py-2'>\n                                            <Text id='races.paid'>Betalt</Text>: {util.formatDate(signup.paidSignupfee)}\n                                            <i class='fas fa-check text-success ml-3' />\n                                        </div> : <>\n                                            <div class='alert alert-danger mb-1' role='alert'>\n                                                <h5>\n                                                    <span class='font-weight-lighter'><Text id='races.payment-info'>Betaling påmelding</Text>:</span><br />\n                                                    <Markdown markdown={mu.replaceImages(race.signuppayment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                    {signupClass.signupfee || race.signupfee} NOK\n                                                </h5>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n\n\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='race.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'chiplist' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='chiplist'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-ol' /> <Text id='race.chiplist'>Chiplist</Text></button>\n                                    </div>\n                                    {/* <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-dog' /> <Text id='race.team'>Team</Text></button>\n                                    </div> */}\n                                </div>\n                            </div>\n\n                            {submenu === 'info' && <>\n                                <div class='form-group row my-5'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>\n                                        <Text id='races.team'>Team</Text>\n                                    </label>\n                                    <div class='col-9'>\n                                        <select class='form-control form-control-lg' id='team' aria-describedby='teamHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.team}\n                                        >\n                                            <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                            {teams.map(team =>\n                                                <option value={team.id}>{team.name}</option>\n                                            )}\n                                        </select>\n                                        {signup.team ? <>\n                                            {/* <div class='alert alert-success' role='alert'>\n                                                A simple success alert—check it out!\n                                            </div> */}\n                                        </> : <>\n                                            <div class='alert alert-danger clearfix' role='alert'>\n                                                <span class='display-4 float-left mr-3'>\n                                                    <i class='fas fa-exclamation-triangle' />\n                                                </span>\n                                                <Text id='races.choose-race-team' fields={{ title: race.title }}>Please choose race team for {race.title}</Text>\n                                            </div>\n                                        </>}\n                                        {/* <details>\n                                            <summary>\n                                                <i class='fas fa-info-circle' /> <Text id='races.team-about'>About teams</Text>\n                                            </summary>\n                                            <Text id='races.team-help'>\n                                                <ol>\n                                                    <li>Create a team for your race dogs.</li>\n                                                    <li>Add the dogs you want to use for this race.</li>\n                                                    <li>Choose the team for this race.</li>\n                                                </ol>\n                                            </Text>\n                                        </details> */}\n                                    </div>\n                                </div>\n\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='cellphone'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.cellphone}\n                                                placeholder={<Text id='races.cellphone-help'>Hva er mobilnummer ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                {signup.name && <div class='form-group row my-2'>\n                                    <label for='name' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.name'>Navn</Text></label>\n                                    <div class='col-9'>\n                                        {signup.name}\n                                    </div>\n                                </div>}\n                                <div class='form-group row my-2'>\n                                    <label for='firstname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.firstname'>Fornavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='firstname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.firstname}\n                                                placeholder={<Text id='races.firstname-help'>Hva er fornavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='lastname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.lastname'>Etternavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='lastname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.lastname}\n                                                placeholder={<Text id='races.lastname-help'>Hva er etternavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='sportsClub' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='sportsClub'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.sportsClub}\n                                                placeholder={<Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='facebook' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.facebook'>Facebook</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='facebook'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.facebook}\n                                                placeholder={<Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='instagram' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.instagram'>Instagram</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='instagram'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.instagram}\n                                                placeholder={<Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.class'>Klasse</Text></label>\n                                    <div class='col-9'>\n                                        <select class='form-control' id='class' aria-describedby='classHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.class}\n                                            disabled\n                                        >\n                                            <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <option value={currentClass.id}>\n                                                    {currentClass.title}{!race.liveRace && <>\n                                                        - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK\n                                                    </>}\n                                                </option>\n                                            </>)}\n                                        </select>\n                                    </div>\n                                </div>\n                                {race.rules && <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>&nbsp;</label>\n                                    <div class='col-9 pl-5'>\n                                        <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            checked={signup.termsAndAgreement}\n                                            value={1}\n                                        />\n                                        <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                    </div>\n                                </div>}\n                                {race.declaration && <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top'>\n                                        <h5><Text id='races.declaration'>Declaration</Text></h5>\n                                    </div>\n                                    <details class='col-12'>\n                                        {signup.declaration ? <>\n                                            <summary>\n                                                <Text id='races.see-declaration'>See declaration</Text> (<span class='text-muted font-weight-light'><Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}</span>)\n                                            </summary>\n                                        </> : <>\n                                            <summary>\n                                                <h5 class='btn btn-primary'><Text id='races.see-declaration'>See declaration</Text></h5>\n                                            </summary>\n                                        </>}\n\n                                        <Markdown markdown={mu.replaceImages(race.declaration, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\n                                        {signup.declaration ? <>\n                                            <i>\n                                                <Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}\n                                            </i>\n                                        </> : <>\n                                            <div class='pl-5'>\n                                                <input type='checkbox' class='form-check-input' id='declaration'\n                                                    data-classid={signup.class}\n                                                    data-contestantid={signup.id}\n                                                    onInput={this.editSignup}\n                                                    checked={signup.declaration}\n                                                    value={1}\n                                                />\n                                                <label class='form-check-label' for='declaration'><Text id='races.declaration-accept'>I hereby sign the declaration for the race!</Text></label>\n                                            </div>\n                                        </>}\n                                    </details>\n                                </div>}\n\n                                <Input saved={saved} user={user} field='image' icon='fas fa-camera' type='image'\n                                    stores={this.props.stores}\n                                    title={<Text id='users.photos'>Bilder</Text>}\n                                    help={<Text id='users.photos-help'>Bilder av deg.</Text>}\n                                    onInput={this.updateField} updateField={this.updateFieldValue} />\n\n                            </>}\n\n                            {submenu === 'chiplist' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top pt-3'>\n                                        <h5><Text id='races.chiplist'>Chiplist</Text></h5>\n                                    </div>\n\n                                    {signupClass && signupClass.dogs && mu.getAlphabet(signupClass.dogs, ['R1', 'R2']).map(letter => {\n                                        const chosenDog = dogs && dogs.length > 0 ? dogs.find(e => e.chipId === signup[`dog${letter}`]) : null;\n                                        return (<>\n                                            <div class='col-12 center border-top pt-3 d-flex'>\n                                                <div class='display-4' style='width: 50px;'>\n                                                    {letter}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pr-2'>\n                                                    {chosenDog ? <>\n                                                        <DogLine stores={this.props.stores} dog={chosenDog} onDogClick={this.onDogClick}>\n                                                            <button\n                                                                class='btn btn-danger float-right ml-2'\n                                                                onClick={this.clearSignupValue}\n                                                                id={`dog${letter}`}\n                                                                data-classid={signup.class}\n                                                                data-contestantid={signup.id}\n                                                            >\n                                                                <i class='fas fa-times' />\n                                                            </button>\n                                                        </DogLine>\n                                                    </> : <>                                                \n                                                        <select class='form-control p-0'\n                                                            id={`dog${letter}`}\n                                                            data-classid={signup.class}\n                                                            data-contestantid={signup.id}\n                                                            onInput={this.editSignup}\n                                                        >\n                                                            <option value=''>-- Choose dog for this position --</option>\n                                                            {dogs.filter(byNotChosen).map(dog => <>\n                                                                <option value={dog.chipId} selected={dog.chipId === signup[`dog${letter}`] ? 'selected' : ''}>\n                                                                    {dog.shortname || dog.name} - {dog.birth && <>{util.age(dog.birth, dog.deceased)}</>} {dog.gender === 'female' ? '♀️' : '♂️'}\n                                                                </option>\n                                                            </>)}\n                                                        </select>\n                                                    </>}\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n\n                                </div>\n                            </>}\n\n                            {submenu === 'team' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 border-top pt-3'>\n                                        {dogs && dogs.length > 0 ? <>\n                                            {dogs.map(dog => <>\n                                                <DogLine stores={this.props.stores} dog={dog} />\n                                            </>)}\n                                        </> : <>\n                                            <div class='text-center text-muted'>\n                                                <div class='display-1'>\n                                                    <i class='fas fa-dog' />\n                                                </div>\n                                                <h3 class='font-weight-lighter'>\n                                                    <Text id='race.add-dogs'>Add a team to your race signup to see the dogs.</Text>\n                                                </h3>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n                        </> : <>\n\n                            {race.liveRace ? <>\n                                Signup is done at the race normal web pages.\n                            </> : <>\n                                <div class='form-group'>\n                                    <label for='cellphone'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <input type='text' class='form-control' id='cellphone' aria-describedby='cellphoneHelp'\n                                        placeholder={user.cellphone}\n                                        onInput={this.updateSignup}\n                                        value={signup.cellphone}\n                                    />\n                                    <small id='cellphoneHelp' class='form-text text-muted'><Text id='races.cellphone-help'>'Hva er mobilnummer ditt?'</Text></small>\n                                </div>\n\n                                {signup.name && <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='name'><Text id='races.name'>Name</Text></label>\n                                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp'\n                                                placeholder={user.name}\n                                                onInput={this.updateSignup}\n                                                value={signup.name}\n                                            />\n                                            <small id='nameHelp' class='form-text text-muted'><Text id='races.name-help'>Hva er navnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>}\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='firstname'><Text id='races.firstname'>Fornavn</Text></label>\n                                            <input type='text' class='form-control' id='firstname' aria-describedby='firstnameHelp'\n                                                placeholder={user.firstname}\n                                                onInput={this.updateSignup}\n                                                value={signup.firstname}\n                                            />\n                                            <small id='firstnameHelp' class='form-text text-muted'><Text id='races.firstname-help'>Hva er fornavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='lastname'><Text id='races.lastname'>Etternavn</Text></label>\n                                            <input type='text' class='form-control' id='lastname' aria-describedby='lastnameHelp'\n                                                placeholder={user.lastname}\n                                                onInput={this.updateSignup}\n                                                value={signup.lastname}\n                                            />\n                                            <small id='lastnameHelp' class='form-text text-muted'><Text id='races.lastname-help'>Hva er etternavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='sportsClub'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <input type='text' class='form-control' id='sportsClub' aria-describedby='sportsClubHelp'\n                                        placeholder={user.sportsClub}\n                                        onInput={this.updateSignup}\n                                        value={signup.sportsClub}\n                                    />\n                                    <small id='sportsClubHelp' class='form-text text-muted'><Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text></small>\n                                </div>\n\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='facebook'><Text id='races.facebook'>Facebook</Text></label>\n                                            <input type='text' class='form-control' id='facebook' aria-describedby='facebookHelp'\n                                                placeholder={user.facebook}\n                                                onInput={this.updateSignup}\n                                                value={signup.facebook}\n                                            />\n                                            <small id='facebookHelp' class='form-text text-muted'><Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='instagram'><Text id='races.instagram'>Instagram</Text></label>\n                                            <input type='text' class='form-control' id='instagram' aria-describedby='instagramHelp'\n                                                placeholder={user.instagram}\n                                                onInput={this.updateSignup}\n                                                value={signup.instagram}\n                                            />\n                                            <small id='instagramHelp' class='form-text text-muted'><Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='team'><Text id='races.team'>Team</Text></label>\n                                    <select class='form-control' id='team' aria-describedby='teamHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.team}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                        {teams.map(team =>\n                                            <option value={team.id}>{team.name}</option>\n                                        )}\n                                    </select>\n                                    <small id='teamHelp' class='form-text text-muted'><Text id='races.choose-team-help'>Velg fra dine team</Text></small>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='class'><Text id='races.class'>Klasse</Text></label>\n                                    <select class='form-control' id='class' aria-describedby='classHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.class}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                        {race.classes && race.classes.map(currentClass => <>\n                                            <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                        </>)}\n                                    </select>\n                                    <small id='classHelp' class='form-text text-muted'><Text id='races.choose-class-help'>Velg ønsket klasse.</Text></small>\n                                </div>\n\n                                <div class='form-group form-check'>\n                                    <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                        onInput={this.updateSignup}\n                                        checked={signup.termsAndAgreement}\n                                        value={true}\n                                    />\n                                    <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                </div>\n                                <button type='button' class='btn btn-primary' onClick={this.signupToRace}><Text id='races.do-signup'>Meld meg på</Text></button>\n                            </>}\n\n                        </>}\n\n                    </> : <>\n                        {today < new Date(race.signupStartDate) ? <>\n                            <h5 class='mt-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-not-open-yet'>Påmeldingen har ikke åpnet ennå!</Text>\n                            </h5>\n                            <p class='mt-4'>\n                                <Text id='races.signup-opening'>Påmeldingen åpner</Text>:<br />\n                                <span class='display-4'>{util.formatDate(race.signupStartDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</span>\n                            </p>\n                        </> : <>\n                            <h5 class='mt-4 mb-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-closed'>Påmeldingen er stengt!</Text>\n\n                                {/* {JSON.stringify(signup, null, 4)} */}\n                            </h5>\n                        </>}\n                    </>}\n                </div>\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <DogsEditBaseInfo\n                        stores={this.props.stores}\n                        id={currentDog.id}\n                    />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport ImageScroller from '../../components/imageScroller';\n\nfunction nl2br($str) {\n\tif (typeof $str === 'string') {\n\t\treturn $str.replace(/[\\n]/g, '<br>');\n\t}\n\treturn $str;\n}\n\nfunction byBib(a, b) {\n    const aHas = typeof a.bib !== 'undefined';\n    const bHas = typeof b.bib !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.bib - b.bib) || 0;\n}\n\n@observer\nclass AppRaceDetailMushers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayDetails: {},\n            editUserDetails: {},\n            showAdminSendMessage: {},\n            showAdminImport: {},\n            message: {},\n            inboxMessage: {},\n            submenu: 'chiplists',\n            preCheck: {},\n            raceCheck: {},\n            dogJournals: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n        this.parseInputTimer = null;\n    }\n\n    toggleDisplayDetails = (e) => {\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { editUserDetails } = appState;\n\t\tif (!editUserDetails[id]) {\n\t\t\tappState.toggleDisplayDetails(id)\n\t\t}\n\t}\n\n    adminToggleEditUser = async (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState, raceStore, adminStore } = this.props.stores;\n        const { editUserDetails } = appState;\n\n        if (!editUserDetails[id]) {\n            const musher = raceStore.getMusherById(id);\n            await adminStore.getUserByEmail(musher.email);\n            // console.log({ musher, user, teams });\n        }\n\t\tappState.toggleEditUserDetails(id)\n\t}\n\n    veterinaryToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleVeterinaryUserDetails(id, true)\n\t}\n\n    toggleAdminSendMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendMessage } = this.state;\n\t\tshowAdminSendMessage[classId] = !showAdminSendMessage[classId];\n\t\tthis.setState({ showAdminSendMessage });\n\t}\n\n    toggleAdminSendInboxMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendInboxMessage = {} } = this.state;\n\t\tshowAdminSendInboxMessage[classId] = !showAdminSendInboxMessage[classId];\n\t\tthis.setState({ showAdminSendInboxMessage });\n\t}\n\n    toggleAdminImport = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminImport } = this.state;\n\t\tshowAdminImport[classId] = !showAdminImport[classId];\n\t\tthis.setState({ showAdminImport });\n\t}\n\n    adminSignupEdit = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n    adminSignupSetValue = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const { field, value, classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 5);\n    }\n\n\tsendEmail = async (e) => {\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst to = e.target.closest('button').dataset.to;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { message } = this.state;\n\t\tconst { subject, body } = message;\n\t\tconst emailResponse = await appState.sendEmail({\n\t\t\tto,\n\t\t\tsubject,\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ emailResponse });\n\t}\n\n\tresetEmail = () => {\n\t\tthis.setState({\n\t\t\temailResponse: null,\n\t\t\tmessage: {\n\t\t\t\tsubject: '',\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    sendInboxMessage = async (e) => {\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { inboxMessage } = this.state;\n\t\tconst { body } = inboxMessage;\n\t\tconst inboxMessageResponse = await raceStore.sendInboxMessage({\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ inboxMessageResponse });\n\t}\n\n    resetInboxMessage = () => {\n\t\tthis.setState({\n\t\t\tinboxMessage: {\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    signupToRace = async ({ signup }) => {\n\t\tconst { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\t// team: user.team,\n\t\t\t\t// firstname: user.firstname,\n\t\t\t\t// lastname: user.lastname,\n\t\t\t\t// sportsClub: user.sportsClub,\n\t\t\t\t// email: user.email,\n\t\t\t\t// cellphone: user.cellphone,\n\t\t\t\t// facebook: user.facebook,\n\t\t\t\t// instagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    parseInput = async (data, classId) => {\n        clearTimeout(this.parseInputTimer);\n        this.parseInputTimer = setTimeout(() => this.doParseInput(data, classId), 500);\n    }\n\n    doParseInput = async (data, classId) => {\n        const lines = String(data).split('\\n');\n        let headers = [];\n        const jsonData = [];\n\n        // Get headers\n        const firstLine = lines[0];\n        if (firstLine.match(/\\t/)) {\n            headers = firstLine.split('\\t');\n        } else if (firstLine.match(/;/)) {\n            headers = firstLine.split(';');\n        } else {\n            headers = firstLine.split(',');\n        }\n\n        // Map data to headernames\n        for (let i = 1, l = lines.length; i < l; i += 1) {\n            const line = lines[i];\n            let values;\n            if (line.match(/\\t/)) {\n                values = line.split('\\t');\n            } else if (line.match(/;/)) {\n                values = line.split(';');\n            } else {\n                values = line.split(',');\n            }\n            const jsonObject = {};\n            values.forEach((v, idx) => {\n                let val = v;\n                if (headers[idx] === 'email') {\n                    val = v.toLowerCase();\n                }\n                jsonObject[headers[idx]] = val;\n            });\n            jsonData.push(jsonObject);\n        }\n\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        raceStore.addMultipleContestants({ id: raceid, classId, contestants: jsonData });\n        return true;\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n\t}\n\n    clearSearchForBib = () => {\n        this.setState({ searchForBib: '' });\n    }\n\n    savePreCheck = async (e) => {\n        const { id, chipid, name, shortname, team } = e.target.closest('button').dataset;\n        const { preCheck, dogJournals } = this.state;\n        const { dogJournalStore, userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\n        const vetData = {\n            id: user.id,\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email,\n            image: user.image,\n        };\n\n        const dogData = {\n            id,\n            chipId: chipid,\n            name,\n            shortname,\n            team,\n        };\n\n        const preCheckOject = util.getNestedValue(preCheck, id) || {};\n        const journalData = {\n            checkType: 'preCheck',\n            ...preCheckOject,\n        };\n\n        const data = [{\n            dog: { ...dogData },\n            journal: { ...journalData },\n            veterinary: { ...vetData },\n        }];\n\n        if (!dogJournals[chipid]){\n            dogJournals[chipid] = [];\n        }\n        dogJournals[chipid].push({\n            date: new Date(),\n            ...dogData,\n            ...journalData,\n            ...vetData,\n        });\n\n        await dogJournalStore.insert({ data });\n        delete preCheck[id];\n        this.setState({ preCheck });\n    }\n\n    render() {\n        const {\n            showAdminSendMessage = {}, showAdminSendInboxMessage = {}, showAdminImport = {},\n            message = {}, inboxMessage = {},\n            inboxMessageResponse, emailResponse, submenu, searchForBib,\n            preCheck = {},\n            raceCheck = {},\n            dogJournals = {},\n        } = this.state;\n\t\tconst { userStore, raceStore, appState, adminStore } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, isVeterinary } = userStore;\n        const { language = 'en' } = user;\n        const { displayDetails, editUserDetails, veterinaryUserDetails, selectedClassIds = [] } = appState;\n\n\t\tconst { race = {} } = this.props;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const filterByBib = (c) => {\n\t\t\tif (searchForBib) {\n                const regex = new RegExp(`${searchForBib.replace(/[^a-zA-Z 0-9æøåÆØÅ]/, '')}`, 'i');\n\t\t\t\treturn (regex.test(c.bib) || regex.test(c.firstname) || regex.test(c.lastname));\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { user: selectedUser = {}, teams: selectedUserTeams } = adminStore;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.mushers'>Deltakere</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\n                    <div class='w-100 overflow-hidden'>\n                        <div\n                            class='d-flex flex-row flex-nowrap pb-2 px-1'\n                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                        >\n                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === race.classes.length - 1 && 'rounded-pill-right'} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.filterByClass}\n                                        data-id={currentClass.id}\n                                    >\n                                        {currentClass.title}\n                                    </button>\n                                </div>\n                            </>)}\n                        </div>\n                    </div>\n\n                    <div class='row mb-3'>\n                        <div class='col-6 offset-3'>\n                            <div class='input-group'>\n                                <input class='form-control form-control-lg' type='text' placeholder='Search for bib' value={searchForBib} onInput={linkstate(this, 'searchForBib')} />\n                                {searchForBib && <div class='input-group-append'>\n                                    <div class='input-group-text' onClick={this.clearSearchForBib}>x</div>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    {race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                        {isAdmin && <span class='float-right'>\n                            Total app users: {currentClass.contestants && currentClass.contestants.filter(musher => (musher.user || musher.team)).length}\n                        </span>}\n                        <h5>{currentClass.title} {currentClass.startDate && <>\n                            : <span class='font-weight-lighter'>\n                                {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </span>\n                        </>}</h5>\n\n                        {isAdmin && <>\n                            <a class='mx-2' href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a> -\n                            <a class='mx-2' href={`/tv/top5/${race.id}/${currentClass.id}`}>TV Top 5</a> -\n                            <a class='mx-2' href={`/tv/top3/${race.id}/${currentClass.id}`}>TV Top 3</a> -\n\n                            <a class='mx-2' href={`/tv/top10progress/${race.id}/${currentClass.id}`}>TV Top Progress 10</a> -\n                            <a class='mx-2' href={`/tv/top5progress/${race.id}/${currentClass.id}`}>TV Top Progress 5</a> -\n                            <a class='mx-2' href={`/tv/top3progress/${race.id}/${currentClass.id}`}>TV Top Progress 3</a> -\n\n                            <a class='mx-2' href={`/tv/team/${race.id}/1`}>TV One team</a> -\n                            <a class='mx-2' href={`/tv/tracking/${race.id}/${currentClass.id}`}>TV tracking</a> -\n                            <a class='mx-2' href={`/tv/freetext`}>TV free text</a> -\n\n                            <a class='mx-2' href={`/embed/top10/${race.id}/${currentClass.id}`}>Embed top10</a> -\n                            <a class='mx-2' href={`/embed/tracking/${race.id}/${currentClass.id}`}>Embed tracking</a> -\n                            <a class='mx-2' href={`/embed/chiplist/${race.id}/${currentClass.id}`}>Embed chiplist</a> -\n                            <a class='mx-2' href={`/embed/agreement/${race.id}/${currentClass.id}`}>Embed agreement</a> -\n                        </>}\n\n                        <div class='table-responsive'>\n                            <table class='table table-sm table-striped'>\n                                <thead>\n                                    <tr>\n                                        <th scope='col'>#</th>\n                                        <th scope='col' style='min-width: 90%;'><Text id='races.name'>Navn</Text></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {currentClass.contestants && currentClass.contestants.filter(filterByBib).sort(byBib).map((musher, idx) => {\n                                        const currentTeam = raceStore.getTeamById(musher.team);\n                                        const hasVaccines = raceStore.hasVaccines(currentTeam);\n                                        const hasMandatoryCheck = musher.mandatoryCheck;\n\n                                        return (<>\n                                            <tr onClick={this.toggleDisplayDetails} data-id={musher.id}>\n                                                <th scope='row'>\n                                                    {musher.bib ? <>\n                                                        {musher.bib}\n                                                    </> : <>\n                                                        <span class='font-weight-lighter text-muted'>{idx + 1}</span>\n                                                    </>}\n                                                </th>\n                                                <td\n                                                    class={`${displayDetails[musher.id] ? 'font-weight-bold' : ''}`}\n                                                    style={`${displayDetails[musher.id] || veterinaryUserDetails[musher.id] ? '' : 'line-height: 0.8em;'}`}\n                                                >\n                                                    {isVeterinary && <>\n                                                        {musher.team ? <>\n                                                            <button class='btn btn-primary btn-sm float-right ml-4' onClick={this.veterinaryToggleEditUser}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-4 disabled' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </>}\n                                                        {hasVaccines ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </>}\n                                                        {hasMandatoryCheck ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </>}\n                                                    </>}\n                                                    {isAdmin && <>\n                                                        <button class='btn btn-outline-warning btn-sm float-right ml-1' onClick={this.adminToggleEditUser}>\n                                                            <i class='fas fa-user-edit' />\n                                                        </button>\n                                                        {musher.paidSignupfee && <>\n                                                            <span class='float-right'>\n                                                                <i class='fas fa-check text-success' /><br />\n                                                            </span>\n                                                        </>}\n                                                        <small class='float-right'>\n                                                            {musher.raceStatus && <><span class='text-muted'>raceStatus:</span><br /> {musher.raceStatus}<br /></>}\n                                                            {musher.raceComment && <><span class='text-muted'>raceComment:</span><br /> {musher.raceComment}<br /></>}\n                                                            {musher.gpxResultsApproved && <><span class='text-muted'>gpxResultsApproved:</span><br /> {musher.gpxResultsApproved}<br /></>}\n                                                        </small>\n                                                    </>}\n                                                    {(isAdmin || isVeterinary) && race.liveRace > 0 && race.declaration && <>\n                                                        <span class='float-right text-success mr-2' style='font-size: 1.2em;'>\n                                                            {(musher.user || musher.team) && <i class='fas fa-mobile-alt ml-2' />}\n                                                            {musher.declaration && <i class='fas fa-handshake ml-2' alt={util.isoDate(musher.declarationDate)} />}\n\n                                                        </span>\n                                                    </>}\n                                                    {displayDetails[musher.id] ? <>\n                                                        {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                        {musher.firstname ? <>\n                                                            {musher.firstname} {musher.lastname}<br />\n                                                        </> : <>\n                                                            {musher.name}\n                                                        </>}\n                                                        <span class='text-muted'>{currentTeam.name}</span><br />\n                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                        {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}<br />\n\n                                                        {isAdmin && <>\n                                                            {musher.bib && <><i class='fas fa-tshirt ml-2' /> {musher.bib}</>}\n                                                            {musher.startTime && <><i class='fas fa-clock ml-2' /> {util.isoDate(musher.startTime)}</>}\n                                                        </>}\n\n                                                        {musher.price1 && <div class='font-weight-lighter'>\n                                                            <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </div>}\n                                                        {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                        {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                    </> : <>\n                                                        {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                            <i class='fas fa-trophy' />\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </span>}\n                                                        <nobr>\n                                                            {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                            {musher.firstname ? <>\n                                                                {musher.firstname} {musher.lastname}<br />\n                                                            </> : <>\n                                                                {musher.name}\n                                                            </>}\n                                                            <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        </nobr>\n                                                    </>}\n\n\n                                                    {/* <xmp>{JSON.stringify(currentTeam, null, 4)}</xmp> */}\n                                                    {isVeterinary && veterinaryUserDetails[musher.id] && <>\n                                                        <ScrollIntoView horizontal={'end'} vertical={'center'} />\n                                                        <div class='w-100 overflow-hidden' style='max-width: 100%;'>\n                                                            <div\n                                                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                            >\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-left rounded-none ${submenu === 'chiplists' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='chiplists'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-user-md' /> <Text id='racevet.chiplists'>Vaccines</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-none ${submenu === 'precheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='precheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-stethoscope' /> <Text id='racevet.precheck'>PreCheck</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-right rounded-none ${submenu === 'racecheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='racecheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-flag-checkered' /> <Text id='racevet.racecheck'>RaceCheck</Text></button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        {submenu === 'chiplists' && <>\n                                                            <h5 class='mt-4 border-bottom'>Chiplist & Vaccines</h5>\n                                                            <div class='container-fluid'>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogVaccines;\n                                                                    if (currentTeam && currentTeam.vaccines) {\n                                                                        dogVaccines = currentTeam.vaccines.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                                                                                </div>\n                                                                            {/* <xmp>{JSON.stringify(dogVaccines, null, 4)}</xmp> */}\n                                                                                {dogVaccines && dogVaccines.map((vac) => {\n                                                                                    return (\n                                                                                        <div class='col-4 px-1 overflow-hidden'>\n                                                                                            <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'}`}>\n                                                                                                <span class='font-weight-lighter'>\n                                                                                                    <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                                                                                    {vac.inKarens && <>\n                                                                                                        <br />\n                                                                                                        (<Text id='dogs.vaccine-karens'>karens</Text>: {util.format(vac.karensDaysLeft, 0)} <Text id='dogs.vaccine-karens-days-left'>days left</Text>)\n                                                                                                    </>}\n                                                                                                </span>\n                                                                                            </span>\n\n                                                                                            <div class='text-overflow'>\n                                                                                                <small class='font-weight-light'>\n                                                                                                    {vac.vaccineAgens.name}<br />\n                                                                                                    <nobr>{vac.vaccineName}</nobr><br />\n                                                                                                    {/* {util.isoDate(vac.date, false, false, true)}<br /> */}\n                                                                                                    {/* <span class='font-weight-lighter'>\n                                                                                                        <Text id='dogs.vaccine-veterinary'>Veterinær</Text>:\n                                                                                                    </span> {vac.veterinaryFirstname} {vac.veterinaryLastname} &lt;{vac.veterinaryEmail}&gt;<br /> */}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    );\n                                                                                })}\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'precheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Precheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogJournal;\n                                                                    if (currentTeam && currentTeam.journal) {\n                                                                        dogJournal = currentTeam.journal.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-12'>\n                                                                                    {dogJournal && dogJournal.length > 0 && dogJournal.map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                    {dogJournals[dog.chipId] && dogJournals[dog.chipId].length > 0 && dogJournals[dog.chipId].map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='diagnoseId'>Diagnostic</label>\n                                                                                        <select class=\"form-control\" id=\"diagnoseId\" onInput={linkstate(this, `preCheck.${dog.id}.diagnoseId`)} value={util.getNestedValue(preCheck, `${dog.id}.diagnoseId`)}>\n                                                                                            <option value=''>-- Please choose --</option>\n                                                                                            <option value='100'>No findings</option>\n                                                                                        </select>\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' onInput={linkstate(this, `preCheck.${dog.id}.weight`)} value={util.getNestedValue(preCheck, `${dog.id}.weight`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='heartRate'>Heart Rate</label>\n                                                                                        <input type='text' class='form-control' id='heartRate' onInput={linkstate(this, `preCheck.${dog.id}.heartRate`)} value={util.getNestedValue(preCheck, `${dog.id}.heartRate`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='bodyConditionScore'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bodyConditionScore' onInput={linkstate(this, `preCheck.${dog.id}.bodyConditionScore`)} value={util.getNestedValue(preCheck, `${dog.id}.bodyConditionScore`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='generalFindings'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='generalFindings' onInput={linkstate(this, `preCheck.${dog.id}.generalFindings`)} value={util.getNestedValue(preCheck, `${dog.id}.generalFindings`)} />\n                                                                                    </small>\n                                                                                    <small id='generalFindingsHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <button\n                                                                                        class='btn btn-outline-success'\n                                                                                        onClick={this.savePreCheck}\n                                                                                        data-id={dog.id}\n                                                                                        data-chipid={dog.chipId}\n                                                                                        data-team={currentTeam.id}\n                                                                                        data-name={dog.name}\n                                                                                        data-shortname={dog.shortName}\n                                                                                    > Save Pre Check</button>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'racecheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Racecheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='hrHeartLungs'>HR/Heart/Lungs</label>\n                                                                                        <input type='text' class='form-control' id='hrHeartLungs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='bcs'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bcs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='general'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='general' />\n                                                                                    </small>\n                                                                                    <small id='generalHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n                                                    </>}\n\n                                                    {(isAdmin && editUserDetails[musher.id]) && <>\n                                                        <h5>Admin edit:</h5>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label class='col-4 col-form-label text-right'>Email</label>\n                                                            <div class='col-8'>\n                                                                {musher.email}\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='bib' class='col-4 col-form-label text-right'>bib</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='bib'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.bib}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startTime' class='col-4 col-form-label text-right'>startTime</label>\n                                                            <div class='col-8'>\n                                                                <input type='datetime-local' class='form-control' id='startTime'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startTime ? util.isoDate(musher.startTime, false, false, false) : util.isoDate(currentClass.startDate, false, false, false)}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>team</label>\n                                                            <div class='col-8'>\n                                                                {selectedUserTeams ? <>\n                                                                    <select class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    >\n                                                                        <option value=''>-- Choose race team --</option>\n                                                                        {selectedUserTeams && selectedUserTeams.map(t => <>\n                                                                            <option value={t.id}>{t.name} {t.dogs ? `(${t.dogs.length})` : ''}</option>\n                                                                        </>)}\n                                                                    </select>\n                                                                </> : <>                                                                \n                                                                    <input type='number' class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    />\n                                                                </>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='user' class='col-4 col-form-label text-right'>user</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='user'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.user}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Race status</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='raceStatus'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceStatus}\n                                                                >\n                                                                    <option value=''>-- Choose race status --</option>\n                                                                    <option value='OK'>OK - Everything ok</option>\n                                                                    <option value='DNS'>DNS - Did Not Start</option>\n                                                                    <option value='DNF'>DNF - Did Not Finish</option>\n                                                                    <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                    <option value='DQ'>DQ - Disqualified</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='raceComment' class='col-4 col-form-label text-right'>Race comment</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='raceComment'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceComment}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='gpxResultsApproved' class='col-4 col-form-label text-right'>GPX Results approved (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='gpxResultsApproved'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='paidSignupfee' class='col-4 col-form-label text-right'>paidSignupfee (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='paidSignupfee'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.paidSignupfee ? util.isoDate(musher.paidSignupfee, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startOrder' class='col-4 col-form-label text-right'>startOrder</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='startOrder'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startOrder}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='cellphone' class='col-4 col-form-label text-right'>Mobil</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='cellphone'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.cellphone}\n                                                                />\n                                                                {selectedUser && selectedUser.cellphone && <small id='cellphoneHelp' class='form-text text-muted'\n                                                                    data-field='cellphone'\n                                                                    data-value={selectedUser.cellphone}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.cellphone || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='name' class='col-4 col-form-label text-right'>Navn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='name'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.name}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='firstname' class='col-4 col-form-label text-right'>Fornavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='firstname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.firstname}\n                                                                />\n                                                                {selectedUser && selectedUser.firstname && <small id='firstnameHelp' class='form-text text-muted'\n                                                                    data-field='firstname'\n                                                                    data-value={selectedUser.firstname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.firstname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='lastname' class='col-4 col-form-label text-right'>Etternavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='lastname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.lastname}\n                                                                />\n                                                                {selectedUser && selectedUser.lastname && <small id='lastnameHelp' class='form-text text-muted'\n                                                                    data-field='lastname'\n                                                                    data-value={selectedUser.lastname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.lastname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='address' class='col-4 col-form-label text-right'>Adresse</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='address'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.address}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalcode' class='col-4 col-form-label text-right'>Postalcode</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalcode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalcode}\n                                                                />\n                                                                {selectedUser && selectedUser.postalcode && <small id='postalcodeHelp' class='form-text text-muted'\n                                                                    data-field='postalcode'\n                                                                    data-value={selectedUser.postalcode}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalcode || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalplace' class='col-4 col-form-label text-right'>Postalplace</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalplace'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalplace}\n                                                                />\n                                                                {selectedUser && selectedUser.postalplace && <small id='postalplaceHelp' class='form-text text-muted'\n                                                                    data-field='postalplace'\n                                                                    data-value={selectedUser.postalplace}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalplace || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='flag' class='col-4 col-form-label text-right'>flag (emoji)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='flag'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.flag}\n                                                                />\n                                                                {selectedUser && selectedUser.flag && <small id='flagHelp' class='form-text text-muted'\n                                                                    data-field='flag'\n                                                                    data-value={selectedUser.flag}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.flag || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='countryCode' class='col-4 col-form-label text-right'>countryCode (iso)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='countryCode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.countryCode}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='birthdate' class='col-4 col-form-label text-right'>birthdate</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='birthdate'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.birthdate ? util.isoDate(musher.birthdate, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='sportsClub' class='col-4 col-form-label text-right'>Klubb</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='sportsClub'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.sportsClub}\n                                                                />\n                                                                {selectedUser && selectedUser.sportsClub && <small id='sportsClubHelp' class='form-text text-muted'\n                                                                    data-field='sportsClub'\n                                                                    data-value={selectedUser.sportsClub}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.sportsClub || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='status' class='col-4 col-form-label text-right'>Status</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='status'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.status}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='facebook' class='col-4 col-form-label text-right'>Facebook</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='facebook'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.facebook}\n                                                                />\n                                                                {selectedUser && selectedUser.facebook && <small id='facebookHelp' class='form-text text-muted'\n                                                                    data-field='facebook'\n                                                                    data-value={selectedUser.facebook}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.facebook || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='instagram' class='col-4 col-form-label text-right'>Instagram</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='instagram'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.instagram}\n                                                                />\n                                                                {selectedUser && selectedUser.instagram && <small id='instagramHelp' class='form-text text-muted'\n                                                                    data-field='instagram'\n                                                                    data-value={selectedUser.instagram}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.instagram || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        {/* <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Team</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='team' aria-describedby='teamHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.team}\n                                                                >\n                                                                    <option value=''>-- Velg team --</option>\n                                                                    {teams.map(team =>\n                                                                        <option value={team.id}>{team.name}</option>\n                                                                    )}\n                                                                </select>\n                                                            </div>\n                                                        </div> */}\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Klasse</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='class' aria-describedby='classHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.class}\n                                                                >\n                                                                    <option value=''>-- Choose race class --</option>\n                                                                    {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                                                    </>)}\n                                                                </select>\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price1' class='col-4 col-form-label text-right'>Price 1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price1}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price2' class='col-4 col-form-label text-right'>Price 2</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price2'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price2}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price3' class='col-4 col-form-label text-right'>Price 3</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price3'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price3}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='priceSent' class='col-4 col-form-label text-right'>Price sent</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='priceSent'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='topImage1' class='col-4 col-form-label text-right'>topImage1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='topImage1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.topImage1}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='image1' class='col-4 col-form-label text-right'>image1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='image1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.image1}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-5'>\n                                                            <div class='col-8'>\n                                                                <button type='button' class='btn btn-danger float-right'\n                                                                    id='deleteUser'\n                                                                    value='1'\n                                                                    onClick={this.adminSignupEdit}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                >\n                                                                    Delete user from this class\n                                                                </button>\n                                                            </div>\n                                                        </div>\n\n                                                    </>}\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n\n                        {isAdmin && <>\n                            {showAdminSendMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Email to all mushers in {currentClass.title}</h5>\n                                            <div class='overflow-auto p-5' style='max-height: 30vh;'>\n                                                <small>\n                                                    {currentClass.emails && currentClass.emails.map((email) => <div class='border rounded-lg p-3 mb-3'>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Date:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {util.formatDate(email.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                To:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.to.map(e => <span class='badge badge-info px-2 py-1 mr-2'>{e}</span>)}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Subject:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.subject}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row mt-2'>\n                                                            <div class='col-3 text-right'>\n                                                                Body:\n                                                            </div>\n                                                            <div class='col-9'\n                                                                dangerouslySetInnerHTML={{ __html: nl2br(email.body) }}\n                                                            />\n                                                        </div>\n                                                    </div>)}\n                                                </small>\n                                            </div>\n\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>To</label>\n                                                <div class='col-10'>\n                                                    {currentClass.contestants && currentClass.contestants.map((musher) => <>\n                                                        <span class='badge badge-info px-2 py-1 mr-2'>{musher.firstname} {musher.lastname} ({musher.email})</span>\n                                                    </>)}\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>Subject</label>\n                                                <div class='col-10'>\n                                                    <input type='text' class='form-control' id='subject'\n                                                        onInput={linkstate(this, 'message.subject')}\n                                                        value={message.subject}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'message.body')}\n                                                        value={message.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {message.body && <Markdown markdown={message.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            {emailResponse && <>\n                                                <div class={`alert alert-${emailResponse && emailResponse.status >= 300 ? 'danger' : 'success'}`} role='alert'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(emailResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                            <button class='btn btn-success float-right'\n                                                type='button'\n                                                data-to={currentClass.contestants && currentClass.contestants.map(musher => musher.email)}\n                                                data-raceclassid={currentClass.id}\n                                                onClick={this.sendEmail}\n                                            >\n                                                <i class='fas fa-paper-plane' /> Send email to all mushers\n                                            </button>\n                                            <button class='btn btn-danger float-right mr-2'\n                                                type='button'\n                                                onClick={this.resetEmail}\n                                            >\n                                                <i class='fas fa-times' /> Reset email\n                                            </button>\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Hide email form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Send email to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Send inbox message to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminImport} data-class={currentClass.id}>Toggle import form</button>\n                                </div>\n                            </>}\n\n                            {showAdminSendInboxMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Inbox Message to all mushers in {currentClass.title}</h5>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Inbox message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'inboxMessage.body')}\n                                                        value={inboxMessage.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {inboxMessage.body && <Markdown markdown={inboxMessage.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            <div class='clearfix'>\n                                                <button class='btn btn-success float-right'\n                                                    type='button'\n                                                    data-raceclassid={currentClass.id}\n                                                    onClick={this.sendInboxMessage}\n                                                >\n                                                    <i class='fas fa-paper-plane' /> Send inbox message to all mushers\n                                                </button>\n                                                <button class='btn btn-danger float-right mr-2'\n                                                    type='button'\n                                                    onClick={this.resetInboxMessage}\n                                                >\n                                                    <i class='fas fa-times' /> Reset inbox message\n                                                </button>\n                                            </div>\n\n                                            {inboxMessageResponse && <>\n                                                <div class={`alert alert-${inboxMessageResponse && inboxMessageResponse.status >= 300 ? 'danger' : 'success'}`} role='alert' style='max-height: 20vh;'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(inboxMessageResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Hide inboxmessage form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n\n                            </>}\n\n                            {isAdmin && showAdminImport[currentClass.id] && <>\n                                <div class='form-group'>\n                                    <label for='importUsers'><Text id='races.paste-users'>Paste your user data here to import users</Text>:</label>\n                                    <textarea\n                                        class='form-control'\n                                        id='importUsers'\n                                        rows='20'\n                                        oninput={e => this.parseInput(e.target.value, currentClass.id)}\n                                    />\n                                </div>\n                            </>}\n\n                        </>}\n                    </>)}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailMushers;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailClasses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.classes'>Klasser</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                            <div class='col-12 col-sm-6 col-lg-4 mb-4'>\n                                <div class='border rounded rounded-lg p-3'>\n                                    <h5>{currentClass.title}</h5>\n\n                                    {isAdmin && <>\n                                        <a href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a><br />\n                                        <a href={`/tv/team/${race.id}/1`}>TV One team</a><br />\n                                    </>}\n\n                                    <small>\n                                        {currentClass.startDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.startdate'>Start</Text>:</span> {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                        {currentClass.endDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.enddate'>End</Text>:</span> {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                    </small>\n\n                                    <div><span class='font-weight-lighter'><Text id='race.distance'>Distanse</Text>:</span> {currentClass.distance} km</div>\n                                    <div><span class='font-weight-lighter'><Text id='race.signup'>Påmelding</Text>:</span> {currentClass.signupfee || race.signupfee} NOK</div>\n                                    <p class='clearfix'>\n                                        <Markdown markdown={mu.replaceImages(currentClass.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </p>\n                                    <small>\n                                        <Markdown markdown={mu.replaceImages(currentClass.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </small>\n                                    {currentClass.rules && <>\n                                        <h5><Text id='race.rules'>Regler</Text></h5>\n                                        <Markdown markdown={mu.replaceImages(currentClass.rules, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </>}\n                                </div>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailClasses;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport Drawer from '../../components/drawer/';\nimport Gauge from '../../components/gauge';\nimport DogScroller from '../../components/dog/scroller';\nimport HeaderCustom from '../../components/header/custom';\n\nimport RaceLiveResults from '../../components/races/liveResults';\nimport MusherInfoHeader from '../../components/races/musherInfoHeader';\nimport RaceLiveAddResult from '../../components/races/liveAddResult';\nimport RaceLiveMusherResult from '../../components/races/liveMusherResult';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n        const { reloadLastEpoch } = this.props;\n\t\tconst { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass AppRaceDetailResults extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDrawer: false,\n            timerRunning: true,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs, true);\n\n        // Set reload timer\n        // if (timerRunning) {\n        //     clearTimeout(this.updateTimer.reload);\n        //     this.updateTimer.reload = setTimeout(() => {\n        //         console.log('loadLiveRaceResults.reloading...');\n        //         const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n        //         this.setState({ reloadLastEpoch });\n        //         // this.loadRace(props);\n        //         this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n        //     }, RELOAD_INTERVAL_IN_SEC * 1000);\n        // }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n\tasync loadRace(props = this.props) {\n        const { loadTimes = 0 } = this.state;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore, appState } = props.stores;\n\t\tconst { raceid, classid, filterByBibs, historySteps } = props;\n        await raceStore.load(raceid);\n        raceStore.getAllClassesSortedBy();\n        \n        const { race } = raceStore;\n        const { focusOnMushers } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const allClassIds = race?.classes.map(e => e.id);\n        let selectedClassId = selectedClassIds[0];\n        if (allClassIds.indexOf(selectedClassId) === -1) {\n            selectedClassId = allClassIds[0];\n            appState.setSelectedClassId(selectedClassId);\n        }\n        if (classid) {\n            appState.toggleSelectedClassId(classid, true);\n        }\n\t\tconst allTeamIds = race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n            })\n            .flat();\n\n        const bibs = filterByBibs ? filterByBibs : race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n            })\n            .flat();\n\n        if (allTeamIds.length > 0) {\n            await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n        }\n\n        if (race.liveRace > 0) {\n            await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(async () => {\n            \tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n            \tthis.setState({ reloadLastEpoch });\n            \tthis.loadRace();\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        } else {\n            await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n        }\n\n        // if (allTeamIds.length > 0 && raceid) {\n        //     if (!race.liveRace) {\n        //         await raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n        //         raceStore.getWorkoutSummaryActiveTeams();\n        //     }\n        //     if (loadTimes === 0) {\n        //         await raceStore.loadTeams(allTeamIds.join(','));\n        //     }\n\t\t// }\n\n\t\t// // Set reload timer\n\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\tcontentIsNotLoaded: false,\n            loadTimes: loadTimes + 1,\n\t\t});\n\t}\n\n\ttoggleDisplayDetails = (e) => {\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleDisplayDetails(email)\n\t}\n\n\tadminToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleEditUserDetails(email)\n\t}\n\n\tadminSignupEdit = (e) => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n\tlockAllWorkoutsInRace = async () => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n\t\tconst lockMessage = await raceStore.lockAllWorkoutsInRace({ id: raceid });\n\t\tthis.setState({ lockMessage });\n\t}\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const {\n                showDrawerReplay,\n                historySteps,\n                filterByBibs,\n            } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n                selectedMusherBib: '',\n                showDrawerCheckpoint: false,\n                showDrawerMusher: false,\n                showDrawer: false,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\t// filterByClass = (e) => {\n\t// \tconst selectedClassId = e.target.closest('button').dataset.id;\n\t// \tconst { appState } = this.props.stores;\n\t// \tappState.toggleSelectedClassId(selectedClassId, true);\n    //     this.closeDrawerMusher();\n    //     this.closeDrawerCheckpoint();\n\t// }\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        // if (!showDrawer) {\n        //     // Stop reload when we are updating results.\n        //     clearTimeout(this.updateTimer.reload);\n        // } else {\n        //     this.loadRace();\n        // }\n        this.setState({\n            showDrawer: !showDrawer,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerMusher = (e) => {\n\t\tconst selectedMusherBib = e.target.closest('.musher').dataset.bib;\n        const { showDrawerMusher } = this.state;\n        this.selectMusher(selectedMusherBib);\n    }\n\n    selectMusher = (selectedMusherBib) => {\n        this.setState({\n            selectedMusherBib,\n            showDrawerMusher: true,\n            showDrawerCheckpoint: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerMusher = () => {\n        this.setState({\n            selectedMusherBib: '',\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerCheckpoint = (e) => {\n\t\tconst selectedCheckpointId = e.target.closest('.checkpoint').dataset.id;\n        const { showDrawerCheckpoint } = this.state;\n        this.selectCheckpoint(selectedCheckpointId)\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerCheckpoint = () => {\n        this.setState({\n            selectedCheckpointId: '',\n            showDrawerCheckpoint: false,\n        });\n    }\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage, showDrawer, reloadLastEpoch, selectedMusherBib, selectedCheckpointId, showDrawerCheckpoint, showDrawerMusher, loadTimes } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, currentEmail } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], checkpointId } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n\t\tconst filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const isLiveRace = race.liveRace === 1;\n        const raceAdmins = race && race.raceAdmins ? race.raceAdmins.split(',') : [];\n        const isRaceAdmin = isAdmin || raceAdmins.indexOf(currentEmail) > -1;\n        // const isRaceAdmin = raceAdmins.indexOf(currentEmail);\n\n        return (<>\n            <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`/app-races/${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        {/* <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span> */}\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            <a href={`/app-races/${race.id}/tracking`}>\n                                <i class='fas fa-map-marked' />\n                            </a>\n                        </span>\n                    </div>\n                    <div>\n                        <a href={`/app-races/${race.id}`}>\n                            <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                        </a>\n                    </div>\n                    {/* {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <> */}\n                        <div class='d-flex align-items-center'>\n                            {isRaceAdmin && <>\n                                <button class='btn btn-lg btn-block btn-success my-3' onClick={this.toggleDrawer}>\n                                    <i class='fas fa-clock' />\n                                </button>\n                            </>}\n                        </div>\n                    {/* </>} */}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>\n\n            {/* <div\n                class='container-fluid position-relative p-0 w-100 h-100'\n                style={`margin-top: ${MARGIN_TOP};`}\n            > */}\n            <div class='container-fluid position-relative p-0 overflow-auto bg-light' style={`margin-top: ${MARGIN_TOP}; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.results'>Results</Text></h2>\n                </div> */}\n                <div class='col-12'>\n                    <ReloadTimer stores={this.props.stores} reloadLastEpoch={reloadLastEpoch} />\n\n                    {isLiveRace ? <>\n\n                    </> : <>\n                        {user.email && <div class='alert alert-primary' role='alert'>\n                            {language === 'no' && <>\n                                Resultatene hentes direkte fra treningsøktene i QPaws appen.<br />\n                                <strong>For at treningsøktene skal bli registrert må øktene:</strong>\n                                <ul>\n                                    <li>Ha riktig dato som er innenfor løpsperioden.</li>\n                                    <li>Være markert som 'Konkurranse'.</li>\n                                    <li>Være registrert på teamet som er påmeldt.</li>\n                                </ul>\n                            </>}\n                            {language === 'en' && <>\n                                The results are imported directly from the workouts inside QPaws app.<br />\n                                <strong>To make sure your workouts are registered check the following:</strong>\n                                <ul>\n                                    <li>Use the correct date on your workout. Has to be inside the race period.</li>\n                                    <li>Mark the workout as 'Race'.</li>\n                                    <li>Workout has to be on the same team as you signed up with.</li>\n                                </ul>\n                            </>}\n                        </div>}\n                    </>}\n\n                    {race.resultsUrl && <div class='p-3 my-2 bg-light'>\n                        <a href={race.resultsUrl} target='_blank' rel='noreferrer' native>\n                            {race.resultsText ? race.resultsText : <><Text id='races.results-here'>Se resultater her</Text> </>} <i class='fas fa-chevron-circle-right' />\n                        </a>\n                    </div>}\n\n                    {(contentIsNotLoaded || !classes || classes.length === 0) && <div class='d-flex justify-content-center my-5 py-5'>\n                        <div class='spinner-border text-primary' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>}\n                </div>\n\n                <div class='col-12'>\n                    {race.classes && race.classes.filter(filterByClassId).map(currentClass => {\n                        return (<>\n                            <div class='mt-2 mb-5'>\n                                {race.resultDanger && <div class='alert alert-danger' role='alert'>\n                                    <div class='spinner-grow text-danger float-left' role='status'>\n                                        <span class='sr-only'>Loading...</span>\n                                    </div>\n                                    <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultDanger, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultWarning && <div class='alert alert-warning' role='alert'>\n                                    <i class='fas fa-exclamation float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultWarning, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultSuccess && <div class='alert alert-success' role='alert'>\n                                    <i class='fas fa-check float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultSuccess, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n\n                                {/* <h5>\n                                    {currentClass.title} {currentClass.startDate && <>\n                                        : <span class='font-weight-lighter'>\n                                            {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </span>\n                                    </>}\n                                </h5> */}\n\n\n                                {race.liveRace ? <>\n                                    {!showDrawer && <>\n                                        <RaceLiveResults\n                                            stores={this.props.stores}\n                                            race={race}\n                                            currentClass={currentClass}\n                                            reloadLastEpoch={reloadLastEpoch}\n                                            key={`raceclass-${currentClass.id}`}\n                                            onClickMusher={this.toggleDrawerMusher}\n                                            onClickCheckpoint={this.toggleDrawerCheckpoint}\n                                            selectedCheckpointId={selectedCheckpointId}\n                                        />\n                                    </>}\n                                </> : <>\n\n                                    <span class='float-right'>\n                                        <span class='text-muted'><Text id='races.mushers'>Mushers</Text>: {currentClass.totalMushers || 0}</span>\n                                        <span class='text-muted ml-4'><Text id='races.finished-mushers'>Finished mushers</Text>: {currentClass.totalFinished || 0} </span>\n                                    </span>\n\n                                    <div class='table-responsive-md'>\n                                        <table class='table table-sm table-striped'>\n                                            <thead>\n                                                <tr>\n                                                    <th scope='col'>#</th>\n                                                    <th scope='col' style='min-width: 200px;'><Text id='races.name'>Navn</Text></th>\n                                                    {isAdmin && <>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Cellphone</th>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Email</th>\n                                                    </>}\n                                                    {isAdmin && <th scope='col' class='d-none d-lg-table-cell' style='min-width: 400px;'><Text id='races.stages'>Etapper</Text></th>}\n                                                    <th scope='col'><Text id='races.result'>Resultat</Text></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.map((contestant, idx) => {\n                                                    const { musher, currentTeam, currentStages, currentResults, completed, duration,\n                                                        normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                                        flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                                        finishedDate, totalWorkoutTimeUsedSec,\n                                                    } = contestant;\n\n                                                    const totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n                                                    return (<>\n                                                        <tr onClick={this.toggleDisplayDetails} data-email={musher.email}>\n                                                            <th scope='row'>\n                                                                {idx + 1}\n                                                                {isAdmin && currentResults && <>\n                                                                    <br />{currentResults.isLocked ? <i class='fas fa-lock text-danger mr-2' /> : <i class='fas fa-lock-open text-success mr-2' />}\n                                                                </>}\n                                                            </th>\n                                                            <td\n                                                                class={`${displayDetails[musher.email] ? 'font-weight-bold' : ''}`}\n                                                                style={`${displayDetails[musher.email] ? '' : 'line-height: 0.8em;'}`}\n                                                            >\n                                                                {displayDetails[musher.email] ? <>\n                                                                    {musher.firstname} {musher.lastname}<br />\n                                                                    <span class='text-muted'>{currentTeam.name}</span><br />\n                                                                    <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                                    {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}\n                                                                    {musher.price1 && <div class='font-weight-lighter'>\n                                                                        <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </div>}\n                                                                    {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                                    {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                                </> : <>\n                                                                    {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                                        <i class='fas fa-trophy' />\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </span>}\n                                                                    <nobr>\n                                                                        {musher.firstname} {musher.lastname}<br />\n                                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    </nobr>\n                                                                </>}\n\n                                                            </td>\n\n                                                            {isAdmin && <>\n                                                                <td class='d-none d-lg-table-cell'>{musher.cellphone}</td>\n                                                                <td class='d-none d-lg-table-cell'>{musher.email}</td>\n                                                            </>}\n\n                                                            {isAdmin && <td class='d-none d-lg-table-cell'>\n                                                                {isAdmin && <>\n                                                                    <button class='btn btn-primary btn-sm float-right' onClick={this.adminToggleEditUser}><i class='fas fa-user-edit' /></button>\n                                                                </>}\n\n                                                                {(isAdmin && editUserDetails[musher.email]) && <>\n                                                                    <h5>Admin edit:</h5>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Email</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Cellphone</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.cellphone}\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='team' class='col-sm-2 col-form-label text-right'>Race status</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <select class='form-control-plaintext' id='raceStatus'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceStatus}\n                                                                            >\n                                                                                <option value=''>-- Choose race status --</option>\n                                                                                <option value='OK'>OK - Everything ok</option>\n                                                                                <option value='DNS'>DNS - Did Not Start</option>\n                                                                                <option value='DNF'>DNF - Did Not Finish</option>\n                                                                                <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                                <option value='DQ'>DQ - Disqualified</option>\n                                                                                <option value='DC'>DC - Data changed by user</option>\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='raceComment' class='col-sm-2 col-form-label text-right'>Race comment</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='raceComment'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceComment}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='gpxResultsApproved' class='col-sm-2 col-form-label text-right'>GPX Results approved (date)</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='gpxResultsApproved'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price1' class='col-sm-2 col-form-label text-right'>Price 1</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price1'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price1}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price2' class='col-sm-2 col-form-label text-right'>Price 2</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price2'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price2}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price3' class='col-sm-2 col-form-label text-right'>Price 3</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price3'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price3}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='priceSent' class='col-sm-2 col-form-label text-right'>Price sent</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='priceSent'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                </>}\n\n                                                                {isAdmin && <div class='d-flex flex-wrap'>\n                                                                    {currentStages && currentStages.map((stage, idx) => {\n                                                                        const percent = stage.distanceKm / currentClass.distance * 100;\n                                                                        const width = percent > 100 ? 100 : parseInt(percent, 10);\n                                                                        const currentEpoch = Math.floor(new Date(stage.date).getTime() / 1000);\n                                                                        const inDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\n                                                                        inDate.setUTCSeconds(currentEpoch + parseInt(stage.duration, 10));\n                                                                        const images = stage.images.flat();\n                                                                        if (displayDetails[musher.email]) {\n                                                                            return (<>\n                                                                                <div class='bg-light border rounded-lg  text-right position-relative mr-1 mb-1' style={`width: 350px; min-width: 320px;`}>\n                                                                                    <svg viewBox='0 0 300 100' class='position-absolute' style='width: 100%; height: 95%; bottom: 0px; left: 0px; z-index: 0;'>\n                                                                                        <path d={`${stage.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n                                                                                    </svg>\n                                                                                    <div class='position-relative px-3'>\n                                                                                        <span class='position-absolute' style='top: 3px; left: 3px; font-size: 1.3em;'>\n                                                                                            {idx + 1}\n                                                                                        </span>\n                                                                                        <small>\n                                                                                            {isAdmin && <span class='position-absolute' style='top: 0px; right: -5px;'>\n                                                                                                {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-success' />}\n                                                                                            </span>}\n                                                                                            <span class='float-left'>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-out-alt text-muted' /> {util.formatDate(stage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-in-alt text-muted' /> {util.formatDate(inDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                            </span>\n                                                                                            <span class='float-right'>\n                                                                                                {/* {restTimeText}\n                                                                                                {restTimeTrackText} */}\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(stage.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(stage.rest) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(stage.duration - stage.rest) || 'n/a'}</nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(stage.avgDogs, 0) || 'n/a'}</nobr>\n                                                                                            </span>\n                                                                                        </small>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </>);\n                                                                        }\n                                                                        return (<>\n                                                                            <div class='bg-light border rounded-lg text-right position-relative px-3 mr-1 mb-1' style={`width: 300px; min-width: 300px;`}>\n                                                                                <small>\n                                                                                    {isAdmin && <span class='position-absolute' style='top: 2px; right: -5px;'>\n                                                                                        {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-sucess' />}\n                                                                                    </span>}\n\n                                                                                    <span class='float-left'>{idx + 1}</span>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                </small>\n                                                                            </div>\n                                                                        </>);\n                                                                    })}\n                                                                </div>}\n\n                                                            </td>}\n                                                            <td class='text-right position-relative pl-4'>\n                                                                {raceStatus(musher)}\n                                                                {musher.raceComment && <>\n                                                                    <div class='alert alert-warning text-left' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <Markdown markdown={mu.replaceImages(musher.raceComment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                                    </div>\n                                                                </>}\n                                                                {(isAdmin && currentResults.lastUpdated > lastAllowedChangeDate) && <>\n                                                                    <div class='alert alert-danger text-left d-none d-md-block' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <i class='fas fa-user-shield' /> Last changed: {util.formatDate(currentResults.lastUpdated, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                                    </div>\n                                                                </>}\n                                                                {completed >= 99 ? <span class='position-absolute' style='top: 10px; left: 0px;'><i class='fas fa-flag-checkered text-success' /></span> : ''}\n                                                                <small>\n                                                                    {displayDetails[musher.email] ? <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\n                                                                            <br /><nobr><i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(totals.firstEpoch)} - <i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(finishedDate)}</nobr>\n                                                                            {isAdmin && <>\n                                                                                <br />\n                                                                                <div class='text-danger'>\n                                                                                    {totals.firstGpxStartEpoch && <>\n                                                                                        <nobr>firstGpxStartEpoch: {util.isoDate(totals.firstGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                    {totals.lastGpxStartEpoch && <>\n                                                                                        <nobr>lastGpxStartEpoch: {util.isoDate(totals.lastGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                </div>\n                                                                            </>}\n                                                                        </> : <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br />\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                        </>}\n\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(currentResults.avgDogs, 0) || 'n/a'}</nobr> */}\n                                                                    </> : <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n                                                                        </> : <>\n                                                                            {isDone === 1 ? <>\n                                                                                <nobr class='font-weight-bold'><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br />\n                                                                            </> : <>\n                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr><br />\n                                                                            </>}\n                                                                        </>}\n                                                                    </>}\n\n                                                                    {/* raceDistance: {raceDistance}<br /> */}\n\n                                                                    {/* duration: {util.secToHms(duration)}<br />\n                                                                    normalizedDuration: {util.secToHms(normalizedDuration)}<br />\n                                                                    weightedNormalizedDuration: {util.secToHms(weightedNormalizedDuration)}<br /> */}\n\n                                                                    {/* totalKcalRelated: {totalKcalRelated}<br />\n                                                                    weightedTotalKcal: {weightedTotalKcal}<br />\n                                                                    flatTotalKcal: {flatTotalKcal}<br />\n                                                                    percentHarder: {percentHarder}<br /> */}\n\n                                                                    {/* loadIndex: {loadIndex}<br /> */}\n                                                                </small>\n                                                            </td>\n                                                        </tr>\n                                                    </>);\n                                                })}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                    <div class='text-center text-muted'>\n                                        <small>\n                                            {language === 'no' && <>\n                                                OBS! Ref reglene så er det ikke lov til å endre treningsøktene som er med i konkurransen etter at løpet er ferdig.<br />\n                                                Forsøk på dette vil resultere i automatisk deplassering på listene.\n                                            </>}\n                                            {language === 'en' && <>\n                                                IMPORTANT! According to the rules: It is NOT allowed to try alter the workouts related to the competition after the race has ended.<br />\n                                                Attempts will result in automatic deplacement on the resultlists.\n                                            </>}\n                                        </small>\n                                    </div>\n\n                                    {isAdmin && <>\n                                        <button\n                                            class='btn btn-danger btn-lg float-right m-4'\n                                            onClick={this.lockAllWorkoutsInRace}\n                                        >\n                                            Lock all workouts in this race\n                                        </button>\n                                        <xmp class='m-5'>{JSON.stringify(lockMessage, null, 4)}</xmp>\n                                    </>}\n\n                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                                        <a class='btn btn-lg btn-block btn-primary' href={`https://homerunrace.no/index#/race/${race.id}/results`}>All results</a>\n                                    </div>\n                                </>}\n                            </div>\n                        </>);\n                    })}\n                </div>\n\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <RaceLiveAddResult stores={this.props.stores} />\n                </Drawer>\n            </>}\n            {showDrawerCheckpoint && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerCheckpoint}>\n                    <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                </Drawer>\n            </>}\n            {showDrawerMusher && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerMusher}>\n                    <RaceLiveMusherResult stores={this.props.stores} bib={selectedMusherBib} onClickNav={this.selectMusher}  />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailResults;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Trackmap from '../../components/public/trackmap';\nimport Gauge from '../../components/gauge';\n\nimport DogScroller from '../../components/dog/scroller';\nimport ImageScroller from '../imageScroller';\n\nimport Overlay from '../../components/overlay/';\nimport Drawer from '../../components/drawer/';\nimport HeaderCustom from '../../components/header/custom';\nimport Loading from '../../components/loading/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\nimport LineGraph from '../../components/lineGraph';\nimport States from '../../components/states';\nimport PublicTeam from '../team/public';\nimport RaceTrackingMusherDetail from './raceTrackingMusherDetail';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nfunction PageTitle(title, classes = '', style = '') {\n    useEffect(() => {\n        document.title = `Homerun Race: ${title}`;\n    }, [title]);\n    return <span class={classes} style={style}>{title}</span>;\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\nconst initialState = {\n    isLoading: false,\n    email: '',\n    submenu: 'ads',\n    jwtToken: util.getJwtToken(),\n\n    reloadInSec: null,\n    reloadIsActive: false,\n\n    leaderboardMode: 'mushers',\n    filterByraceClass: '',\n    showLeaderBoard: true,\n    showNews: true,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\nconst REPLAY_SPEED = 1;\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    initComponent = () => {\n        this.setState({\n            reloadIsActive: true,\n        }, () => this.tickReloadTimeer());\n    }\n\n    tickReloadTimeer = () => {\n        const { reloadLastEpoch } = this.props;\n        const { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n            const now = Math.floor(new Date().getTime() / 1000);\n            const reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n            this.setState({ reloadInSec });\n            clearTimeout(this.updateTimer.tick);\n            this.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n        return false;\n    }\n\n    componentDidMount() {\n        this.initComponent();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    render() {\n        const { reloadInSec } = this.state;\n        const { radius = 13, fontSize = 11, classNames = '' } = this.props;\n        const reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n        return (<>\n            <span class={classNames}>\n                <Gauge key={`gauge-reload-page`}\n                    color='primary'\n                    radius={radius}\n                    showPercentText={false}\n                    percent={reloadPercent}\n                    showCenterText={true}\n                    centerText={reloadInSec}\n                    centerTextSize={fontSize}\n                    centerTextY={'55%'}\n                />\n            </span>\n        </>);\n    }\n}\n\n@observer\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { submenu = 'details' } = this.state;\n        const { isAdmin } = userStore;\n\n        const { waypoints } = raceStore;\n        const { raceClass = {}, race = {}, onMarkerClick = () => {} } = this.props;\n\n        return (<>\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em;'><Text id='races.gps-ranking'>GPS Ranking</Text>: {race.title} - {raceClass.title}</span>\n            </div>\n\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 60vh;'\n            >\n                {!waypoints || waypoints.length === 0 && <>\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-dog' /></div>\n                        <div class='w-100'>\n                            <h3><Text id='races.no-teams-found'>No teams found!</Text></h3>\n                            <Text id='races.loading-teams'>Loading teams...</Text>\n                        </div>\n                        <div class='spinner-border text-primary' style='width: 3rem; height: 3rem;' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>\n                </>}\n\n                <table class='table table-sm table-striped'>\n                    {waypoints && waypoints.map((musher, idx) => {\n                        const restPercent = util.format(musher.restTime / musher.raceTime * 100, 0);\n                        const shortname = mu.displayNameShort(musher);\n\n                        return (<>\n                            <tr onClick={() => onMarkerClick(musher)}>\n                                <td style='width: 15px;' class='text-center'>{musher.rank}</td>\n                                <td>\n                                    <div class='d-flex justify-content-between align-items-start w-100'>\n                                        {/* <div\n                                            class='rounded-circle imageRounded imageRoundedSmallIcon float-left text-center'\n                                            style={`\n                                                background-image: url(\"${musher.image}\");\n                                                background-size: cover;\n                                                border: 1px ${mu.getRankingColor(musher.rank || idx + 1)} solid;\n                                                width: 30px !important;\n                                                height: 30px;\n                                                padding-top: 3px;\n                                            `}\n                                        >\n                                            {musher.image ? '' : shortname}\n                                        </div> */}\n                                        <div class='flex-grow-1'>\n                                            <div class='float-right ml-2'>\n                                                <div class='text-center'>\n                                                    <Gauge key={`gauge-reload-page`}\n                                                        color={restPercent < 40 ? (restPercent < 30 ? 'danger' : 'warning') : 'success'}\n                                                        radius={30}\n                                                        showPercentText={false}\n                                                        percent={restPercent}\n                                                        showCenterText={true}\n                                                        centerText={`${restPercent}%`}\n                                                        centerTextSize={15}\n                                                        centerTextY={'55%'}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='float-right'>\n                                                {musher.finishTime < 9999999999 ? <>\n                                                    <i class='fas fa-flag-checkered text-success' />\n                                                </> : <>\n                                                    {musher.currentState === 'rest' ? <>\n                                                        <i class='fas fa-bed text-warning' />\n                                                    </> : <>\n                                                        <i class='fas fa-running text-primary' />\n                                                    </>}\n                                                </>}\n                                            </div>\n\n                                            <span class='text-white rounded-pill-left px-2 mr-2'\n                                                style={`background-color: ${mu.getRankingColor(musher.rank || idx + 1)};`}\n                                            >\n                                                {musher.bib}\n                                            </span>\n\n                                            {musher.flag}  {musher.title}\n                                            <div>\n                                                <small>\n                                                    {musher.finishTime < 9999999999 ? <>\n                                                        {musher.diffToFirstFinishTime > 0 ? <>\n                                                            <span class='text-muted'><i class='fas fa-arrow-up' /></span> {util.secToHms(musher.diffToFirstFinishTime)}\n                                                        </> : <>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.formatDate(util.parseInputDate(musher.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </>}\n                                                        <nobr>\n                                                            <i class='fas fa-running text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </> : <>\n                                                        {/* <span class='text-muted'><i class='fas fa-compass' /></span> {mu.windDirection(musher.bearing)} */}\n                                                        {/* {util.format(musher.totalDistanceOnTrack, 1)} km */}\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.format(musher.distanceToFinish, 1)} km\n                                                        </nobr>\n                                                        {musher.distanceToFinish !== musher.distanceToFirst && musher.distanceToFirst > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted font-weight-light ml-2'>1st:</span> {util.format(musher.distanceToFirst, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToFinish !== musher.distanceToForward && musher.distanceToForward > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-up' /></span> {util.format(musher.distanceToForward, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToBehind > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-down' /></span> {util.format(musher.distanceToBehind, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        <br />\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-tachometer-alt' /></span> {util.format((musher.currentAvgSpeed ? musher.currentAvgSpeed * 3.6 : musher.speed) || 0, 1)} km/h\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-running ml-2 text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </>}\n\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class='mt-1 container-fluid'>\n                                        <States stores={this.props.stores} states={musher.states} duration={musher.raceTime} key={`state-${musher.bib}`} height={'6px'} showText={false} />\n                                    </div>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </table>\n\n                {/* waypoints: {JSON.stringify(waypoints.slice(0, 5), null, 4)}<br /> */}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass MusherInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { wpData = {}, onMarkerClick = () => {} } = this.props;\n        const wp = raceStore.findWaypointByBib(wpData.bib);\n\n        const { isAdmin } = userStore;\n        const { user: currentUser = {} } = userStore;\n\n        const musher = (wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(wpData.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = mu.getRankingColor(wp.rank);\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        // const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(wpData.bib);\n\n        const restPercent = util.format(wp.restTime / wp.raceTime * 100, 0);\n        // const runPercent = 100 - restPercent;\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n\n        const locale = 'en-GB';\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const now = Math.floor(new Date().getTime() / 1000);\n\n        return (<>\n            {behind.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {inFront.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em; height: 16vh;'>&nbsp;</span>\n            </div>\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 55vh;'\n            >\n\n                <div class='w-100 position-absolute'\n                    style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n                />\n\n                <div class='d-flex position-relative'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                    >\n                        {!image && <div class='text-muted' style='font-size: 25px; padding-top: 5px;'>{shortname}</div>}\n                        <div\n                            class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: -20px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>}\n                        </div>\n                    </div>\n                    <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.8em;'>\n                        <div class='float-right' style='font-size: 1.2em;'>\n                            {wp.finishTime < 9999999999 ? <>\n                                <i class='fas fa-flag-checkered text-success' />\n                            </> : <>\n                                {wp.currentState === 'rest' ? <>\n                                    <i class='fas fa-bed text-warning' />\n                                </> : <>\n                                    <i class='fas fa-running text-primary' />\n                                </>}\n                            </>}\n                        </div>\n                        {/* {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>} */}\n\n                        <h3 class='mb-0'>\n                            {musher.flag} {musher.firstname} {musher.lastname}\n                        </h3>\n                        <h6 class='mb-0'>{musher.sportsClub || <>&nbsp;</>}</h6>\n                    </div>\n                </div>\n\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='details'\n                        >\n                            Details\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='team'\n                        >\n                            Team\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='dogs'\n                        >\n                            Dogs\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                >\n                    {submenu === 'details' && <>\n                        <RaceTrackingMusherDetail\n                            stores={this.props.stores}\n                            wp={wp}\n                            musher={musher}\n                        />\n                    </>}\n                    {submenu === 'team' && <>\n                        {team.public > 0 ? <>\n                            <h3>{team.name}</h3>\n                            <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                            <ImageScroller stores={this.props.stores} images={teamImages} />\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                                {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                            </div>\n                        </>}\n                    </>}\n                    {submenu === 'dogs' && <>\n                        {team.public > 0 ? <>\n                            {team.dogs && <div class='w-100 container-fluid'>\n                                <div class='row pt-2'>\n                                    <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                                </div>\n                            </div>}\n                            {showDog && <>\n                                <div class='d-flex mb-0 mt-3 position-relative'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3 pr-2'\n                                        style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                    >\n                                        <h5 class='mb-1'>\n                                            {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                            {hasBirthday && <>\n                                                <i class='fas fa-birthday-cake ml-3' />\n                                            </>}\n                                        </h5>\n                                        <div>\n                                            {daysUntilBirthday < 7 && <>\n                                                <span class='text-muted mr-2'>\n                                                    <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                                </span>\n                                            </>}\n                                            {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                            {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                            </>}\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            </div>\n                        </>}\n                    </>}\n\n                    {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                        <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                            Toggle admin info\n                        </button>\n                        {showAdminInfo && <>\n                            <small>\n                                <xmp>\n                                    musher: {JSON.stringify(musher, null, 4)}<br />\n                                    user: {JSON.stringify(user, null, 4)}<br />\n                                    team: {JSON.stringify(team, null, 4)}<br />\n                                    totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                    {/* {\n                                        \"firstDate\": \"2021-03-19 11:59\",\n                                        \"lastDate\": \"2021-03-20 17:13\",\n                                        \"firstEpoch\": 1616151540000,\n                                        \"lastEpoch\": 1616256780000,\n                                        \"now\": {\n                                            \"$numberDecimal\": \"1642675856939\"\n                                        },\n                                        \"totalTimeUsedSec\": 26524316,\n                                        \"totalWorkoutTimeUsedSec\": 130895,\n                                        \"lastDuration\": 25655,\n                                        \"team\": 84,\n                                        \"count\": 4,\n                                        \"distanceKm\": 301.5906237951766,\n                                        \"elevation\": 3610.019075719202,\n                                        \"duration\": 77343,\n                                        \"rest\": 1332,\n                                        \"speedAvg\": 8.294634979660305,\n                                        \"totalRest\": 54884,\n                                        \"loadIndex\": 1080.75,\n                                        \"totalKcalRelated\": 544.535560976128,\n                                        \"weightedTotalKcal\": 12303.171406247127,\n                                        \"flatTotalKcal\": 9424.70699359927,\n                                        \"firstGpxStartEpoch\": null,\n                                        \"lastGpxStartEpoch\": null\n                                    } */}\n\n                                </xmp>\n                            </small>\n                        </>}\n                    </div>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass TrackingMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            reloadLastEpoch: Math.floor(new Date().getTime() / 1000),\n            historyPointIndex: 0,\n            timerRunning: true,\n            replayHistory: false,\n            replaySpeed: REPLAY_SPEED,\n        };\n        this.updateTimer = {};\n    }\n\n    handleHistoryPointIndex = (e) => {\n        const historyIdx = parseInt(e.target.value, 10);\n        clearTimeout(this.updateTimer.reload);\n\n        // console.log({ historyIdx });\n        this.setState({\n            historyPointIndex: historyIdx,\n            timerRunning: false,\n        }, () => {\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex));\n        });\n    }\n\n    playHistory = () => {\n        clearTimeout(this.updateTimer.reload);\n        const { historyPointIndex, replaySpeed } = this.state;\n        const { raceStore } = this.props.stores;\n        const raceTrackerPointTimestamp = raceStore.getRaceTrackerTimestamp(historyPointIndex + 1);\n        // console.log('playHistory', { historyPointIndex });\n        const state = {\n            historyPointIndex: historyPointIndex + 1,\n            timerRunning: false,\n            playingHistory: true,\n        };\n        if (raceTrackerPointTimestamp) {\n            state.raceTrackerPointTimestamp = raceTrackerPointTimestamp\n        }\n        this.setState({\n            ...state,\n        }, () => {\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex + 1));\n        });\n\n        // Set replay timer\n        clearTimeout(this.updateTimer.history);\n        this.updateTimer.history = setTimeout(() => {\n            this.playHistory();\n        }, replaySpeed * 1000);\n    }\n\n    pauseHistory = () => {\n        clearTimeout(this.updateTimer.history);\n        this.setState({\n            playingHistory: false,\n        });\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs);\n\n        // Set reload timer\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                console.log('loadLiveRaceResults.reloading...');\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRace = async (props = this.props) => {\n        try {\n            this.setState({ isLoading: true });\n            const { raceStore, appState } = props.stores;\n            const { raceid, classid, filterByBibs, historySteps } = props;\n            await raceStore.load(raceid);\n            raceStore.getAllClassesSortedBy();\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const { selectedClassIds = [] } = appState;\n            const allClassIds = race?.classes.map(e => e.id);\n            let selectedClassId = classid || selectedClassIds[0];\n            if (allClassIds.indexOf(selectedClassId) === -1) {\n                selectedClassId = allClassIds[0];\n                appState.setSelectedClassId(selectedClassId);\n            }\n            if (classid) {\n                appState.toggleSelectedClassId(classid, true);\n            }\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\n            this.setState({ isLoading: false });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    setLeaderboardMode = (e) => {\n        const leaderboardMode = e.target.parentElement.dataset.mode || e.target.dataset.mode;\n        this.setState({ leaderboardMode })\n    }\n\n    chooseRaceClass = (e) => {\n        const filterByraceClass = e.target.value;\n        this.setState({ filterByraceClass })\n    }\n\n    toggleShowLeaderBoard = (hide) => {\n        const { showLeaderBoard } = this.state;\n        if (hide === true) {\n            this.setState({ showLeaderBoard: false });\n        } else {\n            this.setState({ showLeaderBoard: !showLeaderBoard });\n        }\n    }\n\n    toggleShowNews = (hide) => {\n        const { showNews } = this.state;\n        if (hide === true) {\n            this.setState({ showNews: false });\n        } else {\n            this.setState({ showNews: !showNews });\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.reload);\n        clearTimeout(this.updateTimer.history);\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    componentDidMount() {\n        this.loadRace();\n        try {\n            const { width, height } = getWindowDimensions();\n            if (width < 800) {\n                this.toggleShowLeaderBoard(true);\n                this.toggleShowNews(true);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid || this.props.showDrawerReplay !== nextProps.showDrawerReplay) {\n\t\t    this.loadRace(nextProps);\n        }\n\t}\n\n    closeAllDrawers = () => {\n        this.setState({\n            showResults: false,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    onMarkerClick = (wpData) => {\n        this.closeAllDrawers();\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onMusherClick = (wpData) => {\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onCpMarkerClick = (cpData) => {\n        if (!cpData || !cpData.id) {\n            return null;\n        }\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId: cpData.id,\n            showDrawerCheckpoint: true,\n            cpData,\n        });\n    }\n\n    toggleDrawerMusher = () => {\n        const { showDrawerMusher } = this.state;\n        this.setState({\n            showDrawerMusher: !showDrawerMusher,\n        });\n    }\n\n    toggleDrawerCheckpoint = () => {\n        const { showDrawerCheckpoint } = this.state;\n        this.setState({\n            showDrawerCheckpoint: !showDrawerCheckpoint,\n        });\n    }\n\n    toggleResults = () => {\n        const { showResults } = this.state;\n        this.closeAllDrawers();\n        this.setState({            \n            showResults: !showResults,\n        });\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    setReplaySpeed = (e) => {\n        const speed = e.target.closest('button').dataset.speed;\n        this.setState({\n            replaySpeed: parseFloat(speed),\n        });\n    }\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const {\n                showDrawerReplay,\n                historySteps,\n                filterByBibs,\n            } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n                selectedMusherBib: '',\n                showDrawerCheckpoint: false,\n                showDrawerMusher: false,\n                showDrawer: false,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleFocusOnMusher = (e) => {\n        try {\n            const musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n            const { appState, raceStore } = this.props.stores;\n            appState.toggleFocusOnMusher(musherId);\n\n            const { focusOnMushers = [], selectedClassIds = [] } = appState;\n            const classid = selectedClassIds[0]\n\n            const { race } = raceStore;\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === classid)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (race.liveRace > 0) {\n                raceStore.getRaceTrackerActiveTeams(null, focusOnMushers, bibs);\n            } else {\n                raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers, bibs);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleBib = () => {\n        try {\n            const { bib } = this.state;\n            const { appState, raceStore } = this.props.stores;\n            const musher = raceStore.getMusherByBibId(bib);\n            appState.toggleFocusOnMusher(musher.id);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    checkForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.toggleBib();\n        }\n    }\n\n    toggleReplayHistory = () => {\n        const { replayHistory } = this.state;\n        clearTimeout(this.updateTimer.reload);\n        this.setState({\n            showDrawer: false,\n            historyPointIndex: 0,\n            replayHistory: !replayHistory,\n            timerRunning: replayHistory,\n        }, async () => {\n            await this.loadRace();\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            const { maxPoints } = raceStore;\n            if (replayHistory) {\n                console.log('toggleReplayHistory: setting to maxPoints', maxPoints);\n                raceStore.updateWaypointPosition(Math.abs(maxPoints - 1));\n            } else {\n                console.log('toggleReplayHistory: setting to first points');\n                for (let i = 0, l = 10; i < l; i += 1) {\n                    raceStore.updateWaypointPosition(Math.abs(historyPointIndex + i));\n                }\n            }\n        });\n    }\n\n    toggleLines = () => {\n        const { showLines } = this.state;\n        this.setState({\n            showLines: !showLines,\n        });\n    }\n\n    render() {\n        const { historyPointIndex, timerRunning, playingHistory, replaySpeed, raceTrackerPointTimestamp, showLines,\n            allTeamIds, bibs,\n        } = this.state;\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const {\n            raceid,\n            path,\n            showHeader = true,\n            drawerClassNames,\n            drawerWidth,\n            showDrawerReplay,\n            largeMarkers,\n            isAnimatedMarkers,\n            linkBase = '/app-races/',\n        } = this.props;\n        const { focusOnMushers = [], infoOnMushers = [], selectedClassIds = [] } = appState;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { leaderboardMode, filterByraceClass, showLeaderBoard, showNews, reloadLastEpoch,\n            showDrawerMusher, showDrawerCheckpoint,\n            wpData = {},\n            cpData = {},\n            showResults,\n            showTeam, showDog,\n            submenu, replayHistory,\n            selectedCheckpointId,\n        } = this.state;\n\n        const { activeTeams, teamList, waypoints, geoJSONs, waypoints2, waypoints3, zoomToMarkers, classes, race, racetrackerData, maxPoints } = raceStore;\n\n        const musher = wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email);\n        const team = raceStore.getTeamById(musher.team);\n        const selectedClass = raceStore.getClassById(selectedClassIds[0]) || {};\n\n        let wpCheckpoints = [];\n        if (selectedClass.waypoints && selectedClass.waypoints.length > 0) {\n            wpCheckpoints = selectedClass.waypoints;\n        } else if (selectedClass.checkpoints && selectedClass.checkpoints.length > 0) {\n            wpCheckpoints = selectedClass.checkpoints\n                .slice()\n                .filter(cp => cp.position && cp.position[0])\n                .map(cp => ({\n                    id: cp.id,\n                    title: cp.name,\n                    lat: cp.position[0],\n                    lng: cp.position[1],\n                }));\n        }\n\n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={team.dogs} />\n            </Overlay>}\n\n\n            {showHeader && <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`${linkBase}${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            {!race.resultsHide && <a href={`${linkBase}${race.id}/results`}>\n                                <i class='fas fa-stopwatch' />\n                            </a>}\n                        </span>\n                    </div>\n                    <div>\n                        <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                    </div>\n                    {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <>\n                        <div class='d-flex align-items-center'>\n                            &nbsp;\n                        </div>\n                    </>}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>}\n\n            {!showTracking ? <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-hand-paper' /></div>\n                        <h3>Not allowed to view tracking</h3>\n                        {race.countryRegexpMessage}\n                    </div>\n                </div>\n            </> : <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    {race.id ? <>\n                        <Trackmap\n                            marginTop={MARGIN_TOP}\n                            stores={this.props.stores}\n                            raceid={raceid}\n                            waypoints={waypoints}\n                            geoJSONs={showLines ? geoJSONs : null}\n                            // waypoints2={waypoints2}\n                            // waypoints3={waypoints3}\n                            waypoints2={wpCheckpoints}\n\n                            zoomToMarkers={zoomToMarkers}\n                            fullscreenMap={true}\n                            onMarkerClick={this.onMarkerClick}\n                            onMarker2Click={this.onCpMarkerClick}\n                            showHeatmap={race.liveRace < 1}\n                            allTeamIds={allTeamIds}\n                            showTracks={race.liveRace >= 1}\n                            selectedClassIds={selectedClassIds}\n                            showDistanceMarkers={false}\n                            groupWaypoints={false}\n                            focusOnMushers={focusOnMushers}\n                            largeMarkers={largeMarkers}\n                            isAnimatedMarkers={isAnimatedMarkers}\n                            replaySpeed={replaySpeed * 1000}\n                            // key={`trackmap-${selectedClassIds.join('-')}`}\n                            // key={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                            // mapid={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                        />\n                    </> : <>\n                        <Loading stores={this.props.stores} />\n                    </>}\n\n\n                    {timerRunning && <div class='position-absolute' style='top: 125px; left: 5px; z-index: 9999; width: 30px; height: 30px;'>\n                        <ReloadTimer stores={this.props.stores} classNames='float-right ml-2' reloadLastEpoch={reloadLastEpoch} />\n                    </div>}\n\n                    {focusOnMushers && focusOnMushers.length > 0 && <>\n                        <div\n                            class='row mb-2'\n                            style='\n                                background-color: #1C1F4C;\n                                background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                background-size: cover !important;\n                                background-position: 0 0;\n                                border-radius: 10px;\n                            '\n                        >\n                            <div class='col-12 text-white' style='font-size: 1.3em;'>\n                                {focusOnMushers && focusOnMushers.map(musherId => {\n                                    const musher = raceStore.getMusherById(musherId);\n                                    return <>\n                                        <div>\n                                            <nobr>\n                                                <span class='mr-2' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-times text-warning' /> : <i class='far fa-star' />}</span>\n                                                <span class='text-right' style='width: 50px; display: inline-block;'>{musher.bib}</span> {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                            </nobr>\n                                        </div>\n                                    </>\n                                })}\n                            </div>\n                        </div>\n                    </>}\n\n                    {race.mapCredits && <>\n                        <div class='position-absolute' style='bottom: 30px; left: 7px; z-index: 9999; width: 100px; height: 40px;'>\n                            <Markdown markdown={mu.replaceImages(race.mapCredits, race.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </>}\n\n                    {/* <div class={`row`}>\n                        <div class='col-12 form-inline align-top d-flex justify-content-center'>\n                            <div class='form-group'>\n                                <input\n                                    class='form-control form-control-lg text-dark border-primary'\n                                    style='background-color: inherit;'\n                                    type='text'\n                                    onInput={linkstate(this, 'bib')}\n                                    onKeyDown={this.checkForEnter}\n                                />\n                                <button\n                                    type='button'\n                                    class='ml-2 btn btn-lg btn-primary'\n                                    onClick={this.toggleBib}\n                                >Search for Bib</button>\n                            </div>\n                        </div>\n                    </div> */}\n\n                    {(showDrawerReplay || replayHistory) && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleReplayHistory} classNames={drawerClassNames} width={drawerWidth}>\n\n                            {maxPoints > 0 ? <>\n                                <div class='d-flex justify-content-center mx-3'>\n                                    {playingHistory ? <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-warning' onClick={this.pauseHistory}><i class='fas fa-pause' /></button>\n                                        </div>\n                                    </> : <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-success' onClick={this.playHistory}><i class='fas fa-play' /></button>\n                                        </div>\n                                    </>}\n                                    <div class='pl-2 pt-2 flex-grow-1'>\n                                        <input type='range' class='custom-range w-100' min={0} max={maxPoints} value={historyPointIndex} onInput={this.handleHistoryPointIndex} />\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-left rounded-none ${replaySpeed === 1 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={1}\n                                        >\n                                            60x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.5 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.5}\n                                        >\n                                            120x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.25 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.25}\n                                        >\n                                            240x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block right rounded-none ${replaySpeed === 0.12 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.12}\n                                        >\n                                            480x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-right rounded-none ${replaySpeed === 0.05 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.05}\n                                        >\n                                            1000x\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='flex-grow-1 pt-0 font-weight-bolder text-center' style='font-size: 1.1em;'>\n                                        {raceTrackerPointTimestamp && <>\n                                            {util.formatDate(util.parseInputDate(raceTrackerPointTimestamp), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </>}\n                                        {isAdmin && <>\n                                            / {historyPointIndex}\n                                        </>}\n                                    </div>\n                                    {isAdmin && <>\n                                        <button class='btn btn-danger mt-2 mr-4 rounded-pill-both rounded-none' onClick={this.toggleLines}>\n                                            <i class='fas fa-wave-square' /> Show lines\n                                        </button>\n                                    </>}\n                                </div>\n                            </> : <>\n                                <div class='spinner-border text-primary' role='status'>\n                                    <span class='sr-only'>Loading...</span>\n                                </div>\n                            </>}\n                        </Drawer>\n                    </>}\n\n                    {showResults && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleResults} classNames={drawerClassNames} width={drawerWidth}>\n                            <Results\n                                stores={this.props.stores}\n                                raceClass={selectedClass}\n                                race={race}\n                                onMarkerClick={this.onMusherClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerMusher && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerMusher} classNames={drawerClassNames} width={drawerWidth}>\n                            <MusherInfo\n                                stores={this.props.stores}\n                                wpData={wpData}\n                                onMarkerClick={this.onMarkerClick}\n                                onTeamClick={this.onTeamClick}\n                                onUserClick={this.onUserClick}\n                                onDogClick={this.onDogClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerCheckpoint && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerCheckpoint}>\n                            <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                        </Drawer>\n                    </>}\n\n                </div>\n            </>}\n        </>);\n    }\n}\n\nexport default TrackingMap;\n"],"sourceRoot":""}