{"version":3,"sources":["webpack:///./components/track/commentReply.js","webpack:///./components/modal/index.js","webpack:///./components/track/commentAdd.js","webpack:///./components/track/comments.js","webpack:///./components/track/index.js"],"names":["TrackCommentReply","observer","Component","commentTrack","async","callback","commentId","props","track","trackStore","stores","comment","state","response","commentReplyTrack","id","status","setState","render","inputRef","this","userStore","user","displayNameShort","firstname","util","ucfirst","lastname","email","userImage","image","images","undefined","class","style","s3SmallLink","for","type","placeholder","onInput","linkState","value","ref","onClick","Modal","toggleDate","showDate","touchStart","e","stopPropagation","startY","touches","pageY","touchEnd","readyToRefresh","touchMove","close","refreshing","y","appContainer","scrollTop","imagexxl","thumb","name","title","date","formatDate","locale","formatDistance","Date","src","onTouchstart","onTouchend","onTouchmove","c","target","rel","href","download","TrackAdd","constructor","super","inputRefObject","showAddImage","body","mu","resizeTextarea","addImage","addImages","push","handleImageErrored","onerror","setTimeout","data-id","isArray","map","img","onError","removeImage","data-name","object","updateField","autoOpen","initialState","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","TrackComments","parentElement","dataset","likeTrackComment","replyId","likeTrackCommentReply","replyComment","focus","toggleComments","toggleReplies","col","offset","compact","currentUser","language","filteredComments","totalComments","diplayedComments","comments","length","slice","Math","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","max_comments","imgs","toJS","imageIdx","currentImage","currentLocationGeocode","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","addLikeComment","loading","s3LargeLink","idx","viewImage","data-idx","createdDate","reply","hasLikedReply","data-comment","fields","more","MAX_LOADINDEX","getMaxLoadIndex","Track","likeTrack","toggleAddComment","showModal","preventDefault","displayModal","currentImageXXL","closeModal","updateTimer","showUser","isPublic","gpxInfo","loadIndex","hasLikedNews","place","getLoadIndexColor","normalizeBetween","floor","getLoadIndexText","public","users","garminId","stravaId","distanceKm","elevation","gpx","data-image","data-imagexxl","s3XXLargeLink","data-thumb","data-title","data-date"],"mappings":"sLAUMA,EADLC,Y,EAAD,cACgCC,YAAU,gDACtCC,aAAeC,iBACX,MAAM,SAAEC,EAAW,SAAb,UAAuBC,GAAc,EAAKC,OAC1C,MAAEC,GAAU,EAAKD,OACvB,WAAEE,GAAe,EAAKF,MAAMG,QACtB,QAAEC,EAAU,IAAO,EAAKC,MAC9BC,QAAiBJ,EAAWK,kBAAkB,CAAEC,GAAIP,EAAMO,GAAIT,YAAWK,YAC3EE,GAAgC,MAApBA,EAASG,SACf,EAAKC,SAAS,CACVN,QAAS,KAEbN,EAAS,CAAEG,QAAOK,eAI1BK,SACI,MAAM,SAAEC,GAAaC,KAAKb,OACpB,QAAEI,GAAYS,KAAKR,OACnB,UAAES,GAAcD,KAAKb,MAAMG,QAC3B,KAAEY,EAAO,IAAOD,EAChBE,EAAmBD,EAAKE,UAAa,GAAEC,IAAKC,QAAQJ,EAAKE,WAAW,KAAQC,IAAKC,QAAQJ,EAAKK,UAAU,KAAW,GAAEF,IAAKC,QAAQJ,EAAKM,OAAS,IAAI,GAEpJC,EAAYP,EAAKQ,QAAUR,EAAKS,OAAST,EAAKS,OAAO,QAAKC,GAEhE,OACI,mBAAKC,MAAM,SACP,mBAAKA,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAUL,EAAa,0BAAyBA,EAAUM,yCAA2C,IAA7F,mCAENN,GAAa,oBAAMI,MAAM,sBAAsBC,MAAM,oBAAoBX,IAE/E,mBAAKU,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUG,IAAI,mBAAkB,YAAC,IAAD,CAAMrB,GAAG,oBAAT,cAC7C,mBAAKkB,MAAM,+CACP,YAAC,IAAD,KACI,qBACIA,MAAM,8BACNI,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMvB,GAAG,0BAAT,yBACbwB,QAASC,YAAUpB,KAAM,WACzBqB,MAAO9B,EACP+B,IAAKvB,OAKrB,mBAAKc,MAAM,uCACP,sBAAQI,KAAK,SAASJ,MAAM,8BACxBU,QAASvB,KAAKjB,cACjB,iBAAG8B,MAAM,iC,EAW3BjC,O,4FCrET4C,EADL3C,Y,EAAD,cACoBC,YAAU,mCAC1B2C,WAAa,KACT,MAAM,SAAEC,GAAa1B,KAAKR,MAC1BQ,KAAKH,SAAS,CAAE6B,UAAWA,KAHL,KAM1BC,WAAcC,IACVA,EAAEC,kBACF7B,KAAKH,SAAS,CACViC,OAAQF,EAAEG,QAAQ,GAAGC,SATH,KAa1BC,SAAYL,IACRA,EAAEC,kBACF7B,KAAKH,SAAS,CACViC,YAAQlB,EACRsB,gBAAgB,KAjBE,KAqB1BC,UAAaP,IACTA,EAAEC,kBACF,MAAM,MAAEO,GAAUpC,KAAKb,OACjB,OAAE2C,EAAF,WAAUO,GAAerC,KAAKR,MAE9B8C,EAAIV,EAAEG,QAAQ,GAAGC,MACvB,GAAIhC,KAAKuC,aAAc,CACnB,MAAM,UAAEC,GAAcxC,KAAKuC,aACT,IAAdC,GAAmBF,EAAIR,EAJR,KAIoCO,GACnDD,MAKZtC,SACI,MAAM,SAAE4B,GAAa1B,KAAKR,OACpB,MAAEkB,EAAF,SAAS+B,EAAT,MAAmBL,EAAnB,MAA0BM,EAA1B,KAAiCC,EAAjC,MAAuCC,EAAvC,KAA8CC,GAAS7C,KAAKb,MAClE,OACI,mBAAK0B,MAAM,qCAAqCC,MAAM,gCAClD,sBAAQD,MAAM,qCAAqCU,QAASa,GAA5D,KAEI,mBAAKvB,MAAM,oBAEN6B,GAAS,mBAAK7B,MAAQ,mEAAmEC,MAAO4B,EAAS,0BAAyBA,OAAa,IAAtI,KAGV,mBAAK7B,MAAM,kCAAkCC,MAAM,uBAC9C6B,GAAQ,sBAAQ9B,MAAM,QAAQ8B,EAAtB,KACRC,EAAM,uBACP,qBAAO/B,MAAM,cACRgC,GAAQ,qBAAOtB,QAASvB,KAAKyB,YACzBC,EAAWrB,IAAKyC,WAAWD,EAAM,CAAEE,OAAQ,UAAa1C,IAAK2C,eAAeH,EAAM,IAAII,KAAQ,CAAEF,OAAQ,cAO7H,mBAAKG,IAAKxC,EACNG,MAAM,mCACNU,QAASa,EACTe,aAAcnD,KAAK2B,WACnByB,WAAYpD,KAAKiC,SACjBoB,YAAarD,KAAKmC,UAClBb,IAAKgC,GAAKtD,KAAKuC,aAAee,IAGlC,iBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAMhB,GAAY/B,EAAOgD,SAAUjB,GAAY/B,GACxF,iBAAGG,MAAM,oBADb,IACkC,YAAC,IAAD,CAAMlB,GAAG,kBAAT,yB,EAOnC6B,O,6ICvETmC,EADL9E,Y,EAAD,cACuBC,YACnB8E,YAAYzE,GAAO,MACf0E,MAAM1E,GADS,YAYnBJ,aAAeC,iBACX,MAAM,SAAEC,EAAW,SAAb,eAAuB6E,EAAiB,IAAO,EAAK3E,OACpD,MAAEC,GAAU,EAAKD,OACvB,WAAEE,GAAe,EAAKF,MAAMG,QACtB,QAAEC,EAAF,aAAWwE,GAAiB,EAAKvE,MAEvCC,QAAiBJ,EAAWN,aAAa,CAAEY,GAAIP,EAAMO,GAAIJ,YAC3DE,GAAgC,MAApBA,EAASG,SACf,EAAKC,SAAS,CACVN,QAAS,CACLyE,KAAM,GACNrD,OAAQ,KAEb,KACCsD,IAAGC,eAAeJ,EAAe1E,EAAMO,KACnCoE,GACA,EAAKI,aAGblF,EAAS,CAAEG,QAAOK,eA/BP,KAmCnB2E,UAAY,EAAG/C,YAEX,MAAM,QAAE9B,GAAYS,KAAKR,MACzBD,EAAQoB,OAAO0D,QAAQhD,GACvBrB,KAAKH,SAAS,CAAEN,aAvCD,KA0CnB4E,SAAW,KACP,MAAM,aAAEJ,GAAe,GAAU/D,KAAKR,MACtCQ,KAAKH,SAAS,CACVkE,cAAeA,KA7CJ,KAiDnBO,mBAAsB1C,IAClB,MAAMlB,EAAQkB,EAAE2B,OAChB7C,EAAM6D,QAAU,KAChBC,WAAW,KACP9D,EAAMwC,KAAQ,IAAG,IAAID,MACtB,MApDHjD,KAAKR,MAAQ,CACTD,QAAS,CACLyE,KAAM,GACNrD,OAAQ,IAEZoD,cAAc,GAElB/D,KAAKD,SAAW,GAgDpBD,SACI,MAAM,SAAEC,EAAF,MAAYX,GAAUY,KAAKb,OAC3B,QAAEI,EAAF,aAAWwE,GAAiB/D,KAAKR,OACjC,UAAES,GAAcD,KAAKb,MAAMG,QAC3B,KAAEY,EAAO,IAAOD,EAChBE,EAAmBD,EAAKE,UAAa,GAAEC,IAAKC,QAAQJ,EAAKE,WAAW,KAAQC,IAAKC,QAAQJ,EAAKK,UAAU,KAAW,GAAEF,IAAKC,QAAQJ,EAAKM,OAAS,IAAI,GAEpJC,EAAYP,EAAKQ,QAAUR,EAAKS,OAAST,EAAKS,OAAO,QAAKC,GAEhE,OACI,mBAAKC,MAAM,2EACP,mBAAKA,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAUL,EAAa,0BAAyBA,EAAUM,yCAA2C,IAA7F,mCAENN,GAAa,oBAAMI,MAAM,sBAAsBC,MAAM,oBAAoBX,IAE/E,mBAAKU,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUG,IAAI,mBAAkB,YAAC,IAAD,CAAMrB,GAAG,oBAAT,cAC7C,mBAAKkB,MAAM,+CACP,YAAC,IAAD,KACI,qBACIA,MAAM,8BACNI,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMvB,GAAG,0BAAT,yBACbwB,QAASC,YAAUpB,KAAM,gBACzBqB,MAAO9B,EAAQyE,KACf1C,IAAKvB,KAIb,mBAAKc,MAAM,oBAAoBC,MAAM,4CACjC,iBAAGD,MAAM,6BACL4D,UAASrF,EAAMO,GACf4B,QAASvB,KAAKmE,cAK9B,mBAAKtD,MAAM,uCACP,sBAAQI,KAAK,SAASJ,MAAM,uBACxBU,QAASvB,KAAKjB,cACjB,iBAAG8B,MAAM,4BAKzBkD,GAAgB,mBACb,mBAAKlD,MAAM,sBACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACNR,IAAKqE,QAAQnF,EAAQoB,SAAWpB,EAAQoB,OAAOgE,IAAIC,GAChD,mBAAK/D,MAAM,aACP,mBAAKqC,IAAK0B,EAAI7D,YAAaF,MAAM,YAAYgE,QAAS7E,KAAKsE,qBAC3D,sBAAQzD,MAAM,sBACVU,QAASvB,KAAK8E,YACdC,YAAWH,EAAIjC,MAClB,iBAAG9B,MAAM,iBAHV,YAQhB,YAAC,IAAD,CAAQmE,OAAQzF,EAAS0F,YAAajF,KAAKoE,UAAWc,UAAU,W,EAQzEvB,Q,+hBCnIf,MAAMwB,EAAe,CACjBC,eAAgB,GAChBC,iBAAiB,EACjBC,eAAgB,GAChBC,aAAc,GACdC,YAAa,GACbC,UAAW,I,IAMTC,EADL7G,Y,EAAD,cAC4BC,YACvB8E,YAAYzE,GAAO,MAChB0E,MAAM1E,GADU,YAQpBqG,YAAcxG,eAAO4C,GACjB,MAAM,SAAE3C,EAAW,UAAa,EAAKE,MAC/BD,EAAY0C,EAAE2B,OAAOoC,cAAcC,QAAQjG,IAAMiC,EAAE2B,OAAOqC,QAAQjG,IAElE,MAAEP,GAAU,EAAKD,OACvB,WAAEE,GAAe,EAAKF,MAAMG,OAC5BG,QAAiBJ,EAAWwG,iBAAiB,CAAElG,GAAIP,EAAMO,GAAIT,cAK7D,OAHFO,GAAgC,MAApBA,EAASG,QACfX,EAAS,CAAEG,QAAOF,YAAWO,cAE1B,GAnBS,KAsBpBgG,UAAYzG,eAAO4C,GACf,MAAM,SAAE3C,EAAW,UAAa,EAAKE,MAE/B2G,EAAUlE,EAAE2B,OAAOoC,cAAcC,QAAQjG,IAAMiC,EAAE2B,OAAOqC,QAAQjG,GAChET,EAAY0C,EAAE2B,OAAOoC,cAAcC,QAAQrG,SAAWqC,EAAE2B,OAAOqC,QAAQrG,SAEvE,MAAEH,GAAU,EAAKD,OACvB,WAAEE,GAAe,EAAKF,MAAMG,OAC5BG,QAAiBJ,EAAW0G,sBAAsB,CAAEpG,GAAIP,EAAMO,GAAImG,UAAS5G,cAEvEO,GAAgC,MAApBA,EAASG,QACrBX,EAAS,CAAEG,QAAOF,YAAWO,cAjCjB,KAqCpBuG,aAAehH,eAAO4C,GAClB,MAAM1C,EAAY0C,EAAE2B,OAAOoC,cAAcC,QAAQjG,IAAMiC,EAAE2B,OAAOqC,QAAQjG,IAElE,eAAEyF,GAAmB,EAAK5F,MAChC4F,EAAelG,IAAckG,EAAelG,GAClD,EAAKW,SAAS,CACbuF,kBACE,KACW,EAAKrF,SAASb,IACd,EAAKa,SAASb,GAAW+G,WA9CjB,KAmDpBC,eAAiB,KACnB,MAAM,gBAAEb,GAAoBrF,KAAKR,MACjCQ,KAAKH,SAAS,CACbwF,iBAAkBA,KAtDG,KA0DpBc,cAAiBvE,IACb,MAAM1C,EAAY0C,EAAE2B,OAAOoC,cAAcC,QAAQjG,IAAMiC,EAAE2B,OAAOqC,QAAQjG,IACxE,eAAE2F,GAAmBtF,KAAKR,MAC1B8F,EAAepG,IAAcoG,EAAepG,GAClDc,KAAKH,SAAS,CACbyF,oBA7DKtF,KAAKR,M,+VAAL,IACO2F,GAEPnF,KAAKD,SAAW,GA8DpBD,SACI,MAAM,eAAEsF,EAAF,gBAAkBC,EAAlB,eAAmCC,EAAnC,aAAmDC,EAAnD,YAAiEC,GAAgBxF,KAAKR,OAC5F,MAAEJ,EAAF,SAASH,EAAW,SAApB,IAA8BmH,EAAM,GAApC,OAAwCC,EAAS,EAAjD,QAAoDC,GAAU,GAAWtG,KAAKb,OACxE,UAAEc,GAAcD,KAAKb,MAAMG,QACzBY,KAAMqG,EAAR,SAAqBC,EAAW,MAAkBvG,EAExD,IAAIwG,EAAmB,GACnBC,EAAgB,EAChBC,EAAmB,EAEvB,GAAIvH,EAAMwH,SAAU,CAEhB,GADAF,EAAgBtH,EAAMwH,SAASC,OAC3BxB,EACAoB,EAAmBrH,EAAMwH,aACtB,CAGHH,EAAmBrH,EAAMwH,SAASE,MAAMC,KAAKC,IAAIN,GAD5BJ,EAAU,EAvF1B,GAwF0E,IAEnFK,EAAmBF,EAAiBI,OAGxC,OACI,mBAAKhG,MAAQ,OAAMuF,YAAcC,+CAC5BhB,GAAmB,uBAChB,sBAAQxE,MAAM,gCACVU,QAASvB,KAAKkG,gBAEd,YAAC,IAAD,CAAMvG,GAAG,8BAAT,8BAGPP,GAASqH,GAAoBA,EAAiBQ,UAAUtC,IAAKpF,IAC1D,MAAM,KAAEW,EAAO,IAAOX,EAChBY,EAAmBD,EAAKE,UAAa,GAAEC,IAAKC,QAAQJ,EAAKE,WAAW,KAAQC,IAAKC,QAAQJ,EAAKK,UAAU,KAAW,GAAEF,IAAKC,QAAQJ,EAAKM,OAAS,IAAI,GACpJ0G,EAAchH,EAAKE,UAAa,GAAEF,EAAKE,aAAaF,EAAKK,WAAc,GAAEL,EAAKM,MAC9EC,EAAYP,EAAKQ,QAAUR,EAAKS,OAAST,EAAKS,OAAO,QAAKC,GAC1DuG,EAAkB5H,EAAQ6H,OAAS7H,EAAQ6H,MAAMC,UAAUzF,GAAKA,EAAE1B,OAASqG,EAAY5G,KAAO,EAEpG,IAAI2H,EAAmB,GACnBC,EAAe,EACfC,EAAkB,EAClBjI,EAAQqH,WACRW,EAAehI,EAAQqH,SAASC,OAE5BS,EADAhC,EAAe/F,EAAQI,IACJJ,EAAQqH,SAERrH,EAAQqH,SAASE,MAAM,OArC1DW,GAuCYD,EAAkBF,EAAiBT,QAGvC,MAAMlG,EAAS,GACf,GAAIpB,EAAQoB,OAAQ,CAChB,MAAM+G,EAAOC,YAAKpI,EAAQoB,QAC1BA,EAAO0D,QAAQqD,GAEnB,MAAME,EAAWrC,EAAahG,EAAQI,IAAM4F,EAAahG,EAAQI,IAAM,EACjEkI,EAAelH,GAAUA,EAAOiH,GAAYjH,EAAOiH,GAAY,MAE/D,uBAAEE,EAAyB,IAAOvI,EAExC,OACI,mBAAKsB,MAAM,OACP,mBAAKA,MAAM,wCACP,mBACIA,MAAQ,mEACRC,OAAUL,EAAa,0BAAyBA,EAAUM,yCAA2C,IAA7F,mCAENb,EAAKQ,OAAS,oBAAMG,MAAM,sBAAsBC,MAAM,oBAAoBX,IAEhF,mBAAKU,MAAM,wBAAwBC,MAAM,uBACrC,mBAAKD,MAAM,2BACP,kBAAIA,MAAM,wBAAwBC,MAAM,qBAAqBoG,GAC7D,YAAC,IAAD,CAAUa,SAAU9D,IAAG+D,cAAczI,EAAQA,QAASA,EAAQoB,OAAQ6F,GAAWyB,aAAchE,IAAGiE,wBAEtG,uBACI,mBAAKrH,MAAM,6BACNgH,GAAgB,mBAAKhH,MAAM,kCACxB,mBACIA,MAAQ,+CACRC,MAAQ,oBACRqH,WAAYnI,KAAKoI,eACjB3D,UAASlF,EAAQI,IAEjB,mBAAK0I,QAAQ,OAAOxH,MAAQ,YAAYC,MAAM,oBAAoBoC,IAAK2E,EAAaS,eAEvF9C,EAAYjG,EAAQI,KAAO,oBAAMkB,MAAM,mDAAmDC,MAAM,+EAC7F,iBAAGD,MAAM,6BAGhBF,GAAUA,EAAOkG,OAAS,GAAK,mBAAKhG,MAAM,iCACtCR,IAAKqE,QAAQ/D,IAAWA,EAAOgE,IAAI,CAACC,EAAK2D,IAC9B,mBACJ,mBACI1H,MAAQ,2BACRC,MAAQ,wCAER,mBAAKuH,QAAQ,OAAOxH,MAAQ,mBAAmBC,MAAM,oBAAoBoC,IAAK0B,EAAI7D,YAAaQ,QAASvB,KAAKwI,UAAW/D,UAASlF,EAAQI,GAAI8I,WAAUF,UAQ/K,yBACI,sBAAQ1H,MAAQ,6BAA2BsG,EAAkB,eAAiB,IAC1E5F,QAASvB,KAAKwF,YACdf,UAASlF,EAAQI,IAEjB,YAAC,IAAD,CAAMA,GAAG,iBAAT,QALR,IAQI,sBAAQkB,MAAM,2BACVU,QAASvB,KAAKgG,aACdvB,UAASlF,EAAQI,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAZR,IAeI,sBAAQkB,MAAM,qCACTR,IAAK2C,eAAezD,EAAQmJ,YAAa,IAAIzF,KAAQ,CAAEF,OAAQ,aAI3ExD,EAAQ6H,OAAS7H,EAAQ6H,MAAMP,OAAS,GAAK,qBAAOhG,MAAM,4DAA4DC,MAAM,8BACzH,iBAAGD,MAAM,kCADiC,IACGtB,EAAQ6H,MAAMP,SAGnE,mBAAKhG,MAAM,wBAENtB,GAAW+H,GAAoBA,EAAiB3C,IAAKgE,IAClD,MAAM,KAAEzI,EAAO,IAAOyI,EAChBxI,EAAmBD,EAAKE,UAAa,GAAEC,IAAKC,QAAQJ,EAAKE,WAAW,KAAQC,IAAKC,QAAQJ,EAAKK,UAAU,KAAW,GAAEF,IAAKC,QAAQJ,EAAKM,OAAS,IAAI,GACpJ0G,EAAchH,EAAKE,UAAa,GAAEF,EAAKE,aAAaF,EAAKK,WAAc,GAAEL,EAAKM,MAC9EC,EAAYP,EAAKQ,QAAUR,EAAKS,OAAST,EAAKS,OAAO,QAAKC,GAC1DgI,EAAgBD,EAAMvB,OAASuB,EAAMvB,MAAMC,UAAUzF,GAAKA,EAAE1B,OAASqG,EAAY5G,KAAO,EAE9F,OACI,mBAAKkB,MAAM,OACP,mBAAKA,MAAM,wCACP,mBACIA,MAAQ,mEACRC,OAAUL,EAAa,0BAAyBA,EAAUM,yCAA2C,IAA7F,mCAENb,EAAKQ,OAAS,oBAAMG,MAAM,sBAAsBC,MAAM,oBAAoBX,IAEhF,mBAAKU,MAAM,wBAAwBC,MAAM,uBACrC,mBAAKD,MAAM,2BACP,kBAAIA,MAAM,wBAAwBC,MAAM,qBAAqBoG,GAC5DyB,EAAMpJ,SAEX,yBACI,sBAAQsB,MAAQ,6BAA2B+H,EAAgB,eAAiB,IACxErH,QAASvB,KAAKyF,UACdoD,eAActJ,EAAQI,GACtB8E,UAASkE,EAAMhJ,IAEf,YAAC,IAAD,CAAMA,GAAG,iBAAT,QANR,IASI,sBAAQkB,MAAM,2BACVU,QAASvB,KAAKgG,aACdvB,UAASlF,EAAQI,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAbR,IAgBI,sBAAQkB,MAAM,qCACTR,IAAK2C,eAAe2F,EAAMD,YAAa,IAAIzF,KAAQ,CAAEF,OAAQ,aAIzE4F,EAAMvB,OAAS,qBAAOvG,MAAM,4DAA4DC,MAAM,8BAC3F,iBAAGD,MAAM,kCADG,IACiC8H,EAAMvB,MAAMP,YAM5EU,EAAeC,EAAkB,GAAK,uBACnC,sBAAQ3G,MAAM,2BACVU,QAASvB,KAAKmG,cACd1B,UAASlF,EAAQI,IAEjB,YAAC,IAAD,CAAMA,GAAG,qBAAqBmJ,OAAQ,CAAEC,KAAMxB,EAAeC,IAA7D,OACSD,EAAeC,EADxB,4BAOXpC,EAAe7F,EAAQI,KAAO,mBAAKkB,MAAM,iDACtC,YAAC,IAAD,CAAmBvB,OAAQU,KAAKb,MAAMG,OAAQF,MAAOA,EACjDH,SAAUA,EACVC,UAAWK,EAAQI,GACnBI,SAAUuD,GAAKtD,KAAKD,SAASR,EAAQI,IAAM2D,QAM9DoD,EAAgBC,EAAmB,GAAK,uBACrC,sBAAQ9F,MAAM,2BACVU,QAASvB,KAAKkG,gBAEd,YAAC,IAAD,CAAMvG,GAAG,qBAAqBmJ,OAAQ,CAAEC,KAAMrC,EAAgBC,IAA9D,OACSD,EAAgBC,EADzB,2BAKPtB,GAAmB,uBAChB,sBAAQxE,MAAM,2BACVU,QAASvB,KAAKkG,gBAEd,YAAC,IAAD,CAAMvG,GAAG,8BAAT,mC,EAQT+F,Q,6iBC3Sf,MAAMsD,EAAgB/E,IAAGgF,kBAEnB9D,EAAe,CACpBC,gBAAgB,G,IAIX8D,EADLrK,Y,EAAD,cACoBC,YAChB8E,YAAYzE,GAAO,MACf0E,MAAM1E,GADS,YASnBgK,UAAYnK,iBACd,MAAM,WAAEK,GAAe,EAAKF,MAAMG,QACtB,MAAEF,GAAU,EAAKD,YACNE,EAAW8J,UAAU,CAAExJ,GAAIP,EAAMO,MAZnC,KAmBtByJ,iBAAoBxH,IACnB,MAAMjC,EAAKiC,EAAE2B,OAAOoC,cAAcC,QAAQjG,IAAMiC,EAAE2B,OAAOqC,QAAQjG,IAC3D,eAAEyF,GAAmBpF,KAAKR,MAChCQ,KAAKH,SAAS,CACbuF,gBAAiBA,GACf,KACEpF,KAAKD,SAASJ,IACjBK,KAAKD,SAASJ,GAAIsG,WA1BC,KA+BnBoD,UAAazH,IACTA,EAAEC,kBACFD,EAAE0H,iBAOFtJ,KAAKH,SAAS,CACV0J,cAAc,EACd1B,aARQjG,EAAE2B,OAAOqC,QAAQlF,MASzB8I,gBARW5H,EAAE2B,OAAOqC,QAAQnD,SAS5BC,MARUd,EAAE2B,OAAOqC,QAAQlD,MAS3BC,KARSf,EAAE2B,OAAOqC,QAAQjD,KAS1BC,MARUhB,EAAE2B,OAAOqC,QAAQhD,MAS3BC,KARSjB,EAAE2B,OAAOqC,QAAQ/C,QAvCf,KAmDnB4G,WAAa,KACTzJ,KAAKH,SAAS,CACV0J,cAAc,KArDH,KAyDnB9H,WAAa,KACT,MAAM,SAAEC,GAAa1B,KAAKR,MAC1BQ,KAAKH,SAAS,CAAE6B,UAAWA,KAzD3B1B,KAAKR,M,+VAAL,IACO2F,GAEPnF,KAAK0J,YAAc,GACzB1J,KAAKD,SAAW,GAwDdD,SACI,MAAM,aAAEyJ,EAAF,aAAgB1B,EAAhB,gBAA8B2B,EAA9B,SAA+C9H,EAA/C,MAAyDgB,EAAzD,KAAgEC,EAAhE,MAAsEC,EAAtE,KAA6EC,EAA7E,eAAmFuC,GAAmBpF,KAAKR,OAE3G,MAAEJ,EAAF,SAASuK,GAAW,EAApB,SAA2BC,GAAW,GAAU5J,KAAKb,MACrDuB,EAAQtB,EAAMsB,OAAStB,EAAMsB,MAAMK,YAAc3B,EAAMsB,MAAQ,MAC/D,QAAEmJ,EAAU,IAAOzK,GACzB,UAAE0K,EAAY,GAAMD,GAEd,UAAE5J,GAAcD,KAAKb,MAAMG,QAC3B,KAAEY,GAASD,GACX,MAAEmH,EAAQ,GAAV,SAAcR,EAAW,IAAOxH,EACtC2K,EAAe3K,EAAMgI,OAAShI,EAAMgI,MAAMC,UAAUzF,GAAKA,EAAE1B,OAASA,EAAKP,KAAO,EAEhF,OACI,mBAAKkB,MAAM,cACP,mBAAKA,MAAM,OACN0I,GAAgB,YAAC,IAAD,CAAOnH,MAAOpC,KAAKyJ,WAAY/I,MAAOmH,EAAcpF,SAAU+G,EAAiB9G,MAAOA,EAAOC,KAAMA,EAAMC,MAAOA,EAAOC,KAAMA,IAE9I,mBAAKhC,MAAM,kFAGP,mBAAKA,MAAQ,iDAAiDC,MAAOJ,EAAS,0BAAyBA,EAAMK,iBAAmB,KAC1HL,GAAS,iBAAGG,MAAM,oCAAoCC,MAAM,sBAElE,mBAAKD,MAAM,mBAAmBC,MAAM,uBAChC,iBAAGD,MAAM,iBAAiB4C,KAAO,WAAUrE,EAAMO,KAAKiK,EAAW,UAAY,MACzE,kBAAI/I,MAAM,OAAOC,MAAM,uBAAuB1B,EAAMuD,MACpD,mBAAK9B,MAAM,kCAAiC,yBAAQzB,EAAM4K,SAE9D,uBACI,yBACKF,EAAY,GAAK,oBAAMjJ,MAAQ,aAAYoD,IAAGgG,kBAAkB5J,IAAK6J,iBAAiBJ,EAAW,EAAGd,EAAe,EAAG,OACnH,iBAAGnI,MAAM,0BACRkG,KAAKoD,MAAM9J,IAAK6J,iBAAiBJ,EAAW,EAAGd,EAAe,EAAG,MAFpD,MAGb/E,IAAGmG,iBAAiB/J,IAAK6J,iBAAiBJ,EAAW,EAAGd,EAAe,EAAG,SAIvF,uBACsB,IAAjB5J,EAAMiL,QAAgB,oBAAMxJ,MAAM,uBAAZ,aACtB8I,GAAY,oBAAM9I,MAAM,uCAAuCoD,IAAGiD,YAAY9H,EAAMkL,SAEzF,qBAAOzJ,MAAM,cACRzB,EAAMyD,MAAQ,qBAAOtB,QAASvB,KAAKyB,YAC/BC,EAAWrB,IAAKyC,WAAW1D,EAAMyD,KAAM,CAAEE,OAAQ,UAAa1C,IAAK2C,eAAe5D,EAAMyD,KAAM,IAAII,KAAQ,CAAEF,OAAQ,UAAW,yBAGxI,qBAAOlC,MAAM,cACRzB,EAAMmL,SAAW,GAAK,mBAAK1J,MAAQ,kFAAkFC,MAAQ,0DAC7H1B,EAAMoL,SAAW,GAAI,mBAAK3J,MAAQ,kFAAkFC,MAAQ,uDAE7H,iBAAGD,MAAM,gBAJb,IAI8B,YAAC,IAAD,CAAUvB,OAAQU,KAAKb,MAAMG,OAAQ+B,MAAOjC,EAAMqL,aAC5E,iBAAG5J,MAAM,yBALb,IAKuC,YAAC,IAAD,CAAWvB,OAAQU,KAAKb,MAAMG,OAAQ+B,MAAOjC,EAAMsL,YACrFtL,EAAMuL,KAAO,iBAAG9J,MAAM,kCAKnC,mBAAKA,MAAM,wDAAwDC,MAAM,wBACrE,mBAAKD,MAAM,OACNzB,EAAMuB,QAAUvB,EAAMuB,OAAOgE,IAAIC,GAC9B,mBAAK/D,MAAQ,4DACTC,MAAO8D,EAAO,0BAAyBA,EAAI7D,iBAAmB,GAC9DQ,QAASvB,KAAKqJ,UACduB,aAAYhG,EAAI0D,YAChBuC,gBAAejG,EAAIkG,cACnBC,aAAY3L,EAAMsB,OAAStB,EAAMsB,MAAMK,YACvCiK,aAAY5L,EAAMuD,KAClBsI,YAAW7L,EAAMyD,MAPrB,QAeR,mBAAKhC,MAAM,kEACNuG,GAASA,EAAMP,OAAS,GAAK,qBAAOhG,MAAM,0CAA0CC,MAAM,8BACvF,iBAAGD,MAAM,kCADiB,IACmBuG,EAAMP,QAEtDD,GAAYA,EAASC,OAAS,GAAK,qBAAOhG,MAAM,sDAAsDC,MAAM,8BACzG,iBAAGD,MAAM,gCADuB,IACW+F,EAASC,SAI5D,mBAAKhG,MAAM,uEACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,qBACP,sBAAQI,KAAK,SAASJ,MAAQ,0BAAyBkJ,EAAe,UAAY,gCAAgCA,EAAe,eAAiB,KAC9IxI,QAASvB,KAAKmJ,WAGd,iBAAGtI,OAAUkJ,EAAe,mBAAqB,OAAtC,kBAJf,UAOJ,mBAAKlJ,MAAM,qBACP,sBAAQI,KAAK,SAASJ,MAAM,oDACxB4D,UAASrF,EAAMO,GACf4B,QAASvB,KAAKoJ,kBAEd,iBAAGvI,MAAM,mBAJb,eAUXuE,GAAkB,YAAC,IAAD,CACf9F,OAAQU,KAAKb,MAAMG,OACnBF,MAAOA,EACPW,SAAUuD,GAAKtD,KAAKD,SAASX,EAAMO,IAAM2D,IAE7C,YAAC,IAAD,CAAehE,OAAQU,KAAKb,MAAMG,OAAQF,MAAOA,EAAOgH,IAAK,GAAIC,OAAQ,EAAGC,SAAS,U,EAQ9F4C","file":"34.chunk.70881.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackCommentReply extends Component {\n    commentTrack = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await trackStore.commentReplyTrack({ id: track.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TrackCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\n@observer\nclass Modal extends Component {\n    toggleDate = () => {\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startY: e.touches[0].pageY,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startY: undefined,\n            readyToRefresh: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        const { close } = this.props;\n        const { startY, refreshing } = this.state;\n        const scrollDistance = 30;\n        const y = e.touches[0].pageY;\n        if (this.appContainer) {\n            const { scrollTop } = this.appContainer;\n            if (scrollTop === 0 && y > startY + scrollDistance && !refreshing) {\n                close();\n            }\n        }\n    }\n\n    render() {\n        const { showDate } = this.state;\n        const { image, imagexxl, close, thumb, name, title, date } = this.props;\n        return (\n            <div class='fixed-top bg-dark text-center pt-2' style='width: 100vw; height: 100vh;'>\n                <button class='btn btn-secondary float-right mr-2' onClick={close}>X</button>\n\n                    <div class='d-flex mb-2 px-2'>\n                        {/* {JSON.stringify(dog, null, 4)} */}\n                        {thumb && <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={thumb ? `background-image: url(\"${thumb}\");` : ''}>\n                            &nbsp;\n                        </div>}\n                        <div class='flex-grow-1 pl-3 pr-2 text-left' style='line-height: 1.3em;'>\n                            {name && <strong class='mr-2'>{name}:</strong>}\n                            {title}<br />\n                            <small class='text-muted'>\n                                {date && <small onClick={this.toggleDate}>\n                                    {showDate ? util.formatDate(date, { locale: 'no-NB' }) : util.formatDistance(date, new Date(), { locale: 'no-NB' })}\n                                </small>}\n                            </small>\n                        </div>\n                    </div>\n\n\n                <img src={image}\n                    class='img-fluid align-middle mt-2 mb-2'\n                    onClick={close}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                    ref={c => this.appContainer = c}\n                />\n\n                <a target='_blank' rel='noopener noreferrer' href={imagexxl || image} download={imagexxl || image}>\n                    <i class='fas fa-download' /> <Text id='modal.download'>Last ned bildet</Text>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass TrackAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n        };\n        this.inputRef = {};\n    }\n\n    commentTrack = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n\n\t\tconst response = await trackStore.commentTrack({ id: track.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[track.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ track, response });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, track } = this.props;\n        const { comment, showAddImage } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-3 position-relative'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={track.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentTrack}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default TrackAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport TrackReplyComment from '../../components/track/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass TrackComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackComment({ id: track.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { track } = this.props;\n\t\tconst { trackStore } = this.props.stores;\n\t\tconst response = await trackStore.likeTrackCommentReply({ id: track.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ track, commentId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, likeComment } = this.state;\n\t\tconst { track, callback = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'en', isAdmin } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (track.comments) {\n            totalComments = track.comments.length;\n            if (showAllComments) {\n                filteredComments = track.comments;\n            } else {\n                // filteredComments = track.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = track.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n                {track && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n    \n                    const { currentLocationGeocode = {} } = comment;\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded-lg'>\n                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                        <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                    <div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row position-relative'>\n                                                <div\n                                                    class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 60vh;`}\n                                                    onDblclick={this.addLikeComment}\n                                                    data-id={comment.id}\n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                                {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                    <i class='fas fa-heart likeStory' />\n                                                </span>}\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {util.isArray(images) && images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                        {reply.comment}\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <TrackReplyComment stores={this.props.stores} track={track}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default TrackComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport Modal from '../modal';\nimport TrackComments from '../../components/track/comments';\nimport TrackAddComment from '../../components/track/commentAdd';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst MAX_LOADINDEX = mu.getMaxLoadIndex();\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Track extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n    likeTrack = async () => {\n\t\tconst { trackStore } = this.props.stores;\n        const { track } = this.props;\n\t\tconst response = await trackStore.likeTrack({ id: track.id });\n\n        if (response.status === 200) {\n\t\t\t\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[id]) {\n\t\t\t\tthis.inputRef[id].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    showModal = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const img = e.target.dataset.image;\n        const imgXXL = e.target.dataset.imagexxl;\n        const thumb = e.target.dataset.thumb;\n        const name = e.target.dataset.name;\n        const title = e.target.dataset.title;\n        const date = e.target.dataset.date;\n        this.setState({\n            displayModal: true,\n            currentImage: img,\n            currentImageXXL: imgXXL,\n            thumb,\n            name,\n            title,\n            date,\n        });\n    }\n\n    closeModal = () => {\n        this.setState({\n            displayModal: false,\n        });\n    }\n\n    toggleDate = () => {\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    render() {\n        const { displayModal, currentImage, currentImageXXL, showDate, thumb, name, title, date, showAddComment } = this.state;\n\n        const { track, showUser = false, isPublic = false } = this.props;\n        const image = track.image && track.image.s3SmallLink ? track.image : null;\n        const { gpxInfo = {} } = track;\n\t\tconst { loadIndex = 0 } = gpxInfo;\n\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { likes = [], comments = [] } = track;\n\t\tconst hasLikedNews = track.likes && track.likes.findIndex(e => e.user === user.id) > -1;\n\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    {displayModal && <Modal close={this.closeModal} image={currentImage} imagexxl={currentImageXXL} thumb={thumb} name={name} title={title} date={date} />}\n\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-0 position-relative'>\n                        {/* {JSON.stringify(track, null, 4)} */}\n\n                        <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                            {!image && <i class='fas fa-map-marked text-muted mt-3' style='font-size: 40px;' />}\n                        </div>\n                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                            <a class='stretched-link' href={`/tracks/${track.id}${isPublic ? '/public' : ''}`}>\n                                <h5 class='mb-1' style='line-height: 1.0em;'>{track.name}</h5>\n                                <div class='text-muted font-weight-lighter'><small>{track.place}</small></div>\n                            </a>\n                            <div>\n                                <small>\n                                    {loadIndex > 0 && <span class={`ml-2 text-${mu.getLoadIndexColor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}`}>\n                                        <i class='fas fa-hand-rock mr-1' />\n                                        {Math.floor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))} -&nbsp;\n                                        {mu.getLoadIndexText(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                    </span>}\n                                </small>\n                            </div>\n                            <div>\n                                {track.public === 1 && <span class='badge badge-success'>Is public</span>}\n                                {showUser && <span class='text-muted font-weight-lighter ml-3'>{mu.displayName(track.users)}</span>}\n                            </div>\n                            <small class='text-muted'>\n                                {track.date && <small onClick={this.toggleDate}>\n                                    {showDate ? util.formatDate(track.date, { locale: 'no-NB' }) : util.formatDistance(track.date, new Date(), { locale: 'no-NB' })}<br />\n                                </small>}\n                            </small>\n                            <small class='text-muted'>\n                                {track.garminId > 0 && <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/garmin-connect.png\");`} />}\n                                {track.stravaId > 0&& <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/strava-icon.png\");`} />}\n\n                                <i class='fas fa-road' /> <Distance stores={this.props.stores} value={track.distanceKm} />\n                                <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={track.elevation} />\n                                {track.gpx && <i class='fas fa-map-marked-alt ml-2' />}\n                            </small>\n                        </div>\n                    </div>\n\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-1' style='padding-left: 122px;'>\n                        <div class='row'>\n                            {track.images && track.images.map(img => (\n                                <div class={`text-center border rounded imageRounded imageRoundedSmall`}\n                                    style={img ? `background-image: url(\"${img.s3SmallLink}\");` : ''}\n                                    onClick={this.showModal}\n                                    data-image={img.s3LargeLink}\n                                    data-imagexxl={img.s3XXLargeLink}\n                                    data-thumb={track.image && track.image.s3SmallLink}\n                                    data-title={track.name}\n                                    data-date={track.date}\n                                >\n                                    &nbsp;\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                        <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                            </small>}\n                            {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                <i class='fas fa-comment text-primary' /> {comments.length}\n                            </small>}\n                        </div>\n\n                        <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            <div class='row'>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class={`btn btn-sm btn-outline-${hasLikedNews ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedNews ? 'text-primary' : ''}`}\n                                        onClick={this.likeTrack}\n                                        // disabled={hasLikedNews}\n                                    >\n                                        <i class={`${hasLikedNews ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> Like\n                                    </button>\n                                </div>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                        data-id={track.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> Comment\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        {showAddComment && <TrackAddComment\n                            stores={this.props.stores}\n                            track={track}\n                            inputRef={c => this.inputRef[track.id] = c}\n                        />}\n                        <TrackComments stores={this.props.stores} track={track} col={10} offset={2} compact={true} />\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Track;\n"],"sourceRoot":""}