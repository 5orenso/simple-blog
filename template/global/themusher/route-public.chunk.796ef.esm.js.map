{"version":3,"sources":["webpack:///./components/public/heatmap.js","webpack:///./routes/public/index.js"],"names":["initialState","showAddComment","Heatmap","observer","Component","constructor","props","super","this","state","updateTimer","inputRef","setState","isLoading","adminStore","stores","getPublicHeatmap","componentDidMount","loadHeatmap","render","publicHeatmap","heatmap","length","mapId","minZoom","height","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","subMenuMarginTop","email","submenu","jwtToken","util","getJwtToken","Admin","class","style"],"mappings":"shBAUA,MAAMA,EAAe,CACpBC,gBAAgB,G,IAIXC,EADLC,Y,EAAD,cACsBC,YAClBC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,M,+VAAL,IACOT,GAEPQ,KAAKE,YAAc,GACzBF,KAAKG,SAAW,GAGjB,oBACCH,KAAKI,SAAS,CAAEC,WAAW,IAC3B,MAAM,WAAEC,GAAeN,KAAKF,MAAMS,aACtBD,EAAWE,mBACvBR,KAAKI,SAAS,CAAEC,WAAW,IAG5BI,oBACCT,KAAKU,cAGHC,SACI,MAAM,WAAEL,GAAeN,KAAKF,MAAMS,QAC1BK,cAAeC,GAAYP,EAKnC,OACI,mBAEKO,EAAQC,OAAS,GAAK,YAAC,IAAD,CACnBP,OAAQP,KAAKF,MAAMS,OACnBQ,MAAOF,EAAQC,OACfD,QAASA,EACTG,QAAS,EACTC,OAAQ,W,EAObvB,Q,sfCjDf,MAAMwB,EAAaC,IAAGC,WAAU,GAC1BC,EAAgBF,IAAGG,eAGnB9B,GAFsB2B,IAAGI,mBAEV,CACpBlB,WAAW,EACXmB,MAAO,GACPC,QAAS,MACTC,SAAUC,IAAKC,gB,IAIVC,EADLlC,Y,EAAD,cACoBC,YAChBC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,M,+VAAL,IACOT,GAIdmB,SACC,OACC,mBAAKmB,MAAM,kBAAkBC,MAAQ,kBAAiBV,kBAA8BH,MACnF,mBAAKY,MAAM,qBACP,mBAAKA,MAAM,UACK,YAAC,IAAD,CAASvB,OAAQP,KAAKF,MAAMS,gB,EAQrCsB","file":"route-public.chunk.796ef.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Heatmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadHeatmap() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getPublicHeatmap();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadHeatmap();\n\t}\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const { publicHeatmap: heatmap } = adminStore;\n        // const heatmap = publicHeatmap.slice(0, 10);\n        // const heatmap = [[60.4433,8.8996,14],[61.384,9.1152,14],[60.42,8.9422,15]];\n\n\n        return (\n            <>\n                {/* {JSON.stringify(heatmap)} */}\n                {heatmap.length > 0 && <Map\n                    stores={this.props.stores}\n                    mapId={heatmap.length}\n                    heatmap={heatmap}\n                    minZoom={2}\n                    height={800}\n                />}\n            </>\n        );\n    }\n}\n\nexport default Heatmap;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\nimport Heatmap from '../../components/public/heatmap';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n\temail: '',\n\tsubmenu: 'ads',\n\tjwtToken: util.getJwtToken(),\n};\n\n@observer\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row border-bottom'>\n    \t\t\t\t<div class='col-12'>\n                        <Heatmap stores={this.props.stores} />\n                    </div>\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Admin;\n"],"sourceRoot":""}