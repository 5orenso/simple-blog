{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./routes/public/race/raceheader.js","webpack:///./components/public/heatmap.js","webpack:///./components/data/distance.js","webpack:///./routes/public/race/submenu.js","webpack:///./routes/public/race/style.css","webpack:///./components/races/liveAddResult.js","webpack:///./components/data/temperature.js","webpack:///./components/races/liveMusherResult.js","webpack:///./routes/public/race/header.js","webpack:///./components/data/weight.js","webpack:///./routes/public/race/raceText.js","webpack:///./components/races/liveResults.js","webpack:///./routes/public/race/results.js","webpack:///./components/races/musherInfoHeader.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","RaceHeader","raceStore","appState","stores","title","language","race","today","Date","status","startDate","endDate","signupStartDate","signupEndDate","class","classes","useEffect","document","PageTitle","style","util","formatDate","locale","hour12","hour","minute","liveRace","role","id","showAddComment","Heatmap","updateTimer","inputRef","setState","isLoading","adminStore","raceid","getPublicHeatmap","loadHeatmap","waypoints","zoomToMarkers","mapid","fullscreenMap","publicHeatmap","heatmap","mapId","length","minZoom","maxZoom","height","key","displayDistance","distance","format","Distance","value","smallUnit","userStore","user","settings","imperial","kmToMiles","mu","marginTop","marginBottom","subMenuMarginTop","email","submenu","jwtToken","getJwtToken","PublicRaceDetail","path","darkmode","currentMenu","match","href","module","exports","fieldSorter","fields","a","b","map","o","dir","substring","reduce","p","n","LastResults","lastResults","currentClass","selectedMusher","selectResult","res","currentCheckpoint","checkpoints","find","cp","checkpoint","requiredRestMin","direction","requiredRestMinutes","timeEqualization","timestamp","getTime","data-resultid","onClick","year","month","sortOrder","name","dogs","RaceLiveAddResult","addResult","async","e","classid","target","closest","dataset","checkpointId","selectedClassIds","getClassById","selectedCheckpoint","result","showTimestamp","classId","newResult","editContestant","bib","field","message","clearTimeout","setTimeout","editResult","currentResult","resultid","selectedClassId","data","raceClassId","resultId","ucfirst","editClass","updateClassesResultLocal","contestants","results","sortContestantsByResult","updateField","selectedResult","sortedContestants","parseInt","isCheckedIn","isCheckedOut","isScratched","prevCheckpoint","isCheckedInPrev","isCheckedOutPrev","isScratchedPrev","slice","sort","filter","getPreviousCheckpoint","toJS","lastResult","lastTimestamp","startTime","isoDate","deleteResult","raceClassResultDelete","doneEditResult","selectCheckpoint","toggleTimestamp","reverse","componentWillReceiveProps","nextProps","lastCheckpoint","idx","resIn","resOut","resScratched","type","data-id","firstname","lastname","for","aria-describedby","data-classid","data-field","onInput","linkstate","replace","min","data-direction","disabled","Temperature","celciusToFahrenheit","RaceLiveMusherResult","onClickNav","currentUser","teams","selectedMusherIdx","findIndex","team","getTeamById","members","m","getImage","priority","displayNameShort","lastResOut","lastResIn","totalDistance","totalTime","totalMovingTime","totalInCpTime","lastEstTimeOut","lastAvgSpeed","nextBib","prevBib","contestant","onTeamClick","onUserClick","onDogClick","rank","now","Math","floor","timeInCp","isStartLine","deltaSec","movingTime","hasBeenInCp","avgSpeed","distanceFromPrev","percentRest","reqTotalRestInSec","line","estTimeOutClass","totalRestClass","estTimeOut","estRest","restInCpSoFar","addDeltaSec","day","isFinishLine","secToHms","estTimeIn","movingTimeSoFar","distanceMeters","avgSpeedMs","estTimeToNext","estTimeToCpMinutes","estRestMinutes","menu","profile","main","searchText","Navigation","toggleDropdown","menuName","parentNode","toggleDarkmode","toggleViewmode","mode","reloadApp","window","location","reload","adminLoadAll","getInfo","changeLanguage","lang","console","log","setLanguage","search","route","notifications","read","src","data-name","className","activeClassName","selected","Weight","kgToPounds","text","finalText","regex","RegExp","Checkpoints","thClass","thStyle","selectedCheckpointId","width","widthCp","onClickCheckpoint","dotColor","cpIdx","Contestants","limit","onClickMusher","tdClass","tdStyle","progressStyle","progressbarStyle","finalContestants","co","coIdx","hasLeftCpPrev","bibIdxOutPrev","estTimeToCpMinutesPrev","hasScratchedPrev","data-bib","isoTime","checkpointResults","hasLeftCp","hasArrivedCp","hasScratched","bibIdxIn","bibIdxOut","percentInCp","nowEpoch","prevCpOutEpoch","timeUsedOnStage","percentDone","aria-valuenow","aria-valuemin","aria-valuemax","data-prevtimestamp","data-timeUsedOnStage","data-estTimeToCpMinutesPrev","data-nowEpoch","data-prevCpOutEpoch","cpId","output","colspan","getRankingColor","flag","RaceLiveResults","reloadLastEpoch","sortOrderResults","tableClass","MARGIN_TOP","MARGIN_BOTTOM","contentIsNotLoaded","reloadInSec","reloadIsActive","ReloadTimer","initComponent","tickReloadTimeer","tick","componentWillUnmount","reloadPercent","normalizeBetween","loadLiveRaceResults","teamIds","focusOnMushers","bibs","historySteps","replayHistory","showDrawerReplay","classInfo","isAdmin","getRaceTrackerData","raceTrackerRace","history","getRaceTrackerActiveTeams","loadRaceResults","timerRunning","loadWorkoutSummary","getWorkoutSummaryActiveTeams","RELOAD_INTERVAL_IN_SEC","toggleDisplayDetails","adminToggleEditUser","stopPropagation","toggleEditUserDetails","adminSignupEdit","contestantid","contestantId","lockAllWorkoutsInRace","lockMessage","filterByClass","toggleSelectedClassId","toggleDrawer","showDrawer","showDrawerCheckpoint","showDrawerMusher","toggleDrawerMusher","selectedMusherBib","selectMusher","closeDrawerMusher","toggleDrawerCheckpoint","closeDrawerCheckpoint","loadTimes","filterByBibs","load","getAllClassesSortedBy","allClassIds","indexOf","setSelectedClassId","allTeamIds","musher","flat","loadTeams","join","loadRace","displayDetails","editUserDetails","activeTeams","lastAllowedChangeDate","setHours","getHours","filterByClassId","isLiveRace","resultsUrl","rel","native","resultsText","getMusherByTeamId","currentSpeed","currentLocation","coords","speed","spinnerColor","secSinceLastUpdate","lastUpdated","isInProgress","avgDogs","battery","level","formatDistance","date","distanceKm","elevation","speedAvg","duration","rest","loadIndex","altitude","viewBox","d","svgElevation","resultDanger","markdown","replaceImages","images","markdownOpts","getMarkdownOptions","resultWarning","resultSuccess","totalMushers","totalFinished","endTime","scope","currentTeam","currentStages","currentResults","completed","normalizedDuration","weightedNormalizedDuration","isDone","finishedDate","totalWorkoutTimeUsedSec","totals","getTotalsByTeamId","data-email","isLocked","sportsClub","facebook","asFacebookLink","instagram","asInstagramLink","price1","priceSent","price2","price3","cellphone","data-contestantid","raceStatus","raceComment","gpxResultsApproved","stage","percent","currentEpoch","inDate","setUTCSeconds","nonstop","totalRest","firstEpoch","firstGpxStartEpoch","lastGpxStartEpoch","JSON","stringify","onCloseClick","MusherInfoHeader","toggleAdminInfo","showAdminInfo","toggleInfo","showInfo","dogid","preventDefault","currentDog","uuidv4","showDog","chooseSubmenu","dog","totalTrackLength","onMarkerClick","children","wp","findWaypointByBib","getMusherByBibId","getMusherByBibEmail","getClassByBib","image","fallback","image1","shortname","color","hasBirthday","birth","daysUntilBirthday","ceil","daysUntilNextBirthday","inFront","behind","totalDistanceOnTrack","findNearestMushers","headerImage","imageHeader","s3XXLargeLink","topImage1","teamImages","i","l","push","s3SmallLink","s3LargeLink","data-submenu","public","description","allDogs","findHarness","harness","age","deceased","gender","Elevation","meterToFeet","Speed","kmtToMph"],"mappings":"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","file":"66.chunk.eeee9.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport { useEffect } from \"preact/hooks\";\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nfunction PageTitle(title, classes = '') {\n\tuseEffect(() => {\n\t\tdocument.title = `Homerun Race: ${title}`;\n\t}, [title]);\n\treturn <h1 class={classes}>{title}</h1>;\n}\n\nconst initialState = {\n};\n\n@observer\nclass RaceHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { raceStore, appState } = this.props.stores;\n\t\tconst { title } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\t\tconst { race } = raceStore;\n\n\t\tconst today = new Date();\n\t\tlet status = '';\n\t\tif (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n\t\t\tstatus = 'race';\n\t\t} else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n\t\t\tstatus = 'signup';\n\t\t} else if (today > new Date(race.endDate)) {\n\t\t\tstatus = 'done';\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div class='d-flex'>\n\t\t\t\t\t<div class='flex-fill'>\n\t\t\t\t\t\t{PageTitle(title, 'mb-0')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='flex-fill text-center d-none d-md-block'>\n\t\t\t\t\t\t<h1 class='mb-0' style='line-height: 0.8em;'><span class='font-weight-lighter' style='letter-spacing: -1px;'>{race.title}</span></h1>\n\t\t\t\t\t\t<small class=''>\n\t\t\t\t\t\t\t{race.startDate && <>{util.formatDate(race.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n\t\t\t\t\t\t\t{race.endDate && <> - {util.formatDate(race.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='flex-fill'>\n\t\t\t\t\t\t<h3 class='float-right'>\n\t\t\t\t\t\t\t{status === 'signup' && !race.liveRace && <>\n\t\t\t\t\t\t\t\t<div class='spinner-grow text-primary' role='status' />\n\t\t\t\t\t\t\t\t<span class='badge badge-primary ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t{status === 'race' && <>\n\t\t\t\t\t\t\t\t<div class='spinner-grow text-danger' role='status' />\n\t\t\t\t\t\t\t\t<span class='badge badge-danger ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t{status === 'done' && <>\n\t\t\t\t\t\t\t\t<i class='fas fa-check text-success' />\n\t\t\t\t\t\t\t\t<span class='badge badge-success ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='d-block d-md-none'>\n\t\t\t\t\t<h4 class='mb-0' style='line-height: 0.8em;'><span class='font-weight-light' style='letter-spacing: -1px;'>{race.title}</span></h4>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t{race.startDate && <>{util.formatDate(race.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n\t\t\t\t\t\t{race.endDate && <> - {util.formatDate(race.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n\t\t\t\t\t</small>\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Heatmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadHeatmap() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n        const { raceid } = this.props;\n        await adminStore.getPublicHeatmap(raceid);\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadHeatmap();\n\t}\n\n    // componentWillReceiveProps() {\n\t// \tthis.loadHeatmap();\n\t// }\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const { waypoints, zoomToMarkers, mapid, fullscreenMap } = this.props;\n        const { publicHeatmap: heatmap } = adminStore;\n        // const heatmap = publicHeatmap.slice(0, 10);\n        // const heatmap = [[60.4433,8.8996,14],[61.384,9.1152,14],[60.42,8.9422,15]];\n\n        return (\n            <>\n                {/* heatmap: {`map-${mapid}`}<br /> */}\n                {/* {JSON.stringify(heatmap)} */}\n                <Map\n                    stores={this.props.stores}\n                    mapId={heatmap.length}\n                    heatmap={heatmap}\n                    minZoom={2}\n                    maxZoom={18}\n                    height={600}\n                    waypoints={waypoints}\n                    zoomToMarkers={zoomToMarkers}\n                    fullscreenMap={fullscreenMap}\n                    key={`map-${mapid}`}\n                />\n            </>\n        );\n    }\n}\n\nexport default Heatmap;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\nimport Header from './header';\nimport Heatmap from '../../../components/public/heatmap';\n\nimport mu from '../../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n\temail: '',\n\tsubmenu: 'ads',\n\tjwtToken: util.getJwtToken(),\n};\n\n@observer\nclass PublicRaceDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\trender() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { raceid, path } = this.props;\n\t\tconst { darkmode } = appState;\n\n        let currentMenu = 'default';\n        if (path.match(/\\/race\\/:raceid$/)) {\n            currentMenu = 'default';\n        } else if (path.match(/\\/race\\/:raceid\\/mushers$/)) {\n            currentMenu = 'mushers';\n        } else if (path.match(/\\/race\\/:raceid\\/results$/)) {\n            currentMenu = 'results';\n        } else if (path.match(/\\/race\\/:raceid\\/media$/)) {\n            currentMenu = 'media';\n        } else if (path.match(/\\/race\\/:raceid\\/tracking$/)) {\n            currentMenu = 'tracking';\n        }\n\n\t\treturn (\n\t\t\t<>\t\t\t\t\n                <div class='row fixed-top pr-3' style={`margin-top: 40px; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\n                    <div class='col-12 my-2 mx-2'>\n                        <ul class='nav nav-pills nav-fill flex-nowrap'>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}`} class={`text-overflow nav-link ${currentMenu === 'default' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-info-circle' /> <Text id='race.therace'>Løpet</Text></nobr>\n                                </a>\n                            </li>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}/mushers`} class={`text-overflow nav-link ${currentMenu === 'mushers' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-users' /> <Text id='race.mushers'>Deltakere</Text></nobr>\n                                </a>\n                            </li>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}/results`} class={`text-overflow nav-link ${currentMenu === 'results' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-poll' /> <Text id='race.results'>Resultater</Text></nobr>\n                                </a>\n                            </li>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}/media`} class={`text-overflow nav-link ${currentMenu === 'media' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-images' /> <Text id='race.media'>Bilder</Text></nobr>\n                                </a>\n                            </li>\n                            <li class='nav-item' style='max-width: 20%;'>\n                                <a href={`/race/${raceid}/tracking`} class={`text-overflow nav-link ${currentMenu === 'tracking' ? 'active' : ''}`}>\n                                    <nobr><i class='fas fa-map-marked-alt' /> <Text id='race.tracking'>Tracking</Text></nobr>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n\n\n                    {/* <div class={`col text-center subtopmenu ${path.match(/\\/race\\/:raceid$/) ? 'border-bottom border-primary' : ''}`}>\n                        <a href={`/race/${raceid}`} class={`text-${path.match(/\\/race\\/:raceid$/) ? 'primary' : 'secondary'} stretched-link`}>\n                            <nobr><i class='fas fa-chart-line' /> <Text id='race.therace'>Løpet</Text></nobr>\n                        </a>\n                    </div>\n                    <div class={`col text-center subtopmenu ${path.match(/\\/race\\/:raceid\\/mushers$/) ? 'border-bottom border-primary' : ''}`}>\n                        <a href={`/race/${raceid}/mushers`} class={`text-${path.match(/\\/race\\/:raceid\\/mushers$/) ? 'primary' : 'secondary'} stretched-link`}>\n                            <nobr><i class='fas fa-chart-line' /> <Text id='race.mushers'>Deltakere</Text></nobr>\n                        </a>\n                    </div>\n                    <div class={`col text-center subtopmenu ${path.match(/\\/race\\/:raceid\\/results$/) ? 'border-bottom border-primary' : ''}`}>\n                        <a href={`/race/${raceid}/results`} class={`text-${path.match(/\\/race\\/:raceid\\/results$/) ? 'primary' : 'secondary'} stretched-link`}>\n                            <nobr><i class='fas fa-chart-line' /> <Text id='race.results'>Resultater</Text></nobr>\n                        </a>\n                    </div>\n                    <div class={`col text-center subtopmenu ${path.match(/\\/race\\/:raceid\\/tracking$/) ? 'border-bottom border-primary' : ''}`}>\n                        <a href={`/race/${raceid}/tracking`} class={`text-${path.match(/\\/race\\/:raceid\\/tracking$/) ? 'primary' : 'secondary'} stretched-link`}>\n                            <nobr><i class='fas fa-chart-line' /> <Text id='race.tracking'>Tracking</Text></nobr>\n                        </a>\n                    </div> */}\n                </div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default PublicRaceDetail;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointerCursor\":\"pointerCursor__1W6mM\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\nimport { toJS } from 'mobx';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass LastResults extends Component {\n    render() {\n        const { lastResults = [], currentClass = {}, selectedMusher = {}, selectResult = () => {} } = this.props;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n        return (<>\n\n            <table class='table table-striped'>\n                <thead>\n                    <tr>\n                        <th style='width: 10%'>Time</th>\n                        <th style='width: 5%'>Dir</th>\n                        <th style='width: 75%'>Checkpoint</th>\n                        <th style='width: 10%'>Dogs</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {lastResults && lastResults.length > 0 && lastResults.map(res => {\n                        const currentCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === res.checkpoint) : null;\n                        const requiredRestMin = res.direction === 'in' && currentCheckpoint.requiredRestMinutes ? (\n                            currentCheckpoint.timeEqualization ? selectedMusher.timeEqualization + currentCheckpoint.requiredRestMinutes : currentCheckpoint.requiredRestMinutes\n                        ) : null;\n                        const firstOutTime = new Date(new Date(res.timestamp).getTime() + requiredRestMin * 60000);\n                        return (<>\n                            <tr \n                                class='resultLine'\n                                data-resultid={res.id}\n                                onClick={selectResult}\n                            >\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-clock' /></span> {util.formatDate(res.timestamp, { locale: language, year: '2-digit', month: '2-digit', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </nobr>\n                                </td>\n                                <td>\n                                    {res.direction === 'in' && <>\n                                        <i class='fas fa-sign-in-alt mr-2 text-success' />\n                                    </>}\n                                    {res.direction === 'out' && <>\n                                        <i class='fas fa-sign-out-alt mr-2 text-info' />\n                                    </>}\n                                    {res.direction === 'scratched' && <>\n                                        <i class='fas fa-times mr-2 text-danger' />\n                                    </>}\n                                </td>\n                                <td>\n                                    <span class='text-muted'>{currentCheckpoint.sortOrder}:</span> {currentCheckpoint.name}\n                                    {/* {requiredRestMin && <>\n                                        <div>\n                                            {selectedMusher.timeEqualization ? <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} + {selectedMusher.timeEqualization} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </> : <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </>}\n                                        </div>\n                                    </>} */}\n                                </td>\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-dog ml-3' /></span> {res.dogs}<br />\n                                    </nobr>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </tbody>\n            </table>\n        </>);\n    }\n}\n\n@observer\nclass RaceLiveAddResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: {},\n            message: '',\n        };\n        this.updateTimer = {};\n    }\n\n    addResult = async (e) => {\n\t\tconst { raceStore, appState } = this.props.stores;\n        const { direction, classid } = e.target.closest('button').dataset;\n        const { checkpointId, selectedClassIds = [] } = appState;\n\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { result, showTimestamp } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        if (showTimestamp) {\n            result.timestamp = result.timestamp ? result.timestamp : new Date();\n        } else {\n            result.timestamp = new Date();\n        }\n\n        if (direction === 'scratched') {\n            await raceStore.addResult({\n                id: raceid,\n                classId: classid,\n                showTimestamp: false,\n                newResult: {\n                    direction: 'in',\n                    checkpoint: checkpointId,\n                    ...result,\n                }\n            });\n            await raceStore.editContestant({\n                id: raceid,\n                classId: classid,\n                bib: result.bib,\n                field: 'raceStatus',\n                value: 'DNF',\n            });\n        }\n\n\t\tawait raceStore.addResult({\n\t\t\tid: raceid,\n\t\t\tclassId: classid,\n            showTimestamp: false,\n\t\t\tnewResult: {\n                direction,\n                checkpoint: checkpointId,\n                ...result,\n\t\t\t}\n        });\n\n        // const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        // raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.setState({\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n            selectedMusher: null,\n            lastResults: null,\n            message: `Added ${result.bib} with ${result.dogs} dogs ${direction} ${direction === 'in' ? 'to' : 'of'} checkpoint ${selectedCheckpoint.name}.`,\n        });\n\n        clearTimeout(this.updateTimer.message);\n        this.updateTimer.message = setTimeout(async () => {\n\t\t\tthis.setState({\n                message: '',\n            });\n\t\t}, 3000);\n\t}\n\n    editResult = (e) => {\n        const { raceStore, appState } = this.props.stores;\n        const { currentResult } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        // const resultIdx = lastResults.findIndex(e => e.id === resultid);\n        // if (resultIdx > -1) {\n        //     console.log({ resultIdx })\n        //     lastResults[resultIdx][field] = value;\n        //     this.setState({ lastResults });\n        // }\n        currentResult[field] = value;\n        this.setState({ currentResult });\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        \n        const data = {\n            raceClassId: classid,\n            resultId: resultid,\n\t\t\t[`raceClassResult${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n            await raceStore.editClass({\n                id: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.updateClassesResultLocal(classid, resultid, field, value);\n            const currentClass = raceStore.getClassById(selectedClassId);\n\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t\t}, 500);\n    }\n\n    updateField = (e) => {\n        const { raceStore, appState } = this.props.stores;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const { result, selectedResult, showTimestamp } = this.state;\n        result[field] = value;\n        \n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        \n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        if (!selectedMusher) {\n            this.setState({\n                result,\n            });\n            return false;\n        }\n        let lastResults;\n        let isCheckedIn;\n        let isCheckedOut;\n        let isScratched;\n        let currentResult;\n        let prevCheckpoint;\n        let isCheckedInPrev;\n        let isCheckedOutPrev;\n        let isScratchedPrev;\n\n        if (currentClass) {\n            lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n            if (lastResults && lastResults.length > 0) {\n                isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n                isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n                isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n                prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n                if (prevCheckpoint) {\n                    isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n                    isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n                    isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n                }\n            }\n            currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === selectedResult)) : {};\n        }\n\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : null;\n        if (lastResult) {\n            const lastTimestamp = lastResults && lastResults[0] ? lastResults[0].timestamp : (selectedMusher && selectedMusher.startTime ? selectedMusher.startTime : currentClass.startDate);\n            if (showTimestamp) {\n                result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n            }\n            result.dogs = lastResult.dogs;\n        }\n        \n        this.setState({\n            result,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            prevCheckpoint,\n            currentResult,\n            lastResults,\n        });\n    }\n\n\n    deleteResult = async () => {\n        const { selectedResult } = this.state;\n        const { appState, raceStore } = this.props.stores;\n\n        const { race } = raceStore;\n        const raceid = race.id;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: currentClass.id,\n            resultId: selectedResult,\n\t\t\traceClassResultDelete: 1,\n\t\t};\n        await raceStore.editClass({\n            id: raceid,\n            data,\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.doneEditResult();\n    }\n\n    selectCheckpoint = (e) => {\n        const { showTimestamp, result } = this.state;\n        const checkpointId = e.target.closest('button').dataset.id;\n        const { appState, raceStore } = this.props.stores;\n        appState.selectCheckpoint(checkpointId);\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { sortedContestants = [] } = raceStore;\n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n\n        const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n        const prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n        const isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n        const isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n        const isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n        \n        this.setState({\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            lastResults,\n        });\n\n    }\n\n    toggleTimestamp = () => {\n        const { showTimestamp, result } = this.state;\n\n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedMusher = currentClass.contestants ? currentClass.contestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp'])).reverse().filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        let lastTimestamp;\n        if (lastResults && lastResults[0]) {\n            lastTimestamp = lastResults[0].timestamp;\n        } else if (selectedMusher.startTime) {\n            lastTimestamp = selectedMusher.startTime;\n        } else if (currentClass.startDate) {\n            lastTimestamp = currentClass.startDate;\n        } else {\n            lastTimestamp = new Date();\n        }\n        result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n\n        this.setState({\n            showTimestamp: !showTimestamp,\n            result,\n        });\n    }\n\n    doneEditResult = () => {\n        const { raceStore, appState } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const { checkpointId } = appState;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        this.setState({\n            selectedResult: '',\n            selectedCheckpoint,\n            currentResult: null,\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n        });\n    }\n\n    selectResult = (e) => {\n        const resultid = e.target.closest('.resultLine').dataset.resultid;\n        \n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === resultid)) : {};\n        \n        this.setState({\n            selectedResult: resultid,\n            currentResult,\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n        //     const { currentClass } = this.props;\n        //     const { raceStore } = this.props.stores;\n        //     const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        //     raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        // }\n\t}\n\n    componentDidMount() {\n        this.doneEditResult();\n\t}\n\n    render() {\n        const {\n            result,\n            showTimestamp,\n            message,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            currentResult,\n            lastResults = [],\n        } = this.state;\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { checkpointId } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : {};\n        let lastCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === lastResult.checkpoint) : null;\n        lastCheckpoint = lastCheckpoint ? lastCheckpoint : {};\n\n        // const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        // const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        // const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        // const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        // const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        // const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n        // const currentResult = currentClass.results ? currentClass.results.find(e => e.id === selectedResult) : {};\n\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n\n        return (<>\n            <div class='mt-2 pb-5' style='height: 70vh;'>\n                <h3>Admin timing - {currentClass.title}</h3>\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n\n                        {currentClass.checkpoints && currentClass.checkpoints.map((currentCheckpoint, idx) => {\n                            let resIn = {};\n                            let resOut = {};\n                            let resScratched = {};\n                            if (lastResults && lastResults.length > 0) {\n                                resIn = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'in') || {};\n                                resOut = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'out') || {};\n                                resScratched = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'scratched') || {};\n                            }\n                            \n                            return (<>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === currentClass.checkpoints.length - 1 && 'rounded-pill-right'} rounded-none ${checkpointId === currentCheckpoint.id ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.selectCheckpoint}\n                                        data-id={currentCheckpoint.id}\n                                    >\n                                        {currentCheckpoint.sortOrder}: {currentCheckpoint.name}\n                                        {resOut && resOut.id ? <i class='fas fa-check text-white ml-2' /> : ''}\n                                        {resIn && resIn.id && !resOut.id ? <i class='fas fa-map-marker-alt text-white ml-2' /> : ''}\n                                    </button>\n                                </div>\n                            </>);\n                        })}\n\n                    </div>\n                </div>\n                <div class='w-100 overflow-hidden'>\n                    {selectedCheckpoint && <>\n                        <h3>\n                            {selectedMusher && <><i class='fas fa-user text-muted' /> {selectedMusher.firstname} {selectedMusher.lastname}</>}\n                        </h3>\n\n                        {currentResult ? <>\n                            {['bib', 'dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={currentResult[field]}\n                                        onInput={this.editResult}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['timestamp'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                    <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={util.isoDate(currentResult[field], false, false, false)}\n                                        onInput={this.editResult}\n                                    />\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                </div>\n                            </>)}\n\n                            <button class='btn btn-lg btn-danger float-left' onClick={this.deleteResult}>\n                                Delete\n                            </button>\n                            <button class='btn btn-lg btn-info float-right' onClick={this.doneEditResult}>\n                                Done\n                            </button>\n                        </> : <>\n\n                            {selectedCheckpoint.sortOrder > lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Previous checkpoint is not logged yet.\n                                </div>\n                            </>}\n\n                            {!isCheckedOutPrev && selectedCheckpoint.sortOrder === lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Not checked out of prev.\n                                </div>\n                            </>}\n                            {/* {selectedCheckpoint.sortOrder} gt\n                            {lastCheckpoint.sortOrder}<br />\n                            isCheckedIn: {JSON.stringify(isCheckedIn, null, 4)}<br />\n                            isCheckedOut: {JSON.stringify(isCheckedOut, null, 4)}<br />\n                            isScratched: {JSON.stringify(isScratched, null, 4)}<br /> */}\n\n                            {/* bib: String,\n                            position: [],\n                            checkpointIn: String,\n                            checkpointOut: String,\n                            dogs: Number,\n                            timestamp: Date,\n                            addedByUser: Number, */}\n                            {['bib'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={this.updateField}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-dog' /> {field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {showTimestamp ? <>\n                                {['timestamp'].map(field => <>\n                                    <div class='form-group'>\n                                        <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                        <input\n                                            type='datetime-local'\n                                            class='form-control'\n                                            id={field}\n                                            aria-describedby={`${field}Help`}\n                                            onInput={linkstate(this, `result.${field}`)}\n                                            value={util.isoDate(result[field], false, false, false).replace(/ /g, 'T')}\n                                            min={util.isoDate(lastResult.timestamp, false, false, false).replace(/ /g, 'T')}\n                                        />\n                                        <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Hide timestamp</button>\n                                    </div>\n                                </>)}\n                            </> : <>\n                                <div class='form-group'>\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Show timestamp</button>\n                                </div>\n                            </>}\n\n\n                            {isCheckedIn && isCheckedOut && <>\n                                <div class='alert alert-warning my-2 clearfix' role='alert'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    {selectedMusher && <>{selectedMusher.firstname} {selectedMusher.lastname}</>} Has checked in and out of this checkpoint!\n                                </div>\n                            </>}\n\n                            <div class='d-flex justify-content-between'>\n                                <div class='text-center'>\n                                    <h3><i class='fas fa-campground text-muted' /> {selectedCheckpoint.name}</h3>\n                                </div>\n                            </div>\n\n                            <div class='d-flex justify-content-between'>\n                                <button class='btn btn-lg btn-success float-left' onClick={this.addResult} data-direction='in' data-classid={currentClass.id} disabled={isCheckedIn ? 'disabled' : ''}>\n                                    CP In <i class='fas fa-sign-in-alt ml-2' />\n                                </button>\n                                <button class='btn btn-lg btn-info float-right' onClick={this.addResult} data-direction='out' data-classid={currentClass.id} disabled={isCheckedOut ? 'disabled' : ''}>\n                                    <i class='fas fa-sign-out-alt mr-2' /> CP Out\n                                </button>\n                            </div>\n                        </>}\n\n                    </>}\n                </div>\n                {message && <div class='alert alert-success mt-3 clearfix' role='alert'>\n                    {message}\n                </div>}\n\n                <div class='overflow-hidden mb-5 mt-3'>\n                    <LastResults\n                        stores={this.props.stores}\n                        lastResults={lastResults}\n                        currentClass={currentClass}\n                        selectedMusher={selectedMusher}\n                        selectResult={this.selectResult}\n                    />\n                </div>\n\n                <div class='d-flex justify-content-center mt-3 mb-5'>\n                    <button class='btn btn-sm btn-block btn-danger' onClick={this.addResult} data-direction='scratched' data-classid={currentClass.id} disabled={isScratched ? 'disabled' : ''}>\n                        Scratch <i class='fas fa-times ml-2' />\n                    </button>\n                </div>\n\n            </div>\n        </>);\n    }\n}\n\nexport default RaceLiveAddResult;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport MusherInfoHeader from '../races/musherInfoHeader';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveMusherResult extends Component {\n    render() {\n        const { bib, onClickNav = () => {} } = this.props;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId) || {};\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(bib, 10)) : null;\n        selectedMusher = selectedMusher ? selectedMusher : {};\n        const selectedMusherIdx = sortedContestants ? sortedContestants.findIndex(e => e.bib === parseInt(bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(bib, 10)) : null;\n\n        const team = raceStore.getTeamById(selectedMusher.team);\n        const user = team.members ? team.members.find(m => m.email === selectedMusher.email) : {};\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(selectedMusher);\n\n        let lastResOut;\n        let lastResIn;\n        let totalDistance = 0;\n        let totalTime = 0;\n        let totalMovingTime = 0;\n        let totalInCpTime = 0;\n        let lastEstTimeOut = currentClass.startDate;\n        let lastAvgSpeed = 0;\n\n        const nextBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx + 1] ? sortedContestants[selectedMusherIdx + 1].bib : null;\n        const prevBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx - 1] ? sortedContestants[selectedMusherIdx - 1].bib : null;\n\n        const locale = 'en-GB';\n\n        return (<>\n            {nextBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextBib)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevBib)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <MusherInfoHeader\n                stores={this.props.stores}\n                contestant={selectedMusher}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n                onClickNav={onClickNav}\n                rank={selectedMusherIdx + 1}\n            >\n                {/* {\n                    \"id\": \"305e720b-12bc-4be3-8244-47a2529c1a26\",\n                    \"user\": 679,\n                    \"Løp\": \"Finnmarksløpet 1200\",\n                    \"bib\": 32,\n                    \"firstname\": \"Thomas\",\n                    \"lastname\": \"Wærner\",\n                    \"cellphone\": \"48176051\",\n                    \"email\": \"thomas.waerner@icloud.com\",\n                    \"country\": \"NO\",\n                    \"flag\": \"🇳🇴\",\n                    \"team\": 2278,\n                    \"startTime\": \"2019-03-08T18:32:00.000Z\",\n                    \"maxStartTime\": 1552071480000,\n                    \"startEpoch\": 1552069920000,\n                    \"timeEqualization\": 26,\n                    \"cpId\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                    \"cpDirection\": \"out\",\n                    \"cpDogs\": 13,\n                    \"cpTimestamp\": \"2019-03-13T00:08:00.000Z\",\n                    \"cpSortOrder\": 8\n                } */}\n                {/* [\n                    {\n                        \"position\": [],\n                        \"id\": \"d9f3d1b6-55e0-4185-b051-e96f1d4eaead\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"out\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-13T00:08:00.000Z\"\n                    },\n                    {\n                        \"position\": [],\n                        \"id\": \"1503b852-3a61-4b91-8323-5e4f862c4399\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"in\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-12T19:49:00.000Z\"\n                    }, */}\n                    {/* {\n                        \"position\":[],\n                        \"polygon\":[],\n                        \"id\":\"fa914e06-c56c-4b5b-9719-2dc6ee12c05d\",\n                        \"name\":\"Jergul\",\n                        \"distanceFromStart\":101,\n                        \"sortOrder\":3,\n                        \"distanceFromPrev\":101,\n                        \"estTimeToCpMinutes\":484\n                    } */}\n\n                    {/* <h3>RaceLiveMusherResult</h3> */}\n                    {/* <h5>{bib} {selectedMusher.lastname}</h5> */}\n                    {/* <xmp>{JSON.stringify(team.imageHeader, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(user, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(image, null, 4)}</xmp> */}\n                <div class='table-responsive'>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Checkpoint</th>\n                                <th class='text-center'>In</th>\n                                <th class='text-center'>Out</th>\n                                <th class='text-center'>Moving time</th>\n                                <th class='text-center'>Avg speed</th>\n                                <th class='text-center'>Total moving time</th>\n                                <th class='text-center'>Rest</th>\n                                <th class='text-center'>Total rest</th>\n                                <th class='text-center'>% rest</th>\n                                <th class='text-center'>Distance</th>\n                                <th class='text-center'>Total distance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {checkpoints && checkpoints.map((cp, cpIdx) => {\n                                const now = Math.floor(new Date().getTime() / 1000, 10);\n                                const resIn = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'in') || {};\n                                const resOut = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'out') || {};\n                                const resScratched = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'scratched') || {};\n                                let timeInCp = 0;\n                                if (!cp.isStartLine && resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                    timeInCp = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                }\n                                let movingTime = 0;\n                                if (lastResOut && resIn && lastResOut.timestamp && resIn.timestamp) {\n                                    movingTime = mu.deltaSec(lastResOut.timestamp, resIn.timestamp);\n                                }\n\n                                let hasBeenInCp = false;\n                                let avgSpeed = 0;\n                                if (resIn && resIn.timestamp) {\n                                    hasBeenInCp = true;\n                                    avgSpeed = cp.distanceFromPrev / (movingTime / 3600);\n                                }\n                                totalDistance += cp.distanceFromPrev ? parseInt(cp.distanceFromPrev, 10) : 0;\n                                totalMovingTime += movingTime ? movingTime : 0;\n                                totalInCpTime += timeInCp ? timeInCp : 0;\n                                totalTime += (movingTime ? movingTime : 0) + (timeInCp ? timeInCp : 0);\n                                const percentRest = totalTime ? totalInCpTime / totalTime * 100 : 0;\n                                const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n                                let line;\n                                let estTimeOutClass = 'text-muted font-weight-lighter';\n                                let totalRestClass = 'text-info';\n                                if (hasBeenInCp) {\n                                    let estTimeOut;\n                                    let estRest;\n                                    let restInCpSoFar;\n                                    // if (cp.isStartLine) {\n                                    //     estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                    //     estRest = 0;\n                                    if (!resOut || !resOut.timestamp) {\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.timeEqualization) {\n                                            if (currentClass.requiredRestMinutes && totalInCpTime < reqTotalRestInSec) {\n                                                estRest = reqTotalRestInSec - totalInCpTime + selectedMusher.timeEqualization * 60;\n                                                estTimeOutClass = 'text-warning font-weight-bold';\n                                            }\n                                            if (!estRest && cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                                estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                            }\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = 180 * 60;\n                                        }\n                                        if (cp.isStartLine) {\n                                            estTimeOut = mu.addDeltaSec(selectedMusher.startTime || currentClass.startDate, 0);\n                                        } else {\n                                            estTimeOut = mu.addDeltaSec(resIn.timestamp, estRest);\n                                            restInCpSoFar = mu.deltaSec(resIn.timestamp, now);\n                                        }\n                                        lastEstTimeOut = estTimeOut;\n\n                                        if (reqTotalRestInSec) {\n                                            if ((totalInCpTime + restInCpSoFar) > (reqTotalRestInSec + (selectedMusher.timeEqualization * 60))) {\n                                                totalRestClass = 'text-success';\n                                            } else {\n                                                totalRestClass = 'text-danger';\n                                            }\n                                        }\n                                    }\n\n                                    line = (<>\n                                        <tr>\n                                            <td><nobr>{cp.name}</nobr></td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resIn.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resIn.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    {resIn.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resIn.dogs}</>}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resOut.timestamp && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(resOut.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(resOut.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        {resOut.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resOut.dogs}</>}\n                                                    </nobr>}\n                                                    {!resScratched.timestamp && estTimeOut && <nobr class={`${estTimeOutClass}`}>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </>}\n                                                {resScratched.timestamp && <nobr class='text-danger'>\n                                                    <i class='fas fa-times' />\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resScratched.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resScratched.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(movingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(totalMovingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine || cp.isStartLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!resOut || !resOut.timestamp ? <>\n                                                            <nobr class='text-info'>\n                                                                {util.secToHms(restInCpSoFar, true)}\n                                                            </nobr>\n                                                        </> : <>\n                                                            {!cp.isStartLine && <>\n                                                                {estRest > 0 ? <>\n                                                                    <nobr class='text-muted font-weight-lighter'>\n                                                                        {util.secToHms(estRest, true)}\n                                                                    </nobr>\n                                                                </> : <>\n                                                                    <nobr>\n                                                                        {util.secToHms(timeInCp, true)}\n                                                                    </nobr>\n                                                                </>}\n                                                            </>}\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    <nobr>\n                                                        {util.secToHms(totalInCpTime, true)}\n                                                    </nobr>\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!cp.isStartLine && <>\n                                                            <nobr>\n                                                                {restInCpSoFar ? <>\n                                                                    <span class={totalRestClass}>\n                                                                        {util.secToHms(totalInCpTime + restInCpSoFar, true)}\n                                                                    </span> <span class='text-muted font-weight-lighter'>/ {util.secToHms(reqTotalRestInSec + (selectedMusher.timeEqualization * 60), true)}</span>\n                                                                </> : <>\n                                                                    {util.secToHms(totalInCpTime, true)}\n                                                                </>}\n                                                            </nobr>\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                                {/* {cp.timeEqualization && <>\n                                                    <br />\n                                                    {currentClass.requiredRestMinutes}\n                                                </>} */}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isStartLine || resScratched.timestamp ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {percentRest > 0 && <nobr>\n                                                        {util.format(percentRest || 0, 0)} <span class='text-muted font-weight-lighter'>%</span>\n                                                    </nobr>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {totalDistance} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                        </tr>\n                                    </>);\n                                    if (resOut && resOut.timestamp) {\n                                        lastEstTimeOut = resOut.timestamp;\n                                        lastAvgSpeed = avgSpeed;\n                                    }\n                                } else {\n                                    let estTimeIn;\n                                    let estTimeOut;\n                                    let estRest;\n                                    let movingTimeSoFar;\n                                    const distanceMeters = cp.distanceFromPrev * 1000;\n                                    const avgSpeedMs = lastAvgSpeed / 3.6;\n                                    let estTimeToNext = lastAvgSpeed ? (distanceMeters / avgSpeedMs / 60) : (cp.estTimeToCpMinutes || 0);\n                                    if (cp.isStartLine) {\n                                        estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                        estRest = 0;\n                                    } else if (lastEstTimeOut) {\n                                        estTimeIn = mu.addDeltaSec(lastEstTimeOut, estTimeToNext * 60);\n                                        // requiredRestMinutes: Number,\n                                        // estTimeToCpMinutes: Number,\n                                        // timeEqualization: Number,\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = (cp.estRestMinutes || 180) * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(estTimeIn, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n                                    if (lastResOut && lastResOut.timestamp) {\n                                        movingTimeSoFar = mu.deltaSec(lastResOut.timestamp, now);\n                                    }\n\n                                    avgSpeed = lastAvgSpeed || cp.distanceFromPrev / (estTimeToNext * 60 / 3600);\n                                    line = (\n                                        <tr>\n                                            <td>{cp.name}</td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info font-weight-light'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        est:\n                                                        <span class='text-muted mr-1 ml-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isFinishLine && estTimeOut && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && <nobr>\n                                                        {util.secToHms(cp.estTimeToCpMinutes * 60, true)}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar + totalMovingTime, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && !cp.isFinishLine && <nobr>\n                                                    {util.secToHms(estRest, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                        </tr>\n                                    );\n                                }\n                                lastResOut = resOut;\n                                lastResIn = resIn;\n                                return line;\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n\n                {/* <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(currentClass, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(lastResults, null, 4)}</xmp> */}\n            </MusherInfoHeader>\n        </>);\n    }\n}\n\nexport default RaceLiveMusherResult;\n","import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport style from './style.css';\n\n\nconst initialState = {\n    menu: {\n\t\tprofile: false,\n\t\tmain: false,\n\t},\n\tsearchText: '',\n};\n\n@observer\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\ttoggleDropdown = (e) => {\n\t\tconst { menu } = this.state;\n\t\tlet menuName = e.target.dataset.name;\n\t\tif (!menuName && e.target.parentNode) {\n\t\t\tmenuName = e.target.parentNode.dataset.name;\n\t\t}\n\t\tif (menuName) {\n\t\t\tmenu[menuName] = !menu[menuName];\n\t\t}\n\t\tthis.setState({ menu });\n\t}\n\n\ttoggleDarkmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tappState.toggleDarkmode();\n\t\tthis.toggleDropdown(e);\n\t}\n\n\ttoggleViewmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tlet mode = e.target.dataset.mode;\n\t\tif (!mode && e.target.parentNode) {\n\t\t\tmode = e.target.parentNode.dataset.mode;\n\t\t}\n\t\tappState.toggleViewmode(mode);\n\t\tthis.toggleDropdown(e);\n\t}\n\n\treloadApp = () => {\n\t\twindow.location.reload(true);\n\t}\n\n\tadminLoadAll = async (e) => {\n        const { userStore } = this.props.stores;\n        await userStore.getInfo(true);\n\t}\n\n\tchangeLanguage = (e) => {\n\t\tconst lang = e.target.value;\n\t\tconsole.log('changeLanguage', lang);\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\t\tif (user.email) {\n\t\t\tuserStore.setLanguage({ email: user.email, language: lang });\n\t\t}\n\t\tappState.setLanguage(lang);\n\t}\n\n\tsearch = () => {\n\t\tconst { searchText } = this.state;\n\t\troute(`/search/${searchText}`);\n\t}\n\n    render() {\n\t\tconst { menu, searchText } = this.state;\n        const { appState, userStore } = this.props.stores;\n        const { darkmode, viewmode, isCordova } = appState;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst unreadNotificatins = notifications.filter(e => !e.read);\n\t\tconst unread = unreadNotificatins.length || 0;\n\t\tconst { language = 'en' } = user;\n\n\t\treturn (\n\t\t\t<nav class='navbar navbar-expand-lg navbar-themed fixed-top py-1' style='z-index: 99999;'>\n\t\t\t\t<a class='navbar-brand' href='/race/'>\n\t\t\t\t\t{/* <img src={`./assets/logo-jul-2020-v2-${darkmode ? 'black' : 'white'}.png`} height='30' class='position-absolute' style='top: 8px; left: 6px' /> */}\n\t\t\t\t\t<img src={`./assets/homerun-race-logo-2-${darkmode ? 'white-' : ''}small.png`} height='37' class='position-absolute' style='top: 5px; left: 6px' />\n\t\t\t\t\t<span class='font-weight-normal' style='margin-left: 30px; font-size: 20px;'>Homerun Race</span>\n\t\t\t\t</a>\n\n\t\t\t\t<button class='navbar-toggler' type='button'\n\t\t\t\t\tdata-name='main'\n\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t>\n\t\t\t\t\t<span class='navbar-toggler-icon' />\n\t\t\t\t</button>\n\n\t\t\t\t<div class={`collapse navbar-collapse ${menu.main ? 'show' : ''}`} id='navbarSupportedContent'>\n\t\t\t\t\t<ul class='navbar-nav mr-auto ml-5'>\n\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tstyle='font-size: 1.0em !important;'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-flag-checkered' /> <Text id='header.races'>Løpene</Text></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race/support'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tstyle='font-size: 1.0em !important;'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='far fa-question-circle' /> <Text id='header.support'>Support</Text></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race/news'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tstyle='font-size: 1.0em !important;'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.news'>Nyheter</Text></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{/* <li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-dog' /> <Text id='header.backtoapp'>The Musher</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t{/* <li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/news'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.news'>Nyheter</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t{/* <li class='nav-item d-block d-lg-none'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/howto'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.howto'>Hvordan gjør man det?</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<ul class='navbar-nav ml-auto '>\n\t\t\t\t\t\t{/* <li class='nav-item mr-2'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'}\n\t\t\t\t\t\t\t\thref='/users/notifications'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-bell mr-1' />\n\t\t\t\t\t\t\t\t{unread > 0 && <>\n\t\t\t\t\t\t\t\t\t<span class='badge badge-pill badge-danger'>{unread > 9 ? '9+' : unread}</span>\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t<li class='nav-item mr-2'>\n\t\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t\t<div class='col-auto my-1' style='width: 80px;'>\n\t\t\t\t\t\t\t\t\t<select class='custom-select'\n\t\t\t\t\t\t\t\t\t\tstyle='background-color: inherit; border: none; padding: 0; height: 1.1em; font-size: 0.9em;'\n\t\t\t\t\t\t\t\t\t\tonInput={this.changeLanguage}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value='no' selected={language === 'no'}>🇳🇴 NO</option>\n\t\t\t\t\t\t\t\t\t\t<option value='en' selected={language === 'en'}>🇬🇧 EN</option>\n\t\t\t\t\t\t\t\t\t\t<option value='es' selected={language === 'es'}>🇪🇸 ES</option>\n\t\t\t\t\t\t\t\t\t\t<option value='de' selected={language === 'de'}>🇩🇪 DE</option>\n\t                                    <option value='fr' selected={language === 'fr'}>🇫🇷 FR</option>\n\t                                    <option value='ru' selected={language === 'ru'}>🇷🇺 RU</option>\n\t                                    <option value='se' selected={language === 'se'}>🇸🇪 SE</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item d-block d-lg-none'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'}\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDarkmode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class={`${darkmode ? 'fas text-warning' : 'far'} fa-moon`} /> <Text id='header.darkmode'>Nattmodus</Text>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item mr-2 d-none d-lg-block'>\n\t\t\t\t\t\t\t<button class='btn btn-link'\n\t\t\t\t\t\t\t\tdata-name='profile'\n\t\t\t\t\t\t\t\tonClick={this.toggleDarkmode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class={`${darkmode ? 'fas text-warning' : 'far'} fa-moon`} />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{/* <li class='nav-item ml-auto d-none d-lg-block'>\n\t\t\t\t\t\t\t<form class='form-inline my-2 my-lg-0'>\n\t\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t\t<input class='form-control form-control-sm mr-sm-2' type='search' placeholder={<Text id='header.search-placeholder'>Søk etter det meste...</Text>}\n\t\t\t\t\t\t\t\t\t\tvalue={searchText}\n\t\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'searchText')}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Localizer>\n\t\t\t\t\t\t\t\t<button class='btn btn-sm btn-outline-success my-2 my-sm-0' type='button'\t\n\t\t\t\t\t\t\t\t\tonClick={this.search}\n\t\t\t\t\t\t\t\t><Text id='header.search'>Søk</Text></button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t</ul>\n\n\t\t\t\t    \n\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Navigation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {\n};\n\n@observer\nclass RaceText extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { text } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\n        let finalText = text;\n\n        const regex = new RegExp(`/<${language}>(.*?)<\\/${language}>/`);\n        const parsedText = text.replace(regex, '$1');\n        if (parsedText) {\n            finalText = text;\n        }\n\n\t\treturn (\n\t\t\t<>\n                {finalText}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceText;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass Checkpoints extends Component {\n    render() {\n        const { checkpoints, thClass, thStyle, selectedCheckpointId, width, widthCp, onClickCheckpoint = () => {}, dotColor } = this.props;\n        return (<>\n            {checkpoints && checkpoints.map((cp, cpIdx) => <>\n                {cpIdx > 0 && <th class={thClass} style={thStyle}>\n                    <div class='' style={`width: ${width}px;`}>\n                        &nbsp;\n                    </div>\n                </th>}\n                <th class={thClass} style={thStyle}>\n                    <div\n                        class={`checkpoint position-relative ${selectedCheckpointId === cp.id ? 'text-primary' : ''}`}\n                        style={`width: ${widthCp}px; font-size: 1.1em;`}\n                        onClick={onClickCheckpoint}\n                        data-id={cp.id}\n                    >\n                        <i class='fas fa-campground' />\n\n                        <div\n                            class={`rounded-pill-both px-1 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: 0px; right: -20px; font-size: 0.6em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {cp.sortOrder && cp.sortOrder !== 'n/a' && <>{cp.sortOrder}</>}\n                        </div>\n\n                    </div>\n                </th>\n            </>)}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantLineCheckpoint extends Component {\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n@observer\nclass Contestants extends Component {\n    render() {\n        const {\n            currentClass,\n            contestants,\n            limit,\n            onClickMusher,\n            tdClass,\n            tdStyle,\n            progressStyle,\n            progressbarStyle,\n        } = this.props;\n\n        const { checkpoints = [], results = [] } = currentClass;\n        const finalContestants = contestants && limit ? contestants.slice(0, limit) : contestants;\n\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n\n        const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n        const now = Math.floor(new Date().getTime() / 1000, 10);\n\n        return (<>\n            {finalContestants && finalContestants.map((co, coIdx) => {\n                let cpIdx = 0;\n                let hasLeftCpPrev;\n                let bibIdxOutPrev;\n                let estTimeToCpMinutesPrev;\n                let hasScratchedPrev;\n                let totalInCpTime = 0;\n\n                let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(co.bib, 10)) : null;\n                selectedMusher = selectedMusher ? selectedMusher : {};\n\n                return(<>\n                    <tr class='musher' onClick={onClickMusher} data-bib={co.bib}>\n                        <td class={tdClass} style={tdStyle}>\n                            {co.startTime ? util.isoTime(co.startTime) : ''}\n                        </td>\n\n                        {checkpoints && checkpoints.map((cp, idx) => {\n                            const checkpointResults = results.slice().filter(e => e.checkpoint === cp.id).sort(fieldSorter(['timestamp']));\n                            const res = checkpointResults.filter(e => parseInt(e.bib, 10) == co.bib);\n                            const hasLeftCp = res.find(e => e.direction === 'out');\n                            const hasArrivedCp = res.find(e => e.direction === 'in');\n                            const hasScratched = res.find(e => e.direction === 'scratched');\n\n                            const allResultsIn = checkpointResults.filter(e => (e.direction === 'in' || e.direction === 'scratched'));\n                            const bibIdxIn = allResultsIn.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            const allResultsOut = checkpointResults.filter(e => e.direction === 'out');\n                            const bibIdxOut = allResultsOut.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            let timeInCp = 0;\n                            let percentInCp;\n                            if (!cp.isStartLine && hasArrivedCp && hasLeftCp && hasArrivedCp.timestamp && hasLeftCp.timestamp) {\n                                timeInCp = mu.deltaSec(hasArrivedCp.timestamp, hasLeftCp.timestamp);\n                            }\n                            totalInCpTime += timeInCp ? timeInCp : 0;\n\n                            if (!hasLeftCp && hasArrivedCp && !cp.isStartLine) {\n                                if (cp.timeEqualization && reqTotalRestInSec) {\n                                    const restInCpSoFar = mu.deltaSec(hasArrivedCp.timestamp, now);\n                                    // console.log({ reqTotalRestInSec, totalInCpTime, restInCpSoFar })\n                                    percentInCp = (totalInCpTime + restInCpSoFar) / reqTotalRestInSec * 100;\n                                    percentInCp = percentInCp > 100 ? 100 : percentInCp;\n                                    // console.log({ percentInCp })\n                                }\n                            }\n\n                            if (hasScratchedPrev) {\n                                return '';\n                            }\n\n                            if (bibIdxIn === -1)  {\n                                if (hasLeftCpPrev) {\n                                    const nowEpoch = Math.floor(new Date().getTime() / 1000);\n                                    const prevCpOutEpoch = Math.floor(new Date(hasLeftCpPrev.timestamp).getTime() / 1000);\n                                    const timeUsedOnStage = Math.floor((nowEpoch - prevCpOutEpoch) / 60);\n                                    // let percentDone = timeUsedOnStage / estTimeToCpMinutesPrev * 100;\n                                    let percentDone = timeUsedOnStage / cp.estTimeToCpMinutes * 100;\n                                    percentDone = percentDone > 95 ? 95 : percentDone;\n                                    const line = (<>\n                                        <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                            <div class='progress' style={`${progressStyle}`}>\n                                                <div\n                                                    class={`progress-bar progress-bar-striped`}\n                                                    role='progressbar'\n                                                    style={`width: ${percentDone}%; ${progressbarStyle}`}\n                                                    aria-valuenow={percentDone}\n                                                    aria-valuemin='0'\n                                                    aria-valuemax='100'\n                                                    data-prevtimestamp={hasLeftCpPrev.timestamp}\n                                                    data-timeUsedOnStage={timeUsedOnStage}\n                                                    data-estTimeToCpMinutesPrev={estTimeToCpMinutesPrev}\n                                                    data-nowEpoch={nowEpoch}\n                                                    data-prevCpOutEpoch={prevCpOutEpoch}\n                                                >{bibIdxOutPrev + 1 > 0 ? bibIdxOutPrev + 1 : ''}</div>\n                                            </div>\n\n                                            {/* estTimeToCpMinutesPrev: {estTimeToCpMinutesPrev}\n                                            timeUsedOnStage: {timeUsedOnStage}\n                                            percentDone: {percentDone} */}\n                                            {co.cpId && res.length > 0 && <>\n                                                {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                            </>}\n                                        </td>\n                                    </>);\n                                    bibIdxOutPrev = bibIdxOut;\n                                    hasLeftCpPrev = hasLeftCp;\n                                    estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                    return line;\n                                }\n                                return '';\n                            }\n                            cpIdx = idx;\n                            bibIdxOutPrev = bibIdxOut;\n                            hasLeftCpPrev = hasLeftCp;\n                            estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n\n                            const output = (<>\n                                {(hasArrivedCp || hasScratched) && idx > 0 && <>\n                                    <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                        <div class='progress' style={`${progressStyle}`}>\n                                            <div\n                                                class={`progress-bar`}\n                                                role='progressbar'\n                                                style={`width: 100%; ${progressbarStyle}`}\n                                                aria-valuenow='100'\n                                                aria-valuemin='0'\n                                                aria-valuemax='100'\n                                            />\n                                        </div>\n                                        {co.cpId && res.length > 0 && <>\n                                            {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                        </>}\n                                    </td>\n                                </>}\n                                <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                    <div class='progress' style={`${progressStyle}`}>\n                                        <div\n                                            class={`progress-bar ${percentInCp > 0 ? 'progress-bar-striped' : ''} ${hasScratched ? 'bg-danger' : 'bg-success'}`}\n                                            role='progressbar'\n                                            style={`width: ${percentInCp || 100}%; ${progressbarStyle}`}\n                                            aria-valuenow={percentInCp}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        >{hasScratched ? <i class='fas fa-times' /> : <>{bibIdxIn + 1 > 0 ? bibIdxIn + 1 : ''}</>}</div>\n                                    </div>\n                                    {co.cpId && res.length > 0 && <>\n                                        {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                    </>}\n                                </td>\n                            </>);\n\n                            hasScratchedPrev = hasScratched;\n                            return output;\n                        })}\n                        <td colspan={checkpoints.length * 2 - cpIdx} class={tdClass} style={tdStyle}>\n                            <div class='d-flex flex-nowrap'>\n                                <div\n                                    class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                    style={`background-color: ${mu.getRankingColor(coIdx + 1)}; width: 45px;`}\n                                >\n                                    {co.bib}\n                                </div>\n                                <div>\n                                    <nobr>\n                                        {co.flag} {co.lastname}\n                                    </nobr>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </>);\n            })}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantCheckpoint extends Component {\n\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n\n@observer\nclass RaceLiveResults extends Component {\n    componentWillReceiveProps(nextProps) {\n        if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n            const { currentClass } = this.props;\n            const { raceStore } = this.props.stores;\n            const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n        }\n\t}\n\n    componentDidMount() {\n        const { currentClass } = this.props;\n        const { raceStore } = this.props.stores;\n        const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n\t}\n\n    render() {\n        const widthCp = 20;\n        const width = 40;\n\t\tconst {\n            race,\n            currentClass,\n            onClickMusher = () => {},\n            onClickCheckpoint = () => {},\n            selectedCheckpointId,\n            limit = 100,\n            tableClass = 'table-striped table-sm',\n            thClass,\n            thStyle,\n            tdClass,\n            tdStyle,\n            progressStyle = 'height: 20px;',\n            progressbarStyle,\n        } = this.props;\n        const { checkpoints = [], sortOrderResults } = currentClass;\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n        const dotColor = '#808080';\n\n\t\treturn (<>\n            <div class='table-responsive'>\n                <table class={`table ${tableClass}`}>\n                    <thead>\n                        <tr>\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${width}px;`}>\n                                    <i class='fas fa-flag' />\n                                </div>\n                            </th>\n\n                            <Checkpoints stores={this.props.stores}\n                                checkpoints={checkpoints}\n                                thClass={thClass}\n                                thStyle={thStyle}\n                                selectedCheckpointId={selectedCheckpointId}\n                                width={width}\n                                widthCp={widthCp}\n                                onClickCheckpoint={onClickCheckpoint}\n                                dotColor={dotColor}\n                            />\n\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${widthCp}px;`}>\n                                    <i class='fas fa-flag-checkered' />\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <Contestants\n                            stores={this.props.stores}\n                            currentClass={currentClass}\n                            contestants={sortedContestants}\n                            limit={limit}\n                            onClickMusher={onClickMusher}\n                            tdClass={tdClass}\n                            tdStyle={tdStyle}\n                            progressStyle={progressStyle}\n                            progressbarStyle={progressbarStyle}\n                        />\n                    </tbody>\n                </table>\n            </div>\n\t\t</>);\n\t}\n}\n\nexport default RaceLiveResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport Header from './header';\nimport Submenu from './submenu';\nimport RaceHeader from './raceheader';\nimport RaceText from './raceText';\n\n\nimport ScrollIntoView from '../../../components/util/scrollIntoView';\nimport Drawer from '../../../components/drawer/';\nimport Gauge from '../../../components/gauge';\nimport DogScroller from '../../../components/dog/scroller';\nimport HeaderCustom from '../../../components/header/custom';\n\nimport RaceLiveResults from '../../../components/races/liveResults';\nimport MusherInfoHeader from '../../../components/races/musherInfoHeader';\nimport RaceLiveAddResult from '../../../components/races/liveAddResult';\nimport RaceLiveMusherResult from '../../../components/races/liveMusherResult';\nimport RaceLiveCheckpointResult from '../../../components/races/liveCheckpointResult';\n\nimport mu from '../../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, true);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\temail: '',\n\tsubmenu: 'ads',\n\tjwtToken: util.getJwtToken(),\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n\t\tconst { reloadLastEpoch } = this.props;\n\t\tconst { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass PublicRaceDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\t\t\ttimerRunning: true,\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs, true);\n\n        // // Set reload timer\n        // if (timerRunning) {\n        //     clearTimeout(this.updateTimer.reload);\n        //     this.updateTimer.reload = setTimeout(() => {\n        //         console.log('loadLiveRaceResults.reloading...');\n        //         const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n        //         this.setState({ reloadLastEpoch });\n        //         // this.loadRace(props);\n        //         this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n        //     }, RELOAD_INTERVAL_IN_SEC * 1000);\n        // }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n\tasync loadRace(props = this.props) {\n        const { loadTimes = 0 } = this.state;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore, appState } = props.stores;\n\t\tconst { raceid, classid, filterByBibs, historySteps } = props;\n        await raceStore.load(raceid);\n        raceStore.getAllClassesSortedBy();\n        \n        const { race } = raceStore;\n        const { focusOnMushers } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const allClassIds = race?.classes.map(e => e.id);\n        let selectedClassId = selectedClassIds[0];\n        if (allClassIds.indexOf(selectedClassId) === -1) {\n            selectedClassId = allClassIds[0];\n            appState.setSelectedClassId(selectedClassId);\n        }\n        if (classid) {\n            appState.toggleSelectedClassId(classid, true);\n        }\n\t\tconst allTeamIds = race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n            })\n            .flat();\n\n        const bibs = filterByBibs ? filterByBibs : race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n            })\n            .flat();\n\n        if (allTeamIds.length > 0) {\n            await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n        }\n\n        if (race.liveRace > 0) {\n            await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\t\t\tclearTimeout(this.updateTimer.reload);\n\t\t\tthis.updateTimer.reload = setTimeout(async () => {\n\t\t\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\t\t\tthis.setState({ reloadLastEpoch });\n\t\t\t\tthis.loadRace();\n\t\t\t}, RELOAD_INTERVAL_IN_SEC * 1000);\n        } else {\n            await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n        }\n\n        // if (allTeamIds.length > 0 && raceid) {\n        //     if (!race.liveRace) {\n        //         await raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n        //         raceStore.getWorkoutSummaryActiveTeams();\n        //     }\n        //     if (loadTimes === 0) {\n        //         await raceStore.loadTeams(allTeamIds.join(','));\n        //     }\n\t\t// }\n\n\t\t// // Set reload timer\n\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\tcontentIsNotLoaded: false,\n            loadTimes: loadTimes + 1,\n\t\t});\n\t}\n\n\t// async loadRace(props = this.props) {\n\t// \tthis.setState({ isLoading: true });\n\t// \tconst { raceStore } = props.stores;\n\t// \tconst { raceid } = props;\n\t// \tawait raceStore.load(raceid);\n\t// \tconst { race } = raceStore;\n\n\t// \tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n    //         return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t// \t}).flat();\n\n\t// \tif (allTeamIds.length > 0) {\n\t// \t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t// \t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t// \t\traceStore.getWorkoutSummaryActiveTeams();\n\t// \t}\n\t// \traceStore.getAllClassesSortedBy();\n\n\t// \t// Set reload timer\n\t// \tclearTimeout(this.updateTimer.reload);\n\t// \tthis.updateTimer.reload = setTimeout(async () => {\n\t// \t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \t\tthis.setState({ reloadLastEpoch });\n\t// \t\tthis.loadRace();\n\t// \t}, RELOAD_INTERVAL_IN_SEC * 1000);\n\n\t// \tthis.setState({\n\t// \t\tisLoading: false,\n\t// \t\tcontentIsNotLoaded: false,\n\t// \t});\n\t// }\n\n\ttoggleDisplayDetails = (e) => {\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleDisplayDetails(email)\n\t}\n\n\tadminToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleEditUserDetails(email)\n\t}\n\n\tadminSignupEdit = (e) => {\n        const { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n\tlockAllWorkoutsInRace = async () => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n\t\tconst lockMessage = await raceStore.lockAllWorkoutsInRace({ id: raceid });\n\t\tthis.setState({ lockMessage });\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n\t}\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        // if (!showDrawer) {\n        //     // Stop reload when we are updating results.\n        //     clearTimeout(this.updateTimer.reload);\n        // } else {\n        //     this.loadRace();\n        // }\n        this.setState({\n            showDrawer: !showDrawer,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerMusher = (e) => {\n\t\tconst selectedMusherBib = e.target.closest('.musher').dataset.bib;\n        const { showDrawerMusher } = this.state;\n        this.selectMusher(selectedMusherBib);\n    }\n\n    selectMusher = (selectedMusherBib) => {\n        this.setState({\n            selectedMusherBib,\n            showDrawerMusher: true,\n            showDrawerCheckpoint: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerMusher = () => {\n        this.setState({\n            selectedMusherBib: '',\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerCheckpoint = (e) => {\n\t\tconst selectedCheckpointId = e.target.closest('.checkpoint').dataset.id;\n        const { showDrawerCheckpoint } = this.state;\n        this.selectCheckpoint(selectedCheckpointId)\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerCheckpoint = () => {\n        this.setState({\n            selectedCheckpointId: '',\n            showDrawerCheckpoint: false,\n        });\n    }\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n\trender() {\n\t\tconst { appState, raceStore, userStore } = this.props.stores;\n\t\tconst { user = {}, isAdmin } = userStore;\n\t\tconst { raceid, path } = this.props;\n\t\tconst { darkmode, displayDetails, editUserDetails, language = 'en', selectedClassIds = [] } = appState;\n\t\tconst { race, teamList, classes } = raceStore;\n\n\t\tconst { contentIsNotLoaded, lockMessage, showDrawer, showDrawerCheckpoint, showDrawerMusher, reloadLastEpoch, selectedCheckpointId, selectedMusherBib } = this.state;\n\t\tconst { activeTeams, waypoints, zoomToMarkers } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n\t\tconst filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const isLiveRace = race.liveRace === 1;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header stores={this.props.stores} />\n\n\t\t\t\t<div class='container-fluid ' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t\t<Submenu stores={this.props.stores} path={path} raceid={raceid} />\n\n\t\t\t\t\t<div class='row border-bottom '>\n\t\t\t\t\t\t<div class='col-12'>\n\n\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t<RaceHeader stores={this.props.stores} title={<Text id='races.results'>Resultater</Text>} />\n\t\t\t\t\t\t\t</Localizer>\n\n\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t<a href={`/race/${raceid}/resultsMain`}>New results demo</a>\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t<ReloadTimer stores={this.props.stores} reloadLastEpoch={reloadLastEpoch} />\n\n\t\t\t\t\t\t\t{isLiveRace ? <>\n                    \n\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t{user.email && <div class='alert alert-primary' role='alert'>\n\t\t\t\t\t\t\t\t\t{language === 'no' && <>\n\t\t\t\t\t\t\t\t\t\tResultatene hentes direkte fra treningsøktene i QPaws appen.<br />\n\t\t\t\t\t\t\t\t\t\t<strong>For at treningsøktene skal bli registrert må øktene:</strong>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li>Ha riktig dato som er innenfor løpsperioden.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Være markert som 'Konkurranse'.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Være registrert på teamet som er påmeldt.</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t{language === 'en' && <>\n\t\t\t\t\t\t\t\t\t\tThe results are imported directly from the workouts inside QPaws app.<br />\n\t\t\t\t\t\t\t\t\t\t<strong>To make sure your workouts are registered check the following:</strong>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li>Use the correct date on your workout. Has to be inside the race period.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Mark the workout as 'Race'.</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>Workout has to be on the same team as you signed up with.</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t{race.resultsUrl ? <div class='p-3 my-4 bg-light'>\n\t\t\t\t\t\t\t\t<a href={race.resultsUrl} target='_blank' rel='noreferrer' native>\n\t\t\t\t\t\t\t\t\t{race.resultsText ? race.resultsText : <><Text id='races.results-here'>Se resultater her</Text> </>} <i class='fas fa-chevron-circle-right' />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div> : <>\n\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t{isLiveRace ? <></> : <>\n\t\t\t\t\t\t\t\t{(contentIsNotLoaded || !classes || classes.length === 0) && <div class='d-flex justify-content-center my-5 py-5'>\n\t\t\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{isLiveRace ? <>\n\t\t\t\t\t\t\t{!showDrawer && <>\n\t\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t\t<h1><Text id='races.classes'>Classes</Text></h1>\n\t\t\t\t\t\t\t\t\t<nav class=\"flex-column flex-sm-row\">\n\t\t\t\t\t\t\t\t\t\t{race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-lg flex-sm-fill text-sm-center btn${selectedClassIds.indexOf(currentClass.id) > -1 ? '' : '-outline'}-primary mr-2 mb-2`}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.filterByClass}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-id={currentClass.id}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{currentClass.title}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t\t{race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <div class='mt-5 mb-5'>\n\t\t\t\t\t\t\t\t\t\t<RaceLiveResults\n\t\t\t\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\t\t\t\trace={race}\n\t\t\t\t\t\t\t\t\t\t\tcurrentClass={currentClass}\n\t\t\t\t\t\t\t\t\t\t\treloadLastEpoch={reloadLastEpoch}\n\t\t\t\t\t\t\t\t\t\t\tkey={`raceclass-${currentClass.id}`}\n\t\t\t\t\t\t\t\t\t\t\tonClickMusher={this.toggleDrawerMusher}\n\t\t\t\t\t\t\t\t\t\t\tonClickCheckpoint={this.toggleDrawerCheckpoint}\n\t\t\t\t\t\t\t\t\t\t\tselectedCheckpointId={selectedCheckpointId}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>}\t\t\t\t\t\t\n\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t<div class='col-12 overflow-auto bg-light py-4 border rounded-lg mb-5' style='max-height: 30vh;'>\n\t\t\t\t\t\t\t\t{(activeTeams && activeTeams.length > 0) && <>\n\t\t\t\t\t\t\t\t\t<span class='float-right'>\n\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><Text id='races.mushers-on-trail'>Mushers on trail</Text>: {activeTeams.length}</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t<h5><Text id='races.on-trail'>På sporet nå</Text>:</h5>\n\t\t\t\t\t\t\t\t<div class='table-responsive-md'>\n\t\t\t\t\t\t\t\t\t<table class='table table-sm table-striped'>\n\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th><Text id='races.name'>Navn</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th><Text id='races.start-date'>Startdato</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.distance'>Distanse</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.ascend'>Høydemeter</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.avg-speed'>Gj.snittsfart</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.race-time'>Kjøretid</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.rest-time'>Hviletid</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.load-index'>B.index</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th class='text-center'><Text id='races.current-speed'>Fart nå</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <th>Posisjon</th> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<th><Text id='races.elevation'>Moh</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <th>Retning</th> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<th><Text id='races.elevation-graph'>Høydekurve</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{(activeTeams && activeTeams.length > 0) ? activeTeams.map((line, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst team = raceStore.getTeamById(line.team);\n\t\t\t\t\t\t\t\t\t\t\t\tconst musher = raceStore.getMusherByTeamId(team.id);\n\t\t\t\t\t\t\t\t\t\t\t\tconst currentSpeed = util.format(line.currentLocation.coords.speed * 3.6, 1);\n\t\t\t\t\t\t\t\t\t\t\t\tconst spinnerColor = line.secSinceLastUpdate > 1800 ? 'danger' : (line.secSinceLastUpdate > 600 ? 'warning' : 'success');\n\t\t\t\t\t\t\t\t\t\t\t\tconst lastUpdated = line.currentLocation.timestamp;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn (<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>{idx + 1}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{line.isInProgress === 1 && <div class={`spinner-grow text-${spinnerColor} float-left`} role='status' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{line.isInProgress === 2 && <i class='fas fa-pause-circle text-warning mr-2 float-left' style='font-size: 1.8em;' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.firstname} {musher.lastname}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team.name && <> / <span class='text-muted'>{team.name}</span></>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-dog text-muted ml-2' /> {line.avgDogs}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-battery-three-quarters text-muted ml-2' /> {util.format(line.currentLocation.battery.level * 100, 0)}%\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-hourglass-half text-muted ml-2' /> Updated: {util.formatDistance(lastUpdated, new Date())} ago\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{util.formatDate(line.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{util.format(line.distanceKm, 1)} km</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{util.format(line.elevation, 0)} m</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{util.format(line.speedAvg, 1)} km/t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-center'>{util.secToHms(line.duration)}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-center'>{util.secToHms(line.rest)}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{line.loadIndex}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right'>{currentSpeed} km/t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{line.currentLocation.coords.latitude},{line.currentLocation.coords.longitude}</td> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{line.currentLocation.coords.altitude} moh</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{heading}</td> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg viewBox='0 0 300 100' style='width: 100%; height: 50px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path d={`${line.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>);\n\t\t\t\t\t\t\t\t\t\t\t}) : <tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td colspan='11' class='text-center py-4'><h5><Text id='races.no-team-on-trail'>Ingen team tracker live i The Musher appen akkurat nå...</Text></h5></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* {JSON.stringify(activeTeams)} */}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h1><Text id='races.classes'>Classes</Text></h1>\n\t\t\t\t\t\t\t\t<nav class=\"flex-column flex-sm-row\">\n\t\t\t\t\t\t\t\t\t{race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-lg flex-sm-fill text-sm-center btn${selectedClassIds.indexOf(currentClass.id) > -1 ? '' : '-outline'}-primary mr-2 mb-2`}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.filterByClass}\n\t\t\t\t\t\t\t\t\t\t\tdata-id={currentClass.id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{currentClass.title}\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t{race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <div class='mt-5 mb-5'>\n\t\t\t\t\t\t\t\t\t{race.resultDanger && <div class='alert alert-danger' role='alert'>\n\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-danger float-left' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={mu.replaceImages(race.resultDanger, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t{race.resultWarning && <div class='alert alert-warning' role='alert'>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-exclamation float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={mu.replaceImages(race.resultWarning, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t{race.resultSuccess && <div class='alert alert-success' role='alert'>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={mu.replaceImages(race.resultSuccess, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\t\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t\t\t<span class='float-right'>\n\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><Text id='races.mushers'>Mushers</Text>: {currentClass.totalMushers || 0}</span>\n\t\t\t\t\t\t\t\t\t\t<span class='text-muted ml-4'><Text id='races.finished-mushers'>Finished mushers</Text>: {currentClass.totalFinished || 0} </span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<h3>{currentClass.title} {currentClass.startDate && <>\n\t\t\t\t\t\t\t\t\t\t\t: <span class='font-weight-lighter'>\n\t\t\t\t\t\t\t\t\t\t\t\t{util.formatDate(`${currentClass.startDate} ${currentClass.startTime || '00:00:00'}`, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(`${currentClass.endDate} ${currentClass.endTime || '00:00:00'}`, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t\t\t<div class='table-responsive-md'>\n\t\t\t\t\t\t\t\t\t\t<table class='table table-sm table-striped'>\n\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>#</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col' style='min-width: 200px;'><Text id='races.name'>Navn</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'><i class='fas fa-user-shield' /> Cellphone</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'><i class='fas fa-user-shield' /> Email</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <th scope='col' class='d-none d-sm-block' style='min-width: 400px;'><Text id='races.stages'>Etapper</Text></th>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'><Text id='races.result'>Resultat</Text></th>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t{classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.map((contestant, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst { musher, currentTeam, currentStages, currentResults, completed, duration,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnormalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tflatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfinishedDate, totalWorkoutTimeUsedSec,\n\t\t\t\t\t\t\t\t\t\t\t\t\t} = contestant;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr onClick={this.toggleDisplayDetails} data-email={musher.email}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='row'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{idx + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && currentResults && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />{currentResults.isLocked ? <i class='fas fa-lock text-danger mr-2' /> : <i class='fas fa-lock-open text-success mr-2' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass={`${displayDetails[musher.email] ? 'font-weight-bold' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`${displayDetails[musher.email] ? '' : 'line-height: 0.8em;'}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{displayDetails[musher.email] ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.firstname} {musher.lastname}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'>{currentTeam.name}</span><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>{musher.sportsClub}</small><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.price1 && <div class='font-weight-lighter'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-trophy text-warning' /> {musher.price1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.priceSent && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check text-success' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-trophy' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.priceSent && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check text-success' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.firstname} {musher.lastname}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>{musher.sportsClub}</small><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{musher.cellphone}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{musher.email}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <td class='d-none d-md-block'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class='btn btn-primary btn-sm float-right' onClick={this.adminToggleEditUser}><i class='fas fa-user-edit' /></button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(isAdmin && editUserDetails[musher.email]) && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>Admin edit:</h5>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class='col-sm-2 col-form-label text-right'>Email</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class='col-sm-2 col-form-label text-right'>Cellphone</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.cellphone}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='team' class='col-sm-2 col-form-label text-right'>Race status</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class='form-control-plaintext' id='raceStatus'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.raceStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=''>-- Choose race status --</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='OK'>OK - Everything ok</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DNS'>DNS - Did Not Start</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DNF'>DNF - Did Not Finish</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DNQ'>DNQ - Did not qualify</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DQ'>DQ - Disqualified</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value='DC'>DC - Data changed by user</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='raceComment' class='col-sm-2 col-form-label text-right'>Race comment</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control-plaintext' id='raceComment'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.raceComment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='gpxResultsApproved' class='col-sm-2 col-form-label text-right'>GPX Results approved (date)</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' class='form-control-plaintext' id='gpxResultsApproved'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='price1' class='col-sm-2 col-form-label text-right'>Price 1</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control-plaintext' id='price1'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.price1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='price2' class='col-sm-2 col-form-label text-right'>Price 2</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control-plaintext' id='price2'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.price2}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='price3' class='col-sm-2 col-form-label text-right'>Price 3</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control-plaintext' id='price3'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.price3}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='form-group row my-0'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for='priceSent' class='col-sm-2 col-form-label text-right'>Price sent</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='col-sm-10'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' class='form-control-plaintext' id='priceSent'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-classid={musher.class}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-contestantid={musher.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonInput={this.adminSignupEdit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <div class='d-flex flex-wrap'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentStages && currentStages.map((stage, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst percent = stage.distanceKm / currentClass.distance * 100;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst width = percent > 100 ? 100 : parseInt(percent, 10);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst currentEpoch = Math.floor(new Date(stage.date).getTime() / 1000);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst inDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinDate.setUTCSeconds(currentEpoch + parseInt(stage.duration, 10));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst images = stage.images.flat();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (displayDetails[musher.email]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='bg-light border rounded-lg  text-right position-relative mr-1 mb-1' style={`width: 350px; min-width: 320px;`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg viewBox='0 0 300 100' class='position-absolute' style='width: 100%; height: 95%; bottom: 0px; left: 0px; z-index: 0;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path d={`${stage.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='position-relative px-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='position-absolute' style='top: 3px; left: 3px; font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{idx + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <span class='position-absolute' style='top: 0px; right: -5px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-success' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='float-left'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-sign-out-alt text-muted' /> {util.formatDate(stage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-sign-in-alt text-muted' /> {util.formatDate(inDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='float-right'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {restTimeText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{restTimeTrackText} */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(stage.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr><br />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(stage.rest) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(stage.duration - stage.rest) || 'n/a'}</nobr><br />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(stage.avgDogs, 0) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='bg-light border rounded-lg text-right position-relative px-3 mr-1 mb-1' style={`width: 300px; min-width: 300px;`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <span class='position-absolute' style='top: 2px; right: -5px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-sucess' />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='float-left'>{idx + 1}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class='text-right position-relative pl-4'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{raceStatus(musher)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{musher.raceComment && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='alert alert-warning text-left' role='alert'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Markdown markdown={mu.replaceImages(musher.raceComment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(isAdmin && currentResults.lastUpdated > lastAllowedChangeDate) && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='alert alert-danger text-left d-none d-md-block' role='alert'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-user-shield' /> Last changed: {util.formatDate(currentResults.lastUpdated, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{completed >= 99 ? <span class='position-absolute' style='top: 10px; left: 0px;'><i class='fas fa-flag-checkered text-success' /></span> : ''}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{displayDetails[musher.email] ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='progress mb-1' style='height: 3px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trole='progressbar'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`width: ${completed}%`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuenow={`${completed}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuemin='0'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuemax='100'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{race.nonstop ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br /><nobr><i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(totals.firstEpoch)} - <i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(finishedDate)}</nobr>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-danger'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{totals.firstGpxStartEpoch && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>firstGpxStartEpoch: {util.isoDate(totals.firstGpxStartEpoch)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{totals.lastGpxStartEpoch && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>lastGpxStartEpoch: {util.isoDate(totals.lastGpxStartEpoch)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>totalWorkoutTimeUsedSec: {util.secToHms(totals.totalWorkoutTimeUsedSec)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>rest: {util.secToHms(totals.rest)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>totalRest: {util.secToHms(totals.totalRest)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr>duration: {util.secToHms(totals.duration)}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(currentResults.avgDogs, 0) || 'n/a'}</nobr> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='progress mb-1' style='height: 3px;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trole='progressbar'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`width: ${completed}%`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuenow={`${completed}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuemin='0'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-valuemax='100'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{race.nonstop ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isDone === 1 ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr class='font-weight-bold'><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr><br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* raceDistance: {raceDistance}<br /> */}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* duration: {util.secToHms(duration)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnormalizedDuration: {util.secToHms(normalizedDuration)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweightedNormalizedDuration: {util.secToHms(weightedNormalizedDuration)}<br /> */}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* totalKcalRelated: {totalKcalRelated}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweightedTotalKcal: {weightedTotalKcal}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflatTotalKcal: {flatTotalKcal}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentHarder: {percentHarder}<br /> */}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* loadIndex: {loadIndex}<br /> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {isAdmin && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tADMIN:<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{['firstDate', 'lastDate', 'distanceKm', 'elevation'].map(field => <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'>{field}</span>: {JSON.stringify(totals[field])}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{['totalTimeUsedSec', 'totalWorkoutTimeUsedSec', 'duration', 'rest', 'totalRest', 'lastDuration'].map(field => <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'>{field}</span>: {util.secToHms(totals[field])}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{totals.distanceKm >= currentClass.distance && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStarted: {totals.firstDate}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfinished: {util.isoDate(finishedDate)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotal used: {util.secToHms(totalWorkoutTimeUsedSec)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotal rest: {util.secToHms(totals.totalRest)}<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>} */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class='text-center text-muted'>\n\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t{language === 'no' && <>\n\t\t\t\t\t\t\t\t\t\t\t\tOBS! Ref reglene så er det ikke lov til å endre treningsøktene som er med i konkurransen etter at løpet er ferdig.<br />\n\t\t\t\t\t\t\t\t\t\t\t\tForsøk på dette vil resultere i automatisk deplassering på listene.\n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t{language === 'en' && <>\n\t\t\t\t\t\t\t\t\t\t\t\tIMPORTANT! According to the rules: It is NOT allowed to try alter the workouts related to the competition after the race has ended.<br />\n\t\t\t\t\t\t\t\t\t\t\t\tAttempts will result in automatic deplacement on the resultlists.\n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>)}\n\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{!isLiveRace && isAdmin && <>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass='btn btn-danger btn-lg float-right m-4'\n\t\t\t\t\t\tonClick={this.lockAllWorkoutsInRace}\n\t\t\t\t\t>\n\t\t\t\t\t\tLock all workouts in this race\n\t\t\t\t\t</button>\n\t\t\t\t\t<xmp class='m-5'>{JSON.stringify(lockMessage, null, 4)}</xmp>\n\t\t\t\t</>}\n\n\t\t\t\t{showDrawer && <>\n\t\t\t\t\t<Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n\t\t\t\t\t\t<RaceLiveAddResult stores={this.props.stores} />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</>}\n\t\t\t\t{showDrawerCheckpoint && <>\n\t\t\t\t\t<Drawer stores={this.props.stores} onCloseClick={this.closeDrawerCheckpoint}>\n\t\t\t\t\t\t<RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</>}\n\t\t\t\t{showDrawerMusher && <>\n\t\t\t\t\t<Drawer stores={this.props.stores} onCloseClick={this.closeDrawerMusher}>\n\t\t\t\t\t\t<RaceLiveMusherResult stores={this.props.stores} bib={selectedMusherBib} onClickNav={this.selectMusher}  />\n\t\t\t\t\t</Drawer>\n\t\t\t\t</>}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default PublicRaceDetail;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport DogScroller from '../dog/scroller';\nimport ImageScroller from '../imageScroller';\nimport RaceTrackingMusherDetail from '../public/raceTrackingMusherDetail';\n\n@observer\nclass MusherInfoHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { contestant = {}, onMarkerClick = () => {}, children, rank } = this.props;\n        const wp = raceStore.findWaypointByBib(contestant.bib);\n\n        const { isAdmin } = userStore;\n        const musher = (contestant.bib ? raceStore.getMusherByBibId(contestant.bib) : raceStore.getMusherByBibEmail(contestant.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(contestant.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        let image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = contestant.color;\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(contestant.bib);\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n            />\n\n            <div class='d-flex position-relative' style='margin-top: 17vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; font-size: 1.2em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {/* {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>} */}\n                        {rank && <>{rank}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-0' style='line-height: 1.2em;'>\n                    <h5 class='mb-0'>\n                        <div class='d-flex flex-nowrap'>\n                            <div\n                                class='text-white font-weight-bold pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                style={`background-color: ${mu.getRankingColor(rank)}; width: 55px;`}\n                            >\n                                {musher.bib}\n                            </div>\n                            <div>\n                                <nobr>\n                                    {musher.flag} {musher.firstname} {musher.lastname}\n                                </nobr>\n                            </div>\n                        </div>\n                    </h5>\n                    <span class='mb-0' style='margin-left: 93px;'>{musher.sportsClub || team.name || <>&nbsp;</>}</span>\n                </div>\n            </div>\n\n            <div class='d-flex justify-content-center mb-3'>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='details'\n                    >\n                        Details\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'gpsdata' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='gpsdata'\n                    >\n                        GPS Data\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='team'\n                    >\n                        Team\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='dogs'\n                    >\n                        Dogs\n                    </button>\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                // style='max-height: 60vh;'\n            >\n                {submenu === 'details' && <>\n                    {children}\n                </>}\n\n                {submenu === 'gpsdata' && <>\n                    <RaceTrackingMusherDetail\n                        stores={this.props.stores}\n                        wp={wp}\n                        musher={musher}\n                    />\n                </>}\n\n                {submenu === 'team' && <>\n                    {team.public > 0 ? <>\n                        <h3>{team.name}</h3>\n                        <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        <ImageScroller stores={this.props.stores} images={teamImages} />\n\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                        </div>\n                    </>}\n                </>}\n\n                {submenu === 'dogs' && <>\n                    {team.public > 0 ? <>\n                        {team.dogs && <div class='w-100 container-fluid'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n                        {showDog && <>                    \n                            <div class='d-flex mb-0 mt-3 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pr-2'\n                                    style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                >\n                                    <h5 class='mb-1'>\n                                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </h5>\n                                    <div>\n                                        {daysUntilBirthday < 7 && <>\n                                            <span class='text-muted mr-2'>\n                                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                            </span>\n                                        </>}                                \n                                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                        </>}\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                    <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                        Toggle admin info\n                    </button>\n                    {showAdminInfo && <>\n                        <small>\n                            <xmp>\n                                musher: {JSON.stringify(musher, null, 4)}<br />\n                                user: {JSON.stringify(user, null, 4)}<br />\n                                team: {JSON.stringify(team, null, 4)}<br />\n                                totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                {/* {\n                                    \"firstDate\": \"2021-03-19 11:59\",\n                                    \"lastDate\": \"2021-03-20 17:13\",\n                                    \"firstEpoch\": 1616151540000,\n                                    \"lastEpoch\": 1616256780000,\n                                    \"now\": {\n                                        \"$numberDecimal\": \"1642675856939\"\n                                    },\n                                    \"totalTimeUsedSec\": 26524316,\n                                    \"totalWorkoutTimeUsedSec\": 130895,\n                                    \"lastDuration\": 25655,\n                                    \"team\": 84,\n                                    \"count\": 4,\n                                    \"distanceKm\": 301.5906237951766,\n                                    \"elevation\": 3610.019075719202,\n                                    \"duration\": 77343,\n                                    \"rest\": 1332,\n                                    \"speedAvg\": 8.294634979660305,\n                                    \"totalRest\": 54884,\n                                    \"loadIndex\": 1080.75,\n                                    \"totalKcalRelated\": 544.535560976128,\n                                    \"weightedTotalKcal\": 12303.171406247127,\n                                    \"flatTotalKcal\": 9424.70699359927,\n                                    \"firstGpxStartEpoch\": null,\n                                    \"lastGpxStartEpoch\": null\n                                } */}\n\n                            </xmp>\n                        </small>\n                    </>}\n                </div>}\n                <div class='d-flex position-absolute' style='right: 10px; bottom: 10px;'>\n                    {inFront.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-left' />\n                    </a>}\n                    {behind.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-right' />\n                    </a>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default MusherInfoHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n"],"sourceRoot":""}