{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/workout/commentAdd.js","webpack:///./components/imageSlider/index.js","webpack:///./components/workout/commentReply.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/data/distance.js","webpack:///./components/story/add.js","webpack:///./components/story/publicDetail.js","webpack:///./components/story/comments.js","webpack:///./components/style.css","webpack:///./components/team/publicFeedLine.js","webpack:///./components/story/publicStory.js","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/team/connect-boxes.js","webpack:///./components/ad/index.js","webpack:///./routes/stories/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/workout/comments.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/feedback/views.js","webpack:///./components/yrweather/index.js","webpack:///./components/team/fastList.js"],"names":["initialState","DisplayLikesAndComments","observer","props","toggleLikes","setState","showLikesList","state","render","this","stores","storyStore","teamStore","workoutStore","raceStore","likes","comments","type","onTeamClick","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","e","public","mu","getImage","team","priority","displayNameShort","name","displayName","href","uuidv4","title","id","fields","total","image","shortname","Component","WorkoutAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentWorkout","response","callback","inputRefObject","workout","comment","showAddImage","status","body","images","resizeTextarea","addImage","addImages","push","value","handleImageErrored","target","onerror","setTimeout","src","Date","inputRef","col","offset","showAvatar","extraClass","userStore","firstname","ucfirst","lastname","email","userImage","undefined","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","ref","data-id","disabled","img","onError","removeImage","data-name","object","updateField","before","after","autoOpen","touchStart","stopPropagation","startX","touches","pageX","touchEnd","sliding","touchMove","totalImages","x","prevImage","nextImage","imageContainer","currentImage1","currentImage2","currentIdx","imageDots","Array","fill","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","imgHeight","imgWidth","curImage","dimensions","width","height","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","s3LargeLink","c","image1","image2","i","WorkoutCommentReply","commentId","commentReplyWorkout","StoryAdd","commentStory","story","StoryCommentReply","commentReplyStory","componentDidMount","initCall","displayDistance","distance","format","Distance","smallUnit","settings","imperial","kmToMiles","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","insert","pinned","urlText","url","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","data","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","appState","isAdmin","teamId","parseInt","findTeam","darkmode","onChange","selected","checked","StoryPublicFeed","loadStoriesPublicFeed","publicFeed","showAllComments","showAddComment","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","dataset","likeStoryComment","replyId","likeStoryCommentReply","replyComment","parentElement","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","deleteCommentReplyStory","commentid","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","idx","translate","translatedText","key","preventDefault","replyid","translateCommentReply","translateComment","max_comments","compact","currentUser","language","filteredComments","totalComments","diplayedComments","Math","max","reverse","hasLikedComment","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","translation","getCommentTranslations","targetLang","data-comment","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","module","exports","likeWorkout","idxSuggestion","idxAd","limit","hasFollowSugguestions","hasAd","sessionid","getTime","TeamPublicFeedLine","toggleDate","showDate","workoutId","addLikeToFeed","addCommentToFeed","holdingStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","workoutsAddLikeToComment","workoutsAddLikeToCommentReply","workoutsAddCommentToWorkoutComment","workoutsAddCommentToWorkout","addLikeToWorkout","workoutsAddLikeToWorkout","toggleAddComment","shareLink","shareUrl","text","showWorkoutDetail","localName","console","log","route","translatedTextName","translatedTextComment","feed","field","containerRef","onUserClick","onDogClick","hasShareApi","publicDogs","publicUser","findPublicTeam","findTeamAmbition","ambition","ambitions","username","userLink","teamType","findTeamType","isTeamAdmin","members","some","m","hasLikedWorkout","totalFollowers","followers","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","gpxInfo","hideProfile","mapImage","currentLocationGeocode","views","getViews","statistics","adminData","getAdminData","translationName","getTranslation","feedName","feedComment","date","formatDate","hour12","hour","minute","dogs","track","sledWeight","temperature","formattedCounty","moonIllumination","phaseIcon","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","dblClick","likeRef","allDogs","distanceKm","elevation","duration","secToHms","speedAvg","avgGpsMovingSpeed","buttonOnly","data-url","data-title","rel","data-native","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","publicFeedUpdate","storyType","saveStoryField","clearTimeout","updateTimer","doUpdateField","StoryTypeRegular","showStoryDetail","offline","StoryTypeAd","componentWillMount","asUrl","currencty","StoryTypeArticle","storyId","likeIds","Object","keys","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","hashtag","reports","hasLikedStory","simple","classNames","role","Temperature","celciusToFahrenheit","Weight","kgToPounds","requestSent","Teams","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","loadTeams","isLoading","loadPublic","query","notfollowing","array","publicTeamsToFollow","place","Ad","withText","subject","logClick","ads","adStore","apiServer","getApiServer","loadAd","page","section","path","currentTeam","postalcode","replace","load","setTime","time","match","ad","native","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","MARGIN_TOP_BACK","marginTopBack","submenu","viewmenu","Home","reloadFeeds","sortby","sortBy","a","b","sortPublicFeed","back","history","goBack","loadAll","messageStore","getFingerprint","getInfo","getNotifications","getUnReadMessages","currentLocationInfo","coords","getWeatherUser","lat","latitude","lon","longitude","altitude","teamid","findPublicTeamByUuidv4","yrWeather","idxConfirm","dataFields","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertWorkouts","publicWorkouts","finalArray","concat","sort","o","dir","substring","reduce","p","n","localUpdateField","insertTopRanked","topRankedRandomized","shuffleArray","topRankedStories","startPosition","now","forEach","parseInputDate","floor","endPosition","randomPlace","randomInt","isObject","splice","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","showTeam","hideTeam","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","componentWillUnmount","hasNewStories","Elevation","meterToFeet","Speed","kmtToMph","Images","handleAddImage","file","addToImages","skipTimer","files","uploadStatus","apiUrl","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","addData","hasFollowRequests","reqUser","isDeleted","isConfirmed","data-user","data-follow","WorkoutComments","likeWorkoutComment","likeWorkoutCommentReply","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","isImage","result","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax","children","toggleViews","showViewList","viewUsersArrays","entries","weekObject","viewUsers","flat","userId","YrWeather","toggleyrWeather","showWeather","loadWeather","formatWeather","yrWeatherKeys","yrWeatherFormatted","captureEvents","onScroll","getNestedValue","night","morning","day","evening","getTemperatureColor","getWindSpeedColor","w","isoTime","windDirection","FastListLine","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","isIntersecting","currentHeight","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses"],"mappings":"mgBAOMA,EAAe,GAKfC,EADLC,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMJC,YAAc,WAEV,EAAKC,SAAS,CACVC,eAFsB,EAAKC,MAAvBD,iBANR,EAAKC,M,+VAAL,IACOP,GAHQ,E,kHAcnBQ,OAAA,WAAS,IACGF,EAAkBG,KAAKF,MAAvBD,cADH,EAEsDG,KAAKN,MAAMO,OAA9DC,EAFH,EAEGA,WAAYC,EAFf,EAEeA,UAAWC,EAF1B,EAE0BA,aAAcC,EAFxC,EAEwCA,UAFxC,EAGuFL,KAAKN,MAAzFY,EAHH,EAGGA,MAAOC,EAHV,EAGUA,SAHV,IAGoBC,YAHpB,MAG2B,QAH3B,MAGoCC,mBAHpC,MAGkD,aAHlD,EAIX,OAAQ,mBACE,mBAAKC,MAAM,uCACNJ,GAASA,EAAMK,OAAS,GAAK,mBAC1B,mBAAKD,MAAM,qDAAqDE,MAAM,mBAClE,oBACIF,MAAM,kBACNG,QAASb,KAAKL,aAEd,iBAAGe,MAAM,kCAJb,IAIiDJ,EAAMK,QAEtDL,EAAMQ,MAAM,EAhCR,GAgCiCC,KAAI,SAACC,GACvC,IAAIC,EACAC,EAcAC,EAbS,UAATX,GACAS,EAAOf,EAAWkB,eAAeJ,EAAKC,MACtCC,EAAQhB,EAAWmB,wBAAwBL,EAAKC,OAChC,SAATT,GACPS,EAAOd,EAAUiB,eAAeJ,EAAKC,MACrCC,EAAQf,EAAUkB,wBAAwBL,EAAKC,OAC/B,YAATT,GACPS,EAAOb,EAAagB,eAAeJ,EAAKC,MACxCC,EAAQd,EAAaiB,wBAAwBL,EAAKC,OAClC,SAATT,IACPS,EAAOZ,EAAUe,eAAeJ,EAAKC,MACrCC,EAAQb,EAAUgB,wBAAwBL,EAAKC,OAG/CK,IAAKC,QAAQL,KACbC,EAAaD,EAAMM,MAAK,SAAAC,GAAC,OAAiB,IAAbA,EAAEC,WAErBC,IAAGC,SAAS,CAAEX,OAAMY,KAAMV,EAAYW,SAAU,SAC5CH,IAAGI,iBAAiBd,GADtC,IAEMe,EAAOL,IAAGM,YAAYhB,GAC5B,OAAQ,mBACJ,oBAAMP,MAAM,uBACPS,EAAa,mBACV,iBAAGe,KAAI,iBAAmBf,EAAWgB,OAAUC,MAAOjB,EAAWa,KAAMnB,QAAS,SAACY,GAAD,OAAOhB,EAAYgB,EAAGN,EAAWgB,UAC5GH,IAEH,mBACDA,QAwBhB1B,EAAMK,OAtFF,GAsFmC,mBACpC,oBAAMD,MAAM,sCAAsCG,QAASb,KAAKL,aAC5D,YAAC,IAAD,CAAM0C,GAAG,qBAAqBC,OAAQ,CAAEC,MAAOjC,EAAMK,OAxFxD,IAwFG,OAA2FL,EAAMK,OAxFpG,EAwFG,gBAMfJ,GAAYA,EAASI,OAAS,GAAK,oBAAMD,MAAM,0BAC5C,iBAAGA,MAAM,gCADuB,IACWH,EAASI,SAG3Dd,GAAiB,mBAAKa,MAAM,aACxBJ,GAASA,EAAMS,KAAI,SAACC,GACjB,IAAIC,EACAC,EAcAC,EAbS,UAATX,GACAS,EAAOf,EAAWkB,eAAeJ,EAAKC,MACtCC,EAAQhB,EAAWmB,wBAAwBL,EAAKC,OAChC,SAATT,GACPS,EAAOd,EAAUiB,eAAeJ,EAAKC,MACrCC,EAAQf,EAAUkB,wBAAwBL,EAAKC,OAC/B,YAATT,GACPS,EAAOb,EAAagB,eAAeJ,EAAKC,MACxCC,EAAQd,EAAaiB,wBAAwBL,EAAKC,OAClC,SAATT,IACPS,EAAOZ,EAAUe,eAAeJ,EAAKC,MACrCC,EAAQb,EAAUgB,wBAAwBL,EAAKC,OAG/CK,IAAKC,QAAQL,KACbC,EAAaD,EAAMM,MAAK,SAAAC,GAAC,OAAiB,IAAbA,EAAEC,WAEnC,IAAMc,EAAQb,IAAGC,SAAS,CAAEX,OAAMY,KAAMV,EAAYW,SAAU,SACxDW,EAAYd,IAAGI,iBAAiBd,GAChCe,EAAOL,IAAGM,YAAYhB,GAAM,GAClC,OAAQ,mBAAKP,MAAM,4DACdS,EAAa,mBACV,iBAAGe,KAAI,iBAAmBf,EAAWgB,OAAUC,MAAOjB,EAAWa,KAAMnB,QAAS,SAACY,GAAD,OAAOhB,EAAYgB,EAAGN,EAAWgB,SAASzB,MAAM,kBAC5H,mBACIA,MAAK,mEACLE,MAAU4B,EAAQ,0BAA0BA,EAA7B,8BAAkE,KAE/EA,GAAS,mBAAK9B,MAAM,GAAGE,MAAM,sCAAsC6B,KAG7E,mBAAK/B,MAAM,SACNsB,EADL,IACW,oBAAMtB,MAAM,uBAAZ,KAAqCS,EAAWa,QAEzD,mBACF,mBACItB,MAAK,mEACLE,OAAU4B,EAAQ,0BAA0BA,EAA7B,8BAAkE,IAA5E,mBAEHA,GAAS,mBAAK9B,MAAM,aAAaE,MAAM,sCAAsC6B,IAEnF,mBAAK/B,MAAM,QACNsB,W,GA5IKU,e,EAsJvBlD,Q,sLCtJTmD,EADLlD,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAYJkD,qBAAuB,WACnB,EAAKhD,SAAS,CAAEiD,mBAAmB,KAdpB,EAiBnBC,oBAAsB,WAClB,EAAKlD,SAAS,CAAEiD,mBAAmB,KAlBpB,EAqBnBE,eAAiB,qEAUbC,EARA,OAD8B,EAAKlD,MAA3B+C,mBAIAI,OALK,UAKwC,EAAKvD,OAAlDuD,UAAW,aALN,EAKgBC,OALhB,SAKgBA,gBAAiB,GALjC,EAMLC,EAAY,EAAKzD,MAAjByD,QACN/C,EAAiB,EAAKV,MAAMO,OAA5BG,aACMgD,GARK,EAQqB,EAAKtD,OAA/BsD,QAASC,EARJ,EAQIA,aACjB,EAAKzD,SAAS,CAAEiD,mBAAmB,IACxB,gBAAMzC,EAAa2C,eAAe,CAAEV,GAAIc,EAAQd,GAAIe,aAApD,MAA8D,uBAAzEJ,EAAW,IACmB,MAApBA,EAASM,SACf,EAAK1D,SAAS,CACVwD,QAAS,CACLG,KAAM,GACNC,OAAQ,MAEb,WACC7B,IAAG8B,eAAeP,EAAeC,EAAQd,KACrCgB,GACA,EAAKK,cAGbT,EAAS,CAAEE,UAASH,cAExB,EAAKpD,SAAS,CAAEiD,mBAAmB,IAfsC,gCAPrE,GAAO,OAxBI,EAiDnBc,UAAY,YAAe,MAEfP,EAAY,EAAKtD,MAAjBsD,SACR,EAAAA,EAAQI,QAAOI,KAAf,QAHuB,EAAZC,OAIX,EAAKjE,SAAS,CAAEwD,aArDD,EAwDnBM,SAAW,WAAM,MACoB,EAAK5D,MAA9BuD,aACR,EAAKzD,SAAS,CACVyD,oBAHS,aAxDE,EA+DnBS,mBAAqB,SAACrC,GAClB,IAAMe,EAAQf,EAAEsC,OAChBvB,EAAMwB,QAAU,KAChBC,YAAW,WACPzB,EAAM0B,KAAN,IAAiB,IAAIC,OACtB,MAlEH,EAAKrE,MAAQ,CACTsD,QAAS,CACLG,KAAM,GACNC,OAAQ,IAEZH,cAAc,EACdR,mBAAmB,GAEvB,EAAKuB,SAAW,GAVD,E,kHAuEnBrE,OAAA,WAAS,aACmFC,KAAKN,MAArF0E,EADH,EACGA,SADH,IACaC,WADb,MACmB,GADnB,MACuBC,cADvB,MACgC,EADhC,MACmCC,kBADnC,aACsDC,kBADtD,MACmE,GADnE,EACuErB,EADvE,EACuEA,QADvE,EAEgDnD,KAAKF,MAAlDsD,EAFH,EAEGA,QAASC,EAFZ,EAEYA,aAAcR,EAF1B,EAE0BA,kBAF1B,EAGiB7C,KAAKN,MAAMO,OAAzBwE,UACAxD,YAJH,MAIU,GAJV,EAKCc,EAAmBd,EAAKyD,UAAL,GAAoBpD,IAAKqD,QAAQ1D,EAAKyD,WAAW,GAAQpD,IAAKqD,QAAQ1D,EAAK2D,UAAU,GAArF,GAAkGtD,IAAKqD,QAAQ1D,EAAK4D,OAAS,IAAI,GAEpJC,EAAY7D,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,GAEhE,OACI,mBAAKrE,MAAK,OAAS2D,EAAT,WAAuBC,EAAvB,IAAiCE,GACvC,mBAAK9D,MAAM,uCACN6D,GAAc,mBACX7D,MAAK,mEACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,mCAEH/D,EAAKuB,OAAS,oBAAM9B,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAEhF,mBAAKrB,MAAM,WAAWE,MAAM,uBAExB,mBAAKF,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUuE,IAAI,mBAAkB,YAAC,IAAD,CAAM5C,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNF,KAAK,OACL0E,YAAa,YAAC,IAAD,CAAM7C,GAAG,0BAAT,yBACb8C,QAASC,YAAUpF,KAAM,gBACzBqF,QAAS1D,IAAG8B,eACZ6B,QAAS3D,IAAG8B,eACZ7C,MAAM,iBACNiD,MAAOT,EAAQG,KACfgC,IAAKnB,KAGb,mBAAK1D,MAAM,oBAAoBE,MAAM,4CACjC,iBAAGF,MAAM,6BACL8E,UAASrC,EAAQd,GACjBxB,QAASb,KAAK0D,cAK9B,mBAAKhD,MAAM,uCACP,sBAAQF,KAAK,SAASE,MAAK,YAAamC,EAAoB,UAAY,aAA7C,QAAiE4C,UAAW5C,EACnGhC,QAASb,KAAK+C,gBACjB,iBAAGrC,MAAM,4BAKzB2C,GAAgB,mBACb,mBAAK3C,MAAM,sBACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACN0C,EAAQI,QAAUJ,EAAQI,OAAOzC,KAAI,SAAA2E,GAAG,OACrC,mBAAKhF,MAAM,aACP,mBAAKwD,IAAKwB,EAAIV,YAAatE,MAAM,YAAYiF,QAAS,EAAK7B,qBAC3D,sBAAQpD,MAAM,sBACVG,QAAS,EAAK+E,YACdC,YAAWH,EAAI1D,MAClB,iBAAGtB,MAAM,iBAHV,KAG6B,YAAC,IAAD,CAAM2B,GAAG,yBAAT,iBAK7C,YAAC,IAAD,CAAQyD,OAAQ1C,EAAS2C,YAAa/F,KAAK2D,UAAWqC,OAAQhG,KAAK4C,qBAAsBqD,MAAOjG,KAAK8C,oBAAqBoD,UAAU,Q,GA5InIxD,e,EAoJVC,Q,6GC5JdlD,Y,cAEG,WAAYC,GAAO,OACf,cAAMA,IAAN,MA4CJyG,WAAa,SAAC1E,GACVA,EAAE2E,kBACF,EAAKxG,SAAS,CACVyG,OAAQ5E,EAAE6E,QAAQ,GAAGC,SAhDV,EAoDnBC,SAAW,SAAC/E,GACRA,EAAE2E,kBACF,EAAKxG,SAAS,CACVyG,YAAQtB,EACR0B,SAAS,KAxDE,EA4DnBC,UAAY,SAACjF,GAIT,GAHAA,EAAE2E,kBAEsB,EAAKtG,MAArB6G,YACU,EAAG,OACW,EAAK7G,MAAzBuG,EADS,EACTA,OAEFO,EAAInF,EAAE6E,QAAQ,GAAGC,MAHN,EACDE,UAIRG,EAAIP,EAHW,IAIf,EAAKzG,SAAS,CAAE6G,SAAS,IACzB,EAAKI,aACED,EAAIP,EANI,KAOf,EAAKzG,SAAS,CAAE6G,SAAS,IACzB,EAAKK,gBA1EF,MAESpH,EAAhB8D,cAFO,MAEE,GAFF,SAGf,EAAK1D,MAAQ,CACTiH,eAAgB,EAChBC,cAAexD,EAAO,IAAM,GAC5ByD,cAAe,GACfC,WAAY,EACZP,YAAanD,EAAO7C,QAAU,EAC9BwG,UAAW,GAAF,OAAMC,MAAM5D,EAAO7C,QAAU,GAAG0G,KAAK,GAAGtG,KAAI,SAAC6F,EAAGU,GAAJ,OAAUV,EAAIU,OATxD,E,0HAanBR,UAAA,WAAY,QAG4C9G,KAAKF,MACnDyH,EAAwC,IAJtC,EAGyBR,eACiB,EAAI,EAClDS,EALI,EAGaN,WAEM,EACvBM,EANI,EAGAb,YAGmB,IACvBa,EAAU,GAEdxH,KAAKJ,WAAL,qBACoB2H,GARDvH,KAAKN,MAAhB8D,OAQ0CgE,GADlD,EAEIN,WAAYM,EAFhB,EAGIT,eAAgBQ,EAHpB,K,EAOJV,UAAA,WAAY,QAG4C7G,KAAKF,MAAxBiH,EAHzB,EAGyBA,eAE7BS,EALI,EAGaN,WAEM,EACvBM,EAAU,IACVA,EAPI,EAGAb,YAIoB,GAE5B3G,KAAKJ,WAAL,sBAL8C,IAAnBmH,EAAuB,EAAI,IAFnC/G,KAAKN,MAAhB8D,OAQ0CgE,GADlD,EAEIN,WAAYM,EAFhB,EAGIT,eAAmC,IAAnBA,EAAuB,EAAI,EAH/C,K,EA0CJU,0BAAA,SAA0BC,GAEtB,GAAIA,EAAUlE,SAAWxD,KAAKN,MAAM8D,OAAQ,OACJkE,EAA5BlE,OAAQmE,OADwB,MACX,GADW,EAExC3H,KAAKJ,SAAS,CACVmH,eAAgB,EAChBC,cAAeW,EAAWhH,OAAS,EAAIgH,EAAW,GAAK,GACvDV,cAAe,GACfC,WAAY,EACZP,YAAagB,EAAWhH,QAAU,EAClCwG,UAAW,GAAF,OAAMC,MAAMO,EAAWhH,QAAU,GAAG0G,KAAK,GAAGtG,KAAI,SAAC6F,EAAGU,GAAJ,OAAUV,EAAIU,U,EAKnFvH,OAAA,WAAS,IAKD6H,EACAC,EANC,SACwF7H,KAAKF,MAA1FkH,EADH,EACGA,cAAeC,EADlB,EACkBA,cAAeF,EADjC,EACiCA,eAAgBJ,EADjD,EACiDA,YAAaQ,EAD9D,EAC8DA,UAAWD,EADzE,EACyEA,WACxExB,EAAM1F,KAAK,QAAQ+G,GACnBe,EAA8B,IAAnBf,EAAuBC,EAAgBC,EAIxD,GAAIa,EAASC,WAAY,OACkBD,EAASC,WAAxCC,EADa,EACbA,MAAOC,EADM,EACNA,OAAQC,EADF,EACEA,YACnBA,EAAc,GAAKA,EAAc,GACjCN,EAAYI,EACZH,EAAWI,IAEXL,EAAYK,EACZJ,EAAWG,GAGnB,IAAMG,EAAaL,EAASC,WAAaF,EAAWD,EAb7BlC,GAAOA,EAAIuC,OAASvC,EAAIsC,MAAQtC,EAAIuC,OAAS,EAAI,EAcxE,OAAItB,GAAe,EACR,GAIP,mBAAKjG,MAAM,SACP,mBAAKA,MAAM,yCACPE,MAAK,uBAAyBuH,EAAzB,wDACLC,aAAcpI,KAAKmG,WACnBkC,WAAYrI,KAAKwG,SACjB8B,YAAatI,KAAK0G,WAEjBC,EAAc,GAAK,oBAAMjG,MAAM,oBAAoBE,MAAM,uCAAsC,yBAAQsG,EAAa,EAArB,IAAyBP,IACxHK,GAAiB,mBAAKtG,MAAM,oBAAoBE,OAA6B,IAAnBmG,EAAuB,cAAiB,eAA7C,sDAClD,mBAAKwB,QAAQ,OAAOrE,IAAK8C,EAAcwB,YACnC9H,MAAM,yBACN6E,IAAK,SAAAkD,GAAC,OAAI,EAAKC,OAASD,MAG/BxB,GAAiB,mBAAKvG,MAAM,oBAAoBE,OAA6B,IAAnBmG,EAAuB,cAAiB,eAA7C,sDAClD,mBAAKwB,QAAQ,OAAOrE,IAAK+C,EAAcuB,YACnC9H,MAAM,yBACN6E,IAAK,SAAAkD,GAAC,OAAI,EAAKE,OAASF,OAInCtB,EAAUxG,OAAS,GAAK,mBAAKD,MAAM,qBAAqByG,EAAUpG,KAAI,SAAA6H,GAAC,OAAI,oBAAMhI,MAAK,WAAYgI,IAAM1B,EAAa,EAAI,UAAY,WAA/C,KAAX,W,GA5IlExE,e,8HCKpBmG,EADLpJ,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAOJqD,eAAiB,qEAUbC,EARA,OAD8B,EAAKlD,MAA3B+C,mBAIAI,OALK,UAKmD,EAAKvD,OAA7DuD,UAAW,aALN,EAKgB6F,EALhB,EAKgBA,UAAW5F,OAL3B,SAK2BA,gBAAiB,GAL5C,EAMLC,EAAY,EAAKzD,MAAjByD,QACN/C,EAAiB,EAAKV,MAAMO,OAA5BG,aACMgD,OARK,OAQY,EAAKtD,MAAtBsD,SAAU,GARL,EASb,EAAKxD,SAAS,CAAEiD,mBAAmB,IACxB,gBAAMzC,EAAa2I,oBAAoB,CAAE1G,GAAIc,EAAQd,GAAIyG,YAAW1F,aAApE,MAA8E,uBAAzFJ,EAAW,IACmB,MAApBA,EAASM,SACf,EAAK1D,SAAS,CACVwD,QAAS,KACV,WACCzB,IAAG8B,eAAeP,EAAe4F,OAErC7F,EAAS,CAAEE,UAASH,WAAU8F,eAElC,EAAKlJ,SAAS,CAAEiD,mBAAmB,IATsD,gCAPrF,GAAO,OATX,EAAK/C,MAAQ,CACT+C,mBAAmB,GAEvB,EAAKuB,SAAW,GALD,E,kHA8BnBrE,OAAA,WAAS,IACGqE,EAAapE,KAAKN,MAAlB0E,SADH,EAEkCpE,KAAKF,MAApCsD,EAFH,EAEGA,QAASP,EAFZ,EAEYA,kBAFZ,EAGiB7C,KAAKN,MAAMO,OAAzBwE,UACAxD,YAJH,MAIU,GAJV,EAKCc,EAAmBd,EAAKyD,UAAL,GAAoBpD,IAAKqD,QAAQ1D,EAAKyD,WAAW,GAAQpD,IAAKqD,QAAQ1D,EAAK2D,UAAU,GAArF,GAAkGtD,IAAKqD,QAAQ1D,EAAK4D,OAAS,IAAI,GAEpJC,EAAY7D,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,GAEhE,OACI,mBAAKrE,MAAM,SACP,mBAAKA,MAAM,uCACP,mBACIA,MAAK,mEACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,mCAEHF,GAAa,oBAAMpE,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAE/E,mBAAKrB,MAAM,WAAWE,MAAM,uBAExB,mBAAKF,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUuE,IAAI,mBAAkB,YAAC,IAAD,CAAM5C,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNF,KAAK,OACL0E,YAAa,YAAC,IAAD,CAAM7C,GAAG,0BAAT,yBACb8C,QAASC,YAAUpF,KAAM,WACzBqF,QAAS1D,IAAG8B,eACZ7C,MAAM,iBACNiD,MAAOT,EACPmC,IAAKnB,OAKrB,mBAAK1D,MAAM,uCACP,sBAAQF,KAAK,SAASE,MAAK,YAAamC,EAAoB,UAAY,aAA7C,QAAiE4C,UAAW5C,EACnGhC,QAASb,KAAK+C,gBACjB,iBAAGrC,MAAM,8B,GAxERgC,e,EAmFnBmG,O,2IClFTG,EADLvJ,Y,cAEI,WAAYC,GAAO,aAChB,cAAMA,IAAN,MAYJkD,qBAAuB,WACnB,EAAKhD,SAAS,CAAEiD,mBAAmB,KAdnB,EAiBpBC,oBAAsB,WAClB,EAAKlD,SAAS,CAAEiD,mBAAmB,KAlBnB,EAqBpBoG,aAAe,qEAUXjG,EARA,OAD8B,EAAKlD,MAA3B+C,mBAIAI,OALG,UAK0C,EAAKvD,OAAlDuD,UAAW,aALR,EAKkBC,OALlB,SAKkBA,gBAAiB,GALnC,EAMHgG,EAAU,EAAKxJ,MAAfwJ,MACNhJ,EAAe,EAAKR,MAAMO,OAA1BC,WACMkD,GARG,EAQuB,EAAKtD,OAA/BsD,QAASC,EARN,EAQMA,aACjB,EAAKzD,SAAS,CAAEiD,mBAAmB,IACxB,gBAAM3C,EAAW+I,aAAa,CAAE5G,GAAI6G,EAAM7G,GAAIe,aAA9C,MAAwD,uBAAnEJ,EAAW,IACmB,MAApBA,EAASM,SACf,EAAK1D,SAAS,CACVwD,QAAS,CACLG,KAAM,GACNC,OAAQ,MAEb,WACC7B,IAAG8B,eAAeP,EAAegG,EAAM7G,KACnCgB,GACA,EAAKK,cAGbT,EAAS,CAAEiG,QAAOlG,cAEtB,EAAKpD,SAAS,CAAEiD,mBAAmB,IAfgC,gCAP/D,GAAO,OAxBK,EAiDpBc,UAAY,YAAe,MAEfP,EAAY,EAAKtD,MAAjBsD,SACR,EAAAA,EAAQI,QAAOI,KAAf,QAHuB,EAAZC,OAIX,EAAKjE,SAAS,CAAEwD,aArDA,EAwDpBM,SAAW,WAAM,MACoB,EAAK5D,MAA9BuD,aACR,EAAKzD,SAAS,CACVyD,oBAHS,aAxDG,EA+DpBS,mBAAqB,SAACrC,GAClB,IAAMe,EAAQf,EAAEsC,OAChBvB,EAAMwB,QAAU,KAChBC,YAAW,WACPzB,EAAM0B,KAAN,IAAiB,IAAIC,OACtB,MAlEH,EAAKrE,MAAQ,CACTsD,QAAS,CACLG,KAAM,GACNC,OAAQ,IAEZH,cAAc,EACdR,mBAAmB,GAEvB,EAAKuB,SAAW,GAVA,E,kHAuEpBrE,OAAA,WAAS,aACuBC,KAAKN,MAAzB0E,EADH,EACGA,SAAU8E,EADb,EACaA,MADb,EAEgDlJ,KAAKF,MAAlDsD,EAFH,EAEGA,QAASC,EAFZ,EAEYA,aAAcR,EAF1B,EAE0BA,kBAF1B,EAGiB7C,KAAKN,MAAMO,OAAzBwE,UACAxD,YAJH,MAIU,GAJV,EAKCc,EAAmBJ,IAAGI,iBAAiBd,GAEvC6D,GADcnD,IAAGM,YAAYhB,GACjBA,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,IAEhE,OACI,uBACI,mBAAKrE,MAAM,uCACP,mBACIA,MAAK,mEACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,mCAEH/D,EAAKuB,OAAS,oBAAM9B,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAEhF,mBAAKrB,MAAM,WAAWE,MAAM,uBAExB,mBAAKF,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUuE,IAAI,mBAAkB,YAAC,IAAD,CAAM5C,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNF,KAAK,OACL0E,YAAa,YAAC,IAAD,CAAM7C,GAAG,0BAAT,yBACb8C,QAASC,YAAUpF,KAAM,gBACzBqF,QAAS1D,IAAG8B,eACZ6B,QAAS3D,IAAG8B,eACZ7C,MAAM,iBACNiD,MAAOT,EAAQG,KACfgC,IAAKnB,KAIb,mBAAK1D,MAAM,oBAAoBE,MAAM,4CACjC,iBAAGF,MAAM,6BACL8E,UAAS0D,EAAM7G,GACfxB,QAASb,KAAK0D,cAK9B,mBAAKhD,MAAM,uCACP,sBAAQF,KAAK,SAASE,MAAK,YAAamC,EAAoB,UAAY,aAA7C,QAAiE4C,UAAW5C,EACnGhC,QAASb,KAAKiJ,cACjB,iBAAGvI,MAAM,4BAMzB2C,GAAgB,mBACb,mBAAK3C,MAAM,sBACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACNY,IAAKC,QAAQ6B,EAAQI,SAAWJ,EAAQI,OAAOzC,KAAI,SAAA2E,GAAG,OACnD,mBAAKhF,MAAM,aACP,mBAAKwD,IAAKwB,EAAIV,YAAatE,MAAM,YAAYiF,QAAS,EAAK7B,qBAC3D,sBAAQpD,MAAM,sBACVG,QAAS,EAAK+E,YACdC,YAAWH,EAAI1D,MAClB,iBAAGtB,MAAM,iBAHV,IAG4B,YAAC,IAAD,CAAM2B,GAAG,yBAAT,iBAK5C,YAAC,IAAD,CAAQyD,OAAQ1C,EAAS2C,YAAa/F,KAAK2D,UAAWqC,OAAQhG,KAAK4C,qBAAsBqD,MAAOjG,KAAK8C,oBAAqBoD,UAAU,Q,GA9IrIxD,e,EAsJRsG,Q,6JCvJTG,EADL1J,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAOJuJ,aAAe,qEAUXjG,EARA,OAD8B,EAAKlD,MAA3B+C,mBAIAI,OALG,UAKqD,EAAKvD,OAA7DuD,UAAW,aALR,EAKkB6F,EALlB,EAKkBA,UAAW5F,OAL7B,SAK6BA,gBAAiB,GAL9C,EAMHgG,EAAU,EAAKxJ,MAAfwJ,MACNhJ,EAAe,EAAKR,MAAMO,OAA1BC,WACMkD,OARG,OAQc,EAAKtD,MAAtBsD,SAAU,GARP,EASX,EAAKxD,SAAS,CAAEiD,mBAAmB,IACxB,gBAAM3C,EAAWkJ,kBAAkB,CAAE/G,GAAI6G,EAAM7G,GAAIyG,YAAW1F,aAA9D,MAAwE,uBAAnFJ,EAAW,IACmB,MAApBA,EAASM,SACf,EAAK1D,SAAS,CACVwD,QAAS,KACV,WACCzB,IAAG8B,eAAeP,EAAe4F,OAErC7F,EAAS,CAAEiG,QAAOlG,WAAU8F,eAEhC,EAAKlJ,SAAS,CAAEiD,mBAAmB,IATgD,gCAP/E,GAAO,OATX,EAAK/C,MAAQ,CACT+C,mBAAmB,GAEvB,EAAKuB,SAAW,GALD,E,0HA8BnBiF,kBAAA,WAAoB,MACgBrJ,KAAKN,MAA7B4J,eADQ,MACG,aADH,M,EAKpBvJ,OAAA,WAAS,IACGqE,EAAapE,KAAKN,MAAlB0E,SADH,EAEkCpE,KAAKF,MAApCsD,EAFH,EAEGA,QAASP,EAFZ,EAEYA,kBAFZ,EAGiB7C,KAAKN,MAAMO,OAAzBwE,UACAxD,YAJH,MAIU,GAJV,EAKCc,EAAmBJ,IAAGI,iBAAiBd,GAEvC6D,GADcnD,IAAGM,YAAYhB,GACjBA,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,IAEhE,OACI,mBAAKrE,MAAM,SACP,mBAAKA,MAAM,uCACP,mBACIA,MAAK,mEACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,mCAEHF,GAAa,oBAAMpE,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAE/E,mBAAKrB,MAAM,WAAWE,MAAM,uBAExB,mBAAKF,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUuE,IAAI,mBAAkB,YAAC,IAAD,CAAM5C,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNF,KAAK,OACL0E,YAAa,YAAC,IAAD,CAAM7C,GAAG,0BAAT,yBACb8C,QAASC,YAAUpF,KAAM,WACzBqF,QAAS1D,IAAG8B,eACZ7C,MAAM,iBACNiD,MAAOT,EACPmC,IAAKnB,OAKrB,mBAAK1D,MAAM,uCACP,sBAAQF,KAAK,SAASE,MAAK,YAAamC,EAAoB,UAAY,aAA7C,QAAiE4C,UAAW5C,EACnGhC,QAASb,KAAKiJ,cACjB,iBAAGvI,MAAM,8B,GA7EVgC,e,EAwFjByG,O,iDC3Ff,SAASI,EAAgBC,GACxB,OACQlI,IAAKmI,OAAOD,EADhBA,EAAW,EACe,EAGA,G,0CAUzBE,G,oBADLjK,Y,kLAEGM,OAAA,WAAS,MACsBC,KAAKN,MAD3B,IACHmE,aADG,MACK,EADL,EACQ8F,EADR,EACQA,UADR,EAEW3J,KAAKN,MAAMO,OAAzBwE,UACAxD,KACA2I,SAEF,YANK,MAIQ,GAJR,GAMQC,SACD,mBACJ,wBACVN,EAfN,SAAmB1F,GACf,MAAO,QAAWA,EAcAiG,CAAUjG,IADhB,IAC0B8F,EAAY,mBAAE,yBAAO,yBAAO,qBAAOjJ,MAAM,mBAAb,SAA+D,2BAK3H,mBACP,wBACW6I,EAAgB1F,GAD3B,IACoC8F,EAAY,mBAAE,yBAAO,yBAAO,qBAAOjJ,MAAM,mBAAb,SAA+D,4B,GAjB3GgC,e,GAuBRgH,Q,8fCnCTnK,EAAe,CACjB8D,cAAc,EACd0G,gBAAgB,EAChBC,sBAAsB,EACtBC,gBAAgB,EAChBpH,mBAAmB,GAIjBmG,EADLvJ,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAuBJkD,qBAAuB,WACnB,EAAKhD,SAAS,CAAEiD,mBAAmB,KAzBpB,EA4BnBC,oBAAsB,WAClB,EAAKlD,SAAS,CAAEiD,mBAAmB,KA7BpB,EAgCnBqH,SAAW,2EAcH3G,EAQJP,EAjBA,OAJQkG,OADD,UACiD,EAAKpJ,OAArDoJ,OAAQ,GADT,EACa7F,EADb,EACaA,aACZJ,OAFD,UAE+E,EAAKvD,OAAnFuD,UAAW,aAFZ,EAEsBkH,OAFtB,SAEsBA,UAAW,GAFjC,EAEqCC,EAFrC,EAEqCA,QAASC,OAF9C,SAE8CA,OAF9C,QAE8DnB,EAAMrH,KAFpE,EAGL3B,EAAe,EAAKR,MAAMO,OAA1BC,WAHK,EAC2B2C,mBAQ7BqG,EAAM3F,MAGX,EAAK3D,SAAS,CAAEiD,mBAAmB,IAE/BU,EAAO2F,EAAM3F,KACb6G,IACA7G,GAAQ,OAAO6G,GAEfD,GAAYA,EAASxJ,OAAS,IAC9B4C,GAAQ,OAAO4G,EAASpJ,KAAI,SAAAuJ,GAAG,UAAQA,KAAOC,KAAK,MAG5C,gBAAMrK,EAAWsK,OAAO,CAC/BhK,KAAM0I,EAAM1I,KACZ4B,MAAO8G,EAAM9G,MACbmB,OACAkH,OAAQvB,EAAMuB,OACdjH,OAAQ0F,EAAM1F,OACd9B,OAAQwH,EAAMxH,OAAS,EAAI,EAC3BG,KAAMqH,EAAMrH,KACZ6I,QAASxB,EAAMwB,QACfC,IAAKzB,EAAMyB,IACXC,SAAU1B,EAAM0B,SAChBC,MAAO3B,EAAM2B,MACbC,KAAM5B,EAAM4B,KACZC,QAAS7B,EAAM6B,QACfC,OAAQ9B,EAAM8B,OACdC,UAAW/B,EAAM+B,UACjBC,QAAShC,EAAMgC,QACfb,WAjBO,KAkBT,gBACR,IAnBMrH,EAAW,IAmBmB,MAApBA,EAASM,OACf,uBAAMpD,EAAWiL,eAAe,CAAEC,SAAUjB,KAA5C,KAAuD,sBACvD,EAAKvK,SAAS,CACVsJ,MAAO,CACH1I,KAAM,EACN4B,MAAO,GACPmB,KAAM,GACNkH,OAAQ,KACRjH,OAAQ,GACR9B,OAAQ,EACRgJ,QAAS,GACTC,IAAK,GACLC,SAAU,GACVC,MAAO,KACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,KACXC,QAAS,QAEd,WACCvJ,IAAG8B,eAAe,EAAKW,SAAL,cACdf,GACA,EAAKK,cAGbT,EAASD,EAASqI,MAzBqC,kDAFzD,oBA6BF,EAAKzL,SAAS,CAAEiD,mBAAmB,IA7BjC,8DAlCE,GAAO,OAtCI,EAwGnBc,UAAY,YAAe,MAEfuF,EAAU,EAAKpJ,MAAfoJ,OACR,EAAAA,EAAM1F,QAAOI,KAAb,QAHuB,EAAZC,OAIX,EAAKjE,SAAS,CAAEsJ,WA5GD,EA+GnBxF,SAAW,WAEP,EAAK9D,SAAS,CACVyD,cAFqB,EAAKvD,MAAtBuD,gBAhHO,EAsHnBiI,iBAAmB,WAEf,EAAK1L,SAAS,CACVoK,sBAF6B,EAAKlK,MAA9BkK,wBAvHO,EA6HnBuB,aAAe,WAEX,EAAK3L,SAAS,CACVoK,sBAF6B,EAAKlK,MAA9BkK,wBA9HO,EAoInBwB,WAAa,WAET,EAAK5L,SAAS,CACVqK,gBAFuB,EAAKnK,MAAxBmK,kBArIO,EA2InBwB,iBAAmB,WAEf,EAAK7L,SAAS,CACVmK,gBAFuB,EAAKjK,MAAxBiK,kBA5IO,EAkJnBjG,mBAAqB,SAACrC,GAClB,IAAMe,EAAQf,EAAEsC,OAChBvB,EAAMwB,QAAU,KAChBC,YAAW,WACPzB,EAAM0B,KAAN,IAAiB,IAAIC,OACtB,MAvJY,EA0JnBuH,cAAgB,WAAM,IAEZC,EADgB,EAAKjM,MAAMO,OAAzBwE,UACsBmH,kBAC9B,GAAItK,IAAKC,QAAQoK,IAAgBA,EAAYhL,OAAS,EAAG,KAC7CuI,EAAU,EAAKpJ,MAAfoJ,MACRA,EAAMrH,KAAO8J,EAAY,GAAGtJ,GAC5B,EAAKzC,SAAS,CAAEsJ,YAhKL,EAoKnB2C,SAAW,SAACpK,GACR,EAAK7B,SAAS,CAAEkM,UAAU,IAC1BnK,IAAG8B,eAAehC,EAAEsC,SAtKL,EAyKnBgI,YAAc,WACV,EAAKnM,SAAS,CAAEkM,UAAU,KAxK1B,EAAKhM,M,+VAAL,EACIoJ,MAAO,CACH1I,KAAM,EACN4B,MAAO,GACPmB,KAAM,GACNC,OAAQ,GACR9B,OAAQ,EACRgJ,QAAS,GACTC,IAAK,GACLC,SAAU,GACVC,MAAO,EACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,GACXC,QAAS,KAEV3L,GAEP,EAAK6E,SAAW,GArBD,E,0HA6KnBiF,kBAAA,WACIrJ,KAAK0L,iB,EAGT3L,OAAA,WAAS,aAC2CC,KAAKN,MADhD,IACG2E,WADH,MACS,GADT,MACaC,cADb,MACsB,EADtB,MACyB6F,gBADzB,MACoC,GADpC,IAEmHnK,KAAKF,MAFxH,IAEGoJ,aAFH,MAEW,GAFX,EAEe7F,EAFf,EAEeA,aAAc0G,EAF7B,EAE6BA,eAAgBC,EAF7C,EAE6CA,qBAAsBC,EAFnE,EAEmEA,eAAgBpH,EAFnF,EAEmFA,kBAAmBiJ,EAFtG,EAEsGA,SAFtG,EAG2B9L,KAAKN,MAAMO,OAAnCwE,EAHH,EAGGA,UAAWuH,EAHd,EAGcA,SAHd,EAI0BvH,EAAvBxD,YAJH,MAIU,GAJV,EAIcgL,EAAYxH,EAAZwH,QAEblK,EAAmBd,EAAKyD,UAAL,GAAoBpD,IAAKqD,QAAQ1D,EAAKyD,WAAW,GAAQpD,IAAKqD,QAAQ1D,EAAK2D,UAAU,GAArF,GAAkGtD,IAAKqD,QAAQ1D,EAAK4D,OAAS,IAAI,GAEtJC,EAAY7D,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,GAC9D,GAAImE,EAAMrH,KAAM,CACZ,IAAMqK,EAASC,SAASjD,EAAMrH,KAAM,IAC9BA,EAAO4C,EAAU2H,SAASF,GAAQ,GACxCpH,EAAYjD,EAAKW,QAAUX,EAAK2B,OAAS3B,EAAK2B,OAAO,QAAKuB,GAZzD,IAcGsH,EAAaL,EAAbK,SAER,OACI,mBAAK3L,MAAM,cACP,mBAAKA,MAAM,OAEP,mBAAKA,MAAK,OAAS2D,EAAT,WAAuBC,EAAvB,+EAA2G+H,EAAW,QAAU,SAAhI,mBACN,mBAAK3L,MAAM,uCACP,mBAAKA,MAAM,qBACP,mBACIA,MAAK,iFACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,iCACLnE,QAASb,KAAKyL,mBAEZ3G,GAAa,oBAAMpE,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAE/E,mBAAKrB,MAAM,oBAAoBE,MAAM,0BACjC,qBAAOF,MAAM,aAAaE,MAAM,qBAC5B,iBAAGF,MAAM,kCAAkCG,QAASb,KAAKyL,sBAIrE,mBAAK/K,MAAM,gBAAgBE,MAAM,uBAC7B,mBAAKF,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUuE,IAAI,mBAAkB,YAAC,IAAD,CAAM5C,GAAG,cAAT,UAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNF,KAAK,OACL0E,YAAa,YAAC,IAAD,CAAM7C,GAAG,oBAAT,uBACb8C,QAASC,YAAUpF,KAAM,cACzBqF,QAAS1D,IAAG8B,eACZ6B,QAAStF,KAAK6L,SACdjL,MAAM,iBACNiD,MAAOqF,EAAM3F,KACbgC,IAAK,SAAAkD,GAAC,OAAI,EAAKrE,SAAL,aAAgCqE,MAGjDqD,GAAY,mBAAKpL,MAAM,oBAAoBE,MAAM,+CAC9C,iBAAGF,MAAM,6BACL8E,UAAS0D,EAAM7G,GACfxB,QAASb,KAAK0D,WAElB,iBAAGhD,MAAK,WAA6B,IAAjBwI,EAAMxH,OAAe,eAAiB,SAAlD,sBACJ8D,UAAS0D,EAAM7G,GACfxB,QAASb,KAAKsL,mBAEjBW,GAAW,iBAAGvL,MAAK,gCAChB8E,UAAS0D,EAAM7G,GACfxB,QAASb,KAAKwL,eAIzBrB,GAAYA,EAASxJ,OAAS,GAAK,mBAC/BwJ,EAASpJ,KAAI,SAAAuJ,GAAG,OAAI,mBACjB,oBAAM5J,MAAM,mCACR,iBAAGwB,KAAI,gBAAkBoI,EAAO5J,MAAM,cAAtC,IAAqD4J,UAKrE,mBAAK5J,MAAM,+CACP,sBAAQF,KAAK,SAASE,MAAK,YAAamC,EAAoB,UAAY,aAA7C,QAAiE4C,UAAW5C,EACnGhC,QAASb,KAAKkK,UACjB,iBAAGxJ,MAAM,4BAK1B,uBACI,mBAAKA,MAAM,OACNqJ,GAAkB,mBACf,mBAAKrJ,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACN2B,GAAG,OACH8C,QAASC,YAAUpF,KAAM,cACzBsM,SAAUtM,KAAKyL,kBAEf,sBAAQ5H,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMxB,GAAG,qBAAT,aAApB,OACCf,IAAKC,QAAQN,EAAKC,QAAUD,EAAKC,MAAMH,KAAI,SAACmL,GACzC,IAAMrK,EAAO4C,EAAU2H,SAASF,GAAQ,GACxC,OAAIrK,GAAQA,EAAKH,OACL,sBAAQmC,MAAOhC,EAAKQ,GAAIkK,SAAUrD,EAAMrH,MAAQA,EAAKQ,GAAK,WAAa,IAAKR,EAAKG,MAEtF,OAGTf,EAAKC,OAAS,mBACZ,sBAAQ2C,MAAM,IAAd,yBAOvBmG,GAAwB,mBACpBiC,GAAW,mBACR,mBAAKvL,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,qBAAOuE,IAAI,UAAX,kBAA0C,qBAAO5C,GAAG,SAAS7B,KAAK,WAAW2E,QAASC,YAAUpF,KAAM,gBAAiB6D,MAAO,EAAG2I,QAAStD,EAAMuB,OAAS,EAAI,QAM7K,mBAAK/J,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACN2B,GAAG,OACH8C,QAASC,YAAUpF,KAAM,gBACzB6D,MAAOqF,EAAMxH,OACb4K,SAAUtM,KAAKsL,kBAEf,sBAAQzH,MAAO,EAAG0I,SAA0B,GAAhBrD,EAAMxH,OAAc,WAAa,IAA7D,MAAoE,YAAC,IAAD,CAAMW,GAAG,8BAAT,sCACpE,sBAAQwB,MAAO,EAAG0I,SAA0B,GAAhBrD,EAAMxH,OAAc,WAAa,IAA7D,MAAoE,YAAC,IAAD,CAAMW,GAAG,2BAAT,2CAMvF4H,GAAkB,mBACf,mBAAKvJ,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACN2B,GAAG,OACH8C,QAASC,YAAUpF,KAAM,cACzB6D,MAAOqF,EAAM1I,KACb8L,SAAUtM,KAAKwL,YAEnB,sBAAQ3H,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMxB,GAAG,qBAAT,aAApB,OACI,sBAAQwB,MAAO,EAAG0I,SAAwB,GAAdrD,EAAM1I,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAM6B,GAAG,sBAAT,WAClE,sBAAQwB,MAAO,EAAG0I,SAAwB,GAAdrD,EAAM1I,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAM6B,GAAG,iBAAT,YAClE,sBAAQwB,MAAO,EAAG0I,SAAwB,GAAdrD,EAAM1I,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAM6B,GAAG,sBAAT,kBAMrFgB,GAAgB,mBACb,mBAAK3C,MAAM,2BACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACNY,IAAKC,QAAQ2H,EAAM1F,SAAW0F,EAAM1F,OAAOzC,KAAI,SAAA2E,GAAG,OAC/C,mBAAKhF,MAAM,aACP,mBAAKwD,IAAKwB,EAAIV,YAAatE,MAAM,YAAYiF,QAAS,EAAK7B,qBAC3D,sBAAQpD,MAAM,sBACVG,QAAS,EAAK+E,YACdC,YAAWH,EAAI1D,MAClB,iBAAGtB,MAAM,iBAHV,cAQhB,YAAC,IAAD,CAAQoF,OAAQoD,EAAOnD,YAAa/F,KAAK2D,UAAWqC,OAAQhG,KAAK4C,qBAAsBqD,MAAOjG,KAAK8C,oBAAqBoD,UAAU,MAIzIgD,EAAM1I,KAAO,GAAK,mBACf,mBAAKE,MAAM,eACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,kBAAT,aACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,UACLmD,QAASC,YAAUpF,KAAM,iBACzB6D,MAAOqF,EAAMwB,aAM7B,mBAAKhK,MAAM,eACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,aAAT,QACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,MACLmD,QAASC,YAAUpF,KAAM,aACzB6D,MAAOqF,EAAMyB,UAOlB,GAAdzB,EAAM1I,MAAa,mBAChB,mBAAKE,MAAM,eACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,cAAT,SACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,OACLmD,QAASC,YAAUpF,KAAM,cACzB6D,MAAOqF,EAAM4B,UAM7B,mBAAKpK,MAAM,UACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,gBAAT,WACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,SACLmD,QAASC,YAAUpF,KAAM,gBACzB6D,MAAOqF,EAAM8B,YAM7B,mBAAKtK,MAAM,UACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,iBAAT,YACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,UACLmD,QAASC,YAAUpF,KAAM,iBACzB6D,MAAOqF,EAAM6B,aAM7B,mBAAKrK,MAAM,SACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,kBAAT,aACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,WACLmD,QAASC,YAAUpF,KAAM,kBACzB6D,MAAOqF,EAAM0B,cAM7B,mBAAKlK,MAAM,SACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,eAAT,UACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,QACLmD,QAASC,YAAUpF,KAAM,eACzB6D,MAAOqF,EAAM2B,kB,GA7c1CnI,e,EA4dRsG,Q,0dCxeTzJ,G,UAAe,IAGfkN,EADLhN,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MACKI,M,+VAAL,IACOP,GAEb,EAAK6E,SAAW,GALK,E,0HAQbsI,sBAAN,SAA4BhN,GAA5B,iCAGF,YAHE,IAA4BA,MAAQM,KAAKN,OAG3C,gBAFuBA,EAAMO,OAArBC,WAESiL,eAAe,CAAEjC,MADVxJ,EAAVwJ,SACd,MAA0C,sDAHxC,a,EAMHG,kBAAA,WACOrJ,KAAK0M,yB,EAGTjF,0BAAA,SAA0BC,GAElBA,EAAUwB,QAAUlJ,KAAKN,MAAMwJ,OAC/BlJ,KAAK0M,sBAAsBhF,I,EAInC3H,OAAA,WAAS,aAC4BC,KAAKN,MAAMO,OACpC0M,EAFH,EACGzM,WACAyM,WACAN,EAHH,EACeL,SAEZK,SAER,OACI,mBAAK3L,MAAM,SAEP,mBAAKA,MAAM,qBACP,mBAAKA,MAAK,uGAAwG2L,EAAW,QAAU,SAA7H,eACJM,GAAoC,IAAtBA,EAAWhM,QAAgB,mBACvC,mBAAKD,MAAM,+BACP,mBAAKA,MAAM,8BACP,iBAAGA,MAAM,oBAEb,2CAGPiM,GAAcA,EAAW5L,KAAI,SAACmI,GAAD,OAAW,mBACrC,YAAC,IAAD,CACIjJ,OAAQ,EAAKP,MAAMO,OACnBiJ,MAAOA,EACP0D,iBAAiB,Y,GAhDnBlK,e,EA0Df+J,Q,44BCvDTlN,EAAe,CACjBsN,eAAgB,GAChBD,iBAAiB,EACjBE,eAAgB,GAChBC,aAAc,GACdC,YAAa,GACbC,UAAW,GACXC,aAAc,IAMZC,EADL1N,Y,cAEI,WAAYC,GAAO,aAChB,cAAMA,IAAN,MAQJ0N,eAAiB,SAAO3L,GAAP,0CAEPqH,EAFO,MAeb9F,EAAW,OAdHC,OADK,OACmB,EAAKvD,MAA7BuD,UAAW,aADN,EAEP6F,EAAYrH,EAAEsC,OAAOsJ,QAAQ,qBAAqBC,QAAQjL,GACxD6G,EAAU,EAAKxJ,MAAfwJ,MACNhJ,EAAe,EAAKR,MAAMO,OAA1BC,YAEM8M,EAAgB,EAAKlN,MAArBkN,aACIlE,IAAa,EACzB,EAAKlJ,SAAS,CAAEoN,gBAChB/I,YAAW,WAAM,IACL+I,EAAgB,EAAKlN,MAArBkN,mBACDA,EAAYlE,GACnB,EAAKlJ,SAAS,CAAEoN,kBACjB,MAEQ,gBAAM9M,EAAWqN,iBAAiB,CAAElL,GAAI6G,EAAM7G,GAAIyG,eAAlD,MAA8D,gBAIzE,OAJA9F,EAAW,IACmB,MAApBA,EAASM,QACfL,EAAS,CAAEzC,KAAM,cAAe0I,QAAOJ,YAAW9F,aAEtD,GAAO,GAJkE,+BAxBzD,EA+BpBiK,UAAY,SAAOxL,GAAP,0CAEF+L,EACA1E,EAHE,MAgBR9F,EAAW,OAfHC,OADA,OACwB,EAAKvD,MAA7BuD,UAAW,aADX,EAEFuK,EAAU/L,EAAEsC,OAAOsJ,QAAQ,mBAAmBC,QAAQjL,GACtDyG,EAAYrH,EAAEsC,OAAOsJ,QAAQ,mBAAmBC,QAAQlK,QACtD8F,EAAU,EAAKxJ,MAAfwJ,MACNhJ,EAAe,EAAKR,MAAMO,OAA1BC,YAEM+M,EAAc,EAAKnN,MAAnBmN,WACEO,IAAW,EACrB,EAAK5N,SAAS,CAAEqN,cAChBhJ,YAAW,WAAM,IACLgJ,EAAc,EAAKnN,MAAnBmN,iBACDA,EAAUO,GACjB,EAAK5N,SAAS,CAAEqN,gBACjB,MAEQ,gBAAM/M,EAAWuN,sBAAsB,CAAEpL,GAAI6G,EAAM7G,GAAImL,UAAS1E,eAAhE,MAA4E,uBAAvF9F,EAAW,IACyB,MAApBA,EAASM,QACrBL,EAAS,CAAEzC,KAAM,YAAa0I,QAAOJ,YAAW0E,UAASxK,aAF0B,mCA/CvE,EAqDpB0K,aAAe,SAAOjM,GAAP,gCACX,IAAMqH,EAAYrH,EAAEsC,OAAO4J,cAAcL,QAAQjL,IAAMZ,EAAEsC,OAAOuJ,QAAQjL,GAEhEwK,EAAmB,EAAK/M,MAAxB+M,eAHG,OAIXA,EAAe/D,IAAc+D,EAAe/D,GAClD,EAAKlJ,SAAS,CACbiN,mBACE,WACW,EAAKzI,SAAS0E,IACd,EAAK1E,SAAS0E,GAAW8E,WATtB,QArDK,EAmEpBC,eAAiB,WAEnB,EAAKjO,SAAS,CACbgN,iBAF2B,EAAK9M,MAAzB8M,mBApEc,EA0EpBkB,cAAgB,SAACrM,GACb,IAAMqH,EAAYrH,EAAEsC,OAAO4J,cAAcL,QAAQjL,IAAMZ,EAAEsC,OAAOuJ,QAAQjL,GACtEyK,EAAmB,EAAKhN,MAAxBgN,eACFA,EAAehE,IAAcgE,EAAehE,GAClD,EAAKlJ,SAAS,CACbkN,oBA/EqB,EAmFpBiB,WAAa,SAACtM,GAAM,IACRY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,KAAKC,QAA7BjL,GADQ,EAEI,EAAKvC,MAAvBkO,gBAFc,MAEH,GAFG,EAGhBA,EAAS3L,IAAO2L,EAAS3L,GAC/B,EAAKzC,SAAS,CACJqO,kBAAmB,GACnBC,SAAU,GACnBF,cA1FqB,EA8FpBG,WAAa,SAAC1M,GAAM,MACyBA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAA5DjL,EADQ,EACRA,GAAa+L,EADL,EACJhL,QADI,EAEI,EAAKtD,MAAvBoO,gBAFc,MAEH,GAFG,EAGhBA,EAAS7L,IAAO6L,EAAS7L,GAC/B,EAAKzC,SAAS,CACJqO,kBAAmB,GAC5BC,WACSF,SAAU,GACVI,qBAtGY,EA0GpBC,oBAAsB,SAAC5M,GAAM,IACjBY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlCjL,GADiB,EAEI,EAAKvC,MAAhCmO,yBAFuB,MAEH,GAFG,EAGzBA,EAAkB5L,IAAO4L,EAAkB5L,GACjD,EAAKzC,SAAS,CACbqO,oBACSC,SAAU,GACVF,SAAU,MAjHE,EAqHpBM,cAAgB,SAAO7M,GAAP,wCAIZ,OAHYqH,EAAcrH,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAA7CjL,GAGR,gBADuB,EAAK3C,MAAMO,OAA1BC,WACSqO,mBAAmB,CAAElM,GAFpB,EAAK3C,MAAfwJ,MAEwC7G,GAAIyG,eAApD,MAAgE,sBAChE,EAAKlJ,SAAS,CACVwO,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,KALkD,mCAzHhD,EAkIpBQ,mBAAqB,SAAO/M,GAAP,wCAIjB,OAJiB,EAC6BA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAGzE,gBADuB,EAAK5N,MAAMO,OAA1BC,WACSuO,wBAAwB,CAAEpM,GAFzB,EAAK3C,MAAfwJ,MAE6C7G,GAAIyG,UAJxC,EACI4F,UAG+ClB,QAJnD,EACTnL,MAGR,MAA8E,sBAC9E,EAAKzC,SAAS,CACVwO,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,KALgE,mCAtI9D,EAgJpBW,YAAc,SAAOlN,GAAP,wCAKV,OAJYqH,EAAcrH,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAA7CjL,GAIR,gBADuB,EAAK3C,MAAMO,OAA1BC,WACS0O,iBAAiB,CAAEvM,GAFlB,EAAK3C,MAAfwJ,MAEsC7G,GAAIyG,YAAW1F,QAHxB,EAAKtD,MAAlCsO,mBAGR,MAAuE,sBACvE,EAAKxO,SAAS,CACVwO,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,KALyD,mCArJvD,EA8JpBa,iBAAmB,SAAOpN,GAAP,wCAKf,OALe,EAC+BA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAIzE,gBADuB,EAAK5N,MAAMO,OAA1BC,WACS4O,sBAAsB,CAAEzM,GAFvB,EAAK3C,MAAfwJ,MAE2C7G,GAAIyG,UALxC,EACM4F,UAI6ClB,QALnD,EACPnL,GAImEe,QAHtC,EAAKtD,MAAlCsO,mBAGR,MAAqF,sBACrF,EAAKxO,SAAS,CACVwO,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,KALuE,mCAnKrE,EA4KpBe,UAAY,SAACtN,GAAM,MACDA,EAAEsC,OAAOsJ,QAAQ,OAAOC,QAC9BP,EAAiB,EAAKjN,MAAtBiN,aACRA,EAHe,EACb1K,IADa,EACT2M,IAGN,EAAKpP,SAAS,CAAEmN,kBAhLA,EAmLpBkC,UAAY,SAAOxN,GAAP,sDAeR,EAAK7B,SAAS,CAAEsN,eAAcgC,mBAftB,gCAQFC,EAEN,OATA1N,EAAE2N,iBACF3N,EAAE2E,kBAFM,EAGuB3E,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAClDpE,EAAU,EAAKxJ,MAAfwJ,MACWhJ,GALX,EAK0B,EAAKR,MAAMO,QAA1BC,WACXe,EANA,EAKAwD,UACAxD,KACmBiO,OAPnB,UAO2C,EAAKpP,OAA7BoP,gBAAiB,GAPpC,GAOAhC,OAPA,SAOAA,cAAe,GAPf,GAQFiC,GALWT,EAHT,EAGSA,aAATW,EAHA,EAGAA,SAK6B,IAAIA,EAAW,KAChC,EAChBA,EACsB,gBAAMnP,EAAWoP,sBAAsB,CAAEZ,YAAWW,UAASnG,QAAOjI,UAApE,KAA2E,uBAAjGiO,EAAeC,GAAO,EAA2E,kDAE3E,gBAAMjP,EAAWqP,iBAAiB,CAAEb,YAAWxF,QAAOjI,UAAtD,KAA6D,uBAAnFiO,EAAeC,GAAO,EAA6D,sDAhMvE,EAqMpBjC,aAAe,SAACzL,GAAM,MACaA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlD+B,EADU,EACVA,QAASX,EADC,EACDA,UACjBjN,EAAE2N,iBACF3N,EAAE2E,kBAHgB,MAIY,EAAKtG,MAA3BoN,oBAJU,MAIK,GAJL,EAKlBA,EAAgBwB,GAAYW,EAAU,IAAIA,EAAW,KAAQ,EAC7D,EAAKzP,SAAS,CAAEsN,kBAzMhB,EAAKpN,MAAL,OACOP,GADP,IAEIqN,gBAAiBlN,EAAMkN,kBAE3B,EAAKxI,SAAW,GANA,E,kHA8MpBrE,OAAA,WAAS,IAWDyP,EAXC,SAEgGxP,KAAKF,MADlG+M,EADH,EACGA,eAAgBD,EADnB,EACmBA,gBAAiBE,EADpC,EACoCA,eAAgBC,EADpD,EACoDA,aADpD,IACkEiB,gBADlE,MAC6E,GAD7E,MACiFE,gBADjF,MAC4F,GAD5F,MAEDD,yBAFC,MAEmB,GAFnB,EAEuBG,EAFvB,EAEuBA,gBAAiBpB,EAFxC,EAEwCA,YAFxC,IAEqDE,oBAFrD,MAEoE,GAFpE,MAEwEgC,sBAFxE,MAEyF,GAFzF,IAGkElP,KAAKN,MAA1EwJ,EAHG,EAGHA,MAHG,IAGIjG,gBAHJ,MAGe,aAHf,MAGyBqG,gBAHzB,MAGoC,aAHpC,MAG8CmG,QAH9C,EAI6BzP,KAAKN,MAAMO,OAArCwE,EAJH,EAIGA,UAAWvE,EAJd,EAIcA,WACLwP,EAAyBjL,EAA/BxD,KALH,EAMuByO,EAApBC,gBANH,MAMc,KANd,EAQDC,EAAmB,GACnBC,EAAgB,EAChBC,EAAmB,EAcvB,OAZI5G,EAAM3I,WACNsP,EAAgB3G,EAAM3I,SAASI,OAC3BiM,EACAgD,EAAmB1G,EAAM3I,UAGzBiP,OAlBH,SAkB4B,EApOpB,EAqOLI,EAAmB1G,EAAM3I,SAASO,MAAMiP,KAAKC,IAAIH,EAAgBL,EAAc,KAEnFM,EAAmBF,EAAiBjP,QAIpC,uBACKuI,GAAS5H,IAAKC,QAAQqO,IAAqBA,EAAiBK,UAAUlP,KAAI,SAACqC,GAAY,MAC9DA,EAAdnC,YAD4E,MACrE,GADqE,EAE9EC,EAAQhB,EAAWmB,wBAAwBJ,EAAKoB,IAChDN,EAAmBJ,IAAGI,iBAAiBd,GACvCgB,EAAcN,IAAGM,YAAYhB,GAC7B6D,EAAY7D,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,GAC1DmL,EAAkB9M,EAAQ9C,OAAS8C,EAAQ9C,MAAM6P,WAAU,SAAA1O,GAAC,OAAIA,EAAER,OAASyO,EAAYrN,OAAO,EAEhG+N,EAAmB,GACnBC,EAAe,EACfC,EAAkB,EAClBlN,EAAQ7C,WACR8P,EAAejN,EAAQ7C,SAASI,OAMhC2P,GAJIF,EADAtD,EAAe1J,EAAQf,IACJe,EAAQ7C,SAER6C,EAAQ7C,SAASO,MAAM,EAAG0O,IAEd7O,QAGvC,IAAM6C,EAAS,GACf,GAAIJ,EAAQI,OAAQ,CAChB,IAAM+M,EAAOC,YAAKpN,EAAQI,QAC1BA,EAAOI,KAAP,MAAAJ,EAAe+M,GAEnB,IAAME,EAAW1D,EAAa3J,EAAQf,IAAM0K,EAAa3J,EAAQf,IAAM,EACjEqO,EAAelN,GAAUA,EAAOiN,GAAYjN,EAAOiN,GAAY,KAI/DE,EAAczQ,EAAW0Q,uBAAuB,CAClD1H,QACAwF,UAAWtL,EAAQf,GACnBwO,WAAYlB,KACVT,EAAe9L,EAAQf,IACzBkB,EAAOoN,GAAevN,EAAQA,QAKlC,OAJI8J,EAAa9J,EAAQf,MACrBkB,EAAOH,EAAQA,SAIf,mBAAK1C,MAAM,OACP,mBAAKA,MAAM,iDACP,mBACIA,MAAK,mEACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,mCAEH/D,EAAKuB,OAAS,oBAAM9B,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAEhF,mBAAKrB,MAAM,wBAAwBE,MAAM,uBACrC,mBAAKF,MAAM,qDAENgP,EAAYrN,KAAOpB,EAAKoB,IAAM,mBAC3B,oBAAM3B,MAAM,8CACR,iBAAGA,MAAM,oBAAoBG,QAAS,EAAKkN,WAAYvI,UAASpC,EAAQf,OAG/E2L,EAAS5K,EAAQf,KAAO,mBACrB,mBAAK3B,MAAM,qEAAqEE,MAAM,wDAClF,sBAAQF,MAAM,mCAAmCG,QAAS,EAAKsN,WAAY3I,UAASpC,EAAQf,GAAIyO,eAAc1N,EAAQA,SAAS,iBAAG1C,MAAM,gBAAxI,SACA,uBACA,sBAAQA,MAAM,mCAAmCG,QAAS,EAAKwN,oBAAqB7I,UAASpC,EAAQf,IAAI,iBAAG3B,MAAM,qBAAlH,aAIR,uBACI,oBAAME,MAAM,sBACR,kBAAIF,MAAM,wBAAwBE,MAAM,qBACnCK,EAAKkB,QAAUlB,EAAKkB,SAAWuN,EAAYvN,OAAS,mBACjD,iBAAGD,KAAI,UAAYjB,EAAKkB,QAAWF,IACjC,mBACDA,GAEJf,GAASA,EAAMP,OAAS,GAAK,mBAC1B,oBAAMD,MAAM,uCACPQ,EAAM6P,QAAO,SAAAtP,GAAC,OAAiB,IAAbA,EAAEC,UAAcZ,MAAM,EAAG,GAAGC,KAAI,SAAAiQ,GAAC,OAAI,wBAClD,iBAAG9O,KAAI,iBAAmB8O,EAAE7O,QAAW6O,EAAEhP,aAO1DkM,EAAS9K,EAAQf,IAAM,mBACpB,mBAAK3B,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUuE,IAAI,mBAAkB,YAAC,IAAD,CAAM5C,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNF,KAAK,OACL0E,YAAa,YAAC,IAAD,CAAM7C,GAAG,0BAAT,yBACb8C,QAASC,YAAU,EAAM,mBACzBC,QAAS1D,IAAG8B,eACZ6B,QAAS3D,IAAG8B,eACZ7C,MAAM,iBACNiD,MAAOuK,OAKvB,mBAAK1N,MAAM,uCACP,sBAAQF,KAAK,SAASE,MAAM,uBACxBG,QAAS,EAAK8N,YACdnJ,UAASpC,EAAQf,IACpB,iBAAG3B,MAAM,2BAGhB,mBACF,YAAC,IAAD,CAAUuQ,SAAUtP,IAAGuP,cAAc3N,EAAMH,EAAQI,OAAQmM,GAAWwB,aAAcxP,IAAGyP,wBAE1FnD,EAAkB7K,EAAQf,KAAO,mBAAK3B,MAAM,sBACzC,sBAAQA,MAAM,4BAA4BG,QAAS,EAAKyN,cAAe9I,UAASpC,EAAQf,IAAI,iBAAG3B,MAAM,qBAArG,WACA,sBAAQA,MAAM,gCAAgCG,QAAS,EAAKwN,oBAAqB7I,UAASpC,EAAQf,IAAI,iBAAG3B,MAAM,wBAA/G,cAKZ,uBACI,mBAAKA,MAAM,6BACNgQ,GAAgB,mBAAKhQ,MAAM,kCACxB,mBACIA,MAAK,+CACLE,MAAK,oBACLyQ,WAAY,EAAKjE,eACjB5H,UAASpC,EAAQf,IAEjB,mBAAKkG,QAAQ,OAAO7H,MAAK,YAAeE,MAAM,oBAAoBsD,IAAKwM,EAAalI,eAEvFwE,EAAY5J,EAAQf,KAAO,oBAAM3B,MAAM,mDAAmDE,MAAM,+EAC7F,iBAAGF,MAAM,6BAGhB8C,GAAUA,EAAO7C,OAAS,GAAK,mBAAKD,MAAM,iCACtCY,IAAKC,QAAQiC,IAAWA,EAAOzC,KAAI,SAAC2E,EAAKsJ,GACtC,OAAQ,mBACJ,mBACItO,MAAK,2BACLE,MAAK,wCAEL,mBAAK2H,QAAQ,OAAO7H,MAAK,mBAAsBE,MAAM,oBAAoBsD,IAAKwB,EAAIV,YAAanE,QAAS,EAAKkO,UAAWvJ,UAASpC,EAAQf,GAAIiP,WAAUtC,aAQnL,yBACI,sBAAQtO,MAAK,8CAA+CwP,EAAkB,eAAiB,IAC3FrP,QAAS,EAAKuM,eACd5H,UAASpC,EAAQf,GACjBoD,SAAUyK,GAETA,EAAkB,YAAC,IAAD,CAAM7N,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,QANxE,IASI,sBAAQ3B,MAAM,2BACVG,QAAS,EAAK6M,aACdlI,UAASpC,EAAQf,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAEHe,EAAQuM,WAAaA,GAAY,wBAE5BzC,EAAa9J,EAAQf,KAAOsO,EAAc,mBACxC,sBACInQ,KAAK,SACLE,MAAM,sBACN6Q,iBAAgBnO,EAAQf,GACxBxB,QAAS,EAAKqM,cAEd,iBAAGxM,MAAM,eANb,KAM8B,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBAE5B,mBACF,sBACI7B,KAAK,SACLE,MAAM,sBACNG,QAAS,EAAKoO,UACdsC,iBAAgBnO,EAAQf,IAExB,iBAAG3B,MAAM,eANb,IAM6B,YAAC,IAAD,CAAM2B,GAAG,qBAAT,sBAjCzC,IAsCI,sBAAQ3B,MAAM,qCACTY,IAAKkQ,eAAepO,EAAQqO,YAAa,IAAItN,KAAQ,CAAEuN,OAAQ,UAC/DtO,EAAQuO,aAAe,mBACpB,oBAAMjR,MAAM,0BAAZ,WAA8CY,IAAKkQ,eAAepO,EAAQuO,YAAa,IAAIxN,KAAQ,CAAEuN,OAAQ,UAA7G,SAKftO,EAAQ9C,OAAS8C,EAAQ9C,MAAMK,OAAS,GAAK,qBAAOD,MAAM,4DAA4DE,MAAM,8BACzH,iBAAGF,MAAM,kCADiC,IACG0C,EAAQ9C,MAAMK,SAGnE,mBAAKD,MAAM,wBACN0C,GAAW9B,IAAKC,QAAQ6O,IAAqBA,EAAiBrP,KAAI,SAAC6Q,GAAU,MACpDA,EAAd3Q,YADkE,MAC3D,GAD2D,EAEpEC,EAAQhB,EAAWmB,wBAAwBJ,EAAKoB,IAChDN,EAAmBJ,IAAGI,iBAAiBd,GACvCgB,EAAcN,IAAGM,YAAYhB,GAC7B6D,EAAY7D,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,GAC1D8M,EAAgBD,EAAMtR,OAASsR,EAAMtR,MAAM6P,WAAU,SAAA1O,GAAC,OAAIA,EAAER,OAASyO,EAAYrN,OAAO,EAGxFyP,EAAmB5R,EAAW6R,4BAA4B,CAC5D7I,QACAwF,UAAWtL,EAAQf,GACnBgN,QAASuC,EAAMvP,GACfwO,WAAYlB,KACVT,EAAkB9L,EAAQf,GAAZ,IAAkBuP,EAAMvP,IACxC2P,EAAYF,GAAoBF,EAAMxO,QAK1C,OAJI8J,EAAgB9J,EAAQf,GAAZ,IAAkBuP,EAAMvP,MACpC2P,EAAYJ,EAAMxO,SAIlB,mBAAK1C,MAAM,OACP,mBAAKA,MAAM,wCACP,mBACIA,MAAK,mEACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,mCAEH/D,EAAKuB,OAAS,oBAAM9B,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAEhF,mBAAKrB,MAAM,wBAAwBE,MAAM,uBACrC,mBAAKF,MAAM,6CACVgP,EAAYrN,KAAOpB,EAAKoB,IAAM,mBACvB,oBAAM3B,MAAM,8CACR,iBAAGA,MAAM,oBAAoBG,QAAS,EAAKkN,WAAYvI,UAASoM,EAAMvP,OAG7E2L,EAAS4D,EAAMvP,KAAO,mBACnB,mBAAK3B,MAAM,qEAAqEE,MAAM,wDAClF,sBAAQF,MAAM,mCAAmCG,QAAS,EAAKsN,WAAY3I,UAASoM,EAAMvP,GAAIyO,eAAcc,EAAMxO,SAAS,iBAAG1C,MAAM,gBAApI,SACA,uBACA,sBAAQA,MAAM,mCAAmCG,QAAS,EAAKwN,oBAAqB7I,UAASoM,EAAMvP,IAAI,iBAAG3B,MAAM,qBAAhH,aAIR,oBAAME,MAAM,sBACR,kBAAIF,MAAM,wBAAwBE,MAAM,qBACnCqB,EACAf,GAASA,EAAMP,OAAS,GAAK,mBAC1B,oBAAMD,MAAM,uCACPQ,EAAM6P,QAAO,SAAAtP,GAAC,OAAiB,IAAbA,EAAEC,UAAcZ,MAAM,EAAG,GAAGC,KAAI,SAAAiQ,GAAC,OAAI,wBAClD,iBAAG9O,KAAI,iBAAmB8O,EAAE7O,OAAUzB,MAAM,QAA5C,IAAqDsQ,EAAEhP,aAOxEkM,EAAS0D,EAAMvP,IAAM,mBAClB,mBAAK3B,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUuE,IAAI,mBAAkB,YAAC,IAAD,CAAM5C,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNF,KAAK,OACL0E,YAAa,YAAC,IAAD,CAAM7C,GAAG,0BAAT,yBACb8C,QAASC,YAAU,EAAM,mBACzBC,QAAS1D,IAAG8B,eACZ6B,QAAS3D,IAAG8B,eACZ7C,MAAM,iBACNiD,MAAOuK,OAKvB,mBAAK1N,MAAM,uCACP,sBAAQF,KAAK,SAASE,MAAM,uBACxBG,QAAS,EAAKgO,iBACd0C,iBAAgBnO,EAAQf,GACxBmD,UAASoM,EAAMvP,IAClB,iBAAG3B,MAAM,2BAGhB,mBACF,YAAC,IAAD,CAAUuQ,SAAUtP,IAAGuP,cAAcc,EAAWJ,EAAMpO,OAAQmM,GAAWwB,aAAcxP,IAAGyP,wBAE7FnD,EAAkB2D,EAAMvP,KAAO,mBAAK3B,MAAM,sBACvC,sBAAQA,MAAM,4BAA4BG,QAAS,EAAK2N,mBAAoBhJ,UAASoM,EAAMvP,GAAIkP,iBAAgBnO,EAAQf,IAAI,iBAAG3B,MAAM,qBAApI,WACA,sBAAQA,MAAM,gCAAgCG,QAAS,EAAKwN,oBAAqB7I,UAASoM,EAAMvP,IAAI,iBAAG3B,MAAM,wBAA7G,cAKZ,yBACI,sBAAQA,MAAK,4CAA6CmR,EAAgB,eAAiB,IACvFhR,QAAS,EAAKoM,UACd6D,eAAc1N,EAAQf,GACtBmD,UAASoM,EAAMvP,GACfoD,SAAUoM,GAETA,EAAgB,YAAC,IAAD,CAAMxP,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,QAPtE,IAUI,sBAAQ3B,MAAM,2BACVG,QAAS,EAAK6M,aACdlI,UAASpC,EAAQf,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAEHuP,EAAMjC,WAAaA,GAAY,wBAE1BzC,EAAgB9J,EAAQf,GAAZ,IAAkBuP,EAAMvP,KAASyP,EAAmB,mBAC9D,sBACItR,KAAK,SACLE,MAAM,sBACN6Q,iBAAgBnO,EAAQf,GACxB4P,eAAcL,EAAMvP,GACpBxB,QAAS,EAAKqM,cAEd,iBAAGxM,MAAM,eAPb,KAO8B,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBAE5B,mBACF,sBACI7B,KAAK,SACLE,MAAM,sBACNG,QAAS,EAAKoO,UACdsC,iBAAgBnO,EAAQf,GACxB4P,eAAcL,EAAMvP,IAEpB,iBAAG3B,MAAM,eAPb,IAO6B,YAAC,IAAD,CAAM2B,GAAG,qBAAT,sBApCzC,IAyCI,sBAAQ3B,MAAM,qCACTY,IAAKkQ,eAAeI,EAAMH,YAAa,IAAItN,KAAQ,CAAEuN,OAAQ,UAC7DE,EAAMD,aAAe,mBAClB,oBAAMjR,MAAM,0BAAZ,WAA8CY,IAAKkQ,eAAeI,EAAMD,YAAa,IAAIxN,KAAQ,CAAEuN,OAAQ,UAA3G,SAKfE,EAAMtR,OAAS,qBAAOI,MAAM,4DAA4DE,MAAM,8BAC3F,iBAAGF,MAAM,kCADG,IACiCkR,EAAMtR,MAAMK,aAM5E0P,EAAeC,EAAkB,GAAK,uBACnC,sBAAQ5P,MAAM,2BACVG,QAAS,EAAKiN,cACdtI,UAASpC,EAAQf,IAEjB,YAAC,IAAD,CAAMA,GAAG,qBAAqBC,OAAQ,CAAE4P,KAAM7B,EAAeC,IAA7D,OACSD,EAAeC,EADxB,4BAOXzD,EAAezJ,EAAQf,KAAO,mBAAK3B,MAAM,iDACtC,YAAC,IAAD,CAAmBT,OAAQ,EAAKP,MAAMO,OAAQiJ,MAAOA,EACjDI,SAAUA,EACVrG,SAAUA,EACV6F,UAAW1F,EAAQf,GACnB+B,SAAU,SAAAqE,GAAC,OAAI,EAAKrE,SAAShB,EAAQf,IAAMoG,GAC3CvF,eAAgB,EAAKkB,SACrB+K,IAAG,sBAAwB/L,EAAQf,UAMtDwN,EAAgBC,EAAmB,GAAK,uBACrC,sBAAQpP,MAAM,2BACVG,QAASb,KAAK6N,gBAEd,YAAC,IAAD,CAAMxL,GAAG,qBAAqBC,OAAQ,CAAE4P,KAAMrC,EAAgBC,IAA9D,OACSD,EAAgBC,EADzB,2BAKPlD,GAAmB,uBAChB,sBAAQlM,MAAM,2BACVG,QAASb,KAAK6N,gBAEd,YAAC,IAAD,CAAMxL,GAAG,8BAAT,gC,GA9mBIK,e,EAsnBbyK,Q,gDC/oBfgF,EAAOC,QAAU,CAAC,iBAAmB,0BAA0B,aAAe,sBAAsB,iBAAmB,0BAA0B,wBAAwB,+BAA+B,eAAe,sBAAsB,QAAU,iBAAiB,KAAO,cAAc,KAAO,gB,q+BCmC9R7S,EAAe,CACpBsN,eAAgB,GAEbwF,YAAa,GACbC,cAAe,EACfC,MAAO,EACPC,MAAO,GACPlO,OAAQ,EACRmO,uBAAuB,EACvBC,OAAO,EACPC,WAAW,IAAIxO,MAAOyO,WAIpBC,EADLpT,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAQJoT,WAAa,SAACrR,GACVA,EAAE2E,kBACF3E,EAAE2N,iBAEF,EAAKxP,SAAS,CAAEmT,UADK,EAAKjT,MAAlBiT,YAZO,EAgBtBV,YAAc,SAAO5Q,GAAP,sCACDuR,EADC,IAaPhQ,EAAW,OAZLgQ,EAAY7G,SAAS1K,EAAEsC,OAAOsJ,QAAQ,mBAAmBC,QAAQjL,GAAI,IACzEjC,EAAiB,EAAKV,MAAMO,OAA5BG,cAEMiS,EAAgB,EAAKvS,MAArBuS,aACIW,IAAa,EACzB,EAAKpT,SAAS,CAAEyS,gBAChBpO,YAAW,WAAM,IACLoO,EAAgB,EAAKvS,MAArBuS,mBACDA,EAAYW,GACnB,EAAKpT,SAAS,CAAEyS,kBACjB,MAEQ,gBAAMjS,EAAaiS,YAAY,CAAEhQ,GAAI2Q,KAArC,MAAiD,uBAA5DhQ,EAAW,IACyB,MAApBA,EAASM,QACrB,EAAK2P,cAAcD,EAAWhQ,EAASqI,MAFiB,mCA7B7C,EAmCnB6H,iBAAmB,YAAqD,IAAlD1S,EAAkD,EAAlDA,KAAM2C,EAA4C,EAA5CA,QAASH,EAAmC,EAAnCA,SAAU8F,EAAyB,EAAzBA,UAAW0E,EAAc,EAAdA,QAAc,EAElC,EAAK9N,MAA/ByT,oBAF4D,MAE7C,OAF6C,EAGpE,GAAqB,SAAjBA,EAAyB,KACjBhT,EAAc,EAAKT,MAAMO,OAAzBE,UACR,OAAQK,GACJ,IAAK,cACDL,EAAUiT,iBAAiB,CAAE/Q,GAAIc,EAAQd,GAAIgJ,KAAMrI,EAASqI,KAAMvC,cAClE,MACJ,IAAK,YACD3I,EAAUkT,sBAAsB,CAAEhR,GAAIc,EAAQd,GAAIgJ,KAAMrI,EAASqI,KAAMvC,YAAW0E,YAClF,MAEJ,QACQ1E,EACA3I,EAAUmT,2BAA2B,CAAEjR,GAAIc,EAAQd,GAAIgJ,KAAMrI,EAASqI,KAAMvC,cAE5E3I,EAAUoT,oBAAoB,CAAElR,GAAIc,EAAQd,GAAIgJ,KAAMrI,EAASqI,aAIxE,GAAqB,UAAjB8H,EAA0B,KACzBjT,EAAe,EAAKR,MAAMO,OAA1BC,WACR,OAAQM,GACJ,IAAK,cACDN,EAAWsT,yBAAyB,CAAEnR,GAAIc,EAAQd,GAAIgJ,KAAMrI,EAASqI,KAAMvC,cAC3E,MACJ,IAAK,YACD5I,EAAWuT,8BAA8B,CAAEpR,GAAIc,EAAQd,GAAIgJ,KAAMrI,EAASqI,KAAMvC,YAAW0E,YAC3F,MAEJ,QACQ1E,EACA5I,EAAWwT,mCAAmC,CAAErR,GAAIc,EAAQd,GAAIgJ,KAAMrI,EAASqI,KAAMvC,cAErF5I,EAAWyT,4BAA4B,CAAEtR,GAAIc,EAAQd,GAAIgJ,KAAMrI,EAASqI,UAtEzE,EA6EnB4H,cAAgB,SAAC5Q,EAAIgJ,GAAS,MACQ,EAAK3L,MAA/ByT,oBADkB,MACH,OADG,EAE1B,GAAqB,SAAjBA,EACsB,EAAKzT,MAAMO,OAAzBE,UACEyT,iBAAiB,CAAEvR,KAAIgJ,cAC9B,GAAqB,UAAjB8H,EAA0B,CACV,EAAKzT,MAAMO,OAA1BC,WACG2T,yBAAyB,CAAExR,KAAIgJ,WApF/B,EAwFtByI,iBAAmB,SAACrS,GACnB,IAAMuR,EAAYvR,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAQjL,GAC7CwK,EAAmB,EAAK/M,MAAxB+M,eACEA,EAAemG,UACRnG,EAAemG,GAEtBnG,EAAemG,IAAa,EAEtC,EAAKpT,SAAS,CACbiN,mBACE,WACE,EAAKzI,SAAS4O,IACjB,EAAK5O,SAAS4O,GAAWpF,YApGN,EAyGnBmG,UAAY,SAACtS,GAAM,MACcA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QACnC,EAAK5N,MAAMO,OAAxB+L,SACCgI,SAAS,CAAErJ,IAHL,EACPA,IAEiBvI,MAHV,EACFA,MAEmB6R,KAHjB,EACKA,QA1GL,EA+GnBC,kBAAoB,SAACzS,GACjB,GAA2B,MAAvBA,EAAEsC,OAAOoQ,UACT,OAAO,EAEX,IAAMpQ,EAAStC,EAAEsC,OAAOsJ,QAAQ,kBAChC,GAAItJ,EAAQ,KACA1B,EAAO0B,EAAOuJ,QAAdjL,GACJA,IACJ+R,QAAQC,IAAI,CAAEtQ,SAAQ1B,OAClBiS,gBAAM,oBAAoBjS,MAxHnB,EA6HnB4M,UAAY,SAAOxN,GAAP,gDAMF8S,EACFC,EADuB,OAL3B/S,EAAE2N,iBACF3N,EAAE2E,kBACMqO,OAHA,OAGc,EAAK/U,MAAnB+U,MAAO,GAHP,EAIWtU,GAJX,EAIyB,EAAKT,MAAMO,QAAzBE,UACXc,EALA,EAIAwD,UACAxD,KACmB,gBAAMd,EAAU8O,UAAU,CAAEnJ,OAAQ2O,EAAMxT,OAAMyT,MAAO,UAAvD,KAAgE,gBAE3F,GAFMH,EAAqB,EAEvBE,EAAKrR,QACmB,uBAAMjD,EAAU8O,UAAU,CAAEnJ,OAAQ2O,EAAMxT,OAAMyT,MAAO,aAAvD,KAAmE,uBAA3FF,EAAwB,EAAmE,kDAHJ,oBAK3F,EAAK5U,SAAS,CAAEsN,aAAc,EAAGqH,qBAAoBC,0BALsC,iEAnI5E,EA2InBtH,aAAe,SAACzL,GACZA,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKxG,SAAS,CAAEsN,aAAc,KA5I9B,EAAKpN,MAAL,KACOP,GAEP,EAAK6E,SAAW,GAChB,EAAKuQ,aAAe,KANL,E,kHAiJnB5U,OAAA,WAAS,aAC+GC,KAAKN,MAAjH+U,EADH,EACGA,KADH,IACchU,mBADd,MAC4B,aAD5B,MACsCmU,mBADtC,MACoD,aADpD,MAC8DC,kBAD9D,MAC2E,aAD3E,MACqF1B,oBADrF,MACoG,OADpG,IAEsGnT,KAAKF,MAAxG+M,EAFH,EAEGA,eAAgBkG,EAFnB,EAEmBA,SAAUV,EAF7B,EAE6BA,YAAanF,EAF1C,EAE0CA,aAAcqH,EAFxD,EAEwDA,mBAAoBC,EAF5E,EAE4EA,sBAF5E,EAGkDxU,KAAKN,MAAMO,OAA1DE,EAHH,EAGGA,UAAWD,EAHd,EAGcA,WAAYuE,EAH1B,EAG0BA,UAAWuH,EAHrC,EAGqCA,SAClC/K,EAAkBwD,EAAlBxD,KAAMgL,EAAYxH,EAAZwH,QAJT,EAKuBhL,EAApB0O,gBALH,MAKc,KALd,EAMamF,EAAgB9I,EAAhB8I,YAEVC,EAAe5U,EAAf4U,WACJlT,EAAO,GACPmT,EAAa,GACI,SAAjB7B,GACAtR,EAAO1B,EAAU8U,eAAeR,EAAK5S,MACrCmT,EAAa7U,EAAUiB,eAAeqT,EAAKxT,OAAS,IAC5B,UAAjBkS,IACPtR,EAAO3B,EAAW+U,eAAeR,EAAK5S,MACtCmT,EAAa9U,EAAWkB,eAAeqT,EAAKxT,OAAS,IAEpCwD,EAAUyQ,iBAAiB,CAAEC,SAAUtT,EAAKuT,UAAWzF,aAA5E,IAqBI0F,EACAC,EArBEC,EAAW9Q,EAAU+Q,aAAa,CAAEhV,KAAMqB,EAAKrB,KAAMmP,aAErD8F,MAAe5T,IAAQA,EAAK6T,UAAW7T,EAAK6T,QAAQC,MAAK,SAAAC,GAAC,OAAIA,IAAM3U,EAAKoB,MAEzEG,GAAQb,IAAGC,SAAS,CAAEX,KAAM+T,EAAYnT,OAAMiE,OAAQ2O,EAAM3S,SAAU,SAEpExB,GAAoBmU,EAApBnU,MAAOC,GAAakU,EAAblU,SACTsV,GAAkBpB,EAAKnU,OAASmU,EAAKnU,MAAM6P,WAAU,SAAA1O,GAAC,OAAIA,EAAER,OAASA,EAAKoB,OAAO,EACjFyT,GAAiBjU,GAAQA,EAAKkU,UAAYlU,EAAKkU,UAAUpV,OAAS,EAElEqV,GAAanU,EAAK6T,SAAW7T,EAAK6T,QAAQO,QAAQhV,EAAKoB,KAAO,EAC9D6T,GAAcrU,GAAQA,EAAKkU,WAAalU,EAAKkU,UAAUE,QAAQhV,EAAKoB,KAAO,EAC3E8T,GAAqBtU,EAAKuU,gBAAkBvU,EAAKuU,eAAejG,WAAU,SAAA1O,GAAC,OAAIA,EAAEY,KAAOpB,EAAKoB,OAAO,EACpGgU,GAAmB5R,EAAU6R,cAAc,CAAEC,UAAW9B,EAAK8B,UAAW5G,aACxE6G,GAAuB/R,EAAU6R,cAAc,CAAEC,UAAW9B,EAAK8B,UAAW7B,MAAO,SAjCpF,GAkCcD,EAAjBgC,gBAlCG,OAkCO,GAlCP,GAyCDzB,IACYrT,IAAGI,iBAAiBiT,GACzBrT,IAAGM,YAAY+S,GACtBK,EAAW1T,IAAGM,YAAY+S,GACtBA,EAAWpL,UAAYoL,EAAW7S,SAAWlB,EAAKkB,SAClDmT,EAAWN,EAAWpL,SAAS8M,YAAc,KAAlC,UAAmD1B,EAAW7S,SAIjF,IAAMqB,GAAS,GAOf,GANIiR,EAAKkC,UACLnT,GAAOI,KAAP,OACO6Q,EAAKkC,UADZ,IAEInW,KAAM,SAGViU,EAAKjR,OAAQ,CACb,IAAM+M,GAAOC,YAAKiE,EAAKjR,QACvBA,GAAOI,KAAP,MAAAJ,GAAe+M,IA3Dd,OA8DmDkE,EAAhDmC,+BA9DH,OA8D4B,GA9D5B,GA+DCC,GAAQlV,IAAGmV,SAASrC,EAAKsC,YACzBC,GAAYrV,IAAGsV,aAAaxC,EAAKsC,YAEvC,IAAKlV,IAASA,EAAKG,KACf,MAAO,GAGX,IAAMkV,GAAkBvV,IAAGwV,eAAe,CACtCrR,OAAQ2O,EACR5D,WAAYlB,EACZ+E,MAAO,UACLH,EACF6C,GAAWF,IAAmBzC,EAAKzS,KAMnCqV,GALuB1V,IAAGwV,eAAe,CACzCrR,OAAQ2O,EACR5D,WAAYlB,EACZ+E,MAAO,aACLF,GACkCC,EAAKrR,QAO7C,OALI8J,IACAkK,GAAW3C,EAAKzS,KAChBqV,GAAc5C,EAAKrR,SAGf,mBACJ,mBAAK1C,MAAM,4BACP,mBAAKA,MAAM,eACP,mBACIA,MAAK,sFACLE,MAAO4B,GAAQ,0BAA0BA,GAA7B,8BAAkE,KAC5EA,IAAS,iBAAG9B,MAAM,+BAA+BE,MAAM,uBAGjE,mBAAKF,MAAM,iCAAiCE,MAAM,uBAC9C,oBAAMF,MAAM,gDAAgD6U,GAC5D,kBAAI7U,MAAM,yBAAyBE,MAAM,uBACpCiB,EAAKH,OAAS,mBACX,iBAAGQ,KAAI,iBAAmBL,EAAKM,OAAUtB,QAAS,SAACY,GAAD,OAAOhB,EAAYgB,EAAGI,EAAKM,SAASzB,MAAM,kBAAkBmB,EAAKG,OACjH,mBACDH,EAAKG,OAGd,mBAAKtB,MAAM,QACN+T,EAAK6C,MAAQ,qBAAO5W,MAAM,aAAaG,QAASb,KAAK8S,YACjDC,EAAWzR,IAAKiW,WAAW9C,EAAK6C,KAAM,CAAE5F,OAAQ,QAAS8F,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAAepW,IAAKkQ,eAAeiD,EAAK6C,KAAM,IAAInT,KAAQ,CAAEuN,OAAQ,WAEzJ,IAAhB+C,EAAK/S,OAAe,mBACjB,qBAAOhB,MAAM,mBACT,iBAAGA,MAAM,0BAEX,mBACF,qBAAOA,MAAM,mBACT,iBAAGA,MAAM,iBADb,KACiCY,IAAKmI,OAAOqM,IAD7C,MAIHT,GAAY,mBACT,qBAAO3U,MAAM,mBACR4U,EAAW,mBACR,iBAAG5U,MAAM,gBADD,IACkB,iBAAGwB,KAAMoT,GAAWD,IAC5C,mBACF,iBAAG3U,MAAM,gBADP,IACyB2U,KAIvC,qBAAO3U,MAAM,cACR+T,EAAK8B,UAAY,GAAK,mBAAE,iBAAG7V,MAAU8V,GAAL,UAAV,IAAgDH,IAItE5B,EAAKkD,KAAO,GAAK,mBAAE,iBAAGjX,MAAM,oBAAX,IAAiC+T,EAAKkD,KAAKhX,QAC5D8T,EAAKmD,MAAQ,GAAK,mBAAE,iBAAGlX,MAAK,2BAA4B+T,EAAKmD,MAAQ,EAAI,UAAY,UAAzD,WAE5BnD,EAAKoD,WAAa,GAAK,mBACpB,iBAAGnX,MAAM,uBADW,IACa,YAAC,IAAD,CAAQT,OAAQD,KAAKN,MAAMO,OAAQ4D,MAAO4Q,EAAKoD,cAE9D,IAArBpD,EAAKqD,aAAqB,mBACvB,iBAAGpX,MAAM,gCADc,IACmB,YAAC,IAAD,CAAaT,OAAQD,KAAKN,MAAMO,OAAQ4D,MAAO4Q,EAAKqD,eAEjGrD,EAAKkD,MAAQlD,EAAKkD,KAAKhX,OAAS,GAAK,mBAClC,iBAAGD,MAAM,oBADyB,IACHY,IAAKmI,OAAOgL,EAAKkD,KAAKhX,OAAQ,IAMhEiW,IAA0BA,GAAuBmB,iBAAmB,mBACjE,iBAAGrX,MAAM,+BADwD,IACvBkW,GAAuBmB,iBAEpEtD,EAAKuD,kBAAoBvD,EAAKuD,iBAAiBC,WAAa,oBAAMvX,MAAM,oBAAoB+T,EAAKuD,iBAAiBC,aAI1HhM,GAAW,mBACRvL,MAAM,qEACNE,MAAM,mBAEN,qBAAOF,MAAM,mBAAb,QACCkW,IAA0BA,GAAuBsB,mBAAqB,mBACnE,qBAAOxX,MAAM,cACT,iBAAGA,MAAM,0BADb,IACyCkW,GAAuBsB,oBAGnElD,EAAWmD,YAAc,mBACtB,oBAAMzX,MAAM,4DACP,CAAC,WAAY,eAAgB,SAASK,KAAI,SAAAU,GAAC,OAAI,mBAC5C,oBAAMf,MAAM,mBACPsU,EAAWmD,WAAW1W,UAKtCuV,IAAa,mBAEV,qBAAOtW,MAAM,mBAAb,MACQsW,GAAUoB,OAElB,qBAAO1X,MAAM,mBAAb,MACQsW,GAAUqB,QADlB,IAC4B/W,IAAKgX,SAAStB,GAAUuB,eAAiB,mBAAE,iBAAG7X,MAAOiB,IAAG6W,iBAAiBxB,GAAUuB,kBAE/G,qBAAO7X,MAAM,mBAAb,MACQY,IAAKmI,OAAOuN,GAAUyB,YAAc,IAAM,GADlD,KACwDnX,IAAKgX,SAAStB,GAAU0B,mBAAqB,mBAAE,iBAAGhY,MAAOiB,IAAG6W,iBAAiBxB,GAAU0B,sBAE9IjE,EAAKkE,mBAAqBlE,EAAKkE,kBAAkBC,kBAAoB,GAAK,qBAAOlY,MAAM,mBAAb,MACnEY,IAAKmI,OAAOgL,EAAKkE,kBAAkBC,kBAAmB,IAE7DnE,EAAKoE,YAAcpE,EAAKoE,WAAW9X,KAAI,SAAAuJ,GAAG,OAAI,mBAC3C,oBAAM5J,MAAM,4DAA4D4J,WA6B5F,mBAAK5J,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAeT,OAAQD,KAAKN,MAAMO,OAAQuD,OAAQA,GAAQnB,GAAIoS,EAAKpS,GAAIyW,SAAU9Y,KAAKqS,YAAa0G,QAAS1G,MAInHoC,EAAKkD,MAAQlD,EAAKkD,KAAKhX,OAAS,GAAK,mBAAKD,MAAM,6BAC7C,mBAAKA,MAAM,YACP,YAAC,IAAD,CAAaT,OAAQD,KAAKN,MAAMO,OAAQ0X,KAAMlD,EAAKkD,KAAMqB,QAASjE,EAAYF,WAAYA,MAIlG,mBAAKnU,MAAM,2DACN+T,EAAKwE,WAAa,GAAK,mBAAKvY,MAAM,oBAC/B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,gBAAhB,IAAiC,YAAC,IAAD,CAAM2B,GAAG,6BAAT,cAErC,mBAAK3B,MAAM,kCAAkCE,MAAM,qBAC/C,YAAC,IAAD,CAAUX,OAAQD,KAAKN,MAAMO,OAAQ4D,MAAO4Q,EAAKwE,eAGxDxE,EAAKyE,UAAY,GAAK,mBAAKxY,MAAM,oBAC9B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,oBAAhB,IAAqC,YAAC,IAAD,CAAM2B,GAAG,2BAAT,gBAEzC,mBAAK3B,MAAM,kCAAkCE,MAAM,qBAC/C,YAAC,IAAD,CAAWX,OAAQD,KAAKN,MAAMO,OAAQ4D,MAAO4Q,EAAKyE,cAGzDzE,EAAK0E,SAAW,GAAK,mBAAKzY,MAAM,oBAC7B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,iBAAhB,IAAkC,YAAC,IAAD,CAAM2B,GAAG,6BAAT,cAEtC,mBAAK3B,MAAM,kCAAkCE,MAAM,qBAC9CU,IAAK8X,SAAS3E,EAAK0E,UAAU,KAGrC1E,EAAK4E,SAAW,GAAK,mBAAK3Y,MAAM,eAC7B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,0BAAhB,IAA2C,YAAC,IAAD,CAAM2B,GAAG,8BAAT,eAE/C,mBAAK3B,MAAM,kCAAkCE,MAAM,qBAC9C6V,IAAWA,GAAQ6C,kBAAoB,EAAI,mBACxC,YAAC,IAAD,CAAOrZ,OAAQD,KAAKN,MAAMO,OAAQ4D,MAAmC,IAA5B4S,GAAQ6C,qBAC/C,mBACF,YAAC,IAAD,CAAOrZ,OAAQD,KAAKN,MAAMO,OAAQ4D,MAAO4Q,EAAK4E,eAM9D,mBAAK3Y,MAAM,YACP,mBAAK2B,GAAG,gBAAgB3B,MAAM,mCAAmCE,MAAM,oBAAoBC,QAASb,KAAKkU,kBAAmB1O,UAASiP,EAAKtS,QACtI,YAAC,IAAD,CAAU8O,SAAUtP,IAAGuP,cAAckG,GAAU3C,EAAKjR,OAAQmM,GAAWwB,aAAcxP,IAAGyP,wBAE5F,mBAAK1Q,MAAM,mBACP,YAAC,IAAD,CAAUuQ,SAAUtP,IAAGuP,cAAcmG,GAAa5C,EAAKjR,OAAQmM,GAAWwB,aAAcxP,IAAGyP,wBAE9FqD,EAAK9E,WAAaA,GAAY,oBACzBzC,GAAgBgK,GAAkB,mBAChC,sBAAQ1W,KAAK,SAASE,MAAM,iCAAiCG,QAASb,KAAKkN,cAAc,iBAAGxM,MAAM,eAAlG,KAAmH,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBACjH,mBACF,sBAAQ7B,KAAK,SAASE,MAAM,iCAAiCG,QAASb,KAAKiP,WAAW,iBAAGvO,MAAM,eAA/F,IAA+G,YAAC,IAAD,CAAM2B,GAAG,qBAAT,uBAK3H,mBAAK3B,MAAM,QACP,YAAC,IAAD,CACIT,OAAQD,KAAKN,MAAMO,OACnBK,MAAOA,GACPC,SAAUA,GACVC,KAAK,OACLC,YAAaA,EACbmU,YAAaA,MAInBoB,KAAeE,KAAgBC,IAAsB,mBAAKzV,MAAM,iBAC9D,YAAC,IAAD,CAAYT,OAAQD,KAAKN,MAAMO,OAAQ4B,KAAMA,EAAM0X,YAAY,KAGnE,uBACI,mBAAK7Y,MAAM,OACP,mBAAKA,MAAM,mBACP,sBAAQF,KAAK,SAASE,MAAK,0CAA2CmV,GAAkB,UAAY,aAAzE,sBAAyGA,GAAkB,eAAiB,IAA5I,iBACvBrQ,UAASiP,EAAKpS,GACdxB,QAASb,KAAKqS,aAGd,iBAAG3R,OAAUmV,GAAkB,mBAAqB,OAA5C,kBALZ,IAKiF,YAAC,IAAD,CAAMxT,GAAG,iBAAT,SAGrF,mBAAK3B,MAAM,mBACP,sBAAQF,KAAK,SAASE,MAAM,kEACxB8E,UAASiP,EAAKpS,GACdxB,QAASb,KAAK8T,kBAEd,iBAAGpT,MAAM,mBAJb,IAIiC,YAAC,IAAD,CAAM2B,GAAG,wBAAT,eAGpCyS,EAAc,mBACX,mBAAKpU,MAAM,mBACP,sBAAQA,MAAM,kEACVG,QAASb,KAAK+T,UACdyF,WAAA,uCAAiD/E,EAAKtS,OACtDsX,aAAA,UAAsBhF,EAAKrS,OAE3B,iBAAG1B,MAAM,iBALb,IAK+B,YAAC,IAAD,CAAM2B,GAAG,eAAT,UAGjC,mBACF,mBAAK3B,MAAM,mBACP,iBAAGA,MAAM,kEACLwB,KAAI,uCAAyCuS,EAAKtS,OAClD4B,OAAO,SACP2V,IAAI,aACJC,eAAA,GAEA,iBAAGjZ,MAAM,iBANb,IAM+B,YAAC,IAAD,CAAM2B,GAAG,eAAT,YAO9CwU,GAAQ,GAAK,mBACV,mBAAKnW,MAAM,QACP,YAAC,IAAD,CACIT,OAAQD,KAAKN,MAAMO,OACnB4W,MAAOA,GACP/Q,OAAQ2O,EACRjU,KAAK,OACLiV,YAAaA,GACbxJ,QAASA,EACTxL,YAAaA,EACbmU,YAAaA,MAKzB,mBAAKlU,MAAM,QACNmM,EAAe4H,EAAKpS,KAAO,YAAC,IAAD,CACxBpC,OAAQD,KAAKN,MAAMO,OACnBkD,QAASsR,EACTrQ,SAAU,SAAAqE,GAAC,OAAI,EAAKrE,SAASqQ,EAAKpS,IAAMoG,GACxCvF,eAAgBlD,KAAKoE,SACrBC,IAAI,KACJC,OAAO,IACPC,YAAY,EACZC,WAAW,OACXvB,SAAUjD,KAAKkT,mBAEnB,YAAC,IAAD,CACIjT,OAAQD,KAAKN,MAAMO,OACnBkD,QAASsR,EACTpQ,IAAI,KACJC,OAAO,IACPmL,SAAS,EACTxM,SAAUjD,KAAKkT,sB,GA5gBFxQ,e,EAmhBlBmQ,Q,gvBC9iBTtT,EAAe,CACpBsN,eAAgB,GAChB+M,gBAAiB,GACd7M,aAAc,GACd8M,UAAW,IAITC,EADLra,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAIJqa,UAAY,SAAOtY,GAAP,gDAMR,OALQY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlCjL,GACWkB,EAAS,EAAKzD,MAAzBka,UACA9Z,EAAe,EAAKR,MAAMO,OAA1BC,WACA+C,OAJA,OAI0B,EAAKvD,MAA/BuD,UAAW,kBAAM,GAJjB,EAMR,gBAAM/C,EAAW+Z,UAAU9N,SAAS9J,EAAI,IAAK,OAAQkB,GAAM,IAA3D,MAAgE,sBAChErD,EAAWga,iBAAiB/N,SAAS9J,EAAI,IAAK,OAAQkB,GACtD,EAAK3D,SAAS,CACVoa,UAAW,GACXG,UAAW,IAEflX,IANgE,mCAXjD,EAoBnBmX,eAAiB,SAAO3Y,GAAP,oCAELY,EADU,EAAK3C,MAAfwJ,MACA7G,GAFK,EAGWZ,EAAEsC,OAAlBF,EAHK,EAGLA,MAAO7B,EAHF,EAGEA,KAHF,OAKbqY,aAAa,EAAKC,YAAYtY,IAC9B,EAAKsY,YAAYtY,GAAQiC,YAAW,kDAChC,EAAKsW,cAAclY,EAAIL,EAAM6B,GADG,SAEjC,KARU,QAlBb,EAAKyW,YAAc,GAFJ,E,kCA+BbC,cAAN,SAAoBlY,EAAIL,EAAM6B,GAA9B,uCAEI,OADQ3D,EAAeF,KAAKN,MAAMO,OAA1BC,WACR,gBAAMA,EAAW+Z,UAAU9N,SAAS9J,EAAI,IAAKL,EAAM6B,GAAO,IAA1D,MAA+D,sBAC/D3D,EAAWga,iBAAiB/N,SAAS9J,EAAI,IAAKL,EAAM6B,GADW,gCAFnE,a,EAMA9D,OAAA,WAAS,MAC4BC,KAAKF,MAA9Bka,EADH,EACGA,UAAWG,EADd,EACcA,UAEXlO,EADcjM,KAAKN,MAAMO,OAAzBwE,UACAwH,QAEA/C,EAAUlJ,KAAKN,MAAfwJ,MACR,OAAQ,mBACJ,mBAAKxI,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUuE,IAAI,mBAAkB,YAAC,IAAD,CAAM5C,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNF,KAAK,OACL0E,YAAa,YAAC,IAAD,CAAM7C,GAAG,0BAAT,yBACb8C,QAASC,YAAUpF,KAAM,aAEzBsF,QAAS3D,IAAG8B,eACZ7C,MAAM,iBACNiD,MAAOmW,GAAa9Q,EAAM3F,SAKtC,mBAAK7C,MAAM,0BACNuL,GAAW,mBACR,mBAAKvL,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,2CACA,qBACIF,KAAK,WACL6B,GAAI6G,EAAM7G,GACVL,KAAK,SACLmD,QAASnF,KAAKoa,eACdvW,MAAOqF,EAAMuB,OAAS,EAAI,EAC1B+B,QAAStD,EAAMuB,OAAS,EAAI,QAO/CwB,GAAW,mBACR,yBAAO,YAAC,IAAD,CAAM5J,GAAG,cAAT,SACP,mBAAK3B,MAAM,cACP,yBACI,sBACIA,MAAM,iCACN2B,GAAI6G,EAAM7G,GACVL,KAAK,OACLmD,QAASnF,KAAKoa,eACdvW,MAAOsW,GAAajR,EAAM1I,MAE9B,sBAAQqD,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMxB,GAAG,qBAAT,aAApB,OACI,sBAAQwB,MAAO,EAAG0I,SAAwB,GAAdrD,EAAM1I,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAM6B,GAAG,sBAAT,WAClE,sBAAQwB,MAAO,EAAG0I,SAAwB,GAAdrD,EAAM1I,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAM6B,GAAG,iBAAT,YAClE,sBAAQwB,MAAO,EAAG0I,SAAwB,GAAdrD,EAAM1I,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAM6B,GAAG,sBAAT,iBAMjF6G,EAAM1I,MAAQ,GAAK,mBAChB,yBAAO,YAAC,IAAD,CAAM6B,GAAG,kBAAT,aACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,UACLmD,QAASnF,KAAKoa,eACdvW,MAAOqF,EAAMwB,YAKzB,yBAAO,YAAC,IAAD,CAAMrI,GAAG,aAAT,QACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,MACLmD,QAASnF,KAAKoa,eACdvW,MAAOqF,EAAMyB,SAMb,IAAfzB,EAAM1I,MAAc,mBACjB,yBAAO,YAAC,IAAD,CAAM6B,GAAG,cAAT,SACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,OACLmD,QAASnF,KAAKoa,eACdvW,MAAOqF,EAAM4B,SAKzB,yBAAO,YAAC,IAAD,CAAMzI,GAAG,iBAAT,YACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,UACLmD,QAASnF,KAAKoa,eACdvW,MAAOqF,EAAM6B,YAKzB,yBAAO,YAAC,IAAD,CAAM1I,GAAG,gBAAT,WACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,SACLmD,QAASnF,KAAKoa,eACdvW,MAAOqF,EAAM8B,WAKzB,yBAAO,YAAC,IAAD,CAAM3I,GAAG,kBAAT,aACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,WACLmD,QAASnF,KAAKoa,eACdvW,MAAOqF,EAAM0B,aAKzB,yBAAO,YAAC,IAAD,CAAMvI,GAAG,eAAT,UACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNF,KAAK,OACLwB,KAAK,QACLmD,QAASnF,KAAKoa,eACdvW,MAAOqF,EAAM2B,aAOrC,mBAAKnK,MAAM,uCACP,sBAAQF,KAAK,SAASE,MAAM,uBACxBG,QAASb,KAAK+Z,UACdvU,UAAS0D,EAAM7G,IAClB,iBAAG3B,MAAM,4B,GA1MAgC,e,EAkNxB8X,EADL/a,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMJqP,UAAY,SAACtN,GAAM,MACDA,EAAEsC,OAAOsJ,QAAQ,OAAOC,QAC9BP,EAAiB,EAAKjN,MAAtBiN,aACRA,EAHe,EACb1K,IADa,EACT2M,IAGN,EAAKpP,SAAS,CAAEmN,kBAXD,EAcnB0N,gBAAkB,SAAChZ,GACf,GAA2B,MAAvBA,EAAEsC,OAAOoQ,UACT,OAAO,EAFU,IAIb9R,EAAOZ,EAAEsC,OAAOsJ,QAAQ,gBAAgBC,QAAxCjL,GACJA,GACAiS,gBAAM,YAAYjS,IApBP,EAwBnB4M,UAAY,SAAOxN,GAAP,wCAMe,OALvBA,EAAE2N,iBACF3N,EAAE2E,kBAFM,EAI0B,EAAK1G,MAAMO,OAEtB,gBANf,EAIWC,WAEqB+O,UAAU,CAAE/F,MAHlC,EAAKxJ,MAAfwJ,MAGmDjI,KANnD,EAIAwD,UACAxD,QACe,MAA2C,uBAClE,EAAKrB,SAAS,CAAEsN,aAAc,EAAGgC,eADV,IAA2C,mCA9BnD,EAkCnBhC,aAAe,SAACzL,GACZA,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKxG,SAAS,CAAEsN,aAAc,KAnC9B,EAAKpN,MAAQ,CACTiN,aAAc,IAHH,E,0BAwCnBhN,OAAA,WAAS,MACkDC,KAAKF,MAAtCoN,EADjB,EACiBA,aAAcgC,EAD/B,EAC+BA,eAD/B,EAE6BlP,KAAKN,MAAMO,OAFxC,EAGiCD,KAAKN,MAAnCwJ,EAHH,EAGGA,MAAO2Q,EAHV,EAGUA,UAAWd,EAHrB,EAGqBA,QAHrB,IAEGtU,UAEAxD,KACN0O,gBALG,MAKQ,KALR,EAOCnM,EAAS,GACf,GAAI0F,EAAM1F,OAAQ,CACd,IAAM+M,EAAOC,YAAKtH,EAAM1F,QACxBA,EAAOI,KAAP,MAAAJ,EAAe+M,GAEnB,IAGMI,EAAchP,IAAGwV,eAAe,CAClCrR,OAAQoD,EACR2H,WAAYlB,EACZ+E,MAAO,UACLxF,EACF3L,EAAOoN,GAAezH,EAAM3F,KAKhC,OAJI2J,IACA3J,EAAO2F,EAAM3F,MAGT,mBACJ,mBAAK7C,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAeT,OAAQD,KAAKN,MAAMO,OAAQuD,OAAQA,EAAQnB,GAAI6G,EAAM7G,GAAIyW,SAAUe,EAAWd,QAASA,MAG9G,mBAAKrY,MAAM,YACP,mBAAKA,MAAM,kCAAkCE,MAAUsI,EAAMwR,QAAU,iCAAmC,IACtG,mBAAKrY,GAAG,cAAcxB,QAASb,KAAKya,gBAAiBjV,UAAS0D,EAAM7G,IAChE,YAAC,IAAD,CAAU4O,SAAUtP,IAAGuP,cAAc3N,EAAM2F,EAAM1F,OAAQmM,GAAWwB,aAAcxP,IAAGyP,uBACpFlI,EAAMyG,WAAaA,GAAY,oBAC1BzC,GAAgByD,EAAc,mBAC5B,sBAAQnQ,KAAK,SAASE,MAAM,iCAAiCG,QAASb,KAAKkN,cAAc,iBAAGxM,MAAM,eAAlG,KAAmH,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBACjH,mBACF,sBAAQ7B,KAAK,SAASE,MAAM,iCAAiCG,QAASb,KAAKiP,WAAW,iBAAGvO,MAAM,eAA/F,IAA+G,YAAC,IAAD,CAAM2B,GAAG,qBAAT,2B,GAhFhHK,e,EA2FzBiY,EADLlb,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMJqP,UAAY,SAACtN,GAAM,MACDA,EAAEsC,OAAOsJ,QAAQ,OAAOC,QAC9BP,EAAiB,EAAKjN,MAAtBiN,aACRA,EAHe,EACb1K,IADa,EACT2M,IAGN,EAAKpP,SAAS,CAAEmN,kBAXD,EAcnB0N,gBAAkB,SAAChZ,GACf,GAA2B,MAAvBA,EAAEsC,OAAOoQ,UACT,OAAO,EAFU,IAIb9R,EAAOZ,EAAEsC,OAAOsJ,QAAQ,gBAAgBC,QAAxCjL,GACJA,GACAiS,gBAAM,YAAYjS,IApBP,EAwBnB4M,UAAY,SAAOxN,GAAP,8CAOR,OANAA,EAAE2N,iBACF3N,EAAE2E,kBACM8C,EAAU,EAAKxJ,MAAfwJ,MACWhJ,GAJX,EAI0B,EAAKR,MAAMO,QAA1BC,WACXe,EALA,EAIAwD,UACAxD,KACR,EAAKrB,SAAS,CAAEsN,aAAc,IAC9B,gBAAMhN,EAAW+O,UAAU,CAAE/F,QAAOjI,UAApC,MAA2C,yDA/B5B,EAkCnBiM,aAAe,SAACzL,GACZA,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKxG,SAAS,CAAEsN,aAAc,KArCf,EAwCnBiK,eAAiB,WAAM,MAEe,EAAKzX,MAAMO,OAArCwE,EAFW,EAEXA,UAFW,EAIWA,EAAtBxD,KACN0O,SACqBhO,IAAGwV,eAAe,CACrCrR,OANc,EAAKpG,MAAfwJ,MAOJ2H,gBARe,MAKN,KALM,EASf6D,MAAO,UAGP,EAAK9U,SAAS,CAAEsN,aAAc,KAlDlC,EAAKpN,MAAQ,CACTiN,aAAc,IAHH,E,kCAwDnB6N,mBAAA,WACI5a,KAAKmX,kB,EAGTpX,OAAA,WAAS,MACkCC,KAAKF,MAAtBoN,EADjB,EACiBA,aADjB,EAE6BlN,KAAKN,MAAMO,OAFxC,EAGiCD,KAAKN,MAAnCwJ,EAHH,EAGGA,MAAO2Q,EAHV,EAGUA,UAAWd,EAHrB,EAGqBA,QAHrB,IAEGtU,UAEAxD,KACN0O,gBALG,MAKQ,KALR,EAOCnM,EAAS,GACf,GAAI0F,EAAM1F,OAAQ,CACd,IAAM+M,EAAOC,YAAKtH,EAAM1F,QACxBA,EAAOI,KAAP,MAAAJ,EAAe+M,GAEnB,IAGMI,EAAchP,IAAGwV,eAAe,CAClCrR,OAAQoD,EACR2H,WAAYlB,EACZ+E,MAAO,SAEPnR,EAAOoN,GAAezH,EAAM3F,KAKhC,OAJI2J,IACA3J,EAAO2F,EAAM3F,MAGT,mBACJ,mBAAK7C,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAeT,OAAQD,KAAKN,MAAMO,OAAQuD,OAAQA,EAAQnB,GAAI6G,EAAM7G,GAAIyW,SAAUe,EAAWd,QAASA,MAI9G,mBAAKrY,MAAM,YACP,mBAAKA,MAAM,kCAAkCE,MAAUsI,EAAMwR,QAAU,iCAAmC,IAEtG,mBAAKrY,GAAG,cAAcmD,UAAS0D,EAAM7G,IACjC,YAAC,IAAD,CAAU4O,SAAUtP,IAAGuP,cAAc3N,EAAM2F,EAAM1F,OAAQmM,GAAWwB,aAAcxP,IAAGyP,uBACpFlI,EAAMyG,WAAaA,GAAY,oBAC1BzC,GAAgByD,EAAc,mBAC5B,sBAAQnQ,KAAK,SAASE,MAAM,sBAAsBG,QAASb,KAAKkN,cAAc,iBAAGxM,MAAM,eAAvF,KAAwG,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBACtG,mBACF,sBAAQ7B,KAAK,SAASE,MAAM,sBAAsBG,QAASb,KAAKiP,WAAW,iBAAGvO,MAAM,eAApF,IAAoG,YAAC,IAAD,CAAM2B,GAAG,qBAAT,2BAKhH6G,EAAMyB,KAAOzB,EAAM4B,MAAQ5B,EAAM2B,MAAQ,IAAM,mBAC/C,mBAAKnK,MAAM,wBAAwBE,MAAUsI,EAAMwR,QAAU,iCAAmC,IAC5F,mBAAKha,MAAM,OACNwI,EAAMyB,KAAO,mBACV,mBAAKjK,MAAM,mBAAmBE,MAAM,qBAChC,iBAAGsB,KAAMP,IAAGkZ,MAAM3R,EAAMyB,KAAM5G,OAAO,SAAS2V,IAAI,cAC9C,iBAAGhZ,MAAM,qBACRwI,EAAMwB,QAAU,mBACZxB,EAAMwB,SACL,mBACF,YAAC,IAAD,CAAMrI,GAAG,yBAAT,kBAKf6G,EAAM4B,MAAQ,mBACX,mBAAKpK,MAAM,gBAAgBE,MAAM,qBAC7B,wBACI,oBAAMF,MAAM,uBAAsB,YAAC,IAAD,CAAM2B,GAAG,0BAAT,gBAAlC,KADJ,IACqG6G,EAAM4B,QAIlH5B,EAAM2B,MAAQ,GAAK,mBAChB,mBAAKnK,MAAM,iBAAiBE,MAAM,qBAC9B,wBACKsI,EAAM4R,WAAa,oBAAMpa,MAAM,uBAAuBwI,EAAM0B,UADjE,IACoFtJ,IAAKmI,OAAOP,EAAM2B,MAAO,Y,GApIvHnI,e,EAiJpBqY,EADLtb,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMJqP,UAAY,SAACtN,GAAM,MACDA,EAAEsC,OAAOsJ,QAAQ,OAAOC,QAC9BP,EAAiB,EAAKjN,MAAtBiN,aACRA,EAHe,EACb1K,IADa,EACT2M,IAGN,EAAKpP,SAAS,CAAEmN,kBAXD,EAcnB0N,gBAAkB,SAAChZ,GACf,GAA2B,MAAvBA,EAAEsC,OAAOoQ,UACT,OAAO,EAFU,IAIb9R,EAAOZ,EAAEsC,OAAOsJ,QAAQ,gBAAgBC,QAAxCjL,GACJA,GACAiS,gBAAM,YAAYjS,IApBP,EAwBnB4M,UAAY,SAAOxN,GAAP,8CAOR,OANAA,EAAE2N,iBACF3N,EAAE2E,kBACM8C,EAAU,EAAKxJ,MAAfwJ,MACWhJ,GAJX,EAI0B,EAAKR,MAAMO,QAA1BC,WACXe,EALA,EAIAwD,UACAxD,KACR,EAAKrB,SAAS,CAAEsN,aAAc,IAC9B,gBAAMhN,EAAW+O,UAAU,CAAE/F,QAAOjI,UAApC,MAA2C,yDA/B5B,EAkCnBiM,aAAe,SAACzL,GACZA,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKxG,SAAS,CAAEsN,aAAc,KArCf,EAwCnBiK,eAAiB,WAAM,MAEe,EAAKzX,MAAMO,OAArCwE,EAFW,EAEXA,UAFW,EAIWA,EAAtBxD,KACN0O,SACqBhO,IAAGwV,eAAe,CACrCrR,OANc,EAAKpG,MAAfwJ,MAOJ2H,gBARe,MAKN,KALM,EASf6D,MAAO,UAGP,EAAK9U,SAAS,CAAEsN,aAAc,KAlDlC,EAAKpN,MAAQ,CACTiN,aAAc,IAHH,E,kCAwDnB6N,mBAAA,WACI5a,KAAKmX,kB,EAGTpX,OAAA,WAAS,MACkCC,KAAKF,MAAtBoN,EADjB,EACiBA,aADjB,EAE6BlN,KAAKN,MAAMO,OAFxC,EAGiCD,KAAKN,MAAnCwJ,EAHH,EAGGA,MAAO2Q,EAHV,EAGUA,UAAWd,EAHrB,EAGqBA,QAHrB,IAEGtU,UAEAxD,KACN0O,gBALG,MAKQ,KALR,EAOCnM,EAAS,GACf,GAAI0F,EAAM1F,OAAQ,CACd,IAAM+M,EAAOC,YAAKtH,EAAM1F,QACxBA,EAAOI,KAAP,MAAAJ,EAAe+M,GAEnB,IAGMI,EAAchP,IAAGwV,eAAe,CAClCrR,OAAQoD,EACR2H,WAAYlB,EACZ+E,MAAO,SAEPnR,EAAOoN,GAAezH,EAAM3F,KAKhC,OAJI2J,IACA3J,EAAO2F,EAAM3F,MAGT,mBAEJ,mBAAK7C,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAeT,OAAQD,KAAKN,MAAMO,OAAQuD,OAAQA,EAAQnB,GAAI6G,EAAM7G,GAAIyW,SAAUe,EAAWd,QAASA,MAI9G,mBAAKrY,MAAM,YACP,mBAAKA,MAAM,kCAAkCE,MAAUsI,EAAMwR,QAAU,iCAAmC,IACtG,mBAAKrY,GAAG,cAAcxB,QAASb,KAAKya,gBAAiBjV,UAAS0D,EAAM7G,IAChE,YAAC,IAAD,CAAU4O,SAAUtP,IAAGuP,cAAc3N,EAAM2F,EAAM1F,OAAQmM,GAAWwB,aAAcxP,IAAGyP,uBACpFlI,EAAMyG,WAAaA,GAAY,oBAC1BzC,GAAgByD,EAAc,mBAC5B,sBAAQnQ,KAAK,SAASE,MAAM,sBAAsBG,QAASb,KAAKkN,cAAc,iBAAGxM,MAAM,eAAvF,KAAwG,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBACtG,mBACF,sBAAQ7B,KAAK,SAASE,MAAM,sBAAsBG,QAASb,KAAKiP,WAAW,iBAAGvO,MAAM,eAApF,IAAoG,YAAC,IAAD,CAAM2B,GAAG,qBAAT,2BAKhH6G,EAAMyB,KAAOzB,EAAM4B,MAAQ5B,EAAM2B,QAAU,mBAC3C,mBAAKnK,MAAM,wBAAwBE,MAAUsI,EAAMwR,QAAU,iCAAmC,IAC5F,mBAAKha,MAAM,OACNwI,EAAMyB,KAAO,mBACV,mBAAKjK,MAAM,mBAAmBE,MAAM,qBAChC,iBAAGsB,KAAMP,IAAGkZ,MAAM3R,EAAMyB,KAAM5G,OAAO,SAAS2V,IAAI,cAC9C,iBAAGhZ,MAAM,qBACRwI,EAAMwB,QAAU,mBACZxB,EAAMwB,SACL,mBACF,YAAC,IAAD,CAAMrI,GAAG,yBAAT,wB,GArHbK,e,EAqIzB+J,EADLhN,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAQJoT,WAAa,SAACrR,GACVA,EAAE2E,kBACF3E,EAAE2N,iBAEF,EAAKxP,SAAS,CAAEmT,UADK,EAAKjT,MAAlBiT,YAZO,EAgBtB8G,UAAY,iDAGCmB,EAHD,IAQCC,EASK,OAbT/a,EAAe,EAAKR,MAAMO,OAA1BC,YAEM2Z,EAAc,EAAK/Z,MAAnB+Z,WAHFmB,EAFY,EAAKtb,MAAfwJ,MACA7G,KAKa,EACf4Y,EAAUC,OAAOC,KAAKtB,GAC5B,EAAKja,SAAS,CAAEia,YAAWoB,YAC3BhX,YAAW,WAAM,IACL4V,EAAc,EAAK/Z,MAAnB+Z,iBACDA,EAAUmB,GACjB,IAAMC,EAAUC,OAAOC,KAAKtB,GAC5B,EAAKja,SAAS,CAAEia,YAAWoB,cAC5B,MAEQ,gBAAM/a,EAAW2Z,UAAU,CAAExX,GAAI2Y,KAAjC,MAA2C,uBAA3C,EAA2C,mCAjCvC,EAsCtBlH,iBAAmB,SAACrS,GACnB,IAAMuZ,EAAUvZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAQjL,GAC3CwK,EAAmB,EAAK/M,MAAxB+M,eACEA,EAAemO,UACRnO,EAAemO,GAEtBnO,EAAemO,IAAW,EAEpC,EAAKpb,SAAS,CACbiN,mBACE,WACE,EAAKzI,SAAS4W,IACjB,EAAK5W,SAAS4W,GAASpN,YAlDJ,EAuDnBwN,oBAAsB,WAClB,EAAKxb,SAAS,CACnBiN,eAAgB,MAzDI,EA6DtBwO,sBAAwB,SAAC5Z,GACxB,IAAMuZ,EAAUvZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAQjL,GAC3CuX,EAAoB,EAAK9Z,MAAzB8Z,gBACEA,EAAgBoB,UACTpB,EAAgBoB,GAEvBpB,EAAgBoB,IAAW,EAErC,EAAKpb,SAAS,CACbga,qBAtEoB,EA0EnB7K,UAAY,SAACtN,GAAM,MACDA,EAAEsC,OAAOsJ,QAAQ,OAAOC,QAC9BP,EAAiB,EAAKjN,MAAtBiN,aACRA,EAHe,EACb1K,IADa,EACT2M,IAGN,EAAKpP,SAAS,CAAEmN,kBA9ED,EAuFnBgB,WAAa,SAACtM,GAAM,IACRY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,KAAKC,QAA7BjL,GADQ,EAEI,EAAKvC,MAAvBkO,gBAFc,MAEH,GAFG,EAGhBA,EAAS3L,IAAO2L,EAAS3L,GAC/B,EAAKzC,SAAS,CACJ0b,gBAAiB,GACjBpN,SAAU,GACnBF,cA9FoB,EAkGnBG,WAAa,SAAC1M,GAAM,IACRY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlCjL,GADQ,EAEI,EAAKvC,MAAvBoO,gBAFc,MAEH,GAFG,EAGhBA,EAAS7L,IAAO6L,EAAS7L,GAC/B,EAAKzC,SAAS,CACJ0b,gBAAiB,GAC1BpN,WACSF,SAAU,MAzGC,EA6GnBuN,kBAAoB,SAAC9Z,GAAM,IACfY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlCjL,GADe,EAEI,EAAKvC,MAA9Bwb,uBAFqB,MAEH,GAFG,EAGvBA,EAAgBjZ,IAAOiZ,EAAgBjZ,GAC7C,EAAKzC,SAAS,CACb0b,kBACSpN,SAAU,GACVF,SAAU,MApHC,EAwHnBwN,YAAc,SAAO/Z,GAAP,wCAGV,OAFQY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlCjL,GAER,gBADuB,EAAK3C,MAAMO,OAA1BC,WACSsb,YAAY,CAAEnZ,QAA/B,MAAoC,sBACpC,EAAKzC,SAAS,CACVsO,SAAU,GACVF,SAAU,KAHsB,mCA3HrB,EAkInByN,iBAAmB,SAAOha,GAAP,wCAGf,OAFQY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlCjL,GAER,gBADuB,EAAK3C,MAAMO,OAA1BC,WACSwb,eAAe,CAAErZ,QAAlC,MAAuC,sBACvC,EAAKzC,SAAS,CACVsO,SAAU,GACVF,SAAU,KAHyB,mCArIxB,EA4InB2N,YAAc,SAAOla,GAAP,0CAGV,OAFQY,EAAOZ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlCjL,GACAnC,EAAe,EAAKR,MAAMO,OAA1BC,WACR,gBAAMA,EAAW+Z,UAAU9N,SAAS9J,EAAI,IAAK,UAAW,GAAG,IAA3D,MAAgE,sBAChEnC,EAAWga,iBAAiB/N,SAAS9J,EAAI,IAAK,UAAW,GACzD,EAAKzC,SAAS,CACVoa,UAAW,GACpBsB,gBAAiB,GACRpN,SAAU,GACVF,SAAU,KANkD,mCA/IjD,EAyJnB4N,SAAW,WACP,EAAKhc,SAAS,CACVoa,UAAW,GACpBsB,gBAAiB,GACRpN,SAAU,GACVF,SAAU,MA9JC,EAkKnByM,gBAAkB,SAAChZ,GACf,GAA2B,MAAvBA,EAAEsC,OAAOoQ,UACT,OAAO,EAFU,IAIb9R,EAAOZ,EAAEsC,OAAOsJ,QAAQ,gBAAgBC,QAAxCjL,GACJA,GACAiS,gBAAM,YAAYjS,IAxKP,EA4KnB0R,UAAY,SAACtS,GAAM,MACcA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QACnC,EAAK5N,MAAMO,OAAxB+L,SACCgI,SAAS,CAAErJ,IAHL,EACPA,IAEiBvI,MAHV,EACFA,MAEmB6R,KAHjB,EACKA,QA3KpB,EAAKnU,M,+VAAL,IACOP,GAEb,EAAK6E,SAAW,GALK,E,kCAiFbsI,sBAAN,SAA4BhN,GAA5B,iCAGF,YAHE,IAA4BA,MAAQM,KAAKN,OAG3C,gBADuBA,EAAMO,OAArBC,WACSiL,eAAe,CAAE0Q,QAFRnc,EAAZmc,WAEd,MAA4C,sDAH1C,a,EAiHA9b,OAAA,WAAS,IAaD0C,EACAT,EACAqT,EACAC,EAhBC,SACuItV,KAAKF,MAAzI+M,EADH,EACGA,eAAgBkG,EADnB,EACmBA,SADnB,IAC2C/E,gBAD3C,MACsD,GADtD,MAC0DE,gBAD1D,MACqE,GADrE,MACyEoN,uBADzE,MAC2F,GAD3F,EAC+F1B,EAD/F,EAC+FA,gBAAiBC,EADhH,EACgHA,UAAWoB,EAD3H,EAC2HA,QAD3H,EAEyFjb,KAAKN,MAA3FwJ,EAFH,EAEGA,MAAO0D,EAFV,EAEUA,gBAFV,IAEsCnM,mBAFtC,MAEoD,aAFpD,MAE8DmU,mBAF9D,MAE4E,aAF5E,IAGuC5U,KAAKN,MAAMO,OAA/CwE,EAHH,EAGGA,UAAWvE,EAHd,EAGcA,WAAY8L,EAH1B,EAG0BA,SAH1B,EAIuCvH,EAApCxD,KAAMyO,OAJT,MAIuB,GAJvB,EAI2BzD,EAAYxH,EAAZwH,QACd6I,EAAgB9I,EAAhB8I,YAEZjT,EAAO3B,EAAW+U,eAAe/L,EAAMrH,OAAS,GAChDZ,EAAOf,EAAWkB,eAAe8H,EAAMjI,OAAS,GAChDuB,EAAQb,IAAGC,SAAS,CAAEX,OAAMY,OAAMC,SAAU,OAAQgE,OAAQoD,IAE5DuM,KAAe5T,IAAQA,EAAK6T,UAAW7T,EAAK6T,QAAQC,MAAK,SAAAC,GAAC,OAAIA,IAAMlG,EAAYrN,MAMlFR,GAAQA,EAAKG,MACbS,EAAYd,IAAGI,iBAAiBF,GAChCG,EAAOL,IAAGM,YAAYJ,GACtBwT,EAAW1T,IAAGM,YAAYhB,GACtBA,EAAK2I,UAAY8F,EAAYvN,SAAWlB,EAAKkB,SAC7CmT,EAAWrU,EAAK2I,SAAS8M,YAAc,KAA5B,UAA6CzV,EAAKkB,SAE1DlB,GAAQA,EAAKoB,KACpBI,EAAYd,IAAGI,iBAAiBd,GAChCe,EAAOL,IAAGM,YAAYhB,IA1BrB,IA4BGX,EAAkC4I,EAAlC5I,MAAOC,EAA2B2I,EAA3B3I,SA5BV,EA4BqC2I,EAAjB4S,eA5BpB,MA4B8B,GA5B9B,EA6BCC,GAAgB7S,EAAM5I,OAAS4I,EAAM5I,MAAM6P,WAAU,SAAA1O,GAAC,OAAIA,EAAER,OAASyO,EAAYrN,OAAO,EACxFyT,GAAiBjU,EAAKkU,UAAYlU,EAAKkU,UAAUpV,OAAS,EAE1DqV,GAAanU,EAAK6T,SAAW7T,EAAK6T,QAAQO,QAAQvG,EAAYrN,KAAO,EACrE6T,GAAcrU,EAAKkU,WAAalU,EAAKkU,UAAUE,QAAQvG,EAAYrN,KAAO,EAC1E8T,GAAqBtU,EAAKuU,gBAAkBvU,EAAKuU,eAAejG,WAAU,SAAA1O,GAAC,OAAIA,EAAEY,KAAOqN,EAAYrN,OAAO,EAlC5G,GAoCmD6G,EAAhD0N,+BApCH,OAoC4B,GApC5B,GAqCCC,GAAQlV,IAAGmV,SAAS5N,EAAM6N,YAC1BC,GAAYrV,IAAGsV,aAAa/N,EAAM6N,YAExC,OAAQ,mBAaM9K,GAAYyD,EAAYrN,KAAOpB,EAAKoB,GAAO,mBACzC,oBAAM3B,MAAM,8CACR,iBAAGA,MAAM,oBAAoBG,QAASb,KAAK+N,WAAYvI,UAAS0D,EAAM7G,OAExE,oBACA2T,KAAeE,KAAgBC,IAAsBtU,EAAKH,OAAS,GAAK,oBAAMhB,MAAM,eAClF,YAAC,IAAD,CAAYT,OAAQD,KAAKN,MAAMO,OAAQ4B,KAAMA,EAAM0X,YAAY,EAAMyC,QAAQ,EAAMC,WAAY,gCAGtGjO,EAAS9E,EAAM7G,KAAO,mBACnB,mBAAK3B,MAAM,qEAAqEE,MAAM,wDACjF8O,EAAYrN,KAAOpB,EAAKoB,GAAK,mBAC1B,sBAAQ3B,MAAM,mCAAmCG,QAASb,KAAKmO,WAAY3I,UAAS0D,EAAM7G,IAAI,iBAAG3B,MAAM,gBAAvG,SACA,uBACA,sBAAQA,MAAM,+CAA+CG,QAASb,KAAKub,kBAAmB/V,UAAS0D,EAAM7G,IAAI,iBAAG3B,MAAM,qBAA1H,YACE,mBACF,sBAAQA,MAAM,mCAAmCG,QAASb,KAAKwb,YAAahW,UAAS0D,EAAM7G,IAAI,iBAAG3B,MAAM,gBAAxG,WACCuL,GAAW,mBACR,uBACA,sBAAQvL,MAAM,+CAA+CG,QAASb,KAAKyb,iBAAkBjW,UAAS0D,EAAM7G,IACxG,iBAAG3B,MAAM,kBADb,yBAQhB,mBAAKA,MAAM,4BACP,mBACIA,MAAK,sFACLE,MAAO4B,EAAQ,0BAA0BA,EAA7B,8BAAkE,KAE5EA,GAAS,mBAAK9B,MAAM,aAAaE,MAAM,sCAAsC6B,IAEnF,mBAAK/B,MAAM,iCAAiCE,MAAM,uBAC9C,kBAAIF,MAAM,yBAAyBE,MAAK,wBAAyBsI,EAAMwR,QAAU,iCAAmC,KAC/G7Y,EAAKH,OAAS,mBACX,iBAAGQ,KAAI,iBAAmBL,EAAKM,OAAUtB,QAAS,SAACY,GAAD,OAAOhB,EAAYgB,EAAGI,EAAKM,SAASzB,MAAM,kBAAkBsB,IAE5G,mBACDA,GAGJgU,KAAenU,EAAKH,QAAU,sBAAQlB,KAAK,SAASE,MAAM,iCACvD8E,UAAS0D,EAAM7G,GACfxB,QAASb,KAAKqb,uBAEd,iBAAG3a,MAAM,kCAIjB,mBAAKA,MAAM,OAAOE,MAAUsI,EAAMwR,QAAU,iCAAmC,IAC1ExR,EAAMuB,QAAU,mBACb,qBAAO/J,MAAM,mBACT,iBAAGA,MAAM,uBAGD,IAAfwI,EAAM1I,KAAa,mBAChB,qBAAOE,MAAM,cAAa,YAAC,IAAD,CAAM2B,GAAG,mBAAT,aAA1B,OACE,mBACD6G,EAAMoO,MAAQ,qBAAO5W,MAAM,aAAaG,QAASb,KAAK8S,YAClDC,EAAWzR,IAAKiW,WAAWrO,EAAMoO,KAAM,CAAE5F,OAAQ,QAAS8F,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAAepW,IAAKkQ,eAAetI,EAAMoO,KAAM,IAAInT,KAAQ,CAAEuN,OAAQ,YAG9J,IAAjBxI,EAAMxH,OAAe,mBAClB,qBAAOhB,MAAM,mBACT,iBAAGA,MAAM,0BAEX,mBACF,qBAAOA,MAAM,mBACT,iBAAGA,MAAM,iBADb,KACiCY,IAAKmI,OAAOqM,IAD7C,MAIHT,GAAY,mBACT,qBAAO3U,MAAM,mBACR4U,EAAW,mBACR,iBAAG5U,MAAM,gBADD,IACkB,iBAAGwB,KAAMoT,GAAWD,IAC5C,mBACF,iBAAG3U,MAAM,gBADP,IACyB2U,KAItCuB,IAA0BA,GAAuBmB,iBAAmB,mBACjE,qBAAOrX,MAAM,mBACT,iBAAGA,MAAM,0BADb,IACyCkW,GAAuBmB,mBAIvE9L,GAAW,mBACRvL,MAAM,qEACNE,MAAM,mBAEN,qBAAOF,MAAM,mBAAb,QACCob,GAAWA,EAAQnb,OAAS,GAAK,mBAC9B,qBAAOD,MAAM,oBACT,iBAAGA,MAAM,gBADb,IAC+Bob,EAAQnb,SAG1CiW,IAA0BA,GAAuBsB,mBAAqB,mBACnE,qBAAOxX,MAAM,cACT,iBAAGA,MAAM,0BADb,IACyCkW,GAAuBsB,oBAGnEjX,EAAKkX,YAAc,mBAChB,oBAAMzX,MAAM,4DACP,CAAC,WAAY,eAAgB,SAASK,KAAI,SAAAU,GAAC,OAAI,mBAC5C,oBAAMf,MAAM,mBACPO,EAAKkX,WAAW1W,UAMhCuV,IAAa,mBACV,qBAAOtW,MAAM,mBAAb,MACQsW,GAAUoB,OAElB,qBAAO1X,MAAM,mBAAb,MACQsW,GAAUqB,QADlB,IAC4B/W,IAAKgX,SAAStB,GAAUuB,eAAiB,mBAAE,iBAAG7X,MAAOiB,IAAG6W,iBAAiBxB,GAAUuB,kBAE/G,qBAAO7X,MAAM,mBAAb,MACQY,IAAKmI,OAAOuN,GAAUyB,YAAc,IAAM,GADlD,KACwDnX,IAAKgX,SAAStB,GAAU0B,mBAAqB,mBAAE,iBAAGhY,MAAOiB,IAAG6W,iBAAiBxB,GAAU0B,sBAE9IxP,EAAMyP,mBAAqBzP,EAAMyP,kBAAkBC,kBAAoB,GAAK,qBAAOlY,MAAM,mBAAb,MACrEY,IAAKmI,OAAOP,EAAMyP,kBAAkBC,kBAAmB,IAE9D1P,EAAM2P,YAAc3P,EAAM2P,WAAW9X,KAAI,SAAAuJ,GAAG,OAAI,mBAC7C,oBAAM5J,MAAM,4DAA4D4J,WAc5F,mBAAK5J,MAAM,YACP,mBAAKA,MAAM,kBAAkBE,MAAUsI,EAAMwR,QAAU,iCAAmC,IACrFxM,EAAShF,EAAM7G,KAAO,mBACnB,YAACyX,EAAD,CACI7Z,OAAQD,KAAKN,MAAMO,OACnBiJ,MAAOA,EACPiG,IAAG,cAAgBjG,EAAM7G,GACzBY,SAAUjD,KAAK4b,YAGtBN,EAAgBpS,EAAM7G,KAAO,mBAAK3B,MAAM,sBACrC,sBAAQA,MAAM,4BAA4BG,QAASb,KAAK2b,YAAanW,UAAS0D,EAAM7G,IAAI,iBAAG3B,MAAM,qBAAjG,WACA,sBAAQA,MAAM,gCAAgCG,QAASb,KAAKub,kBAAmB/V,UAAS0D,EAAM7G,IAAI,iBAAG3B,MAAM,wBAA3G,gBAKTwI,EAAM1I,MAAsB,GAAd0I,EAAM1I,OAAc,YAACga,EAAD,CAAkBva,OAAQD,KAAKN,MAAMO,OAAQiJ,MAAOA,EAAOiG,IAAG,sBAAwBjG,EAAM7G,GAAMwX,UAAW7Z,KAAK6Z,UAAWd,QAASc,EAAWsB,KAAMF,IAC7K,GAAd/R,EAAM1I,MAAa,YAACma,EAAD,CAAa1a,OAAQD,KAAKN,MAAMO,OAAQiJ,MAAOA,EAAOiG,IAAG,iBAAmBjG,EAAM7G,GAAMwX,UAAW7Z,KAAK6Z,UAAWd,QAASc,EAAWsB,KAAMF,IAClJ,GAAd/R,EAAM1I,MAAa,YAACua,EAAD,CAAkB9a,OAAQD,KAAKN,MAAMO,OAAQiJ,MAAOA,EAAOiG,IAAG,sBAAwBjG,EAAM7G,GAAMwX,UAAW7Z,KAAK6Z,UAAWd,QAASc,EAAWsB,KAAMF,IAE3K,mBAAKva,MAAM,uCACP,mBAAKA,MAAM,QACP,YAAC,IAAD,CACIT,OAAQD,KAAKN,MAAMO,OACnBK,MAAOA,EACPC,SAAUA,EACVC,KAAK,QACLC,YAAaA,EACbmU,YAAaA,KAGpBiC,GAAQ,GAAK,mBACV,uBACI,YAAC,IAAD,CACI5W,OAAQD,KAAKN,MAAMO,OACnB4W,MAAOA,GACP/Q,OAAQoD,EACR1I,KAAK,QACLiV,YAAaA,EACbxJ,QAASA,EACTxL,YAAaA,EACbmU,YAAaA,OAM5BgF,EAAgB1Q,EAAM7G,KAAO,mBAC1B,yBACI,mBAAK3B,MAAM,mBAAmBwb,KAAK,SAC/B,oBAAMxb,MAAM,wBACR,iBAAGA,MAAM,2CAEb,qBACI,YAAC,IAAD,CAAM2B,GAAG,sBAAT,yFAEJ,qBACI,YAAC,IAAD,CAAMA,GAAG,sBAAT,mHAEJ,qBACI,iBAAGH,KAAI,eAAiBL,EAAKQ,IAAM,YAAC,IAAD,CAAMA,GAAG,sBAAT,kBAMnD,uBACI,mBAAK3B,MAAM,OACP,mBAAKA,MAAM,mBACP,sBACIF,KAAK,SACLE,MAAK,sCAAuCqb,GAAgB,UAAY,aAAnE,sBAAmGA,GAAgB,eAAiB,IAApI,iBACLvW,UAAS0D,EAAM7G,GACfxB,QAASb,KAAK6Z,WAEd,iBAAGnZ,OAAUqb,GAAgB,mBAAqB,OAA1C,kBANZ,IAMgFA,GAAgB,YAAC,IAAD,CAAM1Z,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,SAGjJ,mBAAK3B,MAAM,mBACP,sBACIF,KAAK,SACLE,MAAM,kEACN8E,UAAS0D,EAAM7G,GACfxB,QAASb,KAAK8T,kBAEd,iBAAGpT,MAAM,mBANb,IAMiC,YAAC,IAAD,CAAM2B,GAAG,wBAAT,eAGpCyS,EAAc,mBACX,mBAAKpU,MAAM,mBACP,sBAAQA,MAAM,kEACVG,QAASb,KAAK+T,UACdyF,WAAA,qCAA+CtQ,EAAM/G,OACrDsX,aAAA,UAAsBvQ,EAAM9G,OAE5B,iBAAG1B,MAAM,iBALb,IAK+B,YAAC,IAAD,CAAM2B,GAAG,eAAT,UAGjC,mBACF,mBAAK3B,MAAM,mBACP,iBAAGA,MAAM,kEACLwB,KAAI,qCAAuCgH,EAAM/G,OACjD4B,OAAO,SACP2V,IAAI,aACJC,eAAA,GAEA,iBAAGjZ,MAAM,iBANb,IAM+B,YAAC,IAAD,CAAM2B,GAAG,eAAT,YAQ/C,mBAAK3B,MAAM,QACP,YAAC,IAAD,CACIT,OAAQD,KAAKN,MAAMO,OACnBiJ,MAAOA,EACP7E,IAAI,KACJC,OAAO,IACPmL,SAAS,EACT7C,gBAAiBA,EACjBtD,SAAUtJ,KAAKob,sBAElBvO,EAAe3D,EAAM7G,KAAO,YAAC,IAAD,CACzBpC,OAAQD,KAAKN,MAAMO,OACnBiJ,MAAOA,EACP9E,SAAU,SAAAqE,GAAC,OAAI,EAAKrE,SAAS8E,EAAM7G,IAAMoG,GACzCvF,eAAgBlD,KAAKoE,SACrBC,IAAI,KACJC,OAAO,IACP6K,IAAG,iBAAmBjG,EAAM7G,Q,GAzgB1BK,e,EAohBf+J,Q,wHC1mCT0P,G,oBADL1c,Y,kLAEGM,OAAA,WAAS,MACsBC,KAAKN,MAD3B,IACHmE,aADG,MACK,EADL,IAEW7D,KAAKN,MAAMO,OAAzBwE,UACAxD,KACA2I,SAEF,YANK,MAIQ,GAJR,GAMQC,SACD,mBACJ,wBACKvI,IAAKmI,OAf1B,SAA6B5F,GACzB,OAAiB,EAARA,EAAU,EAAK,GAcKuY,CAAoBvY,GAAQ,GAD7C,OAMN,mBACE,wBACKvC,IAAKmI,OAAO5F,EAAO,GADxB,Q,GAhBcnB,e,GAuBXyZ,Q,wHCvBTE,G,oBADL5c,Y,kLAEGM,OAAA,WAAS,MACsBC,KAAKN,MAD3B,IACHmE,aADG,MACK,EADL,IAEW7D,KAAKN,MAAMO,OAAzBwE,UACAxD,KACA2I,SAEF,YANK,MAIQ,GAJR,GAMQC,SACD,mBACJ,wBACKvI,IAAKmI,OAf1B,SAAoB5F,GAChB,OAAO,QAAUA,EAcYyY,CAAWzY,GAAQ,GADpC,QAMN,mBACE,wBACKvC,IAAKmI,OAAO5F,EAAO,GADxB,S,GAhBSnB,e,GAuBN2Z,Q,6cC1BT9c,G,oBAAe,CACpBgd,YAAa,KAIRC,EADL/c,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAaP+c,kBAAoB,SAAChb,GAAM,MACa,EAAK/B,MAAMO,OAApCE,EADY,EACZA,UACAc,EAFY,EACDwD,UACXxD,KACAY,EAASJ,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAApCzL,KACR1B,EAAUuc,cAAcvQ,SAAStK,EAAM,IAAKZ,GAJxB,IAKlBsb,EAAgB,EAAKzc,MAArByc,YACRA,EAAY1a,IAAQ,EACd,EAAKjC,SAAS,CAAE2c,iBArBD,EAwBnBI,UAAY,SAAC9a,GAAS,IACV0a,EAAgB,EAAKzc,MAArByc,YAEAtb,EADc,EAAKvB,MAAMO,OAAzBwE,UACAxD,KACF+U,EAAanU,EAAK6T,SAAW7T,EAAK6T,QAAQvF,WAAU,SAAA1O,GAAC,OAAIA,EAAEY,KAAOpB,EAAKoB,OAAO,EAC9E6T,EAAcrU,EAAKkU,WAAalU,EAAKkU,UAAUE,QAAQhV,EAAKoB,KAAO,EACnEua,EAAY/a,EAAKgb,kBAAoBhb,EAAKgb,iBAAiB5G,QAAQhV,EAAKoB,KAAO,EAC/E8T,EAAqBoG,EAAY1a,EAAKQ,KAAOR,EAAKuU,gBAAkBvU,EAAKuU,eAAejG,WAAU,SAAA1O,GAAC,OAAIA,EAAEY,KAAOpB,EAAKoB,OAAO,EAElI,OAAI2T,EAEI,iBAAGtV,MAAM,gBAGbwV,EAEI,sBACIxV,MAAK,yDACLG,QAAS,EAAKic,aACdrX,SAAS,OACTsX,YAAWlb,EAAKQ,IAEhB,iBAAG3B,MAAM,qBACT,YAAC,IAAD,CAAM2B,GAAG,8BAAT,WAIRua,EAEI,sBACIlc,MAAK,yDACL+E,SAAS,QAET,iBAAG/E,MAAM,2BACT,YAAC,IAAD,CAAM2B,GAAG,4BAAT,aAIR8T,EAEI,sBACIzV,MAAK,yDACL+E,SAAS,QAET,iBAAG/E,MAAM,+BACT,YAAC,IAAD,CAAM2B,GAAG,+BAAT,0BAKR,sBACI3B,MAAK,uDACLG,QAAS,EAAK4b,kBACdM,YAAWlb,EAAKQ,IAEhB,iBAAG3B,MAAM,iCACT,YAAC,IAAD,CAAM2B,GAAG,wBAAT,UA9ER,EAAKvC,M,+VAAL,IACOP,GAHQ,E,0HAOhByd,UAAN,4CAGC,OAFAhd,KAAKJ,SAAS,CAAEqd,WAAW,IAE3B,gBADsBjd,KAAKN,MAAMO,OAAzBE,UACQ+c,WAAW,CAAEC,MAAO,CAAEC,aAAc,EAAGC,MAAO,GAAK7K,MAAO,MAA1E,KAA+E,sBAC/ExS,KAAKJ,SAAS,CAAEqd,WAAW,IADoD,0CAHhF,a,EA8EA5T,kBAAA,WACCrJ,KAAKgd,a,EAGNjd,OAAA,WAAS,aACwBC,KAAKN,MAAMO,OACnCqd,EAFA,EACAnd,UACAmd,oBACMjR,EAHN,EACWL,SAELK,SACd,OAAKiR,GAAsD,IAA/BA,EAAoB3c,OAK/C,mBAAKD,MAAM,qBACE,mBAAKA,MAAK,uGAAwG2L,EAAW,QAAU,SAA7H,cACrB,mBAAK3L,MAAM,mBACV,mBAAKA,MAAM,OACV,mBAAKA,MAAM,UACV,sBAAI,YAAC,IAAD,CAAM2B,GAAG,iCAAT,qBAAJ,OAGF,mBAAK3B,MAAM,OACV,mBAAKA,MAAM,8BAA8BE,MAAM,mBAC7CU,IAAKC,QAAQ+b,IAAwBA,EAAoBvc,KAAI,SAACc,GAC9D,IAAMW,EAAQX,EAAKW,OAASX,EAAKW,MAAMwC,YAAcnD,EAAKW,MAAQ,KAClE,OACC,mBAAK9B,MAAM,OAAOE,MAAM,iBACvB,mBACCF,MAAK,gCACLE,MAAO4B,EAAQ,0BAA0BA,EAAMwC,YAAnC,2DAA2G,iCAErHxC,GAAS,iBAAG9B,MAAM,+BAA+BE,MAAM,sBAE1D,yBACC,mBAAKF,MAAM,iBACV,0BAASmB,EAAKG,OAEf,mBAAKtB,MAAM,iBACTmB,EAAK0b,MAAW1b,EAAK0b,MAArB,KAAiC,GADnC,IACwC1b,EAAKkJ,QAD7C,MAGA,mBAAKrK,MAAM,iBACV,qBAAOA,MAAM,cACXmB,GAAQA,EAAK8V,MAAQ,oBAAMjX,MAAM,IAAG,iBAAGA,MAAM,eAAxB,IAAyCmB,EAAK8V,KAAKhX,QACxEkB,GAAQA,EAAKkU,WAAa,oBAAMrV,MAAM,QAAO,iBAAGA,MAAM,gBAA5B,IAA8CmB,EAAKkU,UAAUpV,WAI3F,uBACE,EAAKgc,UAAU9a,aAvClB,I,GA/FUa,e,EAoJL8Z,O,2bC3JTjd,G,UAAe,CACpBsN,gBAAgB,IASX2Q,EANLC,aAAS,iBAAO,CACbC,QAAS,YAAC,IAAD,CAAMrb,GAAG,cAAT,sBACTkB,KAAM,YAAC,IAAD,CAAMlB,GAAG,WAAT,oE,GAGT5C,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAiDJie,SAAW,2DAKP,OAHQC,OAFD,QACCC,GADD,EACwB,EAAKne,MAAMO,QAAlC4d,SACAD,KAAM,GAFP,MACUnZ,UAGTxD,KACR,gBAAM4c,EAAQF,SAAS,CAAEtb,GAFhBub,EAAIjd,OAAS,EAAIid,EAAI,GAAGvb,GAAK,KAETpB,WALtB,MAIQ,GAJR,GAKiCoB,MAAxC,MAA6C,yDArD7C,EAAKvC,M,+VAAL,IACOP,GAEP,EAAK+a,YAAc,GACzB,EAAKlW,SAAW,GACV,EAAK0Z,UAAYxc,IAAKyc,eAPP,E,0HAUhBC,OAAN,SAAate,GAAb,uDAQWmC,EAkBAoc,EASV,YAnCD,IAAave,MAAQM,KAAKN,OACzBM,KAAKJ,SAAS,CAAEqd,WAAW,IACnBY,GAFT,EAEwD7d,KAAKN,MAAMO,QAA1D4d,QACMK,EAAYle,KAAKN,MAAjBwe,QACMvT,OAJrB,SAE2CqB,SAE5BmS,MAAY,GAJ3B,EAOexO,OAPf,QAEgClL,EAFhC,EAEgCA,WAIjBxD,KACA0O,UAAW,KAP1B,EAQW9N,EAAO,IAHHuc,EALf,EAEkBhe,aAGHge,eAUJvc,EAAO4C,EAAU2H,SAASgS,GAAa,KAC3Bvc,EAAKQ,KACDoC,EAAUyQ,iBAAiB,CAAEC,SAAUtT,EAAKuT,UAAWzF,aAC5DlL,EAAU+Q,aAAa,CAAEhV,KAAMqB,EAAKrB,KAAMmP,aACpC9N,EAAKwc,WACVxc,EAAK0b,MACH1b,EAAKkJ,SAKZJ,EAAI2T,QAAQ,OAAQ,UAC/BL,EAAOtT,EAAI2T,QAAQ,QAAS,WAQlC,gBAAMT,EAAQU,KAAK,CAAEpB,MAAO,CAAEc,OAAMC,cAApC,KAA+C,sBACzCL,EAAQW,UACdxe,KAAKJ,SAAS,CAAEqd,WAAW,IAFoB,0CAnChD,a,EAgDA5T,kBAAA,WACCrJ,KAAKge,U,EAGHvW,0BAAA,SAA0BC,GAElBA,EAAUyW,OAASne,KAAKN,MAAMye,MAC9Bne,KAAKge,OAAOtW,I,EAIpB3H,OAAA,WAAS,MACoCC,KAAKN,MAAMO,OAA5C4d,EADH,EACGA,QADH,EAE8B7d,KAAKN,MAAhCge,EAFH,EAEGA,QAASna,EAFZ,EAEYA,KAAM2a,EAFlB,EAEkBA,QACfC,EAHH,EACuBnS,SAEpBmS,KAHH,IACY1Z,UAGTxD,YAJH,MAIU,GAJV,IAKyC4c,EAAtCD,WALH,MAKS,GALT,EAKaa,EAA4BZ,EAA5BY,KAClB,IAAKxd,IAASA,EAAKoB,KAAOub,GAAsB,IAAfA,EAAIjd,OACjC,OAAIwd,EAAKO,MAAM,aACJ,mBACH,mBAAKhe,MAAM,SACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,2EACP,mBAAKA,MAAM,8BACP,oBAAMA,MAAM,sCACR,iBAAGA,MAAM,uBAEb,sBAAI,YAAC,IAAD,CAAM2B,GAAG,cAAT,0BACJ,uBAAK,YAAC,IAAD,CAAMA,GAAG,aAAT,2BACL,YAAC,IAAD,KACI,iBAAGH,KAAI,oCAAsCwb,EAAtC,KAAkDS,EAAlD,KAA2DD,EAA3D,SAA2E3a,EAAQQ,OAAO,SAAS2V,IAAI,cAC1G,iBAAGhZ,MAAM,uBADb,IACqC,YAAC,IAAD,CAAM2B,GAAG,eAAT,oCAS1D,oBAEX,IAAMsc,EAAKf,EAAI,GACf,OACI,mBACI,mBAAKld,MAAM,SACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,2EACP,uBACI,yBAAO,qBAAOA,MAAM,cAChB,YAAC,IAAD,CAAM2B,GAAG,SAAT,WADG,IAEH,mBAAK6B,IAAQlE,KAAK8d,UAAV,YAA+Ba,EAAGtc,GAAlC,cAAkDpB,EAAKoB,GAAvD,SAAkEoc,EAAQ7d,MAAM,0CAG/F+d,EAAG5a,OAAS,mBACT,iBACIrD,MAAM,iBACNwB,KAAI,GAAKyc,EAAGhU,IACZ5G,OAAQ4a,EAAG5a,QAAU,SACrB2V,IAAI,sBACJ7Y,QAASb,KAAK2d,SACdiB,QAAM,GAELD,EAAGnb,QAAUmb,EAAGnb,OAAO,IAAM,mBAC1B,mBAAKU,IAAKya,EAAGnb,OAAO,GAAGgF,YAAa9H,MAAM,4BAGhD,mBACF,iBACIA,MAAM,iBACNwB,KAAI,GAAKyc,EAAGhU,IACZ9J,QAASb,KAAK2d,UAEbgB,EAAGnb,QAAUmb,EAAGnb,OAAO,IAAM,mBAC1B,mBAAKU,IAAKya,EAAGnb,OAAO,GAAGgF,YAAa9H,MAAM,iC,GArIjEgC,e,MAiJF8a,Q,skBCxJTqB,EAAald,IAAGmd,WAAU,GAC1BC,EAAgBpd,IAAGqd,eACnBC,EAAkBtd,IAAGud,eAAc,GAQnC3f,EAAe,CACpB0d,WAAW,EACXkC,QAAS,eACTC,SAAU,QAILC,EADL5f,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAsBP4f,YAAc,SAAO7d,GAAP,uCACbA,EAAE2N,iBACF,EAAKxP,SAAS,CAAEqd,WAAW,IAC3B,EAAKrd,SAAS,CAAEqd,WAAW,IAHd,QAvBQ,EA6BnBsC,OAAS,SAAC9d,GAAM,IACJvB,EAAe,EAAKR,MAAMO,OAA1BC,WAEJsf,EAAS,aACb,OAFkB/d,EAAEsC,OAAOF,OAGvB,IAAK,QACD2b,EAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAEnf,OAASof,EAAEpf,OAASmf,EAAEnf,MAAMK,OAAS+e,EAAEpf,MAAMK,QAClE,MACJ,IAAK,SACD6e,EAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAEnf,OAASof,EAAEpf,OAASmf,EAAEnf,MAAMK,OAAS+e,EAAEpf,MAAMK,QAClE,MACJ,IAAK,WACD6e,EAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAElf,UAAYmf,EAAEnf,UAAYkf,EAAElf,SAASI,OAAS+e,EAAEnf,SAASI,QAC9E,MACJ,IAAK,YACD6e,EAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAElf,UAAYmf,EAAEnf,UAAYkf,EAAElf,SAASI,OAAS+e,EAAEnf,SAASI,QAC9E,MACJ,QACI6e,EAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAEpd,GAAKqd,EAAErd,IAGpCnC,EAAWyf,eAAeH,IAlDX,EAyDnBI,KAAO,WACiB,EAAKlgB,MAAMO,OAAvB4f,QACAC,UAzDR,EAAKhgB,M,+VAAL,IACOP,GAHQ,E,0HAOhBwgB,QAAN,4DAGO,OAFE/T,GADT,EAC+ChM,KAAKN,MAAMO,QAAjD+L,SAAUvH,EADnB,EACmBA,UAAWub,EAD9B,EAC8BA,aAC7BhgB,KAAKJ,SAAS,CAAEqd,WAAW,IACrB,gBAAMjR,EAASiU,kBAAf,KAA+B,eAC/B,uBAAMxb,EAAUyb,WAAhB,KAAyB,eAC/B,uBAAMzb,EAAU0b,oBAAhB,KAAkC,eAC5B,uBAAMH,EAAaI,qBAAnB,KAAsC,sBAEpCnf,EAASwD,EAATxD,MACCof,qBAAuBpf,EAAKof,oBAAoBC,QAExD7b,EAAU8b,eAAe,CAAEC,KAFqC,EACZvf,EAAKof,oBAAoBC,QAArEG,SACwBC,IAFgC,EACzCC,UACcC,SAF2B,EACzBA,WAGxC5gB,KAAKJ,SAAS,CAAEqd,WAAW,IAPiB,yCADV,qCADH,qCADM,sCAHtC,a,EA8CA5T,kBAAA,WACCrJ,KAAK+f,W,EAQNhgB,OAAA,WAAS,IAaE0C,EACAT,EAdF,EAEuChC,KAAKN,MAAtCwJ,EAFN,EAEMA,MAAO2S,EAFb,EAEaA,QAASgF,EAFtB,EAEsBA,OAAQ1C,EAF9B,EAE8BA,KAF9B,EAGoCne,KAAKN,MAAMO,OAA/CwE,EAHA,EAGAA,UAEI5C,EALJ,EAGqB3B,WAEC4gB,uBAAuBD,GAE7C5f,EAASwD,EAATxD,KACA8f,EAA2C9f,EAA3C8f,UARA,EAQ2C9f,EAAhC2V,uBACQ2G,QATnB,MAQoC,GARpC,GASArF,kBAEI1V,EAAQb,IAAGC,SAAS,CAAEC,SAclC,OATUA,GAAQA,EAAKG,MACbS,EAAYd,IAAGI,iBAAiBF,GAChCG,EAAOL,IAAGM,YAAYJ,GACXF,IAAGM,YAAYhB,IACnBA,GAAQA,EAAKoB,KACpBI,EAAYd,IAAGI,iBAAiBd,GAChCe,EAAOL,IAAGM,YAAYhB,IAI/B,mBAAKP,MAAM,kBAAkBE,MAAK,kBAAoBme,EAApB,iBAAkDF,EAAlD,KACrB,sBAAQne,MAAM,2CACVE,MAAK,QAAUqe,EAAV,6CACLpe,QAASb,KAAK4f,MACd,iBAAGlf,MAAM,8BAGb,mBAAKA,MAAM,YACP,YAAC,IAAD,CAAWT,OAAQD,KAAKN,MAAMO,OAAQoL,KAAM0V,EAAWxD,MAAOA,KAGlE,YAAC,IAAD,CAAUtd,OAAQD,KAAKN,MAAMO,SAE7B,mBAAKS,MAAM,0BACP,mBAAKA,MAAM,2EACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,uBACP,sBACKmb,GAAW,mBACR,oBAAMnb,MAAM,uBAAZ,IAAoCmb,IAEvCha,GAAQ,mBACL,mBAAKnB,MAAM,4BACP,mBACIA,MAAK,mEACLE,MAAO4B,EAAQ,0BAA0BA,EAA7B,8BAAkE,KAE5EA,GAAS,mBAAK9B,MAAM,aAAaE,MAAM,sCAAsC6B,IAEnF,mBAAK/B,MAAM,iCAAiCE,MAAM,uBAC9C,kBAAIF,MAAM,QACLmB,EAAKH,OAAS,mBACX,iBAAGQ,KAAI,iBAAmBL,EAAKM,OAAUzB,MAAM,kBAAkBsB,IAC/D,mBACDA,SAQ7B,mBAAKtB,MAAM,SACP,qBAAOA,MAAM,oBACT,sBACIA,MAAM,iCACN2B,GAAG,OACHiK,SAAUtM,KAAKuf,QAEf,sBAAQ1b,MAAM,IAAG,YAAC,IAAD,CAAMxB,GAAG,kBAAT,iBACjB,sBAAQwB,MAAM,SAAQ,YAAC,IAAD,CAAMxB,GAAG,yBAAT,sBACtB,sBAAQwB,MAAM,UAAS,YAAC,IAAD,CAAMxB,GAAG,wBAAT,wBACvB,sBAAQwB,MAAM,YAAW,YAAC,IAAD,CAAMxB,GAAG,4BAAT,4BACzB,sBAAQwB,MAAM,aAAY,YAAC,IAAD,CAAMxB,GAAG,2BAAT,oCAQlD,YAAC,IAAD,CAAiBpC,OAAQD,KAAKN,MAAMO,OAAQiJ,MAAOA,EAAO2S,QAASA,EAASgF,OAAQA,EAAQ1C,KAAMA,M,GAtJ/Fzb,e,EA4JJ2c,a,klBChKTR,EAAald,IAAGmd,WAAU,GAE1Bvf,EAAe,CACjBgJ,SAAS,EACTiK,MAAO,GACPlO,OAAQ,EACR0c,WAAY,EACZ1O,cAAe,EACfC,MAAO,EACPI,WAAW,IAAIxO,MAAOyO,WAGpBqO,EAAa,CAAC,KAAM,OAAQ,OAAQ,OAAQ,SAS5CxU,EADLhN,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAyBJwhB,cAAgB,uDAKZ,OAJQlV,EAAa,EAAKtM,MAAMO,OAAxB+L,SACFwG,GAFM,EAEY,EAAK1S,OAAvB0S,MAFM,EAEClO,OACJ,EACT,EAAK1E,SAAS,CAAE0E,OADP,IAET,gBAAM,EAAKoI,sBAAsB,CAAEhN,MAAO,EAAKA,MAAO8S,QAAOlO,OAFpD,KAET,MAAsE,sBACtE0H,EAASmV,wBAD6D,mCA/BvD,EAyCnBC,sBAAwB,SAAC1hB,QAAuB,IAAvBA,MAAQ,EAAKA,OAClC,EAAK2hB,wBAA0BC,aAAY,kBAAM,EAAKC,mBAAmB,CAAE7hB,YAAU,MA1CtE,EA6CnB8hB,wBAA0B,WACtBC,cAAc,EAAKJ,0BA9CJ,EAiDnBK,eAAiB,WAAM,IAzDNpf,EA0DLpC,EAAe,EAAKR,MAAMO,OAA1BC,WACAyhB,EAA+BzhB,EAA/ByhB,eACR,GAAIA,EAAehhB,OAAQ,CACvB,IAAMihB,EAF6B1hB,EAAfyM,WAEUkV,OAAOF,GAAgBG,MA7D5Cxf,EA6D6D,CAAC,SA7DnD,SAACmd,EAAGC,GAAJ,OAAUpd,EAAOvB,KAAI,SAAAghB,GACjD,IAAIC,EAAM,EAEV,MADa,MAATD,EAAE,KAAcC,GAAO,EAAGD,EAAEA,EAAEE,UAAU,IACrCxC,EAAEsC,GAAKrC,EAAEqC,GAAKC,EAAMvC,EAAEsC,GAAKrC,EAAEqC,IAAOC,EAAO,KACnDE,QAAO,SAACC,EAAGC,GAAJ,OAAUD,GAAQC,IAAG,MA0DnBliB,EAAWmiB,iBAAiB,aAAcT,KAtD/B,EA0DnBU,gBAAkB,WAAM,IACZpiB,EAAe,EAAKR,MAAMO,OAA1BC,WACAyM,EAAiCzM,EAAjCyM,WACF4V,EAAsBjhB,IAAKkhB,aADQtiB,EAArBuiB,kBAEdhO,EAAO,GAAH,OAAO9H,GAIb+V,EAAgB,EACdC,EAAM,IAAIxe,KAChBsQ,EAAKmO,SAAQ,SAACnhB,EAAGuN,GACb,IAAMsI,EAAOhW,IAAKuhB,eAAephB,EAAE6V,MAClBvH,KAAK+S,OAAOH,EAAI/P,UAAY0E,EAAK1E,WAAa,KAL9C,QAOb8P,EAAgB1T,EAAM,MAG9B,IAAM+T,EAActO,EAAK9T,OAEzB,GAAIoiB,EAAcL,EAbG,EAa2B,CAC5C,IAAK,IAAI9Z,EAAI,EAAqBA,EAdjB,EAcwBA,GAAK,EAAG,CAC7C,IAAMoa,EAAcrhB,IAAGshB,UAAUP,EAAeK,GAC5CzhB,IAAK4hB,SAASX,EAAoB3Z,KAClC6L,EAAK0O,OAAOH,EAAa,EAAGT,EAAoB3Z,IAGxD1I,EAAWmiB,iBAAiB,aAAc5N,KApF/B,EAwFnB2O,UAAY,WAAM,IACN7Q,EAAU,EAAKzS,MAAfyS,MACArS,EAAe,EAAKR,MAAMO,OAA1BC,WAEFuU,EAAO,GAAH,OADavU,EAAfyM,YAER8H,EAAK0O,OAAO5Q,EAAO,EAAG,CAAE/R,KAAM,KAAM6iB,kBAAmB,MAAOC,kBAAmB,WACjFpjB,EAAWmiB,iBAAiB,aAAc5N,IA9F3B,EAiGnB8O,kBAAoB,WAAM,IACdvC,EAAe,EAAKlhB,MAApBkhB,WACA9gB,EAAe,EAAKR,MAAMO,OAA1BC,WAEFuU,EAAO,GAAH,OADavU,EAAfyM,YAER8H,EAAK0O,OAAOnC,EAAY,EAAG,CAAExgB,KAAM,cAAe6iB,kBAAmB,MAAOC,kBAAmB,WAC/FpjB,EAAWmiB,iBAAiB,aAAc5N,IAvG3B,EA0GnB+O,sBAAwB,WAAM,IAClBlR,EAAkB,EAAKxS,MAAvBwS,cACApS,EAAe,EAAKR,MAAMO,OAA1BC,WAEFuU,EAAO,GAAH,OADavU,EAAfyM,YAER8H,EAAK0O,OAAO7Q,EAAe,EAAG,CAAE9R,KAAM,kBAAmB6iB,kBAAmB,MAAOC,kBAAmB,WACtGpjB,EAAWmiB,iBAAiB,aAAc5N,IAhH3B,EAmHnBgP,YAAc,WACa,EAAK/jB,MAAMO,OAA1BC,WACGujB,aAAY,WAAM,MACD,EAAK3jB,MAAvB0S,EADmB,EACnBA,MAAOlO,EADY,EACZA,OAEb,EAAK1E,SAAS,CAAE0E,OADhBA,GAAUkO,IAEV,EAAK9F,sBAAsB,CAAE8F,QAAOlO,eAzHzB,EA6HnBof,cAAgB,WACW,EAAKhkB,MAAMO,OAA1BC,WACGujB,aAAY,gBA/HR,EAoInBhjB,YAAc,SAACgB,EAAGof,GAMd,OALApf,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKxG,SAAS,CACV+jB,SAAU9C,KAEP,GA1IQ,EA6InB+C,SAAW,WACP,EAAKhkB,SAAS,CACV+jB,SAAU,QA/IC,EAmJnB/O,YAAc,SAACnT,GAGX,OAFAA,EAAE2N,iBACF3N,EAAE2E,mBACK,GAtJQ,EAyJnByO,WAAa,SAACpT,EAAGoiB,EAAOlM,GAOpB,OANAlW,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKxG,SAAS,CACVkkB,QAASD,EACTlM,UAEG,GAhKQ,EAmKnBoM,QAAU,WACN,EAAKnkB,SAAS,CACVkkB,QAAS,QArKE,EA2KnBE,kBAAoB,WAChB,EAAKpkB,SAAS,CACVqkB,mBAAoBtiB,IAAGuiB,+BAFL,IAIdhkB,EAAe,EAAKR,MAAMO,OAA1BC,WACR,EAAKikB,gBAAkB7C,aAAY,kBAAMphB,EAAWkkB,eAAeziB,IAAG0iB,oCAAmC,MAhL1F,EA8MnBC,cAAgB,YAAkB,IAAfC,EAAe,EAAfA,IAAKvV,EAAU,EAAVA,IAEZmP,EADa,EAAKze,MAAMO,OAAxB+L,SACAmS,KACAtC,EAAY,EAAKnc,MAAjBmc,QAER,MAAiB,OAAb0I,EAAI/jB,KACG,mBACH,YAAC,IAAD,CAAIP,OAAQ,EAAKP,MAAMO,OAAQke,KAAMA,KAG5B,gBAAboG,EAAI/jB,KACG,mBACH,YAAC,IAAD,CAAoBP,OAAQ,EAAKP,MAAMO,UAG9B,oBAAbskB,EAAI/jB,KACG,mBACH,YAAC,IAAD,CAAkBP,OAAQ,EAAKP,MAAMO,UAG5B,YAAbskB,EAAI/jB,KACI,mBACJ,YAAC,IAAD,CACIP,OAAQ,EAAKP,MAAMO,OACnBwU,KAAM8P,EACNvV,IAAKA,EACLvO,YAAa,EAAKA,YAClBmU,YAAa,EAAKA,YAClBC,WAAY,EAAKA,WACjB1B,aAAc,WAIlB,mBACJ,YAAC,IAAD,CACIlT,OAAQ,EAAKP,MAAMO,OACnBiJ,MAAOqb,EACP1I,QAASA,EACT1M,IAAG,gBAAkBoV,EAAIliB,GACzB5B,YAAa,EAAKA,YAClBmU,YAAa,EAAKA,gBApP1B,EAAK9U,M,+VAAL,IACOP,GAEb,EAAK6E,SAAW,GAChB,EAAKmB,IAAM,GANU,E,0HASbmH,sBAAN,uDAOF,OAP2DpI,EAAzD,EAAyDA,QAA3B5E,OAA9B,SAA8BA,OAAQM,KAAKN,MAA3C,GACuCye,KAMzC,gBALuBze,EAAMO,OAArBC,WAKSiL,eAAe,CAAE0Q,QANgBnc,EAApCmc,QAM6BzQ,SANO1L,EAA3B0L,SAM8ByV,OANHnhB,EAAjBmhB,OAM4BrO,MAP3D,EAAkDA,MAOgBlO,SAAQwd,UAJlEA,KAIV,KAAmF,sBAC7E9hB,KAAK0hB,iBACApd,IACDtE,KAAKsiB,kBAELtiB,KAAKujB,qBALoE,0CAPjF,a,EA0BMhC,mBAAN,qDAGF,OAHE,EAA+C/O,MAA/C,EAAsDlO,QAA3B5E,OAA3B,SAA2BA,OAAQM,KAAKN,MAAxC,GACuCye,KAEzC,gBADuBze,EAAMO,OAArBC,WACSqhB,mBAAmB,CAAE1F,QAFYnc,EAApCmc,QAEiCzQ,SAFG1L,EAA3B0L,SAEkCyV,OAFPnhB,EAAjBmhB,UAEjC,MAAkE,sDAHhE,a,EAgJAjG,mBAAA,WACI5a,KAAKgkB,qB,EAGZ3a,kBAAA,WAEOrJ,KAAK0M,sBAAsB,CAAE8F,MADXxS,KAAKF,MAAf0S,MAC4BlO,OAAQ,IAC5CtE,KAAKyjB,cACLzjB,KAAKohB,yB,EAGToD,qBAAA,WACIxkB,KAAK0jB,gBACkB1jB,KAAKN,MAAMO,OAA1BC,WACGkkB,eAAeziB,IAAG0iB,kCAC7B5C,cAAczhB,KAAKmkB,iBAEnBnkB,KAAKwhB,2B,EAGT/Z,0BAAA,SAA0BC,GAClBA,EAAUmU,UAAY7b,KAAKN,MAAMmc,SAAWnU,EAAUyW,OAASne,KAAKN,MAAMye,MAE1Ene,KAAK0M,sBAAsB,CAAEhN,MAAOgI,EAAW8K,MAD7BxS,KAAKF,MAAf0S,MAC8ClO,OAAQ,K,EAiDtEvE,OAAA,WAAS,MACiEC,KAAKF,MAAnEyI,EADH,EACGA,QAAS0b,EADZ,EACYA,mBAAoBtR,EADhC,EACgCA,UAAWgR,EAD3C,EAC2CA,SAAUG,EADrD,EACqDA,QADrD,EAE4B9jB,KAAKN,MAAMO,OAApCC,EAFH,EAEGA,WACAyM,EAA0CzM,EAA1CyM,WAAwB8X,EAAkBvkB,EAAlBukB,cACxBpY,EAJH,EAEeL,SAEZK,SAER,OAAQ,mBAkBHsX,GAAY,YAAC,IAAD,KACT,YAAC,UAAD,CAAmB1jB,OAAQD,KAAKN,MAAMO,OAAQ4gB,OAAQ8C,EAAU7E,UAAW,OAAQE,aAAc,OAAQY,KAAM5f,KAAK4jB,YAGvHE,GAAW,YAAC,IAAD,KACR,YAAC,UAAD,CAAiB7jB,OAAQD,KAAKN,MAAMO,OAAQ4jB,MAAOC,EAAShF,UAAW,OAAQE,aAAc,OAAQY,KAAM5f,KAAK+jB,QAASpM,KAAMA,QAGnI,mBAAKjX,MAAM,SACN+jB,GAAiB,mBACd,mBACI/jB,MAAK,oGACLE,MAAK,eAAiBie,EAAjB,KAEL,sBACIne,MAAM,sCACNG,QAASb,KAAKkhB,eAFlB,iBAQR,YAAC,IAAD,CACI7V,KAAMsB,EACN0W,kBAAmB,WACnBC,kBAAiB,uGAAwGjX,EAAW,QAAU,SAA7H,aACjBiY,cAAetkB,KAAKskB,cACpBrD,WAAYA,EACZgD,mBAAoBA,EACpBtR,UAAWA,IAGdpK,GAAW,mBAAK7H,MAAM,iCACnB,mBAAKA,MAAM,8BAA8Bwb,KAAK,UAC1C,oBAAMxb,MAAM,WAAZ,mB,GAtTMgC,e,EA8Tf+J,Q,wHC9VTiY,G,oBADLjlB,Y,kLAEGM,OAAA,WAAS,MACsBC,KAAKN,MAD3B,IACHmE,aADG,MACK,EADL,EACQ8F,EADR,EACQA,UADR,EAEW3J,KAAKN,MAAMO,OAAzBwE,UACAxD,KACA2I,SAEF,YANK,MAIQ,GAJR,GAMQC,SACD,mBACJ,wBACKvI,IAAKmI,OAf1B,SAAqB5F,GACjB,OAAO,QAAUA,EAcY8gB,CAAY9gB,GAAQ,GADrC,IAC0C8F,EAAY,mBAAE,yBAAO,yBAAO,qBAAOjJ,MAAM,mBAAb,SAA+D,2BAK3I,mBACE,wBACKY,IAAKmI,OAAO5F,EAAO,GADxB,IAC6B8F,EAAY,mBAAE,yBAAO,yBAAO,qBAAOjJ,MAAM,mBAAb,QAA8D,2B,GAjB3GgC,e,GAuBTgiB,Q,oICvBTE,G,UADLnlB,Y,kLAEGM,OAAA,WAAS,MACsBC,KAAKN,MAD3B,IACHmE,aADG,MACK,EADL,EACQ8F,EADR,EACQA,UADR,EAEW3J,KAAKN,MAAMO,OAAzBwE,UACAxD,KACA2I,SAEF,YANK,MAIQ,GAJR,GAMQC,SACD,mBACJ,wBACKvI,IAAKmI,OAf1B,SAAkB5F,GACd,MAAO,QAAWA,EAcWghB,CAAShhB,GAAQ,GADlC,IACuC8F,EAAY,mBAAE,yBAAO,yBAAO,qBAAOjJ,MAAM,mBAAkB,YAAC,IAAD,CAAM2B,GAAG,gBAAT,WAAgE,mBAAE,YAAC,IAAD,CAAMA,GAAG,gBAAT,UAK1K,mBACE,wBACKf,IAAKmI,OAAO5F,EAAO,GADxB,IAC6B8F,EAAY,mBAAE,yBAAO,yBAAO,qBAAOjJ,MAAM,mBAAkB,YAAC,IAAD,CAAM2B,GAAG,gBAAT,YAAiE,mBAAE,YAAC,IAAD,CAAMA,GAAG,gBAAT,Y,GAjBnJK,e,GAuBLkiB,Q,iIC3BTE,EADLrlB,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMJqlB,eAAiB,SAACC,GAAS,MACQ,EAAKtlB,MAA5BulB,mBADe,WASnB,EAAKvlB,MAHLqG,EANmB,EAMnBA,YACAD,EAPmB,EAOnBA,OACA4O,EARmB,EAQnBA,MAWJ,GARIA,GACA3O,EAAY,CAAE1D,GAAIyD,EAAOzD,GAAIqS,QAAO7Q,MAAOmhB,EAAME,WAAW,IAO5DD,EAAa,CACb,IAAMzhB,EAAS,GACfA,EAAOI,KAAKohB,GACZjf,EAAY,CAAE1D,GAAIyD,EAAOzD,GAAIqS,MAAO,SAAU7Q,MAAOL,EAAQ0hB,WAAW,MA3B5E,EAAKplB,MAAQ,CACTqlB,MAAO,IAHI,E,kHAoCnBplB,OAAA,WAAS,MACqFC,KAAKN,MAD1F,IACG0lB,oBADH,MACkB,aADlB,MAC4Bpf,cAD5B,MACqC,aADrC,MAC+CC,aAD/C,MACuD,aADvD,MACiEC,gBADjE,SAEL,OACI,mBAAKxF,MAAM,OACP,mBAAKA,MAAM,UACP,YAAC,IAAD,CACIqkB,eAAgB/kB,KAAK+kB,eACrBK,aAAcA,EACdC,OAAQ,kBACRrf,OAAQA,EACRC,MAAOA,EACPC,SAAUA,GAEV,mBAAKtF,MAAO,CAAEqH,OAAQ,GAAID,MAAO,c,GAlDpCtF,e,EAsENoiB,O,ucCrETvlB,G,UAAe,CACpB+lB,UAAW,GACXC,QAAS,KAIJ/I,EADL/c,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAWJ8lB,eAAiB,SAAC/jB,GAAM,MACWA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlDzL,EADY,EACZA,KAAMZ,EADM,EACNA,KAAMwkB,EADA,EACAA,OACZtlB,EAAc,EAAKT,MAAMO,OAAzBE,UACRA,EAAUulB,qBAAqB,CAC3B7jB,KAAMsK,SAAStK,EAAM,IACrBZ,KAAMkL,SAASlL,EAAM,MALL,IAOZqkB,EAAc,EAAKxlB,MAAnBwlB,UACdA,EAAazjB,EAAJ,IAAYZ,IAAU,EACzB,EAAKrB,SAAS,CAAE0lB,cAEZG,GACAtlB,EAAUwlB,kBAAkB1kB,IAxBjB,EA4BnB2kB,cAAgB,SAACnkB,GAAM,MACIA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAA1CzL,EADW,EACXA,KAAMZ,EADK,EACLA,KACQ,EAAKvB,MAAMO,OAAzBE,UACE0lB,oBAAoB,CAC1BhkB,KAAMsK,SAAStK,EAAM,IACrBZ,KAAMkL,SAASlL,EAAM,MALN,IAOXskB,EAAY,EAAKzlB,MAAjBylB,QACdA,EAAW1jB,EAAJ,IAAYZ,IAAU,EACvB,EAAKrB,SAAS,CAAE2lB,aAnChB,EAAKzlB,M,+VAAL,IACOP,GAHQ,E,0HAObyd,UAAN,4CAEI,uBADsBhd,KAAKN,MAAMO,OAAzBE,UACQoe,KAAK,CAAEpB,MAAO,GAAI2I,QAAS,CAAC,qBAA5C,MAAgE,sDAFpE,a,EAiCHzc,kBAAA,WACCrJ,KAAKgd,a,EAGNjd,OAAA,WAAS,aACuCC,KAAKF,MAD5C,IACMylB,eADN,MACgB,GADhB,MACoBD,iBADpB,MACgC,GADhC,IAEwBtlB,KAAKN,MAAMO,OAAnCE,EAFA,EAEAA,UACAe,EAAkDf,EAAlDe,MAHA,EAGkDf,EAAxBiW,sBAH1B,MAG2C,GAH3C,EAIM/J,EAJN,EAEWL,SAELK,SACd,OAF0DlM,EAA3C4lB,kBAOL,mBAAKrlB,MAAM,YACP,mBAAKA,MAAK,uGAAwG2L,EAAW,QAAU,SAA7H,cACN,mBAAK3L,MAAM,mBACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,UACP,sBAAI,YAAC,IAAD,CAAM2B,GAAG,uCAAT,0BAAJ,OAG1B,mBAAK3B,MAAM,OACW,mBAAKA,MAAM,8BAA8BE,MAAM,mBAC1CU,IAAKC,QAAQL,IAAUA,EAAMH,KAAI,SAACc,GAAD,OAAU,mBACvCA,GAAQP,IAAKC,QAAQM,EAAKuU,iBAAmBvU,EAAKuU,eAAerV,KAAI,SAACilB,GACnE,IAAMxjB,EAAQwjB,EAAQxjB,OAASwjB,EAAQxjB,MAAMwC,YAAcghB,EAAQxjB,MAAQ,KACrEyjB,EAAYV,EAAW1jB,EAAKQ,GAAT,IAAe2jB,EAAQ3jB,IAC1C6jB,EAAcZ,EAAazjB,EAAKQ,GAAT,IAAe2jB,EAAQ3jB,IAC9ClB,EAAaiV,EAAe5U,MAAK,SAAAC,GAAC,OAAIA,EAAER,KAAKoB,KAAO2jB,EAAQ3jB,MAClE,OACI,mBAAK3B,MAAM,8BAA8BE,MAAM,iBAC3C,mBAAKF,MAAK,2EAA8EE,MAAO4B,EAAQ,0BAA0BA,EAAMwC,YAAnC,MAAsD,KACpJxC,GAAS,mBAAK9B,MAAM,iCAAiCE,MAAM,sCAAsCe,IAAGI,iBAAiBikB,KAE3H,yBACI,mBAAKtlB,MAAM,6BACP,0BAASiB,IAAGM,YAAY+jB,IAAkB,wBAQ9C,mBAAKtlB,MAAM,6BACP,YAAC,IAAD,CAAM2B,GAAG,iCAAT,+BAEJ,mBAAK3B,MAAM,6BACP,0BAASiB,IAAGM,YAAYJ,MAG9BqkB,GAAeD,EAAa,mBAC1B,mBAAKvlB,MAAM,eACNwlB,EAAc,mBAAKxlB,MAAM,gBACtB,YAAC,IAAD,CAAM2B,GAAG,2BAAT,aADW,IACyC,iBAAG3B,MAAM,kBACxD,mBAAKA,MAAM,eAChB,YAAC,IAAD,CAAM2B,GAAG,yBAAT,WADK,IAC2C,iBAAG3B,MAAM,wBAG/D,mBACF,uBACI,sBAAQA,MAAM,sDAAsDG,QAAS,EAAK2kB,eAAgBzI,YAAWlb,EAAKQ,GAAI8jB,YAAWH,EAAQ3jB,IACrI,YAAC,IAAD,CAAMA,GAAG,yBAAT,YAEHlB,GAAcA,EAAWO,OAAS,GAAK,sBAAQhB,MAAM,8DAA8DG,QAAS,EAAK2kB,eAAgBzI,YAAWlb,EAAKQ,GAAI8jB,YAAWH,EAAQ3jB,GAAI+jB,eAAa,GACtM,YAAC,IAAD,CAAM/jB,GAAG,oCAAT,0BAEJ,mBAAK3B,MAAM,QACP,yBACI,sBAAQA,MAAM,8CAA8CE,MAAM,oBAAoBC,QAAS,EAAK+kB,cAAe7I,YAAWlb,EAAKQ,GAAI8jB,YAAWH,EAAQ3jB,IACtJ,YAAC,IAAD,CAAMA,GAAG,wBAAT,sBAY5C,uBAAS3B,MAAM,QACX,2BAAS,yBAAO,YAAC,IAAD,CAAM2B,GAAG,6BAAT,yBAChB,qBACI,YAAC,IAAD,CAAMA,GAAG,0BAAT,wOA5EtB,I,GAnDUK,e,EAyIL8Z,Q,+hBC5ITjd,EAAe,CACjBsN,eAAgB,GAChBD,iBAAiB,EACjBE,eAAgB,GAChBC,aAAc,IAMZsZ,EADL5mB,Y,cAEI,WAAYC,GAAO,aAChB,cAAMA,IAAN,MAOJsN,YAAc,SAAOvL,GAAP,0CAEJqH,EAFI,EAMV9F,EAAW,OALHC,OADE,OACsB,EAAKvD,MAA7BuD,UAAW,aADT,EAEJ6F,EAAYrH,EAAEsC,OAAO4J,cAAcL,QAAQjL,IAAMZ,EAAEsC,OAAOuJ,QAAQjL,GAEhEc,EAAY,EAAKzD,MAAjByD,QAEG,gBADQ,EAAKzD,MAAMO,OAA5BG,aAC4BkmB,mBAAmB,CAAEjkB,GAAIc,EAAQd,GAAIyG,eAAxD,MAAoE,gBAK/E,OALA9F,EAAW,IAEmB,MAApBA,EAASM,QACfL,EAAS,CAAEzC,KAAM,cAAe2C,UAAS2F,YAAW9F,aAExD,GAAO,GALwE,+BAd/D,EAsBpBiK,UAAY,SAAOxL,GAAP,0CAGF+L,EACA1E,EAJE,EAQR9F,EAAW,OAPHC,OADA,OACwB,EAAKvD,MAA7BuD,UAAW,aADX,EAGFuK,EAAU/L,EAAEsC,OAAO4J,cAAcL,QAAQjL,IAAMZ,EAAEsC,OAAOuJ,QAAQjL,GAChEyG,EAAYrH,EAAEsC,OAAO4J,cAAcL,QAAQlK,SAAW3B,EAAEsC,OAAOuJ,QAAQlK,QAErED,EAAY,EAAKzD,MAAjByD,QAEG,gBADQ,EAAKzD,MAAMO,OAA5BG,aAC4BmmB,wBAAwB,CAAElkB,GAAIc,EAAQd,GAAImL,UAAS1E,eAAtE,MAAkF,uBAA7F9F,EAAW,IAEyB,MAApBA,EAASM,QACrBL,EAAS,CAAEzC,KAAM,YAAa2C,UAAS2F,YAAW0E,UAASxK,aAH8B,mCA9B7E,EAqCpB0K,aAAe,SAAOjM,GAAP,gCACX,IAAMqH,EAAYrH,EAAEsC,OAAO4J,cAAcL,QAAQjL,IAAMZ,EAAEsC,OAAOuJ,QAAQjL,GAEhEwK,EAAmB,EAAK/M,MAAxB+M,eAHG,OAIXA,EAAe/D,IAAc+D,EAAe/D,GAClD,EAAKlJ,SAAS,CACbiN,mBACE,WACW,EAAKzI,SAAS0E,IACd,EAAK1E,SAAS0E,GAAW8E,WATtB,QArCK,EAmDpBC,eAAiB,WAEnB,EAAKjO,SAAS,CACbgN,iBAF2B,EAAK9M,MAAzB8M,mBApDc,EA0DpBkB,cAAgB,SAACrM,GACb,IAAMqH,EAAYrH,EAAEsC,OAAO4J,cAAcL,QAAQjL,IAAMZ,EAAEsC,OAAOuJ,QAAQjL,GACtEyK,EAAmB,EAAKhN,MAAxBgN,eACFA,EAAehE,IAAcgE,EAAehE,GAClD,EAAKlJ,SAAS,CACbkN,oBA/DqB,EAmEpBiC,UAAY,SAACtN,GAAM,MACDA,EAAEsC,OAAOsJ,QAAQ,OAAOC,QAC9BP,EAAiB,EAAKjN,MAAtBiN,aACRA,EAHe,EACb1K,IADa,EACT2M,IAGN,EAAKpP,SAAS,CAAEmN,kBAvEA,EA0EpBkC,UAAY,SAAOxN,GAAP,sDAeR,EAAK7B,SAAS,CAAEsN,eAAcgC,mBAftB,gCAQFC,EAEN,OATA1N,EAAE2N,iBACF3N,EAAE2E,kBAFM,EAGuB3E,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAClDnK,EAAY,EAAKzD,MAAjByD,QACWhD,GALX,EAKyB,EAAKT,MAAMO,QAAzBE,UACXc,EANA,EAKAwD,UACAxD,KACmBiO,OAPnB,UAO2C,EAAKpP,OAA7BoP,gBAAiB,GAPpC,GAOAhC,OAPA,SAOAA,cAAe,GAPf,GAQFiC,GALWT,EAHT,EAGSA,aAATW,EAHA,EAGAA,SAK6B,IAAIA,EAAW,KAChC,EAChBA,EACsB,gBAAMlP,EAAUmP,sBAAsB,CAAEZ,YAAWW,UAASvJ,OAAQ3C,EAASlC,UAA7E,KAAoF,uBAA1GiO,EAAeC,GAAO,EAAoF,kDAEpF,gBAAMhP,EAAUoP,iBAAiB,CAAEb,YAAW5I,OAAQ3C,EAASlC,UAA/D,KAAsE,uBAA5FiO,EAAeC,GAAO,EAAsE,sDAvFhF,EA4FpBjC,aAAe,SAACzL,GAAM,MACaA,EAAEsC,OAAOsJ,QAAQ,UAAUC,QAAlD+B,EADU,EACVA,QAASX,EADC,EACDA,UACjBjN,EAAE2N,iBACF3N,EAAE2E,kBAHgB,MAIY,EAAKtG,MAA3BoN,oBAJU,MAIK,GAJL,EAKlBA,EAAgBwB,GAAYW,EAAU,IAAIA,EAAW,KAAQ,EAC7D,EAAKzP,SAAS,CAAEsN,kBAhGhB,EAAKpN,M,+VAAL,IACOP,GAEP,EAAK6E,SAAW,GALA,E,kHAqGpBrE,OAAA,WAAS,IAUDyP,EAVC,SAC6GxP,KAAKF,MAA/G+M,EADH,EACGA,eAAgBD,EADnB,EACmBA,gBAAiBE,EADpC,EACoCA,eAAgBC,EADpD,EACoDA,aADpD,IACkEG,oBADlE,MACiF,GADjF,MACqFgC,sBADrF,MACsG,GADtG,IAEqElP,KAAKN,MAA7EyD,EAFG,EAEHA,QAFG,IAEMF,gBAFN,MAEiB,aAFjB,MAEiDwM,QAFjD,EAG4BzP,KAAKN,MAAMO,OAApCwE,EAHH,EAGGA,UAAWtE,EAHd,EAGcA,UACLuP,EAAyBjL,EAA/BxD,KAAmBgL,EAAYxH,EAAZwH,QAJtB,EAKuByD,EAApBC,gBALH,MAKc,KALd,EAODC,EAAmB,GACnBC,EAAgB,EAChBC,EAAmB,EAcvB,OAZI3M,EAAQ5C,WACRsP,EAAgB1M,EAAQ5C,SAASI,OAC7BiM,EACAgD,EAAmBzM,EAAQ5C,UAG3BiP,OAjBH,SAiB4B,EA1HpB,EA2HLI,EAAmBzM,EAAQ5C,SAASO,MAAMiP,KAAKC,IAAIH,EAAgBL,EAAc,KAErFM,EAAmBF,EAAiBjP,QAIpC,uBAQKwC,GAAWyM,GAAoBA,EAAiBK,UAAUlP,KAAI,SAACqC,GAAY,MAClDA,EAAdnC,YADgE,MACzD,GADyD,EAElEC,EAAQf,EAAUkB,wBAAwBJ,EAAKoB,IAC/CN,EAAmBJ,IAAGI,iBAAiBd,GACvCgB,EAAcN,IAAGM,YAAYhB,GAC7B6D,EAAY7D,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,GAC1DmL,EAAkB9M,EAAQ9C,OAAS8C,EAAQ9C,MAAM6P,WAAU,SAAA1O,GAAC,OAAIA,EAAER,OAASyO,EAAYrN,OAAO,EAEhG+N,EAAmB,GACnBC,EAAe,EACfC,EAAkB,EAClBlN,EAAQ7C,WACR8P,EAAejN,EAAQ7C,SAASI,OAMhC2P,GAJIF,EADAtD,EAAe1J,EAAQf,IACJe,EAAQ7C,SAER6C,EAAQ7C,SAASO,MAAM,EAAG0O,IAEd7O,QAGvC,IAAM6C,EAAS,GACf,GAAIJ,EAAQI,OAAQ,CAChB,IAAM+M,EAAOC,YAAKpN,EAAQI,QAC1BA,EAAOI,KAAP,MAAAJ,EAAe+M,GAEnB,IAAME,EAAW1D,EAAa3J,EAAQf,IAAM0K,EAAa3J,EAAQf,IAAM,EACjEqO,EAAelN,GAAUA,EAAOiN,GAAYjN,EAAOiN,GAAY,KA3BG,EA6BhCrN,EAAhCwT,8BA7BgE,MA6BvC,GA7BuC,EA+BnEjG,EAAcxQ,EAAUyQ,uBAAuB,CAChD9K,OAAQ3C,EACRuL,UAAWtL,EAAQf,GACnBwO,WAAYlB,KACVT,EAAe9L,EAAQf,IACzBkB,EAAOoN,GAAevN,EAAQA,QAKlC,OAJI8J,EAAa9J,EAAQf,MACrBkB,EAAOH,EAAQA,SAIf,mBAAK1C,MAAM,OACP,mBAAKA,MAAM,wCACP,mBACIA,MAAK,mEACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,mCAEH/D,EAAKuB,OAAS,oBAAM9B,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAEhF,mBAAKrB,MAAM,wBAAwBE,MAAM,uBACrC,mBAAKF,MAAM,mCACP,uBACI,oBAAME,MAAM,sBACR,kBAAIF,MAAM,wBAAwBE,MAAM,qBACnCqB,GAGJf,GAASA,EAAMP,OAAS,GAAK,mBAAKD,MAAM,QACrC,qBAAOA,MAAM,kCACRQ,EAAM6P,QAAO,SAAAtP,GAAC,OAAiB,IAAbA,EAAEC,UAAcZ,MAAM,EAAG,GAAGC,KAAI,SAAAiQ,GAAC,OAAI,mBACpD,iBAAG9O,KAAI,iBAAmB8O,EAAE7O,OAAUzB,MAAM,QAAO,iBAAGA,MAAM,4BAA5D,IAA0FsQ,EAAEhP,YAKxG,YAAC,IAAD,CAAUiP,SAAUtP,IAAGuP,cAAc3N,EAAMH,EAAQI,OAAQmM,GAAWwB,aAAcxP,IAAGyP,yBAG/F,mBAAK1Q,MAAM,6BACNgQ,GAAgB,mBAAKhQ,MAAM,gBACxB,mBACIA,MAAK,8BACLE,MAAK,qBAEL,mBAAK2H,QAAQ,OAAO7H,MAAK,YAAeE,MAAM,oBAAoBsD,IAAKwM,EAAalI,gBAG3FhF,GAAUA,EAAO7C,OAAS,GAAK,mBAAKD,MAAM,iCACtC8C,EAAOzC,KAAI,SAAC2E,EAAKsJ,GACd,OAAQ,mBACJ,mBACItO,MAAK,2BACLE,MAAK,wCAEL,mBAAK2H,QAAQ,OAAO7H,MAAK,mBAAsBE,MAAM,oBAAoBsD,IAAKwB,EAAIV,YAAanE,QAAS,EAAKkO,UAAWvJ,UAASpC,EAAQf,GAAIiP,WAAUtC,YAO/K,yBACI,sBAAQtO,MAAK,6BAA8BwP,EAAkB,eAAiB,IAC1ErP,QAAS,EAAKmM,YACdxH,UAASpC,EAAQf,IAEjB,YAAC,IAAD,CAAMA,GAAG,iBAAT,QALR,IAQI,sBAAQ3B,MAAM,2BACVG,QAAS,EAAK6M,aACdlI,UAASpC,EAAQf,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAEHe,EAAQuM,WAAaA,GAAY,wBAE5BzC,EAAa9J,EAAQf,KAAOsO,EAAc,mBACxC,sBACInQ,KAAK,SACLE,MAAM,sBACN6Q,iBAAgBnO,EAAQf,GACxBxB,QAAS,EAAKqM,cAEd,iBAAGxM,MAAM,eANb,KAM8B,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBAE5B,mBACF,sBACI7B,KAAK,SACLE,MAAM,sBACNG,QAAS,EAAKoO,UACdsC,iBAAgBnO,EAAQf,IAExB,iBAAG3B,MAAM,eANb,IAM6B,YAAC,IAAD,CAAM2B,GAAG,qBAAT,sBAhCzC,IAqCI,sBAAQ3B,MAAM,qCACTY,IAAKkQ,eAAepO,EAAQqO,YAAa,IAAItN,KAAQ,CAAEuN,OAAQ,UAC/DtO,EAAQuO,aAAe,mBACpB,oBAAMjR,MAAM,0BAAZ,WAA8CY,IAAKkQ,eAAepO,EAAQuO,YAAa,IAAIxN,KAAQ,CAAEuN,OAAQ,UAA7G,OAGPzF,GAAW2K,GAA0BA,EAAuBsB,mBAAqB,mBAC9E,oBAAMxX,MAAM,mBACR,iBAAGA,MAAM,0BADb,IACyCkW,EAAuBsB,sBAK3E9U,EAAQ9C,OAAS8C,EAAQ9C,MAAMK,OAAS,GAAK,qBAAOD,MAAM,4DAA4DE,MAAM,8BACzH,iBAAGF,MAAM,kCADiC,IACG0C,EAAQ9C,MAAMK,SAGnE,mBAAKD,MAAM,wBAEN0C,GAAWgN,GAAoBA,EAAiBrP,KAAI,SAAC6Q,GAAU,MACtCA,EAAd3Q,YADoD,MAC7C,GAD6C,EAEtDC,EAAQf,EAAUkB,wBAAwBJ,EAAKoB,IAC/CN,EAAmBd,EAAKyD,UAAL,GAAoBpD,IAAKqD,QAAQ1D,EAAKyD,WAAW,GAAQpD,IAAKqD,QAAQ1D,EAAK2D,UAAU,GAArF,GAAkGtD,IAAKqD,QAAQ1D,EAAK4D,OAAS,IAAI,GACpJ5C,EAAchB,EAAKyD,UAAezD,EAAKyD,UAAzB,IAAsCzD,EAAK2D,SAA3C,GAA2D3D,EAAK4D,MAC9EC,EAAY7D,EAAKuB,QAAUvB,EAAKuC,OAASvC,EAAKuC,OAAO,QAAKuB,GAC1D8M,EAAgBD,EAAMtR,OAASsR,EAAMtR,MAAM6P,WAAU,SAAA1O,GAAC,OAAIA,EAAER,OAASyO,EAAYrN,OAAO,EAExFyP,EAAmB3R,EAAU4R,4BAA4B,CAC3DjM,OAAQ3C,EACRuL,UAAWtL,EAAQf,GACnBgN,QAASuC,EAAMvP,GACfwO,WAAYlB,KACVT,EAAkB9L,EAAQf,GAAZ,IAAkBuP,EAAMvP,IACxC2P,EAAYF,GAAoBF,EAAMxO,QAK1C,OAJI8J,EAAgB9J,EAAQf,GAAZ,IAAkBuP,EAAMvP,MACpC2P,EAAYJ,EAAMxO,SAIlB,mBAAK1C,MAAM,OACP,mBAAKA,MAAM,wCACP,mBACIA,MAAK,mEACLE,OAAUkE,EAAY,0BAA0BA,EAAUE,YAAvC,8BAAkF,IAAhG,mCAEH/D,EAAKuB,OAAS,oBAAM9B,MAAM,sBAAsBE,MAAM,oBAAoBmB,IAEhF,mBAAKrB,MAAM,wBAAwBE,MAAM,uBACrC,mBAAKF,MAAM,2BACP,oBAAME,MAAM,sBACR,kBAAIF,MAAM,wBAAwBE,MAAM,qBACnCqB,GAGJf,GAASA,EAAMP,OAAS,GAAK,mBAAKD,MAAM,QACrC,qBAAOA,MAAM,kCACRQ,EAAM6P,QAAO,SAAAtP,GAAC,OAAiB,IAAbA,EAAEC,UAAcZ,MAAM,EAAG,GAAGC,KAAI,SAAAiQ,GAAC,OAAI,mBACpD,iBAAG9O,KAAI,iBAAmB8O,EAAE7O,OAAUzB,MAAM,QACxC,iBAAGA,MAAM,4BADb,IAC2CsQ,EAAEhP,YAMzD,YAAC,IAAD,CAAUiP,SAAUtP,IAAGuP,cAAcc,EAAWJ,EAAMpO,OAAQmM,GAAWwB,aAAcxP,IAAGyP,yBAGlG,yBACI,sBAAQ1Q,MAAK,6BAA8BmR,EAAgB,eAAiB,IACxEhR,QAAS,EAAKoM,UACd6D,eAAc1N,EAAQf,GACtBmD,UAASoM,EAAMvP,IAEf,YAAC,IAAD,CAAMA,GAAG,iBAAT,QANR,IASI,sBAAQ3B,MAAM,2BACVG,QAAS,EAAK6M,aACdlI,UAASpC,EAAQf,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAEHuP,EAAMjC,WAAaA,GAAY,wBAE1BzC,EAAgB9J,EAAQf,GAAZ,IAAkBuP,EAAMvP,KAASyP,EAAmB,mBAC9D,sBACItR,KAAK,SACLE,MAAM,sBACN6Q,iBAAgBnO,EAAQf,GACxB4P,eAAcL,EAAMvP,GACpBxB,QAAS,EAAKqM,cAEd,iBAAGxM,MAAM,eAPb,KAO8B,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBAE5B,mBACF,sBACI7B,KAAK,SACLE,MAAM,sBACNG,QAAS,EAAKoO,UACdsC,iBAAgBnO,EAAQf,GACxB4P,eAAcL,EAAMvP,IAEpB,iBAAG3B,MAAM,eAPb,IAO6B,YAAC,IAAD,CAAM2B,GAAG,qBAAT,sBAnCzC,IAwCI,sBAAQ3B,MAAM,qCACTY,IAAKkQ,eAAeI,EAAMH,YAAa,IAAItN,KAAQ,CAAEuN,OAAQ,aAIzEE,EAAMtR,OAAS,qBAAOI,MAAM,4DAA4DE,MAAM,8BAC3F,iBAAGF,MAAM,kCADG,IACiCkR,EAAMtR,MAAMK,aAM5E0P,EAAeC,EAAkB,GAAK,uBACnC,sBAAQ5P,MAAM,2BACVG,QAAS,EAAKiN,cACdtI,UAASpC,EAAQf,IAEjB,YAAC,IAAD,CAAMA,GAAG,qBAAqBC,OAAQ,CAAE4P,KAAM7B,EAAeC,IAA7D,OACSD,EAAeC,EADxB,4BAOXzD,EAAezJ,EAAQf,KAAO,mBAAK3B,MAAM,iDACtC,YAAC,IAAD,CAAqBT,OAAQ,EAAKP,MAAMO,OAAQkD,QAASA,EACrDF,SAAUA,EACV6F,UAAW1F,EAAQf,GACnB+B,SAAU,SAAAqE,GAAC,OAAI,EAAKrE,SAAShB,EAAQf,IAAMoG,GAC3CvF,eAAgB,EAAKkB,gBAMxCyL,EAAgBC,EAAmB,GAAK,uBACrC,sBAAQpP,MAAM,2BACVG,QAASb,KAAK6N,gBAEd,YAAC,IAAD,CAAMxL,GAAG,qBAAqBC,OAAQ,CAAE4P,KAAMrC,EAAgBC,IAA9D,OACSD,EAAgBC,EADzB,2BAKPlD,GAAmB,uBAChB,sBAAQlM,MAAM,2BACVG,QAASb,KAAK6N,gBAEd,YAAC,IAAD,CAAMxL,GAAG,8BAAT,gC,GAlaMK,e,EA0af2jB,Q,uHCvbTG,EADL/mB,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MASJ+mB,QAAUC,sBAVS,EAYnBC,WAAa,SAACllB,GACVA,EAAE2N,iBACF3N,EAAE2E,mBAda,EAiBnBwgB,aAAe,SAACnlB,GACZA,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKygB,cACDplB,EAAEqlB,aAAaC,OAAStlB,EAAEqlB,aAAaC,MAAMpmB,OAAS,GACtD,EAAKf,SAAS,CAAEonB,MAAM,KAtBX,EA0BnBC,cAAgB,SAACxlB,GACbA,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKygB,cACoB,IAArB,EAAKA,aACL,EAAKjnB,SAAS,CAAEonB,MAAM,KA/BX,EAmCnBE,WAAa,SAACzlB,GAOV,GAHAA,EAAE2N,iBACF3N,EAAE2E,kBACF,EAAKxG,SAAS,CAAEonB,MAAM,IAClBvlB,EAAEqlB,aAAa3B,OAAS1jB,EAAEqlB,aAAa3B,MAAMxkB,OAAS,EAAG,CAGzD,IAAK,IAAIiI,EAAI,EAAGue,EAAI1lB,EAAEqlB,aAAa3B,MAAMxkB,OAAQiI,EAAIue,EAAGve,GAAK,EAAG,CAG5D,EAAKwe,cAFS3lB,EAAEqlB,aAAa3B,MAAMvc,IAKvC,EAAKie,YAAc,IAnDR,EAwDnBQ,eAAiB,SAACC,GACdA,EAAMlY,iBACN,IAAMmY,EAAKD,EAAMvjB,OAIjB,IAAK,IAAI6E,EAAI,EAAGue,EAAII,EAAGpC,MAAMxkB,OAAQiI,EAAIue,EAAGve,GAAK,EAAG,CAGhD,EAAKwe,cAFSG,EAAGpC,MAAMvc,MA/DZ,EAsEnB4e,YAAc,WA3EJ,GAKS,EA8EnBC,aAAe,SAACC,GAAe,MAK8C,EAAKhoB,MALnD,IAKnB0lB,aALmB,IAKMpf,cALN,MAKe,aALf,MAKyBC,aALzB,MAKiC,aALjC,cAKJ,aALI,IAMd,GAET3E,IAAKqmB,WAAW3hB,IAChBA,IAGJ,IAAM4hB,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWJ,GAC3B,IAAMK,EAAa,CACfC,SAAU,GAGdD,EAAWE,IAAM,IAAIC,eAErBH,EAAWE,IAAIE,OAAOC,iBAAiB,YAAY,SAACd,GAEhD,EAAKe,eAAef,EADJI,MAGpBK,EAAWE,IAAIG,iBAAiB,aAAa,SAACd,GAE1C,EAAKE,YAAYF,EADDI,MAGpBK,EAAWE,IAAIG,iBAAiB,QAAQ,SAACd,GAErC,EAAKE,YAAYF,EADDI,MAGpBK,EAAWE,IAAIG,iBAAiB,WAAW,SAACd,GACxC,IAAMgB,EAAUZ,EACZpmB,IAAKqmB,WAAW1hB,IAChBA,IAEJ,EAAKuhB,YAAYF,EAAOgB,MAE5BP,EAAWE,IAAIG,iBAAiB,YAAY,SAACd,GAEzC,EAAKE,YAAYF,EADDI,MAGpBK,EAAWE,IAAIG,iBAAiB,SAAS,SAACd,GAEtC,EAAKE,YAAYF,EADDI,MAGpBK,EAAWE,IAAIG,iBAAiB,SAAS,SAACd,GAEtC,EAAKE,YAAYF,EADDI,MAGpBK,EAAWE,IAAIG,iBAAiB,oBAAoB,SAACd,GAEjD,EAAKiB,WAAWjB,EADAI,MAIpBK,EAAWE,IAAIO,KAAK,OAApB,GAA+BlnB,IAAKyc,eAAiB,EAAKre,MAAM2lB,QAChE0C,EAAWE,IAAIQ,iBAAiB,gBAAhC,UAA2DnnB,IAAKonB,eAChEX,EAAWE,IAAIU,KAAKf,GAEpB,IAAMgB,EAAWlB,EAAW1lB,KACtB6mB,EAAoB,EAAK/oB,MAAM+oB,kBAChCA,EAAkBD,KACnBC,EAAkBD,GAAY,IAElCC,EAAkBD,GAAUb,WAAaA,EACzCc,EAAkBD,GAAUE,SAAW,EAAKhpB,MAAMgpB,SAClD,EAAKlpB,SAAS,CAAEipB,uBAjJD,EAqJnBzB,cAAgB,SAACM,GACb,OAAO,IAAIqB,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WAEnBD,EAAOd,iBAAiB,SAAS,SAACgB,GAI9BH,EAAOG,MAGXF,EAAOd,iBAAiB,QAAQ,SAACd,GAK7B,IAAM+B,EAAQ3B,EACRkB,EAAWS,EAAMrnB,KACjB6mB,EAAoB,EAAK/oB,MAAM+oB,kBAChCA,EAAkBD,KACnBC,EAAkBD,GAAY,IAElCC,EAAkBD,GAAUtB,MAAQA,EACpC,EAAK1nB,SAAS,CAAEipB,sBAChB,EAAKpB,aAAa4B,GAClBL,EAAQ1B,MAGZ4B,EAAOI,cAAc5B,OAjLV,EAqLnBW,eAAiB,SAACf,EAAOI,GACrB,GAAIJ,EAAMiC,iBAAkB,CACxB,IAAMX,EAAWlB,EAAW1lB,KACtB6mB,EAAoB,EAAK/oB,MAAM+oB,kBAC/BW,EAAmBlC,EAAMmC,OAASnC,EAAM/kB,MAAS,IA9LrD,EAkMFsmB,EAAkBD,GAAUb,WAAWC,SAAWwB,EAClD,EAAK5pB,SAAS,CAAEipB,wBA9LL,EAkMnBN,WAAa,SAACjB,EAAOI,GACjB,IAAMkB,EAAWlB,EAAW1lB,KACtB6mB,EAAoB,EAAK/oB,MAAM+oB,kBAC/Bd,EAAac,EAAkBD,GAAUb,WAO/C,GAAIA,GAA4C,IAA9BA,EAAWE,IAAIyB,YAA8C,MAA1B3B,EAAWE,IAAI3kB,OAGhE,IAFA,IACM6hB,EADWwE,KAAKC,MAAM7B,EAAWE,IAAI4B,cACpBxe,KAAK8Z,MACnBvc,EAAI,EAAGA,EAAIuc,EAAMxkB,OAAQiI,GAAK,EAAG,CAEtC,EAAKkhB,gBADQ3E,EAAMvc,IAEnB,EAAKmhB,UAAUlmB,MAAQ,KAhN/B,EAAK/D,MAAQ,CACTknB,MAAM,EACNgD,gBAAiB,EACjBC,cAAe,GACfpB,kBAAmB,IANR,E,0HAuNnBiB,gBAAA,SAAgB9E,GAAM,IAIV6D,EAAsB7oB,KAAKF,MAA3B+oB,kBAJU,EAKkC7oB,KAAKN,MAAjDqlB,EALU,EAKVA,eALU,IAKMK,oBALN,MAKqB,aALrB,SAOXyD,EAAkB7D,EAAKhjB,MAC9BhC,KAAKJ,SAAS,CAAEipB,sBAChB9D,EAAeC,GACfI,GAAa,I,EAIjB/b,kBAAA,WAAoB,WACV6gB,EAAMlqB,KAAKymB,QAAQ0D,QACzBD,EAAI9B,iBAAiB,YAAapoB,KAAK4mB,cACvCsD,EAAI9B,iBAAiB,YAAapoB,KAAKinB,eACvCiD,EAAI9B,iBAAiB,WAAYpoB,KAAK2mB,YACtCuD,EAAI9B,iBAAiB,OAAQpoB,KAAKknB,YAEblnB,KAAKN,MAAlBwG,UAGJjC,YAAW,WAEP,EAAK8lB,UAAUK,UAChB,K,EAIX5F,qBAAA,WACI,IAAM0F,EAAMlqB,KAAKymB,QAAQ0D,QACzBD,EAAIG,oBAAoB,YAAarqB,KAAK4mB,cAC1CsD,EAAIG,oBAAoB,YAAarqB,KAAKinB,eAC1CiD,EAAIG,oBAAoB,WAAYrqB,KAAK2mB,YACzCuD,EAAIG,oBAAoB,OAAQrqB,KAAKknB,a,EAGzCnnB,OAAA,WAAS,WACG8oB,EAAsB7oB,KAAKF,MAA3B+oB,kBAER,OACI,mBAAKjoB,MAAO,CAAE0pB,SAAU,YAAc/kB,IAAKvF,KAAKymB,SAC3CzmB,KAAKF,MAAMknB,MACZ,mBAAKpmB,MAAO,CACR2pB,OAAQ,kBACRC,gBAAiB,uBACjBF,SAAU,WACVG,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,OAAQ,OAER,mBACIjqB,MAAO,CACH0pB,SAAU,WACVG,IAAK,MACLG,MAAO,EACPD,KAAM,EACNG,UAAW,SACXC,MAAO,OACPC,SAAU,KAGd,uBAAK,YAAC,IAAD,CAAM3oB,GAAG,+BAAT,8BAIb,uBACI,qBAAO3B,MAAM,yBAAyBuqB,UAAQ,EAC1CzqB,KAAK,OACL6B,GAAG,aACH6oB,SAAUlrB,KAAKqnB,eACf9hB,IAAK,SAACkD,GACF,EAAKshB,UAAYthB,MAI7B,uBACKyS,OAAOC,KAAK0N,GAAmBloB,OAAS,EAAK,sBAAI,YAAC,IAAD,CAAM0B,GAAG,6BAAT,oBAAoE,GACtH,kBAAI3B,MAAM,cACLwa,OAAOC,KAAK0N,GAAmB9nB,KAAI,SAACoO,GAAQ,MACb0Z,EAAkB1Z,GAAtC4Y,kBADiC,MACpB,GADoB,EAEnCoD,EAAUhc,EAAIuP,MAAM,8CAC1B,OACI,kBAAIhe,MAAM,wEACN,mBAAKA,MAAM,wCACNyqB,GAAW,mBAAKzqB,MAAM,iBACnBwD,IAAK2kB,EAAkB1Z,GAAKmY,MAAMvjB,OAAOqnB,OACzCxqB,MAAM,sBAEV,yBAAQioB,EAAkB1Z,GAAKmY,MAAMiB,YACrC,YAAC,IAAD,CAAMlmB,GAAG,+BAAT,uBACA,yBAAQf,IAAK+pB,YAAYxC,EAAkB1Z,GAAKmY,MAAM/kB,MAAO,KAEjE,mBAAK7B,MAAM,gBAAgBE,MAAM,gBAC7B,mBACIF,MAAM,qEACNwb,KAAK,cACLtb,MAAK,UAAYmnB,EAAWC,SAAvB,kBACLsD,gBAAevD,EAAWC,SAC1BuD,gBAAc,IACdC,gBAAc,eASzCxrB,KAAKN,MAAM+rB,W,GAzUM/oB,e,EA+UnB8jB,O,ycCjVTjnB,EAAe,GAGfC,EADLC,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMJgsB,YAAc,WAAM,MAEiB,EAAKhsB,OAFtB,EAER+V,aAFQ,EAEKxJ,UAEjB,EAAKrM,SAAS,CACV+rB,cAJiB,EAAK7rB,MAAtB6rB,gBANR,EAAK7rB,M,+VAAL,IACOP,GAHQ,E,kHAiBnBQ,OAAA,WAAS,IACG4rB,EAAiB3rB,KAAKF,MAAtB6rB,aADH,EAE2C3rB,KAAKN,MAAMO,OAAnDC,EAFH,EAEGA,WAAYC,EAFf,EAEeA,UAAWC,EAF1B,EAE0BA,aAF1B,EAIkEJ,KAAKN,MADpEmX,EAHH,EAGGA,MAHH,IAIDrW,YAJC,MAIM,QAJN,MAIeC,mBAJf,MAI6B,aAJ7B,EAMCmrB,EAAkB,GACxB1Q,OAAO2Q,QAPF,EAGU/lB,OAIOiR,YAAY6L,SAAQ,YAEtC1H,OAAO2Q,QAFuD,MAEnCjJ,SAAQ,YAAwB,IAAhBkJ,EAAgB,KAEnDA,EAAWC,WACXH,EAAgBhoB,KAAKkoB,EAAWC,iBAI5C,IAAMA,EAAYH,EAAgBI,OAAOlrB,MAAM,EAAG,IAExD,OAAQ,mBACE,mBAAKJ,MAAM,mCACP,oBAAMA,MAAM,sCACRG,QAASb,KAAK0rB,aAEb7U,EAHL,IAGY,YAAC,IAAD,CAAMxU,GAAG,eAAT,WAGfspB,GAAgB,mBAAKjrB,MAAM,aACvBqrB,GAAaA,EAAUhrB,KAAI,SAACkrB,GACzB,IAAIhrB,EACAC,EAcAC,EAHJ,GAVa,UAATX,GACAS,EAAOf,EAAWkB,eAAe6qB,GACjC/qB,EAAQhB,EAAWmB,wBAAwB4qB,IAC3B,SAATzrB,GACPS,EAAOd,EAAUiB,eAAe6qB,GAChC/qB,EAAQf,EAAUkB,wBAAwB4qB,IAC1B,YAATzrB,IACPS,EAAOb,EAAagB,eAAe6qB,GACnC/qB,EAAQd,EAAaiB,wBAAwB4qB,KAE5ChrB,EACD,MAAO,GAGPK,IAAKC,QAAQL,KACbC,EAAaD,EAAMM,MAAK,SAAAC,GAAC,OAAiB,IAAbA,EAAEC,WAEnC,IAAMc,EAAQb,IAAGC,SAAS,CAAEX,OAAMY,KAAMV,EAAYW,SAAU,SACxDW,EAAYd,IAAGI,iBAAiBd,GAChCe,EAAOL,IAAGM,YAAYhB,GAAM,GAClC,OAAQ,mBAAKP,MAAM,4DACdS,EAAa,mBACV,iBAAGe,KAAI,iBAAmBf,EAAWgB,OAAUC,MAAOjB,EAAWa,KAAMnB,QAAS,SAACY,GAAD,OAAOhB,EAAYgB,EAAGN,EAAWgB,SAASzB,MAAM,kBAC5H,mBACIA,MAAK,mEACLE,MAAU4B,EAAQ,0BAA0BA,EAA7B,8BAAkE,KAE/EA,GAAS,mBAAK9B,MAAM,GAAGE,MAAM,sCAAsC6B,KAG7E,mBAAK/B,MAAM,SACNsB,EADL,IACW,oBAAMtB,MAAM,uBAAZ,KAAqCS,EAAWa,QAEzD,mBACF,mBACItB,MAAK,mEACLE,OAAU4B,EAAQ,0BAA0BA,EAA7B,8BAAkE,IAA5E,mBAEHA,GAAS,mBAAK9B,MAAM,aAAaE,MAAM,sCAAsC6B,IAEnF,mBAAK/B,MAAM,QACNsB,QAKhB6U,EAAQkV,EAAUprB,QAAU,mBACzB,qBAAOD,MAAM,cACT,YAAC,IAAD,CAAM2B,GAAG,oBAAT,iC,GAhGcK,e,EAwGvBlD,Q,wKCtGT0sB,EADLzsB,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAKJysB,gBAAkB,WAEd,EAAKvsB,SAAS,CACVwsB,aAFoB,EAAKtsB,MAArBssB,eALR,EAAKtsB,MAAQ,GACnB,EAAKsE,SAAW,GAHK,E,0HAabioB,YAAN,8CACM5nB,EAAczE,KAAKN,MAAMO,OAAzBwE,UACRzE,KAAKJ,SAAS,CAAEqd,WAAW,IAFzB,IAGYhc,EAASwD,EAATxD,KACd,GAAIA,EAAKof,qBAAuBpf,EAAKof,oBAAoBC,OAAQ,OACZrf,EAAKof,oBAAoBC,OAC7E7b,EAAU8b,eAAe,CAAEC,IAFqC,EACxDC,SACwBC,IAFgC,EACzCC,UACcC,SAF2B,EACzBA,WAE9Bnc,EAAU6nB,gBAPlB,yB,EAWHjjB,kBAAA,WACOrJ,KAAKqsB,e,EAGTtsB,OAAA,WAAS,WAGG0E,EAAczE,KAAKN,MAAMO,OAAzBwE,UACAsc,EAAuDtc,EAAvDsc,UAAWwL,EAA4C9nB,EAA5C8nB,cAAeC,EAA6B/nB,EAA7B+nB,mBAC1B5V,EADuDnS,EAATxD,KAC9C2V,uBAER,OAAKmK,GALa/gB,KAAKN,MAAf6d,MADgBvd,KAAKF,MAArBssB,YAWA,mBAAK1rB,MAAM,uEACNkW,GAA0BA,EAAuBsB,mBAAqB,sBAAKtB,EAAuBsB,mBACnG,mBAAKxX,MAAM,mBACP0H,aAAczG,IAAG8qB,cACjBpkB,WAAY1G,IAAG8qB,cACfnkB,YAAa3G,IAAG8qB,cAChBC,SAAU/qB,IAAG8qB,eAEb,qBAAO/rB,MAAM,gCACT,yBACI,sBACI,kBAAIA,MAAM,eAAV,KACA,kBAAIA,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,iBAAT,UACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,mBAAT,YACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,qBAAT,cACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,mBAAT,YACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,gBAAT,SACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,oBAAT,aACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,gBAAT,WAGhC,yBACKkqB,GAAiBA,EAAcxrB,KAAI,SAAAuW,GAAI,OAAI,mBACxC,sBACI,kBAAI5W,MAAM,eAAc,wBAAO4W,IAC/B,kBAAI5W,MAAM,eACN,wBACKY,IAAKqrB,eAAeH,EAAmBlV,GAAMsV,MAAO,qCAAuC,mBAAKhsB,MAAM,eAAesD,IAAG,gBAAkB5C,IAAKqrB,eAAeH,EAAmBlV,GAAMsV,MAAO,oCAAtE,WAGjI,kBAAIlsB,MAAM,eACN,wBACKY,IAAKqrB,eAAeH,EAAmBlV,GAAMuV,QAAS,qCAAuC,mBAAKjsB,MAAM,eAAesD,IAAG,gBAAkB5C,IAAKqrB,eAAeH,EAAmBlV,GAAMuV,QAAS,oCAAxE,WAGnI,kBAAInsB,MAAM,eACN,wBACKY,IAAKqrB,eAAeH,EAAmBlV,GAAMwV,IAAK,qCAAuC,mBAAKlsB,MAAM,eAAesD,IAAG,gBAAkB5C,IAAKqrB,eAAeH,EAAmBlV,GAAMwV,IAAK,oCAApE,WAG/H,kBAAIpsB,MAAM,eACN,wBACKY,IAAKqrB,eAAeH,EAAmBlV,GAAMyV,QAAS,qCAAuC,mBAAKnsB,MAAM,eAAesD,IAAG,gBAAkB5C,IAAKqrB,eAAeH,EAAmBlV,GAAMyV,QAAS,oCAAxE,WAGnI,kBAAIrsB,MAAM,eACN,wBACI,iBAAGA,MAAM,gDACT,oBAAMA,MAAOiB,IAAGqrB,oBAAoB1rB,IAAKqrB,eAAeH,EAAmBlV,GAAO,0BAC9E,YAAC,IAAD,CAAarX,OAAQ,EAAKP,MAAMO,OAAQ4D,MAAOvC,IAAKqrB,eAAeH,EAAmBlV,GAAO,2BAEjG,oBAAM5W,MAAM,uCAAZ,KACA,oBAAMA,MAAOiB,IAAGqrB,oBAAoB1rB,IAAKqrB,eAAeH,EAAmBlV,GAAO,0BAC9E,YAAC,IAAD,CAAarX,OAAQ,EAAKP,MAAMO,OAAQ4D,MAAOvC,IAAKqrB,eAAeH,EAAmBlV,GAAO,6BAIzG,kBAAI5W,MAAM,eACN,wBACKY,IAAKmI,OAAOnI,IAAKqrB,eAAeH,EAAmBlV,GAAO,wBAAyB,GADxF,IAC4F,oBAAM5W,MAAM,kCAAZ,QAGhG,kBAAIA,MAAM,eACN,wBACI,iBAAGA,MAAM,gCADb,IAC8C,oBAAMA,MAAOiB,IAAGsrB,kBAAkB3rB,IAAKqrB,eAAeH,EAAmBlV,GAAO,qBAAsBhW,IAAKmI,OAAOnI,IAAKqrB,eAAeH,EAAmBlV,GAAO,mBAAoB,IADlO,IAC6O,oBAAM5W,MAAM,kCAAZ,KAD7O,IACmS,oBAAMA,MAAOiB,IAAGsrB,kBAAkB3rB,IAAKqrB,eAAeH,EAAmBlV,GAAO,qBAAsBhW,IAAKmI,OAAOnI,IAAKqrB,eAAeH,EAAmBlV,GAAO,mBAAoB,IADvd,IACke,oBAAM5W,MAAM,kCAAZ,iBAQ1f,sBAAQF,KAAK,SAASE,MAAM,mCAAmCG,QAASb,KAAKmsB,iBACzE,iBAAGzrB,MAAM,wBADb,IACsC,YAAC,IAAD,CAAM2B,GAAG,iBAAT,WAM9C,mBAAK3B,MAAM,kEACNqgB,GAAaA,EAAUpgB,OAAS,GAAK,mBAAKD,MAAM,wBAC7C,mBAAKA,MAAM,MAAMG,QAASb,KAAKmsB,iBAC1BpL,GAAaA,EAAUpgB,OAAS,GAAKogB,EAAUjgB,MAAM,EAAG,GAAGC,KAAI,SAAAmsB,GAAC,OAC7D,mBAAKxsB,MAAM,qBACP,wBACI,qBAAOA,MAAM,gCAAgCY,IAAK6rB,QAAQD,EAAEzO,OADhE,IAEI,mBAAKva,IAAG,gBAAkB5C,IAAKqrB,eAAeO,EAAG,oCAAzC,OACJxsB,MAAM,OACNE,MAAM,kBAETU,IAAKqrB,eAAeO,EAAG,6CAA+C,GAAK,qBAAOxsB,MAAM,QACpFY,IAAKqrB,eAAeO,EAAG,6CAA6C,oBAAMxsB,MAAM,kCAAZ,OAEzE,qBAAOA,MAAM,QACT,iBAAGA,MAAM,sCADb,IACoD,YAAC,IAAD,CAAaT,OAAQ,EAAKP,MAAMO,OAAQ4D,MAAOvC,IAAKqrB,eAAeO,EAAG,sCAE1H,qBAAOxsB,MAAM,QACT,iBAAGA,MAAM,2BADb,IAC0CY,IAAKqrB,eAAeO,EAAG,8BAA8B,oBAAMxsB,MAAM,kCAAZ,OAD/F,IACuJ,oBAAMA,MAAM,kCAAkCiB,IAAGyrB,cAAc9rB,IAAKqrB,eAAeO,EAAG,2CAE1O,8BAvGpB,I,GArCKxqB,e,EAsJTwpB,Q,waC3JTmB,EADL5tB,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MACKI,MAAQ,GACb,EAAK6U,aAAe,KAHL,E,kCAMnB6P,qBAAA,WAAuB,IACX8I,EAA+BttB,KAAKN,MAApC4tB,2BACJA,GACAA,EAA2BttB,KAAK2U,e,EAIxCtL,kBAAA,WAAoB,IACRkkB,EAA4BvtB,KAAKN,MAAjC6tB,wBACJA,GACAA,EAAwBvtB,KAAK2U,e,EAIrC5U,OAAA,WAAS,aAUDC,KAAKN,MAVJ,IAED2jB,yBAFC,MAEmB,GAFnB,MAGDC,yBAHC,MAGmB,GAHnB,EAIDgB,EAJC,EAIDA,cAJC,IAKDC,WALC,MAKK,GALL,EAMDvV,EANC,EAMDA,IACAiS,EAPC,EAODA,WACAuM,EARC,EAQDA,WACA7a,EATC,EASDA,UAGE8a,EAAiB,GAMvB,OALI9a,IACA8a,EAAe9a,UAAYA,GAE/BsO,EAAW2B,SAAQ,SAAAnhB,GAAC,OAAIgsB,EAAe,QAAQhsB,GAAOisB,UAAUF,EAAW/rB,IAAM8iB,EAAI9iB,OAGjF,qBACIf,MAAK,GAAK2iB,EACV9d,IAAK,SAAAkD,GAAC,OAAI,EAAKkM,aAAelM,GAC9B6I,WAAUtC,GACNye,GAEJ,mBACI/sB,MAAK,GAAK4iB,EACV1iB,MAAK,mBAEJ0jB,EAAc,CACXC,MACAvV,W,GApDGtM,e,EA6DrBirB,EADLluB,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAKJkuB,2BAA6B,WACzB,EAAKC,qBAAuB,MAPb,EAUnB5J,mBAAqB,SAAC4H,GAAY,IACtB5H,EAAuB,EAAKvkB,MAA5BukB,mBAC2B,mBAAxBA,GAEPA,EAAmB4H,GAKvBA,EAAQjJ,SAAQ,SAACnhB,GAAM,IACXqsB,EAAmBrsB,EAAnBqsB,eADW,EAEIrsB,EAAEsC,OAAOuJ,QAAxBrF,cAFW,MAEF,EAFE,EAQb8lB,EAAgBhe,KAAKC,IAHPvO,EAAEsC,OAAOiqB,WAAW,GAAGC,aACtBxsB,EAAEsC,OAAOkqB,aACTxsB,EAAEsC,OAAOmqB,cAI1BJ,GACArsB,EAAEsC,OAAOiqB,WAAW,GAAGptB,MAAMutB,QAA7B,QAYA1sB,EAAEsC,OAAOnD,MAAMwtB,WAAeL,EAAgB9lB,EAAS8lB,EAAgB9lB,GAAvE,MACOxG,EAAEsC,OAAOnD,MAAMwtB,YAEtB3sB,EAAEsC,OAAOnD,MAAMwtB,WAAeL,EAAgB9lB,EAAS8lB,EAAgB9lB,GAAvE,KACAxG,EAAEsC,OAAOiqB,WAAW,GAAGptB,MAAMutB,QAA7B,YA/CO,EAoDnBE,0BAA4B,WACxB,KAAM,yBAA0BC,WAC1B,8BAA+BA,WAC/B,sBAAuBA,OAAOC,0BAA0BC,WAC1D,OAAO,EAQX,EAAKX,qBAAuB,IAAIY,qBAAqB,EAAKxK,mBAL1C,CACZyK,KAAM,KACNC,WAAY,QACZC,UAAW,MA9DA,EAmEnBrB,wBAA0B,SAAChoB,GACnB,EAAKsoB,sBAAwBtoB,GAC7B,EAAKsoB,qBAAqBgB,QAAQtpB,IArEvB,EAwEnB+nB,2BAA6B,SAAC/nB,GACtB,EAAKsoB,sBAAwBtoB,GAC7B,EAAKsoB,qBAAqBiB,UAAUvpB,IAxExC,EAAKzF,MAAQ,GAFE,E,kCA8EnB8a,mBAAA,WACI5a,KAAKquB,6B,EAGT7J,qBAAA,WACIxkB,KAAK4tB,8B,EAGT7tB,OAAA,WAAS,aAQDC,KAAKN,MARJ,IAED2L,YAFC,MAEM,GAFN,MAGDgY,yBAHC,MAGmB,oBAHnB,MAIDC,yBAJC,wHAKDgB,qBALC,MAKe,kBAAO,gDALtB,MAMDrD,kBANC,MAMY,GANZ,MAODuM,kBAPC,MAOY,GAPZ,EAUL,OACI,mBAAK9sB,MAAM,SACN2K,GAAQA,EAAK0F,QAAO,SAAAtP,GAAC,OAAIH,IAAK4hB,SAASzhB,MAAIV,KAAI,SAACwjB,EAAKvV,GAClD,IAAM+f,EAAiBxK,EAAIyK,eAAe,qBAAuBzK,EAAIlB,kBAAoBA,EACnF4L,EAAiB1K,EAAIyK,eAAe,qBAAuBzK,EAAIjB,kBAAoBA,EACzF,OAAQ,mBACJ,YAAC+J,EAAD,CACIle,IAAG,YAAcH,EAAd,IAAqBuV,EAAIliB,GAC5BkiB,IAAKA,EACLvV,IAAKA,EACLue,wBAAyB,EAAKA,wBAC9BD,2BAA4B,EAAKA,2BACjCjK,kBAAmB0L,EACnBzL,kBAAmB2L,EACnB3K,cAAeA,EACfrD,WAAYA,EACZuM,WAAYA,U,GAjHjB9qB,e,EA0HRirB,Q","file":"route-stories.chunk.25897.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\nconst MAX_USERS_TO_DISPLAY = 1;\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, MAX_USERS_TO_DISPLAY).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            const name = mu.displayName(user);\n                            return (<>\n                                <span class='font-weight-lighter'>\n                                    {publicTeam ? <>\n                                        <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                            {name}\n                                        </a>\n                                    </> : <>\n                                        {name}\n                                    </>}\n                                </span>\n                            </>);\n                            // return (<>\n                            //     {publicTeam ? <>\n                            //         <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                            //             <div\n                            //                 class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //                 style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                            //             >\n                            //                 {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //             </div>\n                            //         </a>\n                            //     </> : <>\n                            //         <div\n                            //             class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //             style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            //         >\n                            //             {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //         </div>\n                            //     </>}\n                            // </>);\n                        })}\n                        {likes.length > MAX_USERS_TO_DISPLAY && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - MAX_USERS_TO_DISPLAY }}>and {likes.length - MAX_USERS_TO_DISPLAY} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n    \n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentWorkout({ id: workout.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[workout.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ workout, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, col = 12, offset = 0, showAvatar = true, extraClass = '', workout } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class={`col-${col} offset-${offset} ${extraClass}`}>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    {showAvatar && <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>}\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={workout.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {comment.images && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' />  <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentReplyWorkout({ id: workout.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ workout, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WorkoutCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport Story from './publicStory';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n        const { story } = props;\n\t\tawait storyStore.loadPublicFeed({ story });\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.story !== this.props.story) {\n            this.loadStoriesPublicFeed(nextProps);\n        }\n    }\n\n    render() {\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n\n                <div class='row pb-4 bg-light'>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                        {!publicFeed || publicFeed.length === 0 && <>\n                            <div class='text-center text-muted mt-5'>\n                                <div class='display-1 text-center mb-5'>\n                                    <i class='fas fa-comment' />\n                                </div>\n                                <h3>No story found!</h3>\n                            </div>\n                        </>}\n                        {publicFeed && publicFeed.map((story) => <>\n                            <Story\n                                stores={this.props.stores}\n                                story={story}\n                                showAllComments={true}\n                            />\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport { route } from 'preact-router';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport Speed from '../data/speed';\nimport Elevation from '../data/elevation';\nimport Weight from '../data/weight';\nimport Distance from '../data/distance';\nimport Temperature from '../data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false,\n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    storyStore.workoutsAddLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    storyStore.workoutsAddLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        storyStore.workoutsAddCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        storyStore.workoutsAddCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            teamStore.addLikeToWorkout({ id, data });\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            storyStore.workoutsAddLikeToWorkout({ id, data });\n        }\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    showWorkoutDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const target = e.target.closest('#workoutDetail');\n        if (target) {\n            const { id } = target.dataset;\n            if (id) {\n            console.log({ target, id });\n                route(`/workouts/public/${id}`);\n            }\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { feed = {} } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedTextName = await teamStore.translate({ object: feed, user, field: 'name' });\n        let translatedTextComment;\n        if (feed.comment) {\n            translatedTextComment = await teamStore.translate({ object: feed, user, field: 'comment' });\n        }\n        this.setState({ showOriginal: 0, translatedTextName, translatedTextComment });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { feed, idx, onTeamClick = () => {}, onUserClick = () => {}, onDogClick = () => {}, holdingStore = 'team' } = this.props;\n        const { showAddComment, showDate, likeWorkout, showOriginal, translatedTextName, translatedTextComment } = this.state;\n        const { teamStore, storyStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { darkmode, hasShareApi } = appState;\n\n        const { publicDogs } = teamStore;\n        let team = {};\n        let publicUser = {};\n        if (holdingStore === 'team') {\n            team = teamStore.findPublicTeam(feed.team);\n            publicUser = teamStore.findPublicUser(feed.user) || {};\n        } else if (holdingStore === 'story') {\n            team = storyStore.findPublicTeam(feed.team);\n            publicUser = storyStore.findPublicUser(feed.user) || {};\n        }\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        const image = mu.getImage({ user: publicUser, team, object: feed, priority: 'user' });\n\n        const { likes, comments } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\t\tconst { gpxInfo = {} } = feed;\n\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (publicUser) {\n            shortname = mu.displayNameShort(publicUser);\n            name = mu.displayName(publicUser);\n            username = mu.displayName(publicUser);\n            if (publicUser.settings && publicUser.uuidv4 !== user.uuidv4) {\n                userLink = publicUser.settings.hideProfile ? null : `/inbox/${publicUser.uuidv4}`;\n            }\n        }\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        const translationName = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'name',\n        }) || translatedTextName;\n        let feedName = translationName || feed.name;\n        const translationComment = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'comment',\n        }) || translatedTextComment;\n        let feedComment = translationComment || feed.comment;\n\n        if (showOriginal) {\n            feedName = feed.name;\n            feedComment = feed.comment;\n        }\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                    <span class='badge badge-pill badge-secondary float-right'>{teamType}</span>\n                    <h5 class='mb-1 position-relative' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    <div class='mb-2'>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {feed.public === 1 ? <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-globe-europe' />\n                            </small>\n                        </> : <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                            </small>\n                        </>}\n                        {username && <>\n                            <small class='ml-2 text-muted'>\n                                {userLink ? <>\n                                    <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                </> : <>\n                                    <i class='fas fa-user' /> {username}\n                                </>}\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={feed.sledWeight} />\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> <Temperature stores={this.props.stores} value={feed.temperature} />\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                            {feed.moonIllumination && feed.moonIllumination.phaseIcon && <span class='float-right ml-2'>{feed.moonIllumination.phaseIcon}</span>}\n                        </small>\n                    </div>\n\n                    {isAdmin && <div\n                        class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                        style='overflow: auto;'\n                    >\n                        <small class='text-muted mr-2'>Adm:</small>\n                        {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {publicUser.deviceInfo && <>\n                            <span class='badge badge-secondary ml-1 float-right font-weight-light'>\n                                {['platform', 'manufacturer', 'model'].map(e => <>\n                                    <span class='ml-1 text-white'>\n                                        {publicUser.deviceInfo[e]}\n                                    </span>\n                                </>)}\n                            </span>\n                        </>}\n                        {adminData && <>\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                            </>)}\n                        </>}\n                    </div>}\n                </div>\n            </div>\n\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='d-flex justify-content-between bg-light rounded-lg px-2'>\n                {feed.distanceKm > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Distance stores={this.props.stores} value={feed.distanceKm} />\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Elevation stores={this.props.stores} value={feed.elevation} />\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {gpxInfo && gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                            <Speed stores={this.props.stores} value={gpxInfo.avgGpsMovingSpeed * 3.6} />\n                        </> : <>\n                            <Speed stores={this.props.stores} value={feed.speedAvg} />\n                        </>}\n                    </div>\n                </div>}\n            </div>\n\n            <div class='row mt-2'>\n                <div id='workoutDetail' class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;' onClick={this.showWorkoutDetail} data-id={feed.uuidv4}>\n                    <Markdown markdown={mu.replaceImages(feedName, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feedComment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                {feed.language !== language && <>\n                    {!showOriginal && translationName ? <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                    </> : <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                    </>}\n                </>}\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments\n                    stores={this.props.stores}\n                    likes={likes}\n                    comments={comments}\n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                                data-native\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value);\n        }, 1000);\n    }\n\n    async doUpdateField(id, name, value) {\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), name, value);\n    }\n\n    render() {\n        const { storyBody, storyType } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        return (<>\n            <div class='d-flex bd-highlight'>\n                <div class='p-0 w-100 bd-highlight'>\n                    <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                    <div class='border rounded rounded-lg position-relative'>\n                        <Localizer>\n                            <textarea\n                                class='form-control-plaintext px-2'\n                                type='text'\n                                placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                onInput={linkState(this, 'storyBody')}\n                                // onKeyUp={mu.resizeTextarea}\n                                onFocus={mu.resizeTextarea}\n                                style='height: 2.3em;'\n                                value={storyBody || story.body}\n                            />\n                        </Localizer>\n                    </div>\n\n                    <div class='position-relative mt-3'>\n                        {isAdmin && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <label>Pinned to top:</label>\n                                        <input\n                                            type='checkbox'\n                                            id={story.id}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                        />\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                    <button type='button' class='btn btn-primary mb-2'\n                        onClick={this.saveStory}\n                        data-id={story.id}\n                    ><i class='fas fa-paper-plane' /></button>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>                    \n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                            {showEdit[story.id] && <>\n                                <StoryEditInline\n                                    stores={this.props.stores}\n                                    story={story}\n                                    key={`story-edit-${story.id}`}\n                                    callback={this.doneEdit}\n                                />\n                            </>}\n                            {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                            </div>}\n                        </div>\n                    </div>\n\n                    {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='mr-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='story'\n                                onTeamClick={onTeamClick}\n                                onUserClick={onUserClick}\n                            />\n                        </div>\n                        {views > 0 && <>\n                            <div>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={story}\n                                    type='story'\n                                    isTeamAdmin={isTeamAdmin}\n                                    isAdmin={isAdmin}\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                        </>}\n                    </div>\n\n                    {showTeamSetting[story.id] && <>\n                        <small>\n                            <div class='alert alert-info' role='alert'>\n                                <span class='display-4 float-left'>\n                                    <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                </span>\n                                <p>\n                                    <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                </p>\n                                <p>\n                                    <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                </p>\n                                <p>\n                                    <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                </p>\n                            </div>\n                        </small>\n                    </>}\n\n                    <div>\n                        <div class='row'>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                    data-id={story.id}\n                                    onClick={this.likeStory}\n                                >\n                                    <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                </button>\n                            </div>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                    data-id={story.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                </button>\n                            </div>\n                            {hasShareApi ? <>\n                                <div class='col text-center'>\n                                    <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        onClick={this.shareLink}\n                                        data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        data-title={`title: ${story.title}`}\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </button>\n                                </div>\n                            </> : <>\n                                <div class='col text-center'>\n                                    <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        data-native\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </a>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n\n                    <div class='mt-2'>\n                        <StoryComments\n                            stores={this.props.stores}\n                            story={story}\n                            col='10'\n                            offset='2'\n                            compact={false}\n                            showAllComments={showAllComments}\n                            initCall={this.closeAllAddComments}\n                        />\n                        {showAddComment[story.id] && <StoryAddComment\n                            stores={this.props.stores}\n                            story={story}\n                            inputRef={c => this.inputRef[story.id] = c}\n                            inputRefObject={this.inputRef}\n                            col='10'\n                            offset='2'\n                            key={`story-comment-${story.id}`}\n                        />}\n                    </div>\n\n                {/* </div> */}\n\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport linkState from 'linkstate';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport StoryPublicDetail from '../../components/story/publicDetail';\nimport Ad from '../../components/ad/';\nimport YrWeather from '../../components/yrweather/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n\tviewmenu: 'wall',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, messageStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\n\t\tconst { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n\t\t}\n\t\tthis.setState({ isLoading: false });\n    }\n\n\treloadFeeds = async (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    sortby = (e) => {\n        const { storyStore } = this.props.stores;\n        const sortField = e.target.value;\n        let sortBy = () => {};\n        switch (sortField) {\n            case 'likes':\n                sortBy = (a, b) => a.likes && b.likes && a.likes.length < b.likes.length;\n                break;\n            case '-likes':\n                sortBy = (a, b) => a.likes && b.likes && a.likes.length > b.likes.length;\n                break;\n            case 'comments':\n                sortBy = (a, b) => a.comments && b.comments && a.comments.length < b.comments.length;\n                break;\n            case '-comments':\n                sortBy = (a, b) => a.comments && b.comments && a.comments.length > b.comments.length;\n                break;\n            default:\n                sortBy = (a, b) => a.id < b.id;\n                break;\n        }\n        storyStore.sortPublicFeed(sortBy);\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\trender() {\n        const { isLoading, viewmenu } = this.state;\n        const { story, hashtag, teamid, path } = this.props;\n\t\tconst { userStore, appState, storyStore } = this.props.stores;\n        const { darkmode } = appState;\n        const team = storyStore.findPublicTeamByUuidv4(teamid);\n\n\t\tconst { user } = userStore;\n\t\tconst { yrWeather, currentLocationGeocode = {} } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n        const image = mu.getImage({ team });\n\n        let shortname;\n        let name;\n        let username;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='bg-light'>\n                    <YrWeather stores={this.props.stores} data={yrWeather} place={place} />\n                </div>\n\n                <StoryAdd stores={this.props.stores} />\n\n                <div class='row bg-light pb-3 pt-3'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                        <div class='row'>\n                            <div class='col-7 text-overflow'>\n                                <h3>\n                                    {hashtag && <>\n                                        <span class='badge badge-primary'>#{hashtag}</span>\n                                    </>}\n                                    {team && <>\n                                        <div class='d-flex position-relative'>\n                                            <div\n                                                class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                                            >\n                                                {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                                            </div>\n                                            <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                                                <h3 class='mb-1'>\n                                                    {team.public ? <>\n                                                        <a href={`/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a>\n                                                    </> : <>\n                                                        {name}\n                                                    </>}\n                                                </h3>\n                                            </div>\n                                        </div>\n                                    </>}\n                                </h3>\n                            </div>\n                            <div class='col-5'>\n                                <small class='float-right mt-1'>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id='team'\n                                        onChange={this.sortby}\n                                    >                    \n                                        <option value=''><Text id='story.sort.new'>Nyeste først</Text></option>\n                                        <option value='likes'><Text id='story.sort.likes-desc'>Flest likes først</Text></option>\n                                        <option value='-likes'><Text id='story.sort.likes-asc'>Færrest likes først</Text></option>\n                                        <option value='comments'><Text id='story.sort.comments-desc'>Flest kommentarer først</Text></option>\n                                        <option value='-comments'><Text id='story.sort.comments-asc'>Færrest kommentarer først</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <StoryPublicFeed stores={this.props.stores} story={story} hashtag={hashtag} teamid={teamid} path={path} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        this.insertWorkouts();\n        if (!offset) {\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    insertWorkouts = () => {\n        const { storyStore } = this.props.stores;\n        const { publicWorkouts, publicFeed } = storyStore;\n        if (publicWorkouts.length) {\n            const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n            storyStore.localUpdateField('publicFeed', finalArray);\n        }\n    }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport WorkoutReplyComment from '../../components/workout/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n};\n\nconst MAX_COMMENTS = 1;\n\n@observer\nclass WorkoutComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutComment({ id: workout.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', workout, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutCommentReply({ id: workout.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', workout, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { workout } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await teamStore.translateCommentReply({ commentid, replyid, object: workout, user });\n        } else {\n            translatedText[key] = await teamStore.translateComment({ commentid, object: workout, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { workout, callback = () => {}, col = 12, offset = 0, compact = false } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (workout.comments) {\n            totalComments = workout.comments.length;\n            if (showAllComments) {\n                filteredComments = workout.comments;\n            } else {\n                // filteredComments = workout.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = workout.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {/* {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>} */}\n                {workout && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                   const translation = teamStore.getCommentTranslations({\n                        object: workout,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                    {displayName}\n                                                </h5>\n\n                                                {teams && teams.length > 0 && <div class='mb-2'>\n                                                    <small class='font-weight-lighter text-muted'>\n                                                        {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                            <a href={`/teams/public/${t.uuidv4}`} class='mr-2'><i class='fas fa-users text-muted' /> {t.name}</a>\n                                                        </>)}\n                                                    </small>\n                                                </div>}\n\n                                                <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                            </span>\n                                        </div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row'>\n                                                <div\n                                                    class={`col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 30vh;`}                                                    \n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                        {isAdmin && currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                            <span class='ml-2 text-muted'>\n                                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                            </span>\n                                        </>}\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    const replyTranslation = teamStore.getCommentReplyTranslations({\n                                        object: workout,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                            </h5>\n\n                                                            {teams && teams.length > 0 && <div class='mb-2'>\n                                                                <small class='font-weight-lighter text-muted'>\n                                                                    {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                                        <a href={`/teams/public/${t.uuidv4}`} class='mr-2'>\n                                                                            <i class='fas fa-users text-muted' /> {t.name}\n                                                                        </a>\n                                                                    </>)}\n                                                                </small>\n                                                            </div>}\n\n                                                            <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <WorkoutReplyComment stores={this.props.stores} workout={workout}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutComments;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-end mb-2'>\n                <span class='ml-2 text-muted font-weight-lighter'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </span>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}