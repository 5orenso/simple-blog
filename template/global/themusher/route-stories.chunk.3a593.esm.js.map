{"version":3,"sources":["webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/add.js","webpack:///./components/story/publicDetail.js","webpack:///./components/story/comments.js","webpack:///./components/team/publicFeedLine.js","webpack:///./components/story/publicStory.js","webpack:///./components/team/connect-boxes.js","webpack:///./components/dog/scroller.js","webpack:///./components/ad/index.js","webpack:///./routes/stories/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/yrweather/index.js","webpack:///./components/team/fastList.js"],"names":["observer","Component","constructor","props","super","touchStart","e","stopPropagation","this","setState","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","state","scrollDistance","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","length","imageDots","Array","fill","map","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","render","img","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","class","style","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","ref","c","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","async","callback","inputRefObject","story","storyStore","stores","comment","showAddImage","response","id","status","body","mu","resizeTextarea","addImage","addImages","value","push","handleImageErrored","image","target","onerror","setTimeout","Date","inputRef","userStore","user","displayNameShort","userImage","displayName","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","onClick","disabled","util","isArray","onError","removeImage","data-name","name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","componentDidMount","initCall","initialState","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","team","tag","join","insert","title","pinned","public","urlText","url","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","data","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","appState","isAdmin","firstname","ucfirst","lastname","email","teamId","parseInt","findTeam","darkmode","href","onChange","teams","selected","checked","StoryPublicFeed","loadStoriesPublicFeed","publicFeed","showAllComments","showAddComment","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","dataset","likeStoryComment","replyId","likeStoryCommentReply","replyComment","parentElement","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","commentid","deleteCommentReplyStory","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","idx","translate","preventDefault","replyid","translatedText","key","translateCommentReply","translateComment","compact","currentUser","language","max_comments","filteredComments","totalComments","diplayedComments","comments","slice","Math","max","reverse","findPublicTeamByMembers","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","data-comment","uuidv4","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","fields","more","likeWorkout","idxSuggestion","idxAd","limit","hasFollowSugguestions","hasAd","sessionid","getTime","TeamPublicFeedLine","toggleDate","showDate","workoutId","workoutStore","addLikeToFeed","addCommentToFeed","workout","holdingStore","teamStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","workoutsAddLikeToComment","workoutsAddLikeToCommentReply","workoutsAddCommentToWorkoutComment","workoutsAddCommentToWorkout","addLikeToWorkout","workoutsAddLikeToWorkout","toggleAddComment","shareLink","text","shareUrl","showWorkoutDetail","localName","console","log","route","feed","translatedTextName","field","translatedTextComment","containerRef","onTeamClick","onUserClick","onDogClick","hasShareApi","publicDogs","publicUser","findPublicTeam","findPublicUser","findTeamAmbition","ambition","ambitions","teamType","findTeamType","isTeamAdmin","members","some","m","getImage","priority","hasLikedWorkout","totalFollowers","followers","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","gpxInfo","shortname","username","userLink","settings","hideProfile","mapImage","yrWeather","views","getViews","statistics","adminData","getAdminData","translationName","getTranslation","feedName","feedComment","date","formatDate","hour12","hour","minute","format","dogs","track","sledWeight","temperature","formattedCounty","moonIllumination","phaseIcon","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","dblClick","likeRef","allDogs","distanceKm","elevation","duration","secToHms","speedAvg","avgGpsMovingSpeed","buttonOnly","data-url","data-title","rel","data-native","showAvatar","extraClass","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","publicFeedUpdate","storyType","saveStoryField","clearTimeout","updateTimer","doUpdateField","StoryTypeRegular","showStoryDetail","offline","StoryTypeAd","componentWillMount","asUrl","currencty","StoryTypeArticle","storyId","likeIds","Object","keys","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","hashtag","reports","hasLikedStory","simple","classNames","role","requestSent","Teams","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","isLoading","loadPublic","query","notfollowing","array","loadTeams","publicTeamsToFollow","place","DogScroller","scrollImages","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","sortByName","a","b","dogA","find","dogB","size","onScroll","sort","dogId","dog","d","className","showName","showPosition","Ad","withText","subject","logClick","adStore","ads","apiServer","getApiServer","section","path","currentTeam","postalcode","page","replace","load","setTime","loadAd","time","match","ad","native","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","MARGIN_TOP_BACK","marginTopBack","submenu","viewmenu","Home","reloadFeeds","sortby","sortBy","sortPublicFeed","back","history","goBack","messageStore","getFingerprint","getInfo","getNotifications","getUnReadMessages","currentLocationInfo","coords","latitude","lat","longitude","lon","altitude","getWeatherUser","loadAll","teamid","findPublicTeamByUuidv4","idxConfirm","dataFields","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertWorkouts","publicWorkouts","finalArray","concat","o","dir","substring","reduce","p","n","localUpdateField","insertTopRanked","topRankedStories","topRankedRandomized","shuffleArray","startPosition","now","forEach","parseInputDate","floor","endPosition","l","randomPlace","randomInt","isObject","splice","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","showTeam","hideTeam","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","componentWillUnmount","hasNewStories","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","addData","hasFollowRequests","reqUser","isDeleted","isConfirmed","publicTeam","data-user","data-follow","YrWeather","toggleyrWeather","showWeather","formatWeather","loadWeather","yrWeatherKeys","yrWeatherFormatted","captureEvents","getNestedValue","night","morning","day","evening","getTemperatureColor","getWindSpeedColor","w","isoTime","windDirection","FastListLine","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","entries","isIntersecting","currentHeight","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses"],"mappings":"wIAICA,Y,EAAD,cAC0BC,YACtBC,YAAYC,GACRC,MAAMD,GADS,KA6CnBE,WAAcC,IACVA,EAAEC,kBACFC,KAAKC,SAAS,CACVC,OAAQJ,EAAEK,QAAQ,GAAGC,SAhDV,KAoDnBC,SAAYP,IACRA,EAAEC,kBACFC,KAAKC,SAAS,CACVC,YAAQI,EACRC,SAAS,KAxDE,KA4DnBC,UAAaV,IACTA,EAAEC,kBAEF,MAAM,YAAEU,GAAgBT,KAAKU,MAC7B,GAAID,EAAc,EAAG,CACjB,MAAM,OAAEP,EAAF,QAAUK,GAAYP,KAAKU,MAC3BC,EAAiB,GACjBC,EAAId,EAAEK,QAAQ,GAAGC,MAClBG,IACGK,EAAIV,EAASS,GACbX,KAAKC,SAAS,CAAEM,SAAS,IACzBP,KAAKa,aACED,EAAIV,EAASS,IACpBX,KAAKC,SAAS,CAAEM,SAAS,IACzBP,KAAKc,gBAxEjB,MAAM,OAAEC,EAAS,IAAOpB,EACxBK,KAAKU,MAAQ,CACTM,eAAgB,EAChBC,cAAeF,EAAO,IAAM,GAC5BG,cAAe,GACfC,WAAY,EACZV,YAAaM,EAAOK,QAAU,EAC9BC,UAAW,IAAIC,MAAMP,EAAOK,QAAU,GAAGG,KAAK,GAAGC,IAAI,CAACZ,EAAGa,IAAMb,EAAIa,KAI3EX,YAEI,MAAM,OAAEC,GAAWf,KAAKL,OAClB,YAAEc,EAAF,WAAeU,EAAf,eAA2BH,GAAmBhB,KAAKU,MACnDgB,EAAwC,IAAnBV,EAAuB,EAAI,EACtD,IAAIW,EAAUR,EAAa,EACvBQ,EAAUlB,EAAa,IACvBkB,EAAU,GAEd3B,KAAKC,SAAS,CACV,CAAE,eAAcyB,GAAuBX,EAAOY,GAC9CR,WAAYQ,EACZX,eAAgBU,IAIxBb,YAEI,MAAM,OAAEE,GAAWf,KAAKL,OAClB,YAAEc,EAAF,WAAeU,EAAf,eAA2BH,GAAmBhB,KAAKU,MAEzD,IAAIiB,EAAUR,EAAa,EACvBQ,EAAU,IACVA,EAAUlB,EAAc,GAE5BT,KAAKC,SAAS,CACV,CAAE,gBANwC,IAAnBe,EAAuB,EAAI,IAMXD,EAAOY,GAC9CR,WAAYQ,EACZX,eAAmC,IAAnBA,EAAuB,EAAI,IAuCnDY,0BAA0BC,GAEtB,GAAIA,EAAUd,SAAWf,KAAKL,MAAMoB,OAAQ,CACxC,MAAQA,OAAQe,EAAa,IAAOD,EACpC7B,KAAKC,SAAS,CACVe,eAAgB,EAChBC,cAAea,EAAWV,OAAS,EAAIU,EAAW,GAAK,GACvDZ,cAAe,GACfC,WAAY,EACZV,YAAaqB,EAAWV,QAAU,EAClCC,UAAW,IAAIC,MAAMQ,EAAWV,QAAU,GAAGG,KAAK,GAAGC,IAAI,CAACZ,EAAGa,IAAMb,EAAIa,OAKnFM,SACI,MAAM,cAAEd,EAAF,cAAiBC,EAAjB,eAAgCF,EAAhC,YAAgDP,EAAhD,UAA6DY,EAA7D,WAAwEF,GAAenB,KAAKU,MAC5FsB,EAAMhC,KAAM,QAAOgB,GACnBiB,EAA8B,IAAnBjB,EAAuBC,EAAgBC,EAClDgB,EAAiBF,GAAOA,EAAIG,OAASH,EAAII,MAAQJ,EAAIG,OAAS,EAAI,EACxE,IAAIE,EACAC,EACJ,GAAIL,EAASM,WAAY,CACrB,MAAM,MAAEH,EAAF,OAASD,EAAT,YAAiBK,GAAgBP,EAASM,WAC5CC,EAAc,GAAKA,EAAc,GACjCH,EAAYD,EACZE,EAAWH,IAEXE,EAAYF,EACZG,EAAWF,GAGnB,MAAMK,EAAaR,EAASM,WAAaD,EAAWD,EAAYH,EAChE,OAAIzB,GAAe,EACR,GAIP,mBAAKiC,MAAM,SACP,mBAAKA,MAAM,yCACPC,MAAQ,uBAAsBF,yDAC9BG,aAAc5C,KAAKH,WACnBgD,WAAY7C,KAAKK,SACjByC,YAAa9C,KAAKQ,WAEjBC,EAAc,GAAK,oBAAMiC,MAAM,oBAAoBC,MAAM,uCAAsC,yBAAQxB,EAAa,EAArB,IAAyBV,IACxHQ,GAAiB,mBAAKyB,MAAM,oBAAoBC,OAA6B,IAAnB3B,EAAuB,cAAiB,eAA1C,sDACrD,mBAAK+B,QAAQ,OAAOC,IAAK/B,EAAcgC,YACnCP,MAAM,yBACNQ,IAAKC,GAAKnD,KAAKoD,OAASD,KAG/BjC,GAAiB,mBAAKwB,MAAM,oBAAoBC,OAA6B,IAAnB3B,EAAuB,cAAiB,eAA1C,sDACrD,mBAAK+B,QAAQ,OAAOC,IAAK9B,EAAc+B,YACnCP,MAAM,yBACNQ,IAAKC,GAAKnD,KAAKqD,OAASF,MAInC9B,EAAUD,OAAS,GAAK,mBAAKsB,MAAM,qBAAqBrB,EAAUG,IAAI8B,GAAK,oBAAMX,MAAQ,UAASW,IAAMnC,EAAa,EAAI,UAAY,cAA1D,Y,+ICtItFoC,EADL/D,Y,EAAD,cACuBC,YAClBC,YAAYC,GAAO,MAChBC,MAAMD,GADU,YAapB6D,qBAAuB,KACnBxD,KAAKC,SAAS,CAAEwD,mBAAmB,KAdnB,KAiBpBC,oBAAsB,KAClB1D,KAAKC,SAAS,CAAEwD,mBAAmB,KAlBnB,KAqBpBE,aAAeC,iBACX,MAAM,kBAAEH,GAAsB,EAAK/C,MACnC,IAAK+C,EACD,OAAO,EAEX,MAAM,SAAEI,EAAW,SAAb,eAAuBC,EAAiB,IAAO,EAAKnE,OACpD,MAAEoE,GAAU,EAAKpE,OACvB,WAAEqE,GAAe,EAAKrE,MAAMsE,QACtB,QAAEC,EAAF,aAAWC,GAAiB,EAAKzD,MACvC,EAAKT,SAAS,CAAEwD,mBAAmB,IACzC,MAAMW,QAAiBJ,EAAWL,aAAa,CAAEU,GAAIN,EAAMM,GAAIH,YAC3DE,GAAgC,MAApBA,EAASE,SACf,EAAKrE,SAAS,CACViE,QAAS,CACLK,KAAM,GACNxD,OAAQ,KAEb,KACCyD,IAAGC,eAAeX,EAAeC,EAAMM,KACnCF,GACA,EAAKO,aAGbb,EAAS,CAAEE,QAAOK,cAEtB,EAAKnE,SAAS,CAAEwD,mBAAmB,KA9CnB,KAiDpBkB,UAAY,EAAGC,YAEX,MAAM,QAAEV,GAAYlE,KAAKU,MACzBwD,EAAQnD,OAAO8D,QAAQD,GACvB5E,KAAKC,SAAS,CAAEiE,aArDA,KAwDpBQ,SAAW,KACP,MAAM,aAAEP,GAAe,GAAUnE,KAAKU,MACtCV,KAAKC,SAAS,CACVkE,cAAeA,KA3DH,KA+DpBW,mBAAsBhF,IAClB,MAAMiF,EAAQjF,EAAEkF,OAChBD,EAAME,QAAU,KAChBC,WAAW,KACPH,EAAM/B,KAAQ,IAAG,IAAImC,MACtB,MAlEHnF,KAAKU,MAAQ,CACTwD,QAAS,CACLK,KAAM,GACNxD,OAAQ,IAEZoD,cAAc,EACdV,mBAAmB,GAEvBzD,KAAKoF,SAAW,GA6DpBrD,SACI,MAAM,SAAEqD,EAAF,MAAYrB,GAAU/D,KAAKL,OAC3B,QAAEuE,EAAF,aAAWC,EAAX,kBAAyBV,GAAsBzD,KAAKU,OACpD,UAAE2E,GAAcrF,KAAKL,MAAMsE,QAC3B,KAAEqB,EAAO,IAAOD,EAChBE,EAAmBf,IAAGe,iBAAiBD,GAEvCE,GADchB,IAAGiB,YAAYH,GACjBA,EAAKP,QAAUO,EAAKvE,OAASuE,EAAKvE,OAAO,QAAKT,IAEhE,OACI,uBACI,mBAAKoC,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAU6C,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,mCAENJ,EAAKP,OAAS,oBAAMrC,MAAM,sBAAsBC,MAAM,oBAAoB4C,IAEhF,mBAAK7C,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUiD,IAAI,mBAAkB,YAAC,IAAD,CAAMtB,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNkD,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMxB,GAAG,0BAAT,yBACbyB,QAASC,YAAU/F,KAAM,gBACzBgG,QAASxB,IAAGC,eACZwB,QAASzB,IAAGC,eACZ9B,MAAM,iBACNiC,MAAOV,EAAQK,KACfrB,IAAKkC,KAIb,mBAAK1C,MAAM,oBAAoBC,MAAM,4CACjC,iBAAGD,MAAM,6BACLwD,UAASnC,EAAMM,GACf8B,QAASnG,KAAK0E,cAK9B,mBAAKhC,MAAM,uCACP,sBAAQkD,KAAK,SAASlD,MAAQ,WAAUe,EAAoB,UAAY,mBAAoB2C,UAAW3C,EACnG0C,QAASnG,KAAK2D,cACjB,iBAAGjB,MAAM,4BAMzByB,GAAgB,mBACb,mBAAKzB,MAAM,sBACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACN2D,IAAKC,QAAQpC,EAAQnD,SAAWmD,EAAQnD,OAAOS,IAAIQ,GAChD,mBAAKU,MAAM,aACP,mBAAKM,IAAKhB,EAAI0D,YAAahD,MAAM,YAAY6D,QAASvG,KAAK8E,qBAC3D,sBAAQpC,MAAM,sBACVyD,QAASnG,KAAKwG,YACdC,YAAWzE,EAAI0E,MAClB,iBAAGhE,MAAM,iBAHV,IAG4B,YAAC,IAAD,CAAM2B,GAAG,yBAAT,eAK5C,YAAC,IAAD,CAAQsC,OAAQzC,EAAS0C,YAAa5G,KAAK2E,UAAWkC,OAAQ7G,KAAKwD,qBAAsBsD,MAAO9G,KAAK0D,oBAAqBqD,UAAU,W,EAQ7IxD,Q,iKCvJTyD,EADLxH,Y,EAAD,cACgCC,YAC5BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAQnBgE,aAAeC,iBACX,MAAM,kBAAEH,GAAsB,EAAK/C,MACnC,IAAK+C,EACD,OAAO,EAEX,MAAM,SAAEI,EAAW,SAAb,UAAuBoD,EAAvB,eAAkCnD,EAAiB,IAAO,EAAKnE,OAC/D,MAAEoE,GAAU,EAAKpE,OACvB,WAAEqE,GAAe,EAAKrE,MAAMsE,QACtB,QAAEC,EAAU,IAAO,EAAKxD,MAC9B,EAAKT,SAAS,CAAEwD,mBAAmB,IACzC,MAAMW,QAAiBJ,EAAWkD,kBAAkB,CAAE7C,GAAIN,EAAMM,GAAI4C,YAAW/C,YAC3EE,GAAgC,MAApBA,EAASE,SACf,EAAKrE,SAAS,CACViE,QAAS,IACV,KACCM,IAAGC,eAAeX,EAAemD,MAErCpD,EAAS,CAAEE,QAAOK,WAAU6C,eAEhC,EAAKhH,SAAS,CAAEwD,mBAAmB,KAzBnCzD,KAAKU,MAAQ,CACT+C,mBAAmB,GAEvBzD,KAAKoF,SAAW,GAyBpB+B,oBACI,MAAM,SAAEC,EAAW,UAAapH,KAAKL,MACrCyH,IAGJrF,SACI,MAAM,SAAEqD,GAAapF,KAAKL,OACpB,QAAEuE,EAAF,kBAAWT,GAAsBzD,KAAKU,OACtC,UAAE2E,GAAcrF,KAAKL,MAAMsE,QAC3B,KAAEqB,EAAO,IAAOD,EAChBE,EAAmBf,IAAGe,iBAAiBD,GAEvCE,GADchB,IAAGiB,YAAYH,GACjBA,EAAKP,QAAUO,EAAKvE,OAASuE,EAAKvE,OAAO,QAAKT,IAEhE,OACI,mBAAKoC,MAAM,SACP,mBAAKA,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAU6C,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,mCAENF,GAAa,oBAAM9C,MAAM,sBAAsBC,MAAM,oBAAoB4C,IAE/E,mBAAK7C,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUiD,IAAI,mBAAkB,YAAC,IAAD,CAAMtB,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNkD,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMxB,GAAG,0BAAT,yBACbyB,QAASC,YAAU/F,KAAM,WACzBgG,QAASxB,IAAGC,eACZ9B,MAAM,iBACNiC,MAAOV,EACPhB,IAAKkC,OAKrB,mBAAK1C,MAAM,uCACP,sBAAQkD,KAAK,SAASlD,MAAQ,WAAUe,EAAoB,UAAY,mBAAoB2C,UAAW3C,EACnG0C,QAASnG,KAAK2D,cACjB,iBAAGjB,MAAM,iC,EAW3BsE,O,+dCxFf,MAAMK,EAAe,CACjBlD,cAAc,EACdmD,gBAAgB,EAChBC,sBAAsB,EACtBC,gBAAgB,EAChB/D,mBAAmB,G,IAIjBF,EADL/D,Y,EAAD,cACuBC,YACnBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAwBnB6D,qBAAuB,KACnBxD,KAAKC,SAAS,CAAEwD,mBAAmB,KAzBpB,KA4BnBC,oBAAsB,KAClB1D,KAAKC,SAAS,CAAEwD,mBAAmB,KA7BpB,KAgCnBgE,SAAW7D,iBACP,MAAM,MAAEG,EAAQ,GAAV,aAAcI,EAAd,kBAA4BV,GAAsB,EAAK/C,OACvD,SAAEmD,EAAW,SAAb,SAAuB6D,EAAW,GAAlC,QAAsCC,EAAtC,MAA+CC,EAAS,QAAO7D,EAAM8D,MAAW,EAAKlI,OAC3F,WAAEqE,GAAe,EAAKrE,MAAMsE,OAE5B,IAAKR,EACD,OAAO,EAGX,IAAKM,EAAMQ,KACP,OAAO,EAEX,EAAKtE,SAAS,CAAEwD,mBAAmB,IAEnC,IAAIc,EAAOR,EAAMQ,KACboD,IACApD,GAAS,OAAMoD,GAEfD,GAAYA,EAAStG,OAAS,IAC9BmD,GAAS,OAAMmD,EAASlG,IAAIsG,GAAQ,IAAGA,GAAOC,KAAK,MAG7D,MAAM3D,QAAiBJ,EAAWgE,OAAO,CAC/BpC,KAAM7B,EAAM6B,KACZqC,MAAOlE,EAAMkE,MACb1D,OACA2D,OAAQnE,EAAMmE,OACdnH,OAAQgD,EAAMhD,OACdoH,OAAQpE,EAAMoE,OAAS,EAAI,EAC3BN,KAAM9D,EAAM8D,KACZO,QAASrE,EAAMqE,QACfC,IAAKtE,EAAMsE,IACXC,SAAUvE,EAAMuE,SAChBC,MAAOxE,EAAMwE,MACbC,KAAMzE,EAAMyE,KACZC,QAAS1E,EAAM0E,QACfC,OAAQ3E,EAAM2E,OACdC,UAAW5E,EAAM4E,UACjBC,QAAS7E,EAAM6E,QACfhB,UAENxD,GAAgC,MAApBA,EAASE,eACTN,EAAW6E,eAAe,CAAEC,SAAUpB,IAC5C,EAAKzH,SAAS,CACV8D,MAAO,CACH6B,KAAM,EACNqC,MAAO,GACP1D,KAAM,GACN2D,OAAQ,KACRnH,OAAQ,GACRoH,OAAQ,EACRC,QAAS,GACTC,IAAK,GACLC,SAAU,GACVC,MAAO,KACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,KACXC,QAAS,OAEd,KACCpE,IAAGC,eAAe,EAAKW,SAAL,cACdjB,GACA,EAAKO,aAGbb,EAASO,EAAS2E,OAEtB,EAAK9I,SAAS,CAAEwD,mBAAmB,KArGpB,KAwGnBkB,UAAY,EAAGC,YAEX,MAAM,MAAEb,GAAU/D,KAAKU,MACvBqD,EAAMhD,OAAO8D,QAAQD,GACrB5E,KAAKC,SAAS,CAAE8D,WA5GD,KA+GnBW,SAAW,KACP,MAAM,aAAEP,GAAiBnE,KAAKU,MAC9BV,KAAKC,SAAS,CACVkE,cAAeA,KAlHJ,KAsHnB6E,iBAAmB,KACf,MAAM,qBAAEzB,GAAyBvH,KAAKU,MACtCV,KAAKC,SAAS,CACVsH,sBAAuBA,KAzHZ,KA6HnB0B,aAAe,KACX,MAAM,qBAAE1B,GAAyBvH,KAAKU,MACtCV,KAAKC,SAAS,CACVsH,sBAAuBA,KAhIZ,KAoInB2B,WAAa,KACT,MAAM,eAAE1B,GAAmBxH,KAAKU,MAChCV,KAAKC,SAAS,CACVuH,gBAAiBA,KAvIN,KA2InB2B,iBAAmB,KACf,MAAM,eAAE7B,GAAmBtH,KAAKU,MAChCV,KAAKC,SAAS,CACVqH,gBAAiBA,KA9IN,KAkJnBxC,mBAAsBhF,IAClB,MAAMiF,EAAQjF,EAAEkF,OAChBD,EAAME,QAAU,KAChBC,WAAW,KACPH,EAAM/B,KAAQ,IAAG,IAAImC,MACtB,MAvJY,KA0JnBiE,cAAgB,KACZ,MAAM,UAAE/D,GAAcrF,KAAKL,MAAMsE,OAC3BoF,EAAchE,EAAUiE,kBAC9B,GAAIjD,IAAKC,QAAQ+C,IAAgBA,EAAYjI,OAAS,EAAG,CACrD,MAAM,MAAE2C,GAAU/D,KAAKU,MACvBqD,EAAM8D,KAAOwB,EAAY,GAAGhF,GAC5BrE,KAAKC,SAAS,CAAE8D,YAhKL,KAoKnBwF,SAAYzJ,IACRE,KAAKC,SAAS,CAAEuJ,UAAU,IAC1BhF,IAAGC,eAAe3E,EAAEkF,SAtKL,KAyKnByE,YAAe3J,KACXE,KAAKC,SAAS,CAAEuJ,UAAU,KAxK1BxJ,KAAKU,M,+VAAL,EACIqD,MAAO,CACH6B,KAAM,EACNqC,MAAO,GACP1D,KAAM,GACNxD,OAAQ,GACRoH,OAAQ,EACRC,QAAS,GACTC,IAAK,GACLC,SAAU,GACVC,MAAO,EACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,GACXC,QAAS,KAEVvB,GAEPrH,KAAKoF,SAAW,GAwJpB+B,oBACInH,KAAKoJ,gBAGTrH,SACI,MAAM,IAAE2H,EAAM,GAAR,OAAYC,EAAS,EAArB,SAAwBjC,EAAW,IAAO1H,KAAKL,OAC/C,MAAEoE,EAAQ,GAAV,aAAcI,EAAd,eAA4BmD,EAA5B,qBAA4CC,EAA5C,eAAkEC,EAAlE,kBAAkF/D,EAAlF,SAAqG+F,GAAaxJ,KAAKU,OACvH,UAAE2E,EAAF,SAAauE,GAAa5J,KAAKL,MAAMsE,QACrC,KAAEqB,EAAO,GAAT,QAAauE,GAAYxE,EAEzBE,EAAmBD,EAAKwE,UAAa,GAAEzD,IAAK0D,QAAQzE,EAAKwE,WAAW,KAAQzD,IAAK0D,QAAQzE,EAAK0E,UAAU,KAAW,GAAE3D,IAAK0D,QAAQzE,EAAK2E,OAAS,IAAI,GAE1J,IAAIzE,EAAYF,EAAKP,QAAUO,EAAKvE,OAASuE,EAAKvE,OAAO,QAAKT,GAC9D,GAAIyD,EAAM8D,KAAM,CACZ,MAAMqC,EAASC,SAASpG,EAAM8D,KAAM,IAC9BA,EAAOxC,EAAU+E,SAASF,GAAQ,GACxC1E,EAAYqC,EAAK9C,QAAU8C,EAAK9G,OAAS8G,EAAK9G,OAAO,QAAKT,GAE9D,MAAM,SAAE+J,GAAaT,EAErB,OACI,mBAAKlH,MAAM,cACP,mBAAKA,MAAM,OAEP,mBAAKA,MAAQ,OAAMgH,YAAcC,+EAAoFU,EAAW,QAAU,0BACtI,mBAAK3H,MAAM,uCACP,mBAAKA,MAAM,qBACP,mBACIA,MAAQ,iFACRC,OAAU6C,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,iCACRS,QAASnG,KAAKmJ,mBAEZ3D,GAAa,oBAAM9C,MAAM,sBAAsBC,MAAM,oBAAoB4C,IAE/E,mBAAK7C,MAAM,oBAAoBC,MAAM,0BACjC,qBAAOD,MAAM,aAAaC,MAAM,qBAC5B,iBAAGD,MAAM,kCAAkCyD,QAASnG,KAAKmJ,sBAIrE,mBAAKzG,MAAM,gBAAgBC,MAAM,uBAC7B,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUiD,IAAI,mBAAkB,YAAC,IAAD,CAAMtB,GAAG,cAAT,UAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNkD,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMxB,GAAG,oBAAT,uBACbyB,QAASC,YAAU/F,KAAM,cACzBgG,QAASxB,IAAGC,eACZwB,QAASjG,KAAKuJ,SACd5G,MAAM,iBACNiC,MAAOb,EAAMQ,KACbrB,IAAKC,GAAKnD,KAAKoF,SAAL,aAAgCjC,KAGjDqG,GAAY,mBAAK9G,MAAM,oBAAoBC,MAAM,+CAC9C,iBAAGD,MAAM,6BACLwD,UAASnC,EAAMM,GACf8B,QAASnG,KAAK0E,WAElB,iBAAGhC,MAAQ,UAA0B,IAAjBqB,EAAMoE,OAAe,eAAiB,6BACtDjC,UAASnC,EAAMM,GACf8B,QAASnG,KAAKgJ,mBAEjBa,GAAW,iBAAGnH,MAAQ,gCACnBwD,UAASnC,EAAMM,GACf8B,QAASnG,KAAKkJ,eAIzBxB,GAAYA,EAAStG,OAAS,GAAK,mBAC/BsG,EAASlG,IAAIsG,GAAO,mBACjB,oBAAMpF,MAAM,mCACR,iBAAG4H,KAAO,gBAAexC,EAAOpF,MAAM,cAAtC,IAAqDoF,QAKrE,mBAAKpF,MAAM,+CACP,sBAAQkD,KAAK,SAASlD,MAAQ,WAAUe,EAAoB,UAAY,mBAAoB2C,UAAW3C,EACnG0C,QAASnG,KAAKyH,UACjB,iBAAG/E,MAAM,4BAK1B,uBACI,mBAAKA,MAAM,OACN4E,GAAkB,mBACf,mBAAK5E,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACN2B,GAAG,OACHyB,QAASC,YAAU/F,KAAM,cACzBuK,SAAUvK,KAAKmJ,kBAEf,sBAAQvE,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMP,GAAG,qBAAT,aAApB,OACCgC,IAAKC,QAAQhB,EAAKkF,QAAUlF,EAAKkF,MAAMhJ,IAAK0I,IACzC,MAAMrC,EAAOxC,EAAU+E,SAASF,GAAQ,GACxC,OAAIrC,GAAQA,EAAKM,OACL,sBAAQvD,MAAOiD,EAAKxD,GAAIoG,SAAU1G,EAAM8D,MAAQA,EAAKxD,GAAK,WAAa,IAAKwD,EAAKnB,MAEtF,MAGTpB,EAAKkF,OAAS,mBACZ,sBAAQ5F,MAAM,IAAd,yBAOvB2C,GAAwB,mBACpBsC,GAAW,mBACR,mBAAKnH,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,qBAAOiD,IAAI,UAAX,kBAA0C,qBAAOtB,GAAG,SAASuB,KAAK,WAAWE,QAASC,YAAU/F,KAAM,gBAAiB4E,MAAO,EAAG8F,QAAS3G,EAAMmE,OAAS,EAAI,QAM7K,mBAAKxF,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACN2B,GAAG,OACHyB,QAASC,YAAU/F,KAAM,gBACzB4E,MAAOb,EAAMoE,OACboC,SAAUvK,KAAKgJ,kBAEf,sBAAQpE,MAAO,EAAG6F,SAA0B,GAAhB1G,EAAMoE,OAAc,WAAa,IAA7D,MAAoE,YAAC,IAAD,CAAM9D,GAAG,8BAAT,sCACpE,sBAAQO,MAAO,EAAG6F,SAA0B,GAAhB1G,EAAMoE,OAAc,WAAa,IAA7D,MAAoE,YAAC,IAAD,CAAM9D,GAAG,2BAAT,2CAMvFmD,GAAkB,mBACf,mBAAK9E,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACN2B,GAAG,OACHyB,QAASC,YAAU/F,KAAM,cACzB4E,MAAOb,EAAM6B,KACb2E,SAAUvK,KAAKkJ,YAEnB,sBAAQtE,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMP,GAAG,qBAAT,aAApB,OACI,sBAAQO,MAAO,EAAG6F,SAAwB,GAAd1G,EAAM6B,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMvB,GAAG,sBAAT,WAClE,sBAAQO,MAAO,EAAG6F,SAAwB,GAAd1G,EAAM6B,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMvB,GAAG,iBAAT,YAClE,sBAAQO,MAAO,EAAG6F,SAAwB,GAAd1G,EAAM6B,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMvB,GAAG,sBAAT,kBAMrFF,GAAgB,mBACb,mBAAKzB,MAAM,2BACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACN2D,IAAKC,QAAQvC,EAAMhD,SAAWgD,EAAMhD,OAAOS,IAAIQ,GAC5C,mBAAKU,MAAM,aACP,mBAAKM,IAAKhB,EAAI0D,YAAahD,MAAM,YAAY6D,QAASvG,KAAK8E,qBAC3D,sBAAQpC,MAAM,sBACVyD,QAASnG,KAAKwG,YACdC,YAAWzE,EAAI0E,MAClB,iBAAGhE,MAAM,iBAHV,YAQhB,YAAC,IAAD,CAAQiE,OAAQ5C,EAAO6C,YAAa5G,KAAK2E,UAAWkC,OAAQ7G,KAAKwD,qBAAsBsD,MAAO9G,KAAK0D,oBAAqBqD,UAAU,MAIzIhD,EAAM6B,KAAO,GAAK,mBACf,mBAAKlD,MAAM,eACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,kBAAT,aACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,UACLZ,QAASC,YAAU/F,KAAM,iBACzB4E,MAAOb,EAAMqE,aAM7B,mBAAK1F,MAAM,eACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,aAAT,QACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,MACLZ,QAASC,YAAU/F,KAAM,aACzB4E,MAAOb,EAAMsE,UAOlB,GAAdtE,EAAM6B,MAAa,mBAChB,mBAAKlD,MAAM,eACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,cAAT,SACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,OACLZ,QAASC,YAAU/F,KAAM,cACzB4E,MAAOb,EAAMyE,UAM7B,mBAAK9F,MAAM,UACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,gBAAT,WACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,SACLZ,QAASC,YAAU/F,KAAM,gBACzB4E,MAAOb,EAAM2E,YAM7B,mBAAKhG,MAAM,UACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,iBAAT,YACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,UACLZ,QAASC,YAAU/F,KAAM,iBACzB4E,MAAOb,EAAM0E,aAM7B,mBAAK/F,MAAM,SACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,kBAAT,aACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,WACLZ,QAASC,YAAU/F,KAAM,kBACzB4E,MAAOb,EAAMuE,cAM7B,mBAAK5F,MAAM,SACP,yBAAO,YAAC,IAAD,CAAM2B,GAAG,eAAT,UACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,QACLZ,QAASC,YAAU/F,KAAM,eACzB4E,MAAOb,EAAMwE,qB,EAelDhF,Q,oeCxef,MAAM8D,EAAe,G,IAGfsD,EADLnL,Y,EAAD,cAC8BC,YAC1BC,YAAYC,GACRC,MAAMD,GACNK,KAAKU,M,+VAAL,IACO2G,GAEbrH,KAAKoF,SAAW,GAGd,4BAA4BzF,EAAQK,KAAKL,OAC3C,MAAM,WAAEqE,GAAerE,EAAMsE,QACjB,MAAEF,GAAUpE,QAClBqE,EAAW6E,eAAe,CAAE9E,UAGnCoD,oBACOnH,KAAK4K,wBAGThJ,0BAA0BC,GAElBA,EAAUkC,QAAU/D,KAAKL,MAAMoE,OAC/B/D,KAAK4K,sBAAsB/I,GAInCE,SACI,MAAM,WAAEiC,EAAF,SAAc4F,GAAa5J,KAAKL,MAAMsE,QACtC,WAAE4G,GAAe7G,GACjB,SAAEqG,GAAaT,EAErB,OACI,mBAAKlH,MAAM,SAEP,mBAAKA,MAAM,qBACP,mBAAKA,MAAQ,sGAAqG2H,EAAW,QAAU,sBACjIQ,GAAoC,IAAtBA,EAAWzJ,QAAgB,mBACvC,mBAAKsB,MAAM,+BACP,mBAAKA,MAAM,8BACP,iBAAGA,MAAM,oBAEb,2CAGPmI,GAAcA,EAAWrJ,IAAKuC,GAAU,mBACrC,YAAC,IAAD,CACIE,OAAQjE,KAAKL,MAAMsE,OACnBF,MAAOA,EACP+G,iBAAiB,a,EAUlCH,Q,44BCvDf,MAAMtD,EAAe,CACjB0D,eAAgB,GAChBD,iBAAiB,EACjBE,eAAgB,GAChBC,aAAc,GACdC,YAAa,GACbC,UAAW,GACXC,aAAc,I,IAMZC,EADL7L,Y,EAAD,cAC4BC,YACvBC,YAAYC,GAAO,MAChBC,MAAMD,GADU,YASpB2L,eAAiB1H,eAAO9D,GACpB,MAAM,SAAE+D,EAAW,UAAa,EAAKlE,MAC/BsH,EAAYnH,EAAEkF,OAAOuG,QAAQ,qBAAqBC,QAAQnH,IAC1D,MAAEN,GAAU,EAAKpE,OACvB,WAAEqE,GAAe,EAAKrE,MAAMsE,QAEtB,YAAEiH,GAAgB,EAAKxK,MAC7BwK,EAAYjE,IAAa,EACzB,EAAKhH,SAAS,CAAEiL,gBAChBhG,WAAW,KACP,MAAM,YAAEgG,GAAgB,EAAKxK,aACtBwK,EAAYjE,GACnB,EAAKhH,SAAS,CAAEiL,iBACjB,MAET,MAAM9G,QAAiBJ,EAAWyH,iBAAiB,CAAEpH,GAAIN,EAAMM,GAAI4C,cAI7D,OAHF7C,GAAgC,MAApBA,EAASE,QACfT,EAAS,CAAE+B,KAAM,cAAe7B,QAAOkD,YAAW7C,cAE/C,GA5BS,KA+BpB+G,UAAYvH,eAAO9D,GACf,MAAM,SAAE+D,EAAW,UAAa,EAAKlE,MAC/B+L,EAAU5L,EAAEkF,OAAOuG,QAAQ,mBAAmBC,QAAQnH,GACtD4C,EAAYnH,EAAEkF,OAAOuG,QAAQ,mBAAmBC,QAAQtH,SACxD,MAAEH,GAAU,EAAKpE,OACvB,WAAEqE,GAAe,EAAKrE,MAAMsE,QAEtB,UAAEkH,GAAc,EAAKzK,MAC3ByK,EAAUO,IAAW,EACrB,EAAKzL,SAAS,CAAEkL,cAChBjG,WAAW,KACP,MAAM,UAAEiG,GAAc,EAAKzK,aACpByK,EAAUO,GACjB,EAAKzL,SAAS,CAAEkL,eACjB,MAET,MAAM/G,QAAiBJ,EAAW2H,sBAAsB,CAAEtH,GAAIN,EAAMM,GAAIqH,UAASzE,cACvE7C,GAAgC,MAApBA,EAASE,QACrBT,EAAS,CAAE+B,KAAM,YAAa7B,QAAOkD,YAAWyE,UAAStH,cAjD7C,KAqDpBwH,aAAehI,eAAO9D,GAClB,MAAMmH,EAAYnH,EAAEkF,OAAO6G,cAAcL,QAAQnH,IAAMvE,EAAEkF,OAAOwG,QAAQnH,IAElE,eAAE0G,GAAmB,EAAKrK,MAChCqK,EAAe9D,IAAc8D,EAAe9D,GAClD,EAAKhH,SAAS,CACb8K,kBACE,KACW,EAAK3F,SAAS6B,IACd,EAAK7B,SAAS6B,GAAW6E,WA9DjB,KAmEpBC,eAAiB,KACnB,MAAM,gBAAEjB,GAAoB9K,KAAKU,MACjCV,KAAKC,SAAS,CACb6K,iBAAkBA,KAtEG,KA0EpBkB,cAAiBlM,IACb,MAAMmH,EAAYnH,EAAEkF,OAAO6G,cAAcL,QAAQnH,IAAMvE,EAAEkF,OAAOwG,QAAQnH,IACxE,eAAE2G,GAAmBhL,KAAKU,MAC1BsK,EAAe/D,IAAc+D,EAAe/D,GAClDjH,KAAKC,SAAS,CACb+K,oBA/EqB,KAmFpBiB,WAAcnM,IACV,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,KAAKC,SACrC,SAAEU,EAAW,IAAOlM,KAAKU,MACzBwL,EAAS7H,IAAO6H,EAAS7H,GAC/BrE,KAAKC,SAAS,CACJkM,kBAAmB,GACnBC,SAAU,GACnBF,cA1FqB,KA8FpBG,WAAcvM,IACV,MAAM,GAAEuE,EAAIH,QAASoI,GAAoBxM,EAAEkF,OAAOuG,QAAQ,UAAUC,SACpE,SAAEY,EAAW,IAAOpM,KAAKU,MACzB0L,EAAS/H,IAAO+H,EAAS/H,GAC/BrE,KAAKC,SAAS,CACJkM,kBAAmB,GAC5BC,WACSF,SAAU,GACVI,qBAtGY,KA0GpBC,oBAAuBzM,IACnB,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,UAAUC,SAC1C,kBAAEW,EAAoB,IAAOnM,KAAKU,MAClCyL,EAAkB9H,IAAO8H,EAAkB9H,GACjDrE,KAAKC,SAAS,CACbkM,oBACSC,SAAU,GACVF,SAAU,MAjHE,KAqHpBM,cAAgB5I,eAAO9D,GACnB,MAAQuE,GAAI4C,GAAcnH,EAAEkF,OAAOuG,QAAQ,UAAUC,SAC/C,MAAEzH,GAAU,EAAKpE,OACjB,WAAEqE,GAAe,EAAKrE,MAAMsE,aAC5BD,EAAWyI,mBAAmB,CAAEpI,GAAIN,EAAMM,GAAI4C,cACpD,EAAKhH,SAAS,CACVqM,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,MA9HE,KAkIpBQ,mBAAqB9I,eAAO9D,GACxB,MAAQuE,GAAIqH,EAASiB,UAAW1F,GAAcnH,EAAEkF,OAAOuG,QAAQ,UAAUC,SACnE,MAAEzH,GAAU,EAAKpE,OACjB,WAAEqE,GAAe,EAAKrE,MAAMsE,aAC5BD,EAAW4I,wBAAwB,CAAEvI,GAAIN,EAAMM,GAAI4C,YAAWyE,YACpE,EAAKzL,SAAS,CACVqM,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,MA3IE,KAgJpBW,YAAcjJ,eAAO9D,GACjB,MAAQuE,GAAI4C,GAAcnH,EAAEkF,OAAOuG,QAAQ,UAAUC,SAC7Cc,gBAAiBpI,GAAY,EAAKxD,OACpC,MAAEqD,GAAU,EAAKpE,OACjB,WAAEqE,GAAe,EAAKrE,MAAMsE,aAC5BD,EAAW8I,iBAAiB,CAAEzI,GAAIN,EAAMM,GAAI4C,YAAW/C,YAC7D,EAAKjE,SAAS,CACVqM,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,MA1JE,KA8JpBa,iBAAmBnJ,eAAO9D,GACtB,MAAQuE,GAAIqH,EAASiB,UAAW1F,GAAcnH,EAAEkF,OAAOuG,QAAQ,UAAUC,SACjEc,gBAAiBpI,GAAY,EAAKxD,OACpC,MAAEqD,GAAU,EAAKpE,OACjB,WAAEqE,GAAe,EAAKrE,MAAMsE,aAC5BD,EAAWgJ,sBAAsB,CAAE3I,GAAIN,EAAMM,GAAI4C,YAAWyE,UAASxH,YAC3E,EAAKjE,SAAS,CACVqM,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,MAxKE,KA4KpBe,UAAanN,IACf,MAAM,GAAEuE,EAAF,IAAM6I,GAAQpN,EAAEkF,OAAOuG,QAAQ,OAAOC,SAChC,aAAEP,GAAiBjL,KAAKU,MAC9BuK,EAAa5G,GAAM6I,EACnBlN,KAAKC,SAAS,CAAEgL,kBAhLA,KAmLpBkC,UAAYvJ,eAAO9D,GACfA,EAAEsN,iBACFtN,EAAEC,kBACF,MAAM,QAAEsN,EAAF,UAAWV,GAAc7M,EAAEkF,OAAOuG,QAAQ,UAAUC,SACpD,MAAEzH,GAAU,EAAKpE,OACjB,UAAE0F,EAAF,WAAarB,GAAe,EAAKrE,MAAMsE,QACvC,KAAEqB,GAASD,GACX,aAAE+F,EAAe,GAAjB,eAAqBkC,EAAiB,IAAO,EAAK5M,MAClD6M,EAAO,GAAEZ,IAAYU,EAAW,IAAGA,EAAW,KACpDjC,EAAamC,GAAO,EAEhBD,EAAeC,GADfF,QAC4BrJ,EAAWwJ,sBAAsB,CAAEb,YAAWU,UAAStJ,QAAOuB,eAE9DtB,EAAWyJ,iBAAiB,CAAEd,YAAW5I,QAAOuB,SAEhF,EAAKrF,SAAS,CAAEmL,eAAckC,oBAlMd,KAqMpBlC,aAAgBtL,IACZ,MAAM,QAAEuN,EAAF,UAAWV,GAAc7M,EAAEkF,OAAOuG,QAAQ,UAAUC,QAC1D1L,EAAEsN,iBACFtN,EAAEC,kBACF,MAAM,aAAEqL,EAAe,IAAOpL,KAAKU,MACnC0K,EAAc,GAAEuB,IAAYU,EAAW,IAAGA,EAAW,MAAQ,EAC7DrN,KAAKC,SAAS,CAAEmL,kBAzMhBpL,KAAKU,MAAL,OACO2G,GADP,IAEIyD,gBAAiBnL,EAAMmL,kBAE3B9K,KAAKoF,SAAW,GAwMpBrD,SACI,MAAM,eAAEgJ,EAAF,gBAAkBD,EAAlB,eAAmCE,EAAnC,aAAmDC,EAAnD,SAAiEiB,EAAW,GAA5E,SAAgFE,EAAW,GAA3F,kBACFD,EAAoB,GADlB,gBACsBG,EADtB,YACuCpB,EADvC,aACoDE,EAAe,GADnE,eACuEkC,EAAiB,IAAOtN,KAAKU,OAC1G,MAAEqD,EAAF,SAASF,EAAW,SAApB,SAA8BuD,EAAW,SAAzC,QAAmDsG,GAAU,GAAU1N,KAAKL,OACtE,UAAE0F,EAAF,WAAarB,GAAehE,KAAKL,MAAMsE,QACrCqB,KAAMqI,GAAyBtI,GACjC,SAAEuI,EAAW,MAASD,EAE5B,IAGIE,EAHAC,EAAmB,GACnBC,EAAgB,EAChBC,EAAmB,EAcvB,OAZIjK,EAAMkK,WACNF,EAAgBhK,EAAMkK,SAAS7M,OAC3B0J,EACAgD,EAAmB/J,EAAMkK,UAGzBJ,EAAeH,EAAU,EApOpB,EAqOLI,EAAmB/J,EAAMkK,SAASC,MAAMC,KAAKC,IAAIL,EAAgBF,EAAc,KAEnFG,EAAmBF,EAAiB1M,QAIpC,uBACK2C,GAASsC,IAAKC,QAAQwH,IAAqBA,EAAiBO,UAAU7M,IAAK0C,IACxE,MAAM,KAAEoB,EAAO,IAAOpB,EAChBsG,EAAQxG,EAAWsK,wBAAwBhJ,EAAKjB,IAChDkB,EAAmBf,IAAGe,iBAAiBD,GACvCG,EAAcjB,IAAGiB,YAAYH,GAC7BE,EAAYF,EAAKP,QAAUO,EAAKvE,OAASuE,EAAKvE,OAAO,QAAKT,GAC1DiO,EAAkBrK,EAAQsK,OAAStK,EAAQsK,MAAMC,UAAU3O,GAAKA,EAAEwF,OAASqI,EAAYtJ,KAAO,EAEpG,IAAIqK,EAAmB,GACnBC,EAAe,EACfC,EAAkB,EAClB1K,EAAQ+J,WACRU,EAAezK,EAAQ+J,SAAS7M,OAE5BsN,EADA1D,EAAe9G,EAAQG,IACJH,EAAQ+J,SAER/J,EAAQ+J,SAASC,MAAM,EAAGL,GAEjDe,EAAkBF,EAAiBtN,QAGvC,MAAML,EAAS,GACf,GAAImD,EAAQnD,OAAQ,CAChB,MAAM8N,EAAOC,YAAK5K,EAAQnD,QAC1BA,EAAO8D,QAAQgK,GAEnB,MAAME,EAAW9D,EAAa/G,EAAQG,IAAM4G,EAAa/G,EAAQG,IAAM,EACjE2K,EAAejO,GAAUA,EAAOgO,GAAYhO,EAAOgO,GAAY,MAE/D,uBAAEE,EAAyB,IAAO/K,EAElCgL,EAAclL,EAAWmL,uBAAuB,CAClDpL,QACA4I,UAAWzI,EAAQG,GACnB+K,WAAYxB,KACVN,EAAepJ,EAAQG,IAC7B,IAAIE,EAAO2K,GAAehL,EAAQA,QAKlC,OAJIkH,EAAalH,EAAQG,MACrBE,EAAOL,EAAQA,SAIf,mBAAKxB,MAAM,OACP,mBAAKA,MAAM,iDACP,mBACIA,MAAQ,mEACRC,OAAU6C,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,mCAENJ,EAAKP,OAAS,oBAAMrC,MAAM,sBAAsBC,MAAM,oBAAoB4C,IAEhF,mBAAK7C,MAAM,wBAAwBC,MAAM,uBACrC,mBAAKD,MAAM,qDAENiL,EAAYtJ,KAAOiB,EAAKjB,IAAM,mBAC3B,oBAAM3B,MAAM,8CACR,iBAAGA,MAAM,oBAAoByD,QAASnG,KAAKiM,WAAY/F,UAAShC,EAAQG,OAG/E6H,EAAShI,EAAQG,KAAO,mBACrB,mBAAK3B,MAAM,qEAAqEC,MAAM,wDAClF,sBAAQD,MAAM,mCAAmCyD,QAASnG,KAAKqM,WAAYnG,UAAShC,EAAQG,GAAIgL,eAAcnL,EAAQA,SAAS,iBAAGxB,MAAM,gBAAxI,SACA,uBACA,sBAAQA,MAAM,mCAAmCyD,QAASnG,KAAKuM,oBAAqBrG,UAAShC,EAAQG,IAAI,iBAAG3B,MAAM,qBAAlH,aAIR,uBACI,oBAAMC,MAAM,sBACR,kBAAID,MAAM,wBAAwBC,MAAM,qBACnC2C,EAAKgK,QAAUhK,EAAKgK,SAAW3B,EAAY2B,OAAS,mBACjD,iBAAGhF,KAAO,UAAShF,EAAKgK,QAAW7J,IACjC,mBACDA,GAEJ+E,GAASA,EAAMpJ,OAAS,GAAK,mBAC1B,oBAAMsB,MAAM,uCACP8H,EAAM+E,OAAOzP,GAAkB,IAAbA,EAAEqI,QAAc+F,MAAM,EAAG,GAAG1M,IAAIgO,GAAK,wBAClD,iBAAGlF,KAAO,iBAAgBkF,EAAEF,QAAWE,EAAE9I,WAO1D0F,EAASlI,EAAQG,IAAM,mBACpB,mBAAK3B,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUiD,IAAI,mBAAkB,YAAC,IAAD,CAAMtB,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNkD,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMxB,GAAG,0BAAT,yBACbyB,QAASC,YAAU/F,KAAM,mBACzBgG,QAASxB,IAAGC,eACZwB,QAASzB,IAAGC,eACZ9B,MAAM,iBACNiC,MAAO0H,OAKvB,mBAAK5J,MAAM,uCACP,sBAAQkD,KAAK,SAASlD,MAAM,uBACxByD,QAASnG,KAAK6M,YACd3G,UAAShC,EAAQG,IACpB,iBAAG3B,MAAM,2BAGhB,mBACF,YAAC,IAAD,CAAU+M,SAAUjL,IAAGkL,cAAcnL,EAAML,EAAQnD,OAAQ6M,GAAW+B,aAAcnL,IAAGoL,wBAE1FzD,EAAkBjI,EAAQG,KAAO,mBAAK3B,MAAM,sBACzC,sBAAQA,MAAM,4BAA4ByD,QAASnG,KAAKwM,cAAetG,UAAShC,EAAQG,IAAI,iBAAG3B,MAAM,qBAArG,WACA,sBAAQA,MAAM,gCAAgCyD,QAASnG,KAAKuM,oBAAqBrG,UAAShC,EAAQG,IAAI,iBAAG3B,MAAM,wBAA/G,cAKZ,uBACI,mBAAKA,MAAM,6BACNsM,GAAgB,mBAAKtM,MAAM,kCACxB,mBACIA,MAAQ,+CACRC,MAAQ,oBACRkN,WAAY7P,KAAKsL,eACjBpF,UAAShC,EAAQG,IAEjB,mBAAKtB,QAAQ,OAAOL,MAAQ,YAAYC,MAAM,oBAAoBK,IAAKgM,EAAa/L,eAEvFiI,EAAYhH,EAAQG,KAAO,oBAAM3B,MAAM,mDAAmDC,MAAM,+EAC7F,iBAAGD,MAAM,6BAGhB3B,GAAUA,EAAOK,OAAS,GAAK,mBAAKsB,MAAM,iCACtC2D,IAAKC,QAAQvF,IAAWA,EAAOS,IAAI,CAACQ,EAAKkL,IAC9B,mBACJ,mBACIxK,MAAQ,2BACRC,MAAQ,wCAER,mBAAKI,QAAQ,OAAOL,MAAQ,mBAAmBC,MAAM,oBAAoBK,IAAKhB,EAAI0D,YAAaS,QAASnG,KAAKiN,UAAW/G,UAAShC,EAAQG,GAAIyL,WAAU5C,WAQnL,yBACI,sBAAQxK,MAAQ,8CAA4C6L,EAAkB,eAAiB,IAC3FpI,QAASnG,KAAKsL,eACdpF,UAAShC,EAAQG,GACjB+B,SAAUmI,GAETA,EAAkB,YAAC,IAAD,CAAMlK,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,QANxE,IASI,sBAAQ3B,MAAM,2BACVyD,QAASnG,KAAK4L,aACd1F,UAAShC,EAAQG,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAEHH,EAAQ0J,WAAaA,GAAY,wBAE5BxC,EAAalH,EAAQG,KAAO6K,EAAc,mBACxC,sBACItJ,KAAK,SACLlD,MAAM,sBACNqN,iBAAgB7L,EAAQG,GACxB8B,QAASnG,KAAKoL,cAEd,iBAAG1I,MAAM,eANb,KAM8B,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBAE5B,mBACF,sBACIuB,KAAK,SACLlD,MAAM,sBACNyD,QAASnG,KAAKmN,UACd4C,iBAAgB7L,EAAQG,IAExB,iBAAG3B,MAAM,eANb,IAM6B,YAAC,IAAD,CAAM2B,GAAG,qBAAT,sBAjCzC,IAsCI,sBAAQ3B,MAAM,qCACT2D,IAAK2J,eAAe9L,EAAQ+L,YAAa,IAAI9K,KAAQ,CAAE+K,OAAQ,UAC/DhM,EAAQiM,aAAe,mBACpB,oBAAMzN,MAAM,0BAAZ,WAA8C2D,IAAK2J,eAAe9L,EAAQiM,YAAa,IAAIhL,KAAQ,CAAE+K,OAAQ,UAA7G,SAKfhM,EAAQsK,OAAStK,EAAQsK,MAAMpN,OAAS,GAAK,qBAAOsB,MAAM,4DAA4DC,MAAM,8BACzH,iBAAGD,MAAM,kCADiC,IACGwB,EAAQsK,MAAMpN,SAGnE,mBAAKsB,MAAM,wBACNwB,GAAWmC,IAAKC,QAAQoI,IAAqBA,EAAiBlN,IAAK4O,IAChE,MAAM,KAAE9K,EAAO,IAAO8K,EAChB5F,EAAQxG,EAAWsK,wBAAwBhJ,EAAKjB,IAChDkB,EAAmBf,IAAGe,iBAAiBD,GACvCG,EAAcjB,IAAGiB,YAAYH,GAC7BE,EAAYF,EAAKP,QAAUO,EAAKvE,OAASuE,EAAKvE,OAAO,QAAKT,GAC1D+P,EAAgBD,EAAM5B,OAAS4B,EAAM5B,MAAMC,UAAU3O,GAAKA,EAAEwF,OAASqI,EAAYtJ,KAAO,GACxF,uBAAE4K,EAAyB,IAAOmB,EAElCE,EAAmBtM,EAAWuM,4BAA4B,CAC5DxM,QACA4I,UAAWzI,EAAQG,GACnBgJ,QAAS+C,EAAM/L,GACf+K,WAAYxB,KACVN,EAAgB,GAAEpJ,EAAQG,MAAM+L,EAAM/L,MAC5C,IAAImM,EAAYF,GAAoBF,EAAMlM,QAK1C,OAJIkH,EAAc,GAAElH,EAAQG,MAAM+L,EAAM/L,QACpCmM,EAAYJ,EAAMlM,SAIlB,mBAAKxB,MAAM,OACP,mBAAKA,MAAM,wCACP,mBACIA,MAAQ,mEACRC,OAAU6C,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,mCAENJ,EAAKP,OAAS,oBAAMrC,MAAM,sBAAsBC,MAAM,oBAAoB4C,IAEhF,mBAAK7C,MAAM,wBAAwBC,MAAM,uBACrC,mBAAKD,MAAM,6CACViL,EAAYtJ,KAAOiB,EAAKjB,IAAM,mBACvB,oBAAM3B,MAAM,8CACR,iBAAGA,MAAM,oBAAoByD,QAASnG,KAAKiM,WAAY/F,UAASkK,EAAM/L,OAG7E6H,EAASkE,EAAM/L,KAAO,mBACnB,mBAAK3B,MAAM,qEAAqEC,MAAM,wDAClF,sBAAQD,MAAM,mCAAmCyD,QAASnG,KAAKqM,WAAYnG,UAASkK,EAAM/L,GAAIgL,eAAce,EAAMlM,SAAS,iBAAGxB,MAAM,gBAApI,SACA,uBACA,sBAAQA,MAAM,mCAAmCyD,QAASnG,KAAKuM,oBAAqBrG,UAASkK,EAAM/L,IAAI,iBAAG3B,MAAM,qBAAhH,aAIR,oBAAMC,MAAM,sBACR,kBAAID,MAAM,wBAAwBC,MAAM,qBACnC8C,EACA+E,GAASA,EAAMpJ,OAAS,GAAK,mBAC1B,oBAAMsB,MAAM,uCACP8H,EAAM+E,OAAOzP,GAAkB,IAAbA,EAAEqI,QAAc+F,MAAM,EAAG,GAAG1M,IAAIgO,GAAK,wBAClD,iBAAGlF,KAAO,iBAAgBkF,EAAEF,OAAU5M,MAAM,QAA5C,IAAqD8M,EAAE9I,WAOxE0F,EAASgE,EAAM/L,IAAM,mBAClB,mBAAK3B,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUiD,IAAI,mBAAkB,YAAC,IAAD,CAAMtB,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNkD,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMxB,GAAG,0BAAT,yBACbyB,QAASC,YAAU/F,KAAM,mBACzBgG,QAASxB,IAAGC,eACZwB,QAASzB,IAAGC,eACZ9B,MAAM,iBACNiC,MAAO0H,OAKvB,mBAAK5J,MAAM,uCACP,sBAAQkD,KAAK,SAASlD,MAAM,uBACxByD,QAASnG,KAAK+M,iBACdgD,iBAAgB7L,EAAQG,GACxB6B,UAASkK,EAAM/L,IAClB,iBAAG3B,MAAM,2BAGhB,mBACF,YAAC,IAAD,CAAU+M,SAAUjL,IAAGkL,cAAcc,EAAWJ,EAAMrP,OAAQ6M,GAAW+B,aAAcnL,IAAGoL,wBAE7FzD,EAAkBiE,EAAM/L,KAAO,mBAAK3B,MAAM,sBACvC,sBAAQA,MAAM,4BAA4ByD,QAASnG,KAAK0M,mBAAoBxG,UAASkK,EAAM/L,GAAI0L,iBAAgB7L,EAAQG,IAAI,iBAAG3B,MAAM,qBAApI,WACA,sBAAQA,MAAM,gCAAgCyD,QAASnG,KAAKuM,oBAAqBrG,UAASkK,EAAM/L,IAAI,iBAAG3B,MAAM,wBAA7G,cAKZ,yBACI,sBAAQA,MAAQ,4CAA0C2N,EAAgB,eAAiB,IACvFlK,QAASnG,KAAKmL,UACdkE,eAAcnL,EAAQG,GACtB6B,UAASkK,EAAM/L,GACf+B,SAAUiK,GAETA,EAAgB,YAAC,IAAD,CAAMhM,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,QAPtE,IAUI,sBAAQ3B,MAAM,2BACVyD,QAASnG,KAAK4L,aACd1F,UAAShC,EAAQG,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAEH+L,EAAMxC,WAAaA,GAAY,wBAE1BxC,EAAc,GAAElH,EAAQG,MAAM+L,EAAM/L,OAASiM,EAAmB,mBAC9D,sBACI1K,KAAK,SACLlD,MAAM,sBACNqN,iBAAgB7L,EAAQG,GACxBoM,eAAcL,EAAM/L,GACpB8B,QAASnG,KAAKoL,cAEd,iBAAG1I,MAAM,eAPb,KAO8B,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBAE5B,mBACF,sBACIuB,KAAK,SACLlD,MAAM,sBACNyD,QAASnG,KAAKmN,UACd4C,iBAAgB7L,EAAQG,GACxBoM,eAAcL,EAAM/L,IAEpB,iBAAG3B,MAAM,eAPb,IAO6B,YAAC,IAAD,CAAM2B,GAAG,qBAAT,sBApCzC,IAyCI,sBAAQ3B,MAAM,qCACT2D,IAAK2J,eAAeI,EAAMH,YAAa,IAAI9K,KAAQ,CAAE+K,OAAQ,UAC7DE,EAAMD,aAAe,mBAClB,oBAAMzN,MAAM,0BAAZ,WAA8C2D,IAAK2J,eAAeI,EAAMD,YAAa,IAAIhL,KAAQ,CAAE+K,OAAQ,UAA3G,SAKfE,EAAM5B,OAAS,qBAAO9L,MAAM,4DAA4DC,MAAM,8BAC3F,iBAAGD,MAAM,kCADG,IACiC0N,EAAM5B,MAAMpN,YAM5EuN,EAAeC,EAAkB,GAAK,uBACnC,sBAAQlM,MAAM,2BACVyD,QAASnG,KAAKgM,cACd9F,UAAShC,EAAQG,IAEjB,YAAC,IAAD,CAAMA,GAAG,qBAAqBqM,OAAQ,CAAEC,KAAMhC,EAAeC,IAA7D,OACSD,EAAeC,EADxB,4BAOX7D,EAAe7G,EAAQG,KAAO,mBAAK3B,MAAM,iDACtC,YAAC,IAAD,CAAmBuB,OAAQjE,KAAKL,MAAMsE,OAAQF,MAAOA,EACjDqD,SAAUA,EACVvD,SAAUA,EACVoD,UAAW/C,EAAQG,GACnBe,SAAUjC,GAAKnD,KAAKoF,SAASlB,EAAQG,IAAMlB,EAC3CW,eAAgB9D,KAAKoF,SACrBmI,IAAM,sBAAqBrJ,EAAQG,SAMtD0J,EAAgBC,EAAmB,GAAK,uBACrC,sBAAQtL,MAAM,2BACVyD,QAASnG,KAAK+L,gBAEd,YAAC,IAAD,CAAM1H,GAAG,qBAAqBqM,OAAQ,CAAEC,KAAM5C,EAAgBC,IAA9D,OACSD,EAAgBC,EADzB,2BAKPlD,GAAmB,uBAChB,sBAAQpI,MAAM,2BACVyD,QAASnG,KAAK+L,gBAEd,YAAC,IAAD,CAAM1H,GAAG,8BAAT,mC,EAQTgH,Q,ogCC5mBf,MAAMhE,EAAe,CACpB0D,eAAgB,GAEb6F,YAAa,GACbC,cAAe,EACfC,MAAO,EACPC,MAAO,GACPpH,OAAQ,EACRqH,uBAAuB,EACvBC,OAAO,EACPC,WAAW,IAAI/L,MAAOgM,W,IAIpBC,EADL5R,Y,EAAD,cACiCC,YAC7BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YASnB0R,WAAcvR,IACVA,EAAEC,kBACFD,EAAEsN,iBACF,MAAM,SAAEkE,GAAatR,KAAKU,MAC1BV,KAAKC,SAAS,CAAEqR,UAAWA,KAbZ,KAgBtBV,YAAchN,eAAO9D,GACd,MAAMyR,EAAYpH,SAASrK,EAAEkF,OAAOuG,QAAQ,mBAAmBC,QAAQnH,GAAI,KAC3E,aAAEmN,GAAiB,EAAK7R,MAAMsE,QAExB,YAAE2M,GAAgB,EAAKlQ,MAC7BkQ,EAAYW,IAAa,EACzB,EAAKtR,SAAS,CAAE2Q,gBAChB1L,WAAW,KACP,MAAM,YAAE0L,GAAgB,EAAKlQ,aACtBkQ,EAAYW,GACnB,EAAKtR,SAAS,CAAE2Q,iBACjB,MAET,MAAMxM,QAAiBoN,EAAaZ,YAAY,CAAEvM,GAAIkN,IAC5CnN,GAAgC,MAApBA,EAASE,QACrB,EAAKmN,cAAcF,EAAWnN,EAAS2E,OA/B5B,KAmCnB2I,iBAAmB,EAAG9L,OAAM+L,UAASvN,WAAU6C,YAAWyE,cAEtD,MAAM,aAAEkG,EAAe,QAAW5R,KAAKL,MACvC,GAAqB,SAAjBiS,EAAyB,CACzB,MAAM,UAAEC,GAAc7R,KAAKL,MAAMsE,OACjC,OAAQ2B,GACJ,IAAK,cACDiM,EAAUC,iBAAiB,CAAEzN,GAAIsN,EAAQtN,GAAI0E,KAAM3E,EAAS2E,KAAM9B,cAClE,MACJ,IAAK,YACD4K,EAAUE,sBAAsB,CAAE1N,GAAIsN,EAAQtN,GAAI0E,KAAM3E,EAAS2E,KAAM9B,YAAWyE,YAClF,MAEJ,QACQzE,EACA4K,EAAUG,2BAA2B,CAAE3N,GAAIsN,EAAQtN,GAAI0E,KAAM3E,EAAS2E,KAAM9B,cAE5E4K,EAAUI,oBAAoB,CAAE5N,GAAIsN,EAAQtN,GAAI0E,KAAM3E,EAAS2E,aAIxE,GAAqB,UAAjB6I,EAA0B,CACjC,MAAM,WAAE5N,GAAehE,KAAKL,MAAMsE,OAClC,OAAQ2B,GACJ,IAAK,cACD5B,EAAWkO,yBAAyB,CAAE7N,GAAIsN,EAAQtN,GAAI0E,KAAM3E,EAAS2E,KAAM9B,cAC3E,MACJ,IAAK,YACDjD,EAAWmO,8BAA8B,CAAE9N,GAAIsN,EAAQtN,GAAI0E,KAAM3E,EAAS2E,KAAM9B,YAAWyE,YAC3F,MAEJ,QACQzE,EACAjD,EAAWoO,mCAAmC,CAAE/N,GAAIsN,EAAQtN,GAAI0E,KAAM3E,EAAS2E,KAAM9B,cAErFjD,EAAWqO,4BAA4B,CAAEhO,GAAIsN,EAAQtN,GAAI0E,KAAM3E,EAAS2E,UAtEzE,KA6EnB0I,cAAgB,CAACpN,EAAI0E,KACjB,MAAM,aAAE6I,EAAe,QAAW5R,KAAKL,MACvC,GAAqB,SAAjBiS,EAAyB,CACzB,MAAM,UAAEC,GAAc7R,KAAKL,MAAMsE,OACjC4N,EAAUS,iBAAiB,CAAEjO,KAAI0E,cAC9B,GAAqB,UAAjB6I,EAA0B,CACjC,MAAM,WAAE5N,GAAehE,KAAKL,MAAMsE,OAClCD,EAAWuO,yBAAyB,CAAElO,KAAI0E,WApF/B,KAwFtByJ,iBAAoB1S,IACnB,MAAMyR,EAAYzR,EAAEkF,OAAOuG,QAAQ,UAAUC,QAAQnH,IAC/C,eAAE0G,GAAmB/K,KAAKU,MACtBqK,EAAewG,UACRxG,EAAewG,GAEtBxG,EAAewG,IAAa,EAEtCvR,KAAKC,SAAS,CACb8K,kBACE,KACE/K,KAAKoF,SAASmM,IACjBvR,KAAKoF,SAASmM,GAAWzF,WApGN,KAyGnB2G,UAAa3S,IACT,MAAM,IAAEuI,EAAF,MAAOJ,EAAP,KAAcyK,GAAS5S,EAAEkF,OAAOuG,QAAQ,UAAUC,SAClD,SAAE5B,GAAa5J,KAAKL,MAAMsE,OAChC2F,EAAS+I,SAAS,CAAEtK,MAAKJ,QAAOyK,UA5GjB,KA+GnBE,kBAAqB9S,IACjB,GAA2B,MAAvBA,EAAEkF,OAAO6N,UACT,OAAO,EAEX,MAAM7N,EAASlF,EAAEkF,OAAOuG,QAAQ,kBAChC,GAAIvG,EAAQ,CACR,MAAM,GAAEX,GAAOW,EAAOwG,QAClBnH,IACJyO,QAAQC,IAAI,CAAE/N,SAAQX,OAClB2O,gBAAO,oBAAmB3O,MAxHnB,KA6HnB8I,UAAYvJ,eAAO9D,GACfA,EAAEsN,iBACFtN,EAAEC,kBACF,MAAM,KAAEkT,EAAO,IAAO,EAAKtT,OACrB,UAAE0F,EAAF,UAAawM,GAAc,EAAKlS,MAAMsE,QACtC,KAAEqB,GAASD,EACX6N,QAA2BrB,EAAU1E,UAAU,CAAExG,OAAQsM,EAAM3N,OAAM6N,MAAO,SAClF,IAAIC,EACAH,EAAK/O,UACLkP,QAA8BvB,EAAU1E,UAAU,CAAExG,OAAQsM,EAAM3N,OAAM6N,MAAO,aAEnF,EAAKlT,SAAS,CAAEmL,aAAc,EAAG8H,qBAAoBE,2BAxItC,KA2InBhI,aAAgBtL,IACZA,EAAEsN,iBACFtN,EAAEC,kBACFC,KAAKC,SAAS,CAAEmL,aAAc,KA5I9BpL,KAAKU,MAAL,KACO2G,GAEPrH,KAAKoF,SAAW,GAChBpF,KAAKqT,aAAe,KA2IxBtR,SACI,MAAM,KAAEkR,EAAF,YAAaK,EAAc,SAA3B,YAAqCC,EAAc,SAAnD,WAA6DC,EAAa,SAA1E,aAAoF5B,EAAe,QAAW5R,KAAKL,OACnH,eAAEoL,EAAF,SAAkBuG,EAAlB,YAA4BV,EAA5B,aAAyCxF,EAAzC,mBAAuD8H,EAAvD,sBAA2EE,GAA0BpT,KAAKU,OAC1G,UAAEmR,EAAF,WAAa7N,EAAb,UAAyBqB,EAAzB,SAAoCuE,GAAa5J,KAAKL,MAAMsE,QAC5D,KAAEqB,EAAF,QAAQuE,GAAYxE,GACpB,SAAEuI,EAAW,MAAStI,GACtB,YAAYmO,GAAgB7J,GAE5B,WAAE8J,GAAe7B,EACvB,IAAIhK,EAAO,GACP8L,EAAa,GACI,SAAjB/B,GACA/J,EAAOgK,EAAU+B,eAAeX,EAAKpL,MACrC8L,EAAa9B,EAAUgC,eAAeZ,EAAK3N,OAAS,IAC5B,UAAjBsM,IACP/J,EAAO7D,EAAW4P,eAAeX,EAAKpL,MACtC8L,EAAa3P,EAAW6P,eAAeZ,EAAK3N,OAAS,IAEpCD,EAAUyO,iBAAiB,CAAEC,SAAUlM,EAAKmM,UAAWpG,aAA5E,MACMqG,EAAW5O,EAAU6O,aAAa,CAAEtO,KAAMiC,EAAKjC,KAAMgI,aAErDuG,KAAetM,IAAQA,EAAKuM,UAAWvM,EAAKuM,QAAQC,KAAKC,GAAKA,IAAMhP,EAAKjB,IAEzEU,EAAQP,IAAG+P,SAAS,CAAEjP,KAAMqO,EAAY9L,OAAMlB,OAAQsM,EAAMuB,SAAU,UAEtE,MAAEhG,EAAF,SAASP,GAAagF,EACtBwB,EAAkBxB,EAAKzE,OAASyE,EAAKzE,MAAMC,UAAU3O,GAAKA,EAAEwF,OAASA,EAAKjB,KAAO,EACjFqQ,EAAiB7M,GAAQA,EAAK8M,UAAY9M,EAAK8M,UAAUvT,OAAS,EAElEwT,EAAa/M,EAAKuM,SAAWvM,EAAKuM,QAAQS,QAAQvP,EAAKjB,KAAO,EAC9DyQ,EAAcjN,GAAQA,EAAK8M,WAAa9M,EAAK8M,UAAUE,QAAQvP,EAAKjB,KAAO,EAC3E0Q,EAAqBlN,EAAKmN,gBAAkBnN,EAAKmN,eAAevG,UAAU3O,GAAKA,EAAEuE,KAAOiB,EAAKjB,KAAO,EACpG4Q,EAAmB5P,EAAU6P,cAAc,CAAEC,UAAWlC,EAAKkC,UAAWvH,aACxEwH,EAAuB/P,EAAU6P,cAAc,CAAEC,UAAWlC,EAAKkC,UAAWhC,MAAO,UACzF,QAAEkC,GAAU,IAAOpC,EAGnB,IAAIqC,GACA5O,GACA6O,GACAC,GACA7B,IACA2B,GAAY9Q,IAAGe,iBAAiBoO,GAChCjN,GAAOlC,IAAGiB,YAAYkO,GACtB4B,GAAW/Q,IAAGiB,YAAYkO,GACtBA,EAAW8B,UAAY9B,EAAWrE,SAAWhK,EAAKgK,SAClDkG,GAAW7B,EAAW8B,SAASC,YAAc,KAAQ,UAAS/B,EAAWrE,SAIjF,MAAMvO,GAAS,GAOf,GANIkS,EAAK0C,UACL5U,GAAO8D,KAAP,OACOoO,EAAK0C,UADZ,IAEI/P,KAAM,SAGVqN,EAAKlS,OAAQ,CACb,MAAM8N,EAAOC,YAAKmE,EAAKlS,QACvBA,GAAO8D,QAAQgK,GAGnB,MAAM,uBAAEI,GAAyB,GAA3B,UAA+B2G,GAAY,IAAO3C,EAClD4C,GAAQrR,IAAGsR,SAAS7C,EAAK8C,YACzBC,GAAYxR,IAAGyR,aAAahD,EAAK8C,YAEvC,IAAKlO,IAASA,EAAKnB,KACf,MAAO,GAGX,MAAMwP,GAAkB1R,IAAG2R,eAAe,CACtCxP,OAAQsM,EACR7D,WAAYxB,EACZuF,MAAO,UACLD,EACN,IAAIkD,GAAWF,IAAmBjD,EAAKvM,KAMvC,IAAI2P,GALuB7R,IAAG2R,eAAe,CACzCxP,OAAQsM,EACR7D,WAAYxB,EACZuF,MAAO,aACLC,GACkCH,EAAK/O,QAO7C,OALIkH,IACAgL,GAAWnD,EAAKvM,KAChB2P,GAAcpD,EAAK/O,SAGf,mBACJ,mBAAKxB,MAAM,4BACP,mBAAKA,MAAM,eACP,mBACIA,MAAQ,sFACRC,MAAOoC,EAAS,0BAAyBA,+BAAqC,KAC5EA,GAAS,iBAAGrC,MAAM,+BAA+BC,MAAM,uBAGjE,mBAAKD,MAAM,iCAAiCC,MAAM,uBAC9C,oBAAMD,MAAM,gDAAgDuR,GAC5D,kBAAIvR,MAAM,yBAAyBC,MAAM,uBACpCkF,EAAKM,OAAS,mBACX,iBAAGmC,KAAO,iBAAgBzC,EAAKyH,OAAUnJ,QAAUrG,GAAMwT,EAAYxT,EAAG+H,EAAKyH,QAAS5M,MAAM,kBAAkBmF,EAAKnB,OACjH,mBACDmB,EAAKnB,OAGd,mBAAKhE,MAAM,QACNuQ,EAAKqD,MAAQ,qBAAO5T,MAAM,aAAayD,QAASnG,KAAKqR,YACjDC,EAAWjL,IAAKkQ,WAAWtD,EAAKqD,KAAM,CAAEpG,OAAQ,QAASsG,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAAerQ,IAAK2J,eAAeiD,EAAKqD,KAAM,IAAInR,KAAQ,CAAE+K,OAAQ,WAEzJ,IAAhB+C,EAAK9K,OAAe,mBACjB,qBAAOzF,MAAM,mBACT,iBAAGA,MAAM,0BAEX,mBACF,qBAAOA,MAAM,mBACT,iBAAGA,MAAM,iBADb,KACiC2D,IAAKsQ,OAAOjC,GAD7C,MAIHa,IAAY,mBACT,qBAAO7S,MAAM,mBACR8S,GAAW,mBACR,iBAAG9S,MAAM,gBADD,IACkB,iBAAG4H,KAAMkL,IAAWD,KAC5C,mBACF,iBAAG7S,MAAM,gBADP,IACyB6S,MAIvC,qBAAO7S,MAAM,cACRuQ,EAAKkC,UAAY,GAAK,mBAAE,iBAAGzS,MAAU0S,EAAF,UAAb,IAAgDH,GAItEhC,EAAK2D,KAAO,GAAK,mBAAE,iBAAGlU,MAAM,oBAAX,IAAiCuQ,EAAK2D,KAAKxV,QAC5D6R,EAAK4D,MAAQ,GAAK,mBAAE,iBAAGnU,MAAQ,0BAAyBuQ,EAAK4D,MAAQ,EAAI,UAAY,mBAErF5D,EAAK6D,WAAa,GAAK,mBACpB,iBAAGpU,MAAM,uBADW,IACa,YAAC,IAAD,CAAQuB,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAOqO,EAAK6D,cAE9D,IAArB7D,EAAK8D,aAAqB,mBACvB,iBAAGrU,MAAM,gCADc,IACmB,YAAC,IAAD,CAAauB,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAOqO,EAAK8D,eAEjG9D,EAAK2D,MAAQ3D,EAAK2D,KAAKxV,OAAS,GAAK,mBAClC,iBAAGsB,MAAM,oBADyB,IACH2D,IAAKsQ,OAAO1D,EAAK2D,KAAKxV,OAAQ,IAMhE6N,IAA0BA,GAAuB+H,iBAAmB,mBACjE,iBAAGtU,MAAM,+BADwD,IACvBuM,GAAuB+H,iBAEpE/D,EAAKgE,kBAAoBhE,EAAKgE,iBAAiBC,WAAa,oBAAMxU,MAAM,oBAAoBuQ,EAAKgE,iBAAiBC,aAI1HrN,GAAW,mBACRnH,MAAM,qEACNC,MAAM,mBAEN,qBAAOD,MAAM,mBAAb,QACCuM,IAA0BA,GAAuBkI,mBAAqB,mBACnE,qBAAOzU,MAAM,cACT,iBAAGA,MAAM,0BADb,IACyCuM,GAAuBkI,oBAGnExD,EAAWyD,YAAc,mBACtB,oBAAM1U,MAAM,4DACP,CAAC,WAAY,eAAgB,SAASlB,IAAI1B,GAAK,mBAC5C,oBAAM4C,MAAM,mBACPiR,EAAWyD,WAAWtX,QAKtCkW,IAAa,mBAEV,qBAAOtT,MAAM,mBAAb,MACQsT,GAAUqB,OAElB,qBAAO3U,MAAM,mBAAb,MACQsT,GAAUsB,QADlB,IAC4BjR,IAAKkR,SAASvB,GAAUwB,eAAiB,mBAAE,iBAAG9U,MAAO8B,IAAGiT,iBAAiBzB,GAAUwB,kBAE/G,qBAAO9U,MAAM,mBAAb,MACQ2D,IAAKsQ,OAAOX,GAAU0B,YAAc,IAAM,GADlD,KACwDrR,IAAKkR,SAASvB,GAAU2B,mBAAqB,mBAAE,iBAAGjV,MAAO8B,IAAGiT,iBAAiBzB,GAAU2B,sBAE9I1E,EAAK2E,mBAAqB3E,EAAK2E,kBAAkBC,kBAAoB,GAAK,qBAAOnV,MAAM,mBAAb,MACnE2D,IAAKsQ,OAAO1D,EAAK2E,kBAAkBC,kBAAmB,IAE7D5E,EAAK6E,YAAc7E,EAAK6E,WAAWtW,IAAIsG,GAAO,mBAC3C,oBAAMpF,MAAM,4DAA4DoF,SA6B5F,mBAAKpF,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAeuB,OAAQjE,KAAKL,MAAMsE,OAAQlD,OAAQA,GAAQsD,GAAI4O,EAAK5O,GAAI0T,SAAU/X,KAAK4Q,YAAaoH,QAASpH,MAInHqC,EAAK2D,MAAQ3D,EAAK2D,KAAKxV,OAAS,GAAK,mBAAKsB,MAAM,6BAC7C,mBAAKA,MAAM,YACP,YAAC,IAAD,CAAauB,OAAQjE,KAAKL,MAAMsE,OAAQ2S,KAAM3D,EAAK2D,KAAMqB,QAASvE,EAAYF,WAAYA,MAIlG,mBAAK9Q,MAAM,2DACNuQ,EAAKiF,WAAa,GAAK,mBAAKxV,MAAM,oBAC/B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,gBAAhB,IAAiC,YAAC,IAAD,CAAM2B,GAAG,6BAAT,cAErC,mBAAK3B,MAAM,kCAAkCC,MAAM,qBAC/C,YAAC,IAAD,CAAUsB,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAOqO,EAAKiF,eAGxDjF,EAAKkF,UAAY,GAAK,mBAAKzV,MAAM,oBAC9B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,oBAAhB,IAAqC,YAAC,IAAD,CAAM2B,GAAG,2BAAT,gBAEzC,mBAAK3B,MAAM,kCAAkCC,MAAM,qBAC/C,YAAC,IAAD,CAAWsB,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAOqO,EAAKkF,cAGzDlF,EAAKmF,SAAW,GAAK,mBAAK1V,MAAM,oBAC7B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,iBAAhB,IAAkC,YAAC,IAAD,CAAM2B,GAAG,6BAAT,cAEtC,mBAAK3B,MAAM,kCAAkCC,MAAM,qBAC9C0D,IAAKgS,SAASpF,EAAKmF,UAAU,KAGrCnF,EAAKqF,SAAW,GAAK,mBAAK5V,MAAM,eAC7B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,0BAAhB,IAA2C,YAAC,IAAD,CAAM2B,GAAG,8BAAT,eAE/C,mBAAK3B,MAAM,kCAAkCC,MAAM,qBAC9C0S,IAAWA,GAAQkD,kBAAoB,EAAI,mBACxC,YAAC,IAAD,CAAOtU,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAmC,IAA5ByQ,GAAQkD,qBAC/C,mBACF,YAAC,IAAD,CAAOtU,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAOqO,EAAKqF,eAM9D,mBAAK5V,MAAM,YACP,mBAAK2B,GAAG,gBAAgB3B,MAAM,mCAAmCC,MAAM,oBAAoBwD,QAASnG,KAAK4S,kBAAmB1M,UAAS+M,EAAK3D,QACtI,YAAC,IAAD,CAAUG,SAAUjL,IAAGkL,cAAc0G,GAAUnD,EAAKlS,OAAQ6M,GAAW+B,aAAcnL,IAAGoL,wBAE5F,mBAAKlN,MAAM,mBACP,YAAC,IAAD,CAAU+M,SAAUjL,IAAGkL,cAAc2G,GAAapD,EAAKlS,OAAQ6M,GAAW+B,aAAcnL,IAAGoL,wBAE9FqD,EAAKrF,WAAaA,GAAY,oBACzBxC,GAAgB8K,GAAkB,mBAChC,sBAAQtQ,KAAK,SAASlD,MAAM,iCAAiCyD,QAASnG,KAAKoL,cAAc,iBAAG1I,MAAM,eAAlG,KAAmH,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBACjH,mBACF,sBAAQuB,KAAK,SAASlD,MAAM,iCAAiCyD,QAASnG,KAAKmN,WAAW,iBAAGzK,MAAM,eAA/F,IAA+G,YAAC,IAAD,CAAM2B,GAAG,qBAAT,uBAK3H,mBAAK3B,MAAM,QACP,YAAC,IAAD,CACIuB,OAAQjE,KAAKL,MAAMsE,OACnBuK,MAAOA,EACPP,SAAUA,EACVrI,KAAK,OACL0N,YAAaA,EACbC,YAAaA,MAInBqB,IAAeE,IAAgBC,GAAsB,mBAAKrS,MAAM,iBAC9D,YAAC,IAAD,CAAYuB,OAAQjE,KAAKL,MAAMsE,OAAQ4D,KAAMA,EAAM2Q,YAAY,KAGnE,uBACI,mBAAK9V,MAAM,OACP,mBAAKA,MAAM,mBACP,sBAAQkD,KAAK,SAASlD,MAAQ,yCAAwC+R,EAAkB,UAAY,gCAAgCA,EAAkB,eAAiB,mBACnKvO,UAAS+M,EAAK5O,GACd8B,QAASnG,KAAK4Q,aAGd,iBAAGlO,OAAU+R,EAAkB,mBAAqB,OAAzC,kBALf,IAKiF,YAAC,IAAD,CAAMpQ,GAAG,iBAAT,SAGrF,mBAAK3B,MAAM,mBACP,sBAAQkD,KAAK,SAASlD,MAAM,kEACxBwD,UAAS+M,EAAK5O,GACd8B,QAASnG,KAAKwS,kBAEd,iBAAG9P,MAAM,mBAJb,IAIiC,YAAC,IAAD,CAAM2B,GAAG,wBAAT,eAGpCoP,EAAc,mBACX,mBAAK/Q,MAAM,mBACP,sBAAQA,MAAM,kEACVyD,QAASnG,KAAKyS,UACdgG,WAAW,uCAAsCxF,EAAK3D,OACtDoJ,aAAa,UAASzF,EAAKhL,OAE3B,iBAAGvF,MAAM,iBALb,IAK+B,YAAC,IAAD,CAAM2B,GAAG,eAAT,UAGjC,mBACF,mBAAK3B,MAAM,mBACP,iBAAGA,MAAM,kEACL4H,KAAO,uCAAsC2I,EAAK3D,OAClDtK,OAAO,SACP2T,IAAI,aACJC,eAAA,GAEA,iBAAGlW,MAAM,iBANb,IAM+B,YAAC,IAAD,CAAM2B,GAAG,eAAT,YAO9CwR,GAAQ,GAAK,mBACV,mBAAKnT,MAAM,QACP,YAAC,IAAD,CACIuB,OAAQjE,KAAKL,MAAMsE,OACnB4R,MAAOA,GACPlP,OAAQsM,EACRrN,KAAK,OACLuO,YAAaA,EACbtK,QAASA,EACTyJ,YAAaA,EACbC,YAAaA,MAKzB,mBAAK7Q,MAAM,QACNqI,EAAekI,EAAK5O,KAAO,YAAC,IAAD,CACxBJ,OAAQjE,KAAKL,MAAMsE,OACnB0N,QAASsB,EACT7N,SAAUjC,GAAKnD,KAAKoF,SAAS6N,EAAK5O,IAAMlB,EACxCW,eAAgB9D,KAAKoF,SACrBsE,IAAI,KACJC,OAAO,IACPkP,YAAY,EACZC,WAAW,OACXjV,SAAU7D,KAAK0R,mBAEnB,YAAC,IAAD,CACIzN,OAAQjE,KAAKL,MAAMsE,OACnB0N,QAASsB,EACTvJ,IAAI,KACJC,OAAO,IACP+D,SAAS,EACT7J,SAAU7D,KAAK0R,yB,EAOpBN,Q,ipBC9iBf,MAAM/J,EAAe,CACpB0D,eAAgB,GAChBgO,gBAAiB,GACd9N,aAAc,GACd+N,UAAW,I,IAITC,EADLzZ,Y,EAAD,cAC8BC,YAC1BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAKnBuZ,UAAYtV,eAAO9D,GACf,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,UAAUC,SAClC2N,UAAW5U,GAAS,EAAK7D,OAC3B,WAAEsD,GAAe,EAAKrE,MAAMsE,QAC5B,SAAEJ,EAAW,MAAM,IAAS,EAAKlE,YAEjCqE,EAAWoV,UAAUjP,SAAS9F,EAAI,IAAK,OAAQE,GAAM,GAC3DP,EAAWqV,iBAAiBlP,SAAS9F,EAAI,IAAK,OAAQE,GACtD,EAAKtE,SAAS,CACVkZ,UAAW,GACXG,UAAW,IAEfzV,KAjBe,KAoBnB0V,eAAiB3V,eAAO9D,GACpB,MAAM,MAAEiE,GAAU,EAAKpE,OACjB,GAAE0E,GAAON,GACT,MAAEa,EAAF,KAAS8B,GAAS5G,EAAEkF,OAE1BwU,aAAa,EAAKC,YAAY/S,IAC9B,EAAK+S,YAAY/S,GAAQxB,YAAWtB,iBAChC,EAAK8V,cAAcrV,EAAIqC,EAAM9B,KAC9B,MA1BH5E,KAAKyZ,YAAc,GA6BvB,oBAAoBpV,EAAIqC,EAAM9B,GAC1B,MAAM,WAAEZ,GAAehE,KAAKL,MAAMsE,aAC5BD,EAAWoV,UAAUjP,SAAS9F,EAAI,IAAKqC,EAAM9B,GAAO,GAC1DZ,EAAWqV,iBAAiBlP,SAAS9F,EAAI,IAAKqC,EAAM9B,GAGxD7C,SACI,MAAM,UAAEoX,EAAF,UAAaG,GAActZ,KAAKU,OAChC,UAAE2E,GAAcrF,KAAKL,MAAMsE,QAC3B,QAAE4F,GAAYxE,GAEd,MAAEtB,GAAU/D,KAAKL,MACvB,OAAQ,mBACJ,mBAAK+C,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAUiD,IAAI,mBAAkB,YAAC,IAAD,CAAMtB,GAAG,oBAAT,cAC7C,mBAAK3B,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACNkD,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMxB,GAAG,0BAAT,yBACbyB,QAASC,YAAU/F,KAAM,aAEzBiG,QAASzB,IAAGC,eACZ9B,MAAM,iBACNiC,MAAOuU,GAAapV,EAAMQ,SAKtC,mBAAK7B,MAAM,0BACNmH,GAAW,mBACR,mBAAKnH,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,2CACA,qBACIkD,KAAK,WACLvB,GAAIN,EAAMM,GACVqC,KAAK,SACLZ,QAAS9F,KAAKuZ,eACd3U,MAAOb,EAAMmE,OAAS,EAAI,EAC1BwC,QAAS3G,EAAMmE,OAAS,EAAI,QAO/C2B,GAAW,mBACR,yBAAO,YAAC,IAAD,CAAMxF,GAAG,cAAT,SACP,mBAAK3B,MAAM,cACP,yBACI,sBACIA,MAAM,iCACN2B,GAAIN,EAAMM,GACVqC,KAAK,OACLZ,QAAS9F,KAAKuZ,eACd3U,MAAO0U,GAAavV,EAAM6B,MAE9B,sBAAQhB,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMP,GAAG,qBAAT,aAApB,OACI,sBAAQO,MAAO,EAAG6F,SAAwB,GAAd1G,EAAM6B,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMvB,GAAG,sBAAT,WAClE,sBAAQO,MAAO,EAAG6F,SAAwB,GAAd1G,EAAM6B,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMvB,GAAG,iBAAT,YAClE,sBAAQO,MAAO,EAAG6F,SAAwB,GAAd1G,EAAM6B,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMvB,GAAG,sBAAT,iBAMjFN,EAAM6B,MAAQ,GAAK,mBAChB,yBAAO,YAAC,IAAD,CAAMvB,GAAG,kBAAT,aACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,UACLZ,QAAS9F,KAAKuZ,eACd3U,MAAOb,EAAMqE,YAKzB,yBAAO,YAAC,IAAD,CAAM/D,GAAG,aAAT,QACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,MACLZ,QAAS9F,KAAKuZ,eACd3U,MAAOb,EAAMsE,SAMb,IAAftE,EAAM6B,MAAc,mBACjB,yBAAO,YAAC,IAAD,CAAMvB,GAAG,cAAT,SACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,OACLZ,QAAS9F,KAAKuZ,eACd3U,MAAOb,EAAMyE,SAKzB,yBAAO,YAAC,IAAD,CAAMnE,GAAG,iBAAT,YACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,UACLZ,QAAS9F,KAAKuZ,eACd3U,MAAOb,EAAM0E,YAKzB,yBAAO,YAAC,IAAD,CAAMpE,GAAG,gBAAT,WACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,SACLZ,QAAS9F,KAAKuZ,eACd3U,MAAOb,EAAM2E,WAKzB,yBAAO,YAAC,IAAD,CAAMrE,GAAG,kBAAT,aACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,WACLZ,QAAS9F,KAAKuZ,eACd3U,MAAOb,EAAMuE,aAKzB,yBAAO,YAAC,IAAD,CAAMjE,GAAG,eAAT,UACP,mBAAK3B,MAAM,cACP,yBACI,qBACIA,MAAM,eACNkD,KAAK,OACLc,KAAK,QACLZ,QAAS9F,KAAKuZ,eACd3U,MAAOb,EAAMwE,aAOrC,mBAAK7F,MAAM,uCACP,sBAAQkD,KAAK,SAASlD,MAAM,uBACxByD,QAASnG,KAAKkZ,UACdhT,UAASnC,EAAMM,IAClB,iBAAG3B,MAAM,+B,EAQxBiX,EADLna,Y,EAAD,cAC+BC,YAC3BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAOnBsN,UAAanN,IACf,MAAM,GAAEuE,EAAF,IAAM6I,GAAQpN,EAAEkF,OAAOuG,QAAQ,OAAOC,SAChC,aAAEP,GAAiBjL,KAAKU,MAC9BuK,EAAa5G,GAAM6I,EACnBlN,KAAKC,SAAS,CAAEgL,kBAXD,KAcnB2O,gBAAmB9Z,IACf,GAA2B,MAAvBA,EAAEkF,OAAO6N,UACT,OAAO,EAEX,MAAM,GAAExO,GAAOvE,EAAEkF,OAAOuG,QAAQ,gBAAgBC,QAC5CnH,GACA2O,gBAAO,YAAW3O,IApBP,KAwBnB8I,UAAYvJ,eAAO9D,GACfA,EAAEsN,iBACFtN,EAAEC,kBACF,MAAM,MAAEgE,GAAU,EAAKpE,OACjB,UAAE0F,EAAF,WAAarB,GAAe,EAAKrE,MAAMsE,QACvC,KAAEqB,GAASD,EACXiI,QAAuBtJ,EAAWmJ,UAAU,CAAEpJ,QAAOuB,SAC3D,EAAKrF,SAAS,CAAEmL,aAAc,EAAGkC,oBA/BlB,KAkCnBlC,aAAgBtL,IACZA,EAAEsN,iBACFtN,EAAEC,kBACFC,KAAKC,SAAS,CAAEmL,aAAc,KAnC9BpL,KAAKU,MAAQ,CACTuK,aAAc,IAqCtBlJ,SACI,MAAM,aAAEkJ,EAAF,aAAgBG,EAAhB,eAA8BkC,GAAmBtN,KAAKU,OACtD,UAAE2E,GAA0BrF,KAAKL,MAAMsE,QACvC,MAAEF,EAAF,UAASiV,EAAT,QAAoBhB,GAAYhY,KAAKL,OACnC2F,KAAMqI,GAAgBtI,GAC9B,SAAEuI,EAAW,MAASD,EAEhB5M,EAAS,GACf,GAAIgD,EAAMhD,OAAQ,CACd,MAAM8N,EAAOC,YAAK/K,EAAMhD,QACxBA,EAAO8D,QAAQgK,GAEnB,MAGMK,EAAc1K,IAAG2R,eAAe,CAClCxP,OAAQ5C,EACRqL,WAAYxB,EACZuF,MAAO,UACL7F,EACN,IAAI/I,EAAO2K,GAAenL,EAAMQ,KAKhC,OAJI6G,IACA7G,EAAOR,EAAMQ,MAGT,mBACJ,mBAAK7B,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAeuB,OAAQjE,KAAKL,MAAMsE,OAAQlD,OAAQA,EAAQsD,GAAIN,EAAMM,GAAI0T,SAAUiB,EAAWhB,QAASA,MAG9G,mBAAKtV,MAAM,YACP,mBAAKA,MAAM,kCAAkCC,MAAQ,IAAEoB,EAAM8V,QAAU,iCAAmC,KACtG,mBAAKxV,GAAG,cAAc8B,QAASnG,KAAK4Z,gBAAiB1T,UAASnC,EAAMM,IAChE,YAAC,IAAD,CAAUoL,SAAUjL,IAAGkL,cAAcnL,EAAMR,EAAMhD,OAAQ6M,GAAW+B,aAAcnL,IAAGoL,uBACpF7L,EAAM6J,WAAaA,GAAY,oBAC1BxC,GAAgB8D,EAAc,mBAC5B,sBAAQtJ,KAAK,SAASlD,MAAM,iCAAiCyD,QAASnG,KAAKoL,cAAc,iBAAG1I,MAAM,eAAlG,KAAmH,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBACjH,mBACF,sBAAQuB,KAAK,SAASlD,MAAM,iCAAiCyD,QAASnG,KAAKmN,WAAW,iBAAGzK,MAAM,eAA/F,IAA+G,YAAC,IAAD,CAAM2B,GAAG,qBAAT,8B,EAWzIyV,EADLta,Y,EAAD,cAC0BC,YACtBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAOnBsN,UAAanN,IACf,MAAM,GAAEuE,EAAF,IAAM6I,GAAQpN,EAAEkF,OAAOuG,QAAQ,OAAOC,SAChC,aAAEP,GAAiBjL,KAAKU,MAC9BuK,EAAa5G,GAAM6I,EACnBlN,KAAKC,SAAS,CAAEgL,kBAXD,KAcnB2O,gBAAmB9Z,IACf,GAA2B,MAAvBA,EAAEkF,OAAO6N,UACT,OAAO,EAEX,MAAM,GAAExO,GAAOvE,EAAEkF,OAAOuG,QAAQ,gBAAgBC,QAC5CnH,GACA2O,gBAAO,YAAW3O,IApBP,KAwBnB8I,UAAYvJ,eAAO9D,GACfA,EAAEsN,iBACFtN,EAAEC,kBACF,MAAM,MAAEgE,GAAU,EAAKpE,OACjB,UAAE0F,EAAF,WAAarB,GAAe,EAAKrE,MAAMsE,QACvC,KAAEqB,GAASD,EACjB,EAAKpF,SAAS,CAAEmL,aAAc,UACxBpH,EAAWmJ,UAAU,CAAEpJ,QAAOuB,UA/BrB,KAkCnB8F,aAAgBtL,IACZA,EAAEsN,iBACFtN,EAAEC,kBACFC,KAAKC,SAAS,CAAEmL,aAAc,KArCf,KAwCnB+K,eAAiB,KACb,MAAM,MAAEpS,GAAU/D,KAAKL,OACjB,UAAE0F,GAA0BrF,KAAKL,MAAMsE,QAErCqB,KAAMqI,GAAgBtI,GAC9B,SAAEuI,EAAW,MAASD,EACCnJ,IAAG2R,eAAe,CACrCxP,OAAQ5C,EACRqL,WAAYxB,EACZuF,MAAO,UAGPnT,KAAKC,SAAS,CAAEmL,aAAc,KAlDlCpL,KAAKU,MAAQ,CACTuK,aAAc,IAqDtB8O,qBACI/Z,KAAKmW,iBAGTpU,SACI,MAAM,aAAEkJ,EAAF,aAAgBG,GAAiBpL,KAAKU,OACtC,UAAE2E,GAA0BrF,KAAKL,MAAMsE,QACvC,MAAEF,EAAF,UAASiV,EAAT,QAAoBhB,GAAYhY,KAAKL,OACnC2F,KAAMqI,GAAgBtI,GAC9B,SAAEuI,EAAW,MAASD,EAEhB5M,EAAS,GACf,GAAIgD,EAAMhD,OAAQ,CACd,MAAM8N,EAAOC,YAAK/K,EAAMhD,QACxBA,EAAO8D,QAAQgK,GAEnB,MAGMK,EAAc1K,IAAG2R,eAAe,CAClCxP,OAAQ5C,EACRqL,WAAYxB,EACZuF,MAAO,SAEX,IAAI5O,EAAO2K,GAAenL,EAAMQ,KAKhC,OAJI6G,IACA7G,EAAOR,EAAMQ,MAGT,mBACJ,mBAAK7B,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAeuB,OAAQjE,KAAKL,MAAMsE,OAAQlD,OAAQA,EAAQsD,GAAIN,EAAMM,GAAI0T,SAAUiB,EAAWhB,QAASA,MAI9G,mBAAKtV,MAAM,YACP,mBAAKA,MAAM,kCAAkCC,MAAQ,IAAEoB,EAAM8V,QAAU,iCAAmC,KAEtG,mBAAKxV,GAAG,cAAc6B,UAASnC,EAAMM,IACjC,YAAC,IAAD,CAAUoL,SAAUjL,IAAGkL,cAAcnL,EAAMR,EAAMhD,OAAQ6M,GAAW+B,aAAcnL,IAAGoL,uBACpF7L,EAAM6J,WAAaA,GAAY,oBAC1BxC,GAAgB8D,EAAc,mBAC5B,sBAAQtJ,KAAK,SAASlD,MAAM,sBAAsByD,QAASnG,KAAKoL,cAAc,iBAAG1I,MAAM,eAAvF,KAAwG,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBACtG,mBACF,sBAAQuB,KAAK,SAASlD,MAAM,sBAAsByD,QAASnG,KAAKmN,WAAW,iBAAGzK,MAAM,eAApF,IAAoG,YAAC,IAAD,CAAM2B,GAAG,qBAAT,2BAKhHN,EAAMsE,KAAOtE,EAAMyE,MAAQzE,EAAMwE,MAAQ,IAAM,mBAC/C,mBAAK7F,MAAM,wBAAwBC,MAAQ,IAAEoB,EAAM8V,QAAU,iCAAmC,KAC5F,mBAAKnX,MAAM,OACNqB,EAAMsE,KAAO,mBACV,mBAAK3F,MAAM,mBAAmBC,MAAM,qBAChC,iBAAG2H,KAAM9F,IAAGwV,MAAMjW,EAAMsE,KAAMrD,OAAO,SAAS2T,IAAI,cAC9C,iBAAGjW,MAAM,qBACRqB,EAAMqE,QAAU,mBACZrE,EAAMqE,SACL,mBACF,YAAC,IAAD,CAAM/D,GAAG,yBAAT,kBAKfN,EAAMyE,MAAQ,mBACX,mBAAK9F,MAAM,gBAAgBC,MAAM,qBAC7B,wBACI,oBAAMD,MAAM,uBAAsB,YAAC,IAAD,CAAM2B,GAAG,0BAAT,gBAAlC,KADJ,IACqGN,EAAMyE,QAIlHzE,EAAMwE,MAAQ,GAAK,mBAChB,mBAAK7F,MAAM,iBAAiBC,MAAM,qBAC9B,wBACKoB,EAAMkW,WAAa,oBAAMvX,MAAM,uBAAuBqB,EAAMuE,UADjE,IACoFjC,IAAKsQ,OAAO5S,EAAMwE,MAAO,e,EAa3I2R,EADL1a,Y,EAAD,cAC+BC,YAC3BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAOnBsN,UAAanN,IACf,MAAM,GAAEuE,EAAF,IAAM6I,GAAQpN,EAAEkF,OAAOuG,QAAQ,OAAOC,SAChC,aAAEP,GAAiBjL,KAAKU,MAC9BuK,EAAa5G,GAAM6I,EACnBlN,KAAKC,SAAS,CAAEgL,kBAXD,KAcnB2O,gBAAmB9Z,IACf,GAA2B,MAAvBA,EAAEkF,OAAO6N,UACT,OAAO,EAEX,MAAM,GAAExO,GAAOvE,EAAEkF,OAAOuG,QAAQ,gBAAgBC,QAC5CnH,GACA2O,gBAAO,YAAW3O,IApBP,KAwBnB8I,UAAYvJ,eAAO9D,GACfA,EAAEsN,iBACFtN,EAAEC,kBACF,MAAM,MAAEgE,GAAU,EAAKpE,OACjB,UAAE0F,EAAF,WAAarB,GAAe,EAAKrE,MAAMsE,QACvC,KAAEqB,GAASD,EACjB,EAAKpF,SAAS,CAAEmL,aAAc,UACxBpH,EAAWmJ,UAAU,CAAEpJ,QAAOuB,UA/BrB,KAkCnB8F,aAAgBtL,IACZA,EAAEsN,iBACFtN,EAAEC,kBACFC,KAAKC,SAAS,CAAEmL,aAAc,KArCf,KAwCnB+K,eAAiB,KACb,MAAM,MAAEpS,GAAU/D,KAAKL,OACjB,UAAE0F,GAA0BrF,KAAKL,MAAMsE,QAErCqB,KAAMqI,GAAgBtI,GAC9B,SAAEuI,EAAW,MAASD,EACCnJ,IAAG2R,eAAe,CACrCxP,OAAQ5C,EACRqL,WAAYxB,EACZuF,MAAO,UAGPnT,KAAKC,SAAS,CAAEmL,aAAc,KAlDlCpL,KAAKU,MAAQ,CACTuK,aAAc,IAqDtB8O,qBACI/Z,KAAKmW,iBAGTpU,SACI,MAAM,aAAEkJ,EAAF,aAAgBG,GAAiBpL,KAAKU,OACtC,UAAE2E,GAA0BrF,KAAKL,MAAMsE,QACvC,MAAEF,EAAF,UAASiV,EAAT,QAAoBhB,GAAYhY,KAAKL,OACnC2F,KAAMqI,GAAgBtI,GAC9B,SAAEuI,EAAW,MAASD,EAEhB5M,EAAS,GACf,GAAIgD,EAAMhD,OAAQ,CACd,MAAM8N,EAAOC,YAAK/K,EAAMhD,QACxBA,EAAO8D,QAAQgK,GAEnB,MAGMK,EAAc1K,IAAG2R,eAAe,CAClCxP,OAAQ5C,EACRqL,WAAYxB,EACZuF,MAAO,SAEX,IAAI5O,EAAO2K,GAAenL,EAAMQ,KAKhC,OAJI6G,IACA7G,EAAOR,EAAMQ,MAGT,mBAEJ,mBAAK7B,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAeuB,OAAQjE,KAAKL,MAAMsE,OAAQlD,OAAQA,EAAQsD,GAAIN,EAAMM,GAAI0T,SAAUiB,EAAWhB,QAASA,MAI9G,mBAAKtV,MAAM,YACP,mBAAKA,MAAM,kCAAkCC,MAAQ,IAAEoB,EAAM8V,QAAU,iCAAmC,KACtG,mBAAKxV,GAAG,cAAc8B,QAASnG,KAAK4Z,gBAAiB1T,UAASnC,EAAMM,IAChE,YAAC,IAAD,CAAUoL,SAAUjL,IAAGkL,cAAcnL,EAAMR,EAAMhD,OAAQ6M,GAAW+B,aAAcnL,IAAGoL,uBACpF7L,EAAM6J,WAAaA,GAAY,oBAC1BxC,GAAgB8D,EAAc,mBAC5B,sBAAQtJ,KAAK,SAASlD,MAAM,sBAAsByD,QAASnG,KAAKoL,cAAc,iBAAG1I,MAAM,eAAvF,KAAwG,YAAC,IAAD,CAAM2B,GAAG,gCAAT,mBACtG,mBACF,sBAAQuB,KAAK,SAASlD,MAAM,sBAAsByD,QAASnG,KAAKmN,WAAW,iBAAGzK,MAAM,eAApF,IAAoG,YAAC,IAAD,CAAM2B,GAAG,qBAAT,2BAKhHN,EAAMsE,KAAOtE,EAAMyE,MAAQzE,EAAMwE,QAAU,mBAC3C,mBAAK7F,MAAM,wBAAwBC,MAAQ,IAAEoB,EAAM8V,QAAU,iCAAmC,KAC5F,mBAAKnX,MAAM,OACNqB,EAAMsE,KAAO,mBACV,mBAAK3F,MAAM,mBAAmBC,MAAM,qBAChC,iBAAG2H,KAAM9F,IAAGwV,MAAMjW,EAAMsE,KAAMrD,OAAO,SAAS2T,IAAI,cAC9C,iBAAGjW,MAAM,qBACRqB,EAAMqE,QAAU,mBACZrE,EAAMqE,SACL,mBACF,YAAC,IAAD,CAAM/D,GAAG,yBAAT,2B,EAgBtCsG,EADLnL,Y,EAAD,cAC8BC,YAC1BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YASnB0R,WAAcvR,IACVA,EAAEC,kBACFD,EAAEsN,iBACF,MAAM,SAAEkE,GAAatR,KAAKU,MAC1BV,KAAKC,SAAS,CAAEqR,UAAWA,KAbZ,KAgBtB0H,UAAYpV,iBACL,MAAM,MAAEG,GAAU,EAAKpE,OACjB,GAAE0E,GAAON,EACToW,EAAU9V,GAChB,WAAEL,GAAe,EAAKrE,MAAMsE,QAEtB,UAAE+U,GAAc,EAAKtY,MAC3BsY,EAAUmB,IAAW,EACrB,MAAMC,EAAUC,OAAOC,KAAKtB,GAC5B,EAAK/Y,SAAS,CAAE+Y,YAAWoB,YAC3BlV,WAAW,KACP,MAAM,UAAE8T,GAAc,EAAKtY,aACpBsY,EAAUmB,GACjB,MAAMC,EAAUC,OAAOC,KAAKtB,GAC5B,EAAK/Y,SAAS,CAAE+Y,YAAWoB,aAC5B,YAEcpW,EAAWgV,UAAU,CAAE3U,GAAI8V,KAjC7B,KAsCtB3H,iBAAoB1S,IACnB,MAAMqa,EAAUra,EAAEkF,OAAOuG,QAAQ,UAAUC,QAAQnH,IAC7C,eAAE0G,GAAmB/K,KAAKU,MACtBqK,EAAeoP,UACRpP,EAAeoP,GAEtBpP,EAAeoP,IAAW,EAEpCna,KAAKC,SAAS,CACb8K,kBACE,KACE/K,KAAKoF,SAAS+U,IACjBna,KAAKoF,SAAS+U,GAASrO,WAlDJ,KAuDnByO,oBAAsB,KAClBva,KAAKC,SAAS,CACnB8K,eAAgB,MAzDI,KA6DtByP,sBAAyB1a,IACxB,MAAMqa,EAAUra,EAAEkF,OAAOuG,QAAQ,UAAUC,QAAQnH,IAC7C,gBAAE0U,GAAoB/Y,KAAKU,MACvBqY,EAAgBoB,UACTpB,EAAgBoB,GAEvBpB,EAAgBoB,IAAW,EAErCna,KAAKC,SAAS,CACb8Y,qBAtEoB,KA0EnB9L,UAAanN,IACf,MAAM,GAAEuE,EAAF,IAAM6I,GAAQpN,EAAEkF,OAAOuG,QAAQ,OAAOC,SAChC,aAAEP,GAAiBjL,KAAKU,MAC9BuK,EAAa5G,GAAM6I,EACnBlN,KAAKC,SAAS,CAAEgL,kBA9ED,KAuFnBgB,WAAcnM,IACV,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,KAAKC,SACrC,SAAEU,EAAW,IAAOlM,KAAKU,MACzBwL,EAAS7H,IAAO6H,EAAS7H,GAC/BrE,KAAKC,SAAS,CACJwa,gBAAiB,GACjBrO,SAAU,GACnBF,cA9FoB,KAkGnBG,WAAcvM,IACV,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,UAAUC,SAC1C,SAAEY,EAAW,IAAOpM,KAAKU,MACzB0L,EAAS/H,IAAO+H,EAAS/H,GAC/BrE,KAAKC,SAAS,CACJwa,gBAAiB,GAC1BrO,WACSF,SAAU,MAzGC,KA6GnBwO,kBAAqB5a,IACjB,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,UAAUC,SAC1C,gBAAEiP,EAAkB,IAAOza,KAAKU,MAChC+Z,EAAgBpW,IAAOoW,EAAgBpW,GAC7CrE,KAAKC,SAAS,CACbwa,kBACSrO,SAAU,GACVF,SAAU,MApHC,KAwHnByO,YAAc/W,eAAO9D,GACjB,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,UAAUC,SACpC,WAAExH,GAAe,EAAKrE,MAAMsE,aAC5BD,EAAW2W,YAAY,CAAEtW,OAC/B,EAAKpE,SAAS,CACVmM,SAAU,GACVF,SAAU,MA9HC,KAkInB0O,iBAAmBhX,eAAO9D,GACtB,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,UAAUC,SACpC,WAAExH,GAAe,EAAKrE,MAAMsE,aAC5BD,EAAW6W,eAAe,CAAExW,OAClC,EAAKpE,SAAS,CACVmM,SAAU,GACVF,SAAU,MAxIC,KA4InB4O,YAAclX,eAAO9D,GACjB,MAAM,GAAEuE,GAAOvE,EAAEkF,OAAOuG,QAAQ,UAAUC,SACpC,WAAExH,GAAe,EAAKrE,MAAMsE,aAC5BD,EAAWoV,UAAUjP,SAAS9F,EAAI,IAAK,UAAW,GAAG,GAC3DL,EAAWqV,iBAAiBlP,SAAS9F,EAAI,IAAK,UAAW,GACzD,EAAKpE,SAAS,CACVkZ,UAAW,GACpBsB,gBAAiB,GACRrO,SAAU,GACVF,SAAU,MArJC,KAyJnB6O,SAAW,KACP/a,KAAKC,SAAS,CACVkZ,UAAW,GACpBsB,gBAAiB,GACRrO,SAAU,GACVF,SAAU,MA9JC,KAkKnB0N,gBAAmB9Z,IACf,GAA2B,MAAvBA,EAAEkF,OAAO6N,UACT,OAAO,EAEX,MAAM,GAAExO,GAAOvE,EAAEkF,OAAOuG,QAAQ,gBAAgBC,QAC5CnH,GACA2O,gBAAO,YAAW3O,IAxKP,KA4KnBoO,UAAa3S,IACT,MAAM,IAAEuI,EAAF,MAAOJ,EAAP,KAAcyK,GAAS5S,EAAEkF,OAAOuG,QAAQ,UAAUC,SAClD,SAAE5B,GAAa5J,KAAKL,MAAMsE,OAChC2F,EAAS+I,SAAS,CAAEtK,MAAKJ,QAAOyK,UA7KhC1S,KAAKU,M,+VAAL,IACO2G,GAEbrH,KAAKoF,SAAW,GA4Ed,4BAA4BzF,EAAQK,KAAKL,OACrC,MAAM,QAAEqb,GAAYrb,GACpB,WAAEqE,GAAerE,EAAMsE,aACvBD,EAAW6E,eAAe,CAAEmS,YA8GhCjZ,SACI,MAAM,eAAEgJ,EAAF,SAAkBuG,EAAlB,SAA0CpF,EAAW,GAArD,SAAyDE,EAAW,GAApE,gBAAwEqO,EAAkB,GAA1F,gBAA8F1B,EAA9F,UAA+GC,EAA/G,QAA0HoB,GAAYpa,KAAKU,OAC3I,MAAEqD,EAAF,gBAAS+G,EAAT,YAAqCwI,EAAc,SAAnD,YAA6DC,EAAc,UAAavT,KAAKL,OAC7F,UAAE0F,EAAF,WAAarB,EAAb,SAAyB4F,GAAa5J,KAAKL,MAAMsE,QAC/CqB,KAAMqI,EAAc,GAAtB,QAA0B9D,GAAYxE,GACtC,YAAYoO,GAAgB7J,EAE5B/B,EAAO7D,EAAW4P,eAAe7P,EAAM8D,OAAS,GAChDvC,EAAOtB,EAAW6P,eAAe9P,EAAMuB,OAAS,GAChDP,EAAQP,IAAG+P,SAAS,CAAEjP,OAAMuC,OAAM2M,SAAU,OAAQ7N,OAAQ5C,IAE5DoQ,KAAetM,IAAQA,EAAKuM,UAAWvM,EAAKuM,QAAQC,KAAKC,GAAKA,IAAM3G,EAAYtJ,IAEtF,IAAIiR,EACA5O,EACA6O,EACAC,EACA3N,GAAQA,EAAKnB,MACb4O,EAAY9Q,IAAGe,iBAAiBsC,GAChCnB,EAAOlC,IAAGiB,YAAYoC,GACtB0N,EAAW/Q,IAAGiB,YAAYH,GACtBA,EAAKmQ,UAAY9H,EAAY2B,SAAWhK,EAAKgK,SAC7CkG,EAAWlQ,EAAKmQ,SAASC,YAAc,KAAQ,UAASpQ,EAAKgK,SAE1DhK,GAAQA,EAAKjB,KACpBiR,EAAY9Q,IAAGe,iBAAiBD,GAChCoB,EAAOlC,IAAGiB,YAAYH,IAE1B,MAAM,MAAEkJ,EAAF,SAASP,EAAT,QAAmBgN,EAAU,IAAOlX,EACpCmX,EAAgBnX,EAAMyK,OAASzK,EAAMyK,MAAMC,UAAU3O,GAAKA,EAAEwF,OAASqI,EAAYtJ,KAAO,EACxFqQ,EAAiB7M,EAAK8M,UAAY9M,EAAK8M,UAAUvT,OAAS,EAE1DwT,EAAa/M,EAAKuM,SAAWvM,EAAKuM,QAAQS,QAAQlH,EAAYtJ,KAAO,EACrEyQ,EAAcjN,EAAK8M,WAAa9M,EAAK8M,UAAUE,QAAQlH,EAAYtJ,KAAO,EAC1E0Q,EAAqBlN,EAAKmN,gBAAkBnN,EAAKmN,eAAevG,UAAU3O,GAAKA,EAAEuE,KAAOsJ,EAAYtJ,KAAO,GAE3G,uBAAE4K,EAAyB,GAA3B,UAA+B2G,EAAY,IAAO7R,EAClD8R,EAAQrR,IAAGsR,SAAS/R,EAAMgS,YAC1BC,EAAYxR,IAAGyR,aAAalS,EAAMgS,YAExC,OAAQ,mBAaMlM,GAAY8D,EAAYtJ,KAAOiB,EAAKjB,GAAO,mBACzC,oBAAM3B,MAAM,8CACR,iBAAGA,MAAM,oBAAoByD,QAASnG,KAAKiM,WAAY/F,UAASnC,EAAMM,OAExE,oBACAuQ,IAAeE,IAAgBC,GAAsBlN,EAAKM,OAAS,GAAK,oBAAMzF,MAAM,eAClF,YAAC,IAAD,CAAYuB,OAAQjE,KAAKL,MAAMsE,OAAQ4D,KAAMA,EAAM2Q,YAAY,EAAM2C,QAAQ,EAAMC,WAAY,gCAGtGlP,EAASnI,EAAMM,KAAO,mBACnB,mBAAK3B,MAAM,qEAAqEC,MAAM,wDACjFgL,EAAYtJ,KAAOiB,EAAKjB,GAAK,mBAC1B,sBAAQ3B,MAAM,mCAAmCyD,QAASnG,KAAKqM,WAAYnG,UAASnC,EAAMM,IAAI,iBAAG3B,MAAM,gBAAvG,SACA,uBACA,sBAAQA,MAAM,+CAA+CyD,QAASnG,KAAK0a,kBAAmBxU,UAASnC,EAAMM,IAAI,iBAAG3B,MAAM,qBAA1H,YACE,mBACF,sBAAQA,MAAM,mCAAmCyD,QAASnG,KAAK2a,YAAazU,UAASnC,EAAMM,IAAI,iBAAG3B,MAAM,gBAAxG,WACCmH,GAAW,mBACR,uBACA,sBAAQnH,MAAM,+CAA+CyD,QAASnG,KAAK4a,iBAAkB1U,UAASnC,EAAMM,IACxG,iBAAG3B,MAAM,kBADb,yBAQhB,mBAAKA,MAAM,4BACP,mBACIA,MAAQ,sFACRC,MAAOoC,EAAS,0BAAyBA,+BAAqC,KAE5EA,GAAS,mBAAKrC,MAAM,aAAaC,MAAM,sCAAsC2S,IAEnF,mBAAK5S,MAAM,iCAAiCC,MAAM,uBAC9C,kBAAID,MAAM,yBAAyBC,MAAQ,wBAAsBoB,EAAM8V,QAAU,iCAAmC,KAC/GhS,EAAKM,OAAS,mBACX,iBAAGmC,KAAO,iBAAgBzC,EAAKyH,OAAUnJ,QAAUrG,GAAMwT,EAAYxT,EAAG+H,EAAKyH,QAAS5M,MAAM,kBAAkBgE,IAE5G,mBACDA,GAGJkO,IAAe/M,EAAKM,QAAU,sBAAQvC,KAAK,SAASlD,MAAM,iCACvDwD,UAASnC,EAAMM,GACf8B,QAASnG,KAAKwa,uBAEd,iBAAG9X,MAAM,kCAIjB,mBAAKA,MAAM,OAAOC,MAAQ,IAAEoB,EAAM8V,QAAU,iCAAmC,KAC1E9V,EAAMmE,QAAU,mBACb,qBAAOxF,MAAM,mBACT,iBAAGA,MAAM,uBAGD,IAAfqB,EAAM6B,KAAa,mBAChB,qBAAOlD,MAAM,cAAa,YAAC,IAAD,CAAM2B,GAAG,mBAAT,aAA1B,OACE,mBACDN,EAAMuS,MAAQ,qBAAO5T,MAAM,aAAayD,QAASnG,KAAKqR,YAClDC,EAAWjL,IAAKkQ,WAAWxS,EAAMuS,KAAM,CAAEpG,OAAQ,QAASsG,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAAerQ,IAAK2J,eAAejM,EAAMuS,KAAM,IAAInR,KAAQ,CAAE+K,OAAQ,YAG9J,IAAjBnM,EAAMoE,OAAe,mBAClB,qBAAOzF,MAAM,mBACT,iBAAGA,MAAM,0BAEX,mBACF,qBAAOA,MAAM,mBACT,iBAAGA,MAAM,iBADb,KACiC2D,IAAKsQ,OAAOjC,GAD7C,MAIHa,GAAY,mBACT,qBAAO7S,MAAM,mBACR8S,EAAW,mBACR,iBAAG9S,MAAM,gBADD,IACkB,iBAAG4H,KAAMkL,GAAWD,IAC5C,mBACF,iBAAG7S,MAAM,gBADP,IACyB6S,KAItCtG,GAA0BA,EAAuB+H,iBAAmB,mBACjE,qBAAOtU,MAAM,mBACT,iBAAGA,MAAM,0BADb,IACyCuM,EAAuB+H,mBAIvEnN,GAAW,mBACRnH,MAAM,qEACNC,MAAM,mBAEN,qBAAOD,MAAM,mBAAb,QACCuY,GAAWA,EAAQ7Z,OAAS,GAAK,mBAC9B,qBAAOsB,MAAM,oBACT,iBAAGA,MAAM,gBADb,IAC+BuY,EAAQ7Z,SAG1C6N,GAA0BA,EAAuBkI,mBAAqB,mBACnE,qBAAOzU,MAAM,cACT,iBAAGA,MAAM,0BADb,IACyCuM,EAAuBkI,oBAGnE7R,EAAK8R,YAAc,mBAChB,oBAAM1U,MAAM,4DACP,CAAC,WAAY,eAAgB,SAASlB,IAAI1B,GAAK,mBAC5C,oBAAM4C,MAAM,mBACP4C,EAAK8R,WAAWtX,QAMhCkW,GAAa,mBACV,qBAAOtT,MAAM,mBAAb,MACQsT,EAAUqB,OAElB,qBAAO3U,MAAM,mBAAb,MACQsT,EAAUsB,QADlB,IAC4BjR,IAAKkR,SAASvB,EAAUwB,eAAiB,mBAAE,iBAAG9U,MAAO8B,IAAGiT,iBAAiBzB,EAAUwB,kBAE/G,qBAAO9U,MAAM,mBAAb,MACQ2D,IAAKsQ,OAAOX,EAAU0B,YAAc,IAAM,GADlD,KACwDrR,IAAKkR,SAASvB,EAAU2B,mBAAqB,mBAAE,iBAAGjV,MAAO8B,IAAGiT,iBAAiBzB,EAAU2B,sBAE9I5T,EAAM6T,mBAAqB7T,EAAM6T,kBAAkBC,kBAAoB,GAAK,qBAAOnV,MAAM,mBAAb,MACrE2D,IAAKsQ,OAAO5S,EAAM6T,kBAAkBC,kBAAmB,IAE9D9T,EAAM+T,YAAc/T,EAAM+T,WAAWtW,IAAIsG,GAAO,mBAC7C,oBAAMpF,MAAM,4DAA4DoF,SAc5F,mBAAKpF,MAAM,YACP,mBAAKA,MAAM,kBAAkBC,MAAQ,IAAEoB,EAAM8V,QAAU,iCAAmC,KACrFzN,EAASrI,EAAMM,KAAO,mBACnB,YAAC4U,EAAD,CACIhV,OAAQjE,KAAKL,MAAMsE,OACnBF,MAAOA,EACPwJ,IAAM,cAAaxJ,EAAMM,GACzBR,SAAU7D,KAAK+a,YAGtBN,EAAgB1W,EAAMM,KAAO,mBAAK3B,MAAM,sBACrC,sBAAQA,MAAM,4BAA4ByD,QAASnG,KAAK8a,YAAa5U,UAASnC,EAAMM,IAAI,iBAAG3B,MAAM,qBAAjG,WACA,sBAAQA,MAAM,gCAAgCyD,QAASnG,KAAK0a,kBAAmBxU,UAASnC,EAAMM,IAAI,iBAAG3B,MAAM,wBAA3G,gBAKTqB,EAAM6B,MAAsB,GAAd7B,EAAM6B,OAAc,YAAC+T,EAAD,CAAkB1V,OAAQjE,KAAKL,MAAMsE,OAAQF,MAAOA,EAAOwJ,IAAM,sBAAqBxJ,EAAMM,GAAM2U,UAAWhZ,KAAKgZ,UAAWhB,QAASgB,EAAWsB,KAAMF,IAC7K,GAAdrW,EAAM6B,MAAa,YAACkU,EAAD,CAAa7V,OAAQjE,KAAKL,MAAMsE,OAAQF,MAAOA,EAAOwJ,IAAM,iBAAgBxJ,EAAMM,GAAM2U,UAAWhZ,KAAKgZ,UAAWhB,QAASgB,EAAWsB,KAAMF,IAClJ,GAAdrW,EAAM6B,MAAa,YAACsU,EAAD,CAAkBjW,OAAQjE,KAAKL,MAAMsE,OAAQF,MAAOA,EAAOwJ,IAAM,sBAAqBxJ,EAAMM,GAAM2U,UAAWhZ,KAAKgZ,UAAWhB,QAASgB,EAAWsB,KAAMF,IAE3K,mBAAK1X,MAAM,uCACP,mBAAKA,MAAM,QACP,YAAC,IAAD,CACIuB,OAAQjE,KAAKL,MAAMsE,OACnBuK,MAAOA,EACPP,SAAUA,EACVrI,KAAK,QACL0N,YAAaA,EACbC,YAAaA,KAGpBsC,EAAQ,GAAK,mBACV,uBACI,YAAC,IAAD,CACI5R,OAAQjE,KAAKL,MAAMsE,OACnB4R,MAAOA,EACPlP,OAAQ5C,EACR6B,KAAK,QACLuO,YAAaA,EACbtK,QAASA,EACTyJ,YAAaA,EACbC,YAAaA,OAM5BwF,EAAgBhV,EAAMM,KAAO,mBAC1B,yBACI,mBAAK3B,MAAM,mBAAmB2Y,KAAK,SAC/B,oBAAM3Y,MAAM,wBACR,iBAAGA,MAAM,2CAEb,qBACI,YAAC,IAAD,CAAM2B,GAAG,sBAAT,yFAEJ,qBACI,YAAC,IAAD,CAAMA,GAAG,sBAAT,mHAEJ,qBACI,iBAAGiG,KAAO,eAAczC,EAAKxD,IAAM,YAAC,IAAD,CAAMA,GAAG,sBAAT,kBAMnD,uBACI,mBAAK3B,MAAM,OACP,mBAAKA,MAAM,mBACP,sBACIkD,KAAK,SACLlD,MAAQ,qCAAoCwY,EAAgB,UAAY,gCAAgCA,EAAgB,eAAiB,mBACzIhV,UAASnC,EAAMM,GACf8B,QAASnG,KAAKgZ,WAEd,iBAAGtW,OAAUwY,EAAgB,mBAAqB,OAAvC,kBANf,IAMgFA,EAAgB,YAAC,IAAD,CAAM7W,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,SAGjJ,mBAAK3B,MAAM,mBACP,sBACIkD,KAAK,SACLlD,MAAM,kEACNwD,UAASnC,EAAMM,GACf8B,QAASnG,KAAKwS,kBAEd,iBAAG9P,MAAM,mBANb,IAMiC,YAAC,IAAD,CAAM2B,GAAG,wBAAT,eAGpCoP,EAAc,mBACX,mBAAK/Q,MAAM,mBACP,sBAAQA,MAAM,kEACVyD,QAASnG,KAAKyS,UACdgG,WAAW,qCAAoC1U,EAAMuL,OACrDoJ,aAAa,UAAS3U,EAAMkE,OAE5B,iBAAGvF,MAAM,iBALb,IAK+B,YAAC,IAAD,CAAM2B,GAAG,eAAT,UAGjC,mBACF,mBAAK3B,MAAM,mBACP,iBAAGA,MAAM,kEACL4H,KAAO,qCAAoCvG,EAAMuL,OACjDtK,OAAO,SACP2T,IAAI,aACJC,eAAA,GAEA,iBAAGlW,MAAM,iBANb,IAM+B,YAAC,IAAD,CAAM2B,GAAG,eAAT,YAQ/C,mBAAK3B,MAAM,QACP,YAAC,IAAD,CACIuB,OAAQjE,KAAKL,MAAMsE,OACnBF,MAAOA,EACP2F,IAAI,KACJC,OAAO,IACP+D,SAAS,EACT5C,gBAAiBA,EACjB1D,SAAUpH,KAAKua,sBAElBxP,EAAehH,EAAMM,KAAO,YAAC,IAAD,CACzBJ,OAAQjE,KAAKL,MAAMsE,OACnBF,MAAOA,EACPqB,SAAUjC,GAAKnD,KAAKoF,SAASrB,EAAMM,IAAMlB,EACzCW,eAAgB9D,KAAKoF,SACrBsE,IAAI,KACJC,OAAO,IACP4D,IAAM,iBAAgBxJ,EAAMM,W,EAWzCsG,Q,ieC7mCf,MAAMtD,EAAe,CACpBiU,YAAa,I,IAIRC,EADL/b,Y,EAAD,cACoBC,YAChBC,YAAYC,GACRC,MAAMD,GADS,KActB6b,kBAAqB1b,IACd,MAAM,UAAE+R,EAAF,UAAaxM,GAAcrF,KAAKL,MAAMsE,QACtC,KAAEqB,GAASD,GACX,KAAEwC,GAAS/H,EAAEkF,OAAOuG,QAAQ,UAAUC,QAC5CqG,EAAU4J,cAActR,SAAStC,EAAM,IAAKvC,GAClD,MAAM,YAAEgW,GAAgBtb,KAAKU,MAC7B4a,EAAYzT,IAAQ,EACd7H,KAAKC,SAAS,CAAEqb,iBArBD,KAwBnBI,UAAa7T,IACT,MAAM,YAAEyT,GAAgBtb,KAAKU,OACvB,UAAE2E,GAAcrF,KAAKL,MAAMsE,QAC3B,KAAEqB,GAASD,EACXuP,EAAa/M,EAAKuM,SAAWvM,EAAKuM,QAAQ3F,UAAU3O,GAAKA,EAAEuE,KAAOiB,EAAKjB,KAAO,EAC9EyQ,EAAcjN,EAAK8M,WAAa9M,EAAK8M,UAAUE,QAAQvP,EAAKjB,KAAO,EACnEsX,EAAY9T,EAAK+T,kBAAoB/T,EAAK+T,iBAAiB/G,QAAQvP,EAAKjB,KAAO,EAC/E0Q,EAAqBuG,EAAYzT,EAAKxD,KAAOwD,EAAKmN,gBAAkBnN,EAAKmN,eAAevG,UAAU3O,GAAKA,EAAEuE,KAAOiB,EAAKjB,KAAO,EAElI,OAAIuQ,EAEI,iBAAGlS,MAAM,gBAGboS,EAEI,sBACIpS,MAAQ,yDACRyD,QAASnG,KAAK6b,aACdzV,SAAS,OACT0V,YAAWjU,EAAKxD,IAEhB,iBAAG3B,MAAM,qBACT,YAAC,IAAD,CAAM2B,GAAG,8BAAT,WAIRsX,EAEI,sBACIjZ,MAAQ,yDACR0D,SAAS,QAET,iBAAG1D,MAAM,2BACT,YAAC,IAAD,CAAM2B,GAAG,4BAAT,aAIR0Q,EAEI,sBACIrS,MAAQ,yDACR0D,SAAS,QAET,iBAAG1D,MAAM,+BACT,YAAC,IAAD,CAAM2B,GAAG,+BAAT,0BAKR,sBACI3B,MAAQ,uDACRyD,QAASnG,KAAKwb,kBACdM,YAAWjU,EAAKxD,IAEhB,iBAAG3B,MAAM,iCACT,YAAC,IAAD,CAAM2B,GAAG,wBAAT,UA9ERrE,KAAKU,M,+VAAL,IACO2G,GAId,kBACCrH,KAAKC,SAAS,CAAE8b,WAAW,IAC3B,MAAM,UAAElK,GAAc7R,KAAKL,MAAMsE,aAC3B4N,EAAUmK,WAAW,CAAEC,MAAO,CAAEC,aAAc,EAAGC,MAAO,GAAKpL,MAAO,KAC1E/Q,KAAKC,SAAS,CAAE8b,WAAW,IA0E5B5U,oBACCnH,KAAKoc,YAGNra,SACC,MAAM,UAAE8P,EAAF,SAAajI,GAAa5J,KAAKL,MAAMsE,QACrC,oBAAEoY,GAAwBxK,GACpB,SAAExH,GAAaT,EAC3B,OAAKyS,GAAsD,IAA/BA,EAAoBjb,OAK/C,mBAAKsB,MAAM,qBACE,mBAAKA,MAAQ,sGAAqG2H,EAAW,QAAU,qBAClJ,mBAAK3H,MAAM,mBACV,mBAAKA,MAAM,OACV,mBAAKA,MAAM,UACV,sBAAI,YAAC,IAAD,CAAM2B,GAAG,iCAAT,qBAAJ,OAGF,mBAAK3B,MAAM,OACV,mBAAKA,MAAM,8BAA8BC,MAAM,mBAC7C0D,IAAKC,QAAQ+V,IAAwBA,EAAoB7a,IAAKqG,IAC9D,MAAM9C,EAAQ8C,EAAK9C,OAAS8C,EAAK9C,MAAMW,YAAcmC,EAAK9C,MAAQ,KAClE,OACC,mBAAKrC,MAAM,OAAOC,MAAM,iBACvB,mBACCD,MAAQ,gCACRC,MAAOoC,EAAS,0BAAyBA,EAAMW,sEAAwE,iCAErHX,GAAS,iBAAGrC,MAAM,+BAA+BC,MAAM,sBAE1D,yBACC,mBAAKD,MAAM,iBACV,0BAASmF,EAAKnB,OAEf,mBAAKhE,MAAM,iBACTmF,EAAKyU,MAAWzU,EAAKyU,MAAP,KAAmB,GADnC,IACwCzU,EAAKY,QAD7C,MAGA,mBAAK/F,MAAM,iBACV,qBAAOA,MAAM,cACXmF,GAAQA,EAAK+O,MAAQ,oBAAMlU,MAAM,IAAG,iBAAGA,MAAM,eAAxB,IAAyCmF,EAAK+O,KAAKxV,QACxEyG,GAAQA,EAAK8M,WAAa,oBAAMjS,MAAM,QAAO,iBAAGA,MAAM,gBAA5B,IAA8CmF,EAAK8M,UAAUvT,WAI3F,uBACEpB,KAAK0b,UAAU7T,YAvClB,O,EAqDK0T,O,wGC1JTgB,EADL/c,Y,EAAD,cAC0BC,YACtBC,YAAYC,GACRC,MAAMD,GADS,KAOnB6c,aAAgB1c,IACZ,MAEM,WAAE2c,EAAF,YAA2BC,GAAgB5c,EAAEkF,OAE7C+J,EAAW0N,EADCC,EAIZC,EAAaxO,KAAKyO,MAAM7N,GACxB8N,EAAO1O,KAAK2O,IAAIH,EAAa5N,IAE/BgO,OAAOC,UAAUjO,IAAa8N,EAAO,KACrC7c,KAAKC,SAAS,CACV8O,SAAU4N,KApBH,KAyBnBM,WAAa,CAACC,EAAGC,KACb,MAAM,QAAElF,EAAU,IAAOjY,KAAKL,MACxByd,EAAOnF,EAAQoF,KAAKvd,GAAKA,EAAEuE,KAAO6Y,GAClCI,EAAOrF,EAAQoF,KAAKvd,GAAKA,EAAEuE,KAAO8Y,GACxC,OAAIC,GAAQE,GACJF,EAAK1W,KAAO4W,EAAK5W,KACV,GAGP,GAhCR1G,KAAKU,MAAQ,CACTqO,SAAU,GAkClBhN,SACI,MACM,KAAE6U,EAAF,QAAQqB,EAAU,GAAlB,KAAsBsF,EAAO,SAA7B,WAAuC/J,EAAa,UAAaxT,KAAKL,MAE5E,OACI,mBAAK+C,MAAM,SACP,mBACIA,MAAM,2CACNC,MAAM,iDACN6a,SAAUxd,KAAKwc,cAEd5F,GAAQA,EAAK6G,KAAKzd,KAAKid,YAAYzb,IAAKkc,IACrC,MAAMC,EAAM1F,EAAQoF,KAAKvd,GAAKA,EAAEuE,KAAOqZ,GACvC,OAAKC,EAID,mBAAKjb,MAAM,2CACP,mBACIA,MAAQ,qGACRC,MAAQ,gKAIRC,aAAe9C,IAAQA,EAAEC,mBACzB8C,WAAa/C,IAAQA,EAAEC,mBACvB+C,YAAchD,IAAQA,EAAEC,oBAExB,YAAC,IAAD,CACIkE,OAAQjE,KAAKL,MAAMsE,OACnB0Z,IAAKA,EACL/G,KAAMqB,EAAQ1I,OAAOqO,GAAKhH,EAAK/B,QAAQ+I,EAAEvZ,KAAO,GAAGoZ,KAAK,CAACP,EAAGC,IAAMD,EAAExW,KAAOyW,EAAEzW,KAAO,GAAK,GACzFmX,UAAU,UACVC,UAAU,EACVC,cAAc,EACdR,KAAMA,EACN/J,WAAYA,MAtBjB,W,EAmCpB+I,O,qcCxFf,MAAMlV,EAAe,CACpB0D,gBAAgB,G,IASXiT,EANLC,YAAS,KAAM,CACZC,QAAS,YAAC,IAAD,CAAM7Z,GAAG,cAAT,sBACTE,KAAM,YAAC,IAAD,CAAMF,GAAG,WAAT,mE,GAGT7E,Y,EALD,cAMiBC,YACbC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAkDnBwe,SAAWva,iBACP,MAAM,QAAEwa,EAAF,UAAW/Y,GAAc,EAAK1F,MAAMsE,QACpC,IAAEoa,EAAM,IAAOD,EACrB,IAAI/Z,EAAKga,EAAIjd,OAAS,EAAIid,EAAI,GAAGha,GAAK,KACtC,MAAM,KAAEiB,EAAO,IAAOD,QAChB+Y,EAAQD,SAAS,CAAE9Z,KAAIiB,KAAMA,EAAKjB,MArDxCrE,KAAKU,M,+VAAL,IACO2G,GAEPrH,KAAKyZ,YAAc,GACzBzZ,KAAKoF,SAAW,GACVpF,KAAKse,UAAYjY,IAAKkY,eAG7B,aAAa5e,EAAQK,KAAKL,OACzBK,KAAKC,SAAS,CAAE8b,WAAW,IAC3B,MAAM,QAAEqC,EAAF,aAAW5M,EAAX,UAAyBnM,EAAzB,SAAoCuE,GAAa5J,KAAKL,MAAMsE,QACtD,QAAEua,GAAYxe,KAAKL,OACjB8e,KAAMpW,EAAM,IAAOuB,GACrB,YAAE8U,GAAgBlN,GAClB,KAAElM,GAASD,GACX,SAAEuI,EAAW,MAAStI,EAC5B,IACI0O,EACApO,EACA+Y,EACArC,EACA7T,EALAZ,EAAO,GAMP6W,IACA7W,EAAOxC,EAAU+E,SAASsU,GAAa,GACnC7W,GAAQA,EAAKxD,KACb2P,EAAY3O,EAAUyO,iBAAiB,CAAEC,SAAUlM,EAAKmM,UAAWpG,aACnEhI,EAAOP,EAAU6O,aAAa,CAAEtO,KAAMiC,EAAKjC,KAAMgI,aACjD+Q,EAAa9W,EAAK8W,WAClBrC,EAAQzU,EAAKyU,MACb7T,EAAUZ,EAAKY,UAKvB,IAAImW,EAAOvW,EAAIwW,QAAQ,OAAQ,UAC/BD,EAAOvW,EAAIwW,QAAQ,QAAS,iBAQ5BT,EAAQU,KAAK,CAAE7C,MAAO,CAAE2C,OAAMJ,aAC9BJ,EAAQW,UACd/e,KAAKC,SAAS,CAAE8b,WAAW,IAW5B5U,oBACCnH,KAAKgf,SAGHpd,0BAA0BC,GAElBA,EAAU4c,OAASze,KAAKL,MAAM8e,MAC9Bze,KAAKgf,OAAOnd,GAIpBE,SACI,MAAM,QAAEqc,EAAF,UAAW/Y,EAAX,SAAsBuE,GAAa5J,KAAKL,MAAMsE,QAC9C,QAAEia,EAAF,KAAW3Z,EAAX,QAAiBia,GAAYxe,KAAKL,OAClC,KAAE8e,GAAS7U,GACX,KAAEtE,EAAO,IAAOD,GAChB,IAAEgZ,EAAM,GAAR,KAAYY,GAA4Bb,EAC9C,IAAK9Y,IAASA,EAAKjB,KAAOga,GAAsB,IAAfA,EAAIjd,OACjC,OAAIqd,EAAKS,MAAM,aACJ,mBACH,mBAAKxc,MAAM,SACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,2EACP,mBAAKA,MAAM,8BACP,oBAAMA,MAAM,sCACR,iBAAGA,MAAM,uBAEb,sBAAI,YAAC,IAAD,CAAM2B,GAAG,cAAT,0BACJ,uBAAK,YAAC,IAAD,CAAMA,GAAG,aAAT,2BACL,YAAC,IAAD,KACI,iBAAGiG,KAAO,oCAAmC4T,MAAYO,MAASD,UAAgBja,IAAQS,OAAO,SAAS2T,IAAI,cAC1G,iBAAGjW,MAAM,uBADb,IACqC,YAAC,IAAD,CAAM2B,GAAG,eAAT,oCAS1D,oBAEX,MAAM8a,EAAKd,EAAI,GACf,OACI,mBACI,mBAAK3b,MAAM,SACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,2EACP,uBACI,yBAAO,qBAAOA,MAAM,cAChB,YAAC,IAAD,CAAM2B,GAAG,SAAT,WADG,IAEH,mBAAKrB,IAAM,GAAEhD,KAAKse,qBAAqBa,EAAG9a,gBAAgBiB,EAAKjB,WAAW4a,IAAQtc,MAAM,0CAG/Fwc,EAAGna,OAAS,mBACT,iBACItC,MAAM,iBACN4H,KAAO,GAAE6U,EAAG9W,IACZrD,OAAQma,EAAGna,QAAU,SACrB2T,IAAI,sBACJxS,QAASnG,KAAKme,SACdiB,QAAM,GAELD,EAAGpe,QAAUoe,EAAGpe,OAAO,IAAM,mBAC1B,mBAAKiC,IAAKmc,EAAGpe,OAAO,GAAGkC,YAAaP,MAAM,4BAGhD,mBACF,iBACIA,MAAM,iBACN4H,KAAO,GAAE6U,EAAG9W,IACZlC,QAASnG,KAAKme,UAEbgB,EAAGpe,QAAUoe,EAAGpe,OAAO,IAAM,mBAC1B,mBAAKiC,IAAKmc,EAAGpe,OAAO,GAAGkC,YAAaP,MAAM,oC,MAYnEsb,Q,skBCxJf,MAAMqB,EAAa7a,IAAG8a,WAAU,GAC1BC,EAAgB/a,IAAGgb,eACnBC,EAAkBjb,IAAGkb,eAAc,GAQnCrY,EAAe,CACpB0U,WAAW,EACX4D,QAAS,eACTC,SAAU,Q,IAILC,EADLrgB,Y,EAAD,cACmBC,YACfC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAuBtBmgB,YAAclc,eAAO9D,GACpBA,EAAEsN,iBACF,EAAKnN,SAAS,CAAE8b,WAAW,IAC3B,EAAK9b,SAAS,CAAE8b,WAAW,KA1BN,KA6BnBgE,OAAUjgB,IACN,MAAM,WAAEkE,GAAehE,KAAKL,MAAMsE,OAElC,IAAI+b,EAAS,OACb,OAFkBlgB,EAAEkF,OAAOJ,OAGvB,IAAK,QACDob,EAAS,CAAC9C,EAAGC,IAAMD,EAAE1O,OAAS2O,EAAE3O,OAAS0O,EAAE1O,MAAMpN,OAAS+b,EAAE3O,MAAMpN,OAClE,MACJ,IAAK,SACD4e,EAAS,CAAC9C,EAAGC,IAAMD,EAAE1O,OAAS2O,EAAE3O,OAAS0O,EAAE1O,MAAMpN,OAAS+b,EAAE3O,MAAMpN,OAClE,MACJ,IAAK,WACD4e,EAAS,CAAC9C,EAAGC,IAAMD,EAAEjP,UAAYkP,EAAElP,UAAYiP,EAAEjP,SAAS7M,OAAS+b,EAAElP,SAAS7M,OAC9E,MACJ,IAAK,YACD4e,EAAS,CAAC9C,EAAGC,IAAMD,EAAEjP,UAAYkP,EAAElP,UAAYiP,EAAEjP,SAAS7M,OAAS+b,EAAElP,SAAS7M,OAC9E,MACJ,QACI4e,EAAS,CAAC9C,EAAGC,IAAMD,EAAE7Y,GAAK8Y,EAAE9Y,GAGpCL,EAAWic,eAAeD,IAlDX,KAyDnBE,KAAO,KACH,MAAM,QAAEC,GAAYngB,KAAKL,MAAMsE,OAC/Bkc,EAAQC,UAzDRpgB,KAAKU,M,+VAAL,IACO2G,GAId,gBACC,MAAM,SAAEuC,EAAF,UAAYvE,EAAZ,aAAuBgb,GAAiBrgB,KAAKL,MAAMsE,OACzDjE,KAAKC,SAAS,CAAE8b,WAAW,UACfnS,EAAS0W,uBACTjb,EAAUkb,gBAChBlb,EAAUmb,yBACJH,EAAaI,oBAEzB,MAAM,KAAEnb,GAASD,EACjB,GAAIC,EAAKob,qBAAuBpb,EAAKob,oBAAoBC,OAAQ,CAChE,MAAQC,SAAUC,EAAKC,UAAWC,EAA5B,SAAiCC,GAAa1b,EAAKob,oBAAoBC,OAC7Etb,EAAU4b,eAAe,CAAEJ,MAAKE,MAAKC,aAEtChhB,KAAKC,SAAS,CAAE8b,WAAW,IAiC5B5U,oBACCnH,KAAKkhB,UAQNnf,SACO,MACM,MAAEgC,EAAF,QAASiX,EAAT,OAAkBmG,EAAlB,KAA0B1C,GAASze,KAAKL,OAC9C,UAAE0F,EAAF,SAAauE,EAAb,WAAuB5F,GAAehE,KAAKL,MAAMsE,OAE3C4D,EAAO7D,EAAWod,uBAAuBD,IAE/C,KAAE7b,GAASD,GACX,UAAEuQ,EAAF,uBAAa3G,EAAyB,IAAO3J,GAC3C6R,kBAAmBmF,GAAUrN,EAEzBlK,EAAQP,IAAG+P,SAAS,CAAE1M,SAE5B,IAAIyN,EACA5O,EACA6O,EAUV,OATU1N,GAAQA,EAAKnB,MACb4O,EAAY9Q,IAAGe,iBAAiBsC,GAChCnB,EAAOlC,IAAGiB,YAAYoC,GACtB0N,EAAW/Q,IAAGiB,YAAYH,IACnBA,GAAQA,EAAKjB,KACpBiR,EAAY9Q,IAAGe,iBAAiBD,GAChCoB,EAAOlC,IAAGiB,YAAYH,IAI/B,mBAAK5C,MAAM,kBAAkBC,MAAQ,kBAAiB4c,kBAA8BF,MACvE,sBAAQ3c,MAAM,2CACVC,MAAQ,QAAO8c,8CACftZ,QAASnG,KAAKkgB,MACd,iBAAGxd,MAAM,8BAGb,mBAAKA,MAAM,YACP,YAAC,IAAD,CAAWuB,OAAQjE,KAAKL,MAAMsE,OAAQ8E,KAAM6M,EAAW0G,MAAOA,KAGlE,YAAC,IAAD,CAAUrY,OAAQjE,KAAKL,MAAMsE,SAE7B,mBAAKvB,MAAM,0BACP,mBAAKA,MAAM,2EACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,uBACP,sBACKsY,GAAW,mBACR,oBAAMtY,MAAM,uBAAZ,IAAoCsY,IAEvCnT,GAAQ,mBACL,mBAAKnF,MAAM,4BACP,mBACIA,MAAQ,mEACRC,MAAOoC,EAAS,0BAAyBA,+BAAqC,KAE5EA,GAAS,mBAAKrC,MAAM,aAAaC,MAAM,sCAAsC2S,IAEnF,mBAAK5S,MAAM,iCAAiCC,MAAM,uBAC9C,kBAAID,MAAM,QACLmF,EAAKM,OAAS,mBACX,iBAAGmC,KAAO,iBAAgBzC,EAAKyH,OAAU5M,MAAM,kBAAkBgE,IAC/D,mBACDA,SAQ7B,mBAAKhE,MAAM,SACP,qBAAOA,MAAM,oBACT,sBACIA,MAAM,iCACN2B,GAAG,OACHkG,SAAUvK,KAAK+f,QAEf,sBAAQnb,MAAM,IAAG,YAAC,IAAD,CAAMP,GAAG,kBAAT,iBACjB,sBAAQO,MAAM,SAAQ,YAAC,IAAD,CAAMP,GAAG,yBAAT,sBACtB,sBAAQO,MAAM,UAAS,YAAC,IAAD,CAAMP,GAAG,wBAAT,wBACvB,sBAAQO,MAAM,YAAW,YAAC,IAAD,CAAMP,GAAG,4BAAT,4BACzB,sBAAQO,MAAM,aAAY,YAAC,IAAD,CAAMP,GAAG,2BAAT,oCAQlD,YAAC,IAAD,CAAiBJ,OAAQjE,KAAKL,MAAMsE,OAAQF,MAAOA,EAAOiX,QAASA,EAASmG,OAAQA,EAAQ1C,KAAMA,S,EAMnGoB,a,klBChKf,MAAMR,EAAa7a,IAAG8a,WAAU,GAE1BjY,EAAe,CACjBtE,SAAS,EACTgO,MAAO,GACPpH,OAAQ,EACR0X,WAAY,EACZxQ,cAAe,EACfC,MAAO,EACPI,WAAW,IAAI/L,MAAOgM,WAGpBmQ,EAAa,CAAC,KAAM,OAAQ,OAAQ,OAAQ,S,IAS5C3W,EADLnL,Y,EAAD,cAC8BC,YAC1BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YA0BnB4hB,cAAgB3d,iBACZ,MAAM,SAAEgG,GAAa,EAAKjK,MAAMsE,OAChC,IAAI,MAAE8M,EAAF,OAASpH,GAAW,EAAKjJ,MAC7BiJ,EAAS,EACT,EAAK1J,SAAS,CAAE0J,iBACV,EAAKiB,sBAAsB,CAAEjL,MAAO,EAAKA,MAAOoR,QAAOpH,WAC7DC,EAAS4X,yBAhCM,KAyCnBC,sBAAwB,CAAC9hB,EAAQK,KAAKL,SAClCK,KAAK0hB,wBAA0BC,YAAY,IAAM3hB,KAAK4hB,mBAAmB,CAAEjiB,UAAU,MA1CtE,KA6CnBkiB,wBAA0B,KACtBC,cAAc9hB,KAAK0hB,0BA9CJ,KAiDnBK,eAAiB,KACb,MAAM,WAAE/d,GAAehE,KAAKL,MAAMsE,QAC5B,eAAE+d,EAAF,WAAkBnX,GAAe7G,EACvC,GAAIge,EAAe5gB,OAAQ,CACvB,MAAM6gB,EAAapX,EAAWqX,OAAOF,GAAgBvE,MA7D5C/M,EA6D6D,CAAC,SA7DnD,CAACwM,EAAGC,IAAMzM,EAAOlP,IAAI2gB,IACjD,IAAIC,EAAM,EAEV,MADa,MAATD,EAAE,KAAcC,GAAO,EAAGD,EAAEA,EAAEE,UAAU,IACrCnF,EAAEiF,GAAKhF,EAAEgF,GAAKC,EAAMlF,EAAEiF,GAAKhF,EAAEgF,IAAOC,EAAO,IACnDE,OAAO,CAACC,EAAGC,IAAMD,GAAQC,EAAG,KA0DnBxe,EAAWye,iBAAiB,aAAcR,GA9DjCvR,OAQE,KA0DnBgS,gBAAkB,KACd,MAAM,WAAE1e,GAAehE,KAAKL,MAAMsE,QAC5B,WAAE4G,EAAF,iBAAc8X,GAAqB3e,EACnC4e,EAAsBvc,IAAKwc,aAAaF,GACxC1P,EAAO,IAAIpI,GAIjB,IAAIiY,EAAgB,EACpB,MAAMC,EAAM,IAAI5d,KAChB8N,EAAK+P,QAAQ,CAACljB,EAAGoN,KACb,MAAMoJ,EAAOjQ,IAAK4c,eAAenjB,EAAEwW,MAClBnI,KAAK+U,OAAOH,EAAI5R,UAAYmF,EAAKnF,WAAa,KAL9C,QAOb2R,EAAgB5V,EAAM,KAG9B,MAAMiW,EAAclQ,EAAK7R,OAEzB,GAAI+hB,EAAcL,EAbG,EAa2B,CAC5C,IAAK,IAAIxf,EAAI,EAAG8f,EAdC,EAciB9f,EAAI8f,EAAG9f,GAAK,EAAG,CAC7C,MAAM+f,EAAc7e,IAAG8e,UAAUR,EAAeK,GAC5C9c,IAAKkd,SAASX,EAAoBtf,KAClC2P,EAAKuQ,OAAOH,EAAa,EAAGT,EAAoBtf,IAGxDU,EAAWye,iBAAiB,aAAcxP,KApF/B,KAwFnBwQ,UAAY,KACR,MAAM,MAAE3S,GAAU9Q,KAAKU,OACjB,WAAEsD,GAAehE,KAAKL,MAAMsE,QAC5B,WAAE4G,GAAe7G,EACjBiP,EAAO,IAAIpI,GACjBoI,EAAKuQ,OAAO1S,EAAO,EAAG,CAAElL,KAAM,KAAM8d,kBAAmB,MAAOC,kBAAmB,WACjF3f,EAAWye,iBAAiB,aAAcxP,IA9F3B,KAiGnB2Q,kBAAoB,KAChB,MAAM,WAAEvC,GAAerhB,KAAKU,OACtB,WAAEsD,GAAehE,KAAKL,MAAMsE,QAC5B,WAAE4G,GAAe7G,EACjBiP,EAAO,IAAIpI,GACjBoI,EAAKuQ,OAAOnC,EAAY,EAAG,CAAEzb,KAAM,cAAe8d,kBAAmB,MAAOC,kBAAmB,WAC/F3f,EAAWye,iBAAiB,aAAcxP,IAvG3B,KA0GnB4Q,sBAAwB,KACpB,MAAM,cAAEhT,GAAkB7Q,KAAKU,OACzB,WAAEsD,GAAehE,KAAKL,MAAMsE,QAC5B,WAAE4G,GAAe7G,EACjBiP,EAAO,IAAIpI,GACjBoI,EAAKuQ,OAAO3S,EAAe,EAAG,CAAEjL,KAAM,kBAAmB8d,kBAAmB,MAAOC,kBAAmB,WACtG3f,EAAWye,iBAAiB,aAAcxP,IAhH3B,KAmHnB6Q,YAAc,KACV,MAAM,WAAE9f,GAAehE,KAAKL,MAAMsE,OAClCD,EAAW8f,YAAY,KACnB,IAAI,MAAE/S,EAAF,OAASpH,GAAW3J,KAAKU,MAC7BiJ,GAAUoH,EACV/Q,KAAKC,SAAS,CAAE0J,WAChB3J,KAAK4K,sBAAsB,CAAEmG,QAAOpH,cAzHzB,KA6HnBoa,cAAgB,KACZ,MAAM,WAAE/f,GAAehE,KAAKL,MAAMsE,OAClCD,EAAW8f,YAAY,SA/HR,KAoInBxQ,YAAc,CAACxT,EAAGqhB,KACdrhB,EAAEsN,iBACFtN,EAAEC,kBACFC,KAAKC,SAAS,CACV+jB,SAAU7C,KAEP,GA1IQ,KA6InB8C,SAAW,KACPjkB,KAAKC,SAAS,CACV+jB,SAAU,QA/IC,KAmJnBzQ,YAAezT,IACXA,EAAEsN,iBACFtN,EAAEC,mBACK,GAtJQ,KAyJnByT,WAAa,CAAC1T,EAAGokB,EAAOtN,KACpB9W,EAAEsN,iBACFtN,EAAEC,kBACFC,KAAKC,SAAS,CACVkkB,QAASD,EACTtN,UAEG,GAhKQ,KAmKnBwN,QAAU,KACNpkB,KAAKC,SAAS,CACVkkB,QAAS,QArKE,KA2KnBE,kBAAoB,KAChBrkB,KAAKC,SAAS,CACVqkB,mBAAoB9f,IAAG+f,+BAE3B,MAAM,WAAEvgB,GAAehE,KAAKL,MAAMsE,OAClCjE,KAAKwkB,gBAAkB7C,YAAY,IAAM3d,EAAWygB,eAAejgB,IAAGkgB,kCAAmC,MAhL1F,KA8MnBC,cAAgB,EAAGC,MAAK1X,UACpB,MAAM,SAAEtD,GAAa5J,KAAKL,MAAMsE,QAC1B,KAAEwa,GAAS7U,GACX,QAAEoR,GAAYhb,KAAKL,MAEzB,MAAiB,OAAbilB,EAAIhf,KACG,mBACH,YAAC,IAAD,CAAI3B,OAAQjE,KAAKL,MAAMsE,OAAQwa,KAAMA,KAG5B,gBAAbmG,EAAIhf,KACG,mBACH,YAAC,IAAD,CAAoB3B,OAAQjE,KAAKL,MAAMsE,UAG9B,oBAAb2gB,EAAIhf,KACG,mBACH,YAAC,IAAD,CAAkB3B,OAAQjE,KAAKL,MAAMsE,UAG5B,YAAb2gB,EAAIhf,KACI,mBACJ,YAAC,IAAD,CACI3B,OAAQjE,KAAKL,MAAMsE,OACnBgP,KAAM2R,EACN1X,IAAKA,EACLoG,YAAatT,KAAKsT,YAClBC,YAAavT,KAAKuT,YAClBC,WAAYxT,KAAKwT,WACjB5B,aAAc,WAIlB,mBACJ,YAAC,IAAD,CACI3N,OAAQjE,KAAKL,MAAMsE,OACnBF,MAAO6gB,EACP5J,QAASA,EACTzN,IAAM,gBAAeqX,EAAIvgB,GACzBiP,YAAatT,KAAKsT,YAClBC,YAAavT,KAAKuT,gBApP1BvT,KAAKU,M,+VAAL,IACO2G,GAEbrH,KAAKoF,SAAW,GAChBpF,KAAKkD,IAAM,GAGT,6BAA4B,MAAEvD,EAAQK,KAAKL,MAAf,MAAsBoR,EAAtB,OAA6BpH,IACrD,MAAM,QAAEqR,EAAF,SAAWlS,EAAX,OAAqBqY,GAAiBxhB,GAC5C,WAAEqE,GAAerE,EAAMsE,aAKvBD,EAAW6E,eAAe,CAAEmS,UAASlS,WAAUqY,SAAQpQ,QAAOpH,SAAQ8T,UAJlEA,IAKC9T,IACD3J,KAAK+hB,iBACL/hB,KAAK0iB,kBAEL1iB,KAAK4jB,qBAcb,0BAAyB,MAAEjkB,EAAQK,KAAKL,QACpC,MAAM,QAAEqb,EAAF,SAAWlS,EAAX,OAAqBqY,GAAiBxhB,GAC5C,WAAEqE,GAAerE,EAAMsE,aACvBD,EAAW4d,mBAAmB,CAAE5G,UAASlS,WAAUqY,WA6IvDpH,qBACI/Z,KAAKqkB,oBAGZld,oBACO,MAAM,MAAE4J,GAAU/Q,KAAKU,MACvBV,KAAK4K,sBAAsB,CAAEmG,QAAOpH,OAAQ,IAC5C3J,KAAK8jB,cACL9jB,KAAKyhB,wBAGToD,uBACI7kB,KAAK+jB,gBACL,MAAM,WAAE/f,GAAehE,KAAKL,MAAMsE,OAClCD,EAAWygB,eAAejgB,IAAGkgB,kCAC7B5C,cAAc9hB,KAAKwkB,iBAEnBxkB,KAAK6hB,0BAGTjgB,0BAA0BC,GACtB,GAAIA,EAAUmZ,UAAYhb,KAAKL,MAAMqb,SAAWnZ,EAAU4c,OAASze,KAAKL,MAAM8e,KAAM,CAChF,MAAM,MAAE1N,GAAU/Q,KAAKU,MACvBV,KAAK4K,sBAAsB,CAAEjL,MAAOkC,EAAWkP,QAAOpH,OAAQ,KAiDtE5H,SACI,MAAM,QAAEgB,EAAF,mBAAWuhB,EAAX,UAA+BpT,EAA/B,SAA0C8S,EAA1C,QAAoDG,GAAYnkB,KAAKU,OACrE,WAAEsD,EAAF,SAAc4F,GAAa5J,KAAKL,MAAMsE,QACtC,WAAE4G,EAAF,cAA0Bia,GAAkB9gB,GAC5C,SAAEqG,GAAaT,EAErB,OAAQ,mBAkBHoa,GAAY,YAAC,IAAD,KACT,YAAC,UAAD,CAAmB/f,OAAQjE,KAAKL,MAAMsE,OAAQkd,OAAQ6C,EAAU1E,UAAW,OAAQE,aAAc,OAAQU,KAAMlgB,KAAKikB,YAGvHE,GAAW,YAAC,IAAD,KACR,YAAC,UAAD,CAAiBlgB,OAAQjE,KAAKL,MAAMsE,OAAQigB,MAAOC,EAAS7E,UAAW,OAAQE,aAAc,OAAQU,KAAMlgB,KAAKokB,QAASxN,KAAMA,QAGnI,mBAAKlU,MAAM,SACNoiB,GAAiB,mBACd,mBACIpiB,MAAQ,oGACRC,MAAQ,eAAc0c,MAEtB,sBACI3c,MAAM,sCACNyD,QAASnG,KAAKuhB,eAFlB,iBAQR,YAAC,IAAD,CACIxY,KAAM8B,EACN6Y,kBAAmB,WACnBC,kBAAoB,sGAAqGtZ,EAAW,QAAU,oBAC9Isa,cAAe3kB,KAAK2kB,cACpBrD,WAAYA,EACZgD,mBAAoBA,EACpBpT,UAAWA,IAGdnO,GAAW,mBAAKL,MAAM,iCACnB,mBAAKA,MAAM,8BAA8B2Y,KAAK,UAC1C,oBAAM3Y,MAAM,WAAZ,sB,EAQTiI,Q,gfCjWf,MAAMtD,EAAe,CACpB0d,UAAW,GACXC,QAAS,I,IAIJzJ,EADL/b,Y,EAAD,cACoBC,YAChBC,YAAYC,GACRC,MAAMD,GADS,KAYnBslB,eAAkBnlB,IACd,MAAM,KAAE+H,EAAF,KAAQvC,EAAR,OAAc4f,GAAWplB,EAAEkF,OAAOuG,QAAQ,UAAUC,SACpD,UAAEqG,GAAc7R,KAAKL,MAAMsE,OACjC4N,EAAUsT,qBAAqB,CAC3Btd,KAAMsC,SAAStC,EAAM,IACrBvC,KAAM6E,SAAS7E,EAAM,MAEzB,MAAM,UAAEyf,GAAc/kB,KAAKU,MACjCqkB,EAAW,GAAEld,KAAQvC,MAAU,EACzBtF,KAAKC,SAAS,CAAE8kB,cAEZG,GACArT,EAAUuT,kBAAkB9f,IAxBjB,KA4BnB+f,cAAiBvlB,IACb,MAAM,KAAE+H,EAAF,KAAQvC,GAASxF,EAAEkF,OAAOuG,QAAQ,UAAUC,SAC5C,UAAEqG,GAAc7R,KAAKL,MAAMsE,OACjC4N,EAAUyT,oBAAoB,CAC1Bzd,KAAMsC,SAAStC,EAAM,IACrBvC,KAAM6E,SAAS7E,EAAM,MAEzB,MAAM,QAAE0f,GAAYhlB,KAAKU,MAC/BskB,EAAS,GAAEnd,KAAQvC,MAAU,EACvBtF,KAAKC,SAAS,CAAE+kB,aAnChBhlB,KAAKU,M,+VAAL,IACO2G,GAIX,kBACI,MAAM,UAAEwK,GAAc7R,KAAKL,MAAMsE,aAC3B4N,EAAUiN,KAAK,CAAE7C,MAAO,GAAIsJ,QAAS,CAAC,oBA+BnDpe,oBACCnH,KAAKoc,YAGNra,SACO,MAAM,QAAEijB,EAAU,GAAZ,UAAgBD,EAAY,IAAO/kB,KAAKU,OAC9C,UAAEmR,EAAF,SAAajI,GAAa5J,KAAKL,MAAMsE,QACrC,MAAEuG,EAAF,kBAASgb,EAAT,eAA4BxQ,EAAiB,IAAOnD,GAC9C,SAAExH,GAAaT,EAC3B,OAAK4b,EAKK,mBAAK9iB,MAAM,YACP,mBAAKA,MAAQ,sGAAqG2H,EAAW,QAAU,qBACnI,mBAAK3H,MAAM,mBACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,UACP,sBAAI,YAAC,IAAD,CAAM2B,GAAG,uCAAT,0BAAJ,OAG1B,mBAAK3B,MAAM,OACW,mBAAKA,MAAM,8BAA8BC,MAAM,mBAC1C0D,IAAKC,QAAQkE,IAAUA,EAAMhJ,IAAKqG,GAAS,mBACvCA,GAAQxB,IAAKC,QAAQuB,EAAKmN,iBAAmBnN,EAAKmN,eAAexT,IAAKikB,IACnE,MAAM1gB,EAAQ0gB,EAAQ1gB,OAAS0gB,EAAQ1gB,MAAMW,YAAc+f,EAAQ1gB,MAAQ,KACrE2gB,EAAYV,EAAS,GAAEnd,EAAKxD,MAAMohB,EAAQphB,MAC1CshB,EAAcZ,EAAW,GAAEld,EAAKxD,MAAMohB,EAAQphB,MAC9CuhB,EAAa5Q,EAAeqI,KAAKvd,GAAKA,EAAEwF,KAAKjB,KAAOohB,EAAQphB,IAClE,OACI,mBAAK3B,MAAM,8BAA8BC,MAAM,iBAC3C,mBAAKD,MAAQ,2EAA2EC,MAAOoC,EAAS,0BAAyBA,EAAMW,iBAAmB,KACpJX,GAAS,mBAAKrC,MAAM,iCAAiCC,MAAM,sCAAsC6B,IAAGe,iBAAiBkgB,KAE3H,yBACI,mBAAK/iB,MAAM,6BACP,0BAAS8B,IAAGiB,YAAYggB,IAAkB,wBAQ9C,mBAAK/iB,MAAM,6BACP,YAAC,IAAD,CAAM2B,GAAG,iCAAT,+BAEJ,mBAAK3B,MAAM,6BACP,0BAAS8B,IAAGiB,YAAYoC,MAG9B8d,GAAeD,EAAa,mBAC1B,mBAAKhjB,MAAM,eACNijB,EAAc,mBAAKjjB,MAAM,gBACtB,YAAC,IAAD,CAAM2B,GAAG,2BAAT,aADW,IACyC,iBAAG3B,MAAM,kBACxD,mBAAKA,MAAM,eAChB,YAAC,IAAD,CAAM2B,GAAG,yBAAT,WADK,IAC2C,iBAAG3B,MAAM,wBAG/D,mBACF,uBACI,sBAAQA,MAAM,sDAAsDyD,QAASnG,KAAKilB,eAAgBnJ,YAAWjU,EAAKxD,GAAIwhB,YAAWJ,EAAQphB,IACrI,YAAC,IAAD,CAAMA,GAAG,yBAAT,YAEHuhB,GAAcA,EAAWzd,OAAS,GAAK,sBAAQzF,MAAM,8DAA8DyD,QAASnG,KAAKilB,eAAgBnJ,YAAWjU,EAAKxD,GAAIwhB,YAAWJ,EAAQphB,GAAIyhB,eAAa,GACtM,YAAC,IAAD,CAAMzhB,GAAG,oCAAT,0BAEJ,mBAAK3B,MAAM,QACP,yBACI,sBAAQA,MAAM,8CAA8CC,MAAM,oBAAoBwD,QAASnG,KAAKqlB,cAAevJ,YAAWjU,EAAKxD,GAAIwhB,YAAWJ,EAAQphB,IACtJ,YAAC,IAAD,CAAMA,GAAG,wBAAT,mBAY5C,uBAAS3B,MAAM,QACX,2BAAS,yBAAO,YAAC,IAAD,CAAM2B,GAAG,6BAAT,yBAChB,qBACI,YAAC,IAAD,CAAMA,GAAG,0BAAT,wOA5EtB,O,EAsFKkX,Q,4KC5ITwK,EADLvmB,Y,EAAD,cACwBC,YACpBC,YAAYC,GACRC,MAAMD,GADS,KAMnBqmB,gBAAkB,KACd,MAAM,YAAEC,GAAgBjmB,KAAKU,MAC7BV,KAAKC,SAAS,CACVgmB,aAAcA,KAPlBjmB,KAAKU,MAAQ,GACnBV,KAAKoF,SAAW,GAUd,oBACF,MAAM,UAAEC,GAAcrF,KAAKL,MAAMsE,OACjCjE,KAAKC,SAAS,CAAE8b,WAAW,IACrB,MAAM,KAAEzW,GAASD,EACvB,GAAIC,EAAKob,qBAAuBpb,EAAKob,oBAAoBC,OAAQ,CAChE,MAAQC,SAAUC,EAAKC,UAAWC,EAA5B,SAAiCC,GAAa1b,EAAKob,oBAAoBC,OAC7Etb,EAAU4b,eAAe,CAAEJ,MAAKE,MAAKC,aAC5B3b,EAAU6gB,iBAIrB/e,oBACOnH,KAAKmmB,cAGTpkB,SACI,MAAM,YAAEkkB,GAAgBjmB,KAAKU,OACvB,MAAE4b,GAAUtc,KAAKL,OACjB,UAAE0F,GAAcrF,KAAKL,MAAMsE,QAC3B,UAAE2R,EAAF,cAAawQ,EAAb,mBAA4BC,EAA5B,KAAgD/gB,GAASD,GACzD,uBAAE4J,GAA2B3J,EAEnC,OAAKsQ,GAAc0G,EAGf2J,EAEI,mBAAKvjB,MAAM,uEACNuM,GAA0BA,EAAuBkI,mBAAqB,sBAAKlI,EAAuBkI,mBACnG,mBAAKzU,MAAM,mBACPE,aAAc4B,IAAG8hB,cACjBzjB,WAAY2B,IAAG8hB,cACfxjB,YAAa0B,IAAG8hB,cAChB9I,SAAUhZ,IAAG8hB,eAEb,qBAAO5jB,MAAM,gCACT,yBACI,sBACI,kBAAIA,MAAM,eAAV,KACA,kBAAIA,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,iBAAT,UACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,mBAAT,YACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,qBAAT,cACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,mBAAT,YACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,gBAAT,SACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,oBAAT,aACxB,kBAAI3B,MAAM,eAAc,YAAC,IAAD,CAAM2B,GAAG,gBAAT,WAGhC,yBACK+hB,GAAiBA,EAAc5kB,IAAI8U,GAAQ,mBACxC,sBACI,kBAAI5T,MAAM,eAAc,wBAAO4T,IAC/B,kBAAI5T,MAAM,eACN,wBACK2D,IAAKkgB,eAAeF,EAAmB/P,GAAMkQ,MAAO,qCAAuC,mBAAK7jB,MAAM,eAAeK,IAAM,gBAAeqD,IAAKkgB,eAAeF,EAAmB/P,GAAMkQ,MAAO,8CAGvM,kBAAI9jB,MAAM,eACN,wBACK2D,IAAKkgB,eAAeF,EAAmB/P,GAAMmQ,QAAS,qCAAuC,mBAAK9jB,MAAM,eAAeK,IAAM,gBAAeqD,IAAKkgB,eAAeF,EAAmB/P,GAAMmQ,QAAS,8CAG3M,kBAAI/jB,MAAM,eACN,wBACK2D,IAAKkgB,eAAeF,EAAmB/P,GAAMoQ,IAAK,qCAAuC,mBAAK/jB,MAAM,eAAeK,IAAM,gBAAeqD,IAAKkgB,eAAeF,EAAmB/P,GAAMoQ,IAAK,8CAGnM,kBAAIhkB,MAAM,eACN,wBACK2D,IAAKkgB,eAAeF,EAAmB/P,GAAMqQ,QAAS,qCAAuC,mBAAKhkB,MAAM,eAAeK,IAAM,gBAAeqD,IAAKkgB,eAAeF,EAAmB/P,GAAMqQ,QAAS,8CAG3M,kBAAIjkB,MAAM,eACN,wBACI,iBAAGA,MAAM,gDACT,oBAAMA,MAAO8B,IAAGoiB,oBAAoBvgB,IAAKkgB,eAAeF,EAAmB/P,GAAO,0BAC9E,YAAC,IAAD,CAAarS,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAOyB,IAAKkgB,eAAeF,EAAmB/P,GAAO,2BAEjG,oBAAM5T,MAAM,uCAAZ,KACA,oBAAMA,MAAO8B,IAAGoiB,oBAAoBvgB,IAAKkgB,eAAeF,EAAmB/P,GAAO,0BAC9E,YAAC,IAAD,CAAarS,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAOyB,IAAKkgB,eAAeF,EAAmB/P,GAAO,6BAIzG,kBAAI5T,MAAM,eACN,wBACK2D,IAAKsQ,OAAOtQ,IAAKkgB,eAAeF,EAAmB/P,GAAO,wBAAyB,GADxF,IAC4F,oBAAM5T,MAAM,kCAAZ,QAGhG,kBAAIA,MAAM,eACN,wBACI,iBAAGA,MAAM,gCADb,IAC8C,oBAAMA,MAAO8B,IAAGqiB,kBAAkBxgB,IAAKkgB,eAAeF,EAAmB/P,GAAO,qBAAsBjQ,IAAKsQ,OAAOtQ,IAAKkgB,eAAeF,EAAmB/P,GAAO,mBAAoB,IADlO,IAC6O,oBAAM5T,MAAM,kCAAZ,KAD7O,IACmS,oBAAMA,MAAO8B,IAAGqiB,kBAAkBxgB,IAAKkgB,eAAeF,EAAmB/P,GAAO,qBAAsBjQ,IAAKsQ,OAAOtQ,IAAKkgB,eAAeF,EAAmB/P,GAAO,mBAAoB,IADvd,IACke,oBAAM5T,MAAM,kCAAZ,eAQ1f,sBAAQkD,KAAK,SAASlD,MAAM,mCAAmCyD,QAASnG,KAAKgmB,iBACzE,iBAAGtjB,MAAM,wBADb,IACsC,YAAC,IAAD,CAAM2B,GAAG,iBAAT,WAM9C,mBAAK3B,MAAM,kEACNkT,GAAaA,EAAUxU,OAAS,GAAK,mBAAKsB,MAAM,wBAC7C,mBAAKA,MAAM,MAAMyD,QAASnG,KAAKgmB,iBAC1BpQ,GAAaA,EAAUxU,OAAS,GAAKwU,EAAU1H,MAAM,EAAG,GAAG1M,IAAIslB,GAC5D,mBAAKpkB,MAAM,qBACP,wBACI,qBAAOA,MAAM,gCAAgC2D,IAAK0gB,QAAQD,EAAE7H,OADhE,IAEI,mBAAKjc,IAAM,gBAAeqD,IAAKkgB,eAAeO,EAAG,0CAC7CpkB,MAAM,OACNC,MAAM,kBAET0D,IAAKkgB,eAAeO,EAAG,6CAA+C,GAAK,qBAAOpkB,MAAM,QACpF2D,IAAKkgB,eAAeO,EAAG,6CAA6C,oBAAMpkB,MAAM,kCAAZ,OAEzE,qBAAOA,MAAM,QACT,iBAAGA,MAAM,sCADb,IACoD,YAAC,IAAD,CAAauB,OAAQjE,KAAKL,MAAMsE,OAAQW,MAAOyB,IAAKkgB,eAAeO,EAAG,sCAE1H,qBAAOpkB,MAAM,QACT,iBAAGA,MAAM,2BADb,IAC0C2D,IAAKkgB,eAAeO,EAAG,8BAA8B,oBAAMpkB,MAAM,kCAAZ,OAD/F,IACuJ,oBAAMA,MAAM,kCAAkC8B,IAAGwiB,cAAc3gB,IAAKkgB,eAAeO,EAAG,2CAE1O,4BAvGpB,O,EAiHJf,Q,6UC3JTkB,EADLznB,Y,EAAD,cAC2BC,YACvBC,YAAYC,GACRC,MAAMD,GACNK,KAAKU,MAAQ,GACbV,KAAKqT,aAAe,KAGxBwR,uBACI,MAAM,2BAAEqC,GAA+BlnB,KAAKL,MACxCunB,GACAA,EAA2BlnB,KAAKqT,cAIxClM,oBACI,MAAM,wBAAEggB,GAA4BnnB,KAAKL,MACrCwnB,GACAA,EAAwBnnB,KAAKqT,cAIrCtR,SACI,MAAM,kBACF2hB,EAAoB,GADlB,kBAEFC,EAAoB,GAFlB,cAGFgB,EAHE,IAIFC,EAAM,GAJJ,IAKF1X,EALE,WAMFoU,EANE,WAOF8F,EAPE,UAQFlW,GACAlR,KAAKL,MAEH0nB,EAAiB,GAMvB,OALInW,IACAmW,EAAenW,UAAYA,GAE/BoQ,EAAW0B,QAAQljB,GAAKunB,EAAgB,QAAOvnB,GAAOwnB,UAAUF,EAAWtnB,IAAM8kB,EAAI9kB,KAGjF,qBACI4C,MAAQ,GAAEghB,EACVxgB,IAAKC,GAAKnD,KAAKqT,aAAelQ,EAC9B2M,WAAU5C,GACNma,GAEJ,mBACI3kB,MAAQ,GAAEihB,EACVhhB,MAAQ,mBAEPgiB,EAAc,CACXC,MACA1X,c,EASlBqa,EADL/nB,Y,EAAD,cACuBC,YACnBC,YAAYC,GACRC,MAAMD,GADS,KAMnB6nB,2BAA6B,KACzBxnB,KAAKynB,qBAAuB,MAPb,KAUnBnD,mBAAsBoD,IAClB,MAAM,mBAAEpD,GAAuBtkB,KAAKL,MACD,mBAAxB2kB,GAEPA,EAAmBoD,GAKvBA,EAAQ1E,QAASljB,IACb,MAAM,eAAE6nB,GAAmB7nB,GACrB,OAAEqC,EAAS,GAAMrC,EAAEkF,OAAOwG,QAM1Boc,EAAgBzZ,KAAKC,IAHPtO,EAAEkF,OAAO6iB,WAAW,GAAGC,aACtBhoB,EAAEkF,OAAO8iB,aACThoB,EAAEkF,OAAO+iB,cAI1BJ,GACA7nB,EAAEkF,OAAO6iB,WAAW,GAAGllB,MAAMqlB,QAAS,QAYtCloB,EAAEkF,OAAOrC,MAAMslB,WAAeL,EAAgBzlB,EAASylB,EAAgBzlB,GAA3C,MACrBrC,EAAEkF,OAAOrC,MAAMslB,YAEtBnoB,EAAEkF,OAAOrC,MAAMslB,WAAeL,EAAgBzlB,EAASylB,EAAgBzlB,GAA3C,KAC5BrC,EAAEkF,OAAO6iB,WAAW,GAAGllB,MAAMqlB,QAAS,WA/C/B,KAoDnBE,0BAA4B,KACxB,KAAM,yBAA0BC,WAC1B,8BAA+BA,WAC/B,sBAAuBA,OAAOC,0BAA0BC,WAC1D,OAAO,EAQXroB,KAAKynB,qBAAuB,IAAIa,qBAAqBtoB,KAAKskB,mBAL1C,CACZiE,KAAM,KACNC,WAAY,QACZC,UAAW,MA9DA,KAmEnBtB,wBAA2BjkB,IACnBlD,KAAKynB,sBAAwBvkB,GAC7BlD,KAAKynB,qBAAqBiB,QAAQxlB,IArEvB,KAwEnBgkB,2BAA8BhkB,IACtBlD,KAAKynB,sBAAwBvkB,GAC7BlD,KAAKynB,qBAAqBkB,UAAUzlB,IAxExClD,KAAKU,MAAQ,GA4EjBqZ,qBACI/Z,KAAKkoB,4BAGTrD,uBACI7kB,KAAKwnB,6BAGTzlB,SACI,MAAM,KACFgH,EAAO,GADL,kBAEF2a,EAAoB,oBAFlB,kBAGFC,EAAqB,4GAHnB,cAIFgB,EAAiB7kB,KAAM,gDAJrB,WAKFwhB,EAAa,GALX,WAMF8F,EAAa,IACbpnB,KAAKL,MAET,OACI,mBAAK+C,MAAM,SACNqG,GAAQA,EAAKwG,OAAOzP,GAAKuG,IAAKkd,SAASzjB,IAAI0B,IAAI,CAACojB,EAAK1X,KAClD,MAAM0b,EAAiBhE,EAAIiE,eAAe,qBAAuBjE,EAAIlB,kBAAoBA,EACnFoF,EAAiBlE,EAAIiE,eAAe,qBAAuBjE,EAAIjB,kBAAoBA,EACzF,OAAQ,mBACJ,YAACsD,EAAD,CACI1Z,IAAM,YAAWL,KAAO0X,EAAIvgB,KAC5BugB,IAAKA,EACL1X,IAAKA,EACLia,wBAAyBnnB,KAAKmnB,wBAC9BD,2BAA4BlnB,KAAKknB,2BACjCxD,kBAAmBkF,EACnBjF,kBAAmBmF,EACnBnE,cAAeA,EACfrD,WAAYA,EACZ8F,WAAYA,Y,EASzBG,Q","file":"route-stories.chunk.3a593.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport Story from './publicStory';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n        const { story } = props;\n\t\tawait storyStore.loadPublicFeed({ story });\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.story !== this.props.story) {\n            this.loadStoriesPublicFeed(nextProps);\n        }\n    }\n\n    render() {\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n\n                <div class='row pb-4 bg-light'>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                        {!publicFeed || publicFeed.length === 0 && <>\n                            <div class='text-center text-muted mt-5'>\n                                <div class='display-1 text-center mb-5'>\n                                    <i class='fas fa-comment' />\n                                </div>\n                                <h3>No story found!</h3>\n                            </div>\n                        </>}\n                        {publicFeed && publicFeed.map((story) => <>\n                            <Story\n                                stores={this.props.stores}\n                                story={story}\n                                showAllComments={true}\n                            />\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport { route } from 'preact-router';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport Speed from '../data/speed';\nimport Elevation from '../data/elevation';\nimport Weight from '../data/weight';\nimport Distance from '../data/distance';\nimport Temperature from '../data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false,\n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    storyStore.workoutsAddLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    storyStore.workoutsAddLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        storyStore.workoutsAddCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        storyStore.workoutsAddCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            teamStore.addLikeToWorkout({ id, data });\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            storyStore.workoutsAddLikeToWorkout({ id, data });\n        }\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    showWorkoutDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const target = e.target.closest('#workoutDetail');\n        if (target) {\n            const { id } = target.dataset;\n            if (id) {\n            console.log({ target, id });\n                route(`/workouts/public/${id}`);\n            }\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { feed = {} } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedTextName = await teamStore.translate({ object: feed, user, field: 'name' });\n        let translatedTextComment;\n        if (feed.comment) {\n            translatedTextComment = await teamStore.translate({ object: feed, user, field: 'comment' });\n        }\n        this.setState({ showOriginal: 0, translatedTextName, translatedTextComment });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { feed, idx, onTeamClick = () => {}, onUserClick = () => {}, onDogClick = () => {}, holdingStore = 'team' } = this.props;\n        const { showAddComment, showDate, likeWorkout, showOriginal, translatedTextName, translatedTextComment } = this.state;\n        const { teamStore, storyStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { darkmode, hasShareApi } = appState;\n\n        const { publicDogs } = teamStore;\n        let team = {};\n        let publicUser = {};\n        if (holdingStore === 'team') {\n            team = teamStore.findPublicTeam(feed.team);\n            publicUser = teamStore.findPublicUser(feed.user) || {};\n        } else if (holdingStore === 'story') {\n            team = storyStore.findPublicTeam(feed.team);\n            publicUser = storyStore.findPublicUser(feed.user) || {};\n        }\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        const image = mu.getImage({ user: publicUser, team, object: feed, priority: 'user' });\n\n        const { likes, comments } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\t\tconst { gpxInfo = {} } = feed;\n\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (publicUser) {\n            shortname = mu.displayNameShort(publicUser);\n            name = mu.displayName(publicUser);\n            username = mu.displayName(publicUser);\n            if (publicUser.settings && publicUser.uuidv4 !== user.uuidv4) {\n                userLink = publicUser.settings.hideProfile ? null : `/inbox/${publicUser.uuidv4}`;\n            }\n        }\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        const translationName = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'name',\n        }) || translatedTextName;\n        let feedName = translationName || feed.name;\n        const translationComment = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'comment',\n        }) || translatedTextComment;\n        let feedComment = translationComment || feed.comment;\n\n        if (showOriginal) {\n            feedName = feed.name;\n            feedComment = feed.comment;\n        }\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                    <span class='badge badge-pill badge-secondary float-right'>{teamType}</span>\n                    <h5 class='mb-1 position-relative' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    <div class='mb-2'>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {feed.public === 1 ? <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-globe-europe' />\n                            </small>\n                        </> : <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                            </small>\n                        </>}\n                        {username && <>\n                            <small class='ml-2 text-muted'>\n                                {userLink ? <>\n                                    <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                </> : <>\n                                    <i class='fas fa-user' /> {username}\n                                </>}\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={feed.sledWeight} />\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> <Temperature stores={this.props.stores} value={feed.temperature} />\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                            {feed.moonIllumination && feed.moonIllumination.phaseIcon && <span class='float-right ml-2'>{feed.moonIllumination.phaseIcon}</span>}\n                        </small>\n                    </div>\n\n                    {isAdmin && <div\n                        class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                        style='overflow: auto;'\n                    >\n                        <small class='text-muted mr-2'>Adm:</small>\n                        {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {publicUser.deviceInfo && <>\n                            <span class='badge badge-secondary ml-1 float-right font-weight-light'>\n                                {['platform', 'manufacturer', 'model'].map(e => <>\n                                    <span class='ml-1 text-white'>\n                                        {publicUser.deviceInfo[e]}\n                                    </span>\n                                </>)}\n                            </span>\n                        </>}\n                        {adminData && <>\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                            </>)}\n                        </>}\n                    </div>}\n                </div>\n            </div>\n\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='d-flex justify-content-between bg-light rounded-lg px-2'>\n                {feed.distanceKm > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Distance stores={this.props.stores} value={feed.distanceKm} />\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Elevation stores={this.props.stores} value={feed.elevation} />\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {gpxInfo && gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                            <Speed stores={this.props.stores} value={gpxInfo.avgGpsMovingSpeed * 3.6} />\n                        </> : <>\n                            <Speed stores={this.props.stores} value={feed.speedAvg} />\n                        </>}\n                    </div>\n                </div>}\n            </div>\n\n            <div class='row mt-2'>\n                <div id='workoutDetail' class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;' onClick={this.showWorkoutDetail} data-id={feed.uuidv4}>\n                    <Markdown markdown={mu.replaceImages(feedName, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feedComment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                {feed.language !== language && <>\n                    {!showOriginal && translationName ? <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                    </> : <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                    </>}\n                </>}\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments\n                    stores={this.props.stores}\n                    likes={likes}\n                    comments={comments}\n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                                data-native\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value);\n        }, 1000);\n    }\n\n    async doUpdateField(id, name, value) {\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), name, value);\n    }\n\n    render() {\n        const { storyBody, storyType } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        return (<>\n            <div class='d-flex bd-highlight'>\n                <div class='p-0 w-100 bd-highlight'>\n                    <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                    <div class='border rounded rounded-lg position-relative'>\n                        <Localizer>\n                            <textarea\n                                class='form-control-plaintext px-2'\n                                type='text'\n                                placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                onInput={linkState(this, 'storyBody')}\n                                // onKeyUp={mu.resizeTextarea}\n                                onFocus={mu.resizeTextarea}\n                                style='height: 2.3em;'\n                                value={storyBody || story.body}\n                            />\n                        </Localizer>\n                    </div>\n\n                    <div class='position-relative mt-3'>\n                        {isAdmin && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <label>Pinned to top:</label>\n                                        <input\n                                            type='checkbox'\n                                            id={story.id}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                        />\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                    <button type='button' class='btn btn-primary mb-2'\n                        onClick={this.saveStory}\n                        data-id={story.id}\n                    ><i class='fas fa-paper-plane' /></button>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>                    \n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                            {showEdit[story.id] && <>\n                                <StoryEditInline\n                                    stores={this.props.stores}\n                                    story={story}\n                                    key={`story-edit-${story.id}`}\n                                    callback={this.doneEdit}\n                                />\n                            </>}\n                            {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                            </div>}\n                        </div>\n                    </div>\n\n                    {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='mr-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='story'\n                                onTeamClick={onTeamClick}\n                                onUserClick={onUserClick}\n                            />\n                        </div>\n                        {views > 0 && <>\n                            <div>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={story}\n                                    type='story'\n                                    isTeamAdmin={isTeamAdmin}\n                                    isAdmin={isAdmin}\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                        </>}\n                    </div>\n\n                    {showTeamSetting[story.id] && <>\n                        <small>\n                            <div class='alert alert-info' role='alert'>\n                                <span class='display-4 float-left'>\n                                    <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                </span>\n                                <p>\n                                    <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                </p>\n                                <p>\n                                    <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                </p>\n                                <p>\n                                    <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                </p>\n                            </div>\n                        </small>\n                    </>}\n\n                    <div>\n                        <div class='row'>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                    data-id={story.id}\n                                    onClick={this.likeStory}\n                                >\n                                    <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                </button>\n                            </div>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                    data-id={story.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                </button>\n                            </div>\n                            {hasShareApi ? <>\n                                <div class='col text-center'>\n                                    <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        onClick={this.shareLink}\n                                        data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        data-title={`title: ${story.title}`}\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </button>\n                                </div>\n                            </> : <>\n                                <div class='col text-center'>\n                                    <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        data-native\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </a>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n\n                    <div class='mt-2'>\n                        <StoryComments\n                            stores={this.props.stores}\n                            story={story}\n                            col='10'\n                            offset='2'\n                            compact={false}\n                            showAllComments={showAllComments}\n                            initCall={this.closeAllAddComments}\n                        />\n                        {showAddComment[story.id] && <StoryAddComment\n                            stores={this.props.stores}\n                            story={story}\n                            inputRef={c => this.inputRef[story.id] = c}\n                            inputRefObject={this.inputRef}\n                            col='10'\n                            offset='2'\n                            key={`story-comment-${story.id}`}\n                        />}\n                    </div>\n\n                {/* </div> */}\n\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport linkState from 'linkstate';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport StoryPublicDetail from '../../components/story/publicDetail';\nimport Ad from '../../components/ad/';\nimport YrWeather from '../../components/yrweather/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n\tviewmenu: 'wall',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, messageStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\n\t\tconst { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n\t\t}\n\t\tthis.setState({ isLoading: false });\n    }\n\n\treloadFeeds = async (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    sortby = (e) => {\n        const { storyStore } = this.props.stores;\n        const sortField = e.target.value;\n        let sortBy = () => {};\n        switch (sortField) {\n            case 'likes':\n                sortBy = (a, b) => a.likes && b.likes && a.likes.length < b.likes.length;\n                break;\n            case '-likes':\n                sortBy = (a, b) => a.likes && b.likes && a.likes.length > b.likes.length;\n                break;\n            case 'comments':\n                sortBy = (a, b) => a.comments && b.comments && a.comments.length < b.comments.length;\n                break;\n            case '-comments':\n                sortBy = (a, b) => a.comments && b.comments && a.comments.length > b.comments.length;\n                break;\n            default:\n                sortBy = (a, b) => a.id < b.id;\n                break;\n        }\n        storyStore.sortPublicFeed(sortBy);\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\trender() {\n        const { isLoading, viewmenu } = this.state;\n        const { story, hashtag, teamid, path } = this.props;\n\t\tconst { userStore, appState, storyStore } = this.props.stores;\n        const { darkmode } = appState;\n        const team = storyStore.findPublicTeamByUuidv4(teamid);\n\n\t\tconst { user } = userStore;\n\t\tconst { yrWeather, currentLocationGeocode = {} } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n        const image = mu.getImage({ team });\n\n        let shortname;\n        let name;\n        let username;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='bg-light'>\n                    <YrWeather stores={this.props.stores} data={yrWeather} place={place} />\n                </div>\n\n                <StoryAdd stores={this.props.stores} />\n\n                <div class='row bg-light pb-3 pt-3'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                        <div class='row'>\n                            <div class='col-7 text-overflow'>\n                                <h3>\n                                    {hashtag && <>\n                                        <span class='badge badge-primary'>#{hashtag}</span>\n                                    </>}\n                                    {team && <>\n                                        <div class='d-flex position-relative'>\n                                            <div\n                                                class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                                            >\n                                                {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                                            </div>\n                                            <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                                                <h3 class='mb-1'>\n                                                    {team.public ? <>\n                                                        <a href={`/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a>\n                                                    </> : <>\n                                                        {name}\n                                                    </>}\n                                                </h3>\n                                            </div>\n                                        </div>\n                                    </>}\n                                </h3>\n                            </div>\n                            <div class='col-5'>\n                                <small class='float-right mt-1'>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id='team'\n                                        onChange={this.sortby}\n                                    >                    \n                                        <option value=''><Text id='story.sort.new'>Nyeste først</Text></option>\n                                        <option value='likes'><Text id='story.sort.likes-desc'>Flest likes først</Text></option>\n                                        <option value='-likes'><Text id='story.sort.likes-asc'>Færrest likes først</Text></option>\n                                        <option value='comments'><Text id='story.sort.comments-desc'>Flest kommentarer først</Text></option>\n                                        <option value='-comments'><Text id='story.sort.comments-asc'>Færrest kommentarer først</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <StoryPublicFeed stores={this.props.stores} story={story} hashtag={hashtag} teamid={teamid} path={path} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    insertWorkouts = () => {\n        const { storyStore } = this.props.stores;\n        const { publicWorkouts, publicFeed } = storyStore;\n        if (publicWorkouts.length) {\n            const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n            storyStore.localUpdateField('publicFeed', finalArray);\n        }\n    }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}