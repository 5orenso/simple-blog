{"version":3,"sources":["webpack:///../node_modules/marked/src/InlineLexer.js","webpack:///../node_modules/marked/src/Slugger.js","webpack:///../node_modules/marked/src/Lexer.js","webpack:///../node_modules/marked/src/helpers.js","webpack:///../node_modules/marked/src/TextRenderer.js","webpack:///../node_modules/marked/src/rules.js","webpack:///../node_modules/marked/src/Parser.js","webpack:///../src/to-vdom.js","webpack:///../src/markup-to-vdom.js","webpack:///../src/parse-markup.js","webpack:///../src/index.js","webpack:///../node_modules/marked/src/marked.js","webpack:///../node_modules/marked/src/defaults.js","webpack:///../node_modules/marked/src/Renderer.js","webpack:///../node_modules/preact-markdown/index.js"],"names":["Renderer","require","defaults","inline","findClosingBracket","escape","module","exports","InlineLexer","constructor","links","options","this","rules","normal","renderer","Error","pedantic","gfm","breaks","src","output","link","text","href","title","cap","prevCapZero","out","exec","substring","length","tag","inLink","test","inRawBlock","html","sanitize","sanitizer","lastParenIndex","linkLen","indexOf","trim","slice","replace","outputLink","escapes","reflink","nolink","toLowerCase","charAt","strong","em","code","codespan","br","del","autolink","mangle","url","smartypants","charCodeAt","_backpedal","_escapes","image","l","ch","i","Math","random","toString","seen","slug","value","hasOwnProperty","originalSlug","block","rtrim","splitCells","Lexer","tokens","Object","create","lex","token","top","next","loose","bull","b","item","listStart","listItems","t","space","isordered","istask","ischecked","newline","push","type","lastToken","trimRight","codeBlockStyle","fences","lang","heading","depth","nptable","header","align","split","cells","hr","blockquote","list","ordered","start","match","RegExp","bullet","smartLists","join","undefined","task","checked","pre","def","table","lheading","paragraph","unescape","unescapeTest","_","n","String","fromCharCode","parseInt","resolveUrl","base","baseUrls","justDomain","relativeBase","protocol","domain","str","c","invert","suffLen","currChar","substr","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","caret","nonWordAndColonTest","originIndependentUrl","encode","edit","regex","opt","source","obj","name","val","getRegex","cleanUrl","prot","decodeURIComponent","e","encodeURI","noopTest","merge","target","key","arguments","prototype","call","tableRow","count","offset","escaped","curr","splice","level","checkSanitizeDeprecation","silent","console","warn","_paragraph","_label","_title","_tag","_comment","_punctuation","_scheme","_email","_attribute","_href","_extended_email","Slugger","TextRenderer","Parser","slugger","parse","inlineText","reverse","tok","pop","peek","parseText","body","row","cell","j","tablecell","tablerow","nextToken","checkbox","listitem","errMsg","log","walk","index","arr","nodeType","textContent","nodeValue","isFirstOrLast","nodeName","allowScripts","children","h","attrs","len","props","allowEvents","Function","attributes","childNodes","Array","map","filter","exists","visitor","node","keys","reduce","attrName","letter","toUpperCase","parserDoc","customReviver","EMPTY_OBJ","x","setReviver","shouldComponentUpdate","ref","p","wrap","markup","setComponents","components","let","render","vdom","reviver","defaultReviver","dom","doc","parserError","wrappedMarkup","mime","DOMParser","parseFromString","err","document","implementation","createHTMLDocument","frame","createElement","style","cssText","setAttribute","appendChild","contentWindow","open","write","close","getElementsByTagName","fc","firstChild","error","removeChild","lastChild","onError","cl","Component","marked","callback","highlight","pending","done","message","getDefaults","changeDefaults","setOptions","parser","lexer","inlineLexer","baseUrl","headerIds","headerPrefix","langPrefix","xhtml","newDefaults","infostring","quote","raw","content","flags","preact","Markup","default","opts","markdown","markupOpts","markdownOpts"],"mappings":"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","file":"0.chunk.37482.esm.js","sourcesContent":["const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.html(this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]);\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","\nconst EMPTY_OBJ = {};\n\n// deeply convert an XML DOM to VDOM\nexport default function toVdom(node, visitor, h, options) {\n\twalk.visitor = visitor;\n\twalk.h = h;\n\twalk.options = options || EMPTY_OBJ;\n\treturn walk(node);\n}\n\nfunction walk(n, index, arr) {\n\tif (n.nodeType===3) {\n\t\tlet text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n\t\tif (walk.options.trim!==false) {\n\t\t\tlet isFirstOrLast = index===0 || index===arr.length-1;\n\n\t\t\t// trim strings but don't entirely collapse whitespace\n\t\t\tif (text.match(/^[\\s\\n]+$/g) && walk.options.trim!=='all') {\n\t\t\t\ttext = ' ';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim==='all' || isFirstOrLast ? '' : ' ');\n\t\t\t}\n\t\t\t// skip leading/trailing whitespace\n\t\t\t// if (!text || text===' ' && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\tif ((!text || text===' ') && arr.length>1 && isFirstOrLast) return null;\n\t\t\t// if (!text && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\t// if (!text || text===' ') return null;\n\t\t}\n\t\treturn text;\n\t}\n\tif (n.nodeType!==1) return null;\n\tlet nodeName = String(n.nodeName).toLowerCase();\n\n\t// Do not allow script tags unless explicitly specified\n\tif (nodeName==='script' && !walk.options.allowScripts) return null;\n\n\tlet out = walk.h(\n\t\tnodeName,\n\t\tgetProps(n.attributes),\n\t\twalkChildren(n.childNodes)\n\t);\n\tif (walk.visitor) walk.visitor(out);\n\treturn out;\n}\n\nfunction getProps(attrs) {\n\tlet len = attrs && attrs.length;\n\tif (!len) return null;\n\tlet props = {};\n\tfor (let i=0; i<len; i++) {\n\t\tlet { name, value } = attrs[i];\n\t\tif (name.substring(0,2)==='on' && walk.options.allowEvents){\n\t\t\tvalue  = new Function(value); // eslint-disable-line no-new-func\n\t\t}\n\t\tprops[name] = value;\n\t}\n\treturn props;\n}\n\nfunction walkChildren(children) {\n\tlet c = children && Array.prototype.map.call(children, walk).filter(exists);\n\treturn c && c.length ? c : null;\n}\n\nlet exists = x => x;\n","import parseMarkup from './parse-markup';\nimport toVdom from './to-vdom';\n\nconst EMPTY_OBJ = {};\n\n/** Convert markup into a virtual DOM.\n*\t@param {String} markup\t\tHTML or XML markup (indicate via `type`)\n*\t@param {String} [type=xml]\tA type to use when parsing `markup`. Either `xml` or `html`.\n*\t@param {Function} reviver\tThe JSX/hyperscript reviver (`h` function) to use. For example, Preact's `h` or `ReactDOM.createElement`.\n*\t@param {Object} [map]\t\tOptional map of custom element names to Components or variant element names.\n */\nexport default function markupToVdom(markup, type, reviver, map, options) {\n\tlet dom = parseMarkup(markup, type);\n\n\tif (dom && dom.error) {\n\t\tthrow new Error(dom.error);\n\t}\n\n\tlet body = dom && dom.body || dom;\n\tvisitor.map = map || EMPTY_OBJ;\n\tlet vdom = body && toVdom(body, visitor, reviver, options);\n\tvisitor.map = null;\n\n\n\treturn vdom && vdom.props && vdom.props.children || null;\n}\n\nfunction toCamelCase(name) {\n\treturn name.replace(/-(.)/g, (match, letter) =>letter.toUpperCase());\n}\n\nfunction visitor(node) {\n\tlet name = (node.type || '').toLowerCase(),\n\t\tmap = visitor.map;\n\n\t// eslint-disable-next-line no-prototype-builtins\n\tif (map && map.hasOwnProperty(name)){\n\t\tnode.type = map[name];\n\t\tnode.props = Object.keys(node.props || {}).reduce((attrs,attrName)=>{\n\t\t\tattrs[toCamelCase(attrName)] = node.props[attrName];\n\t\t\treturn attrs;\n\t\t},{});\n\t} else {\n\t\tnode.type =  name.replace(/[^a-z0-9-]/i,'');\n\t}\n\n}\n","let parserDoc;\n\n/** Parse markup into a DOM using the given mimetype.\n *\t@param {String} markup\n */\nexport default function parseMarkup(markup, type) {\n\tlet doc,\n\t\tmime = type==='html' ? 'text/html' : 'application/xml',\n\t\tparserError, wrappedMarkup, tag;\n\n\t// wrap with an element so we can find it after parsing, and to support multiple root nodes\n\tif (type==='html') {\n\t\ttag = 'body';\n\t\twrappedMarkup = '<!DOCTYPE html>\\n<html><body>'+markup+'</body></html>';\n\t}\n\telse {\n\t\ttag = 'xml';\n\t\twrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>'+markup+'</xml>';\n\t}\n\n\t// if available (browser support varies), using DOMPaser in HTML mode is much faster, safer and cleaner than injecting HTML into an iframe.\n\ttry {\n\t\tdoc = new DOMParser().parseFromString(wrappedMarkup, mime);\n\t} catch (err) {\n\t\tparserError = err;\n\t}\n\n\t// fall back to using an iframe to parse HTML (not applicable for XML, since DOMParser() for XML works in IE9+):\n\tif (!doc && type==='html') {\n\t\tdoc = parserDoc || (parserDoc = buildParserFrame());\n\t\tdoc.open();\n\t\tdoc.write(wrappedMarkup);\n\t\tdoc.close();\n\t}\n\n\tif (!doc) return;\n\n\t// retrieve our wrapper node\n\tlet out = doc.getElementsByTagName(tag)[0],\n\t\tfc = out.firstChild;\n\n\tif (markup && !fc) {\n\t\tout.error = 'Document parse failed.';\n\t}\n\n\t// pluck out parser errors\n\tif (fc && String(fc.nodeName).toLowerCase()==='parsererror') {\n\t\t// remove post/preamble to get just the error message as text\n\t\tfc.removeChild(fc.firstChild);\n\t\tfc.removeChild(fc.lastChild);\n\t\tout.error = (fc.textContent || fc.nodeValue || parserError || 'Unknown error');\n\t\t// remove the error from the DOM leaving things nice and tidy\n\t\tout.removeChild(fc);\n\t}\n\n\treturn out;\n}\n\n/** A shared frame is used for the fallback HTML parser, built on-demand. */\nfunction buildParserFrame() {\n\tif (document.implementation && document.implementation.createHTMLDocument) {\n\t\treturn document.implementation.createHTMLDocument('');\n\t}\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n\tframe.setAttribute('sandbox', 'allow-forms');\n\tdocument.body.appendChild(frame);\n\treturn frame.contentWindow.document;\n}\n","import { h as defaultReviver, Component } from 'preact';\nimport markupToVdom from './markup-to-vdom';\n\nlet customReviver;\n\nexport default class Markup extends Component {\n\tstatic setReviver(h) {\n\t\tcustomReviver = h;\n\t}\n\n\tshouldComponentUpdate({ wrap, type, markup }) {\n\t\tlet p = this.props;\n\t\treturn wrap!==p.wrap || type!==p.type || markup!==p.markup;\n\t}\n\n\tsetComponents(components) {\n\t\tthis.map = {};\n\t\tif (components) {\n\t\t\tfor (let i in components) {\n\t\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\t\tif (components.hasOwnProperty(i)) {\n\t\t\t\t\tlet name = i.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, '$1$3-$2$4').toLowerCase();\n\t\t\t\t\tthis.map[name] = components[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender({ wrap=true, type, markup, components, reviver, onError, 'allow-scripts':allowScripts, 'allow-events':allowEvents, trim, ...props }) {\n\t\tlet h = reviver || this.reviver || this.constructor.prototype.reviver || customReviver || defaultReviver,\n\t\t\tvdom;\n\n\t\tthis.setComponents(components);\n\n\t\tlet options = {\n\t\t\tallowScripts,\n\t\t\tallowEvents,\n\t\t\ttrim\n\t\t};\n\n\t\ttry {\n\t\t\tvdom = markupToVdom(markup, type, h, this.map, options);\n\t\t} catch (error) {\n\t\t\tif (onError) {\n\t\t\t\tonError({ error });\n\t\t\t}\n\t\t\telse if (typeof console!=='undefined' && console.error) {\n\t\t\t\tconsole.error(`preact-markup: ${error}`);\n\t\t\t}\n\t\t}\n\n\t\tif (wrap===false) return vdom || null;\n\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tlet c = props.hasOwnProperty('className') ? 'className' : 'class',\n\t\t\tcl = props[c];\n\t\tif (!cl) props[c] = 'markup';\n\t\telse if (cl.splice) cl.splice(0, 0, 'markup');\n\t\telse if (typeof cl==='string') props[c] += ' markup';\n\t\telse if (typeof cl==='object') cl.markup = true;\n\n\t\treturn h('div', props, vdom || null);\n\t}\n}\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","const preact = require('preact');\nconst Markup = require('preact-markup').default;\nconst marked = require('marked');\n\nmodule.exports = Markdown;\n\nfunction Markdown(props, opts) {\n  opts = opts || {};\n  const h = opts.h || preact.h;\n  let markdown;\n  if (typeof props === 'string') {\n    markdown = props;\n    props = {};\n  } else if (props && typeof props.markdown === 'string') {\n    markdown = props.markdown;\n  } else {\n    throw new Error('Invalid arguments. Markdown requires either a `<String>` or object: `{markdown: <String>}`');\n  }\n\n  const markupOpts = props.markupOpts || opts.markupOpts || {};\n  const markdownOpts = props.markdownOpts || opts.markdownOpts || {};\n\n  return h(Markup, Object.assign({\n    markup: marked(markdown, markdownOpts),\n    trim: false,\n    type: 'html',\n  }, markupOpts));\n}\n"],"sourceRoot":""}