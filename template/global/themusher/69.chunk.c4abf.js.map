{"version":3,"sources":["webpack:///./routes/embed/top10.js","webpack:///./routes/embed/style.css","webpack:///./components/dog/scroller.js"],"names":["byBib","a","b","aHas","musher","bib","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","isLoading","contentIsNotLoaded","reloadInSec","reloadLastEpoch","reloadIsActive","MusherInfo","observer","props","initComponent","Math","floor","Date","getTime","setState","tickReloadTimeer","state","updateTimer","this","now","clearTimeout","tick","setTimeout","componentDidMount","componentWillUnmount","render","reloadPercent","util","normalizeBetween","class","style","role","aria-valuenow","aria-valuemin","aria-valuemax","Component","toggleAdminInfo","e","stopPropagation","showAdminInfo","toggleInfo","showInfo","classid","email","onTeamClick","onDogClick","stores","raceStore","isAdmin","userStore","getMusherByBibId","getMusherByBibEmail","team","getTeamById","user","members","find","m","raceClass","getClassById","totals","getTotalsByTeamId","image","getImage","priority","shortname","displayNameShort","dotColor","getRankingColor","title","flag","firstname","lastname","sportsClub","public","onClick","id","href","uuidv4","name","markdown","replaceImages","description","images","markdownOpts","getMarkdownOptions","dogs","map","d","allDogs","distanceKm","length","format","elevation","secToHms","duration","rest","JSON","stringify","TvTop10","loadLiveRaceResults","teamIds","focusOnMushers","getRaceTrackerData","race","raceTrackerRace","getRaceTrackerActiveTeams","loadRaceResults","loadWorkoutSummary","raceid","getWorkoutSummaryActiveTeams","loadRace","selectedClassId","allTeamIds","currentClass","appState","load","selectedClassIds","toggleSelectedClassId","classes","filter","contestants","flat","loadTeams","join","getAllClassesSortedBy","raceTrackerResults","getRacetrackerResults","reload","RELOAD_INTERVAL_IN_SEC","liveRace","toggleFocusOnMusher","target","parentElement","dataset","musherid","handleMusherClick","closest","showModal","modalBib","toggleModal","inputRef","componentWillReceiveProps","nextProps","showTeam","showDog","modalEmail","limit","lastAllowedChangeDate","endDate","setHours","getHours","data","line","lineData","raceTrackerMapLine","parseInt","Bib","contestant","sort","slice","teamid","back","hideTeam","dogid","hideDog","distance","idx","type","data-id","colspan","currentTeam","currentResults","normalizedDuration","isDone","totalWorkoutTimeUsedSec","data-bib","data-musherid","indexOf","nonstop","src","height","onUserClick","module","exports","DogScroller","scrollImages","imageIdx","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","sortByName","dogA","dogB","size","onScroll","dogId","dog","onTouchstart","onTouchend","onTouchmove","className","showName","showPosition"],"mappings":"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","file":"69.chunk.c4abf.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport DogScroller from '../../components/dog/scroller';\nimport Overlay from '../../components/overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport style from './style.css';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\n\nfunction byBib(a, b) {\n    const aHas = typeof a.musher !== 'undefined';\n    const bHas = typeof b.musher !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.musher.bib - b.musher.bib) || 0;\n}\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t\treloadLastEpoch,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n\t\tconst { reloadIsActive, reloadLastEpoch } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass MusherInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    render() {\n        const { showAdminInfo, showInfo } = this.state;\n        const { classid, bib, email, onTeamClick, onUserClick, onDogClick } = this.props;\n\n        const { raceStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n        const musher = bib ? raceStore.getMusherByBibId(bib) : raceStore.getMusherByBibEmail(email);\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassById(classid);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = mu.getRankingColor(musher.bib);\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                    style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                >\n                    {!image && <div class='text-muted' style='font-size: 25px; padding-top: 5px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -20px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.2em;'>\n                    <h6 class='font-weight-light mb-0'>{raceClass.title}</h6>\n                    <h3 class='mb-0'>\n                        {musher.flag} {musher.firstname} {musher.lastname}\n                    </h3>\n                    <h6 class='mb-0'>{musher.sportsClub}</h6>\n                </div>\n            </div>\n\n\n            {team.public > 0 && <>\n                {showInfo ? <>\n                    <button class='btn btn-link float-right' onClick={this.toggleInfo}>\n                        <i class='fas fa-angle-up' /> <Text id='races.hide-info'>Hide info</Text>\n                    </button>\n                </> : <>\n                    <button class='btn btn-link float-right' onClick={this.toggleInfo}>\n                        <i class='fas fa-angle-down' /> <Text id='races.show-info'>Show info</Text>\n                    </button>\n                </>}\n\n                <h3>\n                    {team.public ? <>\n                        <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)}>\n                            {team.name}\n                        </a>\n                    </> : <>\n                        {team.name}\n                    </>}\n                </h3>\n                {showInfo && <>\n                    <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                </>}\n                {team.dogs && <div class='w-100 container-fluid'>\n                    <div class='row pt-2'>\n                        <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={onDogClick} />\n                    </div>\n                </div>}\n            </>}\n\n            {totals && totals.distanceKm && <>\n                <div class='table-responsive-lg'>\n                    <table class='table table-borderless'>\n                        <tbody>\n                            <tr>\n                                <td style='width: 5%;'><i class='fas fa-dog' /></td>\n                                <td style='width: 60%'><Text id='races.dogs'>Dogs</Text></td>\n                                <td style='width: 5%;'>&nbsp;</td>\n                                <td class='text-right' style='width: 30%;'>{team.dogs.length}</td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-road' /></td>\n                                <td><Text id='races.distance'>Distance</Text></td>\n                                <td>&nbsp;</td>\n                                <td class='text-right'><nobr>{totals.distanceKm ? `${util.format(totals.distanceKm, 1)} km` : 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-mountain' /></td>\n                                <td><Text id='races.ascend'>Ascending</Text></td>\n                                <td>&nbsp;</td>\n                                <td class='text-right'><nobr>{totals.elevation ? `${util.format(totals.elevation, 0)} m` : 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-stopwatch' /></td>\n                                <td><Text id='races.race-time'>Racetime</Text></td>\n                                <td><i class='fas fa-clock' /></td>\n                                <td class='text-right'><nobr>{util.secToHms(totals.duration) || 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-bed' /></td>\n                                <td><Text id='races.rest-time'>Rest</Text></td>\n                                <td><i class='fas fa-clock' /></td>\n                                <td class='text-right'><nobr>{util.secToHms(totals.rest) || 'n/a'}</nobr></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </>}\n\n\n            {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                    Toggle admin info\n                </button>\n                {showAdminInfo && <>\n                    <small>\n                        <xmp>\n                            {JSON.stringify(musher, null, 4)}\n                            {JSON.stringify(user, null, 4)}\n                            {JSON.stringify(team, null, 4)}\n                            {JSON.stringify(totals, null, 4)}\n\n                            {/* {\n                                \"firstDate\": \"2021-03-19 11:59\",\n                                \"lastDate\": \"2021-03-20 17:13\",\n                                \"firstEpoch\": 1616151540000,\n                                \"lastEpoch\": 1616256780000,\n                                \"now\": {\n                                    \"$numberDecimal\": \"1642675856939\"\n                                },\n                                \"totalTimeUsedSec\": 26524316,\n                                \"totalWorkoutTimeUsedSec\": 130895,\n                                \"lastDuration\": 25655,\n                                \"team\": 84,\n                                \"count\": 4,\n                                \"distanceKm\": 301.5906237951766,\n                                \"elevation\": 3610.019075719202,\n                                \"duration\": 77343,\n                                \"rest\": 1332,\n                                \"speedAvg\": 8.294634979660305,\n                                \"totalRest\": 54884,\n                                \"loadIndex\": 1080.75,\n                                \"totalKcalRelated\": 544.535560976128,\n                                \"weightedTotalKcal\": 12303.171406247127,\n                                \"flatTotalKcal\": 9424.70699359927,\n                                \"firstGpxStartEpoch\": null,\n                                \"lastGpxStartEpoch\": null\n                            } */}\n\n                        </xmp>\n                    </small>\n                </>}\n            </div>}\n        </>);\n    }\n}\n\n@observer\nclass TvTop10 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    // async loadRace(props = this.props) {\n\t// \tthis.setState({ isLoading: true });\n\t// \tconst { raceStore } = props.stores;\n\t// \tconst { raceid } = props;\n    //     await raceStore.load(raceid);\n    //     const { race } = raceStore;\n\t// \tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n    //         return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t// \t}).flat();\n\t// \tif (allTeamIds.length > 0 && raceid) {\n\t// \t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t// \t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t// \t\traceStore.getWorkoutSummaryActiveTeams();\n\t// \t}\n\t// \traceStore.getAllClassesSortedBy();\n\n\t// \t// Set reload timer\n\t// \tclearTimeout(this.updateTimer.reload);\n\t// \tthis.updateTimer.reload = setTimeout(async () => {\n\t// \t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \t\tthis.setState({ reloadLastEpoch });\n\t// \t\tthis.loadRace();\n\t// \t}, RELOAD_INTERVAL_IN_SEC * 1000);\n\n\t// \tthis.setState({\n\t// \t\tisLoading: false,\n\t// \t\tcontentIsNotLoaded: false,\n\t// \t});\n\t// }\n\n    loadLiveRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { race } = raceStore;\n        await raceStore.getRaceTrackerData(race.raceTrackerRace);\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers);\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n    }\n\n    loadRace = async (props = this.props) => {\n        this.setState({ isLoading: true });\n        const { raceStore, appState } = props.stores;\n        const { raceid, classid } = props;\n        await raceStore.load(raceid);\n        const { race } = raceStore;\n        const { focusOnMushers } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = classid || selectedClassIds[0];\n\n        if (classid) {\n            appState.toggleSelectedClassId(classid, true);\n        }\n\n        const allTeamIds = race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n            })\n            .flat();\n        if (allTeamIds.length > 0) {\n            await raceStore.loadTeams(allTeamIds.join(','));\n        }\n        if (race.liveRace > 0) {\n            await this.loadLiveRaceResults(this.props, allTeamIds, focusOnMushers);\n\n        } else {\n            await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n        }\n\n        // const allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n        //     return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n        // }).flat();\n\n        // if (allTeamIds.length > 0) {\n        //     await raceStore.loadTeams(allTeamIds.join(','));\n        //     if (race.liveRace > 0) {\n        //         await this.loadLiveRaceResults(props, allTeamIds, focusOnMushers);\n\n        //     } else {\n        //         await this.loadRaceResults(props, allTeamIds, focusOnMushers);\n        //     }\n        // }\n        raceStore.getAllClassesSortedBy();\n\n        const currentClass = raceStore.getClassById(selectedClassId);\n        if (currentClass && currentClass.raceTrackerResults) {\n            raceStore.getRacetrackerResults(currentClass.raceTrackerResults);\n        }\n\n        // Set reload timer\n        clearTimeout(this.updateTimer.reload);\n        this.updateTimer.reload = setTimeout(async () => {\n            const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n            this.setState({ reloadLastEpoch });\n            this.loadRace(props);\n        }, RELOAD_INTERVAL_IN_SEC * 1000);\n\n        this.setState({ isLoading: false });\n    }\n\n    toggleFocusOnMusher = (e) => {\n\t\tconst musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n\t\tconst { appState, raceStore } = this.props.stores;\n\t\tappState.toggleFocusOnMusher(musherId);\n\n\t\tconst { focusOnMushers } = appState;\n\n        const { race } = raceStore;\n        if (race.liveRace > 0) {\n            raceStore.getRaceTrackerActiveTeams(null, focusOnMushers);\n        } else {\n            raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers);\n        }\n\t}\n\n    handleMusherClick = (e) => {\n        const { bib } = e.target.closest('tr').dataset;\n        const { showModal } = this.state;\n        this.setState({\n            showModal: !showModal,\n            modalBib: bib,\n        });\n    }\n\n    toggleModal = () => {\n        const { showModal } = this.state;\n        this.setState({\n            showModal: !showModal,\n        });\n    }\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid) {\n            this.loadRace(nextProps);\n        }\n\t}\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage,\n            showTeam, showDog,\n            showModal, modalTitle, modalBib, modalEmail,\n        } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n        const { classid, position = 'right', limit = 100 } = this.props;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], focusOnMushers = [] } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers, raceTrackerResults } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n        const currentClass = race.classes ? race.classes.find(e => e.id === classid) || {} : {};\n\n        const musher = modalBib ? raceStore.getMusherByBibId(modalBib) : raceStore.getMusherByBibEmail(modalEmail);\n        const team = raceStore.getTeamById(musher.team);\n\n        let contestants = [];\n        if (raceTrackerResults && raceTrackerResults.data) {\n            contestants = raceTrackerResults.data.map((line) => {\n                const lineData = raceStore.raceTrackerMapLine(line);\n                const bib = parseInt(lineData.Bib, 10);\n                let contestant = {};\n                if (classes && classes[currentClass.id].contestants) {\n                    contestant = classes[currentClass.id].contestants.find(e => e.musher.bib === bib) || {};\n                }\n                return contestant;\n            });\n        } else if (classes[currentClass.id] && classes[currentClass.id].contestants) {\n            contestants = classes[currentClass.id].contestants.sort(byBib).slice(0, limit).map(contestant => contestant);\n        }\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={team.dogs} />\n            </Overlay>}\n\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; height: calc(100% - ${MARGIN_BOTTOM} - ${MARGIN_TOP});`}>\n                <div class='row'>\n                    <div class='col-12 px-0 position-relative'\n                        style='font-size: 1.5em; line-height: 1.0em;'\n                    >\n                        {/* <div\n                            class='bg-light rounded-lg mr-5 p-4'\n                            style='font-size: 2.0em; line-height: 1.0em;'\n                        > */}\n\n                            {/* <div\n                                class=' text-center py-3 mb-3'\n                                style='background: linear-gradient(#b0b0b0, #e0e0e0, #808080); color: #000000;'\n                            >\n                                <strong>{race.title}</strong>\n                            </div> */}\n\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                                        <div class='col px-0 pt-2'>\n                                            <a\n                                                type='button'\n                                                class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === race.classes.length - 1 && 'rounded-pill-right'} rounded-none ${currentClass.id === classid ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-id={currentClass.id}\n                                                href={`/embed/top10/${race.id}/${currentClass.id}`}\n                                            >\n                                                {currentClass.title}\n                                            </a>\n                                        </div>\n                                    </>)}\n                                </div>\n                            </div>\n\n                            {/* {JSON.stringify(raceTrackerResults.data)} */}\n                            {/* {JSON.stringify(contestants)} */}\n\n                            <table class='table table-sm table-borderless rounded-lg mb-0'>\n                                <thead>\n                                    <tr>\n                                        <td\n                                            colspan='2'\n                                            class='px-4 py-4 overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 10px 0 0 0; font-size: 1.4em;'\n                                        >\n                                            <nobr>{currentClass.title}</nobr>\n                                        </td>\n                                        <td\n                                            class='px-3 text-center py-4 overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 0 10px 0 0 ; font-size: 1.1em;'\n                                        >\n                                            Time\n                                        </td>\n                                    </tr>\n                                </thead>\n                                <tbody\n                                    style='\n                                        background-color: #1C1F4C;\n                                        background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                        background-size: cover !important;\n                                        background-position: 0 0;\n                                    '>\n                                    {contestants && contestants.map((contestant, idx) => {\n                                    // {raceTrackerResults && raceTrackerResults.data && raceTrackerResults.data.map((line, idx) => {\n                                    //     const lineData = raceStore.raceTrackerMapLine(line);\n                                    //     const bib = parseInt(lineData.Bib, 10);\n                                    //     let contestant = {};\n                                    //     if (classes && classes[currentClass.id].contestants) {\n                                    //         contestant = classes[currentClass.id].contestants.find(e => e.musher.bib === bib) || {};\n                                    //     }\n                                    // {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.slice(0, limit).map((contestant, idx) => {\n\n                                        const { musher = {}, currentTeam = {}, currentStages, currentResults = {}, completed, duration,\n                                            normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                            flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                            finishedDate, totalWorkoutTimeUsedSec,\n                                        } = contestant;\n\n                                        const totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n                                        return (<>\n                                            <tr style='border-bottom: 1px solid #7B312F;'\n                                                data-bib={musher.bib}\n                                                onClick={this.handleMusherClick}\n                                            >\n                                                <td\n                                                    class='text-center align-middle ml-0 pl-0'\n                                                    style='width: 50px; color: #ffffff; font-size: 1.2em; line-height: 1.2em;'\n                                                >\n                                                    <div class='d-flex justify-content-start'>\n                                                        <div class='pl-3 pr-2 w-100 clearfix rounded-pill-right' style={`background-color: ${mu.getRankingColor(idx + 1)}`}>\n                                                            {musher.bib || idx + 1}\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='px-3 py-3'\n                                                    style='color: #ffffff; font-size: 1.2em;'\n                                                >\n                                                    <div class='text-overflow' style='line-height: 1.1em;'>\n                                                        <span class='float-right' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-star text-warning' /> : <i class='far fa-star' />}</span>\n                                                        <nobr>\n                                                            {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                            {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                                        </nobr>\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='text-center align-middle'\n                                                    style='width: 150px; color: #ffffff; font-size: 1.2em;'\n                                                >\n\n                                                    {race.nonstop ? <>\n                                                        <nobr>{util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr> */}\n                                                    </> : <>\n                                                        {isDone === 1 ? <>\n                                                            <nobr>{util.secToHms(normalizedDuration) || 'n/a'}</nobr>\n                                                        </> : <>\n                                                            <nobr>{util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr>\n                                                        </>}\n\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr> */}\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr> */}\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br /> */}\n                                                        {/* {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>} */}\n                                                        {/* {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>} */}\n                                                    </>}\n                                                    {/* {raceStatus(musher)} */}\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                    {/* <tr>\n                                        <td\n                                            colspan='3'\n                                            class='text-center'\n                                        >\n                                            <img src='https://themusher.app/assets/logo-qpaws-dark.png' height='70' />\n                                        </td>\n                                    </tr> */}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td\n                                            colspan='3'\n                                            class='px-5 py-4 text-center overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 0 0 10px 10px; font-size: 1.1em;'\n                                        >\n                                            <nobr class='mr-4'>QPaws app</nobr>\n\n                                            <img src='https://themusher.app/assets/appstore-download.png' height='40' class='ml-5 mr-1' />\n                                            <img src='https://themusher.app/assets/playstore-download.png' height='40' class='mx-1' />\n\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n\n                        {/* </div> */}\n\n\n                    </div>\n                        {showModal && <>\n                            <div\n                                class='position-absolute'\n                                style='\n                                    top: 0px;\n                                    left: 0px;\n                                    z-index: 9999;\n                                    width: 100%;\n                                    height: 100%;\n                                    background-color: rgba(0,0,0,0.6);\n                                '\n                                onClick={this.toggleModal}\n                            >\n                                <div\n                                    class='position-absolute rounded rounded-lg pt-3 pb-3 px-2 text-white'\n                                    style='\n                                        top: 50%;\n                                        left: 50%;\n                                        transform: translate(-50%, -50%);\n                                        width: 90%;\n                                        max-width: 800px;\n                                        max-height: 600px;\n                                        overflow: auto;\n                                        background-color: #1C1F4C;\n                                        background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                        background-size: cover !important;\n                                        background-position: 0 0;\n                                        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n                                    '\n                                >\n                                    <button class='btn btn-primary btn-sm float-right position-absolute' style='top: 5px; right: 5px;'>\n                                        <i class='fas fa-times' />\n                                    </button>\n\n                                    <MusherInfo\n                                        stores={this.props.stores}\n                                        bib={modalBib}\n                                        classid={classid}\n                                        onTeamClick={this.onTeamClick}\n                                        onUserClick={this.onUserClick}\n                                        onDogClick={this.onDogClick}\n                                    />\n                                </div>\n                            </div>\n                        </>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default TvTop10;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__4nHll\",\"hoverElement\":\"hoverElement__rkj2s\",\"hoverelementhide\":\"hoverelementhide__10QkM\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n"],"sourceRoot":""}