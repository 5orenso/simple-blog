{"version":3,"sources":["webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["kmToMiles","value","util","format","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","loadedTime","isLoading","offset","limit","submenu","workoutFilter","sessionid","Date","getTime","dataFields","Workouts","observer","Component","constructor","props","super","loadAll","async","state","setState","workoutStore","userStore","messageStore","stores","currentTeam","currentMonth","getMonth","currentYear","getFullYear","month","year","Promise","all","loadWorkouts","team","loadWorkoutSummary","loadWorkoutPlans","getNotifications","getUnReadMessages","loadStravaActivities","loadGarminActivities","loadTeams","this","load","query","addData","setLoadMore","unsetLoadMore","seasonStart","workoutPlanStore","user","settings","imperial","seasonYear","workoutPlans","workoutPlanCurrent","id","prepareWeekGraphs","updateKeyValue","resetGraphPlanWeekDistanceCurrent","chooseSubmenu","e","target","parentElement","dataset","menu","chooseDay","day","dd","mm","yyyy","w","date","d","getDate","m","y","parseInt","renderContent","obj","appState","workout","showDate","wrapperClasses","wrapperClassesRow","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","teamStore","skipMusherWorkoutSummary","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummary","getWorkoutSummaryDay","daysBack","componentWillMount","componentWillUnmount","clearInterval","cleanupMemory","componentDidMount","checkCordova","componentWillReceiveProps","nextProps","render","scrolledDown","workoutPlan","workoutSummaryWeekDay","language","MONTHS","getMonths","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","planMonth","sumWorkoutPlanMonth","summaryMonth","findWorkoutSummaryMonth","percentComplete","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","callback","key","data-menu","onClick","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","smallUnit","url","section","showExtra","basehref","showNavigation","showHeader","strava","activities","garmin","name","data","wrapperClassNames","contentClassNames","dataValues","type","fields","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","monthRange","prevSeasonMonths","xTicksAll","weekRange","map","wo","partSize","xTicks","i","l","push","scope"],"mappings":"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","file":"route-workouts.chunk.729c3.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n\nimport FastList from '../../components/team/fastList';\n\nfunction kmToMiles(value) {\n    return util.format(0.621371 * value, 1);\n}\n\nconst initialState = {\n\tloadedTime: 0,\n\tisLoading: false,\n\toffset: 0,\n\tlimit: 5,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n\tsessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadAll = async (props = this.props) => {\n\t\tconst { limit, offset } = this.state;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore, messageStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n        // await userStore.getInfo();\n\t\tawait Promise.all([\n\t\t\tthis.loadWorkouts({ team: currentTeam, year, month, limit, offset }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tmessageStore.getUnReadMessages(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(props),\n\t\t]);\n\t\tthis.setState({\n\t\t\tloadedTime: new Date().getTime(),\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tloadWorkouts = ({ team, year, month, limit, offset }) => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst append = offset > 0;\n\t\tworkoutStore.load({\n\t\t\tquery: {\n\t\t\t\tteam,\n\t\t\t\tyear,\n\t\t\t\tmonth,\n\t\t\t},\n\t\t\tlimit,\n\t\t\toffset,\n\t\t\taddData: ['publicTeams', 'publicUsers'],\n\t\t}, append);\n\t}\n\n    setLoadMore = () => {\n        const { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\n        workoutStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadWorkouts({ team: currentTeam, year, month, limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { workoutStore } = this.props.stores;\n        workoutStore.setLoadMore(() => {});\n    }\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { user } = userStore;\n        const { settings = {} } = user;\n\t\tconst { imperial } = settings;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({\n\t\t\t\tquery: {\n\t\t\t\t\tteam: currentTeam,\n\t\t\t\t\tseasonYear: seasonStart,\n\t\t\t\t},\n\t\t\t\taddData: ['tips'],\n\t\t\t});\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year, imperial });\n\t\t\t} else {\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlan', {});\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlans', []);\n\t\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\trenderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        return (<>\n\t\t\t<Workout\n\t\t\t\tstores={this.props.stores}\n\t\t\t\tworkout={obj}\n\t\t\t\tshowDate={true}\n\t\t\t\twrapperClasses={'w-100'}\n\t\t\t\twrapperClassesRow={''}\n\t\t\t/>\n        </>);\n    }\n\n\t// Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { workoutStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => workoutStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n\tcomponentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentWillUnmount() {\n        const { workoutStore, stravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n        workoutStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        this.unsetLoadMore();\n\t\tworkoutStore.cleanupMemory();\n    }\n\t// /Scroll views timer\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadAll();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t\tthis.setLoadMore();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadAll(nextProps);\n        }\n    }\n\n\trender() {\n        const { scrolledDown } = this.props;\n\t\tconst { isLoading, submenu, handleIntersection, sessionid, loadedTime } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user, workoutSummaryWeekDay = [] } = userStore;\n        const { language = 'en', settings = {} } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\t\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst { stravaActivities = [] } = stravaActivityStore;\n\t\tconst { garminActivityDetails = [] } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top' style={`margin-top: ${scrolledDown > 0 ? 0 : SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'}; transition: all 0.3s ease-in-out;`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* <xmp>\n\t\t\t\ttotalTime: {totalTime}<br />\n\t\t\t\tcordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams)}<br />\n\t\t\t\t</xmp> */}\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={currentSpeed * 3.6} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistance / 1000} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadAll} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-1'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-left rounded-none ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-right rounded-none ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={settings.imperial ? `${kmToMiles(planMonth)} mi` : `${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={settings.imperial ? `${kmToMiles(summaryMonth)} mi` : `${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={totalSpeedavgMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<WorkoutStatus\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}-${settings.imperial}`}\n\t\t\t\t\t\t\t\tshowExtra={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}-${loadedTime}`}\n\t\t\t\t\t\t\tshowNavigation={true}\n\t\t\t\t\t\t\tshowHeader={true}\n\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t<div class='row mt-3'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\t\t\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t{user && user.strava && <>\n\t\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activities={stravaActivities} key={`strava-${currentTeam}-${stravaActivities.length}`} />\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t{user && user.garmin && <>\n\t\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activities={garminActivityDetails} key={`garmin-${currentTeam}-${garminActivityDetails.length}`} />\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t{/* <Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t\t</Text> */}\n\t\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<FastList\n\t\t\t\t\t\t\t\tdata={workoutsFiltered}\n\t\t\t\t\t\t\t\twrapperClassNames={'row pb-4'}\n\t\t\t\t\t\t\t\tcontentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n\t\t\t\t\t\t\t\trenderContent={this.renderContent}\n\t\t\t\t\t\t\t\tdataFields={dataFields}\n\t\t\t\t\t\t\t\tdataValues={{ type: '11' }}\n\t\t\t\t\t\t\t\thandleIntersection={handleIntersection}\n\t\t\t\t\t\t\t\tsessionid={sessionid}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* {workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t\t))} */}\n\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>\n\t\t\t\t</>}\t\t\t\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { isLoading, year = currentYear, month = currentMonth, showHeader = true } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { user } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <div class='table-responsive-md'>\n                        <table class='table table-sm table-striped font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-center'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart - 1} - {seasonStart}</nobr></th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart} - {seasonStart + 1}</nobr></th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}