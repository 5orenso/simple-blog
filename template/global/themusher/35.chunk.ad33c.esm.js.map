{"version":3,"sources":["webpack:///./routes/embed/style.css","webpack:///./routes/embed/chiplist.js"],"names":["module","exports","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","OneTeam","observer","Component","constructor","props","super","gotoBib","bib","this","state","raceid","classid","route","checkForEnter","e","key","setState","isLoading","raceStore","stores","load","race","allTeamIds","classes","filter","currentClass","contestants","length","map","musher","team","flat","loadTeams","join","loadWorkoutSummary","getWorkoutSummaryActiveTeams","getAllClassesSortedBy","componentDidMount","loadRace","render","getMusherByBibId","getTeamById","user","members","find","m","email","image","getImage","priority","size","class","style","hoverElement","hoverelementonly","type","onInput","linkstate","onKeyDown","onClick","firstname","lastname","name","flag","sportsClub","dogs","dog","gender","birth","util","age","deceased","isoDate","chipId"],"mappings":"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","file":"35.chunk.ad33c.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__4nHll\",\"hoverElement\":\"hoverElement__rkj2s\",\"hoverelementhide\":\"hoverelementhide__10QkM\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\nimport { route } from 'preact-router';\n\nimport mu from '../../lib/musher-util';\n\nimport style from './style.css';\n\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {};\n\n@observer\nclass OneTeam extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst { raceid } = props;\n        await raceStore.load(raceid);\n        const { race } = raceStore;\n\t\tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n            return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t\t}).flat();\n\t\tif (allTeamIds.length > 0 && raceid) {\n\t\t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t\t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t\t\traceStore.getWorkoutSummaryActiveTeams();\n\t\t}\n\t\traceStore.getAllClassesSortedBy();\n\t}\n\n    gotoBib = () => {\n        const { bib } = this.state;\n        const { raceid, classid } = this.props;\n        route(`/embed/chiplist/${raceid}/${classid}/${bib}`);\n    }\n\n    checkForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.gotoBib();\n        }\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    render() {\n        const { goto, gotoTitle, routerName, bib } = this.props;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\n        const musher = raceStore.getMusherByBibId(bib);\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const image = mu.getImage({ user, team, priority: 'user', size: 's3LargeLink' });\n\n        return (<>\n            <div class={`fixed-top ${style.hoverElement}`} style='height: 100px;'>\n                <div class={`${style.hoverelementonly}`}>\n                    <div class={`row`}>\n                        <div class='col form-inline'>\n                            <div class='form-group'>\n                                <label class='text-success mr-2'>Enter Bib</label>\n                                <input\n                                    class='form-control form-control-lg text-success border-success'\n                                    style='background-color: inherit;'\n                                    type='text'\n                                    onInput={linkstate(this, 'bib')}\n                                    onKeyDown={this.checkForEnter}\n                                />\n                                <button\n                                    type='button'\n                                    class='btn btn-lg btn-outline-success'\n                                    onClick={this.gotoBib}\n                                >Show Bib</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\t\t\t<div class='container-fluid position-relative' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP}; height: calc(100% - ${MARGIN_BOTTOM} - ${MARGIN_TOP});`}>\n\n                {image && <div class='d-flex'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedLarge`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                    >\n                        &nbsp;\n                    </div>\n                </div>}\n\n                <h1>{bib}: <nobr>\n                    {musher.firstname ? <>\n                        <span style='font-weight: 300;'>{musher.firstname}</span> <span style='font-weight: 600;'>{musher.lastname}</span>\n                    </> : <>\n                        {musher.name}\n                    </>}\n                </nobr></h1>\n                {musher.flag && <div class='float-left pt-1 mr-3' style='font-size: 1.5em; line-height: 0.8em;'>{musher.flag}</div>} {musher.sportsClub}\n\n                <table class='table table-striped table-bordered'>\n                    <thead>\n                        <th>Dog</th>\n                        <th>Name</th>\n                        <th>Gender</th>\n                        <th>Age</th>\n                        <th>Birth</th>\n                        <th>ChipID</th>\n                    </thead>\n                    <tbody>\n                        {team && team.dogs && team.dogs.map(dog => <>                        \n                            <tr>\n                                <td>&nbsp;</td>\n                                <td>{dog.name}</td>\n                                <td>{dog.gender}</td>\n                                <td>{dog.birth && <>{util.age(dog.birth, dog.deceased)}</>}</td>\n                                <td>{util.isoDate(dog.birth)}</td>\n                                <td>{dog.chipId}</td>\n                            </tr>\n                        </>)}\n                    </tbody>\n                </table>\n\n                {/* <xmp class='text-dark'>musher: {JSON.stringify(musher, null, 4)}</xmp> */}\n                {/* <xmp class='text-dark'>user: {JSON.stringify(user, null, 4)}</xmp> */}\n                {/* <xmp class='text-dark'>team: {JSON.stringify(team, null, 4)}</xmp> */}\n            </div>\n        </>);\n    }\n}\n\nexport default OneTeam;\n"],"sourceRoot":""}