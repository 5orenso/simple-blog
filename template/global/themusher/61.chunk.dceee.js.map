{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/dog/dogs.js","webpack:///./components/form/files.js","webpack:///./routes/workouts/edit.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["initialState","ScrollIntoView","observer","props","state","container","componentDidMount","this","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Component","placeholder","id","name","getPlaceholder","newPlaceholder","unique","Date","getTime","util","randomPassword","List","isDraggingOver","provided","snapshot","innerRef","children","className","class","droppableProps","style","borderStyle","width","Dog","removeThisPlaceholder","removePlaceholder","idx","list","isDragging","draggableStyle","dog","draggableProps","dragHandleProps","userSelect","background","maxWidth","height","onClick","image","s3ThumbLink","ucfirst","shortname","filterby","get","Dogs","toggleDog","e","dogId","value","action","target","closest","dataset","parseInt","object","type","elementtype","field","updateField","isNew","showPositions","toJS","indexOf","splice","push","skipTimer","singleValue","setState","filterText","dndDogs","findAllDogsInTeams","stores","dogStore","dogs","currentTeam","selectedTeams","teams","currentTeamId","filter","team","some","r","map","addAllDogsInTeam","allDogsInTeam","dogFilter","allDogs","defaultDogsRight","n","Math","ceil","length","defaultDogsLeft","dogsLeft","find","a","dogsRight","idxLeft","findIndex","idxRight","dogPositionUpdated","updateDogPositions","addPlaceholderLeft","addPlaceholderRight","clearAllDogs","resetDogPositions","toggleSearchField","showSearchField","getList","onDragEnd","result","source","destination","droppableId","items","startIndex","endIndex","Array","from","reorder","index","droppableSource","droppableDestination","sourceClone","destClone","move","datatype","clearDogPositions","changeFilter","set","loadDog","getFilteredDogs","match","RegExp","getNestedValue","filteredDogs","load","query","deceased","addData","componentWillReceiveProps","nextProps","userStore","user","language","saved","title","icon","help","teamNames","findTeam","for","onInput","linkState","selected","fields","total","isArray","dogStatus","findDogstatus","status","dogPosition","findDogposition","position","dogHistoryStatuses","findHistoryStatuses","data-id","format","findHarness","harness","birth","age","gender","specialNeeds","v","isoDate","endDate","key","draggableId","Files","handleAddImage","file","files","uploadStatus","before","after","autoOpen","apiUrl","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","newWorkout","InputNew","workoutStore","updateObjectKeyValue","updateDuration","isUndefined","onInputDuration","decDuration","newValue","incDuration","setDateToNow","undefined","setTimeToNow","isoTime","setRightValue","rightValueReal","displayValue","datalist","min","max","step","rightValue","maxValue","secToHms","checkNested","yr","instant","details","date","air_temperature","wind_speed","windDirection","wind_from_direction","cloud_area_fraction","air_pressure_at_sea_level","relative_humidity","aria-describedby","el","hh","floor","mi","data-name","data-field","checked","rows","onKeyUp","resizeTextarea","onFocus","Input","workout","parts","split","isNaN","ss","handleImageErrored","onerror","setTimeout","src","removeImage","parentElement","removeMainImage","setValue","insertValue","asNumber","images","img","s3SmallLink","onError","data-value","data-type","data-elementtype","Mushers","toggleMusher","musherId","mushers","musher","firstname","lastname","email","Teams","toggleTeam","teamId","selectTeam","removeTeam","addTeam","setCurrentTeam","isDefined","highlight","isPrimary","isSecondary","hintTeam","role","Tracks","toggleFilter","showAll","toggleTrack","trackId","track","types","DAY_OF_WEEK","getDays","distanceKm","elevation","dayOfWeek","getDay","tracks","trackFilter","filteredTracks","hintTrack","Types","updateTextField","toggleType","typeId","raceStore","hasRaces","getSignupByUserEmail","lang","Intensities","intensities","intensity","hintIntensity","Equipments","toggleEquipment","equipmentId","equipments","equipment","RaceInProgress","raceInProgress","activeRace","race","WorkoutsEdit","loadAll","loadDogs","loadWorkout","loadRaceInProgress","lastWorkout","fallbackTeam","lastUsedTracks","workouts","createNew","skipUpdate","limit","sort","duration","rest","rating","sledWeight","w","d","isLoading","insertWorkout","response","insert","PubSub","publish","topics","STATUS_MESSAGE","message","error","resetDog","getInfo","route","data","updateFieldValue","totalDistance","gpx","gpxInfo","maxSpeed","avgSpeed","ascent","decent","startLatlng","endLatlng","updateObject","roundTo","speedmax","speedAvg","save","localObjectValue","parseFloat","doUpdateField","clearTimeout","updateTimer","back","history","goBack","getYrWeather","firstPoint","midPoint","weather","weatherMid","yrValue","yrDate","workoutDate","getFirstPoint","getMidPoint","getWeather","lat","lon","altitude","temperature","chooseSubmenu","submenu","menu","toggleAdminDebug","showAdminDebug","updateKeyValue","saveField","viewmode","appState","isAdmin","insertStatus","raceTeams","isStationary","data-menu","public","isLocked","minEpoch","startTime","maxEpoch","endTime","avgMovingSpeeds","avgGpsSpeed","avgGpsMovingSpeed","calculatedTotalDistance","calculatedAscend","calculatedDescend","descent","mapId","geojson","geoJSON","Images","addToImages","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","Object","keys","isImage","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax"],"mappings":"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","file":"61.chunk.dceee.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst placeholder = {\n    id: 0,\n    name: 'empty',\n};\n\nconst getPlaceholder = () => {\n    const newPlaceholder = { ...placeholder };\n    newPlaceholder.unique= `${new Date().getTime()}-${util.randomPassword()}`;\n    return newPlaceholder;\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    // padding: grid * 2,\n    // margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"#808080\" : \"\",\n    maxWidth: 92,\n    height: 100,\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    borderStyle: isDraggingOver ? \"dashed\" : \"\",\n    // background: isDraggingOver ? \"#a0a0a0\" : \"\",\n    // padding: grid,\n    width: 110,\n});\n\nclass List extends Component {\n  render() {\n    const { provided, snapshot, innerRef, children, className } = this.props;\n    return (\n        <div class={`h-100 border ${className}`} {...provided.droppableProps} ref={innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n        >\n            {children}\n        </div>\n    );\n  }\n}\n\n\nclass Dog extends Component {\n    removeThisPlaceholder = () => {\n        const { removePlaceholder = () => {}, idx, list } = this.props;\n        removePlaceholder({ idx, list });\n    }\n\n    render() {\n        const { provided, snapshot, innerRef, dog } = this.props;\n        return (\n            <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={innerRef}\n                class='mx-2 my-2 p-2'\n                style={getItemStyle(\n                    snapshot.isDragging,\n                    provided.draggableProps.style\n                )}\n            >\n                {dog.id === 0 ? (\n                    <>\n                        <div>\n                            <div class={`text-center border rounded-circle imageRounded text-muted pt-2`}>\n                                <span class='font-weight-lighter' style='font-size: 35px;'>&nbsp;</span>\n                            </div>\n                            <div class='text-center'>\n                                <button class='btn btn-sm btn-link float-right p-0' onClick={this.removeThisPlaceholder}>\n                                    <i class='fas fa-trash-alt' />\n                                </button>\n                                &nbsp;\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div>\n                            <div class={`text-center border rounded-circle imageRounded text-muted pt-2`} style={`${dog.image ? `background-image: url(\"${dog.image.s3ThumbLink}\");` : ''}`}>\n                                {/* {!dog.image && <i class='fas fa-dog' style='font-size: 20px;' />} */}\n                                {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                            </div>\n                            <div class='text-center'>\n                                <small>\n                                    {dog.shortname || dog.name}<br />\n                                </small>\n\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\n\nconst initialState = {\n    filterby: util.get('dogs-filter'),\n};\n\n@observer\nclass Dogs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dogsLeft: [],\n            dogsRight: [],\n            ...initialState,\n        };\n    }\n\n    toggleDog = async (e) => {\n        const { id } = e.target.closest('#dogContainer').dataset;\n        const dogId = parseInt(id, 10);\n        const { object, type, elementtype, field, updateField, isNew, showPositions } = this.props;\n        const value = toJS(object[field]) || [];\n        const idx = value.indexOf(dogId);\n        let action;\n        if (idx > -1) {\n            value.splice(idx, 1);\n            action = 'remove';\n        } else {\n            value.push(dogId);\n            action = 'add';\n        }\n        await updateField({ id: object.id, field, value, type, elementtype, isNew, skipTimer: true, singleValue: dogId });\n        this.setState({\n            filterText: '',\n        });\n        if (showPositions) {\n            this.dndDogs({ dogId, action });\n        }\n    }\n\n    findAllDogsInTeams = () => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object, currentTeam = {} } = this.props;\n        const selectedTeams = toJS(object.teams || []);\n        const currentTeamId = currentTeam.id;\n        const filter = (e) => {\n            if (e.team === currentTeamId || (e.teams && e.teams.indexOf(currentTeamId) > -1)) {\n                return true;\n            }\n            if (selectedTeams.indexOf(e.team) > -1) {\n                return true;\n            }\n            if (e.teams) {\n                return e.teams.some(r => selectedTeams.indexOf(r) >= 0);\n            }\n            return false;\n        };\n        const allDogsInTeam = dogs.filter(filter).map(e => e.id);\n        return allDogsInTeam;\n    }\n\n    addAllDogsInTeam = async () => {\n        const { object, type, elementtype, field, updateField, isNew } = this.props;\n        const allDogsInTeam = this.findAllDogsInTeams();\n        await updateField({ id: object.id, field, value: allDogsInTeam, type, elementtype, isNew, skipTimer: true });\n    }\n\n    // toggleFilter = () => {\n    //     const { showAll } = this.state;\n    //     this.setState({\n    //         showAll: showAll ? 0 : 1,\n    //     });\n    //     this.loadDog();\n    // }\n\n    // toggleSelectedFilter = () => {\n    //     const { showOnlySelected } = this.state;\n    //     this.setState({\n    //         showOnlySelected: showOnlySelected ? 0 : 1,\n    //     });\n    // }\n\n    dndDogs = ({ dogId, action }) => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object } = this.props;\n        const dogFilter = object.dogs ? (e) => object.dogs.indexOf(e.id) > -1 : () => false;\n        const allDogs = toJS(dogs);\n        const filterLeft = (dogId) => dogId === 0 || (allDogs.find(a => a.id === dogId) && object.dogsRight.indexOf(dogId) === -1);\n        const filterRight = (dogId) => dogId === 0 || (allDogs.find(a => a.id === dogId) && object.dogsLeft.indexOf(dogId) === -1);\n\n        const defaultDogsRight = allDogs.filter(dogFilter);\n        const n = Math.ceil(defaultDogsRight.length / 2);\n        const defaultDogsLeft = defaultDogsRight.splice(0, n);\n\n        let dogsLeft = [];\n        if (object.dogsLeft && object.dogsLeft.length > 0) {\n            dogsLeft = object.dogsLeft.filter(filterLeft)\n                .map((dogId) => {\n                    const dog = allDogs.find(e => e.id === dogId) || getPlaceholder();\n                    // console.log('dogId', dogId, dog);\n                    return dog;\n                });\n        }\n\n        let dogsRight = [];\n        if (object.dogsRight && object.dogsRight.length > 0) {\n            dogsRight = object.dogsRight.filter(filterRight)\n                .map((dogId) => {\n                    const dog = allDogs.find(e => e.id === dogId) || getPlaceholder();\n                    // console.log('dogId', dogId, dog);\n                    return dog;\n                });\n        }\n\n\n        if (action === 'add') {\n            const dog = dogs.find(e => e.id === dogId);\n            if (dog) {\n                if (dogsLeft.length > dogsRight.length) {\n                    dogsRight.push(dog);\n                } else {\n                    dogsLeft.push(dog);\n                }\n            }\n        }\n        if (action === 'remove') {\n            const idxLeft = dogsLeft.findIndex(e => e.id === dogId);\n            if (idxLeft > -1) {\n                dogsLeft.splice(idxLeft, 1);\n            }\n            const idxRight = dogsRight.findIndex(e => e.id === dogId);\n            if (idxRight > -1) {\n                dogsRight.splice(idxRight, 1);\n            }\n        }\n        // I owe Mariska Kleintjens a beer for this one: \n        if (dogsLeft.length === 0 && dogsRight.length === 0) {\n            dogsLeft = defaultDogsLeft;\n            dogsRight = defaultDogsRight;\n        }\n        if (action) {\n            this.setState({\n                dogsLeft,\n                dogsRight,\n                dogPositionUpdated: true,\n            }, () => this.updateDogPositions());\n            \n        } else {\n            this.setState({\n                dogsLeft,\n                dogsRight,\n            });\n        }\n    }\n\n    addPlaceholderLeft = () => {\n        const { dogsLeft = [] } = this.state;\n        dogsLeft.push(getPlaceholder());\n        this.setState({\n            dogsLeft,\n            dogPositionUpdated: true,\n        });\n    }\n\n    addPlaceholderRight = () => {\n        const { dogsRight = [] } = this.state;\n        dogsRight.push(getPlaceholder());\n        this.setState({\n            dogsRight,\n            dogPositionUpdated: true,\n        });\n    }\n\n    removePlaceholder = ({ idx, list }) => {\n        if (list === 'dogsLeft') {\n            const { dogsLeft = [] } = this.state;\n            dogsLeft.splice(idx, 1);\n            this.setState({\n                dogsLeft,\n                dogPositionUpdated: true,\n            });\n        }\n        if (list === 'dogsRight') {\n            const { dogsRight = [] } = this.state;\n            dogsRight.splice(idx, 1);\n            this.setState({\n                dogsRight,\n                dogPositionUpdated: true,\n            });\n        }\n    }\n\n    async loadDog(props = this.props) {\n        const { showPositions } = this.props;\n\t\tconst { dogStore } = props.stores;\n        await dogStore.load({ query: { deceased: 0 }, addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n\n        if (showPositions) {\n            this.dndDogs({});\n        }\n        this.getFilteredDogs();\n    }\n\n    clearAllDogs = async () => {\n        const { object, type, elementtype, field, updateField, isNew } = this.props;\n        await updateField({ id: object.id, field, value: [], type, elementtype, isNew, skipTimer: true });\n        this.resetDogPositions();\n    }\n    \n    toggleSearchField = () => {\n        const { showSearchField } = this.state;\n        this.setState({\n            showSearchField: showSearchField ? null : 1,\n        });\n    }\n\n    getList = id => this.state[id];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n            this.setState({\n                [source.droppableId]: items,\n                dogPositionUpdated: true,\n            });\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                dogsLeft: result.dogsLeft,\n                dogsRight: result.dogsRight,\n                dogPositionUpdated: true,\n            });\n        }\n    }\n\n    updateDogPositions = async () => {\n        const { dogsLeft = [], dogsRight = [] } = this.state;\n        const { object, updateField, isNew } = this.props;\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft.map(e => e.id), isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight.map(e => e.id), isNew, datatype: 'array' });\n        this.setState({ dogPositionUpdated: false });\n    }\n\n    resetDogPositions = async () => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object, updateField, isNew } = this.props;\n        const dogFilter = (e) => object.dogs.indexOf(e.id) > -1;\n        const allDogs = toJS(dogs);\n\n        const dogsRight = allDogs.filter(dogFilter);\n        const n = Math.ceil(dogsRight.length / 2);\n        const dogsLeft = dogsRight.splice(0, n);\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft.map(e => e.id), isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight.map(e => e.id), isNew, datatype: 'array' });\n        this.setState({\n            dogsLeft,\n            dogsRight,\n            dogPositionUpdated: false,\n        });\n    }\n\n    clearDogPositions = async () => {\n        const { object, updateField, isNew } = this.props;\n        const dogsRight = [];\n        const dogsLeft = [];\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft, isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight, isNew, datatype: 'array' });\n        this.setState({\n            dogsLeft,\n            dogsRight,\n            dogPositionUpdated: false,\n        });\n    }\n\n    changeFilter = (e) => {\n\t\tconst value = e.target.value;\n\t\tthis.setState({\n\t\t\tfilterby: value,\n\t\t});\n        util.set('dogs-filter', value);\n        this.loadDog();\n\t}\n\n    getFilteredDogs = (props = this.props) => {\n        const { filterby, filterText } = this.state;\n        const { object, filter = () => true } = props;\n        const { dogStore } = this.props.stores;\n\t\tconst { dogs = [] } = dogStore;\n\n        let dogFilter = filter;\n        if (object.dogs) {\n            switch (filterby) {\n                case 'all':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = () => true;\n                    }\n                    break;\n                case 'onlySelected':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = (e) => object.dogs.indexOf(e.id) > -1;\n                    }\n                    break;\n                case 'onlyTeam':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = (e) => object.team === e.team || object.dogs.indexOf(e.id) > -1;\n                    }\n                    break;        \n                case 'leadOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.lead.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'pointOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.point.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'teamOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.team.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'wheelOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.wheel.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n            }\n        }\n        let filteredDogs = dogs.filter(dogFilter);\n        this.setState({\n            filteredDogs,\n        })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.filter !== this.props.filter) {\n            this.getFilteredDogs(nextProps);\n        }\n    }\n\n    componentDidMount() {\n        this.loadDog();\n    }\n\n    render() {\n        const { filterby, filterText, showSearchField, dogsLeft = [], dogsRight = [], dogPositionUpdated, filteredDogs = [] } = this.state;\n        const { userStore, dogStore } = this.props.stores;\n\t\tconst { dogs = [] } = dogStore;\n        const { isAdmin, user } = userStore;\n        const { language = 'en' } = user;\n\n        const { saved = {}, object, field, title, icon, help, showPositions = false, currentTeam = {} } = this.props;\n        const value = toJS(object[field]) || [];\n\n        const allDogsInTeam = this.findAllDogsInTeams();\n        const teamNames = object.teams ? object.teams.map(e => userStore.findTeam(e)) : [];\n\n        return (\n            <div class={`form-group  mb-5 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <span class='float-right' onClick={this.toggleSearchField}>\n                    <i class='fas fa-search' />\n                </span>\n                <button class='btn btn-sm btn-link float-right mr-5' onClick={this.clearAllDogs}>\n                    <i class='fas fa-eraser' /> <Text id='dog.dogs.remove-all-dogs'>Fjern alle hundene</Text>\n                </button>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                <div class='container-fluid px-0'>\n                    {showSearchField && <div class='row'>\n                        <div class='col-12'>\n                            <Localizer>\n                                <input\n                                    class='form-control form-control-sm'\n                                    type='text'\n                                    placeholder={<Text id='dog.dogs.search-for-dogs'>Søk etter hund</Text>}\n                                    value={filterText}\n                                    onInput={linkState(this, 'filterText')}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>}\n                    <div class='row'>\n                        <div class='col-12'>\n                            <div class='form-row align-items-center'>\n                                <div class='col-auto my-2 mx-auto'>\n                                    <select class='custom-select'\n                                        style='background-color: inherit; border: none; padding-top: 0; padding-bottom: 0; height: 1.4em; font-size: 0.8em;'\n                                        onInput={this.changeFilter}\n                                    >\n                                        <option value='' selected={!filterby}>-- <Text id='dog.dogs.choose-filter'>Choose filter</Text> ---</option>\n                                        <option value='all' selected={filterby === 'all'}><Text id='dog.dogs.show-all'>Vis alle</Text></option>\n                                        <option value='onlySelected' selected={filterby === 'onlySelected'}><Text id='dog.dogs.show-only-selected'>Vis kun valgte</Text></option>\n                                        <option value='onlyTeam' selected={filterby === 'onlyTeam'}><Text id='dog.dogs.show-only-team-dogs'>Vis kun hundene i teamet</Text></option>\n                                        <option value='leadOnly' selected={filterby === 'leadOnly'}><Text id='dog.dogs.show-lead-dogs-only'>Vis kun lederhunder</Text></option>\n                                        <option value='pointOnly' selected={filterby === 'pointOnly'}><Text id='dog.dogs.show-point-dogs-only'>Vis kun pointhunder</Text></option>\n                                        <option value='teamOnly' selected={filterby === 'teamOnly'}><Text id='dog.dogs.show-team-dogs-only'>Vis kun teamhunder</Text></option>\n                                        <option value='wheelOnly' selected={filterby === 'wheelOnly'}><Text id='dog.dogs.show-wheel-dogs-only'>Vis kun wheelhunder</Text></option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='row'>\n                        {allDogsInTeam.length > 0 && <>\n                            <button class='btn btn-primary btn-block'\n                                onClick={this.addAllDogsInTeam}\n                            >\n                               <i class='fas fa-plus mr-2' /> <Text id='dog.dogs.add-all-in-team' fields={{ total: allDogsInTeam.length }}>Add all dogs in team</Text>{currentTeam.name ? `: ${currentTeam.name}` : ''}\n                               {teamNames && teamNames.length > 0 && <span class='font-weight-lighter'>\n                                    , {teamNames.map((name, idx) => <>{idx > 0 ? ', ' : ''}{name}</>)}\n                                </span>}\n                            </button>\n                        </>}\n\n                        {util.isArray(dogs) && filteredDogs.map(dog => {\n                            const dogStatus = userStore.findDogstatus({ status: dog.status, language });\n                            const dogPosition = userStore.findDogposition({ position: dog.position, language });\n                            const dogHistoryStatuses = dogStore.findHistoryStatuses(dog.id);\n                            return (\n                                <div class='col-6 col-sm-6 col-md-6 col-lg-6 mb-1'>\n                                    <div class={`border rounded px-3 pt-2 pb-1 ${value.indexOf(dog.id) > -1 ? 'bg-success' : ''} position-relative`}\n                                        onClick={this.toggleDog}\n                                        id='dogContainer'\n                                        data-id={dog.id}\n                                        style='padding: .3rem !important; line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                    >\n                                        {dogPosition && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-${dogPosition.class || 'primary'} mr-3`}>{dogPosition.icon && <i class={dogPosition.icon} />} {dogPosition.name}</span>\n                                        </small>}\n\n                                        {filterby === 'leadOnly' && util.getNestedValue(dog, 'positions.lead.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-lead'>Lead</Text>: {util.format(util.getNestedValue(dog, 'positions.lead.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'pointOnly' && util.getNestedValue(dog, 'positions.point.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-point'>Point</Text>: {util.format(util.getNestedValue(dog, 'positions.point.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'teamOnly' && util.getNestedValue(dog, 'positions.team.distanceKm')> 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-team'>Team</Text>: {util.format(util.getNestedValue(dog, 'positions.team.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'wheelOnly' && util.getNestedValue(dog, 'positions.wheel.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-wheel'>Wheel</Text>: {util.format(util.getNestedValue(dog, 'positions.wheel.distanceKm'), 0)}km</span>\n                                        </small>}\n\n                                        <div class='d-flex'>\n                                            <div class={`text-center border rounded-circle imageRounded imageRoundedSmall text-muted pt-2`} style={`${dog.image ? `background-image: url(\"${dog.image.s3ThumbLink}\");` : ''}`}>\n                                                {/* {!dog.image && <i class='fas fa-dog' style='font-size: 20px;' />} */}\n                                                {!dog.image && <span class='font-weight-lighter' style='font-size: 20px;'>{util.ucfirst(dog.name, true)}</span>}\n                                            </div>\n                                            <div class='flex-grow-1 pl-2 pr-1'\n                                                style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 0.9em;`}\n                                            >\n                                                <small>\n                                                    <small class='float-right'>\n                                                        {dog.birth && <span class='mr-1'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                                    </small>\n                                                    {dog.shortname || dog.name}<br />\n                                                    <div style='line-height: 0.8em;'><small>{userStore.findTeam(dog.team)}</small></div>\n                                                </small>\n                                                <small class='float-right'>\n                                                    {dogStatus && dogStatus.id && <span class={`badge badge-${dogStatus.class} mr-2 font-weight-light`}>{dogStatus.icon && <i class={dogStatus.icon} />} {dogStatus.name}</span>}\n                                                    {dog.specialNeeds && <span class={`badge badge-warning mr-2 font-weight-light`}><i class='fas fa-exclamation-triangle' /> {dog.specialNeeds}</span>}\n                                                    {dogHistoryStatuses && dogHistoryStatuses.map(v => (\n                                                        <span class={`badge badge-warning mr-2`} title={util.isoDate(v.endDate, false, false, true)}>{v.title}</span>\n                                                    ))}\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dog.dogs.saved-changes'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n\n\n                {showPositions && <>\n                    <div class='container-fluid px-0 clearfix'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='dog.dogs.dogs-positions'>Posisjoner i spannet</Text></h5>\n                            </div>\n                        </div>\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <div class='row'>\n                                <div class='col-6 pr-0' style='min-height: 100px;'>\n                                    <Droppable droppableId=\"dogsLeft\">\n                                        {(provided, snapshot) => (\n                                            <List provided={provided} snapshot={snapshot} innerRef={provided.innerRef} className='ml-auto'>\n                                                {dogsLeft && dogsLeft.map((dog, idx) =>\n                                                    <Draggable key={`${dog.id}-${dog.unique}`} draggableId={`dragId-${dog.id}-${dog.unique}`} index={idx}>\n                                                        {provided => (\n                                                            <Dog provided={provided} snapshot={snapshot} innerRef={provided.innerRef} dog={dog} removePlaceholder={this.removePlaceholder} idx={idx} list='dogsLeft' />\n                                                        )}\n                                                    </Draggable>\n                                                )}\n                                                {provided.placeholder}\n                                            </List>\n                                        )}\n                                    </Droppable>\n                                </div>\n                                <div class='col-6 pl-0' style='min-height: 100px;'>\n                                    <Droppable droppableId=\"dogsRight\">\n                                        {(provided, snapshot) => (\n                                            <List provided={provided} snapshot={snapshot} innerRef={provided.innerRef} className='mr-auto'>\n                                                {dogsRight && dogsRight.map((dog, idx) =>\n                                                    <Draggable key={`${dog.id}-${dog.unique}`} draggableId={`dragId-${dog.id}-${dog.unique}`} index={idx}>\n                                                        {provided => (\n                                                            <Dog provided={provided} snapshot={snapshot} innerRef={provided.innerRef} dog={dog} removePlaceholder={this.removePlaceholder} idx={idx} list='dogsRight' />\n                                                        )}\n                                                    </Draggable>\n                                                )}\n                                                {provided.placeholder}\n                                            </List>\n                                        )}\n                                    </Droppable>\n                                </div>\n                            </div>\n                        </DragDropContext>\n                        <div class='row mb-3 mt-2'>\n                            <div class='col-6 pr-0'>\n                                <button class='btn btn-sm btn-outline-secondary' onClick={this.addPlaceholderLeft}>\n                                    <i class='fas fa-plus-circle' /> <Text id='dog.dogs.addplaceholder'>Add placeholder</Text>\n                                </button>\n                            </div>\n                            <div class='col-6 pl-0'>\n                                <button class='float-right btn btn-sm btn-outline-secondary' onClick={this.addPlaceholderRight}>\n                                    <i class='fas fa-plus-circle' /> <Text id='dog.dogs.addplaceholder'>Add placeholder</Text>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='container-fluid px-0'>\n                        <div class='row'>\n                            <div class='col-6'>\n                                <button class={`btn btn-sm btn-${dogPositionUpdated ? 'primary' : 'secondary'}`} onClick={this.updateDogPositions}>\n                                    <i class='fas fa-save' /> <Text id='dog.dogs.saveDogPositions'>Save dog positions</Text>\n                                </button>\n                            </div>\n                            <div class='col-6'>\n                                <button class={`float-right btn btn-sm btn-warning`} onClick={this.resetDogPositions}>\n                                    <i class='fas fa-sync' /> <Text id='dog.dogs.resetDogPositions'>Reset dog positions</Text>\n                                </button>\n                            </div>\n                        </div>\n                        <div class='row mt-2'>\n                            <div class='col-6'>\n                                &nbsp;\n                            </div>\n                            <div class='col-6'>\n                                <button class={`float-right btn btn-sm btn-link`} onClick={this.clearDogPositions}>\n                                    <i class='fas fa-eraser' /> <Text id='dog.dogs.clearDogPositions'>Clear dog positions</Text>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n\n            </div>\n        );\n    }\n}\n\nexport default Dogs;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport PubSub, { topics } from '../../lib/pubsub';\n// import DatePicker from '../../components/form/datePicker';\n// import TimePicker from '../../components/form/timePicker';\nimport Images from '../../components/form/images';\nimport Dogs from '../../components/dog/dogs';\nimport Map from '../../components/map';\nimport Files from '../../components/form/files';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nconst initialState = {\n    newWorkout: {},\n};\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        workoutStore.updateObjectKeyValue('newWorkout', `updated-${field}`, new Date().getTime());\n    }\n\n    updateDuration = (name, value) => {\n        const { field } = this.props;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', name, value);\n        const { newWorkout } = workoutStore;\n\n        if (util.isUndefined(newWorkout[`${field}-hours`])) {\n            // const hh = Math.floor(newWorkout[field] / 3600);\n            const hh = 0;\n            workoutStore.updateObjectKeyValue('newWorkout', `${field}-hours`, hh);\n        }\n        if (util.isUndefined(newWorkout[`${field}-minutes`])) {\n            // const mi = Math.floor(newWorkout[field] % 3600 / 60);\n            const mi = 0;\n            workoutStore.updateObjectKeyValue('newWorkout', `${field}-minutes`, mi);\n        }\n        // console.log({ newWorkout, field, name, value });\n        // console.log({ newWorkout, field, name, value });\n        const hours = newWorkout[`${field}-hours`] || 0;\n        const minutes = newWorkout[`${field}-minutes`] || 0;\n        const combinedValue = (hours * 3600) + (minutes * 60);\n        workoutStore.updateObjectKeyValue('newWorkout', field, combinedValue);\n        workoutStore.updateObjectKeyValue('newWorkout', `updated-${field}`, new Date().getTime());\n    }\n\n    onInputDuration = (e) => {\n        const value = parseInt(e.target.value, 10);\n        const name = e.target.name;\n        this.updateDuration(name, value);\n    }\n\n    decDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        const currentValue = newWorkout[name] || 0\n        const newValue = currentValue - 1;\n        const value = newValue < 0 ? 0 : newValue;\n        // console.log({ name, currentValue, newValue, value });\n        this.updateDuration(name, value);\n    }\n\n    incDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        const currentValue = newWorkout[name] || 0\n        const newValue = currentValue + 1;\n        const value = newValue < 0 ? 0 : newValue;\n        this.updateDuration(name, value);\n    }\n\n    // selectDate = (value) => {\n    //     const { field } = this.props;\n    //     const { workoutStore } = this.props.stores;\n    //     workoutStore.updateObjectKeyValue('newWorkout', field, util.isoDate(value));\n    // }\n\n    setDateToNow = () => {\n        const { field } = this.props;\n        const value = util.isoDate(undefined, false, false, true);\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n    }\n\n    setTimeToNow = () => {\n        const { field } = this.props;\n        const value = util.isoTime();\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, value);\n    }\n\n    setRightValue = () => {\n        const { field, rightValueReal } = this.props;\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateObjectKeyValue('newWorkout', field, rightValueReal);\n    }\n\n    render() {\n        const { type, datalist = [], min, max, step, elementtype, field, title, icon, help, placeholder, rightValue, updateField } = this.props;\n        const { workoutStore } = this.props.stores;\n        const { newWorkout } = workoutStore;\n        let maxValue = max;\n        if (type === 'date') {\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        let displayValue;\n        if (field === 'duration' || field === 'rest') {\n            displayValue = util.secToHms(newWorkout[field], true);\n        }\n        if (field === 'weather' && util.checkNested(newWorkout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(newWorkout.yr[0].instant.details);\n            const yrDate = util.isoDate(newWorkout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(newWorkout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n            }                        \n        }\n        if (field === 'temperature' && util.checkNested(newWorkout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(newWorkout.yr[0].instant.details);\n            const yrDate = util.isoDate(newWorkout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(newWorkout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C`;\n            }                        \n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        onInput={this.onInput}\n                        value={newWorkout[field]}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n        if (type === 'duration') {\n            const hh = Math.floor(newWorkout[field] / 3600);\n            const mi = Math.floor(newWorkout[field] % 3600 / 60);\n            // const ss = Math.floor(newWorkout[field] % 3600 % 60);\n\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <span class='float-right'>\n                        <strong>{displayValue}</strong>\n                    </span>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='form-row'>\n                        <div class='input-group col-5 offset-1 col-xl-3 offset-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-hours`}\n                                value={hh}\n                                type='number'\n                                min='0'\n                                max='24'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        <div class='input-group col-5 col-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-minutes`}\n                                value={mi}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                    </div>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={newWorkout[field] === 1 ? 0 : 1}\n                            data-field={field}\n                            onInput={this.onInput}\n                            checked={newWorkout[field] == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            );\n        }\n\n        if (type === 'textarea') {\n            return (<> \n                <div class='form-group mb-1 pb-1 border-bottom'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea\n                        class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        min={min}\n                        max={maxValue}\n                        step={step}\n                        rows={5}\n                        onInput={this.onInput}\n                        value={newWorkout[field]}\n                        placeholder={placeholder}\n                        onKeyUp={mu.resizeTextarea}\n                        onFocus={mu.resizeTextarea}\n                    />\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n                </div>\n            </>);\n        }\n\n        return (\n            <div class='form-group mb-1 pb-1 border-bottom'>\n                {type === 'date' && <span class='float-right text-muted font-weight-lighter' onClick={this.setDateToNow}>I dag <i class='far fa-check-circle' /></span>}\n                {type === 'time' && <span class='float-right text-muted font-weight-lighter' onClick={this.setTimeToNow}>Nå <i class='far fa-check-circle' /></span>}\n                {rightValue && <span class='float-right text-muted font-weight-lighter' onClick={this.setRightValue}>{rightValue}</span>}\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                {displayValue && <span class='float-right'>\n                    <strong>{displayValue}</strong>\n                </span>}\n                <input\n                    type={type}\n                    class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''}`}\n                    id={`${field}Input`}\n                    aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    onInput={this.onInput}\n                    value={newWorkout[field]}\n                    placeholder={placeholder}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass Input extends Component {\n    updateDuration = (name, value) => {\n        const { field, updateField, workout } = this.props;\n\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            if (isNaN(value)) {\n                hh = 0;\n            } else {\n                hh = value;\n            }\n        }\n        if (name.match(/-minutes/)) {\n            if (isNaN(value)) {\n                mi = 0;\n            } else {\n                mi = value;\n            }\n        }\n        if (name.match(/-seconds/)) {\n            if (isNaN(value)) {\n                ss = 0;\n            } else {\n                ss = value;\n            }\n        }\n        const combinedValue = (hh * 3600) + (mi * 60) + ss;\n        updateField({ id: workout.id, field, value: combinedValue });\n\n    }\n\n    onInputDuration = (e) => {\n        const value = parseInt(e.target.value, 10);\n        const name = e.target.name;\n        this.updateDuration(name, value);\n    }\n\n    decDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { field, workout } = this.props;\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            const value = hh - 1 < 0 ? 0 : hh - 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-minutes/)) {\n            const value = mi - 1 < 0 ? 0 : mi - 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-seconds/)) {\n            const value = ss - 1 < 0 ? 0 : ss - 1;\n            this.updateDuration(name, value);\n        }\n    }\n\n    incDuration = (e) => {\n        const { name } = e.target.closest('button').dataset;\n        const { field, workout } = this.props;\n        const hhmmss = util.secToHms(workout[field]);\n        const parts = hhmmss.split(':');\n        let hh = parseInt(parts[0] || 0, 10);\n        if (isNaN(hh)) {\n            hh = 0;\n        }\n        let mi = parseInt(parts[1] || 0, 10);\n        if (isNaN(mi)) {\n            mi = 0;\n        }\n        let ss = parseInt(parts[2] || 0, 10);\n        if (isNaN(ss)) {\n            ss = 0;\n        }\n        if (name.match(/-hours/)) {\n            const value = hh + 1 < 0 ? 0 : hh + 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-minutes/)) {\n            const value = mi + 1 < 0 ? 0 : mi + 1;\n            this.updateDuration(name, value);\n        }\n        if (name.match(/-seconds/)) {\n            const value = ss + 1 < 0 ? 0 : ss + 1;\n            this.updateDuration(name, value);\n        }\n\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { workoutStore } = this.props.stores;\n        const { workout } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        workoutStore.removeImage({\n            id: workout.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { workout, field, updateField } = this.props;\n        updateField({ id: workout.id, field, value: {} });\n    }\n\n    setDateToNow = () => {\n        const { field, updateField, workout } = this.props;\n        const value = util.isoDate(undefined, false, false, true);\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        updateField({ id: workout.id, field, value });\n    }\n\n    setTimeToNow = () => {\n        const { field, updateField, workout } = this.props;\n        const value = util.isoTime();\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        updateField({ id: workout.id, field, value });\n    }\n\n    setValue = (e) => {\n        const value = e.target.parentElement.dataset.value || e.target.dataset.value;\n        if (value) {\n            const { field, updateField, workout } = this.props;\n            // updateFieldValue = ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n            updateField({ id: workout.id, field, value });\n        }\n    }\n\n    setRightValue = () => {\n        const { field, updateField, workout, rightValueReal } = this.props;\n        updateField({ id: workout.id, field, value: rightValueReal });\n    }\n\n    render() {\n        const { saved, workout, type, datalist = [], min, max, step, elementtype, field, title, icon, help, onInput, updateField, rightValue } = this.props;\n        let value = toJS(workout[field]);\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(workout[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        // if (type === 'time') {\n        //     if (value) {\n        //         value = util.isoTime(workout[field]);\n        //     }\n        // }\n        let displayValue;\n        let insertValue;\n        if (field === 'duration' || field === 'rest') {\n            displayValue = util.secToHms(value, true);\n        }\n        if (field === 'weather' && util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(workout.yr[0].instant.details);\n            const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(workout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                insertValue = displayValue;\n            }                        \n        }\n        if (field === 'temperature' && util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n            const yr = toJS(workout.yr[0].instant.details);\n            const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n            const workoutDate = util.isoDate(workout.date, false, false, true);\n            // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n            if (yrDate === workoutDate) {\n                displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C`;\n                insertValue = util.asNumber(yr.air_temperature);\n            }                        \n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={workout} field={field} updateField={updateField} />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {/* {workout.image && workout.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={workout.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={workout.image.name}\n                                ><i class='fas fa-trash' /> Remove</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>} */}\n                            {workout.images && workout.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Remove</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={workout} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'>Endringene er lagret</div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={workout.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'duration') {\n            const hh = Math.floor(workout[field] / 3600);\n            const mi = Math.floor(workout[field] % 3600 / 60);\n            const ss = Math.floor(workout[field] % 3600 % 60);\n\n            return (\n                <div class={`form-group mb-1 pb-1 border-bottom`}>\n                    <span class='float-right'>\n                        <strong onClick={this.setValue} data-value={insertValue}>{displayValue}</strong>\n                    </span>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='form-row'>\n                        <div class='input-group col-5 offset-1 col-xl-3 offset-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-hours`}\n                                value={hh}\n                                type='number'\n                                min='0'\n                                max='24'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-hours`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        <div class='input-group col-5 col-xl-3'>\n                            <div class='input-group-prepend '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.decDuration}\n                                ><i class='fas fa-minus' /></button>\n                            </div>\n                            <input class={`form-control text-center`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-minutes`}\n                                value={mi}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                            <div class='input-group-append '>\n                                <button\n                                    class='btn btn-sm btn-outline-secondary'\n                                    type='button'\n                                    data-name={`${field}-minutes`}\n                                    onClick={this.incDuration}\n                                ><i class='fas fa-plus' /></button>\n                            </div>\n                        </div>\n                        {/* <div class='form-group col-3'>\n                            <input class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                                onInput={this.onInputDuration}\n                                name={`${field}-seconds`}\n                                value={ss}\n                                type='number'\n                                min='0'\n                                max='59'\n                            />\n                        </div> */}\n                    </div>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={value === 1 ? 0 : 1}\n                            data-id={workout.id}\n                            data-field={field}\n                            onInput={onInput}\n                            checked={value == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        if (type === 'textarea') {\n            return (<> \n                <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea\n                        class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''} ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        min={min}\n                        max={maxValue}\n                        step={step}\n                        rows={5}\n                        value={value}\n                        data-id={workout.id}\n                        data-field={field}\n                        data-type={type}\n                        data-elementtype={elementtype}\n                        onInput={onInput}\n                        onKeyUp={mu.resizeTextarea}\n                        onFocus={mu.resizeTextarea}\n                    />\n                    {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            </>);\n        }\n\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                {type === 'date' && <span class='float-right text-muted font-weight-lighter' onClick={this.setDateToNow}>I dag <i class='far fa-check-circle' /></span>}\n                {type === 'time' && <span class='float-right text-muted font-weight-lighter' onClick={this.setTimeToNow}>Nå <i class='far fa-check-circle' /></span>}\n                {rightValue && <span class='float-right text-muted font-weight-lighter' onClick={this.setRightValue}>{rightValue}</span>}\n\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                {displayValue && <span class='float-right'>\n                    <strong onClick={this.setValue} data-value={insertValue}>{displayValue}</strong>\n                </span>}\n                <input type={type}\n                    class={`form-control ${type === 'number' || type === 'date' || type === 'time' ? 'text-center' : ''} ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}\n                    id={`${field}Input`}\n                    aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={workout.id}\n                    data-field={field}\n                    data-type={type}\n                    data-elementtype={elementtype}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass Mushers extends Component {\n    toggleMusher(musherId) {\n        const { workout, type, elementtype, field, updateField, isNew } = this.props;\n        const value = toJS(workout[field]) || [];\n        const idx = value.indexOf(musherId);\n        if (idx > -1) {\n            value.splice(idx, 1);\n        } else {\n            value.push(musherId);\n        }\n        updateField({ id: workout.id, field, value, type, elementtype, isNew} );\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { mushers } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]) || [];\n        // console.log('Dogs.render: type, elementType, value:', type, elementtype, value);\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-column pb-2 px-1'\n                            >\n                                {mushers && mushers.map((musher, idx) => (\n                                    <div class='col mb-2 px-1'\n                                        ref={value.indexOf(musher.id) > -1 ? c => this.container = c : null}\n                                    >\n                                        <button\n                                            class={`btn btn-block \n                                                rounded-lg\n                                                btn${value.indexOf(musher.id) > -1 ? '' : '-outline'}-success\n                                                text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleMusher(musher.id)}\n                                        >\n                                            <i class='fas fa-user mr-2' />\n                                            {musher.firstname ? <>\n                                                {musher.firstname} {musher.lastname}\n                                            </> : <>\n                                                {musher.email}\n                                            </>}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleTeam(teamId) {\n        const { dogStore, workoutStore } = this.props.stores;\n        const { workout, type, field, updateField, isNew, selectTeam } = this.props;\n        let value = toJS(workout[field]);\n\n        if (value === teamId) {\n            value = null;\n        } else {\n            value = teamId;\n        }\n        if (value === null) {\n            updateField({ id: workout.id, field, value, type, isNew });\n        } else if (workout.teams && workout.teams.indexOf(value) > -1) {\n            workoutStore.removeTeam({ id: workout.id, team: value });\n        } else if (workout.team) {\n            workoutStore.addTeam({ id: workout.id, team: value });\n        } else {\n            dogStore.setCurrentTeam(value);\n\t\t\tworkoutStore.setCurrentTeam(value);\n            updateField({ id: workout.id, field, value, type, isNew });\n            if (util.isDefined(selectTeam)) {\n                selectTeam(teamId);\n            }\n        }        \n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]) || [];\n        const { highlight } = this.props;\n        // console.log('Dogs.render: type, elementType, value:', type, elementtype, value);\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = workout && util.isArray(workout.teams) && workout.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block \n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleTeam(team.id)}\n                                            >\n                                                {workout.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n                                                \n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n                                                    </>}\n                                                </>}\n                                                \n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Tracks extends Component {\n    toggleTrack(trackId, track) {\n        const { showAll } = this.state;\n        const { workout = {}, type, field, updateField, isNew } = this.props;\n        const { userStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n\n        const DAY_OF_WEEK = mu.getDays(language);\n\n        let value = toJS(workout[field]);\n        if (value === trackId) {\n            value = null;\n        } else {\n            value = trackId;\n        }\n        const skipTimer = true;\n        updateField({ id: workout.id, field, value, type, isNew, skipTimer });\n        if (!workout.distanceKm) {\n            updateField({ id: workout.id, field: 'distanceKm', value: track.distanceKm, type: 'number', isNew, skipTimer });\n        }\n        if (!workout.elevation) {\n            updateField({ id: workout.id, field: 'elevation', value: track.elevation, type: 'number', isNew, skipTimer });\n        }\n        if (!workout.name) {\n            const date = workout.date ? new Date(workout.date) : new Date();\n            const dayOfWeek = DAY_OF_WEEK[date.getDay()];\n            const type = types.find(e => e.id === workout.type);\n            updateField({\n                id: workout.id,\n                field: 'name',\n                value: `${track.name}: ${dayOfWeek}${type ? ` ${type.name}` : 'stur'}`,\n                type: 'string',\n                isNew,\n                skipTimer,\n            });\n        }\n        this.setState({\n            filterText: '',\n        });\n        if (showAll) {            \n            this.toggleFilter();\n        }\n    }\n\n    toggleFilter = () => {\n        const { showAll } = this.state;\n        this.setState({\n            showAll: showAll ? 0 : 1,\n        });\n    }\n\n    toggleSearchField = () => {\n        const { showSearchField } = this.state;\n        this.setState({\n            showSearchField: showSearchField ? null : 1,\n        });\n    }\n\n    render() {\n        const { showAll, filterText, showSearchField } = this.state;\n        const { userStore } = this.props.stores;\n        const { tracks } = userStore;\n        const { saved, workout, field, title, icon, help, filter = () => true } = this.props;\n        const value = toJS(workout[field]);\n        let trackFilter = showAll ? () => true : filter;\n        if (filterText) {\n            trackFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || workout.track === e.id;\n        }\n        const filteredTracks = tracks.filter(trackFilter);\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <span class='float-right' onClick={this.toggleSearchField}><i class='fas fa-search' /></span>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    {showSearchField && <div class='row'>\n                        <div class='col-12'>\n                            <input class='form-control form-control-sm' type='text' placeholder='Søk etter runder' value={filterText} onInput={linkState(this, 'filterText')} />\n                        </div>\n                    </div>}\n                    <div class='row'>\n                        {filteredTracks && filteredTracks.map(track => (\n                            <div class='col-6 col-sm-6 col-md-6 col-lg-6 mb-2'>\n                                <div class={`border position-relative rounded p-2 pt-3 pb-1 ${value === track.id ? 'bg-success' : ''}`}\n                                    onClick={() => this.toggleTrack(track.id, track)}\n                                    style='line-height: 0.9em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small class='float-right position-absolute' style='top: 0; right: 5px;'>\n                                        <small>\n                                            <i class='fas fa-road' /> {util.format(track.distanceKm, 1)} km\n                                            <i class='fas fa-mountain ml-2' /> {util.format(track.elevation, 0)} m\n                                        </small>\n                                    </small>\n                                    {/* <div style='overflow: hidden; white-space: nowrap;'> */}\n                                    <div style='overflow: hidden;'>\n                                        {workout.hintTrack === track.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                        <small>\n                                            <i class='fas fa-map-marked mr-2' />\n                                            {track.name}\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div class='row'>\n                        <div class='col-12 text-right'>\n                            {showAll ?\n                                <button class='btn btn-sm btn-link' onClick={this.toggleFilter}><Text id='workouts.show-last-used-tracks'>Vis kun de sist brukte rundene</Text></button> :\n                                <button class='btn btn-sm btn-link' onClick={this.toggleFilter}><Text id='workouts.show-all-tracks'>Vis alle rundene</Text></button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Types extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    updateTextField = (e) => {\n        const { type, updateField, isNew } = this.props;\n        const { id, field } = e.target.dataset;\n        const value = e.target.value;\n        updateField({ id: parseInt(id, 10), field, value, type, isNew });\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore, raceStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help, isNew } = this.props;\n        const value = toJS(workout[field]);\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const hasRaces = raceInProgress.length > 0;\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {types && types.map((type, idx) => (\n                                    <div class='col mb-0 px-0'\n                                        ref={value === type.id ? c => this.container = c : null}\n                                    >\n                                        <button\n                                            class={`btn btn-block \n        \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === types.length ? 'rounded-pill-right': '')}                                    \n                                                btn${value === type.id ? '' : '-outline'}-success\n                                                text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleType(type.id)}\n                                        >\n                                            {type.icon && <i class={type.icon} />} {language && type.lang && type.lang[language] ? type.lang[language] : type.name}\n\n                                            {hasRaces && type.id === 2 && <>\n                                                {value === type.id ? <>\n                                                    <i class='fas fa-check float-right' />\n                                                </> : <>\n                                                    <div class='spinner-grow text-warning float-right' role='status'>\n                                                        <span class='sr-only'>Loading...</span>\n                                                    </div>\n                                                    <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                </>}\n                                            </>}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    {value === 4 && (\n                        <div class='row'>\n                            {isNew ? \n                                <div class='col-12'>\n                                    <InputNew stores={this.props.stores} field='typeTitle'\n                                        title={<Text id='workouts.other'>Annet</Text>}\n                                        help={<Text id='workouts.other-help'>Hva slags type tur/aktivitet var dette?</Text>} />\n                                </div>\n                                : <div class='col-12'>\n                                    <Input saved={saved} workout={workout} field='typeTitle'\n                                        title={<Text id='workouts.other'>Annet</Text>}\n                                        help={<Text id='workouts.other-help'>Hva slags type tur/aktivitet var dette?</Text>}\n                                        onInput={this.updateTextField} />\n                                </div>}\n                        </div>\n                    )}\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Intensities extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { intensities } = userStore;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]);\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {intensities && intensities.map(intensity => (\n                            <div class='col-12 mb-2'>\n                                <button\n                                    class={`btn btn-block btn${value === intensity.id ? '' : '-outline'}-${intensity.class || 'success'} text-nowrap overflow-hidden`}\n                                    style='text-overflow: ellipsis;'\n                                    onClick={() => this.toggleType(intensity.id)}\n                                >\n                                    {workout.hintIntensity === intensity.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                    <span style='font-size: 1.5em;'>{intensity.icon || ''} {intensity.name}</span>\n                                    {intensity.help && <>\n                                        <br />\n                                        <small>{intensity.help}</small>\n                                    </>}\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass Equipments extends Component {\n    toggleEquipment(equipmentId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === equipmentId) {\n            value = null;\n        } else {\n            value = equipmentId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { equipments, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help } = this.props;\n        const value = toJS(workout[field]);\n        return (\n            <div class={`form-group  mb-1 pb-1 border-bottom ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-column'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {equipments && equipments.map(equipment => (\n                                    <div class='col px-1 mb-1'>\n                                        <button\n                                            class={`btn btn-block btn${value === equipment.id ? '' : '-outline'}-success text-nowrap overflow-hidden`}\n                                            style='text-overflow: ellipsis;'\n                                            onClick={() => this.toggleEquipment(equipment.id)}\n                                        >\n                                            {equipment.icon && <i class={equipment.icon} />} {language && equipment.lang && equipment.lang[language] ? equipment.lang[language] : equipment.name}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass RaceInProgress extends Component {\n    // loadAll = async () => {\n    //     const { raceStore } = this.props.stores;\n    //     raceStore.loadRaceInProgress();\n    // }\n\n\t// componentDidMount() {\n    //     this.loadAll();\n    // }\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n\n        if (raceInProgress && raceInProgress.length > 0) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                    <div class='alert alert-warning'>\n                        <h5><Text id='races.race-in-progress'>Løp pågår</Text></h5>\n                        <ul>\n                            {raceInProgress.map(activeRace => <li>\n                                {activeRace.race.title}\n                            </li>)}\n                        </ul>\n                        <i class='fas fa-exclamation-triangle' /> <Text id='races.choose-correct-team-and-type'>Velg riktig team og type for løpet.</Text>\n                    </div>\n                </div>\n            );\n        }\n        return '';\n    }\n}\n\n@observer\nclass WorkoutsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    loadAll = async () => {\n        await this.loadDogs();\n        await this.loadWorkout();\n\n        const { raceStore } = this.props.stores;\n        raceStore.loadRaceInProgress();\n    }\n\n    loadWorkout = async (team) => {\n\t\tconst { workoutStore, userStore, dogStore } = this.props.stores;\n        const { user } = userStore;\n        const { language } = user;\n        const DAY_OF_WEEK = mu.getDays(language);\n\n        let { workouts = [], newWorkout } = workoutStore;\n        const { currentTeam } = workoutStore;\n        if (this.props.workout === 'new') {\n            this.setState({ createNew: true });\n            workouts = await workoutStore.load({ query: { team: (team || currentTeam) }, skipUpdate: 1, limit: 5, sort: '-createdDate' });\n            let lastWorkout = workouts[0];\n            const fallbackTeam = currentTeam || user.team;\n            if (lastWorkout) {\n                // console.log({ lastWorkout, fallbackTeam, currentTeam });\n                if (!newWorkout.team) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'team', fallbackTeam);\n                }\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogs', lastWorkout.dogs || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', lastWorkout.dogsLeft || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', lastWorkout.dogsRight || []);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', []);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'mushers', lastWorkout.mushers);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'temperature', lastWorkout.temperature || 5);\n                // workoutStore.updateObjectKeyValue('newWorkout', 'name', lastWorkout.name);\n                workoutStore.updateObjectKeyValue('newWorkout', 'type', lastWorkout.type);\n                workoutStore.updateObjectKeyValue('newWorkout', 'equipment', lastWorkout.equipment);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration', lastWorkout.duration);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration-hours', Math.floor(lastWorkout.duration / 3600));\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration-minutes', Math.floor(lastWorkout.duration % 3600 / 60));\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest', lastWorkout.rest || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest-hours', Math.floor(lastWorkout.rest / 3600) || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest-minutes', Math.floor(lastWorkout.rest % 3600 / 60) || 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rating', lastWorkout.rating || 3);\n                workoutStore.updateObjectKeyValue('newWorkout', 'sledWeight', lastWorkout.sledWeight);\n\n                if (!newWorkout['updated-date']) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'date', util.isoDate(lastWorkout.date, false,  false, true));\n                }\n                if (!newWorkout['updated-time']) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'time', util.isoTime(lastWorkout.date));\n                }\n\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintTeam', lastWorkout.team);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintType', lastWorkout.type);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintTrack', lastWorkout.track);\n                workoutStore.updateObjectKeyValue('newWorkout', 'hintIntensity', lastWorkout.intensity);\n\n                const lastUsedTracks = workouts.map(w => w.track);\n                this.setState({ lastUsedTracks });\n            } else {\n                const date = new Date();\n                const dayOfWeek = DAY_OF_WEEK[date.getDay()];\n                const dogs = await dogStore.load({ query: { team: (team || currentTeam) }, skipUpdate: 1 });\n                if (!newWorkout.team) {\n                    workoutStore.updateObjectKeyValue('newWorkout', 'team', fallbackTeam);\n                }\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogs', dogs.map(d => d.id) || []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsLeft', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'dogsRight', []);\n                workoutStore.updateObjectKeyValue('newWorkout', 'mushers', [user.id]);\n                workoutStore.updateObjectKeyValue('newWorkout', 'name', util.ucfirst(`${dayOfWeek} - Tur med hundene`));\n                // workoutStore.updateObjectKeyValue('newWorkout', 'temperature', 5);\n                workoutStore.updateObjectKeyValue('newWorkout', 'type', 1);\n                workoutStore.updateObjectKeyValue('newWorkout', 'equipment', 2);\n                workoutStore.updateObjectKeyValue('newWorkout', 'duration', 3600);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rest', 0);\n                workoutStore.updateObjectKeyValue('newWorkout', 'rating', 3);\n                workoutStore.updateObjectKeyValue('newWorkout', 'date', util.isoDate(undefined, false,  false, true));\n                workoutStore.updateObjectKeyValue('newWorkout', 'time', util.isoTime());\n            }\n            workoutStore.updateObjectKeyValue('newWorkout', 'temperature', -1);\n        } else {\n            workoutStore.load(this.props.workout);\n        }\n    }\n\n    loadDogs = async () => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { dogStore } = this.props.stores;\n\t\t// const { currentTeam } = dogStore;\n\t\t// await dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t\tawait dogStore.load({ query: { deceased: 0 }, addData: ['workoutSummary'] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tresetDog() {\n        const { workoutStore } = this.props.stores;\n        workoutStore.updateKeyValue('newWorkout', {});\n\t}\n\n\tinsertWorkout = async () => {\n\t\tconst { workoutStore, userStore } = this.props.stores;\n\t\tconst { newWorkout } = workoutStore;\n\t\tconst response = await workoutStore.insert({ ...newWorkout });\n        if (response.status === 422) {\n            PubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\t\tmessage: 'Mangler tittel på treningsøkten',\n\t\t\t\ttype: 'warning',\n\t\t\t\ticon: 'fas fa-exclamation-triangle',\n\t\t\t});\n        } else if (response.status >= 500) {\n            PubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\t\tmessage: response.message || response.error,\n\t\t\t\ttype: 'danger',\n\t\t\t\ticon: 'fas fa-exclamation-triangle',\n\t\t\t});\n        } else {\n            this.resetDog();\n            userStore.getInfo();\n            route(`/workouts/${response.data.id}`);\n        }\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = async ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        const { workoutStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        const { workout } = workoutStore;\n        if (field === 'images') {\n            if (Array.isArray(workout.images) && Array.isArray(value)) {\n                localObjectValue = [...workout.images, ...value];\n            }\n        }\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n        if (isNew) {\n            workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        } else {\n            workoutStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                await this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n\n        // GPX update stuff\n        if (field === 'gpx' && workout && util.checkNested(workout, 'gpx', 'gpxInfo')) {\n            const { totalDistance, maxSpeed, avgSpeed, ascent, decent, duration, rest, startLatlng, endLatlng } = workout.gpx.gpxInfo;\n            const updateObject = {};\n            if (duration) {\n                workoutStore.updateField(id, 'duration', duration);\n                updateObject.duration = duration;\n            }\n            if (rest) {\n                workoutStore.updateField(id, 'rest', rest);\n                updateObject.rest = rest;\n            }\n            if (totalDistance) {\n                workoutStore.updateField(id, 'distanceKm', util.roundTo(totalDistance, 10));\n                updateObject.distanceKm = util.roundTo(totalDistance, 10);\n            }\n            if (maxSpeed) {\n                workoutStore.updateField(id, 'speedmax', util.roundTo(maxSpeed, 10));\n                updateObject.speedmax = util.roundTo(maxSpeed, 10);\n            }\n            if (avgSpeed) {\n                workoutStore.updateField(id, 'speedAvg', util.roundTo(avgSpeed, 10));\n                updateObject.speedAvg = util.roundTo(avgSpeed, 10);\n            }\n            if (ascent) {\n                workoutStore.updateField(id, 'elevation', ascent);\n                updateObject.elevation = ascent;\n            }\n            if (decent) {\n                workoutStore.updateField(id, 'decent', decent);\n                updateObject.decent = decent;\n            }\n            if (startLatlng) {\n                workoutStore.updateField(id, 'startLatlng', startLatlng);\n                updateObject.startLatlng = startLatlng;\n            }\n            if (endLatlng) {\n                workoutStore.updateField(id, 'endLatlng', endLatlng);\n                updateObject.endLatlng = endLatlng;\n            }\n            await workoutStore.save(updateObject, workout.id);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { workoutStore } = this.props.stores;\n        if (id && field) {\n            await workoutStore.saveField(id, field, value);\n        }\n    }\n\n    dogFilter = (e) => {\n        const { workoutStore } = this.props.stores;\n        const { workout } = workoutStore;\n        if (workout && workout.dogs) {\n            return (e.team === workout.team || workout.dogs.indexOf(e.id) > -1);\n        }\n        return false;\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n    getYrWeather = async (position) => {\n        const { createNew } = this.state;\n        const { workoutStore, userStore } = this.props.stores;\n\t\tconst { workout = {}, newWorkout } = workoutStore;\n\n        const firstPoint = mu.getFirstPoint(workout);\n        const midPoint = mu.getMidPoint(workout, 0.5);\n        // const endPoint = mu.getMidPoint(workout, 1);\n\n        const weather = await userStore.getWeather({ lat: firstPoint[0], lon: firstPoint[1], altitude: firstPoint[2] });\n        const weatherMid = await userStore.getWeather({ lat: midPoint[0], lon: midPoint[1], altitude: midPoint[2] });\n\n        if (createNew) {\n            this.updateFieldValue({ id: newWorkout.id, field: 'yr', value: weather, isNew: true, skipTimer: false });\n            this.updateFieldValue({ id: newWorkout.id, field: 'yrMid', value: weatherMid, isNew: true, skipTimer: false });\n            if (util.checkNested(newWorkout, 'yr', '0', 'instant', 'details') && !newWorkout.weather) {\n                let yrValue = '';\n                const yr = toJS(newWorkout.yr[0].instant.details);\n                // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n                yrValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                // console.log({ yrValue });\n                this.updateFieldValue({ id: newWorkout.id, field: 'weather', value: yrValue, isNew: true, skipTimer: false });\n                if (!newWorkout.temperature) {\n                    this.updateFieldValue({ id: newWorkout.id, field: 'temperature', value: yr.air_temperature, isNew: true, skipTimer: false });\n                }\n            }\n\n        } else {\n            this.updateFieldValue({ id: workout.id, field: 'yr', value: weather, isNew: false, skipTimer: false });\n            this.updateFieldValue({ id: workout.id, field: 'yrMid', value: weatherMid, isNew: false, skipTimer: false });\n            if (util.checkNested(workout, 'yr', '0', 'instant', 'details')) {\n                let yrValue = '';\n                const yr = toJS(workout.yr[0].instant.details);\n                const yrDate = util.isoDate(workout.yr[0].date, false, false, true);\n                const workoutDate = util.isoDate(workout.date, false, false, true);\n                // air_pressure_at_sea_level, air_temperature, cloud_area_fraction, relative_humidity, wind_from_direction, wind_speed\n                if (yrDate === workoutDate && (!workout.weather || workout.weather === '')) {\n                    yrValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n                    // console.log({ yrValue, yrDate, workoutDate });\n                    this.updateFieldValue({ id: workout.id, field: 'weather', value: yrValue, isNew: false, skipTimer: false });\n                    if (!workout.temperature) {\n                        this.updateFieldValue({ id: workout.id, field: 'temperature', value: yr.air_temperature, isNew: true, skipTimer: false });\n                    }\n                }\n            }\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n    toggleAdminDebug = () => {\n        const { showAdminDebug } = this.state;\n        this.setState({ showAdminDebug: !showAdminDebug });\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n    }\n\n\trender() {\n        const { createNew, lastUsedTracks, submenu, showAdminDebug = true } = this.state;\n\t\tconst { workoutStore, userStore, appState, raceStore } = this.props.stores;\n        const { viewmode } = appState;\n        const { isAdmin, user } = userStore;\n\t\tconst { insertStatus, saved, workout = {}, newWorkout = {}, workoutLocations, isTracking } = workoutStore;\n        const { currentTeam: currentTeamId } = workoutStore;\n        const currentTeam = userStore.findTeam(workout.team || currentTeamId, true);\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const raceTeams = raceInProgress.map(e => parseInt(e.musher.team, 10));\n\n        const { name, gpxInfo = {}, gpx = { gpxInfo: {} } } = workout;\n\n        let isStationary = false;\n        if (createNew) {\n            isStationary = [6, 8].indexOf(newWorkout.type) > -1;\n        } else {\n            isStationary = [6, 8].indexOf(workout.type) > -1;\n        }\n\n        if (createNew) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <button class='btn btn-link float-left pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}\n                    >\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                    <div class='row'>\n                        <RaceInProgress stores={this.props.stores} />\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3' style='padding-left: 35px;'>\n                            <div> \n                                <h5><Text id='workouts.add-new'>Legg til ny treningstur</Text></h5>\n                            </div>\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class='row'>\n                                <div class='w-100 overflow-hidden'>\n                                    <div\n                                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                                    >\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='info'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-info-circle' /> <Text id='workouts.info'>Info</Text></button>\n                                            {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='team'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-users' /> <Text id='workouts.team'>Team</Text></button>\n                                            {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'user' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='user'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-user' /> <Text id='workouts.user'>Musher</Text></button>\n                                            {submenu === 'user' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'images' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='images'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-images' /> <Text id='workouts.images'>Bilder</Text></button>\n                                            {submenu === 'images' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'gps' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='gps'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-map-marker-alt' /> <Text id='workouts.gps'>GPS</Text></button>\n                                            {submenu === 'gps' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-none ${submenu === 'equipment' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='equipment'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-sleigh' /> <Text id='workouts.equipment'>Equipment</Text></button>\n                                            {submenu === 'equipment' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                        <div class='col px-0 pt-2'>\n                                            <button\n                                                class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                style='text-overflow: ellipsis; overflow: hidden;'\n                                                data-menu='advanced'\n                                                onClick={this.chooseSubmenu}\n                                            ><i class='fas fa-cogs' /> <Text id='workouts.advanced'>advanced</Text></button>\n                                            {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {submenu === 'info' && <>\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                        <Types stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='type' icon='fas fa-running'\n                                            title={<Text id='workouts.type'>Type tur</Text>}\n                                            help={<Text id='workouts.type-help'>Type treningstur. 'trening', 'konkurranse', 'tur'.</Text>}\n                                            updateField={this.updateFieldValue} />\n                                </div>\n                            </>}\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='name' icon='fas fa-heading'\n                                    title={<Text id='workouts.title'>Tittel</Text>}\n                                    help={<Text id='workouts.title-help'>Tittel på denne turen. 'Fin høsttur i øsende regn...'</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='comment' type='textarea'\n                                    title={<Text id='workouts.comment'>Kommentar</Text>}\n                                    help={<Text id='workouts.comment-help'>Kommentar til turen. Hvordan gikk det?</Text>}\n                                />\n                            </div>\n                            {currentTeam && currentTeam.public > 0 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='private' icon='fas fa-eye' type='toggle'\n                                        title={<Text id='workouts.private'>Skjul treningsturen</Text>}\n                                        help={<Text id='workouts.private-help'>Skal denne turen være skjult for de som følger teamet ditt?</Text>}\n                                    />\n                                </div>\n                            </>}\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                    title={<Text id='workouts.date'>Dato</Text>}\n                                    help={<Text id='workouts.date-help'>Dato for turen. Format på dato er: 'YYYY-MM-DD'.</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='time' icon='fas fa-clock' type='time'\n                                    title={<Text id='workouts.time'>Klokka</Text>}\n                                    help={<Text id='workouts.time-help'>Klokkeslett for turen. Format: 'HH:MI'.</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='duration' type='duration' icon='fas fa-stopwatch'\n                                    title={<Text id='workouts.duration'>Varighet på treningen</Text>}\n                                    help={<Text id='workouts.duration-help'>Hvor lenge var du ute? (HH:MI)</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} field='rest' type='duration' icon='fas fa-stopwatch'\n                                    title={<Text id='workouts.rest'>Hviletid på treningen</Text>}\n                                    help={<Text id='workouts.rest-help'>Hvor lenge stod du stille? (HH:MI)</Text>}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                    <InputNew stores={this.props.stores} field='speedAvg'\n                                        rightValue={`${util.format(mu.speedAvg({\n                                            duration: newWorkout.duration,\n                                            rest: newWorkout.rest,\n                                            distanceKm: newWorkout.distanceKm,\n                                        }), 1, '.', ' ')} km/t`}\n                                        rightValueReal={mu.speedAvg({\n                                            duration: newWorkout.duration,\n                                            rest: newWorkout.rest,\n                                            distanceKm: newWorkout.distanceKm,\n                                        })}\n                                        updateField={this.updateFieldValue}\n                                        icon='fas fa-tachometer-alt'\n                                        type='number' min='0' max='100' step='0.1'\n                                        title={<Text id='workouts.avg-speed'\n                                    >Gjennomsnittsfart</Text>}\n                                        help={<Text id='workouts.avg-speed-help'>Gjennomsnittsfart når du var i bevegelse. Dersom du ikke vet dette så legger du bare inn distanse og varighet så blir dette regnet ut.</Text>} />\n                                </>}\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='row px-0'>\n                                    <div class='col-6'>\n                                        <InputNew stores={this.props.stores} field='distanceKm' icon='fas fa-road'\n                                            title={<Text id='workouts.distance'>Distanse i km</Text>}\n                                            type='number' min='0' max='300' step='1'\n                                            help={<Text id='workouts.distance-help'>Hvor lang var turen i km.</Text>}\n                                        />\n                                    </div>\n                                    <div class='col-6'>\n                                        <InputNew stores={this.props.stores} field='elevation' icon='fas fa-mountain'\n                                            title={<Text id='workouts.ascend'>Høydemeter</Text>}\n                                            type='number' min='0' max='3000' step='1'\n                                            help={<Text id='workouts.ascend-help'>Høydemeter du klatret på denne turen.</Text>}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </>}\n\n                        {submenu === 'team' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Teams stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='team' icon='fas fa-users'\n                                    title={<Text id='workouts.team'>Team</Text>}\n                                    help={<Text id='workouts.team-help'>Teamet som er på tur.</Text>}\n                                    updateField={this.updateFieldValue} selectTeam={this.loadWorkout}\n                                    highlight={raceTeams}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Dogs stores={this.props.stores} isNew={1} saved={saved} object={newWorkout} type='array' icon='fas fa-dog' elementtype='number' field='dogs'\n                                    title={<Text id='workouts.dogs'>Hunder</Text>}\n                                    help={<Text id='workouts.dogs-help'>Hvilke hunder var med på turen.</Text>}\n                                    updateField={this.updateFieldValue} filter={(e) => (e.team === newWorkout.team || (newWorkout.dogs && newWorkout.dogs.indexOf(e.id) > -1))}\n                                    showPositions={isStationary ? false : ['beta', 'advanced', 'normal'].indexOf(viewmode) > -1}\n                                    currentTeam={currentTeam}\n                                    key={`dogs-${util.getNestedValue(currentTeam, 'id')}`}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'user' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Mushers stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='array' elementtype='number' field='mushers' icon='fas fa-user'\n                                    title={<Text id='workouts.mushers'>Kjørere</Text>}\n                                    help={<Text id='workouts.mushers-help'>Hvem av kjørerne var med på turen.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>                        \n                        </>}\n\n                        {submenu === 'images' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-images' /></div>\n                                    <Text id='workouts.save-to-add-images'>Please save workout and then go into edit mode to add images.</Text>\n                                </div>                                \n                            </div>\n                        </>}\n\n                        {submenu === 'gps' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <div class='text-center text-muted mb-3'>\n                                    <div class='display-1'><i class='fas fa-map-marker-alt' /></div>\n                                    <Text id='workouts.save-to-add-gpx'>Please save workout and then you will be able to upload a GPX-file if you like.</Text>\n                                </div> \n\n                                <Tracks stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='track' icon='fas fa-map-marked'\n                                    title={<Text id='workouts.track'>Runde</Text>}\n                                    help={<Text id='workouts.track-help'>Hvilken treningsrunde er dette.</Text>}\n                                    updateField={this.updateFieldValue} filter={(e) => (e.id === newWorkout.track || (lastUsedTracks && lastUsedTracks.indexOf(e.id) > -1))}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'equipment' && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Equipments stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='equipment' icon='fas fa-sleigh'\n                                    title={<Text id='workouts.equipment'>Utstyr</Text>}\n                                    help={<Text id='workouts.equipment-help'>Utstyr som ble brukt. 'trollvogn', 'atv', 'slede'.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <InputNew stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='sledWeight' icon='fas fa-sleigh'\n                                    title={<Text id='workouts.sledWeight'>Sledevekt</Text>}\n                                    help={<Text id='workouts.sledWeight-help'>Vekt på sleden denne turen.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n\n                        {submenu === 'advanced' && <>\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='weather' icon='fas fa-cloud-sun-rain'\n                                        title={<Text id='workouts.weather'>Været på turen</Text>}\n                                        help={<Text id='workouts.weather-help'>Hvordan var været.</Text>}\n                                    />\n                                </div>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='temperature' icon='fas fa-temperature-low'\n                                        title={<Text id='workouts.temperature'>Temperatur</Text>}\n                                        type='number' min='-40' max='20' step='0.5'\n                                        help={<Text id='workouts.temperature-help'>Hvilken temperatur var det.</Text>}\n                                    />\n                                </div>\n                            </>}\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <InputNew stores={this.props.stores} field='rating' icon='fas fa-dice'\n                                        title={<Text id='workouts.rating'>Rating av turen</Text>}\n                                        type='number' min='0' max='6' step='1'\n                                        help={<Text id='workouts.rating-help'>Din rating av turen. 1-6</Text>}\n                                    />\n                                </div>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                    <Intensities stores={this.props.stores} isNew={1} saved={saved} workout={newWorkout} type='number' field='intensity' icon='fas fa-dumbbell'\n                                        title={<Text id='workouts.intensity'>Intensitet</Text>}\n                                        help={<Text id='workouts.intensity-help'>Hvor stor belastning var denne turen?</Text>}\n                                        updateField={this.updateFieldValue}\n                                    />\n                                </div>\n                            </>}\n                        </>}\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class={`form-group mb-1 pb-1 border-bottom`}>\n                                <button type='button' class='btn btn-block btn-primary'\n                                    onClick={this.insertWorkout}\n                                >\n                                    <Text id='workouts.add-save-new'>Lagre treningstur</Text>\n                                </button>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    {insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n\t\t\t\t\t\t<Text id='workouts.workout-saved'>Treningen er lagret.</Text>\n\t\t\t\t\t</div>}\n\n                </div>\n            );\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link float-left pl-0 fixed-top'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}\n                >\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n                    <RaceInProgress stores={this.props.stores} />\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3' style='padding-left: 35px;'>                       \n                        <div>\n                            <h5><Text id='workouts.edit-workout'>Endre trening</Text>: {name}                                \n                                {workout.isLocked === 1 && <i class='fas fa-lock text-danger ml-3' />}\n                            </h5>\n                        </div>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                        <div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='workouts.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-users' /> <Text id='workouts.team'>Team</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'user' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='user'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-user' /> <Text id='workouts.user'>Musher</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'images' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='images'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-images' /> <Text id='workouts.images'>Bilder</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'gps' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='gps'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='workouts.gps'>GPS</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'equipment' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='equipment'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-sleigh' /> <Text id='workouts.equipment'>Equipment</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='advanced'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-cogs' /> <Text id='workouts.advanced'>advanced</Text></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {submenu === 'info' && <>\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Types stores={this.props.stores} saved={saved} workout={workout} type='number' field='type' icon='fas fa-running'\n                                    title={<Text id='workouts.type'>Type tur</Text>}\n                                    help={<Text id='workouts.type-help'>Type treningstur. 'trening', 'konkurranse', 'tur'.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='name' icon='fas fa-heading'\n                                title={<Text id='workouts.title'>Tittel</Text>}\n                                help={<Text id='workouts.title-help'>Tittel på denne turen. 'Fin høsttur i øsende regn...'</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='comment' type='textarea'\n                                title={<Text id='workouts.comment'>Kommentar</Text>}\n                                help={<Text id='workouts.comment-help'>Kommentar til turen. Hvordan gikk det?</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {currentTeam && currentTeam.public > 0 && <Input stores={this.props.stores} saved={saved} workout={workout} field='private' icon='fas fa-eye' type='toggle'\n                                title={<Text id='workouts.private'>Skjul treningsturen</Text>}\n                                help={<Text id='workouts.private-help'>Skal denne turen være skjult for de som følger teamet ditt?</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input stores={this.props.stores} saved={saved} workout={workout} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                title={<Text id='workouts.date'>Dato</Text>}\n                                help={<Text id='workouts.date-help'>Dato for turen. Format på dato er: 'YYYY-MM-DD'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.minEpoch: {util.isoDate(gpxInfo.minEpoch, true, true)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.startTime > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.startTime {util.isoDate(gpx.gpxInfo.startTime, true, true)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input stores={this.props.stores} saved={saved} workout={workout} field='time' icon='fas fa-clock' type='time'\n                                title={<Text id='workouts.time'>Klokka</Text>}\n                                help={<Text id='workouts.time-help'>Klokkeslett for turen. Format: 'HH:MI'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='duration' type='duration' icon='fas fa-stopwatch'\n                                title={<Text id='workouts.duration'>Varighet på treningen</Text>}\n                                help={<Text id='workouts.duration-help'>Hvor lenge var du ute? (HH:MI)</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && gpxInfo.maxEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.maxEpoch-minEpoch: {util.secToHms(gpxInfo.maxEpoch - gpxInfo.minEpoch)} <br />\n                                </small>}\n                                {isAdmin && gpxInfo.duration > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.duration: {util.secToHms(gpxInfo.duration)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.endTime > 0 && gpx.gpxInfo.startTime > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.endTime-startTime: {util.secToHms((gpx.gpxInfo.endTime - gpx.gpxInfo.startTime) / 1000)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.duration > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.duration: {util.secToHms(gpx.gpxInfo.duration)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='rest' type='duration' icon='fas fa-stopwatch'\n                                title={<Text id='workouts.rest'>Hviletid på treningen</Text>}\n                                help={<Text id='workouts.rest-help'>Hvor lenge stod du stille? (HH:MI)</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                            {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                {isAdmin && gpxInfo.minEpoch > 0 && gpxInfo.maxEpoch > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.maxEpoch-minEpoch: {util.secToHms(gpxInfo.rest)} <br />\n                                </small>}\n                                {isAdmin && gpxInfo.rest > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpxInfo.rest: {util.secToHms(gpxInfo.rest)} <br />\n                                </small>}\n                                {isAdmin && gpx.gpxInfo && gpx.gpxInfo.rest > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                    gpx.gpxInfo.rest: {util.secToHms(gpx.gpxInfo.rest)} <br />\n                                </small>}\n                            </div>}\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {!isStationary && <>\n                                {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                    <Input saved={saved} workout={workout} field='speedAvg'\n                                        rightValue={`${util.format(mu.speedAvg({\n                                            duration: workout.duration,\n                                            rest: workout.rest,\n                                            distanceKm: workout.distanceKm,\n                                        }), 1, '.', ' ')} km/t`}\n                                        rightValueReal={mu.speedAvg({\n                                            duration: workout.duration,\n                                            rest: workout.rest,\n                                            distanceKm: workout.distanceKm,\n                                        })}\n                                        updateField={this.updateFieldValue}\n                                        icon='fas fa-tachometer-alt'\n                                        title={<Text id='workouts.avg-speed'>Gjennomsnittsfart</Text>}\n                                        type='number' min='0' max='100' step='0.1'\n                                        help={<Text id='workouts.avg-speed-help'>Gjennomsnittsfart når du var i bevegelse. Dersom du ikke vet dette så legger du bare inn distanse og varighet så blir dette regnet ut.</Text>}\n                                        onInput={this.updateField}\n                                    />\n                                    {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                        {isAdmin && gpxInfo.avgMovingSpeeds > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgMovingSpeeds {util.format(gpxInfo.avgMovingSpeeds * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpxInfo.avgGpsSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgGpsSpeed {util.format(gpxInfo.avgGpsSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpxInfo.avgGpsMovingSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpxInfo.avgGpsMovingSpeed {util.format(gpxInfo.avgGpsMovingSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                        {isAdmin && gpx.gpxInfo && gpx.gpxInfo.avgSpeed > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                            gpx.gpxInfo.avgSpeed {util.format(gpx.gpxInfo.avgSpeed * 3.6, 2)} km/t <br />\n                                        </small>}\n                                    </div>}\n                                </>}\n                            </>}\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <div class='row px-0'>\n                                {!isStationary && <>\n                                    <div class='col-6'>\n                                        <Input saved={saved} workout={workout} field='distanceKm' icon='fas fa-road'\n                                            title={<Text id='workouts.distance'>Distanse i km</Text>}\n                                            type='number' min='0' max='300' step='1'\n                                            help={<Text id='workouts.distance-help'>Hvor lang var turen i km.</Text>}\n                                            onInput={this.updateField}\n                                            updateField={this.updateFieldValue}\n                                        />\n                                        {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                            {isAdmin && gpxInfo.calculatedTotalDistance > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedTotalDistance: {util.format(gpxInfo.calculatedTotalDistance, 2)} km <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.totalDistance > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.totalDistance: {util.format(gpx.gpxInfo.totalDistance, 2)} km <br />\n                                            </small>}\n                                        </div>}\n                                    </div>\n                                    <div class='col-6'>\n                                        <Input saved={saved} workout={workout} field='elevation' icon='fas fa-mountain'\n                                            title={<Text id='workouts.ascend'>Høydemeter</Text>}\n                                            type='number' min='0' max='3000' step='1'\n                                            help={<Text id='workouts.ascend-help'>Høydemeter du klatret på denne turen.</Text>}\n                                            onInput={this.updateField}\n                                            updateField={this.updateFieldValue}\n                                        />\n                                        {showAdminDebug && <div onClick={this.toggleAdminDebug}>\n                                            {isAdmin && gpxInfo.calculatedAscend > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedAscend: {util.format(gpxInfo.calculatedAscend, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpxInfo.calculatedDescend > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpxInfo.calculatedDescend: {util.format(gpxInfo.calculatedDescend, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.ascent > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.ascent: {util.format(gpx.gpxInfo.ascent, 0)} m <br />\n                                            </small>}\n                                            {isAdmin && gpx.gpxInfo && gpx.gpxInfo.descent > 0 && <small class='text-danger' style='line-height: 0.8em;'>\n                                                gpx.gpxInfo.descent: {util.format(gpx.gpxInfo.descent, 0)} m <br />\n                                            </small>}\n                                        </div>}\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Teams stores={this.props.stores} saved={saved} workout={workout} type='number' field='team' icon='fas fa-users'\n                                title={<Text id='workouts.team'>Team</Text>}\n                                help={<Text id='workouts.team-help'>Teamet som er på tur.</Text>}\n                                updateField={this.updateFieldValue}\n                                highlight={raceTeams}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Dogs stores={this.props.stores} saved={saved} object={workout} type='array' elementtype='number' field='dogs' icon='fas fa-dog'\n                                title={<Text id='workouts.dogs'>Hunder</Text>}\n                                help={<Text id='workouts.dogs-help'>Hvilke hunder var med på turen.</Text>}\n                                updateField={this.updateFieldValue}  filter={this.dogFilter}\n                                showPositions={isStationary ? false : ['beta', 'advanced', 'normal'].indexOf(viewmode) > -1}\n                                currentTeam={currentTeam}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'user' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Mushers stores={this.props.stores} saved={saved} workout={workout} type='array' elementtype='number' field='mushers' icon='fas fa-user'\n                                title={<Text id='workouts.mushers'>Kjørere</Text>}\n                                help={<Text id='workouts.mushers-help'>Hvem av kjørerne var med på turen.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'images' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='image' type='image'\n                                stores={this.props.stores}\n                                title={<Text id='workouts.photos'>Bilder</Text>}\n                                help={<Text id='workouts.photos-help'>Legg til bilde fra treningen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'gps' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            {gpx && <div style='height: 300px;'>\n                                <Map stores={this.props.stores} mapId={workout.id} geojson={gpx.geoJSON} gpxInfo={gpx.gpxInfo} height={300} />\n                            </div>}\n                            <Input saved={saved} workout={workout} field='gpx' type='file'\n                                title={<Text id='workouts.gpx'>Gpx</Text>}\n                                help={<Text id='workouts.gpx-help'>Gpx til denne treningen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Tracks stores={this.props.stores} saved={saved} workout={workout} type='number' field='track' icon='fas fa-map-marked'\n                                title={<Text id='workouts.track'>Runde</Text>}\n                                help={<Text id='workouts.track-help'>Hvilken treningsrunde er dette.</Text>}\n                                updateField={this.updateFieldValue}\n                                filter={(e) => (e.id === workout.track)}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'equipment' && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Equipments stores={this.props.stores} saved={saved} workout={workout} type='number' field='equipment' icon='fas fa-sleigh'\n                                title={<Text id='workouts.equipment'>Utstyr</Text>}\n                                help={<Text id='workouts.equipment-help'>Utstyr som ble brukt. 'trollvogn', 'atv', 'slede'.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                            <Input saved={saved} workout={workout} field='sledWeight' type='number' step='1' icon='fas fa-sleigh'\n                                title={<Text id='workouts.sledWeight'>Sledevekt</Text>}\n                                help={<Text id='workouts.sledWeight-help'>Vekt på sleden denne turen.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </div>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                {!util.checkNested(workout, 'yr', '0', 'instant', 'details') && <button class='btn btn-sm float-right btn-secondary' onClick={this.getYrWeather}>\n                                    <Text id='workouts.fetch-weather'>Hent fra yr</Text>\n                                </button>}\n                                <Input saved={saved} workout={workout} field='weather' icon='fas fa-cloud-sun-rain'\n                                    title={<Text id='workouts.weather'>Været på turen</Text>}\n                                    help={<Text id='workouts.weather-help'>Hvordan var været.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Input saved={saved} workout={workout} field='temperature' icon='fas fa-temperature-low'\n                                    title={<Text id='workouts.temperature'>Temperatur</Text>}\n                                    type='number' min='-40' max='20' step='0.5' \n                                    help={<Text id='workouts.temperature-help'>Hvilken temperatur var det.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                        {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Input saved={saved} workout={workout} field='rating' type='number' min='0' max='6' step='1' icon='fas fa-dice'\n                                    title={<Text id='workouts.rating'>Rating av turen</Text>}\n                                    help={<Text id='workouts.rating-help'>Din rating av turen. 1-6</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n                                <Intensities stores={this.props.stores} saved={saved} workout={workout} type='number' field='intensity' icon='fas fa-dumbbell'\n                                    title={<Text id='workouts.intensity'>Intensitet</Text>}\n                                    help={<Text id='workouts.intensity-help'>Hvor stor belastning var denne turen?</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </div>\n                        </>}\n                    </>}\n\n\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WorkoutsEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}