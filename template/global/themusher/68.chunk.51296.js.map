{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/add.js","webpack:///./components/story/publicDetail.js","webpack:///./routes/stories/detail.js","webpack:///./components/story/comments.js","webpack:///./components/style.css","webpack:///./components/story/publicStory.js","webpack:///./components/data/temperature.js","webpack:///./components/team/connect-boxes.js","webpack:///./components/ad/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/form/images.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/feedback/views.js","webpack:///./components/yrweather/index.js","webpack:///./components/team/fastList.js"],"names":["initialState","DisplayLikesAndComments","observer","props","toggleLikes","setState","showLikesList","state","render","this","stores","storyStore","teamStore","workoutStore","raceStore","likes","comments","type","onTeamClick","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","e","public","mu","getImage","team","priority","displayNameShort","name","displayName","href","uuidv4","title","id","fields","total","image","shortname","Component","touchStart","stopPropagation","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","imageDots","Array","fill","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","imgHeight","imgWidth","img","curImage","dimensions","width","height","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","ref","c","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","response","callback","inputRefObject","story","comment","showAddImage","status","body","resizeTextarea","addImage","addImages","push","value","handleImageErrored","target","onerror","setTimeout","Date","inputRef","userStore","userImage","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","disabled","onError","removeImage","data-name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","componentDidMount","initCall","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","insert","pinned","urlText","url","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","data","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","appState","isAdmin","firstname","ucfirst","lastname","email","teamId","parseInt","findTeam","darkmode","onChange","selected","checked","StoryPublicFeed","loadStoriesPublicFeed","publicFeed","showAllComments","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","MARGIN_TOP_BACK","marginTopBack","isLoading","submenu","viewmenu","Home","reloadFeeds","preventDefault","back","history","goBack","loadAll","messageStore","getFingerprint","getInfo","getNotifications","getUnReadMessages","currentLocationInfo","coords","getWeatherUser","lat","latitude","lon","longitude","altitude","yrWeather","currentLocationGeocode","place","formatted_address","role","showAddComment","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","dataset","likeStoryComment","replyId","likeStoryCommentReply","replyComment","parentElement","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","deleteCommentReplyStory","commentid","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","idx","translate","translatedText","key","replyid","translateCommentReply","translateComment","max_comments","compact","currentUser","language","filteredComments","totalComments","diplayedComments","Math","max","reverse","hasLikedComment","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","translation","getCommentTranslations","targetLang","data-comment","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","module","exports","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","publicFeedUpdate","storyType","saveStoryField","clearTimeout","updateTimer","doUpdateField","StoryTypeRegular","showStoryDetail","localName","route","likeRef","getTranslation","field","dblClick","offline","StoryTypeAd","componentWillMount","asUrl","rel","currencty","format","StoryTypeArticle","toggleDate","showDate","storyId","likeIds","Object","keys","toggleAddComment","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","shareLink","shareUrl","text","hashtag","username","userLink","onUserClick","hasShareApi","findPublicTeam","isTeamAdmin","members","some","m","settings","hideProfile","reports","hasLikedStory","totalFollowers","followers","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","views","getViews","statistics","adminData","getAdminData","buttonOnly","simple","classNames","date","formatDate","hour12","hour","minute","formattedCounty","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","data-url","data-title","data-native","Temperature","imperial","celciusToFahrenheit","requestSent","Teams","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","loadTeams","loadPublic","query","notfollowing","array","limit","publicTeamsToFollow","dogs","Ad","withText","subject","logClick","ads","adStore","apiServer","getApiServer","loadAd","page","section","path","currentTeam","findTeamAmbition","ambition","ambitions","findTeamType","postalcode","replace","load","setTime","time","match","ad","native","idxConfirm","idxSuggestion","idxAd","sessionid","getTime","dataFields","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","topRankedRandomized","shuffleArray","topRankedStories","feed","startPosition","now","forEach","parseInputDate","floor","endPosition","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","teamid","showTeam","hideTeam","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","sort","componentWillUnmount","hasNewStories","Images","handleAddImage","file","addToImages","skipTimer","files","uploadStatus","apiUrl","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","addData","hasFollowRequests","reqUser","isDeleted","isConfirmed","data-user","data-follow","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","isImage","result","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax","children","toggleViews","showViewList","viewUsersArrays","entries","weekObject","viewUsers","flat","userId","YrWeather","toggleyrWeather","showWeather","loadWeather","formatWeather","yrWeatherKeys","yrWeatherFormatted","captureEvents","onScroll","getNestedValue","night","morning","day","evening","getTemperatureColor","getWindSpeedColor","w","isoTime","windDirection","FastListLine","containerRef","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","isIntersecting","currentHeight","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses"],"mappings":"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","file":"68.chunk.51296.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\nconst MAX_USERS_TO_DISPLAY = 1;\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, MAX_USERS_TO_DISPLAY).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            const name = mu.displayName(user);\n                            return (<>\n                                <span class='font-weight-lighter'>\n                                    {publicTeam ? <>\n                                        <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                            {name}\n                                        </a>\n                                    </> : <>\n                                        {name}\n                                    </>}\n                                </span>\n                            </>);\n                            // return (<>\n                            //     {publicTeam ? <>\n                            //         <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                            //             <div\n                            //                 class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //                 style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                            //             >\n                            //                 {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //             </div>\n                            //         </a>\n                            //     </> : <>\n                            //         <div\n                            //             class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //             style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            //         >\n                            //             {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //         </div>\n                            //     </>}\n                            // </>);\n                        })}\n                        {likes.length > MAX_USERS_TO_DISPLAY && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - MAX_USERS_TO_DISPLAY }}>and {likes.length - MAX_USERS_TO_DISPLAY} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport Story from './publicStory';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n        const { story } = props;\n\t\tawait storyStore.loadPublicFeed({ story });\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.story !== this.props.story) {\n            this.loadStoriesPublicFeed(nextProps);\n        }\n    }\n\n    render() {\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n\n                <div class='row pb-4 bg-light'>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                        {!publicFeed || publicFeed.length === 0 && <>\n                            <div class='text-center text-muted mt-5'>\n                                <div class='display-1 text-center mb-5'>\n                                    <i class='fas fa-comment' />\n                                </div>\n                                <h3>No story found!</h3>\n                            </div>\n                        </>}\n                        {publicFeed && publicFeed.map((story) => <>\n                            <Story\n                                stores={this.props.stores}\n                                story={story}\n                                showAllComments={true}\n                            />\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport StoryPublicDetail from '../../components/story/publicDetail';\nimport Ad from '../../components/ad/';\nimport YrWeather from '../../components/yrweather/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n\tviewmenu: 'wall',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, messageStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\n\t\tconst { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n\t\t}\n\t\tthis.setState({ isLoading: false });\n    }\n\n\treloadFeeds = async (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadStoriesPublicFeed();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n        const { story } = props;\n\t\tawait storyStore.loadPublicFeed({ story });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\trender() {\n\t\tconst { isLoading } = this.state;\n        const { story } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { yrWeather, currentLocationGeocode = {} } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <div>\n                    <button class='btn btn-link pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}>\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                </div>\n\n                <Ad stores={this.props.stores} url={this.props.url} />\n                <div class='bg-light'>\n                    <YrWeather stores={this.props.stores} data={yrWeather} place={place} />\n                </div>\n\n                <StoryAdd stores={this.props.stores} />\n\n                <div class='row bg-light'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                        <small>\n                            <small>\n                                <div class='float-right'>\n                                    {isLoading ? <>\n                                        <div class='spinner-border text-primary' role='status'>\n                                            <span class='sr-only'>Loading...</span>\n                                        </div>\n                                    </> : <>\n                                        <a href='#' style='font-size: 1.8em;' onClick={this.reloadFeeds}><i class='fas fa-sync-alt' /></a>\n                                    </>}\n                                </div>\n                            </small>\n                            <span class='text-muted'>\n                                <i class='fas fa-rss' /> <Text id='home.wall'>Veggen</Text>\n                            </span>\n                        </small>\n                    </div>\n                </div>\n                <StoryPublicDetail stores={this.props.stores} story={story} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value);\n        }, 1000);\n    }\n\n    async doUpdateField(id, name, value) {\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), name, value);\n    }\n\n    render() {\n        const { storyBody, storyType } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        return (<>\n            <div class='d-flex bd-highlight'>\n                <div class='p-0 w-100 bd-highlight'>\n                    <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                    <div class='border rounded rounded-lg position-relative'>\n                        <Localizer>\n                            <textarea\n                                class='form-control-plaintext px-2'\n                                type='text'\n                                placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                onInput={linkState(this, 'storyBody')}\n                                // onKeyUp={mu.resizeTextarea}\n                                onFocus={mu.resizeTextarea}\n                                style='height: 2.3em;'\n                                value={storyBody || story.body}\n                            />\n                        </Localizer>\n                    </div>\n\n                    <div class='position-relative mt-3'>\n                        {isAdmin && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <label>Pinned to top:</label>\n                                        <input\n                                            type='checkbox'\n                                            id={story.id}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                        />\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                    <button type='button' class='btn btn-primary mb-2'\n                        onClick={this.saveStory}\n                        data-id={story.id}\n                    ><i class='fas fa-paper-plane' /></button>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>                    \n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                            {showEdit[story.id] && <>\n                                <StoryEditInline\n                                    stores={this.props.stores}\n                                    story={story}\n                                    key={`story-edit-${story.id}`}\n                                    callback={this.doneEdit}\n                                />\n                            </>}\n                            {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                            </div>}\n                        </div>\n                    </div>\n\n                    {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='mr-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='story'\n                                onTeamClick={onTeamClick}\n                                onUserClick={onUserClick}\n                            />\n                        </div>\n                        {views > 0 && <>\n                            <div>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={story}\n                                    type='story'\n                                    isTeamAdmin={isTeamAdmin}\n                                    isAdmin={isAdmin}\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                        </>}\n                    </div>\n\n                    {showTeamSetting[story.id] && <>\n                        <small>\n                            <div class='alert alert-info' role='alert'>\n                                <span class='display-4 float-left'>\n                                    <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                </span>\n                                <p>\n                                    <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                </p>\n                                <p>\n                                    <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                </p>\n                                <p>\n                                    <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                </p>\n                            </div>\n                        </small>\n                    </>}\n\n                    <div>\n                        <div class='row'>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                    data-id={story.id}\n                                    onClick={this.likeStory}\n                                >\n                                    <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                </button>\n                            </div>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                    data-id={story.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                </button>\n                            </div>\n                            {hasShareApi ? <>\n                                <div class='col text-center'>\n                                    <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        onClick={this.shareLink}\n                                        data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        data-title={`title: ${story.title}`}\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </button>\n                                </div>\n                            </> : <>\n                                <div class='col text-center'>\n                                    <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        data-native\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </a>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n\n                    <div class='mt-2'>\n                        <StoryComments\n                            stores={this.props.stores}\n                            story={story}\n                            col='10'\n                            offset='2'\n                            compact={false}\n                            showAllComments={showAllComments}\n                            initCall={this.closeAllAddComments}\n                        />\n                        {showAddComment[story.id] && <StoryAddComment\n                            stores={this.props.stores}\n                            story={story}\n                            inputRef={c => this.inputRef[story.id] = c}\n                            inputRefObject={this.inputRef}\n                            col='10'\n                            offset='2'\n                            key={`story-comment-${story.id}`}\n                        />}\n                    </div>\n\n                {/* </div> */}\n\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n\n        if (!offset) {\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-end mb-2'>\n                <span class='ml-2 text-muted font-weight-lighter'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </span>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}