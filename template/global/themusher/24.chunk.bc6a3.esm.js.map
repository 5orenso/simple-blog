{"version":3,"sources":["webpack:///./components/story/add.js","webpack:///./components/team/connect-boxes.js","webpack:///./components/dog/scroller.js","webpack:///./components/ad/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/yrweather/index.js","webpack:///./components/team/fastList.js"],"names":["initialState","showAddImage","showTeamChange","showChangeVisibility","showChangeType","sendButtonEnabled","StoryAdd","observer","Component","constructor","props","super","beforeImagesUploaded","this","setState","afterImagesUploaded","addStory","async","story","state","callback","hashTags","postfix","topic","team","storyStore","stores","body","length","map","tag","join","response","insert","type","title","pinned","images","public","urlText","url","currency","price","code","country","region","startDate","endDate","status","loadPublicFeed","hashtags","mu","resizeTextarea","inputRef","addImage","data","addImages","value","push","removeImage","e","imageName","target","parentElement","dataset","name","util","isArray","idx","findIndex","splice","changeVisibility","changePinned","changeType","toggleTeamChange","handleImageErrored","image","onerror","setTimeout","src","Date","setPublicTeam","userStore","publicTeams","findPublicTeams","id","setFocus","hasFocus","removeFocus","componentDidMount","render","col","offset","appState","user","isAdmin","displayNameShort","firstname","ucfirst","lastname","email","userImage","undefined","teamId","parseInt","findTeam","darkmode","class","style","s3SmallLink","onClick","for","placeholder","onInput","linkState","onKeyUp","onFocus","ref","c","data-id","href","disabled","onChange","teams","selected","checked","img","onError","data-name","object","updateField","before","after","autoOpen","requestSent","Teams","requestFollowTeam","teamStore","closest","followRequest","getButton","isYourTeam","members","isFollowing","followers","indexOf","isBlocked","blockedFollowers","hasRequestedFollow","followRequests","unFollowTeam","data-team","isLoading","loadPublic","query","notfollowing","array","limit","loadTeams","publicTeamsToFollow","place","dogs","DogScroller","scrollImages","scrollLeft","clientWidth","imageIdx","nearestInt","Math","round","diff","abs","Number","isInteger","sortByName","a","b","allDogs","dogA","find","dogB","size","onDogClick","onScroll","sort","dogId","dog","onTouchstart","stopPropagation","onTouchend","onTouchmove","filter","d","className","showName","showPosition","showAddComment","Ad","withText","subject","logClick","adStore","ads","updateTimer","apiServer","getApiServer","workoutStore","section","path","currentTeam","language","ambitions","postalcode","findTeamAmbition","ambition","findTeamType","page","replace","load","setTime","loadAd","componentWillReceiveProps","nextProps","time","match","rel","ad","native","s3LargeLink","MARGIN_TOP","marginTop","loading","idxConfirm","idxSuggestion","idxAd","sessionid","getTime","dataFields","StoryPublicFeed","reloadStories","loadStoriesPublicFeed","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","publicFeed","topRankedStories","topRankedRandomized","shuffleArray","feed","startPosition","now","forEach","date","parseInputDate","floor","endPosition","i","l","randomPlace","randomInt","isObject","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","onTeamClick","teamid","preventDefault","showTeam","hideTeam","onUserClick","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","hashtag","holdingStore","key","componentWillMount","componentWillUnmount","hasNewStories","publicDogs","marginBottom","back","role","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","addData","hasFollowRequests","reqUser","isDeleted","isConfirmed","publicTeam","displayName","data-user","data-follow","YrWeather","toggleyrWeather","showWeather","currentLocationInfo","coords","latitude","lat","longitude","lon","altitude","getWeatherUser","formatWeather","loadWeather","yrWeather","yrWeatherKeys","yrWeatherFormatted","currentLocationGeocode","formatted_address","captureEvents","getNestedValue","night","morning","day","evening","getTemperatureColor","format","getWindSpeedColor","slice","w","isoTime","windDirection","FastListLine","containerRef","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","data-idx","FastList","deleteIntersectionObserver","intersectionObserver","entries","isIntersecting","height","currentHeight","max","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses"],"mappings":"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","file":"24.chunk.bc6a3.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    removeImage = async (e) => {\n        const { story } = this.state;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        if (util.isArray(story.images)) {\n            const idx = story.images.findIndex(e => e.name === imageName);\n            if (idx > -1) {\n                story.images.splice(idx, 1);\n            }\n        }\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n// const fieldSorter = (fields) => (a, b) => fields.map(o => {\n//     let dir = 1;\n//     if (o[0] === '-') { dir = -1; o=o.substring(1); }\n//     return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n// }).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            // this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    // insertWorkouts = () => {\n    //     const { storyStore } = this.props.stores;\n    //     const { publicWorkouts, publicFeed } = storyStore;\n    //     if (publicWorkouts.length) {\n    //         const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n    //         storyStore.localUpdateField('publicFeed', finalArray);\n    //     }\n    // }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories, publicDogs } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={publicDogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}