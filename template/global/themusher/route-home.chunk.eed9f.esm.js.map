{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/workout/status.js","webpack:///./components/story/add.js","webpack:///./components/story/comments.js","webpack:///./components/team/publicFeed.js","webpack:///./components/user/updateSettings.js","webpack:///./components/workout/table.js","webpack:///./components/story/publicFeed.js","webpack:///./components/races/index.js","webpack:///./components/notifications/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","viewmenu","Home","observer","Component","constructor","props","super","loadTeamInfo","async","loadWorkoutSummary","loadWorkoutPlans","year","currentMonth","Date","getMonth","currentYear","util","getYear","seasonStart","parseInt","workoutPlanStore","workoutStore","userStore","stores","team","currentTeam","id","load","query","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","prepareWeekGraphs","updateItem","resetGraphPlanWeekDistanceCurrent","loadDogs","dogStore","addData","reloadFeeds","e","preventDefault","setState","loadStoriesPublicFeed","loadTeamsPublicFeed","setViewMenu","menu","target","closest","dataset","this","toggleViewmode","appState","mode","parentNode","chooseSubmenu","parentElement","state","getFingerprint","getInfo","getNotifications","Promise","all","loadTeams","teamStore","skipMusherWorkoutSummary","getFeed","getWorkoutSummary","storyStore","loadPublicFeed","componentDidMount","loadAll","render","stravaActivityStore","garminActivityDetailsStore","workoutPlan","darkmode","viewmode","workouts","teams","tracks","isAdmin","dogs","totalTeams","length","totalDogs","totalTracks","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","currentTeamObject","findTeam","workoutSummary","workoutSummary2019","findWorkoutSummary","findWorkoutSummaryTotal","workoutSummary2020","user","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","format","indexOf","url","type","data-mode","onClick","data-menu","callback","key","distancekm","currentSeason","prevSeason","showHeader","strava","map","act","activity","garmin","fields","total","name","workout","comment","body","images","showAddImage","StoryAdd","commentStory","inputRefObject","story","response","status","resizeTextarea","addImage","addImages","value","push","handleImageErrored","image","onerror","setTimeout","src","inputRef","displayNameShort","firstname","ucfirst","lastname","email","userImage","undefined","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","ref","data-id","img","onError","removeImage","data-name","object","updateField","StoryCommentReply","commentId","commentReplyStory","WorkoutStatus","language","MONTHS","getMonths","months","monthRange","lastPlanMonth","month","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","aria-valuenow","aria-valuemin","aria-valuemax","title","public","showTeamChange","showChangeVisibility","addStory","insert","data","changeVisibility","toggleTeamChange","col","offset","c","onChange","teamId","selected","showAddComment","showAllComments","showAllReplies","viewImageIdx","StoryComments","likeComment","likeStoryComment","likeReply","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","viewImage","idx","compact","currentUser","max_comments","filteredComments","totalComments","diplayedComments","comments","slice","Math","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","markdown","replaceImages","markdownOpts","getMarkdownOptions","s3LargeLink","data-idx","formatDistance","createdDate","locale","reply","hasLikedReply","data-comment","more","TeamPublicFeed","toggleDate","stopPropagation","showDate","likeWorkout","workoutId","addLikeToFeed","addCommentToFeed","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","addLikeToWorkout","toggleAddComment","publicTeamsFeed","feed","findPublicTeam","hasLikedWorkout","totalFollowers","followers","isYourTeam","members","isFollowing","hasRequestedFollow","followRequests","mapImage","date","formatDate","hour12","hour","minute","equipment","findEquipment","track","sledWeight","temperature","distanceKm","elevation","duration","speedAvg","buttonOnly","showAvatar","extraClass","toggleSetting","field","settings","updateSetting","hideSettings","forceShow","summaryEmails","infoEmails","partnerEmails","checked","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","floor","xTicks","i","l","m","scope","StoryPublicFeed","likeStory","storyId","publicFeed","findPublicUser","shortname","hasLikedStory","line","isString","text","match","RegExp","exec","parsedLanguageText","replace","p1","p2","isObject","s3XXLargeLink","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","raceStore","loadRace","componentWillReceiveProps","nextProps","newsStore","notifications","races","newsList","sort","a","b","startDate","race","today","endDate","signupStartDate","signupEndDate","active","s3MediumLink","ingress","classes","currentClass","profile","main","searchText","Notifications","unread","filter","read"],"mappings":"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","file":"route-home.chunk.eed9f.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\n// import DogStatus from '../../components/dog/status';\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport Races from '../../components/races';\nimport Notifications from '../../components/notifications';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n\tviewmenu: 'wall',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, workoutStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\t// await this.loadFeed();\n\t\tawait this.loadWorkoutSummary();\n\t\t// await this.loadDogs();\n\t\tawait Promise.all([\n\t\t\tthis.loadWorkoutPlans(),\n\t\t\tthis.loadTeams(),\n\t\t]);\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadTeamInfo = async () => {\n\t\tawait this.loadWorkoutSummary();\n\t\tawait this.loadWorkoutPlans();\n\t\t// await this.loadTeams();\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadFeed() {\n\t\tconst { userStore } = this.props.stores;\n        await userStore.getFeed({});\n    }\n\n\tasync loadWorkoutSummary() {\n\t\tconst { userStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\t// await workoutStore.load({ query: { team: currentTeam } });\n        await userStore.getWorkoutSummary({ team: currentTeam });\n    }\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { team } = userStore;\n\t\tconst { currentTeam = team.id } = workoutStore;\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t} else {\n\t\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t}\n\t}\n\n\tloadDogs = async () => {\n\t\tconst { dogStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\n\t\tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t}\n\n\treloadFeeds = async (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadStoriesPublicFeed();\n\t\tawait this.loadTeamsPublicFeed();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed();\n\t}\n\n\tasync loadTeamsPublicFeed(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed();\n\t}\n\n\tsetViewMenu = (e) => {\n\t\te.preventDefault();\n\t\tconst menu = e.target.closest('a').dataset.menu;\n\t\tthis.setState({ viewmenu: menu });\n\t}\n\n\ttoggleViewmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tlet mode = e.target.dataset.mode;\n\t\tif (!mode && e.target.parentNode) {\n\t\t\tmode = e.target.parentNode.dataset.mode;\n\t\t}\n\t\tappState.toggleViewmode(mode);\n\t}\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { isLoading, submenu, viewmenu } = this.state;\n\t\tconst { userStore, dogStore, appState, workoutPlanStore, teamStore, workoutStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode } = appState;\n\t\tconst {\n\t\t\tworkouts,\n\t\t\tteams, tracks, isAdmin, dogs,\n\t\t} = userStore;\n\t\t// const { dogs } = dogStore;\n\t\t// const dogsInjured = dogStore.findDogsByStatus(2);\n\t\t// const dogsPregnant = dogStore.findDogsByStatus(4);\n\t\t// const dogsMedication = dogStore.findDogsByStatus(8);\n\t\t// const dogsSick = dogStore.findDogsByStatus(9);\n\t\t// const dogsWithStatus = dogStore.findDogsByStatus([2, 4, 8, 9]);\n\t\t// const dogsWithNeeds = dogStore.findDogsWithNeeds();\n\n\t\tconst totalTeams = teams.length;\n\t\tconst totalDogs = dogs.length;\n\t\tconst totalTracks = tracks.length;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\t\tconst { workoutSummary } = teamStore;\n\t\tconst workoutSummary2019 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2019) : teamStore.findWorkoutSummaryTotal(2019)) || {};\n        const workoutSummary2020 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2020) : teamStore.findWorkoutSummaryTotal(2020)) || {};\n\n\t\tconst { user } = userStore;\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t{isAdmin && <div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/admin' class='text-secondary stretched-link'><nobr><i class='fas fa-user-shield' /> <Text id='home.admin'>Admin</Text></nobr></a>\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div class={`col text-center subtopmenu border-bottom border-primary`}>\n\t\t\t\t\t\t<a href='/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='home.dashboard'>Dashboard</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/feed' class='text-secondary stretched-link'><nobr><i class='fas fa-rss' /> <Text id='home.feed'>Feed</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/todo' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='home.todo'>Todo</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{['beta'].indexOf(viewmode) > -1 ? <>\n\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-center'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button' \n\t\t\t\t\t\t\t\tclass='btn btn-link btn-sm font-weight-lighter'\n\t\t\t\t\t\t\t\tdata-mode='normal'\n\t\t\t\t\t\t\t\tonClick={this.toggleViewmode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<i class='fas fa-flask' /> <Text id='header.viewmode-back-to-normal'>Gå tilbake til vanlig versjon</Text>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<StoryAdd stores={this.props.stores} />\n\n\t\t\t\t\t<div class='row bg-light'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<div class='float-right'>\n\t\t\t\t\t\t\t\t\t\t{isLoading ? <>\n\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t<a href='#' style='font-size: 1.8em;' onClick={this.reloadFeeds}><i class='fas fa-sync-alt' /></a>\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<ul class='nav nav-sm nav-tabs'>\n\t\t\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'wall' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='wall'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-rss' /> <Text id='home.wall'>Veggen</Text>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'workout' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='workout'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-running' /> <Text id='home.workouts'>Treninger</Text>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'totals' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='totals'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-list-ol' /> <Text id='home.totals'>Totaler</Text>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{viewmenu === 'wall' && <>\n\t\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} />\n\t\t\t\t\t</>}\n\t\t\t\t\t{viewmenu === 'workout' && <>\n\t\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} />\n\t\t\t\t\t</>}\n\t\t\t\t\t{viewmenu === 'totals' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadTeamInfo} key={`teams-${currentTeam}`} />\n\t\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} key={`totals-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} key={`status-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\t\t\t\t</> : <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadTeamInfo} key={`teams-${currentTeam}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t{/* {isLoading && <div class='text-center mt-5 mb-5'>\n\t\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>} */}\n\n\t\t\t\t\t\t\t{!isLoading && workoutSummary && workoutSummary.length === 0 && (\n\t\t\t\t\t\t\t\t<div class='mb-5 py-3 border-top border-bottom'>\n\t\t\t\t\t\t\t\t\t<div class='text-center'>\n\t\t\t\t\t\t\t\t\t\t<div class='display-4'>\n\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-paw' />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-title'>Velkommen til The Musher.</Text>\n\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-1'>The Musher er en app som er kontinuerlig under utvikling.\n\t\t\t\t\t\t\t\t\t\t\tAlle ideer/innspill/kommentarer mottas med stor takk på Facebooksiden vår 😃</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-2'>Fokus til appen er enkel registrering av hunder, team, treninger og hendelser rundt hundene.\n\t\t\t\t\t\t\t\t\t\t\tNår man har mange hunder så er det ofte vanskelig å holde styr på løpetid, vaksiner, treninger,\n\t\t\t\t\t\t\t\t\t\t\tskader, vetrinærbesøk, chiplister, osv.</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-3'>Alle data lagres sentralt i skyen hos AWS (Amazon Web Services) og det vil derfor være mulig å bruke appen fra flere telefoner\n\t\t\t\t\t\t\t\t\t\t\tog datamaskiner samtidig. Dette kan være fint dersom det er flere som trener og følger opp hundene.</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<Text id='home.howto-title'>Slik kommer du i gang:</Text>\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t{totalTeams < 1 && <li><a class='btn btn-info mt-3' href='/teams/'><Text id='home.howto-step-1'>Legg inn teamene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t{totalDogs < 1 && <li><a class='btn btn-info mt-3' href='/dogs/'><Text id='home.howto-step-2'>Legg inn hundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t{totalTracks < 1 && <li><a class='btn btn-info mt-3' href='/tracks/'><Text id='home.howto-step-3'>Legg inn rundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t<li><a class='btn btn-info mt-3' href='/workouts/'><Text id='home.howto-step-4'>Begynn å registrere treningene.</Text></a></li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} key={`graph-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t\t\t{['beta', 'advanced'].indexOf(viewmode) > -1 && <>\n\t\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tkey={`workout-table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t\n\n\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t\t<div class='row'>\n\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'races' ? 'btn-danger' : 'btn-outline-danger'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='races'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-dog' /> <Text id='home.races'>Løp</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'lastWorkouts' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='lastWorkouts'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-running' /> <Text id='home.workouts'>Treninger</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-equals' /> <Text id='home.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplanStatus' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='workoutplanStatus'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-chart-line' /> <Text id='home.status'>Status</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{submenu === 'races' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<Install />\n\t\t\t\t\t\t\t<InviteFriend stores={this.props.stores} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'totals' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} key={`totals-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'workoutplanStatus' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} key={`status-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Notifications stores={this.props.stores} />\n\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button' \n\t\t\t\t\t\t\t\tclass='btn btn-success btn-block'\n\t\t\t\t\t\t\t\tdata-mode='beta'\n\t\t\t\t\t\t\t\tonClick={this.toggleViewmode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-flask' /> <Text id='header.viewmode-try-beta'>Prøv den nye versjonen av forsiden</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='row'>\n\n\t\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{workouts && workouts.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t<Text id='home.last-workouts' fields={{ total: workouts.length }}>Siste treningsturer - {workouts.length} stk</Text>\n\t\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{workouts && workouts.map(workout => (\n\t\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>}\n\n\t\t\t\t</>}\n\n\t\t\t\t{/* {!isLoading && <UserUpdate stores={this.props.stores} />} */}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tcomment: {\n        body: '',\n        images: [],\n    },\n    showAddImage: false,\n};\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment } = this.state;\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                this.addImage();\n            });\n            callback({ story, response });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {comment.images && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    commentStory = async () => {\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control form-control-sm rounded rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentStory}\n                                ><Text id='comments.add-comment'>Send</Text></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    render() {\n\t\tconst { currentSeason, prevSeason } = this.props;\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { team } = teamStore;\n\n        const { year } = this.props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n        const months = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > currentYear || (month.year === currentYear && month.month >= currentMonth)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center'>\n                        <h3>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tstory: {\n        title: '',\n        body: '',\n        images: [],\n        public: 1,\n    },\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addStory = async () => {\n        const { callback = () => {} } = this.props;\n        const { story = {} } = this.state;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!story.body) {\n            return false;\n        }\n\t\tconst response = await storyStore.insert({\n            title: story.title,\n            body: story.body,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed();\n            callback(response.data);\n            this.setState({\n                story: {\n                    title: '',\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                this.addImage();\n            });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { col = 12, offset = 0 } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {} } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                <div class='row bg-light'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-3 mt-2`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 20px; right: 0px;'>\n                                    <small class='text-muted font-weight-lighter'>\n                                        <i class='fas fa-edit pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                        <button type='button' class='btn btn-primary mb-2'\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    {user.teams && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    <div class='col-12 text-center'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public === 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public === 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {story.images && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} />\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx } = this.state;\n\t\tconst { story, callback = () => {}, compact = false } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'no' } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row'>\n                                                    <div\n                                                        class={`col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 30vh;`}                                                    \n                                                    >\n                                                        <img class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                            <Markdown markdown={mu.replaceImages(reply.comment, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageSlider from '../imageSlider';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    viewImageIdx: {},\n};\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { teamStore } = this.props.stores;\n        switch (type) {\n            case 'likeComment':\n                teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                break;\n            case 'likeReply':\n                teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                break;\n        \n            default:\n                if (commentId) {\n                    teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                } else {\n                    teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                }\n                break;\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { teamStore } = this.props.stores;\n        teamStore.addLikeToWorkout({ id, data });\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadTeamsPublicFeed(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed();\n\t}\n\n    async loadAll() {\n\t\tawait this.loadTeamsPublicFeed();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n\t}\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx = {} } = this.state;\n        const { teamStore, userStore, appState } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'no' } = user;\n        const { publicTeamsFeed } = teamStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                {publicTeamsFeed && publicTeamsFeed.map((feed) => {\n                    const team = teamStore.findPublicTeam(feed.team) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    }\n                    const { likes, comments } = feed;\n                    const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n                    const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n                    const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n                    const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n                    const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n                    const images = [];\n                    if (feed.mapImage) {\n                        images.push({\n                            ...feed.mapImage,\n                            type: 'map',\n                        });\n                    }\n                    if (feed.images) {\n                        const imgs = toJS(feed.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[feed.id] ? viewImageIdx[feed.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n                    // if (feed.gpxInfo && feed.gpxInfo.svgMap) {\n                    //     images.push({\n                    //         svg: feed.gpxInfo.svgMap,\n                    //         stroke: '#0275d8',\n                    //     });\n                    // }\n                    // if (feed.gpxInfo && feed.gpxInfo.svgElevation) {\n                    //     images.push({\n                    //         svg: feed.gpxInfo.svgElevation,\n                    //         stroke: '#5cb85c',\n                    //     });\n                    // }\n\n                    if (!team || !team.name) {\n                        return '';\n                    }\n\n                    return (<>\n                        <div class='row pb-4 bg-light'>\n                            <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\n                                <div class='d-flex'>\n                                    <div class='text-center'>\n                                        <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                            {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                                        </div>\n                                    </div>\n                                    <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                        <h5 class='mb-1' style='line-height: 1.0em;'>{team.name}</h5>\n                                        <div>\n                                            {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                                                {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                                            </small>}\n                                            {feed.public === 1 ? <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-globe-europe' />\n                                                </small>\n                                            </> : <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                                </small>\n                                            </>}\n                                            <small class='text-muted'>\n                                                {feed.equipment > 0 && <><i class='fas fa-tools ml-2' /> {userStore.findEquipment(feed.equipment) || feed.equipment}</>}\n                                                {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                                                {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                                                {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                                                {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                                                {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                                                {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                                                {feed.sledWeight > 0 && <>\n                                                    <i class='fas fa-sleigh ml-2' /> {util.format(feed.sledWeight, 0)} kg\n                                                </>}\n                                                {feed.temperature !== 0 && <>\n                                                    <i class='fas fa-temperature-low ml-2' /> {feed.temperature}°C\n                                                </>}\n                                                {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                                                {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                                                {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                                                {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                                            </small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='row mt-2'>\n                                    <div class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;'>\n                                        <Markdown markdown={mu.replaceImages(feed.name, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                    <div class='clearfix col-12'>\n                                        <Markdown markdown={mu.replaceImages(feed.comment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                </div>\n\n                                <div class='row mt-1'>\n                                    {feed.distanceKm > 0 && <div class='col-3'>\n                                        <div class='text-overflow'>\n                                            <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                                        </div>\n                                        <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                            {displayDistance(feed.distanceKm)}km\n                                        </div>\n                                    </div>}\n                                    {feed.elevation > 0 && <div class='col-3'>\n                                        <div class='text-overflow'>\n                                            <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                                        </div>\n                                        <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                            {util.format(feed.elevation, 0)}m\n                                        </div>\n                                    </div>}\n                                    {feed.duration > 0 && <div class='col-3'>\n                                        <div class='text-overflow'>\n                                            <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                                        </div>\n                                        <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                            {util.secToHms(feed.duration, true)}\n                                        </div>\n                                    </div>}\n                                    {feed.speedAvg > 0 && <div class='col-3'>\n                                        <div class='text-overflow'>\n                                            <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                                        </div>\n                                        <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                            {util.format(feed.speedAvg, 1)}km/t\n                                        </div>\n                                    </div>}\n                                </div>                            \n\n                                {/* <div class='row'>\n                                    <div class='row mb-3'>\n                                        {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                                            <div class='col-6 mt-auto text-center overflow-hidden'>\n                                                <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                                    <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                                                </svg>\n                                                <small class='text-muted'>Track</small>\n                                            </div>\n                                        </>}\n                                        {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                                            <div class='col-6 mt-auto text-center overflow-hidden'>\n                                                <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                                    <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                                                </svg>\n                                                <small class='text-muted'>Elevation</small>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div> */}\n\n                                <div class='container-fluid px-0 mt-1'>\n                                    {currentImage && <div class='clearfix row'>\n                                        <div\n                                            class={`col-12 px-0 overflow-hidden`}\n                                            style={`max-height: 50vh;`}                                                    \n                                        >\n                                            <img class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                        </div>\n                                    </div>}\n                                    {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                        {images.map((img, idx) => {\n                                            // if (img.svg) {\n                                            //     return (<>\n                                            //         <div class={`col-4 mt-auto`}>\n                                            //             <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                            //                 <path d={`${img.svg}`} style={`fill: none; stroke: ${img.stroke || '#0275d8'}; stroke-width: 5; opacity: 0.5;`} />\n                                            //             </svg>\n                                            //         </div>\n                                            //     </>);\n                                            // }\n                                            return (<>\n                                                <div\n                                                    class={`col px-0 overflow-hidden`}\n                                                    style={`max-height: 100px;`}                                                    \n                                                >\n                                                    <img class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={feed.id} data-idx={idx} />\n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>}\n                                </div>\n\n                                <div class='mt-2'>\n                                    {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                    </small>}\n                                    {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-comment text-primary' /> {comments.length}\n                                    </small>}\n                                </div>\n\n                                {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                                </div>}\n\n                                <div>\n                                    <div class='row'>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class={`btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''}`}\n                                                data-id={feed.id}\n                                                onClick={this.likeWorkout}\n                                                // disabled={hasLikedWorkout}\n                                            >\n                                                <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                            </button>\n                                        </div>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                                data-id={feed.id}\n                                                onClick={this.toggleAddComment}\n                                            >\n                                                <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {showAddComment[feed.id] && <WorkoutAddComment\n                                        stores={this.props.stores}\n                                        workout={feed}\n                                        inputRef={c => this.inputRef[feed.id] = c}\n                                        inputRefObject={this.inputRef}\n                                        col='12'\n                                        offset='0'\n                                        showAvatar={true}\n                                        extraClass='px-0'\n                                        callback={this.addCommentToFeed}\n                                    />}\n                                    <WorkoutComments\n                                        stores={this.props.stores}\n                                        workout={feed}\n                                        col='12'\n                                        offset='0'\n                                        compact={false}\n                                        callback={this.addCommentToFeed}\n                                    />\n                                </div>\n                            </div>\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-06-01`, `${seasonStart}-05-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n    viewImageIdx: {},\n};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const storyId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response.status === 200) {\n            // this.addLikeToFeed(storyId, response.data);\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed();\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx } = this.state;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user } = userStore;\n        const { publicFeed } = storyStore;\n\t\tconst { language = 'no' } = user;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                {publicFeed && publicFeed.map((story) => {\n                    const team = storyStore.findPublicTeam(story.team) || {};\n                    const user = storyStore.findPublicUser(story.user) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    } else if (user.image && user.image.s3SmallLink) {\n                        image = user.image;\n                    } else if (user.images && user.images[0] && user.images[0].s3SmallLink) {\n                        image = user.images[0];\n                    }\n                    let shortname;\n                    let name;\n                    if (team && team.name) {\n                        shortname = mu.displayNameShort(team);\n                        name = mu.displayName(team);\n                    } else if (user && user.id) {\n                        shortname = mu.displayNameShort(user);\n                        name = mu.displayName(user);\n                    }\n                    const { likes, comments } = story;\n                    const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === user.id) > -1;\n                    const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n                    const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n                    const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n                    const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n                    const images = [];\n                    if (story.images) {\n                        const imgs = toJS(story.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    return (<>\n                        <div class='row pb-4 bg-light'>\n                            <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\n                                <div class='d-flex'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                        {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                        <h5 class='mb-1' style='line-height: 1.0em;'>{name}</h5>\n                                        <div class='mb-2'>\n                                            {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                                {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                            </small>}\n                                            {story.public === 1 ? <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-globe-europe' />\n                                                </small>\n                                            </> : <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                                </small>\n                                            </>}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='row mt-2'>\n                                    <div class='clearfix col-12'>\n                                        <Markdown markdown={mu.replaceImages(story.body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                </div>\n\n                                <div class='container-fluid px-0 mt-1'>\n                                    {currentImage && <div class='clearfix row'>\n                                        <div\n                                            class={`col-12 px-0 overflow-hidden`}\n                                            style={`max-height: 70vh;`}                                                    \n                                        >\n                                            <img class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                        </div>\n                                    </div>}\n                                    {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                        {images.map((img, idx) => {\n                                            return (<>\n                                                <div\n                                                    class={`col px-0 overflow-hidden`}\n                                                    style={`max-height: 100px; min-width: 100px;`}                                                    \n                                                >\n                                                    <img class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={story.id} data-idx={idx} />\n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>}\n                                </div>\n\n                                {/* <div class='row'>\n                                    <div class='mx-0 px-0 clearfix row'>\n                                        {story.images && story.images.map((img, idx) => {\n                                            const width_first = 'col-12';\n                                            const width_second = 'col';\n                                            return (<>\n                                                <div class={`px-0 ${idx === 0 ? width_first : width_second} overflow-hidden`} style={`max-height: 60vh;`}>\n                                                    <img class={`img-fluid ${idx > 0 ? 'border border-2' : ''}`} style='min-width: 100px;' src={img.s3LargeLink} />                                        \n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>\n                                </div> */}\n\n                                <div class='mt-2'>\n                                    {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                    </small>}\n                                    {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-comment text-primary' /> {comments.length}\n                                    </small>}\n                                </div>\n\n                                {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <div class='clearfix mb-2'>\n                                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                                </div>}\n\n                                <div>\n                                    <div class='row'>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class={`btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''}`}\n                                                data-id={story.id}\n                                                onClick={this.likeStory}\n                                                // disabled={hasLikedStory}\n                                            >\n                                                <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                            </button>\n                                        </div>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                                data-id={story.id}\n                                                onClick={this.toggleAddComment}\n                                            >\n                                                <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {showAddComment[story.id] && <StoryAddComment\n                                        stores={this.props.stores}\n                                        story={story}\n                                        inputRef={c => this.inputRef[story.id] = c}\n                                        inputRefObject={this.inputRef}\n                                        col='10'\n                                        offset='2'\n                                    />}\n                                    <StoryComments\n                                        stores={this.props.stores}\n                                        story={story}\n                                        col='10'\n                                        offset='2'\n                                        compact={false}\n                                    />\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nfunction replaceImages(line = '', images, language = 'no') {\n    function imageReplacer(match, p1, p2, p3, offset, string) {\n        // console.log({ match, p1, p2, p3, offset, string })\n        if (util.isObject(images[p1])) {\n            return `<img src=${images[p1].s3XXLargeLink} class='img-fluid float-right' style='width: ${p2 || 40}%;' />`;\n        }\n        return '';\n    }\n\n    if (util.isString(line)) {\n\t\tlet text = line;\n        const regex = new RegExp(`<${language}>(.*?)</${language}>`, 's');\n\t\tconst match = regex.exec(text);\n\t\tif (match) {\n\t\t\tconst parsedLanguageText = match[0];\n\t\t\tif (parsedLanguageText) {\n\t\t\t\ttext = parsedLanguageText;\n\t\t\t}\n\t\t}\n        return text.replace(/\\{\\{img\\.(\\d+)\\s*(\\d*)\\}\\}/g, imageReplacer);\n    }\n    return line;\n}\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {};\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode, language = 'no' } = appState;\n\t\tconst { showNews } = this.state;\n\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <h5><Text id='races.homerun'>Homerun races</Text></h5>\n                </div>\n\n                {(races || races.length === 0) && <div class='col-12 text-center py-5'>\n                    <h5>No upcoming races!</h5>\n                    Take a look at the previous races:<br />\n                    <a href='https://homerunrace.no/'>homerunrace.no</a>\n                </div>}\n\n                {races && races.sort((a, b) => a.startDate - b.startDate).reverse().map(race =>  {\n                    const today = new Date();\n                    let status = '';\n                    if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                        status = 'race';\n                    } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                        status = 'signup';\n                    } else if (today > new Date(race.endDate)) {\n                        return (<></>);\n                    }\n\n                    return (<>\n                        <div class='col-12 col-sm-12 col-md-6 col-lg-6 mb-3'>\n\n                            <div class='card position-relative'>\n                                <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                    {status === 'signup' && <>\n                                        <div class='spinner-grow text-primary' role='status' />\n                                    </>}\n                                    {status === 'race' && <>\n                                        <div class='spinner-grow text-danger' role='status' />\n                                    </>}\n                                    {status === 'done' && <>\n                                        <span><i class='fas fa-check text-success' /></span>\n                                    </>}\n                                </h5>\n                                <h5 class='card-header'>\n                                    {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                    {race.title}\n                                </h5>\n                                <div class='list-thumb d-flex align-items-center position-relative'>\n                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                        {status === 'signup' && <>\n                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                        </>}\n                                        {status === 'race' && <>\n                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                        </>}\n                                        {status === 'done' && <>\n                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                        </>}\n                                    </h5>\n                                    {(race.images && race.images[0]) ? <img src={race.images[0].s3MediumLink} class='card-img-top' /> : ''}\n                                </div>\n                                <div class='card-body'>\n                                    <p class='card-text'>\n                                        <Markdown markdown={replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\t\t\t\t\t\t\t\t\n                                    </p>\n                                    {race.classes && <>\n                                        <div class='mb-3'>\n                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                    {currentClass.title}\n                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                </span>\n                                            </>)}\t\t\t\t\t\t\t\t\t\t\t\n                                        </div>\n                                    </>}\n                                    <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'><Text id='races.read-more'>Les mer</Text></a>\n                                </div>\n                                <div class='card-footer'>\n                                    <small class='text-muted'>\n                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\t\t\t\t\t\t\n                    </>);\n                })}\n\n\n            </div>\n        );\n    }\n}\n\nexport default Races;\n","import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nconst initialState = {\n    menu: {\n\t\tprofile: false,\n\t\tmain: false,\n\t},\n\tsearchText: '',\n};\n\n@observer\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n\t\tconst { notifications = [] } = userStore;\n\t\tconst unreadNotificatins = notifications.filter(e => !e.read);\n\t\tconst unread = unreadNotificatins.length || 0;\n\n        if (unread < 3) {\n            return '';\n        }\n\n\t\treturn (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 clearfix px-0'>\n                <div class='alert alert-danger' role='alert'>\n                    <a href='/users/notifications' class='text-dark'>\n                        <i class='fas fa-bell mr-2 text-dark' />\n                        <span class='badge badge-pill badge-danger'>{unread}</span> <Text id='notifications.unread'>Uleste varslinger. Klikk her for å se alle...</Text>\n                    </a>\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Notifications;\n"],"sourceRoot":""}