{"version":3,"sources":["webpack:///./routes/veterinary/header.js","webpack:///./routes/veterinary/index.js"],"names":["initialState","menu","profile","main","searchText","observer","props","toggleDropdown","e","state","menuName","target","dataset","name","parentNode","setState","toggleDarkmode","stores","appState","toggleViewmode","mode","reloadApp","window","location","reload","adminLoadAll","userStore","getInfo","changeLanguage","lang","value","console","log","user","email","setLanguage","language","search","route","render","this","darkmode","notifications","filter","read","class","style","href","src","height","type","data-name","onClick","id","onInput","selected","className","activeClassName","Component","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","VACCINE_TYPES","subMenuMarginTop","getVaccineTypesVet","apiServer","util","getApiServer","isLoading","submenu","jwtToken","getJwtToken","Teams","selectTeam","preventDefault","displayTeam","parseInt","teams","displayUser","getDogs","for","onChange","map","team","Dogs","dogs","selectDog","closest","selectedDogs","missingChipId","dogId","idx","indexOf","find","chipId","length","push","splice","selectDogSection","selectAllDogs","dogMissingChipId","i","l","removeAllDogs","selectVaccine","selectedVaccines","vaccineId","addVaccinesToDogs","data","vetData","vaccineDate","vaccineLogStore","firstname","lastname","image","dog","dogData","shortname","j","vaccine","vaccineData","date","agens","comment","veterinary","m","insert","addVaccineLogStatuses","toggleShowAddVaccineToDogs","showAddVaccineToDogs","isoDate","Date","isAdmin","vaccineLogStatuses","selectedAgens","vac","flat","scope","images","isSelected","isMissingChipId","data-id","s3ThumbLink","ucfirst","birth","age","deceased","gender","inKarens","vaccineAgens","durationEnd","format","karensDaysLeft","files","file","s3LargeLink","isChecked","durationMonths","karensDays","dogHasAgens","v","agen","placeholder","linkstate","fields","line","Veterinary","searchForMusher","isSearcing","searchUsers","selectMusher","userId","componentDidMount","componentWillReceiveProps","searchUsersResult","searchUserTeams","col","offset","isVeterinary","getImage","displayNameShort","displayName","onSubmit","role","facebook","asFacebookLink","rel","instagram","asInstagramLink","cellphone","colspan"],"mappings":"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","file":"route-veterinary.chunk.b0ef8.js","sourcesContent":["import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nconst initialState = {\n    menu: {\n\t\tprofile: false,\n\t\tmain: false,\n\t},\n\tsearchText: '',\n};\n\n@observer\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\ttoggleDropdown = (e) => {\n\t\tconst { menu } = this.state;\n\t\tlet menuName = e.target.dataset.name;\n\t\tif (!menuName && e.target.parentNode) {\n\t\t\tmenuName = e.target.parentNode.dataset.name;\n\t\t}\n\t\tif (menuName) {\n\t\t\tmenu[menuName] = !menu[menuName];\n\t\t}\n\t\tthis.setState({ menu });\n\t}\n\n\ttoggleDarkmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tappState.toggleDarkmode();\n\t\tthis.toggleDropdown(e);\n\t}\n\n\ttoggleViewmode = (e) => {\n        const { appState } = this.props.stores;\n\t\tlet mode = e.target.dataset.mode;\n\t\tif (!mode && e.target.parentNode) {\n\t\t\tmode = e.target.parentNode.dataset.mode;\n\t\t}\n\t\tappState.toggleViewmode(mode);\n\t\tthis.toggleDropdown(e);\n\t}\n\n\treloadApp = () => {\n\t\twindow.location.reload(true);\n\t}\n\n\tadminLoadAll = async (e) => {\n        const { userStore } = this.props.stores;\n        await userStore.getInfo(true);\n\t}\n\n\tchangeLanguage = (e) => {\n\t\tconst lang = e.target.value;\n\t\tconsole.log('changeLanguage', lang);\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\t\tif (user.email) {\n\t\t\tuserStore.setLanguage({ email: user.email, language: lang });\n\t\t}\n\t\tappState.setLanguage(lang);\n\t}\n\n\tsearch = () => {\n\t\tconst { searchText } = this.state;\n\t\troute(`/search/${searchText}`);\n\t}\n\n    render() {\n\t\tconst { menu, searchText } = this.state;\n        const { appState, userStore } = this.props.stores;\n        const { darkmode, viewmode, isCordova } = appState;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst unreadNotificatins = notifications.filter(e => !e.read);\n\t\tconst unread = unreadNotificatins.length || 0;\n\t\tconst { language = 'en' } = user;\n\n\t\treturn (\n\t\t\t<nav class='navbar navbar-expand-lg navbar-themed fixed-top' style='z-index: 99999;'>\n\t\t\t\t<a class='navbar-brand' href='/'>\n\t\t\t\t\t{/* <img src={`./assets/logo-jul-2020-v2-${darkmode ? 'black' : 'white'}.png`} height='30' class='position-absolute' style='top: 8px; left: 6px' /> */}\n\t\t\t\t\t<img src={`./assets/logo${darkmode ? '' : ''}.png`} height='37' class='position-absolute' style='top: 10px; left: 6px' />\n\t\t\t\t\t<span class='font-weight-normal' style='margin-left: 30px; font-size: 25px;'>The Musher</span>\n\t\t\t\t</a>\n\n\t\t\t\t<button class='navbar-toggler' type='button'\n\t\t\t\t\tdata-name='main'\n\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t>\n\t\t\t\t\t<span class='navbar-toggler-icon' />\n\t\t\t\t</button>\n\n\t\t\t\t<div class={`collapse navbar-collapse ${menu.main ? 'show' : ''}`} id='navbarSupportedContent'>\n\t\t\t\t\t<ul class='navbar-nav mr-auto ml-5'>\n\t\t\t\t\t\t{/* <li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-flag-checkered' /> <Text id='header.races'>Løpene</Text></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race/support'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='far fa-question-circle' /> <Text id='header.support'>Support</Text></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/race/news'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.news'>Nyheter</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t{/* <li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-dog' /> <Text id='header.backtoapp'>The Musher</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t{/* <li class='nav-item'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/news'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.news'>Nyheter</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t{/* <li class='nav-item d-block d-lg-none'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'} href='/howto'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t><i class='fas fa-quote-right' /> <Text id='header.howto'>Hvordan gjør man det?</Text></Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<ul class='navbar-nav ml-auto '>\n\t\t\t\t\t\t{/* <li class='nav-item mr-2'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'}\n\t\t\t\t\t\t\t\thref='/users/notifications'\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-bell mr-1' />\n\t\t\t\t\t\t\t\t{unread > 0 && <>\n\t\t\t\t\t\t\t\t\t<span class='badge badge-pill badge-danger'>{unread > 9 ? '9+' : unread}</span>\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t\t<li class='nav-item mr-2'>\n\t\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t\t<div class='col-auto my-1' style='width: 80px;'>\n\t\t\t\t\t\t\t\t\t<select class='custom-select'\n\t\t\t\t\t\t\t\t\t\tstyle='background-color: inherit; border: none; padding: 0; height: 1.1em; font-size: 0.9em;'\n\t\t\t\t\t\t\t\t\t\tonInput={this.changeLanguage}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value='no' selected={language === 'no'}>🇳🇴 NO</option>\n\t\t\t\t\t\t\t\t\t\t<option value='en' selected={language === 'en'}>🇬🇧 EN</option>\n\t\t\t\t\t\t\t\t\t\t<option value='es' selected={language === 'es'}>🇪🇸 ES</option>\n\t\t\t\t\t\t\t\t\t\t<option value='de' selected={language === 'de'}>🇩🇪 DE</option>\n\t\t\t\t\t\t\t\t\t\t<option value='fr' selected={language === 'fr'}>🇫🇷 FR</option>\n\t                                    <option value='ru' selected={language === 'ru'}>🇷🇺 RU</option>\n\t                                    <option value='se' selected={language === 'se'}>🇸🇪 SE</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item d-block d-lg-none'>\n\t\t\t\t\t\t\t<Link className='nav-link' activeClassName={'active'}\n\t\t\t\t\t\t\t\tdata-name='main'\n\t\t\t\t\t\t\t\tonClick={this.toggleDarkmode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class={`${darkmode ? 'fas text-warning' : 'far'} fa-moon`} /> <Text id='header.darkmode'>Nattmodus</Text>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class='nav-item mr-2 d-none d-lg-block'>\n\t\t\t\t\t\t\t<button class='btn btn-link'\n\t\t\t\t\t\t\t\tdata-name='profile'\n\t\t\t\t\t\t\t\tonClick={this.toggleDarkmode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class={`${darkmode ? 'fas text-warning' : 'far'} fa-moon`} />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{/* <li class='nav-item ml-auto d-none d-lg-block'>\n\t\t\t\t\t\t\t<form class='form-inline my-2 my-lg-0'>\n\t\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t\t<input class='form-control form-control-sm mr-sm-2' type='search' placeholder={<Text id='header.search-placeholder'>Søk etter det meste...</Text>}\n\t\t\t\t\t\t\t\t\t\tvalue={searchText}\n\t\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'searchText')}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Localizer>\n\t\t\t\t\t\t\t\t<button class='btn btn-sm btn-outline-success my-2 my-sm-0' type='button'\t\n\t\t\t\t\t\t\t\t\tonClick={this.search}\n\t\t\t\t\t\t\t\t><Text id='header.search'>Søk</Text></button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</li> */}\n\t\t\t\t\t</ul>\n\n\t\t\t\t    \n\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Navigation;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\nimport Markdown from 'preact-markdown';\nimport { toJS } from 'mobx';\n\nimport Header from './header';\nimport ImageScroller from '../../components/imageScroller';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst VACCINE_TYPES = mu.getVaccineTypesVet();\n\nconst apiServer = util.getApiServer();\n\nfunction PageTitle(title = '') {\n  useEffect(() => {\n    document.title = `QPaws: ${title}`;\n  }, [title]);\n  return <h1>{title}</h1>;\n}\n\nconst initialState = {\n\tisLoading: false,\n\temail: '',\n\tsubmenu: 'ads',\n\tjwtToken: util.getJwtToken(),\n};\n\n@observer\nclass Teams extends Component {\n    selectTeam = async (e) => {\n        e.preventDefault();\n        const id = e.target.value;\n        this.setState({ displayTeam: parseInt(id, 10) });\n    }\n\n    render() {\n        const { teams = [], displayUser } = this.props;\n        const { userStore } = this.props.stores;\n        const { isLoading } = userStore;\n        const defaultTeam = teams[0] ? teams[0] : {};\n        const { displayTeam = defaultTeam.id } = this.state;\n        return (\n            <div class='bg-light p-0'>\n                {isLoading.getDogs ? <>\n                    Loading...\n                </> : <>\n                    <label for='team'><i class='fas fa-users' /> <Text id='dog.veterinary.team'>Team</Text></label>\n                    <select\n                        class='form-control form-control-lg mb-2'\n                        id='team'\n                        onChange={this.selectTeam}\n                    >\n                        <option value=''>-- <Text id='dog.veterinary.choose-team'>Choose team</Text> --</option>\n                        {teams && teams.map(team => {\n                            return (<>\n                                <option value={team.id}>\n                                    {team.name}\n                                </option>\n                            </>);\n                        })}\n                    </select>\n\n                    {teams && teams.map(team => <>\n                        {displayTeam === team.id && <>\n                            <Dogs stores={this.props.stores} dogs={team.dogs} displayUser={displayUser} />\n                        </>}\n                    </>)}\n                </>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Dogs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            missingChipId: {},\n            selectedDogs: [],\n            selectedVaccines: [],\n            vaccineDate: util.isoDate(new Date(), false, false, true),\n        };\n    }\n\n    selectDog = (e) => {\n        const { id } = e.target.closest('tr').dataset;\n        const { selectedDogs, missingChipId } = this.state;\n        const dogId = parseInt(id, 10);\n        const idx = selectedDogs.indexOf(dogId);\n\n        const { dogs } = this.props;\n        const dog = dogs.find(e => e.id === dogId);\n        // console.log({ dog });\n        if (dog.chipId.length < 10) {\n            missingChipId[dogId] = !missingChipId[dogId];\n            this.setState({ missingChipId });\n            return '';\n        }\n\n        if (idx === -1) {\n            selectedDogs.push(dogId);\n        } else {\n            selectedDogs.splice(idx, 1);\n        }\n        this.setState({ selectedDogs });\n    }\n\n    selectDogSection = (e) => {\n        const { id } = e.target.closest('i').dataset;\n        const { selectedDogs, missingChipId } = this.state;\n        const dogId = parseInt(id, 10);\n        const idx = selectedDogs.indexOf(dogId);\n\n        const { dogs } = this.props;\n        const dog = dogs.find(e => e.id === dogId);\n        if (dog.chipId.length < 10) {\n            missingChipId[dogId] = !missingChipId[dogId];\n            this.setState({ missingChipId });\n            return '';\n        }\n\n        if (idx === -1) {\n            selectedDogs.push(dogId);\n        } else {\n            selectedDogs.splice(idx, 1);\n        }\n        this.setState({ selectedDogs });\n    }\n\n    selectAllDogs = () => {\n        const { dogs } = this.props;\n        const selectedDogs = dogs.filter(e => e.chipId.length > 10).map(e => e.id);\n        const dogMissingChipId = dogs.filter(e => e.chipId.length < 10).map(e => e.id);\n\n        const { missingChipId } = this.state;\n        for (let i = 0, l = dogMissingChipId.length; i < l; i += 1) {\n            const dogId = dogMissingChipId[i];\n            missingChipId[dogId] = !missingChipId[dogId];\n        }\n\n        this.setState({ selectedDogs, missingChipId });\n    }\n\n    removeAllDogs = () => {\n        const selectedDogs = [];\n        this.setState({ selectedDogs });\n    }\n\n    selectVaccine = (e) => {\n        const { id } = e.target.closest('tr').dataset;\n        const { selectedVaccines } = this.state;\n        const vaccineId = parseInt(id, 10);\n        const idx = selectedVaccines.indexOf(vaccineId);\n        if (idx === -1) {\n            selectedVaccines.push(vaccineId);\n        } else {\n            selectedVaccines.splice(idx, 1);\n        }\n        this.setState({ selectedVaccines });\n    }\n\n    addVaccinesToDogs = async () => {\n        const { selectedDogs, selectedVaccines, vaccineDate } = this.state;\n        const { userStore, vaccineLogStore } = this.props.stores;\n        const { user } = userStore;\n        const data = [];\n        const { dogs } = this.props;\n        // console.log({ selectedDogs, selectedVaccines });\n        const vetData = {\n            id: user.id,\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email,\n            image: user.image,\n        };\n\n        for (let i = 0, l = selectedDogs.length; i < l; i += 1) {\n            const dogId = selectedDogs[i];\n            const dog = dogs.find(e => e.id === dogId);\n            const dogData = {\n                id: dog.id,\n                user: dog.user,\n                team: dog.team,\n                name: dog.name,\n                shortname: dog.shortname,\n                chipId: dog.chipId,\n            };\n\n            for (let j = 0, m = selectedVaccines.length; j < m; j += 1) {\n                const vaccineId = selectedVaccines[j];\n                const vaccine = VACCINE_TYPES.find(e => e.id === vaccineId);\n                const vaccineData = {\n                    date: vaccineDate,\n                    id: vaccine.id,\n                    name: vaccine.name,\n                    agens: vaccine.agens,\n                    comment: vaccine.comment,\n                };\n                data.push({\n                    dog: { ...dogData },\n                    vaccine: { ...vaccineData },\n                    veterinary: { ...vetData },\n                });\n            }\n        }\n        await vaccineLogStore.insert({ data });\n        this.setState({\n            data,\n            selectedDogs: [],\n            selectedVaccines: [],\n        });\n        userStore.addVaccineLogStatuses(data);\n    }\n\n    toggleShowAddVaccineToDogs = (e) => {\n        const { showAddVaccineToDogs = false } = this.state;\n        this.setState({\n            showAddVaccineToDogs: !showAddVaccineToDogs,\n        });\n    }\n\n    render() {\n        const { selectedDogs, selectedVaccines, missingChipId, data, showAddVaccineToDogs = false, vaccineDate } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin, isVeterinary, vaccineStatuses, vaccineLogStatuses, isLoading } = userStore;\n        const { dogs } = this.props;\n\n        const selectedAgens = VACCINE_TYPES\n            .filter(e => selectedVaccines.indexOf(e.id) > -1)\n            .map(vac => vac.agens.map(e => e.name))\n            .flat();\n\n        return (<>\n            <div class='table-responsive mt-3'>\n                <button\n                    class='btn btn-lg btn-block btn-outline-success mt-5'\n                    onClick={this.selectAllDogs}\n                >\n                    <Text id='dog.veterinary.select-all-dogs'>Select all dogs</Text>\n                </button>\n                {selectedDogs && selectedDogs.length > 0 && <>\n                    <button\n                        class='btn btn-sm btn-block btn-link'\n                        onClick={this.removeAllDogs}\n                    >\n                        <Text id='dog.veterinary.remove-all-dogs'>Remove all dogs</Text>\n                    </button>\n                </>}\n\n                <table class='table table-striped'>\n                    <thead>\n                        <tr>\n                            <th scope='col' style='width: 100px;'>&nbsp;</th>\n                            <th scope='col'><Text id='dog.veterinary.name'>Name</Text></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dogs && dogs.map(dog => {\n                            let image;\n                            if (dog.images && dog.images[0]) {\n                                image = dog.images[0];\n                            }\n                            if (dog.image) {\n                                image = dog.image;\n                            }\n                            const isSelected = selectedDogs.indexOf(dog.id) > -1;\n                            const isMissingChipId = missingChipId[dog.id];\n\n                            return (<>\n                                <tr class='pointerCursor' onClick={this.selectDog} data-id={dog.id}>\n                                    <td class='position-relative'>\n                                        <div\n                                            class={`text-center border rounded-circle imageRounded text-muted pt-2`}\n                                            style={`${image ? `background-image: url('${image.s3ThumbLink}'); background-size: cover;` : ''}`}\n                                        >\n                                            {!image && <span class='font-weight-lighter' style='font-size: 35px;'>\n                                                {util.ucfirst(dog.name, true)}\n                                            </span>}\n                                        </div>\n                                        {isSelected && <span class='position-absolute display-4' style='top: 0px; left: 0px;'>\n                                            <i class='fas fa-check text-success' />\n                                        </span>}\n                                        {isMissingChipId && <span class='position-absolute display-4' style='top: 0px; left: 0px;'>\n                                            <i class='fas fa-hand-paper text-danger' />\n                                        </span>}\n                                    </td>\n                                    <td>\n                                        <span class='float-right'>\n                                            {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                            {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                        </span>\n                                        <h5>{dog.name} {dog.shortname && <span class='font-weight-lighter'> - '{dog.shortname}'</span>}</h5>\n                                        <div>\n                                            <span class='text-muted'>\n                                                {dog.chipId && <><i class='fas fa-microchip' /> {dog.chipId}</>}\n                                            </span>\n                                        </div>\n                                        <div>\n                                            {vaccineLogStatuses && vaccineLogStatuses.filter(e => e.chipId === dog.chipId).map((vac) => {\n                                                return (\n                                                    <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'} mr-2 mb-1`}>\n                                                        {vac.vaccineAgens.name}\n                                                        <span class='font-weight-lighter ml-2'>\n                                                            <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                                            {vac.inKarens && <>\n                                                                <br />\n                                                                (karens: {util.format(vac.karensDaysLeft, 0)} days left)\n                                                            </>}\n                                                        </span>\n                                                    </span>\n                                                );\n                                            })}\n                                        </div>\n                                        {isAdmin && <>\n                                            <h5>Uploaded files for this dog:</h5>\n                                            {dog.files && dog.files.length > 0 ? <>\n                                                <ImageScroller stores={this.props.stores} images={dog.files.filter(file => file.s3LargeLink)} />\n                                            </> : <>\n                                                {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                    <div class='text-center text-muted'>\n                                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                                        <h3><Text id='teams.no-dogs-files'>No files for this dog!</Text></h3>\n                                                    </div>\n                                                </div> */}\n                                            </>}\n                                        </>}\n                                    </td>\n                                </tr>\n                            </>);\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n            <div class='mt-5'>\n                {selectedDogs && selectedDogs.length > 0 && <>\n                    <div class='form-row align-items-center'>\n                        <div class='col-12'>\n                            <label for='vaccineTypeInput'><i class='fas fa-syringe' /> <Text id='dog.addlog.vaccine-type'>Vaksinetype</Text></label>\n                            <table class='table table-striped'>\n                                <thead>\n                                    <tr>\n                                        <th scope='col' style='width: 100px;'>&nbsp;</th>\n                                        <th scope='col'><Text id='dog.veterinary.name'>Name</Text></th>\n                                        <th scope='col' style='width: 130px;'><Text id='dog.veterinary.image'>Image</Text></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {VACCINE_TYPES && VACCINE_TYPES.map(vac => {\n                                        const isChecked = selectedVaccines.indexOf(vac.id) > -1;\n                                        return (\n                                            <tr\n                                                data-id={vac.id}\n                                                onClick={this.selectVaccine}\n                                            >\n                                                <td>\n                                                    {isChecked ? <>\n                                                        <div class='display-4 text-center'>\n                                                            <i class='fas fa-check text-success' />\n                                                        </div>\n                                                    </> : <>\n                                                        <div class='display-4 border rounded-lg text-center'>\n                                                            <i class='fas fa-radio text-success' />\n                                                        </div>\n                                                    </>}\n                                                </td>\n                                                <td>\n                                                    {vac.name}<br />\n                                                    <small>\n                                                        {vac.agens.map(agens => <>\n                                                            <span class='badge badge-dark mr-2 mt-1'>\n                                                                {agens.name} ({agens.durationMonths} months, {agens.karensDays} days)\n                                                            </span>\n                                                        </>)}\n                                                    </small>\n                                                </td>\n                                                <td>\n                                                    {vac.image && <img class='img-fluid' src={`${apiServer}${vac.image}`} />}\n                                                </td>\n                                            </tr>\n                                        );\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                        <div class='col-12 pt-4'>\n                            <label for='team'><i class='fas fa-dog' /> <Text id='dog.veterinary.choosen-dogs'>Valgte hunder</Text></label>\n                            <div class='d-flex flex-wrap'>\n                                {dogs && dogs.map(dog => {\n                                    let image;\n                                    if (dog.images && dog.images[0]) {\n                                        image = dog.images[0];\n                                    }\n                                    if (dog.image) {\n                                        image = dog.image;\n                                    }\n                                    const isSelected = selectedDogs.indexOf(dog.id) > -1;\n                                    if (!isSelected) {\n                                        return '';\n                                    }\n                                    const dogHasAgens = vaccineLogStatuses.filter(v => v.chipId === dog.chipId).map(vac => vac.vaccineAgens.name).flat();\n\n                                    return (<>\n                                        <section class='p-2 position-relative' style='width: 120px;'>\n                                            <div\n                                                class={`text-center border rounded-circle imageRounded text-muted pt-2`}\n                                                style={`${image ? `background-image: url('${image.s3ThumbLink}');` : ''}`}\n                                            >\n                                                {!image && <span class='font-weight-lighter' style='font-size: 35px;'>\n                                                    {util.ucfirst(dog.name, true)}\n                                                </span>}\n                                            </div>\n                                            <small>\n                                                {dog.name}\n                                            </small><br />\n                                            <small class='text-muted'>\n                                                {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                            </small>\n\n                                            {selectedAgens && <>\n                                                {selectedAgens.filter(e => dogHasAgens.indexOf(e) > -1).map(agen => <>\n                                                    <span class={`badge badge-danger mr-2 mb-1`}>\n                                                        <i class='fas fa-exclamation-triangle' /> {agen}\n                                                    </span>\n                                                </>)}\n                                            </>}\n\n                                            <div class='position-absolute' style='top: 0px; right: 0px; font-size: 2.0em;'>\n                                                <i class='fas fa-times-circle text-danger' onClick={this.selectDogSection} data-id={dog.id} />\n                                            </div>\n                                        </section>\n                                    </>);\n                                })}\n                            </div>\n                        </div>\n                        <div class='col-12 pt-4'>\n                            <label><i class='fas fa-syringe' /> <Text id='dog.veterinary.chosen-vaccines'>Valgte vaksiner</Text></label>\n                            {VACCINE_TYPES && VACCINE_TYPES.map(vac => {\n                                const isChecked = selectedVaccines.indexOf(vac.id) > -1;\n                                if (!isChecked) {\n                                    return '';\n                                }\n                                return (<div class='mb-3'>\n                                    <span class='font-weight-lighter'>+</span> {vac.name}<br />\n                                    <small>\n                                        {vac.agens.map(agens => <>\n                                            <span class='badge badge-dark mr-2 mt-1'>\n                                                {agens.name} ({agens.durationMonths} months, {agens.karensDays} days)\n                                            </span>\n                                        </>)}\n                                    </small>\n                                </div>);\n                            })}\n                        </div>\n\n                        {selectedVaccines && selectedVaccines.length > 0 ? <>\n                            <div class='col-12 pt-4'>\n                                <label><i class='fas fa-calendar-alt' /> <Text id='dog.veterinary.vaccine-date'>Dato for vaksine</Text></label>\n                                <Localizer>\n                                    <input\n                                        type='date'\n                                        class='form-control form-control-lg mb-2'\n                                        id='vetSearch'\n                                        placeholder={<Text id='dog.veterinary.vaccine-date-placeholder'>Velg dato for vaksine. Dersom vaksine er dagens dato, så trenger du ikke velge.</Text>}\n                                        onInput={linkstate(this, 'vaccineDate')}\n                                        value={vaccineDate}\n                                    />\n                                </Localizer>\n                            </div>\n                            {showAddVaccineToDogs ? <>\n                                <div class='col-12 pt-4'>\n                                    <h5><Text id='dog.veterinary.are-you-sure' fields={{ dogs: selectedDogs.length }}>Are you sure you want to add vaccine to {selectedDogs.length} dog?</Text></h5>\n                                    <button\n                                        type='button'\n                                        class='btn btn-lg btn-block btn-success mb-2'\n                                        onClick={this.addVaccinesToDogs}\n                                    ><Text id='dog.veterinary.yes-iam-sure'>Yes, I'm sure!</Text></button>\n                                    <button\n                                        type='button'\n                                        class='btn btn-lg btn-block btn-danger mb-2'\n                                        onClick={this.toggleShowAddVaccineToDogs}\n                                    ><Text id='dog.veterinary.cancel'>Cancel</Text></button>\n                                </div>\n                            </> : <>\n                                <div class='col-12 pt-4'>\n                                    <button\n                                        type='button'\n                                        class='btn btn-lg btn-block btn-success mb-2'\n                                        onClick={this.toggleShowAddVaccineToDogs}\n                                    ><Text id='dog.veterinary.add-vaccine-to-dogs' fields={{ dogs: selectedDogs.length }}>Add vaccine to {selectedDogs.length} dogs</Text></button>\n                                </div>\n                            </>}\n                        </> : <>\n                            <h3 class='text-muted mt-4'>\n                                <Text id='dog.veterinary.choose-vaccines'>Velg vaksiner i listen over</Text>\n                            </h3>\n                        </>}\n\n                    </div>\n\n                </>}\n            </div>\n\n            {data && <>\n                <div class='mt-5'>\n                    <div class='row'>\n                        <div class='col-12 pt-4'>\n                            <h5><Text id='dog.veterinary.recepipt'>Receipt</Text></h5>\n                            <table class='table table-striped'>\n                                <thead>\n                                    <tr>\n                                        <th scope='col'><Text id='dog.veterinary.dog'>Dog</Text></th>\n                                        <th scope='col'><Text id='dog.veterinary.vaccine'>Vaccine</Text></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {data && data.map(line => {\n                                        const dog = line.dog;\n                                        const vac = line.vaccine;\n                                        return (<>\n                                            <tr>\n                                                <td>\n                                                    {dog.name}<br />\n                                                    <small class='text-muted'>\n                                                        {dog.chipId}\n                                                    </small>\n                                                </td>\n                                                <td>\n                                                    {vac.name}\n                                                    <small>\n                                                        {vac.agens.map(agens => <>\n                                                            <span class='badge badge-dark mr-2 mt-1'>\n                                                                {agens.name} ({agens.durationMonths} months, {agens.karensDays} days)\n                                                            </span>\n                                                        </>)}\n                                                    </small>\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </>}\n\n        </>);\n    }\n}\n\n@observer\nclass Veterinary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    searchForMusher = async (e) => {\n        e.preventDefault();\n        const { userStore } = this.props.stores;\n        const { search } = this.state;\n        // console.log('search for musher:', search);\n        this.setState({ isSearcing: true, displayUser: null });\n        await userStore.searchUsers({ search });\n        this.setState({ isSearcing: false });\n    }\n\n    selectMusher = async (e) => {\n        const { id } = e.target.closest('tr').dataset;\n        const { displayUser } = this.state;\n        const userId = parseInt(id, 10);\n        if (displayUser === userId) {\n            this.setState({ displayUser: null });\n        } else {\n            this.setState({ displayUser: userId });\n            const { userStore } = this.props.stores;\n            await userStore.getDogs({ id: userId });\n        }\n    }\n\n\tcomponentDidMount() {\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t}\n\n\trender() {\n        const { displayUser, isSearcing, isLoading } = this.state;\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tconst { isAdmin, isVeterinary, searchUsersResult, searchUserTeams, user } = userStore;\n\t\tconst { language = 'en' } = appState;\n        const { col = 12, offset = 0 } = this.props;\n        const filterBy = (e) => {\n            if (displayUser) {\n                return e.id === displayUser;\n            }\n            return true;\n        }\n\n        if (!isVeterinary) {\n            return (<>\n                <div class='container-fluid h-100'>\n                    <div class='row h-100'>\n                        <div class='col-12 text-center my-auto'>\n                            <div class='display-1 text-danger'>\n                                <i class='fas fa-hand-paper' />\n                            </div>\n                            <h5><Text id='dog.veterinary.no-access'>No access!</Text></h5>\n                            <p><Text id='dog.veterinary.attempts-logged'>All attempts are logged and reported.</Text></p>\n                            <a class='mt-3 btn btn-lg btn-primary' href='/'><Text id='dog.veterinary.goto-frontpage'>Go to the frontpage</Text></a>\n                        </div>\n                    </div>\n                </div>\n            </>)\n        }\n\n        const image = mu.getImage({ user });\n        const shortname = mu.displayNameShort(user);\n        const name = mu.displayName(user, true);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/* <Header stores={this.props.stores} /> */}\n\n\t\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <div class='row'>\n\t\t\t\t\t\t<div class={`col-${col} offset-${offset} col-sm-8 col-lg-8 offset-sm-2 offset-lg-2`}>\n\n                            <div class='d-flex position-relative mb-3'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                                >\n                                    {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 0.9em;'>\n                                    <h1 class='mb-0'><Text id='dog.veterinary.title'>Veterinary search</Text></h1>\n                                    <small class='text-muted'>{name}</small>\n                                </div>\n                            </div>\n\n                            <form onSubmit={this.searchForMusher}>\n                                <div class='form-row align-items-center'>\n                                    <div class='col-10'>\n                                        <label class='sr-only' for='vetSearch'><Text id='dog.veterinary.name'>Name</Text></label>\n                                        <Localizer>\n                                            <input\n                                                type='text'\n                                                class='form-control form-control-lg mb-2'\n                                                id='vetSearch'\n                                                placeholder={<Text id='dog.veterinary.search-placeholder'>Search for musher by email, cellphone or name...</Text>}\n                                                onInput={linkstate(this, 'search')}\n\n                                            />\n                                        </Localizer>\n                                    </div>\n                                    <div class='col-2'>\n                                        <button\n                                            type='button'\n                                            class='btn btn-lg btn-primary mb-2'\n                                            onClick={this.searchForMusher}\n                                        ><Text id='dog.veterinary.search'>Search</Text></button>\n                                    </div>\n                                </div>\n                            </form>\n\n                        </div>\n\t\t\t\t\t\t<div class={`col-${col} offset-${offset} col-sm-8 col-lg-8 offset-sm-2 offset-lg-2`}>\n                            {isSearcing && <>\n                                <div class='spinner-border text-primary' role='status'>\n                                    <span class='sr-only'>\n                                        <Text id='dog.veterinary.searching'>Searcing...</Text>\n                                    </span>\n                                </div>\n                            </>}\n                            {(!searchUsersResult || searchUsersResult.length === 0) ? <>\n                                &nbsp;\n                            </> : <div class='table-responsive'>\n                                <table class='table table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <th scope='col' style='width: 100px;'>&nbsp;</th>\n                                            <th scope='col'><Text id='dog.veterinary.name'>Name</Text></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {searchUsersResult && searchUsersResult.filter(filterBy).map(user => {\n                                            let image;\n                                            if (user.images && user.images[0]) {\n                                                image = user.images[0];\n                                            }\n                                            if (user.image) {\n                                                image = user.image;\n                                            }\n\n                                            return (<>\n                                                <tr class='pointerCursor' onClick={this.selectMusher} data-id={user.id}>\n                                                    <td>\n                                                        <div\n                                                            class={`text-center border rounded-circle imageRounded text-muted pt-2`}\n                                                            style={`${image ? `background-image: url('${image.s3ThumbLink}');` : ''}`}\n                                                        >\n                                                            {!image && <span class='font-weight-lighter' style='font-size: 35px;'>\n                                                                {user.firstname ? <>\n                                                                    {util.ucfirst(user.firstname, true)}\n                                                                    {util.ucfirst(user.lastname, true)}\n                                                                </> : <>\n                                                                    {util.ucfirst(user.email, true)}\n                                                                </>}\n                                                            </span>}\n                                                        </div>\n                                                    </td>\n                                                    <td>\n                                                        {user.firstname} {user.lastname}<br />\n                                                        <div>\n                                                            {user.facebook && <a class='mr-2' href={mu.asFacebookLink(user.facebook)} target='_blank' rel='noreferrer'>\n                                                                <i class='fab fa-facebook-square' />\n                                                            </a>}\n                                                            {user.instagram && <a class='mr-2' href={mu.asInstagramLink(user.instagram)} target='_blank' rel='noreferrer'>\n                                                                <i class='fab fa-instagram' />\n                                                            </a>}\n                                                        </div>\n                                                        <i class='fas fa-mobile-alt' /> {user.cellphone}\n                                                        <i class='fas fa-envelope ml-3' /> {user.email}\n                                                    </td>\n                                                </tr>\n                                                {displayUser === user.id && <>\n                                                    <tr>\n                                                        <td colspan='2'>\n                                                            <Teams stores={this.props.stores} teams={searchUserTeams} displayUser={displayUser} />\n                                                        </td>\n                                                    </tr>\n                                                </>}\n                                            </>);\n                                        })}\n                                    </tbody>\n                                </table>\n                            </div>}\n                            {/* <xmp>{JSON.stringify(searchUsersResult, null, 4)}</xmp> */}\n                        </div>\n                    </div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Veterinary;\n"],"sourceRoot":""}