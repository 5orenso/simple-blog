{"version":3,"sources":["webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/comments.js","webpack:///./components/story/publicStory.js","webpack:///./components/story/storyPoll.js"],"names":["observer","props","touchStart","e","stopPropagation","setState","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","state","totalImages","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","length","imageDots","Array","fill","map","y","this","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","render","imgHeight","imgWidth","img","curImage","dimensions","width","height","orientation","imageRatio","class","style","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","ref","c","image1","image2","i","Component","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","response","callback","inputRefObject","story","storyStore","stores","comment","showAddImage","id","status","body","mu","resizeTextarea","addImage","addImages","push","value","handleImageErrored","image","target","onerror","setTimeout","Date","inputRef","userStore","user","displayNameShort","userImage","displayName","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","onClick","disabled","util","isArray","onError","removeImage","data-name","name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","componentDidMount","initCall","initialState","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","dataset","likeStoryComment","replyId","likeStoryCommentReply","replyComment","parentElement","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","deleteCommentReplyStory","commentid","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","idx","translate","translatedText","key","preventDefault","replyid","translateCommentReply","translateComment","displayTeam","teamId","appState","openDrawer","openInbox","fromuser","max_comments","compact","currentUser","language","filteredComments","totalComments","diplayedComments","comments","slice","Math","max","reverse","teams","findPublicTeamByMembers","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","translation","getCommentTranslations","targetLang","data-comment","uuidv4","href","filter","public","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","fields","more","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","parseInt","publicFeedUpdate","storyType","saveStoryField","subfield","subvalue","clearTimeout","updateTimer","doUpdateField","query","updateFieldValue","field","skipTimer","newValue","localObjectValue","textareaRef","createRef","opts","current","isAdmin","data-subfield","data-subvalue","title","pinned","isoDate","checked","selected","urlText","url","code","country","region","currency","price","StoryTypeRegular","showStoryDetail","localName","route","setSelectedImage","selectedImageIdx","likeRef","getTranslation","getInlineComponents","components","finalBody","dblClick","offline","component","storyId","params","content","StoryTypeAd","componentWillMount","asUrl","rel","currencty","format","StoryTypeArticle","StoryPublicFeed","toggleDate","showDate","likeIds","Object","keys","toggleAddComment","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","toggleAdminDetails","showAdminDetails","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","shareLink","shareUrl","text","loadStoriesPublicFeed","loadPublicFeed","hashtag","shortname","username","userLink","onTeamClick","onUserClick","hasShareApi","team","findPublicTeam","findPublicUser","getImage","priority","isTeamAdmin","members","some","m","settings","hideProfile","reports","hasLikedStory","totalFollowers","followers","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","currentLocationGeocode","views","getViews","statistics","adminData","getAdminData","buttonOnly","simple","classNames","date","formatDate","hour12","hour","minute","formattedCounty","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","tag","role","data-url","data-title","data-native","col","offset","StoryPoll","pollStory","line","toggleResult","viewResult","lines","split","trim","replace","hasPolledStory","polls","totalPolls","maxPercent","forEach","percent","md5","voteDays","days","finishDate","addDays","isExpired","hasImageRegexp","RegExp","hasPolledLine","aria-valuenow","aria-valuemin","aria-valuemax","extended","test","data-line"],"mappings":"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","file":"23.chunk.8ceb1.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`} onClick={(e) => this.displayTeam(e, t.uuidv4)}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                                    <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                                </> : <>\n                                                                    {displayName}\n                                                                </>}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2' onClick={(e) => this.displayTeam(e, t.uuidv4)}> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport StoryPoll from './storyPoll';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n        this.textareaRef = createRef();\n        this.state = {\n            sendButtonEnabled: true,\n            storyBody: props.story.body,\n        };\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n        const { subfield, subvalue } = e.target.dataset;\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { storyStore } = this.props.stores;\n        storyStore.publicFeedUpdate(id, name, value);\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value, {\n                query: {\n                    [subfield]: subvalue,\n                },\n            });\n        }, 1000);\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        if (field === 'images') {\n            if (Array.isArray(story.images) && Array.isArray(value)) {\n                localObjectValue = [...story.images, ...value];\n            }\n        }\n    \n        storyStore.updateField(id, field, localObjectValue);\n        storyStore.publicFeedUpdate(id, field, localObjectValue);\n\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, name, value, opts = {}) {\n        this.setState({ sendButtonEnabled: false });\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true, {\n            query: { ...opts.query },\n        });\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    removeImage = async (e) => {\n        const { storyStore } = this.props.stores;\n        const { story } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        storyStore.removeImage({\n            id: story.id,\n            name: imageName,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    componentDidMount() {\n        this.textareaRef.current.focus();\n    }\n\n    render() {\n        const { storyBody, storyType, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        const { id } = story;\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <div class='col-12 text-center mt-2'>\n                        <div class='container-fluid'>\n                            <div class='row d-flex align-items-end'>\n                                {util.isArray(story.images) && story.images.map((img, idx) => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                        <small>\n                                            <input\n                                                class='form-control'\n                                                type='text'\n                                                name={`images.title`}\n                                                data-subfield={`name`}\n                                                data-subvalue={story.images[idx].name}\n                                                onInput={this.saveStoryField}\n                                                value={story.images[idx].title}\n                                            />\n                                        </small>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={story} updateField={this.updateFieldValue} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={false} />\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <label><Text id='story.content'>Content</Text></label>\n                        <div class='border rounded rounded-lg position-relative'>\n                            <Localizer>\n                                <textarea\n                                    class='form-control-plaintext px-2'\n                                    type='text'\n                                    placeholder={<Text id='story.add-content'>Add your text here...</Text>}\n                                    onInput={linkState(this, 'storyBody')}\n                                    // onKeyUp={mu.resizeTextarea}\n                                    onFocus={mu.resizeTextarea}\n                                    style='height: 2.3em;'\n                                    value={storyBody || story.body}\n                                    ref={this.textareaRef}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        {isAdmin && <>\n                            <div class='col-12 mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <input\n                                            type='checkbox'\n                                            id={`pinned-${story.id}`}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 'false' : util.isoDate()}\n                                            checked={story.pinned ? 'checked' : ''}\n                                            />\n                                        <label class='ml-2' for={`pinned-${story.id}`}>Pinned to top.</label>\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <button type='button' class={`btn btn-block btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                            onClick={this.saveStory}\n                            data-id={story.id}\n                        ><i class='fas fa-paper-plane' /> <Text id='story.edit-save'>Save changes</Text></button>\n                    </div>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    setSelectedImage = (imageIdx) => {\n        this.setState({ selectedImageIdx: imageIdx });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText, selectedImageIdx = 0 } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n        const { components = [], finalBody = '' } = mu.getInlineComponents(body || '');\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} callback={this.setSelectedImage} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(finalBody, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                    {components && components.map((component, idx) => {\n                        if (component.name === 'poll') {\n                            return <StoryPoll\n                                stores={this.props.stores}\n                                story={story}\n                                storyId={story.id}\n                                params={component.params}\n                                opts={component.opts}\n                                content={component.content}\n                                selectedImageIdx={selectedImageIdx}\n                            />;\n                        }\n                    })}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleAdminDetails = () => {\n        const { showAdminDetails } = this.state;\n        this.setState({\n            showAdminDetails: !showAdminDetails,\n        });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const {\n            showAddComment,\n            showDate,\n            viewImageIdx,\n            showMenu = {},\n            showEdit = {},\n            showDeleteStory = {},\n            showTeamSetting,\n            likeStory,\n            likeIds,\n            showAdminDetails\n        } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>\n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                            <button class='btn btn-link btn-block text-left' onClick={this.toggleAdminDetails}>\n                                <i class='fas fa-user-cog' /> Toggle admin details\n                            </button>\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => this.displayTeam(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink} onClick={(e) => this.openInbox(e, user.uuidv4)}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {showAdminDetails && isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    {showEdit[story.id] || showDeleteStory[story.id] ? <>\n                        <div class='row mt-2'>\n                            <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {showEdit[story.id] && <>\n                                    <StoryEditInline\n                                        stores={this.props.stores}\n                                        story={story}\n                                        key={`story-edit-${story.id}`}\n                                        callback={this.doneEdit}\n                                    />\n                                </>}\n                                {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                    <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                </div>}\n                            </div>\n                        </div>\n                    </> : <>\n\n                        {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='mr-2'>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='story'\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                            {views > 0 && <>\n                                <div>\n                                    <Views\n                                        stores={this.props.stores}\n                                        views={views}\n                                        object={story}\n                                        type='story'\n                                        isTeamAdmin={isTeamAdmin}\n                                        isAdmin={isAdmin}\n                                        onTeamClick={onTeamClick}\n                                        onUserClick={onUserClick}\n                                    />\n                                </div>\n                            </>}\n                        </div>\n\n                        {showTeamSetting[story.id] && <>\n                            <small>\n                                <div class='alert alert-info' role='alert'>\n                                    <span class='display-4 float-left'>\n                                        <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                    </span>\n                                    <p>\n                                        <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                    </p>\n                                    <p>\n                                        <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                    </p>\n                                    <p>\n                                        <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                    </p>\n                                </div>\n                            </small>\n                        </>}\n\n                        <div>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                        data-id={story.id}\n                                        onClick={this.likeStory}\n                                    >\n                                        <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                        data-id={story.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                    </button>\n                                </div>\n                                {hasShareApi ? <>\n                                    <div class='col text-center'>\n                                        <button class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                            onClick={this.shareLink}\n                                            data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            data-title={`title: ${story.title}`}\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </button>\n                                    </div>\n                                </> : <>\n                                    <div class='col text-center'>\n                                        <a class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                            href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                            data-native\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </a>\n                                    </div>\n                                </>}\n\n                            </div>\n                        </div>\n\n                        <div class='mt-2'>\n                            <StoryComments\n                                stores={this.props.stores}\n                                story={story}\n                                col='10'\n                                offset='2'\n                                compact={false}\n                                showAllComments={showAllComments}\n                                initCall={this.closeAllAddComments}\n                            />\n                            {showAddComment[story.id] && <StoryAddComment\n                                stores={this.props.stores}\n                                story={story}\n                                inputRef={c => this.inputRef[story.id] = c}\n                                inputRefObject={this.inputRef}\n                                col='10'\n                                offset='2'\n                                key={`story-comment-${story.id}`}\n                            />}\n                        </div>\n                    </>}\n                {/* </div> */}\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryPoll extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {};\n        this.inputRef = {};\n    }\n\n    pollStory = async (e) => {\n        const { storyId } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { line } = e.target.closest('button').dataset;\n\t\tconst response = await storyStore.pollStory({ id: storyId, line });\n\t}\n\n    toggleResult = () => {\n        const { viewResult } = this.state;\n        this.setState({ viewResult: !viewResult });\n    }\n\n    render() {\n        const { viewResult } = this.state;\n        const { story, storyId, params, opts, content, selectedImageIdx } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const lines = content.split('\\n').map(line => line.trim().replace(/^\\-\\s*/g, ''));\n        const hasPolledStory = story.polls && story.polls.findIndex(e => e.user === currentUser.id) > -1;\n        const totalPolls = story.polls ? story.polls.length : 0;\n        let maxPercent = 0;\n        lines.forEach((line) => {\n            const percent = (story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length / totalPolls : 0) * 100;\n            if (percent > maxPercent) {\n                maxPercent = percent;\n            }\n        });\n        const voteDays = opts.days ? parseInt(opts.days, 10) : 7;\n\n        const finishDate = util.addDays(story.date, voteDays);\n        const isExpired = finishDate < new Date();\n        const hasImageRegexp = new RegExp(/{{img\\./i);\n\n        return (<>\n            <div class='w-100 my-4 storyPoll'>\n                {isExpired || hasPolledStory || viewResult ? <>\n                    {lines && lines.map((line, idx) => {\n                        const hasPolledLine = story.polls && story.polls.findIndex(e => e.user === currentUser.id && e.line === mu.md5(line)) > -1;\n                        const totalLinePolls = story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length : 0;\n                        const percent = totalLinePolls / totalPolls * 100;\n                        return (<>\n                            <div class={`progress position-relative my-2 `} style='height: 1.5em; font-size: 1.3em;'>\n                                <span class='position-absolute' style='right: 10px;'> {util.format(percent || 0, 1)}%</span>\n                                <span class='position-absolute' style='left: 10px;'>\n                                    <Markdown markdown={mu.replaceImages(`${line} ${hasPolledLine ? `<i class='fas fa-check-circle' />` : ''}`, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                                </span>\n                                <div\n                                    class={`progress-bar ${maxPercent === percent ? 'bg-primary' : 'bg-secondary'}`}\n                                    role=\"progressbar\"\n                                    style={`width: ${percent}%;`}\n                                    aria-valuenow={percent}\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                />\n                            </div>\n                        </>);\n                    })}\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>\n                            <small>\n                                {util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}\n                            </small>\n                        </div>\n                        {isExpired ? <>\n                            <div class='ml-2'>\n                                <small>\n                                    - <Text id='story.finished'>Finished</Text>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div class='ml-2'>\n                                <small>\n                                    - {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text>\n                                </small>        \n                            </div>\n                            {!hasPolledStory && <div class='ml-2' onClick={this.toggleResult}>\n                                <small>\n                                    - <Text id='story.view-vote'>View vote</Text>\n                                </small>\n                            </div>}\n                        </>}\n                    </div>\n                </> : <>\n                    {lines && lines.map((line, idx) => <>\n                        <button\n                            class={`btn btn-block ${hasImageRegexp.test(line) && idx === selectedImageIdx ? 'btn-outline-success' : 'btn-outline-primary'} rounded-pill`}\n                            onClick={this.pollStory}\n                            data-line={mu.md5(line)}\n                        >\n                            {hasImageRegexp.test(line) && idx === selectedImageIdx && <span class='float-right'><i class='fas fa-eye' /></span>}\n                            <Markdown markdown={mu.replaceImages(line, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                        </button>\n                    </>)}\n\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>\n                            <small>\n                                {util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}\n                            </small>\n                        </div>\n                        {isExpired ? <>\n                            <div class='ml-2'>\n                                <small>\n                                    - <Text id='story.finished'>Finished</Text>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div class='ml-2'>\n                                <small>\n                                    - {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text>\n                                </small>        \n                            </div>\n                        </>}\n                        <div class='ml-2' onClick={this.toggleResult}>\n                            <small>    \n                                - <Text id='story.view-results'>View results</Text>\n                            </small>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPoll;\n"],"sourceRoot":""}