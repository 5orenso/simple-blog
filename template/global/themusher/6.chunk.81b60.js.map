{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/workout/totals.js","webpack:///./components/workout/calendar.js","webpack:///./components/workout/status.js","webpack:///./components/workout/graph.js","webpack:///./components/gauge/style.css","webpack:///./components/ad/index.js","webpack:///./components/gauge/index.js"],"names":["initialState","ScrollIntoView","observer","props","state","container","componentDidMount","this","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Component","WorkoutTotals","loadAll","loadTeams","currentMonth","currentYear","teamStore","stores","Date","getMonth","getFullYear","month","year","load","query","team","currentTeam","skipMusherWorkoutSummary","addData","componentWillReceiveProps","nextProps","currentSeasonSummary","currentSeason","prevSeasonSummary","prevSeason","seasonStart","parseInt","findWorkoutSummary","findWorkoutSummaryTotal","class","value","distanceKm","smallUnit","elevation","util","secToHms","duration","speedAvg","RED_DAYS","WorkoutCalendar","chooseDay","e","chooseDayFunction","day","target","parentElement","dataset","setState","loadWorkoutSummary","isLoading","skipLoadSummary","userStore","workoutStore","getYear","dog","id","getWorkoutSummary","getWorkoutSummaryDay","appState","workoutPlanStore","user","language","DAYS","mu","getDays","MONTHS","getMonths","dd","mm","yyyy","darkmode","currentDay","getDate","basehref","hideSummary","hideTable","monthNum","yearNum","getNextMonth","nextMonth","nextYear","getPrevMonth","prevMonth","prevYear","weeksInMonth","getDaysInMonth","getWeeksInMonth","daysOfWeek","getDaysInWeek","week","totalDistanceKmMonth","totalCountMonth","totalElevationMonth","totalDurationMonth","totalSpeedavgMonth","totalPlanDistanceKmMonth","href","name","map","getDay","weekObj","summaryPlanWeek","findWorkoutPlanSummaryWeek","totalWeek","summary","findWorkoutSummaryWeekDay","summaryPlanDay","findWorkoutPlanSummaryDay","count","push","distance","isChosen","isToday","isDayOff","indexOf","style","onClick","data-day","data-month","data-year","getTrainingColor","colspan","avgArr","WorkoutStatus","loadWorkoutPlans","workoutPlanCurrent","seasonYear","seasonMonth","workoutPlans","lastPlanMonth","workoutPlan","findTeam","months","monthRange","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","format","role","aria-valuenow","aria-valuemin","aria-valuemax","fields","WorkoutGraph","withText","rest","ascend","plan","loadIndex","avgDogs","avgImages","sledWeight","rating","temperature","graphWorkoutSummaryWeekDistanceCurrent","graphWorkoutSummaryWeekDistancePrev","graphWorkoutSummaryWeekElevationCurrent","graphWorkoutSummaryWeekElevationPrev","avgDayDistance","avgDayElevation","avgDayDuration","avgDaySpeedAvg","avgDayLoadIndex","avgDayAvgDogs","avgDayAvgImages","avgDaySledWeight","avgDayRest","avgDayRating","avgDayTemperature","settings","graphPlanWeekDistanceCurrent","showExtra","seasonWeeks","weekRange","seasonDays","dayRange","xTicksAll","wo","parts","Math","floor","length","xTicks","i","l","xTicksAllDays","partsDays","xTicksDays","width","showXTicks","xTicksVal","val","paddingTop","lineFromXzero","lineFromXmax","xTicksLink","dataLeft","legendLeft","dataFillLeft","showYTicksLeft","yTicksLeftPostfix","imperial","unitLeft","avgWindowLeft","smoothLeft","dataRight","legendRight","showYTicksRight","yTicksRightPostfix","unitRight","avgWindowRight","smoothRight","paddingLeft","yTicksLeftWidth","yTicksLeftVal","yTicksRightVal","module","exports","showAddComment","Ad","subject","body","logClick","ads","adStore","updateTimer","inputRef","apiServer","getApiServer","loadAd","page","section","url","path","findTeamAmbition","ambition","ambitions","findTeamType","type","postalcode","place","country","replace","setTime","time","match","rel","ad","src","native","images","s3LargeLink","mouseData","Gauge","svgRef","radius","heightAdd","color","showPercentText","percent","prefix","showCenterText","centerText","centerTextSize","centerTextX","centerTextY","total","totalY","totalX","totalTextAnchor","completed","completedY","completedX","completedTextAnchor","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","transform","offset","min","max","textSize","textSizeSmall","xmlns","svg","preserveAspectRatio","gaugeBackground","cx","cy","r","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","transition","gaugeText","x","y","dominant-baseline","text-anchor","font-size","secondary"],"mappings":"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","file":"6.chunk.81b60.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass WorkoutTotals extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        await this.loadTeams(props);\n        // await Promise.all([\n        //     this.loadTeams(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n        const { teamStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear, currentTeam, currentSeason: currentSeasonSummary, prevSeason: prevSeasonSummary } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { workoutSummary } = teamStore;\n        const prevSeason = prevSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart - 1) : teamStore.findWorkoutSummaryTotal(seasonStart - 1)) || {});\n        const currentSeason = currentSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart) : teamStore.findWorkoutSummaryTotal(seasonStart)) || {});\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2 border-top'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Distance stores={this.props.stores} value={currentSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Distance stores={this.props.stores} value={prevSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Elevation stores={this.props.stores} value={currentSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Elevation stores={this.props.stores} value={prevSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            {util.secToHms(currentSeason.duration || 0)}\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            {util.secToHms(prevSeason.duration || 0)}\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Speed stores={this.props.stores} value={currentSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Speed stores={this.props.stores} value={prevSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutTotals;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst RED_DAYS = [0, 6];\n\n@observer\nclass WorkoutCalendar extends Component {\n\n    async loadWorkoutSummary(props = this.props) {\n        this.setState({ isLoading: true });\n        if (props.skipLoadSummary) {\n            return false;\n        }\n\n\t\tconst { userStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n        if (dog && dog.id) {\n            await userStore.getWorkoutSummary({ dog: dog.id, year });\n            await userStore.getWorkoutSummaryDay({ month, year, dog: dog.id });\n        } else {\n            await userStore.getWorkoutSummary({ team, dog: dog.id, year });\n            await userStore.getWorkoutSummaryDay({ month, year, team, dog: dog.id });\n        }\n\t\t// await workoutStore.load({ query: { team: currentTeam, month, year } });\n        this.setState({ isLoading: false });\n    }\n\n    chooseDay = (e) => {\n        const { year: yyyy, month: mm, day: dd } = this.state;\n        const { chooseDayFunction = () => {} } = this.props;\n\t\tconst day = e.target.parentElement.dataset.day || e.target.dataset.day;\n\t\tconst month = e.target.parentElement.dataset.month || e.target.dataset.month;\n\t\tconst year = e.target.parentElement.dataset.year || e.target.dataset.year;\n\t\t// console.log({ day, month, year });\n\n        if (year === yyyy && month === mm && day === dd) {\n            this.setState({\n                year: null,\n                month: null,\n                day: null,\n            });\n        } else {\n            this.setState({\n                year,\n                month,\n                day,\n            });\n        }\n        chooseDayFunction({ day, month, year });\n    }\n\n    componentDidMount() {\n        this.loadWorkoutSummary();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.dog !== this.props.dog\n            || nextProps.team !== this.props.team) {\n            this.loadWorkoutSummary(nextProps);\n        }\n    }\n\n    render() {\n        const { appState, userStore, workoutPlanStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        const DAYS = mu.getDays(language);\n        const MONTHS = mu.getMonths(language);\n\n        const { day: dd, month: mm, year: yyyy } = this.state;\n\n\t\tconst { darkmode } = appState;\n        \n        const currentDay = new Date().getDate();\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, dog, basehref, hideSummary, hideTable } = this.props;\n\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const monthNum = parseInt(month, 10);\n        const yearNum = parseInt(year, 10);\n        const { month: nextMonth, year: nextYear } = mu.getNextMonth(monthNum, yearNum);\n        const { month: prevMonth, year: prevYear } = mu.getPrevMonth(monthNum, yearNum);\n\n        const daysOfMonth = util.getDaysInMonth(month, year);\n        const weeksInMonth = util.getWeeksInMonth(month, year);\n        const firstWeek = weeksInMonth[0].week;\n        const daysOfWeek = util.getDaysInWeek(firstWeek, year, month);\n        let totalDistanceKmMonth = 0;\n        let totalCountMonth = 0;\n        let totalElevationMonth = 0;\n        let totalDurationMonth = 0;\n        let totalSpeedavgMonth = [];\n\n        let totalPlanDistanceKmMonth = 0;\n\n        return (\n            <>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4 text-center'>\n                    <a href={`${basehref || '/workouts/month/'}${nextMonth}/${nextYear}/skipScroll`} class='float-right btn btn-sm btn-outline-secondary ml-2'><i class='fas fa-arrow-right' /></a>\n                    <a href={`${basehref || '/workouts/month/'}${prevMonth}/${prevYear}/skipScroll`} class='float-left btn btn-sm btn-outline-secondary mr-2'><i class='fas fa-arrow-left' /></a>\n                    <h3><Text id='workout.calendar.month'>Måned</Text> - {MONTHS[month - 1]} {year}</h3>\n                    <h5 class='text-muted font-weight-light'><Text id='workout.plan.season'>Sesongen</Text> {seasonStart} - {seasonStart + 1}</h5>\n                    {dog && <div>{dog.name}</div>}\n                    {/* <small>{util.isoDate(daysOfMonth[0], false, false, true)} - {util.isoDate(daysOfMonth[daysOfMonth.length - 1], false, false, true)}</small> */}\n                </div>\n\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\n\n                    {!hideTable && <>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-muted'><small><Text id='workout.calendar.week'>Uke</Text></small></th>\n                                    {daysOfWeek.map(day => <th><small>{DAYS[day.getDay()]}</small></th>)}\n                                    <th class='text-muted'><small><Text id='workout.calendar.sum'>Sum</Text></small></th>\n                                    {/* <th class='text-muted'>Totalt</th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {weeksInMonth && weeksInMonth.map(weekObj => {\n                                    const daysOfWeek = util.getDaysInWeek(weekObj.week, year, month);\n                                    const summaryPlanWeek = workoutPlanStore.findWorkoutPlanSummaryWeek(parseInt(year, 10), weekObj.week) || {};\n                                    let totalWeek = 0;\n                                    return (\n                                        <tr>\n                                            <td class='text-right text-muted pt-3'>\n                                                <small>\n                                                    <a href={`/workouts/week/${weekObj.week}/${year}`} class='text-muted'>{weekObj.week}</a>\n                                                </small>\n                                            </td>\n                                            {daysOfWeek.map(day => {\n                                                const summary = userStore.findWorkoutSummaryWeekDay(day.getFullYear(), day.getMonth() + 1, day.getDate(), monthNum) || {};\n                                                const summaryPlanDay = workoutPlanStore.findWorkoutPlanSummaryDay(day.getFullYear(), day.getMonth() + 1, day.getDate(), monthNum) || {};\n                                                if (summary && summary.distanceKm) {\n                                                    totalWeek += summary.distanceKm;\n                                                    totalDistanceKmMonth += summary.distanceKm;\n                                                    totalCountMonth += summary.count;\n                                                    totalElevationMonth += summary.elevation;\n                                                    totalDurationMonth += summary.duration;\n                                                    totalSpeedavgMonth.push(summary.speedAvg);\n                                                }\n                                                if (summaryPlanDay && summaryPlanDay.distance) {\n                                                    totalPlanDistanceKmMonth += summaryPlanDay.distance;\n                                                }\n                                                const isChosen = (dd == day.getDate()) && (mm == day.getMonth() + 1) && (yyyy === day.getFullYear());\n                                                const isToday =  (currentDay == day.getDate()) && (currentMonth == day.getMonth() + 1) && (currentYear == day.getFullYear());\n                                                const isDayOff = RED_DAYS.indexOf(day.getDay()) > -1;\n                                                // console.log(summary);\n                                                // count: 1, day: 5, distanceKm: 10, duration: 3600, elevation: 200, month: 9, speedAvg: 12, year: 2020\n                                                return (\n                                                    <td class={`text-center font-weight-light position-relative pt-3 pb-3 ${isChosen ? 'calendarIsChosen' : ''} ${isToday ? 'calendarIsToday' : ''} ${isDayOff ? 'calendarIsWeekend' : ''}`}\n                                                        style={`font-size: 0.8em;`}\n                                                        onClick={this.chooseDay} data-day={day.getDate()} data-month={day.getMonth() + 1} data-year={year}\n                                                    >\n                                                        <div class='position-absolute text-muted' style='top: 0px; right: 2px; font-size: 0.7em;'>\n                                                            {day.getDate()}\n                                                        </div>\n                                                        {summary && summary.distanceKm ? \n                                                            <div class='rounded-pill w-100 px-1'\n                                                                style={`background-color: ${mu.getTrainingColor(summary, darkmode)};`}\n                                                            >\n                                                                <Distance stores={this.props.stores} value={summary.distanceKm} />\n                                                                {summary.count > 1 && (\n                                                                    <span class='position-absolute text-danger'\n                                                                        style='bottom: 0; right: 0px; font-size: 0.6em;'>\n                                                                        {summary.count}\n                                                                    </span>\n                                                                )}\n\n                                                            </div> : '-'}\n                                                        {summaryPlanDay.distance > 0 && (\n                                                            <span class='position-absolute text-primary'\n                                                                style='bottom: 0; left: 0px; font-size: 0.9em;'>\n                                                                <Distance stores={this.props.stores} value={summaryPlanDay.distance} />\n                                                            </span>\n                                                        )}\n                                                    </td>\n                                                );\n                                            })}\n                                            <td class='text-right pt-3 pb-3 position-relative' style='font-size: 0.8em;'>\n                                                <Distance stores={this.props.stores} value={totalWeek} />\n                                                {summaryPlanWeek.distance > 0 && (\n                                                    <span class='position-absolute text-primary'\n                                                        style='bottom: 0; left: 0px; font-size: 0.9em;'>\n                                                        <Distance stores={this.props.stores} value={summaryPlanWeek.distance} />\n                                                    </span>\n                                                )}    \n                                            </td>\n                                            {/* <td class='text-right text-muted pt-3'>{totalDistanceKmMonth}</td> */}\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colspan='8' class='text-right'><Text id='workout.calendar.totalKm'>Totalt km</Text></td>\n                                    <td class='text-right text-muted pb-3 position-relative'>\n                                        <Distance stores={this.props.stores} value={totalDistanceKmMonth} />\n                                        {totalPlanDistanceKmMonth > 0 && (\n                                            <span class='position-absolute text-primary'\n                                                style='bottom: 0; left: 0px; font-size: 0.8em;'>\n                                                <Distance stores={this.props.stores} value={totalPlanDistanceKmMonth} />\n                                            </span>\n                                        )}\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </>}\n\n                    {!hideSummary && <>\n                        <h5 class='mt-4'><Text id='workout.calendar.summary'>Oppsummering</Text> - {MONTHS[month - 1]} {year}</h5>\n                        {dog && <div>{dog.name}</div>}\n\n                        <table class='table table-striped table-sm'>\n                            <tbody>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.totalWorkouts'>Antall økter</Text></td>\n                                    <td class='text-right'>{totalCountMonth}</td>\n                                </tr>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.distance'>Distanse</Text></td>\n                                    <td class='text-right'>\n                                        <Distance stores={this.props.stores} value={totalDistanceKmMonth} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.ascend'>Høydemeter</Text></td>\n                                    <td class='text-right'>\n                                        <Elevation stores={this.props.stores} value={totalElevationMonth} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.duration'>Varighet</Text></td>\n                                    <td class='text-right'>\n                                        {util.secToHms(totalDurationMonth)}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class='text-muted'><Text id='workout.calendar.avg-speed'>Gjennomsnittsfart</Text></td>\n                                    <td class='text-right'>\n                                        <Speed stores={this.props.stores} value={mu.avgArr(totalSpeedavgMonth)} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </>}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutCalendar;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        // await Promise.all([\n        //     this.loadTeams(props),\n        //     this.loadWorkoutPlans(props),\n        //     this.loadWorkoutSummary(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { workoutPlanStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { year = currentYear, month = currentMonth, currentTeam } = props;\n\t\tconst seasonStart = parseInt(year || (month < 8 ? year - 1 : year), 10);\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t}\n\t\t}\n\t}\n\n    async loadWorkoutSummary(props = this.props) {\n        const { year, currentTeam, dog } = props;\n\t\tconst { userStore } = props.stores;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, dog });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n\t\tconst { currentSeason, prevSeason, currentTeam } = this.props;\n\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { workoutPlan } = workoutPlanStore;\n        const { user, workoutSummaryTeam } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst team = teamStore.findTeam(currentTeam) || {};\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { year = currentYear, month = currentMonth } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n        const months = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <span style='display: none;'>{workoutPlan.id}</span>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > year || (month.year === year && month.month >= month)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center text-muted mb-5'>\n                        <div class='display-1'>\n                            <i class='far fa-sad-tear' />\n                        </div>\n                        <h3 class='font-weight-lighter'>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                        <a class='btn btn-success btn-lg mt-3' href='/workouts/plan'><i class='fas fa-calendar-alt' /> <Text id='workout.plan.new'>New workoutplan</Text></a>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    duration: <Text id='workout.graph.duration'>Duration</Text>,\n    rest: <Text id='workout.graph.rest'>Rest</Text>,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n    speedAvg: <Text id='workout.graph.speedavg'>Speed</Text>,\n    loadIndex: <Text id='workout.graph.loadindex'>Loadindex</Text>,\n\n    avgDogs: <Text id='workout.graph.avgdogs'>Avg dogs</Text>,\n    avgImages: <Text id='workout.graph.avgimages'>Avg images</Text>,\n    sledWeight: <Text id='workout.graph.sledweight'>Sled weight</Text>,\n    rating: <Text id='workout.graph.rating'>Rating</Text>,\n    temperature: <Text id='workout.graph.temperature'>Temperature</Text>,\n}))\n@observer\nclass WorkoutGraph extends Component {\n    render() {\n        const { userStore, workoutPlanStore } = this.props.stores;\n        const {\n            user,\n\t\t\tworkoutSummary,\n\t\t\tgraphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev,\n\t\t\tgraphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev,\n            avgDayDistance, avgDayElevation, \n            avgDayDuration, avgDaySpeedAvg, avgDayLoadIndex, \n            avgDayAvgDogs, avgDayAvgImages, avgDaySledWeight,\n            avgDayRest, avgDayRating, avgDayTemperature,\n\t\t} = userStore;\n        const { settings = {} } = user;\n        const { graphPlanWeekDistanceCurrent } = workoutPlanStore;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const {\n            isLoading,\n            week,\n            distance,\n            duration,\n            rest,\n            ascend,\n            plan,\n            speedAvg,\n            loadIndex,\n            avgDogs,\n            avgImages,\n            sledWeight,\n            rating,\n            temperature,\n            year = currentYear,\n            month = currentMonth,\n            showExtra = false,\n        } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const seasonDays = util.dayRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = Math.floor(xTicksAll.length / 5);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += parts) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        const xTicksAllDays = seasonDays.map(wo => `${wo.day}.${wo.month}`);\n        const partsDays = Math.floor(xTicksAllDays.length / 5);\n        const xTicksDays = [];\n        for (let i = 0, l = xTicksAllDays.length; i < l; i += partsDays) {\n            xTicksDays.push(xTicksAllDays[i]);\n        }\n\n        return (\n            <>\n                {/* <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5> */}\n                <div class='w-100 mt-3 mb-4 border-top pt-5'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <h5 class='text-center'><Text id='workout.graph.total-distance'>Total distance</Text></h5>\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        xTicksLink={'/workouts/week/'}\n\n                        dataLeft={[graphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev, graphPlanWeekDistanceCurrent]}\n                        legendLeft={[`${seasonStart} ${distance}`, `${seasonStart - 1} ${distance}`, `${seasonStart} ${plan}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                        unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                        avgWindowLeft={[0, 0, 0]}\n                        smoothLeft={[1, 1, 1]}\n\n                        dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={1}\n                        yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                        unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                        avgWindowRight={[0, 0]}\n                        smoothRight={[1, 1]}\n\n                        // marker={week}\n                    />\n                </div>\n\n                {!isLoading && graphWorkoutSummaryWeekDistanceCurrent && graphWorkoutSummaryWeekDistanceCurrent.length < 3 && (\n                    <div class='mb-5 py-3 border-top border-bottom'>\n                        <div class='text-left' style='line-height: 1.0em;'>\n                            <div class='display-4 float-left text-warning mr-3'>\n                                <i class='fas fa-paw' />\n                            </div>\n                            <small>\n                                <Text id='workout.graph.too-little-data'>Foreløpig er det litt lite data for å kunne vise noen fine grafer. \n                                Etterhvert som du legger inn flere treninger så vil dette bli en fin tabell og graf som viser progresjonen din.</Text>\n                            </small>\n                        </div>\n                    </div>\n                )}\n                {showExtra && <>\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-rating'>Average rating/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayRating]}\n                            legendLeft={[`${seasonStart} ${rating}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayTemperature]}\n                            legendRight={[`${seasonStart} ${temperature}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? '°F' : '°C'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-distance'>Average distance/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDistance]}\n                            legendLeft={[`${seasonStart} ${distance}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayElevation]}\n                            legendRight={[`${seasonStart} ${ascend}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-duration'>Average duration/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            paddingLeft={50}\n                            yTicksLeftWidth={'50px'}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDuration]}\n                            legendLeft={[`${seasonStart} ${duration}`]}\n                            yTicksLeftVal={val => `${util.secToHms(val)}`}\n\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            // unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayRest]}\n                            legendRight={[`${seasonStart} ${rest}`]}\n                            showYTicksRight={1}\n                            yTicksRightVal={val => `${util.secToHms(val)}`}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-speed'>Average speed/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDaySpeedAvg]}\n                            legendLeft={[`${seasonStart} ${speedAvg}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayLoadIndex]}\n                            legendRight={[`${seasonStart} ${loadIndex}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-dogs'>Average dogs/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayAvgDogs, avgDayAvgImages]}\n                            legendLeft={[`${seasonStart} ${avgDogs}`, `${seasonStart} ${avgImages}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDaySledWeight]}\n                            legendRight={[`${seasonStart} ${sledWeight}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    {/* <xmp>{JSON.stringify(avgDayDuration, null, 4)}</xmp> */}\n                </>}\n            </>\n        );\n    }\n}\n\nexport default WorkoutGraph;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const {\n            radius = 50,\n            heightAdd = 0,\n            color = 'success',\n\n            showPercentText = true,\n            percent = 0,\n            prefix = '',\n\n            showCenterText= false,\n            centerText,\n            centerTextSize,\n            centerTextX,\n            centerTextY,\n\n            total = '',\n            totalY = '90%',\n            totalX = '50%',\n            totalTextAnchor = 'middle',\n                        \n            completed = '',\n            completedY = '65%',\n            completedX = '50%',\n            completedTextAnchor = 'middle',\n        } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = centerTextSize || radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2 + heightAdd}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    {showPercentText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>}\n\n                    {showCenterText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{centerText}</text>}\n\n                    {completed && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={completedX}\n                        y={completedY}\n                        dominant-baseline='middle'\n                        text-anchor={completedTextAnchor}\n                        font-size={textSizeSmall}\n                    >{completed}</text>}\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x={totalX}\n                        y={totalY}\n                        dominant-baseline='middle'\n                        text-anchor={totalTextAnchor}\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n"],"sourceRoot":""}