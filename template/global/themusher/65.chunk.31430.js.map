{"version":3,"sources":["webpack:///./components/admin/userInvites.js","webpack:///./components/admin/heatmap.js","webpack:///./components/admin/pageViews.js","webpack:///./components/admin/applications.js","webpack:///./components/admin/notification.js","webpack:///./components/data/distance.js","webpack:///./components/admin/competition.js","webpack:///./components/admin/graph.js","webpack:///./components/admin/development.js","webpack:///./components/user/index.js","webpack:///./components/admin/jwttoken.js","webpack:///./components/admin/weeklyTotals.js","webpack:///./components/data/temperature.js","webpack:///./components/admin/weeklyAvg.js","webpack:///./components/data/weight.js","webpack:///./components/admin/miniAdGraph.js","webpack:///./routes/home/admin.js","webpack:///./components/admin/keyNumbers.js","webpack:///./components/data/elevation.js","webpack:///./components/admin/ads.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./components/admin/veterinaryHistory.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/admin/demographics.js","webpack:///./components/admin/miniPageViewGraph.js","webpack:///./components/admin/errors.js"],"names":["UserInvites","observer","loadResults","props","stores","adminStore","getUserInviteResults","loadAll","this","setState","isLoading","componentDidMount","render","inviteResults","class","map","res","util","isoDate","date","user","email","activities","invitedUser","username","firstname","lastname","lastActivityEpoch","teams","t","name","members","length","dogs","workouts","Component","initialState","showAddComment","Heatmap","state","updateTimer","inputRef","loadHeatmap","getHeatmap","heatmap","mapId","minZoom","height","PageView","loadPageView","getPageViews","graphFieldsLeftFrontpage","graphLegendsLeftFrontpage","graphFieldsLeftRace","graphLegendsLeftRace","graphFieldsLeftSearch","graphLegendsLeftSearch","graphFieldsLeftInbox","graphLegendsLeftInbox","graphFieldsLeftSettings","graphLegendsLeftSettings","graphFieldsLeftUsers","graphLegendsLeftUsers","graphFieldsLeftDogs","graphLegendsLeftDogs","graphFieldsLeftWorkouts","graphLegendsLeftWorkouts","graphFieldsLeftTeams","graphLegendsLeftTeams","graphFieldsLeftTracks","graphLegendsLeftTracks","pages","pageViewsKeys","e","graphKey","forEach","key","match","push","fieldsLeft","legendLeft","Input","handleImageErrored","image","target","onerror","setTimeout","src","Date","removeImage","applicationStore","id","application","parentElement","dataset","removeMainImage","updateField","field","value","saved","type","rows","title","icon","help","onInput","for","images","img","s3SmallLink","onError","onClick","data-name","object","autoOpen","style","aria-describedby","data-id","data-field","InputNew","updateObjectKeyValue","newApplication","Application","insertApplication","insert","load","query","showall","resetApplicaton","selectApplication","resetApplication","updateKeyValue","elementtype","isNew","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","loadApplication","addData","saveField","applications","apiServer","appState","returnUrl","getIcon","AdminNotification","confirmRequest","notification","teamStore","confirmFollowRequest","team","addedBy","deleteRequest","deleteFollowRequest","showDate","displayNameShort","ucfirst","displayName","userImage","undefined","dogIds","grouped","dog","indexOf","isDimmed","read","isLinked","s3ThumbLink","href","url","message","toggleDate","formatDate","locale","formatDistance","d","displayDistance","distance","format","Distance","smallUnit","userStore","settings","imperial","kmToMiles","Competition","workoutStore","workoutResults","competitionResults","competitionAllResults","competitionTeams","language","year","month","findTeamType","findTeamAmbition","ambition","ambitions","count","avgDogs","totalDistanceKm","distanceKm","elevation","secToHms","duration","speedAvg","colspan","filter","line","find","postalcode","place","country","diffTotalDistanceKm","AdminGraph","withText","week","ascend","plan","fieldsRight","legendRight","showDebug","xTicksVal","val","xTicksCnt","yTicksLeftVal","yTicksRightVal","dataLeft","getNestedValue","dataRight","firstData","xTicks","partSize","Math","ceil","parts","floor","console","log","i","l","epoch","width","showXTicks","paddingTop","paddingLeft","yTicksLeftWidth","lineFromXzero","lineFromXmax","showYTicksLeft","avgWindowLeft","smoothLeft","showYTicksRight","avgWindowRight","smoothRight","legendFontSize","legendLineHeight","ticksFontSize","scrollToRight","Development","setApiServer","apiserver","closest","data-apiserver","User","removeUser","parentNode","removeMember","adminUpdateUser","doAdminUpdateUser","simulateUser","getSimulateUser","currentUser","isAdmin","findTeams","summary","findMusherSummary","isTeamAdmin","mu","getImage","cellphone","asUrl","rel","facebook","asFacebookLink","instagram","asInstagramLink","snapchat","asSnapchatLink","data-email","JSON","stringify","subscription","deviceInfo","notifications","notificationTopics","shadowTags","garmin","strava","currentLocationGeocode","veterinaryAllowed","checked","twoFactorLogin","isVeterinary","avgDistance","avgElevation","avgDuration","data-team","copyToClipboard","textArea","select","document","execCommand","focus","copySuccess","jwtToken","userEmail","ref","c","WeeklyTotals","totalKey","totalUsersWeekNumber","totalUsersMonthNumber","totalWeek","totalMonth","submenu","getWeek","stat","Temperature","celciusToFahrenheit","avgKey","Weight","kgToPounds","MiniAdGraph","adStore","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","subMenuMarginTop","getJwtToken","Admin","loadStats","getStatsAvg","getStatsTotal","getStats","limit","loadAdminHistory","getAdminHistory","simulateUserByClick","setQuery","innerText","setWorkoutQuery","workoutQuery","sendNotification","fixGpxInfo","getFixWorkoutGpxInfo","search","searchUsers","searchText","showAll","chooseSubmenu","menu","checkForEnter","componentWillUnmount","cleanupMemory","searchUsersResult","adminHistory","lastStat","stats","sm","data-menu","window","location","native","placeholder","linkstate","data-url","urlList","doSend","onclick","createdDate","messages","teamTypesCounts","Object","keys","teamAmbitionsCounts","workoutPlans","totalDistance","totalElevation","totalDuration","tracks","users","usersGarmin","usersStrava","usersProminentDisclosure","usersVeterinaryAllowed","usersInboxEmails","usersImperial","usersDarkmode","avgSpeed","avgTemperature","dogsHistoryAnimalchiropractor","dogsHistoryBodyScore","dogsHistoryClawClip","dogsHistoryDeworming","dogsHistoryDiarrhea","dogsHistoryFight","dogsHistoryFoodLeftover","dogsHistoryInjury","dogsHistoryMassage","dogsHistoryMating","dogsHistoryMaturity","dogsHistoryNewStraw","dogsHistoryOther","dogsHistorySick","dogsHistoryStoolProblem","dogsHistoryUnwantedMating","dogsHistoryUpdate","dogsHistoryVaccine","dogsHistoryVeterinarianVisit","dogsHistoryWeek","dogsHistoryWeight","dogsHistoryYear","dogsInjured","dogsMaturity","dogsMedication","dogsNoBreeding","dogsPregnant","dogsPuppy","dogsRelocation","dogsRetired","dogsSick","dogsSterilized","onKeyDown","KeyNumbers","userDeviceInfoPlatformCounts","userDeviceInfoManufacturerCounts","platformKeys","sort","manufacturerKeys","Elevation","meterToFeet","ad","newAd","Ad","insertAd","loadAd","resetAd","selectAd","loadById","ads","viewCounts","clickCounts","graphFieldsLeft","graphLegendsLeft","graphFieldsRight","graphLegendsRight","page","active","section","Speed","kmtToMph","Images","handleAddImage","file","addToImages","files","uploadStatus","before","after","apiUrl","VeterinaryHistory","getVeterinaryHistory","toggleLine","idx","showError","veterinaryHistory","vetLog","veterinary","searchResults","ip","ua","platform","os","browser","version","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","isImage","result","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax","children","byCount","a","b","byId","_id","secMap","secHour","secDay","secMonth","Demographics","getDemographics","demographicsLanguage","demographicsDarkmode","demographicsImperial","demographicsVeterinary","demographicsFirebase","demographicsLocation","demographicsActivities","demographicsActivitiesPeriodes","demographicsTeamWorkouts","demographicsTeamFollowers","demographicsTeamDogs","storyViews","storyLikes","storyComments","storyDurationAvg","searchCount","darkmode","firebase","next","isNumber","isDefined","views","likes","comments","durationAvg","replace","Errors","loadErrors","getErrors","errors","data-idx","timestamp","stack"],"mappings":"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","file":"65.chunk.31430.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass UserInvites extends Component {\n    async loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadResults();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadResults = async () => {\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getUserInviteResults();\n\t}\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n    render() {\n        const { adminStore, userStore } = this.props.stores;\n        const { inviteResults } = adminStore;\n        return (\n            <div class='col-12'>\n                <h5>Competition results</h5>\n                <div>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Invite Date</th>\n                                <th>Invitee</th>\n                                <th>Invited</th>\n                                <th>activities</th>\n                                <th>last activity</th>\n                                <th>teams</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {inviteResults && inviteResults.map(res => <>\n                                <tr>\n                                    <td>{util.isoDate(res.date)}</td>\n                                    <td>{res.user.email} ({res.user.activities})</td>\n                                    <td>\n                                        {res.invitedUser.email}<br />\n                                        <span class='ml-2 font-weight-lighter'>{res.invitedUser.username}</span>\n                                        <span class='ml-2 font-weight-lighter'>{res.invitedUser.firstname} {res.invitedUser.lastname}</span>\n                                    </td>\n                                    <td>{res.invitedUser.activities}</td>\n                                    <td>{res.invitedUser.lastActivityEpoch ? util.isoDate(res.invitedUser.lastActivityEpoch) : ''}</td>\n                                    <td>{res.teams && res.teams.map(t => <>\n                                        <span class='ml-3'>\n                                            {t.name}\n                                            <i class='fas fa-users text-muted ml-3' /> {t.members.length}\n                                            <i class='fas fa-dog text-muted ml-3' /> {t.dogs.length}\n                                            <i class='fas fa-running text-muted ml-3' /> {t.workouts.length}\n                                        </span><br />\n                                    </>)}</td>\n                                </tr>\n                            </>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserInvites;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Heatmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadHeatmap() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getHeatmap();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadHeatmap();\n\t}\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const { heatmap } = adminStore;\n\n        return (\n            <>\n                {/* {JSON.stringify(heatmap)} */}\n                <Map\n                    stores={this.props.stores}\n                    mapId={heatmap.length}\n                    heatmap={heatmap}\n                    minZoom={2}\n                    height={800}\n                />\n            </>\n        );\n    }\n}\n\nexport default Heatmap;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport MiniPageViewGraph from '../../components/admin/miniPageViewGraph';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass PageView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadPageView() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getPageViews();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadPageView();\n\t}\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const { pageViews, pageViewsKeys } = adminStore;\n\n        let graphFieldsLeftFrontpage = [];\n        let graphLegendsLeftFrontpage = [];\n        let graphFieldsLeftRace = [];\n        let graphLegendsLeftRace = [];\n        let graphFieldsLeftSearch = [];\n        let graphLegendsLeftSearch = [];\n        let graphFieldsLeftInbox = [];\n        let graphLegendsLeftInbox = [];\n        let graphFieldsLeftSettings = [];\n        let graphLegendsLeftSettings = [];\n        let graphFieldsLeftUsers = [];\n        let graphLegendsLeftUsers = [];\n        let graphFieldsLeftDogs = [];\n        let graphLegendsLeftDogs = [];\n        let graphFieldsLeftWorkouts = [];\n        let graphLegendsLeftWorkouts = [];\n        let graphFieldsLeftTeams = [];\n        let graphLegendsLeftTeams = [];\n        let graphFieldsLeftTracks = [];\n        let graphLegendsLeftTracks = [];\n\n        // const pages = Object.keys(pageViews);\n        const pages = pageViewsKeys.map(e => e.name);\n        const graphKey = `pageViews-${pages.length}`;\n        pages.forEach((key) => {\n            if (key.match(/^(frontpage|feed|news|dashboard)/)) {\n                graphFieldsLeftFrontpage.push(`pageViews.${key}`);\n                graphLegendsLeftFrontpage.push(`${key}`);\n            }\n            if (key.match(/^(app-races)/)) {\n                graphFieldsLeftRace.push(`pageViews.${key}`);\n                graphLegendsLeftRace.push(`${key}`);\n            }\n            if (key.match(/^(search)/)) {\n                graphFieldsLeftSearch.push(`pageViews.${key}`);\n                graphLegendsLeftSearch.push(`${key}`);\n            }\n            if (key.match(/^(inbox)/)) {\n                graphFieldsLeftInbox.push(`pageViews.${key}`);\n                graphLegendsLeftInbox.push(`${key}`);\n            }\n            if (key.match(/^(settings)/)) {\n                graphFieldsLeftSettings.push(`pageViews.${key}`);\n                graphLegendsLeftSettings.push(`${key}`);\n            }\n            if (key.match(/^(user|todo|admin)/)) {\n                graphFieldsLeftUsers.push(`pageViews.${key}`);\n                graphLegendsLeftUsers.push(`${key}`);\n            }\n            if (key.match(/^dog/)) {\n                graphFieldsLeftDogs.push(`pageViews.${key}`);\n                graphLegendsLeftDogs.push(`${key}`);\n            }\n            if (key.match(/^workout/)) {\n                graphFieldsLeftWorkouts.push(`pageViews.${key}`);\n                graphLegendsLeftWorkouts.push(`${key}`);\n            }\n            if (key.match(/^team/)) {\n                graphFieldsLeftTeams.push(`pageViews.${key}`);\n                graphLegendsLeftTeams.push(`${key}`);\n            }\n            if (key.match(/^track/)) {\n                graphFieldsLeftTracks.push(`pageViews.${key}`);\n                graphLegendsLeftTracks.push(`${key}`);\n            }\n        });\n\n        return (\n            <>\n                {/* <xmp>{JSON.stringify(pageViewsKeys, null, 4)}</xmp> */}\n                <div class='w-100 mb-3'>\n                    <h5>frontpage|feed|news|dashboard</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftFrontpage}\n                        legendLeft={graphLegendsLeftFrontpage}\n                        key={`frontpage-${graphKey}`}\n                    />\n                    <h5>app-races</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftRace}\n                        legendLeft={graphLegendsLeftRace}\n                        key={`race-${graphKey}`}\n                    />\n                    <h5>search</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftSearch}\n                        legendLeft={graphLegendsLeftSearch}\n                        key={`search-${graphKey}`}\n                    />\n                    <h5>inbox</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftInbox}\n                        legendLeft={graphLegendsLeftInbox}\n                        key={`inbox-${graphKey}`}\n                    />\n                    <h5>settings</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftSettings}\n                        legendLeft={graphLegendsLeftSettings}\n                        key={`settings-${graphKey}`}\n                    />\n                    <h5>user|todo|admin</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftUsers}\n                        legendLeft={graphLegendsLeftUsers}\n                        key={`users-${graphKey}`}\n                    />\n                    <h5>dog</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftDogs}\n                        legendLeft={graphLegendsLeftDogs}\n                        key={`dogs-${graphKey}`}\n                    />\n                    <h5>workout</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftWorkouts}\n                        legendLeft={graphLegendsLeftWorkouts}\n                        key={`workouts-${graphKey}`}\n                    />\n                    <h5>team</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftTeams}\n                        legendLeft={graphLegendsLeftTeams}\n                        key={`teams-${graphKey}`}\n                    />\n                    <h5>track</h5>\n                    <MiniPageViewGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeftTracks}\n                        legendLeft={graphLegendsLeftTracks}\n                        key={`tracks-${graphKey}`}\n                    />\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default PageView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport Images from '../../components/form/images';\nimport MiniAdGraph from '../../components/admin/miniAdGraph';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n    \n    removeImage = async (e) => {\n        const { applicationStore } = this.props.stores;\n        const { application } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        applicationStore.removeImage({\n            id: application.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { application, field, updateField } = this.props;\n        updateField({ id: application.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, application, type = 'text', rows, field, title, icon, help, onInput, updateField } = this.props;\n        const value = application[field];\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {application.images && application.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={application} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${application.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='application.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type={type} class={`form-control ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        rows={rows}\n                        data-id={application.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${application.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='application.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'date') {\n            return (\n                <div class={`form-group ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input type={type} class={`form-control ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={util.isoDate(value, false, false, true)}\n                        data-id={application.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${application.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='application.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n\n        return (\n            <div class={`form-group ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type={type} class={`form-control ${saved[`${field}.${application.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={application.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${application.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='application.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { applicationStore } = this.props.stores;\n        // console.log('applicationStore.newApplication', applicationStore.newApplication);\n        applicationStore.updateObjectKeyValue('newApplication', field, value);\n    }\n\n    render() {\n        const { field, icon, title, help } = this.props;\n        const { applicationStore } = this.props.stores;\n        const { newApplication } = applicationStore;\n        return (\n            <div class='form-group'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    onInput={this.onInput}\n                    value={newApplication[field]}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass Application extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadApplication() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { applicationStore } = this.props.stores;\n\t\tawait applicationStore.load({ query: { showall: 1 }, addData: [] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tresetApplication() {\n        const { applicationStore } = this.props.stores;\n        applicationStore.updateKeyValue('newApplication', {});\n\t}\n\n    insertApplication = async () => {\n\t\tconst { applicationStore } = this.props.stores;\n\t\tconst { newApplication } = applicationStore;\n\t\tawait applicationStore.insert({ ...newApplication });\n        await applicationStore.load({ query: { showall: 1 } });\n        this.resetApplicaton();\n\t}\n\n    selectApplication = async (e) => {\n        const applicationId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { applicationStore } = this.props.stores;\n        await applicationStore.load(applicationId);\n    }\n\n    resetApplication = async () => {\n        const { applicationStore } = this.props.stores;\n        applicationStore.updateKeyValue('application', {});\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { applicationStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { application } = applicationStore;\n        if (field === 'images') {\n            if (Array.isArray(application.images) && Array.isArray(value)) {\n                localObjectValue = [...application.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            applicationStore.updateObjectKeyValue('newApplication', field, value);\n        } else {\n            applicationStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { applicationStore } = this.props.stores;\n        await applicationStore.saveField(id, field, value);\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadApplication();\n\t}\n\n    render() {\n        const { applicationStore, appState } = this.props.stores;\n        const { application = {}, applications = [], saved } = applicationStore;\n        const { apiServer } = appState;\n        return (\n            <>\n                <div class='w-100 mb-3'>\n                    <div class='row'>\n                        <div class='col-12 mb-0 position-relative'>\n                            {applications && applications.length > 0 && <>\n                                <table class='table table-sm table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <th>id</th>\n                                            <th>title</th>\n                                            <th>returnUrl</th>\n                                            <th>email</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {applications.map(application => (\n                                            <tr data-id={application.id} onClick={this.selectApplication}>\n                                                <td>{application.id}</td>\n                                                <td>{application.title}</td>\n                                                <td>{application.returnUrl}</td>\n                                                <td>{application.email}</td>\n                                                <td>{apiServer}/#/grant-access?returnUrl={application.returnUrl}&id={application.id}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </>}\n                        </div>\n                    </div>\n\n                    <div class='row'>\n                        {(!application || !application.id) && <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-5 mb-0 position-relative'>\n                            <button class='btn btn-danger float-right' onClick={this.resetApplication}><i class='fas fa-times' /></button>\n\n                            <h5>New application</h5>\n                            <InputNew stores={this.props.stores} field='title' icon='fas fa-heading'\n                                title={<Text id='application.title'>Tittel</Text>}\n                                help={<Text id='application.title-help'>Tittel på denne annonsen.</Text>} />\n                            <button type='button' class='btn btn-primary'\n                                onClick={this.insertApplication}\n                            >\n                                <Text id='application.save'>Save new application</Text>\n                            </button>\n                        </div>}\n                    </div>\n\n                    {application && application.id && <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-5 mb-0 position-relative'>\n                            <button class='btn btn-danger float-right' onClick={this.resetApplication}><i class='fas fa-times' /></button>\n\n                            <h3>How to</h3>\n                            <ol>\n                                <li>\n                                    Have your application point to this url: {apiServer}/#/grant-access?returnUrl={application.returnUrl}&id={application.id}\n                                </li>\n                            </ol>\n\n                            <h5>Endre annonse: \"{application.title}\"</h5>\n\n                            <Input saved={saved} application={application} field='title' icon='fas fa-heading'\n                                title={<Text id='application.title'>Title</Text>}\n                                help={<Text id='application.title-help'>Title of this application story</Text>}\n                                onInput={this.updateField} />\n                            \n                            <Input saved={saved} application={application} field='returnUrl' icon='fas fa-heading'\n                                title={<Text id='application.returnUrl'>Return URL</Text>}\n                                help={<Text id='application.returnUrl-help'>Application returnUrl</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} application={application} field='email' icon='fas fa-heading'\n                                title={<Text id='application.email'>Email</Text>}\n                                help={<Text id='application.email-help'>Application email</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} application={application} field='body' icon='fas fa-quote-right'\n                                type='textarea' rows={5}\n                                title={<Text id='application.body'>Body</Text>}\n                                help={<Text id='application.body-help'>Body of this application story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} application={application} field='offline' icon='fas fa-heading'\n                                title={<Text id='application.offline'>Offline</Text>}\n                                help={<Text id='application.offline-help'>Application offline</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} application={application} field='image' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='application.photo'>Bilder</Text>} \n                                help={<Text id='application.photo-help'>Images for this application story.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n                        </div>\n                    </div>}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Application;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction getIcon(type) {\n\tswitch (type) {\n\t\tcase 'dogHistory':\n\t\t\treturn 'fas fa-rss';\n\t\tcase 'dogStatus':\n\t\t\treturn 'fas fa-dog';\n\t\tcase 'dogSpecialNeeds':\n\t\t\treturn 'fas fa-dog';\n\t\tcase 'dogImage':\n\t\t\treturn 'fas fa-image';\n\t\tcase 'dog':\n\t\t\treturn 'fas fa-dog';\n\t\tcase 'dogChanged':\n\t\t\treturn 'fas fa-dog';\n\t\tcase 'track':\n\t\t\treturn 'fas fa-map-marked-alt';\n\t\tcase 'trackChanged':\n\t\t\treturn 'fas fa-map-marked-alt';\n\t\tcase 'workoutPlan':\n\t\t\treturn 'fas fa-calendar-alt';\n\t\tcase 'workout':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'newGarminWorkout':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'newStravaWorkout':\n\t\t\treturn 'fab fa-strava';\n\t\tcase 'workoutChanged':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'teamMember':\n\t\t\treturn 'fas fa-user';\n\t\tcase 'team':\n\t\t\treturn 'fas fa-users';\n\n        case 'newsLiked':\n            return 'fas fa-thumbs-up';\n        case 'newsCommentLiked':\n        case 'newsCommentedLiked':\n            return 'fas fa-thumbs-up';\n        case 'newsCommentReplyLiked':\n        case 'newsCommentedReplyLiked':\n            return 'fas fa-thumbs-up'\n        case 'newsComment':\n        case 'newsCommented':\n            return 'fas fa-comment';\n        case 'newsCommentReply':\n        case 'newsCommentedReply':\n            return 'fas fa-comments';\n\n        case 'trackLiked':\n            return 'fas fa-thumbs-up';\n        case 'trackCommentLiked':\n        case 'trackCommentedLiked':\n            return 'fas fa-thumbs-up';\n        case 'trackCommentReplyLiked':\n        case 'trackCommentedReplyLiked':\n            return 'fas fa-thumbs-up'\n        case 'trackComment':\n        case 'trackCommented':\n            return 'fas fa-comment';\n        case 'trackCommentReply':\n        case 'trackCommentedReply':\n            return 'fas fa-comments';\n\n        case 'workoutComment':\n        case 'workoutCommented':\n            return 'fas fa-comment';\n        case 'workoutCommentReply':\n        case 'workoutCommentedReply':\n            return 'fas fa-comments'\n        case 'workoutLiked':\n            return 'fas fa-thumbs-up';\n        case 'workoutCommentLiked':\n        case 'workoutCommentedLiked':\n            return 'fas fa-thumbs-up';\n        case 'workoutCommentReplyLiked':\n        case 'workoutCommentedReplyLiked':\n            return 'fas fa-thumbs-up'; \n\n        case 'story':\n            return 'fas fa-rss';\n        case 'storyComment':\n        case 'storyCommented':\n            return 'fas fa-comment';\n        case 'storyCommentReply':\n        case 'storyCommentedReply':\n            return 'fas fa-comments'\n        case 'storyLiked':\n            return 'fas fa-thumbs-up';\n        case 'storyCommentLiked':\n        case 'storyCommentedLiked':\n            return 'fas fa-thumbs-up';\n        case 'storyCommentReplyLiked':\n        case 'storyCommentedReplyLiked':\n            return 'fas fa-thumbs-up'; \n\n        case 'teamFollowRequest':\n            return 'fas fa-project-diagram';\n        case 'happyBirthday':\n            return 'fas fa-birthday-cake';\n\n        case 'trophy':\n            return 'fas fa-trophy';\n\t\tdefault:\n\t\t\treturn 'fas fa-rss';\n\t}\n}\n\n@observer\nclass AdminNotification extends Component {\n    confirmRequest = () => {\n        const { notification } = this.props;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: notification.team,\n            user: notification.addedBy.id,\n        });\n    }\n\n    deleteRequest = () => {\n        const { notification } = this.props;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: notification.team,\n            user: notification.addedBy.id,\n        });\n    }\n\n    render() {\n        const { notification, showDate } = this.props;\n        const { addedBy: user  = {} } = notification;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        const dogIds = [];\n        const dogs = [];\n        if (notification.grouped) {\n            notification.grouped.forEach((e) => {\n                if (e.dog && e.dog.id && dogIds.indexOf(e.dog.id) === -1) {\n                    dogs.push(e.dog);\n                    dogIds.push(e.dog.id);\n                }\n            });\n        }\n        const hasMultiElements = dogs.length > 0;\n        const isDimmed = notification.read && notification.type !== 'teamFollowRequest';\n        const isLinked =!hasMultiElements && notification.type !== 'teamFollowRequest';\n        return (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-2 position-relative' style={`opacity: ${isDimmed ? 0.6: 1};`}>\n                <div \n                    class={`text-center border rounded-circle imageRoundedSmall imageRounded`} \n                    style={`padding-top: 7px; ${userImage ? `background-image: url(\"${userImage.s3ThumbLink}\"); background-size: cover;` : ''}`}\n                >\n                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                </div>\n\n                <div class='flex-grow-1 pl-3 pr-2'>\n                    <span class='float-right ml-2'>\n                        {notification.type && <span class='mr-2' style='font-size: 2.0em;'><i class={getIcon(notification.type)} /></span>}\n                    </span>\n                    <div style='font-size: 0.8em;'>\n                        {isLinked ? <a href={notification.url}>\n                            {notification.message}{notification.title ? `: ${notification.title}` : ''}\n                        </a> : <>\n                            {notification.message}\n                        </>}\n                        {notification.type === 'teamFollowRequest' && <>\n                            <button class='btn btn-sm btn-danger float-right' onClick={this.deleteRequest}>\n                                <Text id='notifications.delete'>Del</Text>\n                            </button>\n                            <button class='btn btn-sm btn-success float-right mr-2' onClick={this.confirmRequest}>\n                                <Text id='notifications.confirm'>Confirm</Text>\n                            </button>\n                        </>}\n                    </div>\n                    <small class='text-muted'>\n                        {notification.date && <span onClick={this.toggleDate} class='mr-2'>\n                            {showDate ? util.formatDate(notification.date, { locale: 'no-NB' }) : util.formatDistance(notification.date, new Date(), { locale: 'no-NB' })}\n                        </span>}\n                        <i class='far fa-user' /> {displayName}\n                        <br />\n                        {dogs && dogs.map(d => <span class='mr-2'>\n                            <a href={`/dogs/${d.id}`}><i class='fas fa-dog' /> {d.name}</a>\n                        </span>)}\n                        <br />\n                    </small>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdminNotification;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Competition extends Component {\n    async loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadResults();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadResults = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        await workoutStore.workoutResults();\n\t}\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n    render() {\n        const { workoutStore, userStore } = this.props.stores;\n        const { competitionResults, competitionAllResults, competitionTeams } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        return (\n            <div class='col-12'>\n                <h5>Competition results</h5>\n                <div>\n                    <table class='table table-striped table-sm'>\n                        <tbody>\n                            {competitionResults.map(res => <>\n                            <tr>\n                                <th>Date</th>\n                                <th>Type</th>\n                                <th>Ambitions</th>\n                                <th>Count</th>\n                                <th>Avg dogs</th>\n                                <th>total km</th>\n                                <th>km</th>\n                                <th>elevation</th>\n                                <th>duration</th>\n                                <th>speedAvg</th>\n                            </tr>\n                                <tr>\n                                    <td class='font-weight-bold'>{res.year}-{res.month}</td>\n                                    <td class='font-weight-bold'>{userStore.findTeamType({ type: res.type, language })} ({res.type})</td>\n                                    <td class='font-weight-bold'>{userStore.findTeamAmbition({ ambition: res.ambitions, language })} ({res.ambitions})</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.count, 1)}</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.avgDogs, 0)}</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.totalDistanceKm, 1)} km</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.distanceKm, 1)} km</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.elevation, 0)} m</td>\n                                    <td class='text-right font-weight-bold'>{util.secToHms(res.duration)}</td>\n                                    <td class='text-right font-weight-bold'>{util.format(res.speedAvg, 1)} km/t</td>\n                                </tr>\n                                <tr>\n                                    <td colspan='10' class='mb-5 pb-5 pt-2'>\n                                        <small>\n                                        <table class='table table-striped table-sm'>\n                                            <thead>\n                                                <tr>\n                                                    <th>Team</th>\n                                                    <th>Email</th>\n                                                    <th>Place</th>\n                                                    <th>Country</th>\n                                                    <th>Count</th>\n                                                    <th>Avg dogs</th>\n                                                    <th>total km</th>\n                                                    <th>km</th>\n                                                    <th>elevation</th>\n                                                    <th>duration</th>\n                                                    <th>speedAvg</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {/* {\n                                                        \"team\":773,\n                                                        \"type\":1,\n                                                        \"ambitions\":1,\n                                                        \"year\":2020,\n                                                        \"month\":11,\n                                                        \"count\":2,\n                                                        \"distanceKm\":14.1,\n                                                        \"totalDistanceKm\":28.2,\n                                                        \"diffTotalDistanceKm\":18.22078,\n                                                        \"elevation\":0,\n                                                        \"duration\":3000,\n                                                        \"speedAvg\":null,\n                                                        \"avgDogs\":2\n                                                    },\n                                                */}\n                                                {competitionAllResults.filter(t => t.type === res.type && t.ambitions === res.ambitions).map((line) => {\n                                                    const team = competitionTeams.find(e => e.id === line.team);\n                                                    return (\n                                                        <tr>\n                                                            <td>{line.team}: {team.name}</td>\n                                                            <td>{team.email}</td>\n                                                            <td>{team.postalcode} {team.place}</td>\n                                                            <td>{team.country}</td>\n                                                            <td class='text-right'>{util.format(line.count, 0)}</td>\n                                                            <td class='text-right'>{util.format(line.avgDogs, 1)}</td>\n                                                            <td class='text-right'>\n                                                                {util.format(line.totalDistanceKm, 1)} km\n                                                                <span class={`ml-2 text-${res.totalDistanceKm > line.totalDistanceKm ? 'danger' : 'success'}`}>\n                                                                    {res.totalDistanceKm > line.totalDistanceKm ? '-' : '+'}{util.format(line.diffTotalDistanceKm, 1)}\n                                                                </span>\n                                                            </td>\n                                                            <td class='text-right'>{util.format(line.distanceKm, 1)} km</td>\n                                                            <td class='text-right'>{util.format(line.elevation, 0)} m</td>\n                                                            <td class='text-right'>{util.secToHms(line.duration)}</td>\n                                                            <td class='text-right'>{util.format(line.speedAvg, 1)} km/t</td>\n                                                        </tr>\n                                                    );\n                                                })}\n                                            </tbody>\n                                        </table>\n                                        </small>\n                                    </td>\n                                </tr>\n                            </>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Competition;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass AdminGraph extends Component {\n    render() {\n        const {\n            fieldsLeft = [], \n            legendLeft = [], \n            fieldsRight = [], \n            legendRight = [], \n            showDebug,\n            xTicksVal = val => util.isoDate(val),\n            xTicksCnt = 5,\n            yTicksLeftVal = val => val,\n            yTicksRightVal = val => val,\n        } = this.props;\n        const { adminStore } = this.props.stores;\n        const dataLeft = fieldsLeft.map(e => util.getNestedValue(adminStore, e) || []);\n        const dataRight = fieldsRight.map(e => util.getNestedValue(adminStore, e) || []);\n\n        const firstData = dataLeft && dataLeft[0] ? dataLeft[0] : [];\n        const xTicks = [];\n        if (firstData.length) {\n            const partSize = Math.ceil(firstData.length / (xTicksCnt - 1));\n            const parts = Math.floor(firstData.length / partSize);\n            if (showDebug) {\n                console.log({ firstData, parts, partSize });\n            }\n            for (let i = 0, l = firstData.length; i < l; i += partSize) {\n                xTicks.push(firstData[i].epoch);\n            }\n            xTicks.push(firstData[firstData.length - 1].epoch);\n        }\n        return (\n            <>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={2000}\n                        height={300}\n                        showXTicks={1}\n                        xTicksVal={xTicksVal}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        paddingLeft={70}\n                        yTicksLeftWidth={'70px'}\n                        lineFromXzero={false}\n                        lineFromXmax={false}\n                        // xTicksLink={'/workouts/week/'}\n\n                        dataLeft={dataLeft}\n                        legendLeft={legendLeft}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        // yTicksLeftPostfix={'km'}\n                        // unitLeft={['km', 'km', 'km']}\n                        yTicksLeftVal={yTicksLeftVal}\n                        avgWindowLeft={[0, 0, 0, 0, 0, 0, 0]}\n                        smoothLeft={[1, 1, 1, 1, 1, 1, 1]}\n\n\n                        dataRight={dataRight}\n                        legendRight={legendRight}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                        // yTicksRightPostfix={'m'}\n                        // unitRight={['m', 'm']}\n                        yTicksRightVal={yTicksRightVal}\n                        avgWindowRight={[0, 0, 0, 0, 0, 0, 0]}\n                        smoothRight={[1, 1, 1, 1, 1, 1, 1]}\n\n                        legendFontSize={'18px'}\n                        legendLineHeight={18}\n\n                        ticksFontSize={'15px'}\n\n                        scrollToRight={true}\n\n                        // marker={week}\n                    />\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default AdminGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Development extends Component {\n    setApiServer = (e) => {\n\t\tconst { apiserver } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.setApiServer(apiserver);\n    }\n\n    render() {\n        const { showError = {} } = this.state;\n        const { appState } = this.props.stores;\n        const { apiServer } = appState;\n        return (\n            <div class='col-12'>\n                <h5>API Server: {apiServer}</h5>\n\n                <button\n                    class={`btn btn-block btn-${apiServer === 'https://themusher.app' ? '' : 'outline-'}success`}\n                    onClick={this.setApiServer}\n                    data-apiserver='https://themusher.app'\n                >Prod</button>\n\n                <button\n                    class={`btn btn-block btn-${apiServer === 'https://themusher.litt.no' ? '' : 'outline-'}success`}\n                    onClick={this.setApiServer}\n                    data-apiserver='https://themusher.litt.no'\n                >Prod (blog1)</button>\n\n                <button\n                    class={`btn btn-block btn-${apiServer === 'https://dev.themusher.app' ? '' : 'outline-'}success`}\n                    onClick={this.setApiServer}\n                    data-apiserver='https://dev.themusher.app'\n                >Dev</button>\n\n                <button\n                    class={`btn btn-block btn-${apiServer === 'http://localhost:8888' ? '' : 'outline-'}success`}\n                    onClick={this.setApiServer}\n                    data-apiserver='http://localhost:8888'\n                >localhost:8888</button>\n            </div>\n        );\n    }\n}\n\nexport default Development;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.updateTimer = {};\n    }\n    \n    removeUser = async (e) => {\n        let id =  e.target.dataset.id;\n        let email =  e.target.dataset.email;\n        let team =  e.target.dataset.team;\n        if (!id && e.target.parentNode) {\n            id =  e.target.parentNode.dataset.id;\n            email =  e.target.parentNode.dataset.email;\n            team =  e.target.parentNode.dataset.team;\n\t\t}\n        console.log('id, email, team', id, email, team);\n        const { teamStore } = this.props.stores;\n        await teamStore.removeMember(team, { id, email });\n    }\n\n    adminUpdateUser = (e) => {\n        const { email } = e.target.closest('input').dataset;\n        const { name } = e.target;\n        const field = `${email}-${name}`;\n\n        clearTimeout(this.updateTimer[field]);\n        this.updateTimer[field] = setTimeout(() => {\n            this.doAdminUpdateUser(e);\n        }, 500);\n    }\n\n    doAdminUpdateUser = async (e) => {\n        const { email } = e.target.closest('input').dataset;\n        const { name, value } = e.target;\n\n        // console.log({ email, name, value });\n\t\tconst { userStore } = this.props.stores;\n        await userStore.adminUpdateUser(email, { [name]: value });\n    }\n\n    simulateUser = (e) => {\n        const { email } = e.target.closest('button').dataset;\n        const { userStore } = this.props.stores;\n\t\tuserStore.getSimulateUser(email);\n    }\n\n    render() {\n        const { user, team = {} } = this.props;\n\t\tconst { userStore, teamStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const teams = userStore.findTeams(user.teams);\n        const summary = teamStore.findMusherSummary(user.id, team.id) || {};\n        const isTeamAdmin = team.user === currentUser.id;\n        const image = mu.getImage({ user, team });\n        const name = mu.displayName(user);\n\n        // const workoutSummary = dogStore.findWorkoutSummary(dog.id, 2020) || {};\n        // {'0':{'year':2020,'dog':16,'count':1,'distanceKm':9.9,'elevation':202,'duration':0,'speedAvg':0}}\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    <div class='col-12 d-flex mb-0 position-relative'>\n                        {/* {JSON.stringify(dog, null, 4)} */}\n                        <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url('${image}'); background-size: cover;` : ''}>\n                            {!image && <i class='fas fa-user text-muted mt-3' style='font-size: 40px;' />}\n                        </div>\n                        <div class='flex-grow-1 pl-3 pr-2'>\n                            {/* <span class='float-right'>\n                                {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                            </span> */}\n                            \n                            <h5>{name}</h5>\n                            <div>\n                                <small class='text-muted'>\n                                    <div class='d-flex justify-content-left'>\n                                        {user.cellphone && <div class='mr-2'><i class='fas fa-mobile-alt' /> {user.cellphone}</div>}\n                                        {user.email && <div class='mr-2'><i class='fas fa-envelope ml-3' /> {user.email}</div>}\n                                        {user.url && <div class='mr-2'><a href={mu.asUrl(user.url)} target='_blank' rel='noreferrer'><i class='fas fa-link' /></a></div>}\n                                        {user.facebook && <div class='mr-2'><a href={mu.asFacebookLink(user.facebook)} target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a></div>}\n                                        {user.instagram && <div class='mr-2'><a href={mu.asInstagramLink(user.instagram)} target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a></div>}\n                                        {user.snapchat && <div class='mr-2'><a href={mu.asSnapchatLink(user.snapchat)} target='_blank' rel='noreferrer'><i class='fab fa-snapchat' /></a></div>}\n                                    </div>\n                                </small>\n                            </div>\n                            {isAdmin && <>\n                                <button class='btn btn-block btn-success' onClick={this.simulateUser} data-email={user.email}>\n                                    Simulate user\n                                </button>\n\n                                <small>\n                                    <details>\n                                        <summary>settings</summary>\n                                        <xmp>{JSON.stringify(user.settings, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>subscription</summary>\n                                        <xmp>{JSON.stringify(user.subscription, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>deviceInfo</summary>\n                                        <xmp>{JSON.stringify(user.deviceInfo, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>subscription</summary>\n                                        <xmp>{JSON.stringify(user.subscription, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>notifications</summary>\n                                        <xmp>{JSON.stringify(user.notifications, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>notificationTopics</summary>\n                                        <xmp>{JSON.stringify(user.notificationTopics, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>applications</summary>\n                                        <xmp>{JSON.stringify(user.applications, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>shadowTags</summary>\n                                        <xmp>{JSON.stringify(user.shadowTags, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>garmin</summary>\n                                        <xmp>{JSON.stringify(user.garmin, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>strava</summary>\n                                        <xmp>{JSON.stringify(user.strava, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>currentLocationGeocode</summary>\n                                        <xmp>{JSON.stringify(user.currentLocationGeocode, null, 4)}</xmp>\n                                    </details>\n                                    lastActivityEpoch: {util.isoDate(user.lastActivityEpoch)}<br />\n                                    activities: {util.format(user.activities)}<br />\n\n                                    {user.settings && <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.settings.veterinaryAllowed ? 0 : 1} id={`settings.veterinaryAllowed-${user.id}`} name='settings.veterinaryAllowed' checked={user.settings.veterinaryAllowed ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`settings.veterinaryAllowed-${user.id}`}>\n                                            settings.veterinaryAllowed\n                                        </label>\n                                    </div>}\n                                    <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.twoFactorLogin ? 0 : 1} id={`twoFactorLogin-${user.id}`} name='twoFactorLogin' checked={user.twoFactorLogin ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`twoFactorLogin-${user.id}`}>\n                                            twoFactorLogin\n                                        </label>\n                                    </div>\n                                    <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.isVeterinary ? 0 : 1} id={`isVeterinary-${user.id}`} name='isVeterinary' checked={user.isVeterinary ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`isVeterinary-${user.id}`}>\n                                            isVeterinary\n                                        </label>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`cellphone-${user.id}`}>cellphone</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`cellphone-${user.id}`} name='cellphone' class='form-control' value={user.cellphone} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`firstname-${user.id}`}>firstname</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`firstname-${user.id}`} name='firstname' class='form-control' value={user.firstname} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`lastname-${user.id}`}>lastname</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`lastname-${user.id}`} name='lastname' class='form-control' value={user.lastname} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                </small>\n                            </>}\n                            {user.teams && <>\n                                {teams.map(team => (\n                                    <span class='badge badge-pill badge-info mr-2'>{team.name}</span>\n                                ))}<br />\n                            </>}\n                            {team.id && summary && <>\n                                <small class='text-muted'>\n                                    Total:\n                                    {summary && <span class='ml-2'><i class='fas fa-road' /> <Distance stores={this.props.stores} value={summary.distanceKm} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-mountain' /> <Elevation stores={this.props.stores} value={summary.elevation} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-clock' /> {util.secToHms(summary.duration || 0)}</span>}\n                                </small><br />\n                                <small class='text-muted'>\n                                    Avg: \n                                    {summary && <span class='ml-2'><i class='fas fa-road' /> <Distance stores={this.props.stores} value={summary.avgDistance} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-mountain' /> <Elevation stores={this.props.stores} value={summary.avgElevation} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-clock' /> {util.secToHms(summary.avgDuration || 0)}</span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-tachometer-alt' /> <Speed stores={this.props.stores} value={summary.speedAvg} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-dog' /> {util.format(summary.avgDogs, 1)}</span>}\n                                </small>\n                            </>}\n                        </div>\n                        <div>\n                            {isTeamAdmin && user.id !== currentUser.id && <button class='btn btn-sm btn-danger'\n                                onClick={this.removeUser}\n                                data-email={user.email}\n                                data-id={user.id}\n                                data-team={team.id}\n                            ><i class='fas fa-ban' /></button>}\n                            {!isTeamAdmin && user.id === currentUser.id && <button class='btn btn-sm btn-secondary'\n                                onClick={this.removeUser}\n                                data-email={user.email}\n                                data-id={user.id}\n                                data-team={team.id}\n                            ><i class='fas fa-sign-out-alt' />{team.id}</button>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default User;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Development extends Component {\n    setApiServer = (e) => {\n\t\tconst { apiserver } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.setApiServer(apiserver);\n    }\n\n    copyToClipboard = (e) => {\n        this.textArea.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the whole text area selected.\n        e.target.focus();\n        this.setState({ copySuccess: 'Copied!' });\n    };\n\n    render() {\n        const { showError = {}, copySuccess } = this.state;\n        const { appState } = this.props.stores;\n        const { jwtToken, userEmail } = appState;\n        return (\n            <div class='col-12'>\n                <h5>JWT Token: {userEmail}</h5>\n\n                <textarea\n                    class='form-control'\n                    value={jwtToken}\n                    rows={5}\n                    onClick={this.copyToClipboard}\n                    ref={c => this.textArea = c}\n                />\n                <small id='passwordHelpBlock' class='form-text text-success'>\n                    {copySuccess}\n                </small>\n\n            </div>\n        );\n    }\n}\n\nexport default Development;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport mu from '../../lib/musher-util';\n\nimport AdminGraph from './graph';\n\n@observer\nclass WeeklyTotals extends Component {\n    render() {\n        const { adminStore } = this.props.stores;\n        const { submenu } = this.props;\n        const { totalKey, totalUsersWeekAcc, totalUsersWeekNumber, totalUsersMonthNumber } = adminStore;\n        let totalWeek = 0;\n        let totalMonth = 0;\n\n        if (submenu === 'weeklyTotal') {\n            return (\n                <>\n                    <h4>Weekly: Accumulated Total Users & Dogs</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-acc-total-users-dogs-${totalKey}`}\n                        fieldsLeft={['totalUsersWeekAcc']}\n                        legendLeft={['totalUsersWeekAcc']}\n                        fieldsRight={['totalDogsWeekAcc']}\n                        legendRight={['totalDogsWeekAcc']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    {/* <xmp>{JSON.stringify(totalUsersWeekNumber, null, 4)}</xmp> */}\n\n                    <table class='table table-sm table-striped'>\n                        <thead>\n                            <tr>\n                                <th>Year</th>\n                                <th>Month</th>\n                                <th>This month</th>\n                                <th>Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {totalUsersMonthNumber && totalUsersMonthNumber.map((stat) => {\n                                totalMonth += stat.count;\n                                return (<tr>\n                                    <td>{stat.year}</td>\n                                    <td>{stat.month}</td>\n                                    <td>{stat.count}</td>\n                                    <td>{totalMonth}</td>\n                                </tr>);\n                            })}\n                        </tbody>\n                    </table>\n\n                    <table class='table table-sm table-striped'>\n                        <thead>\n                            <tr>\n                                <th>Month</th>\n                                <th>Year Week</th>\n                                <th>This week</th>\n                                <th>Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {totalUsersWeekNumber && totalUsersWeekNumber.map((stat) => {\n                                totalWeek += stat.count;\n                                return (<tr>\n                                    <td>{stat.month}</td>\n                                    <td>{stat.year} - {stat.week}</td>\n                                    <td>{stat.count}</td>\n                                    <td>{totalWeek}</td>\n                                </tr>);\n                            })}\n                        </tbody>\n                    </table>\n\n                    <h4>Weekly: Total Users & Dogs</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-users-dogs-${totalKey}`}\n                        fieldsLeft={['totalUsersWeek']}\n                        legendLeft={['totalUsersWeek']}\n                        fieldsRight={['totalDogsWeek']}\n                        legendRight={['totalDogsWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Total Workouts & avg Teamsize</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-workouts-teamsize-${totalKey}`}\n                        fieldsLeft={['totalWorkoutsWeek']}\n                        legendLeft={['totalWorkoutsWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Total Distance & Ascend</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-distance-ascend-${totalKey}`}\n                        fieldsLeft={['totalDistanceWeek']}\n                        legendLeft={['totalDistanceWeek']}\n                        fieldsRight={['totalAscendWeek']}\n                        legendRight={['totalAscendWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Total Duration & Dogs running</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-duration-dogs-running-${totalKey}`}\n                        fieldsLeft={['totalDurationWeek']}\n                        legendLeft={['totalDurationWeek']}\n                        yTicksLeftVal={val => util.secToHms(val, true)}\n                        fieldsRight={['totalDogsrunningWeek']}\n                        legendRight={['totalDogsrunningWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                </>\n            );\n        }\n    }\n}\n\nexport default WeeklyTotals;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport mu from '../../lib/musher-util';\n\nimport AdminGraph from './graph';\n\n@observer\nclass WeeklyTotals extends Component {\n    render() {\n        const { adminStore } = this.props.stores;\n        const { submenu } = this.props;\n        const { avgKey } = adminStore;\n\n        if (submenu === 'weeklyAvg') {\n            return (\n                <>\n                    <h4>Weekly: Avg Distance, Speed, Ascend</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-speed-ascend-${avgKey}`}\n                        fieldsLeft={['avgDistanceWeek', 'avgSpeedWeek' ]}\n                        legendLeft={['avgDistanceWeek', 'avgSpeedWeek' ]}\n                        fieldsRight={['avgAscendWeek']}\n                        legendRight={['avgAscendWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n\n                    <h4>Weekly: Avg Teamsize</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-total-workouts-teamsize-${avgKey}`}\n                        fieldsLeft={['avgTeamsizeWeek']}\n                        legendLeft={['avgTeamsizeWeek']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n\n                    <h4>Weekly: Avg LoadIndex for types</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-loadindex-teamtype-${avgKey}`}\n                        fieldsLeft={['avgLoadIndexWeek.1', 'avgLoadIndexWeek.2', 'avgLoadIndexWeek.3', 'avgLoadIndexWeek.4', 'avgLoadIndexWeek.5', 'avgLoadIndexWeek.n/a']}\n                        legendLeft={['Tur', 'Turistkjøring', 'Sprint', 'Mellomdistanse', 'Langdistanse', 'Ikke valgt']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Duration & RealDuration</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-duration-realduration-${avgKey}`}\n                        fieldsLeft={['avgRealDurationWeek', 'avgDurationWeek']}\n                        legendLeft={['avgRealDurationWeek', 'avgDurationWeek']}\n                        yTicksLeftVal={val => util.secToHms(val, true)}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for types</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-${avgKey}`}\n                        fieldsLeft={['avgDistanceTeamTypeWeek.1', 'avgDistanceTeamTypeWeek.2', 'avgDistanceTeamTypeWeek.3', 'avgDistanceTeamTypeWeek.4', 'avgDistanceTeamTypeWeek.5', 'avgDistanceTeamTypeWeek.n/a']}\n                        legendLeft={['Tur', 'Turistkjøring', 'Sprint', 'Mellomdistanse', 'Langdistanse', 'Ikke valgt']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for ambitions</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-ambnitions-${avgKey}`}\n                        fieldsLeft={['avgDistanceTeamAmbitionsWeek.1', 'avgDistanceTeamAmbitionsWeek.2', 'avgDistanceTeamAmbitionsWeek.3', 'avgDistanceTeamAmbitionsWeek.4', 'avgDistanceTeamAmbitionsWeek.5', 'avgDistanceTeamAmbitionsWeek.n/a']}\n                        legendLeft={['Ingen', 'Glad amatør', 'Amatør', 'Seriøs amatør', 'Proff', 'Ikke valgt']}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n\n                    <h4>Weekly: Avg Distance for type-ambitions: Tur</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-1-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.1-1',\n                            'avgDistanceTeamTypeAmbitionWeek.1-2',\n                            'avgDistanceTeamTypeAmbitionWeek.1-3',\n                            'avgDistanceTeamTypeAmbitionWeek.1-4',\n                            'avgDistanceTeamTypeAmbitionWeek.1-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for type-ambitions: Turist</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-2-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.2-1',\n                            'avgDistanceTeamTypeAmbitionWeek.2-2',\n                            'avgDistanceTeamTypeAmbitionWeek.2-3',\n                            'avgDistanceTeamTypeAmbitionWeek.2-4',\n                            'avgDistanceTeamTypeAmbitionWeek.2-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for type-ambitions: Sprint</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-3-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.3-1',\n                            'avgDistanceTeamTypeAmbitionWeek.3-2',\n                            'avgDistanceTeamTypeAmbitionWeek.3-3',\n                            'avgDistanceTeamTypeAmbitionWeek.3-4',\n                            'avgDistanceTeamTypeAmbitionWeek.3-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for type-ambitions: MD</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-4-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.4-1',\n                            'avgDistanceTeamTypeAmbitionWeek.4-2',\n                            'avgDistanceTeamTypeAmbitionWeek.4-3',\n                            'avgDistanceTeamTypeAmbitionWeek.4-4',\n                            'avgDistanceTeamTypeAmbitionWeek.4-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n                    <h4>Weekly: Avg Distance for type-ambitions: LD</h4>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-week-avg-distance-type-5-ambitions-${avgKey}`}\n                        fieldsLeft={[\n                            'avgDistanceTeamTypeAmbitionWeek.5-1',\n                            'avgDistanceTeamTypeAmbitionWeek.5-2',\n                            'avgDistanceTeamTypeAmbitionWeek.5-3',\n                            'avgDistanceTeamTypeAmbitionWeek.5-4',\n                            'avgDistanceTeamTypeAmbitionWeek.5-5',\n                        ]}\n                        legendLeft={[\n                            'Ingen ambisjoner',\n                            'Glad Amatør',\n                            'Amatør',\n                            'Seriøs Amatør',\n                            'Proff',\n                        ]}\n                        xTicksVal={val => util.getWeek(val)}\n                        xTicksCnt={8}\n                    />\n\n                </>\n            );\n        }\n    }\n}\n\nexport default WeeklyTotals;","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass MiniAdGraph extends Component {\n    render() {\n        const {\n            fieldsLeft = [], \n            legendLeft = [], \n            fieldsRight = [], \n            legendRight = [], \n            showDebug,\n            xTicksVal = val => util.isoDate(val, false, false, true),\n            xTicksCnt = 5,\n            yTicksLeftVal = val => val,\n            yTicksRightVal = val => val,\n        } = this.props;\n        const { adStore } = this.props.stores;\n        const dataLeft = fieldsLeft.map(e => util.getNestedValue(adStore, e) || []);\n        const dataRight = fieldsRight.map(e => util.getNestedValue(adStore, e) || []);\n\n        const firstData = dataLeft && dataLeft[0] ? dataLeft[0] : [];\n        const xTicks = [];\n        if (firstData.length) {\n            const partSize = Math.ceil(firstData.length / (xTicksCnt - 1));\n            const parts = Math.floor(firstData.length / partSize);\n            if (showDebug) {\n                console.log({ firstData, parts, partSize });\n            }\n            for (let i = 0, l = firstData.length; i < l; i += partSize) {\n                xTicks.push(firstData[i].epoch);\n            }\n            xTicks.push(firstData[firstData.length - 1].epoch);\n        }\n        return (\n            <>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1500}\n                        height={400}\n                        showXTicks={1}\n                        xTicksVal={xTicksVal}\n                        xTicks={xTicks}\n                        paddingTop={50}\n                        paddingLeft={50}\n                        yTicksLeftWidth={'50px'}\n                        lineFromXzero={false}\n                        lineFromXmax={false}\n                        // xTicksLink={'/workouts/week/'}\n\n                        dataLeft={dataLeft}\n                        legendLeft={legendLeft}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        // yTicksLeftPostfix={'km'}\n                        // unitLeft={['km', 'km', 'km']}\n                        yTicksLeftVal={yTicksLeftVal}\n                        avgWindowLeft={[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}\n                        smoothLeft={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n\n\n                        dataRight={dataRight}\n                        legendRight={legendRight}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                        // yTicksRightPostfix={'m'}\n                        // unitRight={['m', 'm']}\n                        yTicksRightVal={yTicksRightVal}\n                        avgWindowRight={[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}\n                        smoothRight={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n\n                        legendFontSize={'18px'}\n                        legendLineHeight={18}\n\n                        ticksFontSize={'15px'}\n                        // marker={week}\n                        scrollToRight={true}\n                    />\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default MiniAdGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\nimport AdminNotification from '../../components/admin/notification';\nimport WeeklyTotals from '../../components/admin/weeklyTotals';\nimport WeeklyAvg from '../../components/admin/weeklyAvg';\nimport KeyNumbers from '../../components/admin/keyNumbers';\nimport Ads from '../../components/admin/ads';\nimport Applications from '../../components/admin/applications';\nimport UserInvites from '../../components/admin/userInvites';\nimport Heatmap from '../../components/admin/heatmap';\nimport PageViews from '../../components/admin/pageViews';\nimport Competition from '../../components/admin/competition';\nimport Errors from '../../components/admin/errors';\nimport Development from '../../components/admin/development';\nimport JwtToken from '../../components/admin/jwttoken';\nimport VeterinaryHistory from '../../components/admin/veterinaryHistory';\nimport Demographics from '../../components/admin/demographics';\nimport User from '../../components/user';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n\temail: '',\n\tsubmenu: 'simulate',\n\tjwtToken: util.getJwtToken(),\n};\n\n@observer\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadStats();\n\t\tawait this.loadAdminHistory();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadStats = async () => {\n\t\tconst { submenu } = this.state;\n\t\tif (['ads', 'applications', 'notifications', 'simulate', 'heatmap', 'userInvites', 'graphql', 'errors', 'dev', 'jwtToken', 'demographics'].indexOf(submenu) > -1) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n\t\t//'main', 'weeklyAvg', 'weeklyTotal', 'accTotals', 'accAverages', 'notification', 'news', 'simulate', 'ads'\n\n\t\tswitch (submenu) {\n\t\t\tcase 'weeklyAvg':\n\t\t\t\tawait adminStore.getStatsAvg();\n\t\t\t\tbreak;\n\t\t\tcase 'weeklyTotal':\n\t\t\t\tawait adminStore.getStatsTotal();\n\t\t\t\tbreak;\n\t\t\tcase 'pageviews':\n\t\t\t\tbreak;\n\t\t\tcase 'veterinary':\n\t\t\t\tbreak;\n\t\t\tcase 'competition':\n\t\t\t\tbreak;\n\t\t\tcase 'main':\n\t\t\t\tawait adminStore.getStats({ limit: 1 });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tawait adminStore.getStats({});\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tloadAdminHistory = async () => {\n\t\tconst { adminStore } = this.props.stores;\n\t\tconst { submenu } = this.state;\n\t\tif (['simulate'].indexOf(submenu) > -1) {\n\t\t\tawait adminStore.getAdminHistory();\n\t\t}\n\t}\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n\tcomponentWillUnmount() {\n        const { adminStore } = this.props.stores;\n\t\tadminStore.cleanupMemory();\n    }\n\n\tsimulateUser = (e) => {\n\t\tconst { email } = this.state;\n        const { userStore } = this.props.stores;\n\t\tuserStore.getSimulateUser(email);\n\t}\n\n\tsimulateUserByClick = (e) => {\n\t\tconst email = e.target.closest('div').dataset.email;\n        const { userStore } = this.props.stores;\n\t\tuserStore.getSimulateUser(email);\n\t}\n\n\tsetQuery = (e) => {\n\t\tconst { notification = {} } = this.state;\n\t\tnotification.query = e.target.innerText;\n\t\tnotification.url = e.target.dataset.url;\n\t\tthis.setState({ notification });\n\t}\n\n\tsetWorkoutQuery = (e) => {\n\t\tconst { notification = {} } = this.state;\n\t\tnotification.workoutQuery = e.target.innerText;\n\t\tnotification.url = e.target.dataset.url;\n\t\tthis.setState({ notification });\n\t}\n\n\tsendNotification = () => {\n        const { adminStore } = this.props.stores;\n\t\tconst { notification } = this.state;\n\t\tadminStore.sendNotification({ ...notification });\n\t}\n\n\tfixGpxInfo = () => {\n\t\tconsole.log('fixGpxInfo');\n\t\tconst { adminStore } = this.props.stores;\n\t\tadminStore.getFixWorkoutGpxInfo();\n\t}\n\t\n\tsearch = async () => {\n        const { userStore } = this.props.stores;\n        const { searchText } = this.state;\n        await userStore.searchUsers({ search: searchText, showAll: 1 });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu }, () => {\n\t\t\tthis.loadAll();\n\t\t});\n\t}\n\n\tcheckForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.search();\n        }\n    }\n\n\trender() {\n\t\tconst { appState, adminStore, userStore } = this.props.stores;\n\t\tconst { notification = {}, submenu, jwtToken } = this.state;\n        const { darkmode } = appState;\n\t\tconst { isAdmin, user, searchUsersResult } = userStore;\n        const { stats, adminHistory } = adminStore;\n        const lastStat = stats[0] || {};\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n\t\t\t\t\t\t<div class='row'>\n\n\t\t\t\t\t\t\t{['main', 'demographics', 'weeklyAvg', 'weeklyTotal', 'accTotals', 'accAverages', 'notification', 'simulate',\n\t\t\t\t\t\t\t\t'ads', 'applications', 'competition', 'pageviews', 'veterinary', 'heatmap', 'userInvites', 'graphql', 'errors', 'dev', 'jwtToken'].map(sm => (\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === sm ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu={sm}\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-running' /> {sm}</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<xmp>{JSON.stringify(window.location.href, null, 4)}</xmp>\n\n\t\t\t\t<div class='row border-bottom'>\n\t\t\t\t\t{submenu === 'ads' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Ads stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'demographics' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Demographics stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'applications' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Applications stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'userInvites' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<UserInvites stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'heatmap' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Heatmap stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'pageviews' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<PageViews stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'veterinary' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<VeterinaryHistory stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'competition' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Competition stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'errors' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Errors stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'dev' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<Development stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t{submenu === 'jwtToken' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<JwtToken stores={this.props.stores} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'graphql' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<a href={`http://localhost:8888/api/graphql?token=${jwtToken}`} native target='_blank' rel='noreferrer'>\n\t\t\t\t\t\t\tGraphQL\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'notification' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<h5>Send notification</h5>\n\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputLanguage'> Language</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>Lang</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputLanguage' placeholder='Notification language: en, no' onInput={linkstate(this, 'notification.language')} value={notification.language} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12 mt-2 mb-4'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputLanguage'>User Query</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>User Query</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputLanguage' placeholder='Mongodb user query: { \"id\": 2 }' onInput={linkstate(this, 'notification.query')} value={notification.query} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='text-muted'>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"garmin.access.oauth_token\": { \"$exists\": true } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"strava.access_token\": { \"$exists\": true } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users/edit'>{'{ \"username\": { \"$eq\": \"\" } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users/edit'>{'{ \"firstname\": { \"$eq\": \"\" } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"images\": { \"$exists\": false } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"termsAndCondition\": { \"$eq\": \"\" } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"settings.summaryEmails\": { \"$exists\": false } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"settings.infoEmails\": { \"$exists\": false } }'}</code></div>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setQuery} data-url='/users'>{'{ \"settings.partnerEmails\": { \"$exists\": false } }'}</code></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12 mt-2 mb-4'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputLanguage'>Workout Query</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>Workout Query</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputLanguage' placeholder='Mongodb query: { \"id\": 2 }' onInput={linkstate(this, 'notification.workoutQuery')} value={notification.workoutQuery} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='text-muted'>\n\t\t\t\t\t\t\t\t\t<div><code onClick={this.setWorkoutQuery}>{'{ \"username\": { \"$eq\": \"\" } }'}</code></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputMessage'> Message</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>M</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputMessage' placeholder='Notification message' onInput={linkstate(this, 'notification.message')} value={notification.message} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputTitle'> Title</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>T</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputTitle' placeholder='Notification title' onInput={linkstate(this, 'notification.title')} value={notification.title} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputUrl'> URL</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>URL</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputUrl' placeholder='/news/123' onInput={linkstate(this, 'notification.url')} value={notification.url} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputUrlList'> URL List</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>URL List</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputUrlList' placeholder='/news/' onInput={linkstate(this, 'notification.urlList')} value={notification.urlList} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputUrlList'> Do send</label>\n\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>Do send</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputUrlList' placeholder='' onInput={linkstate(this, 'notification.doSend')} value={notification.doSend} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<button type='button' class='btn btn-primary mb-2' onclick={this.sendNotification}>Send notification</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h5>Preview</h5>\n\t\t\t\t\t\t<AdminNotification notification={{ ...notification, addedBy: { ...user } }} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'weeklyTotal' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<WeeklyTotals stores={this.props.stores} submenu={submenu} />\n\t\t\t\t\t</div>}\n\t\t\t\t\t{submenu === 'weeklyAvg' && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<WeeklyAvg stores={this.props.stores} submenu={submenu} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t<div class='col-12 mb-4'>\n\t\t\t\t\t\t<KeyNumbers stores={this.props.stores} submenu={submenu} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{submenu === 'main' && <div class='col-12 mb-4'>\n                        <table class='table table-striped'>\n                            <tbody>\n\t                            <tr><th>createdDate</th><td>{util.isoDate(lastStat.createdDate)}</td></tr>\n\t                            <tr><th>dogs</th><td>{lastStat.dogs}</td></tr>\n\t                            <tr><th>notifications</th><td>{lastStat.notifications}</td></tr>\n\t                            <tr><th>messages</th><td>{lastStat.messages}</td></tr>\n\t                            <tr><th>teams</th><td>{lastStat.teams}</td></tr>\n\n\t                            {lastStat.teamTypesCounts && Object.keys(lastStat.teamTypesCounts).map(key => (\n\t\t\t\t\t\t\t\t\t<tr><th class='pl-5'>teams by type: {key}</th><td>{lastStat.teamTypesCounts[key]}</td></tr>\n\t\t\t\t\t\t\t\t))}\n\t                            {lastStat.teamAmbitionsCounts && Object.keys(lastStat.teamAmbitionsCounts).map(key => (\n\t\t\t\t\t\t\t\t\t<tr><th class='pl-5'>teamsby ambition: {key}</th><td>{lastStat.teamAmbitionsCounts[key]}</td></tr>\n\t\t\t\t\t\t\t\t))}\n\n\t                            <tr><th>workoutPlans</th><td>{lastStat.workoutPlans}</td></tr>\n\t                            <tr><th>totalDistance</th><td>\n                                    {util.format(lastStat.totalDistance)} km<br />\n                                    {util.format(lastStat.totalDistance / 40075, 2)} <span class='text-muted'>times around the world</span><br />\n                                    {util.format(lastStat.totalDistance / 4509, 2)} <span class='text-muted'>times accross USA</span><br />\n                                    {util.format(lastStat.totalDistance / 4700, 2)} <span class='text-muted'>times accross Europe</span><br />\n                                    {util.format(lastStat.totalDistance / 1729, 1)} <span class='text-muted'>times from Oslo to Alta</span><br />\n                                    {util.format(lastStat.totalDistance / 384400, 3)} <span class='text-muted'>times to the moon</span><br />\n                                    {util.format(lastStat.totalDistance / 400, 1)} <span class='text-muted'>recharges (400 km range)</span><br />\n                                </td></tr>\n\t\t\t\t\t\t\t\t{/* <tr><th>totalDistanceEquipment</th><td>{JSON.stringify(lastStat.totalDistanceEquipment)}</td></tr> */}\n\t                            <tr><th>totalElevation</th><td>\n                                    {util.format(lastStat.totalElevation)} m<br />\n                                    {util.format(lastStat.totalElevation / 8848, 1)} <span class='text-muted'>times to the top of Mount Everest</span><br />\n                                </td></tr>\n\t                            <tr><th>totalDuration</th><td>\n                                    {util.secToHms(lastStat.totalDuration)}<br />\n                                    {Math.floor(lastStat.totalDuration / 86400)} days, &nbsp;\n                                    {Math.floor(lastStat.totalDuration % 86400 / 3600)} hours\n                                </td></tr>\n\t                            <tr><th>tracks</th><td>{lastStat.tracks}</td></tr>\n\t                            <tr><th>users</th><td>{lastStat.users}</td></tr>\n\t                            <tr><th>usersGarmin</th><td>{lastStat.usersGarmin}</td></tr>\n\t                            <tr><th>usersStrava</th><td>{lastStat.usersStrava}</td></tr>\n\n\t                            <tr><th>usersProminentDisclosure</th><td>{lastStat.usersProminentDisclosure}</td></tr>\n\t                            <tr><th>usersVeterinaryAllowed</th><td>{lastStat.usersVeterinaryAllowed}</td></tr>\n\t                            <tr><th>usersInboxEmails</th><td>{lastStat.usersInboxEmails}</td></tr>\n\t                            <tr><th>usersImperial</th><td>{lastStat.usersImperial}</td></tr>\n\t                            <tr><th>usersDarkmode</th><td>{lastStat.usersDarkmode}</td></tr>\n\n\t                            <tr><th>workouts</th><td>{lastStat.workouts}</td></tr>\n\n                                <tr><th>avgDistance</th><td>{util.format(lastStat.avgDistance, 1)} km</td></tr>\n                                {/* <tr><th>avgDistanceEquipment</th><td>{JSON.stringify(lastStat.avgDistanceEquipment)}</td></tr> */}\n\t                            <tr><th>avgDogs</th><td>{util.format(lastStat.avgDogs, 1)}</td></tr>\n\t                            <tr><th>avgDuration</th><td>{util.secToHms(lastStat.avgDuration)}</td></tr>\n\t                            <tr><th>avgSpeed</th><td>{util.format(lastStat.avgSpeed, 1)} km/t</td></tr>\n\t                            <tr><th>avgElevation</th><td>{util.format(lastStat.avgElevation, 1)} m</td></tr>\n\t                            <tr><th>avgTemperature</th><td>{util.format(lastStat.avgTemperature, 1)} C</td></tr>\n\n\t                            <tr><th>dogsHistoryAnimalchiropractor</th><td>{lastStat.dogsHistoryAnimalchiropractor}</td></tr>\n\t                            <tr><th>dogsHistoryBodyScore</th><td>{lastStat.dogsHistoryBodyScore}</td></tr>\n\t                            <tr><th>dogsHistoryClawClip</th><td>{lastStat.dogsHistoryClawClip}</td></tr>\n\t                            <tr><th>dogsHistoryDeworming</th><td>{lastStat.dogsHistoryDeworming}</td></tr>\n\t                            <tr><th>dogsHistoryDiarrhea</th><td>{lastStat.dogsHistoryDiarrhea}</td></tr>\n\t                            <tr><th>dogsHistoryFight</th><td>{lastStat.dogsHistoryFight}</td></tr>\n\t                            <tr><th>dogsHistoryFoodLeftover</th><td>{lastStat.dogsHistoryFoodLeftover}</td></tr>\n\t                            <tr><th>dogsHistoryInjury</th><td>{lastStat.dogsHistoryInjury}</td></tr>\n\t                            <tr><th>dogsHistoryMassage</th><td>{lastStat.dogsHistoryMassage}</td></tr>\n\t                            <tr><th>dogsHistoryMating</th><td>{lastStat.dogsHistoryMating}</td></tr>\n\t                            <tr><th>dogsHistoryMaturity</th><td>{lastStat.dogsHistoryMaturity}</td></tr>\n\t                            <tr><th>dogsHistoryNewStraw</th><td>{lastStat.dogsHistoryNewStraw}</td></tr>\n\t                            <tr><th>dogsHistoryOther</th><td>{lastStat.dogsHistoryOther}</td></tr>\n\t                            <tr><th>dogsHistorySick</th><td>{lastStat.dogsHistorySick}</td></tr>\n\t                            <tr><th>dogsHistoryStoolProblem</th><td>{lastStat.dogsHistoryStoolProblem}</td></tr>\n\t                            <tr><th>dogsHistoryUnwantedMating</th><td>{lastStat.dogsHistoryUnwantedMating}</td></tr>\n\t                            <tr><th>dogsHistoryUpdate</th><td>{lastStat.dogsHistoryUpdate}</td></tr>\n\t                            <tr><th>dogsHistoryVaccine</th><td>{lastStat.dogsHistoryVaccine}</td></tr>\n\t                            <tr><th>dogsHistoryVeterinarianVisit</th><td>{lastStat.dogsHistoryVeterinarianVisit}</td></tr>\n\t                            <tr><th>dogsHistoryWeek</th><td>{lastStat.dogsHistoryWeek}</td></tr>\n\t                            <tr><th>dogsHistoryWeight</th><td>{lastStat.dogsHistoryWeight}</td></tr>\n\t                            <tr><th>dogsHistoryYear</th><td>{lastStat.dogsHistoryYear}</td></tr>\n\n\t                            <tr><th>dogsInjured</th><td>{lastStat.dogsInjured}</td></tr>\n\t                            <tr><th>dogsMaturity</th><td>{lastStat.dogsMaturity}</td></tr>\n\t                            <tr><th>dogsMedication</th><td>{lastStat.dogsMedication}</td></tr>\n\t                            <tr><th>dogsNoBreeding</th><td>{lastStat.dogsNoBreeding}</td></tr>\n\t                            <tr><th>dogsPregnant</th><td>{lastStat.dogsPregnant}</td></tr>\n\t                            <tr><th>dogsPuppy</th><td>{lastStat.dogsPuppy}</td></tr>\n\t                            <tr><th>dogsRelocation</th><td>{lastStat.dogsRelocation}</td></tr>\n\t                            <tr><th>dogsRetired</th><td>{lastStat.dogsRetired}</td></tr>\n\t                            <tr><th>dogsSick</th><td>{lastStat.dogsSick}</td></tr>\n\t                            <tr><th>dogsSterilized</th><td>{lastStat.dogsSterilized}</td></tr>\n                            </tbody>\n                        </table>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{submenu === 'simulate' && <>\n\t\t\t\t\t\n\t\t\t\t\t\t<div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<h5><Text id='users.connect.title'>Finn dine venner</Text></h5>\n\t\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t\t<div class='col-auto w-75'>\n\t\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInput'><Text id='users.connect.search'>Søk</Text></label>\n\t\t\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control form-control-sm mb-2' id='inlineFormInput'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={<Text id='users.connect.search-placeholder'>Søk etter venner og bekjente</Text>}\n\t\t\t\t\t\t\t\t\t\t\tonInput={linkstate(this, 'searchText')}\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={this.checkForEnter}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Localizer>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-auto'>\n\t\t\t\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-primary mb-2' onClick={this.search}>\n\t\t\t\t\t\t\t\t\t\t<Text id='users.connect.doSearch'>Søk</Text>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 mt-3'>\n\t\t\t\t\t\t\t{searchUsersResult && searchUsersResult.map(user => (\n\t\t\t\t\t\t\t\t<User stores={this.props.stores} user={user} />\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class='col-12 mt-3'>\n\t\t\t\t\t\t\t<div class='form-row align-items-center'>\n\t\t\t\t\t\t\t\t<div class='col-auto'>\n\t\t\t\t\t\t\t\t\t<label class='sr-only' for='inlineFormInputGroup'>Email</label>\n\t\t\t\t\t\t\t\t\t<div class='input-group mb-2'>\n\t\t\t\t\t\t\t\t\t\t<div class='input-group-prepend'>\n\t\t\t\t\t\t\t\t\t\t\t<div class='input-group-text'>@</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<input type='text' class='form-control' id='inlineFormInputGroup' placeholder='Email' onInput={linkstate(this, 'email')} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-auto'>\n\t\t\t\t\t\t\t\t\t<button type='button' class='btn btn-primary mb-2' onclick={this.simulateUser}>Simulate user</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{adminHistory && adminHistory.map(e => <div class='pointerCursor' data-email={e.email} onClick={this.simulateUserByClick}>\n\t\t\t\t\t\t\t\t<span class='font-weight-lighter'>{util.isoDate(e.date)}</span> - {e.title}: {e.email} <span class='text-muted'>({e.url} by user: {e.user})</span>\n\t\t\t\t\t\t\t</div>)}\n\n\t\t\t\t\t\t\t<br />isAdmin: {JSON.stringify(isAdmin)}<br />\n\t\t\t\t\t\t\t<xmp>user: {JSON.stringify(user, null, 4)}</xmp>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\t\t\t\t</div>\n\t\t\t\t{/* <div class='row'>\n\t\t\t\t\t<button class='btn btn-secondary' type='button' onClick={this.fixGpxInfo}>\n\t\t\t\t\t\tFix GpxInfo\n\t\t\t\t\t</button>\n\t\t\t\t</div> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Admin;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport mu from '../../lib/musher-util';\n\nimport AdminGraph from './graph';\n\n@observer\nclass KeyNumbers extends Component {\n    render() {\n        const { appState, adminStore, userStore } = this.props.stores;\n        const { submenu } = this.props;\n\t\tconst { notification = {} } = this.state;\n        const { darkmode } = appState;\n\t\tconst { isAdmin, user } = userStore;\n        const { stats, totalTeamsAmbitions, totalTeamsTypes, userDeviceInfoPlatformCounts = {}, userDeviceInfoManufacturerCounts = {} } = adminStore;\n        const platformKeys = Object.keys(userDeviceInfoPlatformCounts).sort();\n        const manufacturerKeys = Object.keys(userDeviceInfoManufacturerCounts).sort();\n        if (submenu === 'accTotals') {\n            return (\n                <>\n                    <h5>Platforms && Manufacturers</h5>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-platforms-${stats.length}`}\n                        fieldsLeft={platformKeys.map(key => `userDeviceInfoPlatformCounts.${key}`)}\n                        legendLeft={platformKeys}\n                        fieldsRight={manufacturerKeys.map(key => `userDeviceInfoManufacturerCounts.${key}`)}\n                        legendRight={manufacturerKeys}\n                    />\n                    <h5>Dogs</h5>\n                    <AdminGraph stores={this.props.stores} \n                        key={`admin-dogs-${stats.length}`}\n                        fieldsLeft={['totalDogs']}\n                        legendLeft={['dogs']}\n                    />\n                    <h5>Users & workoutPlans</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-${stats.length}`}\n                        fieldsLeft={['totalUsers', 'totalWorkoutPlans']}\n                        legendLeft={['users', 'totalWorkoutPlans']}\n                        fieldsRight={['totalUsersGarmin', 'totalUsersStrava']}\n                        legendRight={['Garmin', 'Strava']}\n                    />\n                    <h5>Users & settings</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-settings-${stats.length}`}\n                        fieldsLeft={['totalUsersProminentDisclosure', 'totalUsersVeterinaryAllowed', 'totalUsersInboxEmails', 'totalUsersImperial', 'totalUsersDarkmode']}\n                        legendLeft={['prominentDisclosure', 'VeterinaryAllow', 'InboxEmails', 'Imperial', 'Darkmode']}\n                    />\n                    <h5>Users & notifications</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-notifications-${stats.length}`}\n                        fieldsLeft={['totalUsersFirebase']}\n                        legendLeft={['firebase']}\n                    />\n                    <h5>User profiles</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-profile-${stats.length}`}\n                        fieldsLeft={['totalUsersCellphone', 'totalUsersUsername', 'totalUsersFirstname', 'totalUsersFacebook', 'totalUsersInstagram', 'totalUsersSnapchat', 'totalUsersUrl', 'totalUsersImages']}\n                        legendLeft={['totalUsersCellphone', 'totalUsersUsername', 'totalUsersFirstname', 'totalUsersFacebook', 'totalUsersInstagram', 'totalUsersSnapchat', 'totalUsersUrl', 'totalUsersImages']}\n                    />\n                    <h5>User emails</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-users-summary-${stats.length}`}\n                        fieldsLeft={['totalUsersSummaryEmail', 'totalUsersInfoEmail', 'totalUsersPartnerEmail']}\n                        legendLeft={['totalUsersSummaryEmail', 'totalUsersInfoEmail', 'totalUsersPartnerEmail']}\n                        fieldsRight={['totalUsersHideProfile', 'totalUsersHideInvite']}\n                        legendRight={['totalUsersHideProfile', 'totalUsersHideInvite']}\n                    />\n                    <h5>Teams & tracks</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-teams-${stats.length}`}\n                        fieldsLeft={['totalTeams', 'totalTracks']}\n                        legendLeft={['teams', 'tracks']}\n                    />\n\n                    <h5>Teams & type</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-teams-types-${stats.length}`}\n                        fieldsLeft={['totalTeamsTypes.Tur', 'totalTeamsTypes.Turist', 'totalTeamsTypes.Sprint', 'totalTeamsTypes.Mellomdistanse', 'totalTeamsTypes.Langdistanse']}\n                        legendLeft={['Tur', 'Turist', 'Sprint', 'Mellomdistanse', 'Langdistanse']}\n                    />\n                    <h5>Teams & ambitions</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-teams-ambitions-${stats.length}`}\n                        fieldsLeft={['totalTeamsAmbitions.Ingen ambisjoner', 'totalTeamsAmbitions.Glad amatør', 'totalTeamsAmbitions.Amatør', 'totalTeamsAmbitions.Seriøs amatør', 'totalTeamsAmbitions.Proff']}\n                        legendLeft={['Ingen ambisjoner', 'Glad amatør', 'Amatør', 'Seriøs amatør', 'Proff']}\n                    />\n\n\n                    <h5>Workouts & distance</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totalWorkouts-${stats.length}`}\n                        fieldsLeft={['totalWorkouts']}\n                        legendLeft={['totalWorkouts']}\n                        fieldsRight={['totalDistance']}\n                        legendRight={['totalDistance']}\n                    />\n                    <h5>Distance and equipment</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totaldistance-equipment-${stats.length}`}\n                        fieldsLeft={['totalDistanceEquipment.1', 'totalDistanceEquipment.2', 'totalDistanceEquipment.3',\n                            'totalDistanceEquipment.4', 'totalDistanceEquipment.5', 'totalDistanceEquipment.6', \n                            'totalDistanceEquipment.7', 'totalDistanceEquipment.8', 'totalDistanceEquipment.9', 'totalDistanceEquipment.10']}\n                        legendLeft={['slede', 'atv', 'trollvogn', 'ski', 'annen vogn', 'sykkel', 'kickbike', 'jogging', 'bil', 'utv']}\n                    />\n                    <h5>Distance and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totaldistance-teamsize-${stats.length}`}\n                        // 19-22, 23-, 7-10, 15-18, 3-6, 11-14, 1-2\n                        fieldsLeft={['totalDistanceTeamSize.1-2', 'totalDistanceTeamSize.3-6', 'totalDistanceTeamSize.7-10', 'totalDistanceTeamSize.11-14', 'totalDistanceTeamSize.15-18', 'totalDistanceTeamSize.19-22', 'totalDistanceTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n                    <h5>Ascending</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totalElevation-${stats.length}`}\n                        fieldsLeft={['totalElevation']}\n                        legendLeft={['totalElevation']}\n                        fieldsRight={['avgElevation']}\n                        legendRight={['avgElevation']}\n                    />\n                    <h5>Ascending and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totalelevation-teamsize-${stats.length}`}\n                        // 19-22, 23-, 7-10, 15-18, 3-6, 11-14, 1-2\n                        fieldsLeft={['totalElevationTeamSize.1-2', 'totalElevationTeamSize.3-6', 'totalElevationTeamSize.7-10', 'totalElevationTeamSize.11-14', 'totalElevationTeamSize.15-18', 'totalElevationTeamSize.19-22', 'totalElevationTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n                    <h5>Temperature</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgTemperature-${stats.length}`}\n                        fieldsLeft={['avgTemperature']}\n                        legendLeft={['avgTemperature']}\n                    />\n                    <h5>Duration and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-totalduration-teamsize-${stats.length}`}\n                        // 19-22, 23-, 7-10, 15-18, 3-6, 11-14, 1-2\n                        fieldsLeft={['totalDurationTeamSize.1-2', 'totalDurationTeamSize.3-6', 'totalDurationTeamSize.7-10', 'totalDurationTeamSize.11-14', 'totalDurationTeamSize.15-18', 'totalDurationTeamSize.19-22', 'totalDurationTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n                </>\n            );\n        }\n\n        if (submenu === 'accAverages') {\n            return (\n                <>\n                    <h5>Avg distance and equipment</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgdistance-equipment-${stats.length}`}\n                        fieldsLeft={['avgDistanceEquipment.1', 'avgDistanceEquipment.2', 'avgDistanceEquipment.3',\n                            'avgDistanceEquipment.4', 'avgDistanceEquipment.5', 'avgDistanceEquipment.6', \n                            'avgDistanceEquipment.7', 'avgDistanceEquipment.8', 'avgDistanceEquipment.9', 'avgDistanceEquipment.10']}\n                        legendLeft={['slede', 'atv', 'trollvogn', 'ski', 'annen vogn', 'sykkel', 'kickbike', 'jogging', 'bil', 'utv']}\n                    />\n\n                    <h5>Avg distance and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgdistance-teamsize-${stats.length}`}\n                        fieldsLeft={['avgDistanceTeamSize.1-2', 'avgDistanceTeamSize.3-6', 'avgDistanceTeamSize.7-10', 'avgDistanceTeamSize.11-14', 'avgDistanceTeamSize.15-18', 'avgDistanceTeamSize.19-22', 'avgDistanceTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n\n                    <h5>Avg Ascending and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgelevation-teamsize-${stats.length}`}\n                        fieldsLeft={['avgElevationTeamSize.1-2', 'avgElevationTeamSize.3-6', 'avgElevationTeamSize.7-10', 'avgElevationTeamSize.11-14', 'avgElevationTeamSize.15-18', 'avgElevationTeamSize.19-22', 'avgElevationTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n\n                    <h5>Avg distance, dogs, speed & duration</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgDistance-${stats.length}`}\n                        fieldsLeft={['avgDistance', 'avgDogs', 'avgSpeed']}\n                        legendLeft={['avgDistance', 'avgDogs', 'avgSpeed']}\n                        fieldsRight={['avgDuration']}\n                        legendRight={['avgDuration']}\n                    />\n\n                    <h5>Avg speed and equipment</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgspeed-equipment-${stats.length}`}\n                        fieldsLeft={['avgSpeedEquipment.1', 'avgSpeedEquipment.2', 'avgSpeedEquipment.3',\n                            'avgSpeedEquipment.4', 'avgSpeedEquipment.5', 'avgSpeedEquipment.6', \n                            'avgSpeedEquipment.7', 'avgSpeedEquipment.8', 'avgSpeedEquipment.9', 'avgSpeedEquipment.10']}\n                        legendLeft={['slede', 'atv', 'trollvogn', 'ski', 'annen vogn', 'sykkel', 'kickbike', 'jogging', 'bil', 'utv']}\n                    />\n\n                    <h5>Avg speed and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgspeed-teamsize-${stats.length}`}\n                        fieldsLeft={['avgSpeedTeamSize.1-2', 'avgSpeedTeamSize.3-6', 'avgSpeedTeamSize.7-10', 'avgSpeedTeamSize.11-14', 'avgSpeedTeamSize.15-18', 'avgSpeedTeamSize.19-22', 'avgSpeedTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n\n                    <h5>Avg Duration and teamsize</h5>\n                    <AdminGraph stores={this.props.stores}\n                        key={`admin-avgduration-teamsize-${stats.length}`}\n                        fieldsLeft={['avgDurationTeamSize.1-2', 'avgDurationTeamSize.3-6', 'avgDurationTeamSize.7-10', 'avgDurationTeamSize.11-14', 'avgDurationTeamSize.15-18', 'avgDurationTeamSize.19-22', 'avgDurationTeamSize.23-']}\n                        legendLeft={['1-2', '3-6', '7-10', '11-14', '15-18', '19-22', '23-']}\n                    />\n                </>\n            );\n        }\n    }\n}\n\nexport default KeyNumbers;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport Images from '../../components/form/images';\nimport MiniAdGraph from '../../components/admin/miniAdGraph';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n    \n    removeImage = async (e) => {\n        const { adStore } = this.props.stores;\n        const { ad } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        adStore.removeImage({\n            id: ad.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { ad, field, updateField } = this.props;\n        updateField({ id: ad.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, ad, type = 'text', rows, field, title, icon, help, onInput, updateField } = this.props;\n        const value = ad[field];\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {ad.images && ad.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={ad} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${ad.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='ad.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type={type} class={`form-control ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        rows={rows}\n                        data-id={ad.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${ad.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='ad.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'date') {\n            return (\n                <div class={`form-group ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input type={type} class={`form-control ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={util.isoDate(value, false, false, true)}\n                        data-id={ad.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${ad.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='ad.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n\n        return (\n            <div class={`form-group ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type={type} class={`form-control ${saved[`${field}.${ad.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={ad.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${ad.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='ad.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { adStore } = this.props.stores;\n        // console.log('adStore.newAd', adStore.newAd);\n        adStore.updateObjectKeyValue('newAd', field, value);\n    }\n\n    render() {\n        const { field, icon, title, help } = this.props;\n        const { adStore } = this.props.stores;\n        const { newAd } = adStore;\n        return (\n            <div class='form-group'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    onInput={this.onInput}\n                    value={newAd[field]}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadAd() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore } = this.props.stores;\n\t\tawait adStore.load({ query: { showall: 1 }, addData: ['adViews', 'adClicks', 'viewCounts', 'clickCounts'] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tresetAd() {\n        const { adStore } = this.props.stores;\n        adStore.updateKeyValue('newAd', {});\n\t}\n\n    insertAd = async () => {\n\t\tconst { adStore } = this.props.stores;\n\t\tconst { newAd } = adStore;\n\t\tawait adStore.insert({ ...newAd });\n        await adStore.loadAd({ query: { showall: 1 } });\n        this.resetAd();\n\t}\n\n    selectAd = async (e) => {\n        const adId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { adStore } = this.props.stores;\n        const adContent = await adStore.loadById({ id: adId, showall: 1 });\n        adStore.updateKeyValue('ad', adContent);\n    }\n\n    resetAd = async () => {\n        const { adStore } = this.props.stores;\n        adStore.updateKeyValue('ad', {});\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { adStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { ad } = adStore;\n        if (field === 'images') {\n            if (Array.isArray(ad.images) && Array.isArray(value)) {\n                localObjectValue = [...ad.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            adStore.updateObjectKeyValue('newAd', field, value);\n        } else {\n            adStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { adStore } = this.props.stores;\n        await adStore.saveField(id, field, value);\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    render() {\n        const { adStore } = this.props.stores;\n        const { ad = {}, ads = [], saved, adViews, adClicks, viewCounts, clickCounts } = adStore;\n\n        let graphFieldsLeft = [];\n        let graphLegendsLeft = [];\n        let graphFieldsRight = [];\n        let graphLegendsRight = [];\n        let graphKey;\n        if (ad && ad.id) {\n            graphKey = ad.id;\n            graphFieldsLeft.push(`adViews.${ad.id}`);\n            graphLegendsLeft.push(`${ad.id}: ${ad.title} (${ad.page})`);\n            graphFieldsRight.push(`adClicks.${ad.id}`);\n            graphLegendsRight.push(`${ad.id}: ${ad.title} (${ad.page})`);\n        } else if (ads && ads.length > 0) {\n            graphKey = ads.length;\n            ads.forEach((ad) => {\n                graphFieldsLeft.push(`adViews.${ad.id}`);\n                graphLegendsLeft.push(`${ad.id}: ${ad.title} (${ad.page})`);\n                graphFieldsRight.push(`adClicks.${ad.id}`);\n                graphLegendsRight.push(`${ad.id}: ${ad.title} (${ad.page})`);\n            });\n        }\n\n        return (\n            <>\n                <div class='w-100 mb-3'>\n                    <div class='row'>\n                        <div class='col-12 mb-0 position-relative'>\n                            {ads && ads.length > 0 && <>\n                                <table class='table table-sm table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <th>id</th>\n                                            <th>active</th>\n                                            <th>title</th>\n                                            <th>page</th>\n                                            <th>section</th>\n                                            <th>url</th>\n                                            <th>email</th>\n                                            <th class='text-right'>views</th>\n                                            <th class='text-right'>clicks</th>\n                                            <th class='text-right'>CTR</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {ads.map(ad => (\n                                            <tr data-id={ad.id} onClick={this.selectAd}>\n                                                <td>{ad.id}</td>\n                                                <td>{ad.active}</td>\n                                                <td>{ad.title}</td>\n                                                <td>{ad.page}</td>\n                                                <td>{ad.section}</td>\n                                                <td>{ad.url}</td>\n                                                <td>{ad.email}</td>\n                                                <td class='text-right'>{viewCounts[ad.id]}</td>\n                                                <td class='text-right'>{clickCounts[ad.id]}</td>\n                                                <td class='text-right'>{util.format(clickCounts[ad.id] / viewCounts[ad.id] * 100, 1)} %</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </>}\n                        </div>\n                    </div>\n\n                    <MiniAdGraph stores={this.props.stores}\n                        fieldsLeft={graphFieldsLeft}\n                        legendLeft={graphLegendsLeft}\n                        fieldsRight={graphFieldsRight}\n                        legendRight={graphLegendsRight}\n                        key={graphKey}\n                    />\n\n                    <div class='row'>\n                        {(!ad || !ad.id) && <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-5 mb-0 position-relative'>\n                            <button class='btn btn-danger float-right' onClick={this.resetAd}><i class='fas fa-times' /></button>\n\n                            <h5>Ny annonse</h5>\n                            <InputNew stores={this.props.stores} field='title' icon='fas fa-heading'\n                                title={<Text id='ad.title'>Tittel</Text>}\n                                help={<Text id='ad.title-help'>Tittel på denne annonsen.</Text>} />\n                            <button type='button' class='btn btn-primary'\n                                onClick={this.insertAd}\n                            >\n                                <Text id='ad.save'>Registrer ny annonse</Text>\n                            </button>\n                        </div>}\n                    </div>\n\n                    {ad && ad.id && <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-5 mb-0 position-relative'>\n                            <button class='btn btn-danger float-right' onClick={this.resetAd}><i class='fas fa-times' /></button>\n\n                            <h5>Endre annonse: \"{ad.title}\"</h5>\n\n                            <Input saved={saved} ad={ad} field='title' icon='fas fa-heading'\n                                title={<Text id='ad.title'>Title</Text>}\n                                help={<Text id='ad.title-help'>Title of this ad story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='page' icon='fas fa-heading'\n                                title={<Text id='ad.page'>Page ('/', '/workouts/', '/workouts/detail', '/dogs', '/dogs/detail')</Text>}\n                                help={<Text id='ad.page-help'>Page to show this ad</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='section' icon='fas fa-heading'\n                                title={<Text id='ad.section'>Section</Text>}\n                                help={<Text id='ad.section-help'>Section on page to show this ad</Text>}\n                                onInput={this.updateField} />\n                            <small>\n                                frontpage (/, /home-workout, /home-totals)<br />\n                                /workout: (totals, seasontotals, analysis, table, workoutplan, calendar)<br />\n                                /workout/detail: (current, totals, analysis, images, dogs, handlers, gpx)<br />\n                                /dogs<br />\n                                /dogs/detail<br />\n                            </small>\n                            \n                            <Input saved={saved} ad={ad} field='url' icon='fas fa-heading'\n                                title={<Text id='ad.url'>URL</Text>}\n                                help={<Text id='ad.url-help'>Ad url</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='target' icon='fas fa-heading'\n                                title={<Text id='ad.target'>Target</Text>}\n                                help={<Text id='ad.target-help'>Ad url target</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='email' icon='fas fa-heading'\n                                title={<Text id='ad.email'>Email</Text>}\n                                help={<Text id='ad.email-help'>Ad email</Text>}\n                                onInput={this.updateField} />\n\n\n                            <Input saved={saved} ad={ad} field='offline' icon='fas fa-heading'\n                                title={<Text id='ad.offline'>Offline</Text>}\n                                help={<Text id='ad.offline-help'>Ad offline</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='active' icon='fas fa-heading'\n                                title={<Text id='ad.active'>Active</Text>}\n                                help={<Text id='ad.active-help'>Ad active</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='startDate' icon='fas fa-heading'\n                                title={<Text id='ad.startDate'>Start Date</Text>}\n                                type='date'\n                                help={<Text id='ad.startDate-help'>Ad startDate</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='endDate' icon='fas fa-heading'\n                                title={<Text id='ad.endDate'>End Date</Text>}\n                                type='date'\n                                help={<Text id='ad.endDate-help'>Ad endDate</Text>}\n                                onInput={this.updateField} />\n\n\n                            <Input saved={saved} ad={ad} field='body' icon='fas fa-quote-right'\n                                type='textarea' rows={5}\n                                title={<Text id='ad.body'>Body</Text>}\n                                help={<Text id='ad.body-help'>Body of this ad story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} ad={ad} field='image' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='ad.photo'>Bilder</Text>} \n                                help={<Text id='ad.photo-help'>Images for this ad story.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n                        </div>\n                    </div>}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass VeterinaryHistory extends Component {\n    async loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.getVeterinaryHistory();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tgetVeterinaryHistory = async () => {\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getVeterinaryHistory();\n\t}\n\n    toggleLine = (e) => {\n\t\tconst { idx } = e.target.closest('tr').dataset;\n        const { showError = {} } = this.state;\n        showError[idx] = !showError[idx];\n        this.setState({ showError });\n    }\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n    render() {\n        const { showError = {} } = this.state;\n        const { adminStore } = this.props.stores;\n        const { veterinaryHistory } = adminStore;\n        return (\n            <div class='col-12'>\n                <h5>Veterinary searches</h5>\n                <div>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Vet</th>\n                                <th>Search</th>\n                                <th>User</th>\n                                <th>IP</th>\n                                <th>UA</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {veterinaryHistory.map((vetLog) => <>\n                                <tr>\n                                    <td class='text-overflow'>\n                                        {vetLog.date && <>\n                                            {util.isoDate(vetLog.date)}\n                                        </>}\n                                    </td>\n                                    <td class='text-overflow'>{vetLog.veterinary}</td>\n                                    <td class='text-overflow'>{vetLog.searchText} ({vetLog.searchResults})</td>\n                                    <td class='text-overflow'>{vetLog.user}</td>\n                                    <td class='text-overflow'>{vetLog.ip}</td>\n                                    <td class='text-overflow'>\n                                        {vetLog.ua && <>\n                                            {vetLog.ua.platform}, {vetLog.ua.os}, {vetLog.ua.browser} ({vetLog.ua.version})\n                                        </>}\n                                    </td>\n                                </tr>\n                            </>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VeterinaryHistory;","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport mu from '../../lib/musher-util';\n\nimport AdminGraph from './graph';\n\nconst secHour = 3600;\nconst secDay = secHour * 24;\nconst secWeek = secDay * 7;\nconst secMonth = secDay * 30;\nconst sec2Month = secMonth * 2;\nconst secQuarter = secMonth * 3;\nconst secHalfYear = secMonth * 6;\nconst secYear = secMonth * 12;\n\nconst secMap = {\n    [secHour]: 'Last hour',\n    [secDay]: 'Last day',\n    [secWeek]: 'Last week',\n    [secMonth]: 'Last month',\n    [sec2Month]: 'Last 2 months',\n    [secQuarter]: 'Last quarter',\n    [secHalfYear]: 'Last 6 months',\n    [secYear]: 'Last year',\n}\n\nfunction byCount(a, b) {\n    if (a.count < b.count){\n        return 1;\n    }\n    if (a.count > b.count){\n        return -1;\n    }\n    return 0;\n}\nfunction byId(a, b) {\n    if (a._id < b._id){\n        return -1;\n    }\n    if (a._id > b._id){\n        return 1;\n    }\n    return 0;\n}\n\nconst initialState = {\n};\n\n@observer\nclass Demographics extends Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n\t\tawait adminStore.getDemographics();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const {\n            demographicsLanguage, demographicsDarkmode, demographicsImperial, demographicsVeterinary,\n            demographicsFirebase,\n            demographicsLocation, demographicsActivities, demographicsActivitiesPeriodes,\n            demographicsTeamWorkouts, demographicsTeamFollowers, demographicsTeamDogs,\n            storyViews, storyLikes, storyComments, storyDurationAvg,\n            searchCount,\n        } = adminStore;\n\n        return (<>\n            <div class='row'>\n                <div class='col-6'>\n                    <h5>Language</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>language</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsLanguage && demographicsLanguage.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.language || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>Darkmode</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>darkmode</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsDarkmode && demographicsDarkmode.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.darkmode || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>Imperial</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>imperial</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsImperial && demographicsImperial.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.imperial || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>Firebase</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>usersFirebase</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsFirebase && demographicsFirebase.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.firebase || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>veterinaryAllowed</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>veterinaryAllowed</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsVeterinary && demographicsVeterinary.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.veterinaryAllowed || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>Location</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLocation, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>location</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsLocation && demographicsLocation.sort(byCount).map(line => (<>\n                                    <tr>\n                                        <td>{line.country || 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n\n                    <h5>Activities</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivities, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>activities</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsActivities && demographicsActivities.sort(byId).map((line, idx) => {\n                                    const next = util.isNumber(line._id) ? demographicsActivities[idx + 1] : undefined;\n                                    return (<>\n                                        <tr>\n                                            <td>{util.isDefined(line._id) ? `${line._id} - ${next ? `${next._id}` : ''}` : 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>ActivitiesPeriodes</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivitiesPeriodes, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>activity periode</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsActivitiesPeriodes && demographicsActivitiesPeriodes.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{line.count}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div class='col-6'>\n\n                    <h5>storyViews</h5>\n                    {/* <xmp>{JSON.stringify(storyViews, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>created periode</th>\n                                    <th>views</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {storyViews && storyViews.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{line.views}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>storyLikes</h5>\n                    {/* <xmp>{JSON.stringify(storyViews, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>created periode</th>\n                                    <th>likes</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {storyLikes && storyLikes.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{line.likes}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>storyComments</h5>\n                    {/* <xmp>{JSON.stringify(storyViews, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>created periode</th>\n                                    <th>comments</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {storyComments && storyComments.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{line.comments}</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>storyDurationAvg</h5>\n                    {/* <xmp>{JSON.stringify(storyViews, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>created periode</th>\n                                    <th>durationAvg</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {storyDurationAvg && storyDurationAvg.sort(byId).map((line, idx) => (<>\n                                    <tr>\n                                        <td>{util.isDefined(line._id) ? secMap[`${line._id}`] : 'Other'}</td>\n                                        <td>{Math.floor(line.durationAvg / 1000)} s</td>\n                                    </tr>\n                                </>))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div class='col-6'>\n                    <h5>TeamWorkouts</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivities, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>workouts</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsTeamWorkouts && demographicsTeamWorkouts.sort(byId).map((line, idx) => {\n                                    const next = util.isNumber(line._id) ? demographicsTeamWorkouts[idx + 1] : undefined;\n                                    return (<>\n                                        <tr>\n                                            <td>{util.isDefined(line._id) ? `${line._id} - ${next ? `${next._id}` : ''}` : 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>TeamFollowers</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivities, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>followers</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsTeamFollowers && demographicsTeamFollowers.sort(byId).map((line, idx) => {\n                                    const next = util.isNumber(line._id) ? demographicsTeamFollowers[idx + 1] : undefined;\n                                    return (<>\n                                        <tr>\n                                            <td>{util.isDefined(line._id) ? `${line._id} - ${next ? `${next._id}` : ''}` : 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h5>TeamDogs</h5>\n                    {/* <xmp>{JSON.stringify(demographicsActivities, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>dogs</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {demographicsTeamDogs && demographicsTeamDogs.sort(byId).map((line, idx) => {\n                                    const next = util.isNumber(line._id) ? demographicsTeamDogs[idx + 1] : undefined;\n\n                                    return (<>\n                                        <tr>\n                                            <td>{util.isDefined(line._id) ? `${line._id} - ${next ? `${next._id}` : ''}` : 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n\n                </div>\n                <div class='col-6'>\n                    <h5>Search</h5>\n                    {/* <xmp>{JSON.stringify(demographicsLanguage, null, 4)}</xmp> */}\n                    <div class='table-responsive mb-5'>\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>searchText</th>\n                                    <th>count</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {searchCount && searchCount.sort(byCount).map(line => {\n                                    const searchText = line.searchText.replace(/^search\\./, '');\n                                    return (<>\n                                        <tr>\n                                            <td>{searchText || 'Other'}</td>\n                                            <td>{line.count}</td>\n                                        </tr>\n                                    </>);\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Demographics;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass MiniAdGraph extends Component {\n    render() {\n        const {\n            fieldsLeft = [], \n            legendLeft = [], \n            fieldsRight = [], \n            legendRight = [], \n            showDebug,\n            xTicksVal = val => util.isoDate(val, false, false, true),\n            xTicksCnt = 5,\n            yTicksLeftVal = val => val,\n            yTicksRightVal = val => val,\n        } = this.props;\n        const { adminStore } = this.props.stores;\n        const dataLeft = fieldsLeft.map(e => util.getNestedValue(adminStore, e) || []);\n        const dataRight = fieldsRight.map(e => util.getNestedValue(adminStore, e) || []);\n\n        const firstData = dataLeft && dataLeft[0] ? dataLeft[0] : [];\n        const xTicks = [];\n        if (firstData.length) {\n            const partSize = Math.ceil(firstData.length / (xTicksCnt - 1));\n            const parts = Math.floor(firstData.length / partSize);\n            if (showDebug) {\n                console.log({ firstData, parts, partSize });\n            }\n            for (let i = 0, l = firstData.length; i < l; i += partSize) {\n                xTicks.push(firstData[i].epoch);\n            }\n            xTicks.push(firstData[firstData.length - 1].epoch);\n        }\n        return (\n            <>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={1500}\n                        height={300}\n                        showXTicks={1}\n                        xTicksVal={xTicksVal}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        paddingLeft={50}\n                        yTicksLeftWidth={'50px'}\n                        lineFromXzero={false}\n                        lineFromXmax={false}\n                        // xTicksLink={'/workouts/week/'}\n\n                        dataLeft={dataLeft}\n                        legendLeft={legendLeft}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        // yTicksLeftPostfix={'km'}\n                        // unitLeft={['km', 'km', 'km']}\n                        yTicksLeftVal={yTicksLeftVal}\n                        avgWindowLeft={[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}\n                        smoothLeft={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n\n\n                        dataRight={dataRight}\n                        legendRight={legendRight}\n                        // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                        // yTicksRightPostfix={'m'}\n                        // unitRight={['m', 'm']}\n                        yTicksRightVal={yTicksRightVal}\n                        avgWindowRight={[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}\n                        smoothRight={[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n                        scrollToRight={true}\n\n                        // marker={week}\n                    />\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default MiniAdGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Errors extends Component {\n    async loadAll() {\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadErrors();\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadErrors = async () => {\n\t\tconst { adminStore } = this.props.stores;\n        await adminStore.getErrors();\n\t}\n\n    toggleLine = (e) => {\n\t\tconst { idx } = e.target.closest('tr').dataset;\n        const { showError = {} } = this.state;\n        showError[idx] = !showError[idx];\n        this.setState({ showError });\n    }\n\n    componentDidMount() {\n        this.loadAll();\n    }\n\n    render() {\n        const { showError = {} } = this.state;\n        const { adminStore } = this.props.stores;\n        const { errors } = adminStore;\n        return (\n            <div class='col-12'>\n                <h5>Klient errors</h5>\n                <div>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Date</th>\n                                <th>User</th>\n                                <th>Location</th>\n                                <th>Error</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {errors.map((error, idx) => <>\n                                <tr class='pointerCursor' onClick={this.toggleLine} data-idx={idx}>\n                                    <td>{idx + 1}</td>\n                                    <td class='text-overflow'>{util.isoDate(error.timestamp)}</td>\n                                    {/* <td>{JSON.stringify(error.user, null, 4)}</td> */}\n                                    <td class='text-overflow'>{error.user.email}</td>\n                                    {/* <td><xmp>{JSON.stringify(error.location, null, 4)}</xmp></td> */}\n                                    <td class='text-overflow'>{error.location.href}</td>\n                                    {/* <td>\n                                        <xmp>{JSON.stringify(error.error.name, null, 4)}</xmp>\n                                        <xmp>{JSON.stringify(error.error.message, null, 4)}</xmp>\n                                        <xmp>{error.error.stack.replace(/\\\\n/g, '\\n')}</xmp>\n                                    </td> */}\n                                    <td>\n                                        <strong>{error.error.name}:</strong> {error.error.message}<br />\n                                        {showError[idx] && <xmp>{error.error.stack.replace(/\\\\n/g, '\\n')}</xmp>}\n                                    </td>\n                                </tr>\n                            </>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Errors;"],"sourceRoot":""}