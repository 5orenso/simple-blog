{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/util/scrollIntoView.js","webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./lib/icons.js","webpack:///./components/form/links.js","webpack:///./components/loading/index.js","webpack:///./routes/public/race/commentAdd.js","webpack:///./components/dog/editBaseInfo.js","webpack:///./components/map/style.css","webpack:///./components/story/add.js","webpack:///./components/story/comments.js","webpack:///./components/style.css","webpack:///./routes/app-races/tracking.js","webpack:///./components/public/trackmap.js","webpack:///./components/map/index.js","webpack:///./routes/app-races/notifications.js","webpack:///./components/form/achievements.js","webpack:///./components/races/liveAddResult.js","webpack:///./components/dog/simplePublic.js","webpack:///./components/story/publicStory.js","webpack:///./routes/app-races/userImages.js","webpack:///./components/races/liveMusherResult.js","webpack:///./components/form/files.js","webpack:///./routes/app-races/news.js","webpack:///./routes/public/race/commentReply.js","webpack:///./routes/app-races/list.js","webpack:///./components/team/connect-boxes.js","webpack:///./routes/public/race/comments.js","webpack:///./components/dog/scroller.js","webpack:///./routes/public/race/raceText.js","webpack:///./components/races/liveResults.js","webpack:///./components/drawer/index.js","webpack:///./components/gauge/style.css","webpack:///./components/team/public.js","webpack:///./components/ad/index.js","webpack:///./components/header/custom.js","webpack:///./components/story/publicFeed.js","webpack:///./routes/teams/publicDetail.js","webpack:///./components/races/musherInfoHeader.js","webpack:///./routes/app-races/signup.js","webpack:///./components/team/publicLine.js","webpack:///./routes/app-races/mushers.js","webpack:///./components/form/images.js","webpack:///./components/overlay/index.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./routes/app-races/classes.js","webpack:///./components/feedback/views.js","webpack:///./routes/app-races/results.js","webpack:///./components/gauge/index.js","webpack:///./components/team/fastList.js","webpack:///./components/races/liveCheckpointResult.js","webpack:///./components/public/raceTracking.js"],"names":["initialState","DisplayLikesAndComments","observer","props","toggleLikes","setState","showLikesList","state","render","this","stores","storyStore","teamStore","workoutStore","raceStore","likes","comments","type","onTeamClick","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","e","public","mu","getImage","team","priority","displayNameShort","name","displayName","href","uuidv4","title","id","fields","total","image","shortname","Component","ScrollIntoView","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","ref","c","touchStart","stopPropagation","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","imageDots","Array","fill","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","imgHeight","imgWidth","img","curImage","dimensions","width","height","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","response","callback","inputRefObject","story","comment","showAddImage","status","body","resizeTextarea","addImage","addImages","push","value","handleImageErrored","target","onerror","setTimeout","Date","inputRef","userStore","userImage","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","disabled","onError","removeImage","data-name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","initCall","ICONS","adit","Icon","iconUrl","iconSize","iconAnchor","airport","analyse","archaeological","architecture","arrow_up","arrow_up_double","atm","avatar","bag","bar","barracks","battlefield","beach","bicycle","boundary_stone","buddhism","building","burger","bus","bus_stop","cable_car","camera","camp_site","car","caravan_site","cartography","cash","castle","castle_defensive","cave_entrance","cemetery","chapel","christianism","cinema","cinema_alt","city","cityhall","clean","compass","compass_alt","construction","contour","court_house","crown","crucifix","data","database","dentist","dislike","download","drag_lift","drop","eye","facebook","fire","fishing","flag","forbidden","fort","fountain","fuel","fuel_alt","gallery","gear","github","go","golf","heart","helicopter","home","hospital","hostel","hotel","hotel_alt","ice_ring","information","internet","invisible","islamism","island","judaism","laptop","library","lighthouse","linkedin","lion","lock","magnifier","mall","mapkey","mapshakers","marina","marker","market_place","mine","monument","mountain","museum","music","nature","nocamera","nonsmoking","north","north_alt","north_alt_II","north_alt_III","oppositeway","parking","pharmacy","picnic_site","pitch","playground","playground_alt","police","post_office","pub","restaurant","rocks","ruins","saddle","sailboat","school","seal","shelter","sinkhole","skype","smartphone","smoking","sport_centre","spring","square","stadium","star","stop","stupa","supermarket","swimming_pool","telephone","theatre","ticket","toilet","tower","town","traffic_signal","train","tram","tram_stop","tree_cinofer","tree_leaf","triangle","underground","unesco","university","upload","viewpoint","viewtower","village","vineyard","volcano","water_tower","water_well","watermill","waterpark","waterwork","wayside_cross","wind_generator","windmill","zoo","Icons","get","icon","list","Object","keys","getDiv","color","textColor","borderColor","iconWidth","iconHeight","randomPassword","hsl2Rgb","DivIcon","className","html","getRaceMarker","bib","rank","iconAnchorX","iconAnchorY","imageCirlceRadius","mapChecked","dotColor","getRankingColor","mapIsDark","test","imageCircle","getDistanceMarker","getMarker","dotWidth","dotHeight","getSmallMarker","Achievements","handleAdd","field","url","removeLink","dogStore","closest","dataset","linkId","showFiles","links","file","isoDate","createdDate","aria-describedby","linkstate","marginTop","marginBottom","Loading","goto","gotoTitle","routerName","role","native","RaceAdd","commentRace","race","Input","marginTopBack","retry","parseInt","dog","parentElement","removeFile","saved","datalist","min","max","step","help","refName","showImages","maxValue","files","formatBytes","size","data-field","rows","addToImages","el","Teams","toggleType","typeId","isNew","toJS","indexOf","removeTeam","addTeam","highlight","idx","isPrimary","isSecondary","hintTeam","Harnesses","harnesses","language","harness","colorNonstop","lang","Status","toggleStatus","statuses","removeStatus","addStatus","dogstatuses","Position","dogPositions","DogsEdit","insertDog","insert","newDog","resetDog","route","elementtype","updateFieldValue","datatype","skipTimer","newValue","localObjectValue","achievements","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","chooseMother","dogId","motherDog","findDog","chipId","chooseFather","fatherDog","chooseSubmenu","submenu","menu","back","history","goBack","loadDog","cleanupMemoryDetail","load","addData","createNew","saveField","dogFemales","findDogsByGender","dogMales","hasBirthday","birth","daysUntilBirthday","Math","ceil","daysUntilNextBirthday","age","deceased","gender","data-menu","mother","d","father","module","exports","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","pinned","urlText","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","appState","isAdmin","firstname","ucfirst","lastname","email","teamId","findTeam","darkmode","onChange","selected","checked","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","likeStoryComment","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","deleteCommentReplyStory","commentid","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","translate","translatedText","key","preventDefault","replyid","translateCommentReply","translateComment","max_comments","compact","currentUser","filteredComments","totalComments","diplayedComments","reverse","hasLikedComment","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","imageIdx","currentImage","translation","getCommentTranslations","targetLang","data-comment","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","MARGIN_TOP","subMenuMarginTop","isLoading","AppRaceDetailTracking","raceid","Trackmap","loadTrack","trackIds","getTrackIdsByClass","selectedClassIds","trackStore","cleanupMemory","loadPublic","query","idin","showHeatmap","adminStore","getPublicHeatmap","allTeamIds","waypoints","waypoints2","waypoints3","zoomToMarkers","fullscreenMap","onMarkerClick","onMarker2Click","onMarker3Click","showTracks","showDistanceMarkers","groupWaypoints","focusOnMushers","geoJSONs","heatmap","publicHeatmap","track","tracks","geojson","gpx","geoJSON","gpxInfo","minZoom","maxZoom","showTrackProfile","distanceMarkerSteps","showFullscreenControl","kmToMiles","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","BaseLayer","LayersControl","Overlay","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","shadowUrl","createClusterCustomIcon","cluster","divIcon","getChildCount","point","App","mapRef","createRef","polyRef","handleViewportChanged","mapCenter","center","mapZoom","zoom","handleLocationFound","latlng","hasLocation","onEachFeature","feature","layer","popupContent","format","totalDistance","maxSpeed","avgSpeed","ascent","calculatedAscend","decent","calculatedDescend","secToHms","duration","bindPopup","handleClick","setLatlng","zoomToGeoJSON","bounds","getBounds","_northEast","err","console","log","markers","force","hasZoomedToMarkers","current","leafletElement","markerBounds","latLngBounds","forEach","extend","lat","lng","fitBounds","zoomToAllMarkers","zoomToFavoriteMarkers","overlayAdd","visibleLayers","overlayRemove","polylineOptions","rangeSteps","maxHslColor","mapColorMode","newRangeMin","mapRangeMin","newRangeMax","mapRangeMax","speeds","floor","range","colors","val","newMin","newMax","normalizeRange","r","g","b","setMapRange","setMapColors","polylineOptionIdxFn","latLng","altThresholds","mapRange","meta","polylinetrackPointFactory","dataArray","climbs","item","trkpt","showSpeed","setMapColorMode","handleMarkerClick","opt","handleMarker2Click","handleMarker3Click","baseLayerChange","setMapChecked","whenReadyHandler","on","Windspeed","geoJSONStyle","weight","fillOpacity","fillColor","geoJSONStyleList","componentWillUnmount","startMarker","endMarker","settings","skipGeojson","zoomToWaypoints","showZoomControl","showLayersControl","showScaleControl","showRange","layersControlPosition","mapColors","tempGeoJson","asObject","hasWaypoints","distanceMarkers","distances","currentDistance","steps","imperial","captureAllEvents","onScroll","onViewportChanged","onLocationfound","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","Browser","mobile","tap","touchZoom","animate","easeLinearity","onOverlayadd","onOverlayremove","whenReady","position","attribution","subdomains","metric","Temperature","Precipitation","fitBoundsOnLoad","fitBoundsOnUpdate","points","longitudeExtractor","m","latitudeExtractor","intensityExtractor","positions","optionIdxFn","options","lineCap","opacity","smoothFactor","zoomAnimation","gj","onAdd","icons","wp","draggable","zIndexOffset","maxClusterRadius","iconCreateFunction","speed","bearing","AppRaceDetailNotifications","subscribeNotificationTopic","notificationTopics","setNotificationTopic","description","removeAchievement","achievementId","date","fieldSorter","a","o","dir","substring","reduce","p","n","RaceLiveAddResult","addResult","currentClass","selectedCheckpoint","direction","classid","checkpointId","getClassById","checkpoints","result","classId","newResult","checkpoint","timestamp","sortContestantsByResult","contestants","results","dogs","message","editResult","resultid","raceClassId","resultId","editClass","localUpdateSignup","deleteResult","selectedResult","raceClassResultDelete","doneEditResult","selectCheckpoint","toggleTimestamp","showTimestamp","selectedMusher","lastResults","sort","startTime","selectResult","sortedContestants","isCheckedIn","isCheckedOut","isScratched","currentResult","currentCheckpoint","data-classid","data-resultid","data-direction","res","cp","requiredRestMin","requiredRestMinutes","timeEqualization","firstOutTime","getTime","formatDate","year","month","hour12","hour","minute","Dog","showTeam","showInfo","showName","showPosition","showAge","onDogClick","dogPosition","findDogposition","containerWidth","imageClasses","fontSize","bodyScore","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","publicFeedUpdate","storyType","saveStoryField","StoryTypeRegular","showStoryDetail","localName","likeRef","getTranslation","dblClick","offline","StoryTypeAd","componentWillMount","asUrl","rel","currencty","StoryTypeArticle","StoryPublicFeed","toggleDate","showDate","storyId","likeIds","toggleAddComment","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","shareLink","shareUrl","text","loadStoriesPublicFeed","hashtag","username","userLink","onUserClick","hasShareApi","findPublicTeam","isTeamAdmin","members","some","hideProfile","reports","hasLikedStory","totalFollowers","followers","isYourTeam","isFollowing","hasRequestedFollow","followRequests","currentLocationGeocode","views","getViews","statistics","adminData","getAdminData","buttonOnly","simple","classNames","formattedCounty","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","data-url","data-title","data-native","AppRaceDetailUserImages","addRaceUserImage","addUserImage","newUserImage","newRaceUserImage","updateUserImageUpload","removeRaceUserImage","removeUserImage","userImageId","editRaceUserImage","raceUserImageId","editUserImage","element","scrollHeight","tags","trim","RaceLiveMusherResult","onClickNav","lastResOut","selectedMusherIdx","getTeamById","totalMovingTime","totalInCpTime","lastEstTimeOut","nextBib","prevBib","contestant","resIn","resOut","resScratched","timeInCp","deltaSec","movingTime","hasBeenInCp","distanceFromPrev","line","percentRest","estTimeOut","estRest","addDeltaSec","isStartLine","day","estTimeIn","estTimeToNext","estTimeToCpMinutes","estRestMinutes","isFinishLine","Files","handleAddImage","uploadStatus","apiUrl","AppRaceDetailNews","addRaceArticle","addArticle","newArticle","newRaceArticle","editRaceArticle","raceArticleId","editArticle","removeRaceArticle","removeArticle","articleId","updateArticleUpload","RaceCommentReply","commentReplyRace","MARGIN_TOP_BACK","MARGIN_BOTTOM","showAdminSendMessage","subject","AppRaceDetailSignup","scrollRaces","raceIdx","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","loadRace","races","today","signupStartDate","signupEndDate","liveRace","active","ingress","classes","distance","requestSent","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","loadTeams","notfollowing","array","limit","publicTeamsToFollow","place","RaceComments","likeRaceComment","likeRaceCommentReply","deleteCommentRace","deleteCommentReplyRace","editCommentRace","editCommentReplyRace","DogScroller","scrollImages","sortByName","allDogs","dogA","dogB","finalText","regex","RegExp","replace","RaceLiveResults","reloadLastEpoch","onClickMusher","onClickCheckpoint","selectedCheckpointId","tableClass","thClass","thStyle","tdClass","tdStyle","progressStyle","progressbarStyle","cpIdx","sortOrder","co","coIdx","hasLeftCpPrev","bibIdxOutPrev","estTimeToCpMinutesPrev","data-bib","isoTime","hasLeftCp","hasArrivedCp","hasScratched","bibIdxIn","bibIdxOut","percentDone","aria-valuenow","aria-valuemin","aria-valuemax","cpId","colspan","Drawer","children","onCloseClick","captureEvents","Team","unollowTeam","unfollowed","skipHome","teamAmbition","findTeamAmbition","ambition","ambitions","teamType","findTeamType","Ad","withText","logClick","ads","adStore","apiServer","getApiServer","loadAd","page","section","path","currentTeam","postalcode","setTime","time","match","ad","HeaderCustom","idxConfirm","idxSuggestion","idxAd","sessionid","dataFields","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","publicFeed","topRankedRandomized","shuffleArray","topRankedStories","feed","startPosition","now","parseInputDate","endPosition","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","teamid","hideTeam","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","hasNewStories","newTeam","TeamsDetail","dogid","showDog","hideDog","loadPublicView","getPublicViews","loadAll","loadPublicTeam","loadPublicDetail","setSwipeRight","publicViewsGraphData","imageHeader","publicTrophys","publicMemories","publicDogs","headerImage","s3XXLargeLink","teamImage","asFacebookLink","instagram","asInstagramLink","snapchat","asSnapchatLink","imagesSponsor","sponsors","descriptionWorkoutplan","trophys","getTrophyImage","textHeader","descriptionHeader","dataLeft","legendLeft","MusherInfoHeader","toggleAdminInfo","showAdminInfo","toggleInfo","currentDog","totalTrackLength","findWaypointByBib","musher","getMusherByBibId","getMusherByBibEmail","totals","getClassByBib","getTotalsByTeamId","totalDistanceOnTrack","findNearestMushers","inFront","behind","sportsClub","data-submenu","findHarness","JSON","stringify","removeMainImage","md5","DogLine","vaccineLogStatuses","vac","inKarens","vaccineAgens","durationEnd","karensDaysLeft","signupToRace","signup","addContestant","newContestant","cellphone","updateSignup","editSignup","contestantid","contestantId","clearSignupValue","toggleDrawer","showDrawer","findDogsByTeam","signupClass","getRaceClassById","chosenDogChipIds","getAlphabet","letter","byNotChosen","signuppayment","paidSignupfee","signupfee","data-contestantid","rules","termsAndAgreement","declaration","declarationDate","chosenDog","confirmed","deleted","TeamLine","confirmRequest","confirmFollowRequest","deleteRequest","deleteFollowRequest","getUnblockButton","userId","myTeamId","isConfirmed","data-user","showBlockButton","isDeleted","s3MediumLink","byBib","aHas","AppRaceDetailMushers","toggleDisplayDetails","editUserDetails","adminToggleEditUser","toggleEditUserDetails","getMusherById","getUserByEmail","veterinaryToggleEditUser","toggleVeterinaryUserDetails","toggleAdminSendMessage","toggleAdminSendInboxMessage","showAdminSendInboxMessage","toggleAdminImport","showAdminImport","adminSignupEdit","adminSignupSetValue","sendEmail","raceId","to","raceclassid","emailResponse","resetEmail","sendInboxMessage","inboxMessage","inboxMessageResponse","resetInboxMessage","parseInput","parseInputTimer","doParseInput","lines","String","headers","jsonData","firstLine","values","jsonObject","v","toLowerCase","l","addMultipleContestants","filterByClass","selectedClassId","toggleSelectedClassId","clearSearchForBib","searchForBib","savePreCheck","vetData","dogData","journalData","dogJournals","dogJournalStore","chipid","checkType","getNestedValue","preCheck","journal","veterinary","displayDetails","raceCheck","isVeterinary","veterinaryUserDetails","filterByBib","selectedUser","selectedUserTeams","scope","hasVaccines","hasMandatoryCheck","mandatoryCheck","raceStatus","raceComment","gpxResultsApproved","alt","price1","priceSent","price2","price3","dogVaccines","vaccines","vaccineName","dogJournal","veterinaryFirstname","veterinaryLastname","diagnoseId","heartRate","bodyConditionScore","generalFindings","data-chipid","data-shortname","shortName","startOrder","data-value","address","postalplace","countryCode","birthdate","emails","dangerouslySetInnerHTML","__html","$str","data-to","data-raceclassid","data-class","oninput","Images","follow","followRequestUser","hasFollowRequests","reqUser","data-follow","DragNDropFileupload","dropRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","event","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","addEventListener","updateProgress","fileObj","uploadDone","open","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","click","removeEventListener","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","multiple","onchange","isImage","AppRaceDetailClasses","toggleViews","showViewList","viewUsersArrays","entries","weekObject","viewUsers","flat","contentIsNotLoaded","reloadInSec","reloadIsActive","ReloadTimer","initComponent","tickReloadTimeer","tick","reloadPercent","normalizeBetween","AppRaceDetailResults","lockAllWorkoutsInRace","lockMessage","closeDrawerMusher","closeDrawerCheckpoint","showDrawerCheckpoint","showDrawerMusher","toggleDrawerMusher","selectedMusherBib","selectMusher","toggleDrawerCheckpoint","loadWorkoutSummary","getWorkoutSummaryActiveTeams","getAllClassesSortedBy","reload","RELOAD_INTERVAL_IN_SEC","lastAllowedChangeDate","setHours","getHours","isLiveRace","getPillClass","resultsUrl","resultsText","resultDanger","resultWarning","resultSuccess","totalMushers","totalFinished","currentStages","currentResults","completed","normalizedDuration","weightedNormalizedDuration","isDone","finishedDate","totalWorkoutTimeUsedSec","data-email","isLocked","stage","percent","distanceKm","currentEpoch","inDate","setUTCSeconds","viewBox","svgElevation","elevation","speedAvg","rest","avgDogs","lastUpdated","nonstop","totalRest","firstEpoch","firstGpxStartEpoch","lastGpxStartEpoch","mouseData","Gauge","svgRef","radius","heightAdd","showPercentText","prefix","showCenterText","centerText","centerTextSize","centerTextX","centerTextY","totalY","totalX","totalTextAnchor","completedY","completedX","completedTextAnchor","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","transform","textSize","textSizeSmall","xmlns","svg","preserveAspectRatio","gaugeBackground","cx","cy","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","transition","gaugeText","dominant-baseline","text-anchor","font-size","secondary","FastListLine","containerRef","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","isIntersecting","currentHeight","childNodes","offsetHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses","RaceLiveCheckpointResult","allResultsCp","lastResultsIn","lastResultsOut","lastResultsLegtimes","lastResultsScratched","prevCp","nextCp","prevResultsOut","nextResultsIn","topImage","onCLick","distanceToNext","distanceToFinish","hideResults","timeused","prevResOut","restTime","estTimeInNextCp","nextResIn","cpSortOrder","jwtToken","leaderboardMode","filterByraceClass","showLeaderBoard","showNews","Results","raceClass","finishTime","diffToFirstFinishTime","windDirection","distanceToFirst","distanceToForward","distanceToBehind","MusherInfo","wpData","totalDistancePercent","xTicks","unitLeft","xTicksRange","partSize","raceTime","showXTicks","paddingTop","paddingLeft","yTicksLeftWidth","lineFromXzero","lineFromXmax","dataFillLeft","showYTicksLeft","yTicksLeftPostfix","avgWindowLeft","smoothLeft","TrackingMap","handleHistoryPointIndex","historyIdx","historyPointIndex","timerRunning","updateWaypointPosition","playHistory","replaySpeed","raceTrackerPointTimestamp","getRaceTrackerTimestamp","playingHistory","pauseHistory","loadLiveRaceResults","classInfo","teamIds","bibs","replayHistory","showDrawerReplay","getRaceTrackerData","raceTrackerRace","getRaceTrackerActiveTeams","loadRaceResults","setLeaderboardMode","mode","chooseRaceClass","toggleShowLeaderBoard","hide","toggleShowNews","closeAllDrawers","showResults","onCpMarkerClick","cpData","toggleResults","setReplaySpeed","toggleReplayHistory","cleanupMemoryClass","toggleFocusOnMusher","musherid","toggleBib","checkForEnter","maxPoints","toggleLines","showLines","innerWidth","innerHeight","showHeader","drawerClassNames","drawerWidth","selectedClass","wpCheckpoints","showTracking","countryRegexp","formattedCountry","resultsHide","musherId","data-musherid","data-speed","countryRegexpMessage"],"mappings":"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","file":"61.chunk.eb1a2.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\nconst MAX_USERS_TO_DISPLAY = 1;\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, MAX_USERS_TO_DISPLAY).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            const name = mu.displayName(user);\n                            return (<>\n                                <span class='font-weight-lighter'>\n                                    {publicTeam ? <>\n                                        <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                            {name}\n                                        </a>\n                                    </> : <>\n                                        {name}\n                                    </>}\n                                </span>\n                            </>);\n                            // return (<>\n                            //     {publicTeam ? <>\n                            //         <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                            //             <div\n                            //                 class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //                 style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                            //             >\n                            //                 {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //             </div>\n                            //         </a>\n                            //     </> : <>\n                            //         <div\n                            //             class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //             style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            //         >\n                            //             {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //         </div>\n                            //     </>}\n                            // </>);\n                        })}\n                        {likes.length > MAX_USERS_TO_DISPLAY && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - MAX_USERS_TO_DISPLAY }}>and {likes.length - MAX_USERS_TO_DISPLAY} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { DivIcon, Icon } from 'leaflet';\nimport util from 'preact-util';\n\nimport mu from './musher-util';\n\nconst ICONS = {\n\tadit: new Icon({ iconUrl: './assets/svg/adit.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tairport: new Icon({ iconUrl: './assets/svg/airport.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tanalyse: new Icon({ iconUrl: './assets/svg/analyse.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarchaeological: new Icon({ iconUrl: './assets/svg/archaeological.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarchitecture: new Icon({ iconUrl: './assets/svg/architecture.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarrow_up: new Icon({ iconUrl: './assets/svg/arrow_up.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarrow_up_double: new Icon({ iconUrl: './assets/svg/arrow_up_double.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tatm: new Icon({ iconUrl: './assets/svg/atm.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tavatar: new Icon({ iconUrl: './assets/svg/avatar.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbag: new Icon({ iconUrl: './assets/svg/bag.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbar: new Icon({ iconUrl: './assets/svg/bar.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbarracks: new Icon({ iconUrl: './assets/svg/barracks.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbattlefield: new Icon({ iconUrl: './assets/svg/battlefield.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbeach: new Icon({ iconUrl: './assets/svg/beach.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbicycle: new Icon({ iconUrl: './assets/svg/bicycle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tboundary_stone: new Icon({ iconUrl: './assets/svg/boundary_stone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbuddhism: new Icon({ iconUrl: './assets/svg/buddhism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbuilding: new Icon({ iconUrl: './assets/svg/building.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tburger: new Icon({ iconUrl: './assets/svg/burger.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbus: new Icon({ iconUrl: './assets/svg/bus.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbus_stop: new Icon({ iconUrl: './assets/svg/bus_stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcable_car: new Icon({ iconUrl: './assets/svg/cable_car.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcamera: new Icon({ iconUrl: './assets/svg/camera.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcamp_site: new Icon({ iconUrl: './assets/svg/camp_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcar: new Icon({ iconUrl: './assets/svg/car.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcaravan_site: new Icon({ iconUrl: './assets/svg/caravan_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcartography: new Icon({ iconUrl: './assets/svg/cartography.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcash: new Icon({ iconUrl: './assets/svg/cash.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcastle: new Icon({ iconUrl: './assets/svg/castle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcastle_defensive: new Icon({ iconUrl: './assets/svg/castle_defensive.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcave_entrance: new Icon({ iconUrl: './assets/svg/cave_entrance.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcemetery: new Icon({ iconUrl: './assets/svg/cemetery.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tchapel: new Icon({ iconUrl: './assets/svg/chapel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tchristianism: new Icon({ iconUrl: './assets/svg/christianism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcinema: new Icon({ iconUrl: './assets/svg/cinema.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcinema_alt: new Icon({ iconUrl: './assets/svg/cinema_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcity: new Icon({ iconUrl: './assets/svg/city.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcityhall: new Icon({ iconUrl: './assets/svg/cityhall.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tclean: new Icon({ iconUrl: './assets/svg/clean.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcompass: new Icon({ iconUrl: './assets/svg/compass.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcompass_alt: new Icon({ iconUrl: './assets/svg/compass_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tconstruction: new Icon({ iconUrl: './assets/svg/construction.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcontour: new Icon({ iconUrl: './assets/svg/contour.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcourt_house: new Icon({ iconUrl: './assets/svg/court_house.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcrown: new Icon({ iconUrl: './assets/svg/crown.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcrucifix: new Icon({ iconUrl: './assets/svg/crucifix.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdata: new Icon({ iconUrl: './assets/svg/data.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdatabase: new Icon({ iconUrl: './assets/svg/database.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdentist: new Icon({ iconUrl: './assets/svg/dentist.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdisabled: new Icon({ iconUrl: './assets/svg/disabled.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdislike: new Icon({ iconUrl: './assets/svg/dislike.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdownload: new Icon({ iconUrl: './assets/svg/download.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdrag_lift: new Icon({ iconUrl: './assets/svg/drag_lift.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdrop: new Icon({ iconUrl: './assets/svg/drop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\teye: new Icon({ iconUrl: './assets/svg/eye.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfacebook: new Icon({ iconUrl: './assets/svg/facebook.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfire: new Icon({ iconUrl: './assets/svg/fire.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfishing: new Icon({ iconUrl: './assets/svg/fishing.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tflag: new Icon({ iconUrl: './assets/svg/flag.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tforbidden: new Icon({ iconUrl: './assets/svg/forbidden.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfort: new Icon({ iconUrl: './assets/svg/fort.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfountain: new Icon({ iconUrl: './assets/svg/fountain.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfuel: new Icon({ iconUrl: './assets/svg/fuel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfuel_alt: new Icon({ iconUrl: './assets/svg/fuel_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgallery: new Icon({ iconUrl: './assets/svg/gallery.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgear: new Icon({ iconUrl: './assets/svg/gear.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgithub: new Icon({ iconUrl: './assets/svg/github.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgo: new Icon({ iconUrl: './assets/svg/go.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgolf: new Icon({ iconUrl: './assets/svg/golf.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\theart: new Icon({ iconUrl: './assets/svg/heart.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thelicopter: new Icon({ iconUrl: './assets/svg/helicopter.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thome: new Icon({ iconUrl: './assets/svg/home.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thospital: new Icon({ iconUrl: './assets/svg/hospital.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thostel: new Icon({ iconUrl: './assets/svg/hostel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thotel: new Icon({ iconUrl: './assets/svg/hotel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thotel_alt: new Icon({ iconUrl: './assets/svg/hotel_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tice_ring: new Icon({ iconUrl: './assets/svg/ice_ring.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinformation: new Icon({ iconUrl: './assets/svg/information.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinternet: new Icon({ iconUrl: './assets/svg/internet.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinvisible: new Icon({ iconUrl: './assets/svg/invisible.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tislamism: new Icon({ iconUrl: './assets/svg/islamism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tisland: new Icon({ iconUrl: './assets/svg/island.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tjudaism: new Icon({ iconUrl: './assets/svg/judaism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlaptop: new Icon({ iconUrl: './assets/svg/laptop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlibrary: new Icon({ iconUrl: './assets/svg/library.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlighthouse: new Icon({ iconUrl: './assets/svg/lighthouse.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlike: new Icon({ iconUrl: './assets/svg/like.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlinkedin: new Icon({ iconUrl: './assets/svg/linkedin.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlion: new Icon({ iconUrl: './assets/svg/lion.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlock: new Icon({ iconUrl: './assets/svg/lock.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmagnifier: new Icon({ iconUrl: './assets/svg/magnifier.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmall: new Icon({ iconUrl: './assets/svg/mall.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmap: new Icon({ iconUrl: './assets/svg/map.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmapkey: new Icon({ iconUrl: './assets/svg/mapkey.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmapshakers: new Icon({ iconUrl: './assets/svg/mapshakers.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarina: new Icon({ iconUrl: './assets/svg/marina.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarker: new Icon({ iconUrl: './assets/svg/marker.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarket_place: new Icon({ iconUrl: './assets/svg/market_place.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmine: new Icon({ iconUrl: './assets/svg/mine.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmonument: new Icon({ iconUrl: './assets/svg/monument.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmountain: new Icon({ iconUrl: './assets/svg/mountain.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmuseum: new Icon({ iconUrl: './assets/svg/museum.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmusic: new Icon({ iconUrl: './assets/svg/music.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnature: new Icon({ iconUrl: './assets/svg/nature.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnocamera: new Icon({ iconUrl: './assets/svg/nocamera.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnonsmoking: new Icon({ iconUrl: './assets/svg/nonsmoking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth: new Icon({ iconUrl: './assets/svg/north.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt: new Icon({ iconUrl: './assets/svg/north_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt_II: new Icon({ iconUrl: './assets/svg/north_alt_II.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt_III: new Icon({ iconUrl: './assets/svg/north_alt_III.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\toppositeway: new Icon({ iconUrl: './assets/svg/oppositeway.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tparking: new Icon({ iconUrl: './assets/svg/parking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpharmacy: new Icon({ iconUrl: './assets/svg/pharmacy.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpicnic_site: new Icon({ iconUrl: './assets/svg/picnic_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpitch: new Icon({ iconUrl: './assets/svg/pitch.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tplayground: new Icon({ iconUrl: './assets/svg/playground.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tplayground_alt: new Icon({ iconUrl: './assets/svg/playground_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpolice: new Icon({ iconUrl: './assets/svg/police.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpost_office: new Icon({ iconUrl: './assets/svg/post_office.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpub: new Icon({ iconUrl: './assets/svg/pub.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\trestaurant: new Icon({ iconUrl: './assets/svg/restaurant.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\trocks: new Icon({ iconUrl: './assets/svg/rocks.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\truins: new Icon({ iconUrl: './assets/svg/ruins.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsaddle: new Icon({ iconUrl: './assets/svg/saddle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsailboat: new Icon({ iconUrl: './assets/svg/sailboat.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tschool: new Icon({ iconUrl: './assets/svg/school.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tseal: new Icon({ iconUrl: './assets/svg/seal.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tshelter: new Icon({ iconUrl: './assets/svg/shelter.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsinkhole: new Icon({ iconUrl: './assets/svg/sinkhole.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tskype: new Icon({ iconUrl: './assets/svg/skype.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsmartphone: new Icon({ iconUrl: './assets/svg/smartphone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsmoking: new Icon({ iconUrl: './assets/svg/smoking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsport_centre: new Icon({ iconUrl: './assets/svg/sport_centre.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tspring: new Icon({ iconUrl: './assets/svg/spring.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsquare: new Icon({ iconUrl: './assets/svg/square.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstadium: new Icon({ iconUrl: './assets/svg/stadium.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstar: new Icon({ iconUrl: './assets/svg/star.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstop: new Icon({ iconUrl: './assets/svg/stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstupa: new Icon({ iconUrl: './assets/svg/stupa.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsupermarket: new Icon({ iconUrl: './assets/svg/supermarket.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tswimming_pool: new Icon({ iconUrl: './assets/svg/swimming_pool.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttelephone: new Icon({ iconUrl: './assets/svg/telephone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttheatre: new Icon({ iconUrl: './assets/svg/theatre.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tticket: new Icon({ iconUrl: './assets/svg/ticket.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttoilet: new Icon({ iconUrl: './assets/svg/toilet.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttower: new Icon({ iconUrl: './assets/svg/tower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttown: new Icon({ iconUrl: './assets/svg/town.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttraffic_signal: new Icon({ iconUrl: './assets/svg/traffic_signal.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttrain: new Icon({ iconUrl: './assets/svg/train.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttram: new Icon({ iconUrl: './assets/svg/tram.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttram_stop: new Icon({ iconUrl: './assets/svg/tram_stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttree_cinofer: new Icon({ iconUrl: './assets/svg/tree_cinofer.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttree_leaf: new Icon({ iconUrl: './assets/svg/tree_leaf.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttriangle: new Icon({ iconUrl: './assets/svg/triangle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tunderground: new Icon({ iconUrl: './assets/svg/underground.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tunesco: new Icon({ iconUrl: './assets/svg/unesco.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tuniversity: new Icon({ iconUrl: './assets/svg/university.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tupload: new Icon({ iconUrl: './assets/svg/upload.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tviewpoint: new Icon({ iconUrl: './assets/svg/viewpoint.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tviewtower: new Icon({ iconUrl: './assets/svg/viewtower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvillage: new Icon({ iconUrl: './assets/svg/village.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvineyard: new Icon({ iconUrl: './assets/svg/vineyard.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvolcano: new Icon({ iconUrl: './assets/svg/volcano.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twater_tower: new Icon({ iconUrl: './assets/svg/water_tower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twater_well: new Icon({ iconUrl: './assets/svg/water_well.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twatermill: new Icon({ iconUrl: './assets/svg/watermill.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twaterpark: new Icon({ iconUrl: './assets/svg/waterpark.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twaterwork: new Icon({ iconUrl: './assets/svg/waterwork.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twayside_cross: new Icon({ iconUrl: './assets/svg/wayside_cross.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twind_generator: new Icon({ iconUrl: './assets/svg/wind_generator.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twindmill: new Icon({ iconUrl: './assets/svg/windmill.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tzoo: new Icon({ iconUrl: './assets/svg/zoo.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n}\n\nclass Icons {\n    static get(icon) {\n        return ICONS[icon];\n    }\n\n    static list() {\n        return Object.keys(ICONS);\n    }\n\n\tstatic getDiv({ icon, title, body, color, textColor = '#333333', borderColor = 0, iconWidth = 150, iconHeight = 70 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight + 30],\n\t\t\ticonAnchor: [15, iconHeight + 30],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' style='width: ${iconWidth}px; height: ${iconHeight + 30}px; line-height: 1.1em;'>\n\t\t\t\t<style>\n\t\t\t\t\t#${id} .map-marker:after {\n\t\t\t\t\t\tborder-top-color: ${color};\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t\t<div class='map-marker text-white p-1' style='color: ${textColor}; background-color: ${color}; height: ${iconHeight}px;'>\n\t\t\t\t\t<nobr><strong>${title}</strong></nobr><br />\n\t\t\t\t\t<span class='font-weight-light'><nobr>${body}</nobr></span>\n\t\t\t\t</div>\n\t\t\t</div>`,\n\t\t});\n    }\n\n\tstatic getRaceMarker({\n\t\ticon,\n\t\tbib,\n\t\tspeed = '',\n\t\tbearing = '',\n\t\trank,\n\t\tflag = '',\n\t\timage,\n\t\ttitle,\n\t\tbody,\n\t\tcolor,\n\t\ttextColor = '#333333',\n\t\tborderColor = 0,\n\t\ticonWidth = 180,\n\t\ticonHeight = 15,\n\t\ticonAnchorX = 5,\n\t\ticonAnchorY = 5,\n\t\timageCirlceRadius = 10,\n\t\tmapChecked,\n\t}) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\n\t\tconst dotColor = mu.getRankingColor(rank);\n\t\tconst mapIsDark = /dark/i.test(mapChecked);\n\n\t\tconst lineHeight = '0.9em';\n\t\tconst fontSize = '0.9em';\n\t\tconst paddingTop = '3px';\n\t\tconst paddingBottom = '3px';\n\n\t\tlet imageCircle = image ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-circle imageRounded imageRoundedSmallIcon'\n\t\t\t\tstyle='background-image: url(\"${image}\"); background-size: cover; border: 1px ${dotColor} solid;'\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t` : '';\n\t\timageCircle = bib || rank ? `\n\t\t\t<div\n\t\t\t\tclass='px-0 text-center' style='background-color: ${dotColor ? dotColor : ''}'\n\t\t\t>\n\t\t\t\t${bib || rank}\n\t\t\t</div>\n\t\t` : imageCircle;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight],\n\t\t\ticonAnchor: [iconAnchorX, iconAnchorY],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: iconAnchorX > 100 ? `\n\t\t\t\t<div class='d-flex flex-nowrap overflow-hidden justify-content-end' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: ${lineHeight}; font-size: ${fontSize};'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='${mapIsDark ? 'text-white' : 'text-dark'} pl-3 pr-1 rounded-pill-left rounded-none ${mapIsDark ? 'bg-dark' : 'bg-white'} overflow-hidden'\n\t\t\t\t\t\tstyle='padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>\n\t\t\t\t\t\t\t<strong>${title}</strong> ${flag}\n\t\t\t\t\t\t</nobr>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-white font-weight-bolder pr-2 pl-1 rounded-pill-right rounded-none'\n\t\t\t\t\t\tstyle='background-color: ${dotColor ? dotColor : ''}; padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t${imageCircle}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='rounded rounded-circle ml-2 mt-1' style='width: ${imageCirlceRadius}px; height: ${imageCirlceRadius}px; background-color: ${dotColor};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\t\n\t\t\t` : `\n\t\t\t\t<div class='d-flex flex-nowrap overflow-hidden' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: ${lineHeight}; font-size: ${fontSize};'>\n\t\t\t\t\t<div class='rounded rounded-circle mr-2 mt-1' style='width: ${imageCirlceRadius}px; height: ${imageCirlceRadius}px; background-color: ${dotColor};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-white font-weight-bolder pl-2 pr-1 rounded-pill-left rounded-none'\n\t\t\t\t\t\tstyle='background-color: ${dotColor ? dotColor : ''}; padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t${imageCircle}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='${mapIsDark ? 'text-white' : 'text-dark'} pr-3 pl-1 rounded-pill-right rounded-none ${mapIsDark ? 'bg-dark' : 'bg-white'} overflow-hidden'\n\t\t\t\t\t\tstyle='padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>\n\t\t\t\t\t\t\t${flag} <strong>${title}</strong>\n\t\t\t\t\t\t</nobr>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t});\n\t\t// ${speed ? `${util.format(speed, 1)} km/t` : ''} ${bearing ? mu.windDirection(bearing) : ''}\n    }\n\n\tstatic getDistanceMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [20, 20],\n\t\t\ticonAnchor: [10, 10],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' class='rounded-circle bg-primary text-white text-center' style='width: 20px; height: 20px;'>\n\t\t\t\t<strong>${title}</strong><br />\n\t\t\t\t<span class='font-weight-light'>${body}</span>\n\t\t\t</div>`,\n\t\t});\n    }\n\n\t// static getMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t// \tconst id = `img-${util.randomPassword()}`;\n\t// \treturn new DivIcon({\n\t// \t\ticonSize: [10, 10],\n\t// \t\ticonAnchor: [5, 5],\n\t// \t\tclassName: 'my-div-icon',\n\t// \t\thtml: `<div id='${id}' class='rounded-circle bg-primary text-white text-center' style='width: 10px; height: 10px;'>\n\t// \t\t\t<strong>${title}</strong><br />\n\t// \t\t\t<span class='font-weight-light'>${body}</span>\n\t// \t\t</div>`,\n\t// \t});\n    // }\n\tstatic getMarker({\n\t\ticon,\n\t\tbib,\n\t\trank,\n\t\tflag = '',\n\t\timage,\n\t\ttitle,\n\t\tbody,\n\t\tcolor = '#a0a0a0',\n\t\ttextColor = '#333333',\n\t\tborderColor = 0,\n\t\ticonWidth = 250,\n\t\ticonHeight = 20,\n\t\ticonAnchorX = 7,\n\t\ticonAnchorY = 7,\n\t\tdotWidth = 14,\n\t\tdotHeight = 14,\n\t\tmapChecked,\n\t}) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\n\t\tconst dotColor = mu.getRankingColor(bib || rank);\n\t\tconst mapIsDark = /dark/i.test(mapChecked);\n\n\t\tlet imageCircle = image ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-circle imageRounded imageRoundedSmallIcon'\n\t\t\t\tstyle='background-image: url(\"${image}\"); background-size: cover; border: 1px ${dotColor} solid;'\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t` : '';\n\t\timageCircle = bib || rank ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-pill-both px-1 text-center ${dotColor ? '' : 'bg-primary'}' style='background-color: ${dotColor ? dotColor : ''}'\n\t\t\t>\n\t\t\t\t${bib || rank}\n\t\t\t</div>\n\t\t` : imageCircle;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight],\n\t\t\ticonAnchor: [iconAnchorX, iconAnchorY],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `\n\t\t\t\t<div class='d-flex flex-nowrap' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: 1.1em;'>\n\t\t\t\t\t<div class='rounded rounded-circle mr-2 mt-1' style='width: ${dotWidth}px; height: ${dotHeight}px; background-color: ${color};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-dark font-weight-bolder pl-2 pr-1 py-1 rounded-pill-left rounded-none bg-info'\n\t\t\t\t\t>\n\t\t\t\t\t\t${imageCircle}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-dark p-1 pr-3 rounded-pill-right rounded-none bg-info overflow-hidden'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>${flag} <strong>${title}</strong></nobr>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t});\n    }\n\n\n\tstatic getSmallMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [6, 6],\n\t\t\ticonAnchor: [3, 3],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' class='rounded-circle bg-success text-white text-center' style='width: 5px; height: 5px;'>\n\t\t\t\t<strong>${title}</strong><br />\n\t\t\t\t<span class='font-weight-light'>${body}</span>\n\t\t\t</div>`,\n\t\t});\n    }\n\n}\n\nexport default Icons;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {};\n\n@observer\nclass Loading extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { goto, gotoTitle, routerName } = this.props;\n        return (\n            <div class='row h-100'>\n                <div class='col-12 text-center my-auto'>\n                    <div class='spinner-border text-primary' style='width: 8rem; height: 8rem;' role='status'>\n                        <span class='sr-only'><Text id='home.loading'>Loading...</Text></span>\n                    </div>\n                    <h3 class='mt-4'><Text id='home.loading'>Loading...</Text></h3>\n                    {goto && <>\n                        <a class='my-4 btn btn-primary btn-lg btn-block' native href={goto}>{gotoTitle} <i class='fas fa-angle-double-right ml-2' /></a>\n                        <small class='text-muted'>{routerName}</small>\n                    </>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../../../components/form/images';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentRace = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await raceStore.commentRace({ id: race.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[race.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ race, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, race } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (<>\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={race.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default RaceAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom(false);\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n\n        if (!image.dataset.retry) {\n            image.dataset.retry = 0;\n        }\n        image.dataset.retry = parseInt(image.dataset.retry, 10) + 1;\n        if (image.dataset.retry > 5) {\n            return false;\n        }\n\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeImage({\n            id: dog.id,\n            name: imageName,\n        });\n    }\n\n    removeFile = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const fileName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeFile({\n            id: dog.id,\n            name: fileName,\n        });\n    }\n\n    render() {\n        const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField, refName, showImages = false, showFiles = true } = this.props;\n        let value = dog[field] || '';\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(dog[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!dog.files || dog.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='dogs.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='dogs.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {dog.files && dog.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={10}\n                    />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    {showImages && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {(!dog.images || dog.images.length === 0) && <>\n                                    <div class='text-center text-muted mb-3'>\n                                        <div class='display-1'><i class='fas fa-images' /></div>\n                                        <h3><Text id='dogs.no-images-title'>No images for this dog!</Text></h3>\n                                        <Text id='dogs.no-images-text'>You can add more images to this dog. Puppy pictures, workout pictures, lazy summer pictures, etc. All is a nice way to create a better profile for this dog.</Text>\n                                    </div>\n                                </>}\n                                {field === 'image' ? <>\n                                    {dog.image && dog.image.s3SmallLink && <div class='col-3 p-1'>\n                                        <img src={dog.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={dog.image.name}\n                                        ><i class='fas fa-trash' /> Remove</button>\n                                        <span class='badge badge-success'>Main</span>\n                                    </div>}\n                                </> : <>\n                                    {dog.images && dog.images.map(img => (\n                                        <div class='col-3 p-1'>\n                                            <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                            <button class='btn btn-sm btn-link'\n                                                onClick={this.removeImage}\n                                                data-name={img.name}\n                                            ><i class='fas fa-trash' /> Remove</button>\n                                        </div>\n                                    ))}\n                                </>}\n\n                            </div>\n                        </div>\n                    </>}\n\n                    {field === 'image' ? <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} addToImages={false} />\n                    </> : <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} />\n                    </>}\n\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        // onInput={e => console.log(e)}\n                        // onChange={e => console.log(e)}\n                    />\n                    <datalist id={`list-${field}`}>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'select') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n\n                    <select type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                    >\n                        <option value=''>-- Velg kjønn --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label> {refName}\n                <input type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={dog.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleType(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        if (value === null) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.teams.indexOf(value) > -1) {\n            dogStore.removeTeam({ id: object.id, team: value });\n        } else if (object.team) {\n            dogStore.addTeam({ id: object.id, team: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        const { highlight } = this.props;\n\n        return (\n            <div class={`form-group mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = object && util.isArray(object.teams) && object.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleType(team.id)}\n                                            >\n                                                {object.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n\n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                    </>}\n                                                </>}\n\n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Harnesses extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { harnesses, user } = userStore;\n        const { language = 'en' } = user;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {harnesses && harnesses.map((harness, idx) => (\n                                    <div class='col px-0 mb-2'\n                                        ref={value === harness.id ? c => this.container = c : null}\n                                    >\n                                        <div class={`border\n                                            rounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === harnesses.length ? 'rounded-pill-right': '')}\n                                            p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                            style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                            onClick={() => this.toggleType(harness.id)}\n                                        >\n                                            {harness.lang && harness.lang[language] ? harness.lang[language] : harness.name}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Status extends Component {\n    // toggleStatus(typeId) {\n    //     const { object, type, field, updateField, isNew } = this.props;\n    //     let value = toJS(object[field]);\n    //     if (value === typeId) {\n    //         value = 0;\n    //     } else {\n    //         value = typeId;\n    //     }\n    //     updateField({ id: object.id, field, value, type, isNew });\n    // }\n\n    toggleStatus(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = 0;\n        } else {\n            value = typeId;\n        }\n        if (value === 0) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.statuses.indexOf(value) > -1) {\n            dogStore.removeStatus({ id: object.id, status: value });\n        } else if (object.status) {\n            dogStore.addStatus({ id: object.id, status: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogstatuses, user } = userStore;\n        const { language } = user;\n\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {dogstatuses && dogstatuses.map((status, idx) => {\n                                    const isPrimary = value === status.id;\n                                    const isSecondary = object && util.isArray(object.statuses) && object.statuses.indexOf(status.id) > -1;\n                                    return (\n                                        <div class='col mb-2 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === dogstatuses.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleStatus(status.id)}\n                                            >\n                                                {language && status.lang && status.lang[language] ? status.lang[language] : status.name}\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Position extends Component {\n    toggleStatus(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogPositions } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {dogPositions && dogPositions.map(status => (\n                            <div class='offset-2 col-8 mb-2'>\n                                <div class={`border rounded rounded-pill px-3 py-1 bg-${value === status.id ? status.class || 'success' : ''}`}\n                                    onClick={() => this.toggleStatus(status.id)}\n                                    style='line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small>\n                                        {status.name}\n                                    </small>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDog: {},\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    async loadDog(props = this.props) {\n        const { id } = props;\n\t\tconst { dogStore } = this.props.stores;\n        dogStore.cleanupMemoryDetail();\n        await dogStore.load(id, false, { addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n    }\n\n\tresetDog() {\n\t\tthis.setState({\n            newDog: {},\n            createNew: false,\n        });\n\t}\n\n\tinsertDog = async () => {\n\t\tconst { newDog } = this.state;\n\t\tconst { dogStore } = this.props.stores;\n\t\tawait dogStore.insert({ ...newDog });\n        this.resetDog();\n        route(`/dogs/`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { dogStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { dog } = dogStore;\n        if (field === 'images') {\n            if (Array.isArray(dog.images) && Array.isArray(value)) {\n                localObjectValue = [...dog.images, ...value];\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(dog.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.files, ...value];\n                } else {\n                    localObjectValue = [...dog.files, value];\n                }\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(dog.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.achievements, ...value];\n                } else {\n                    localObjectValue = [...dog.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(dog.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.links, ...value];\n                } else {\n                    localObjectValue = [...dog.links, value];\n                }\n            }\n        }\n\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            dogStore.updateObjectKeyValue('newDog', field, value);\n        } else {\n            dogStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { dogStore } = this.props.stores;\n        await dogStore.saveField(id, field, value);\n    }\n\n    chooseMother = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const motherDog = dogStore.findDog(dogId);\n\n        if (motherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: motherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherName', value: motherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherChipId', value: motherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: null, skipTimer: true });\n        }\n    }\n\n    chooseFather = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const fatherDog = dogStore.findDog(dogId);\n\n        if (fatherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: fatherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherName', value: fatherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherChipId', value: fatherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: null, skipTimer: true });\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/edit/${dog.id}/${submenu}`);\n\t}\n\n    back = () => {\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}`);\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadDog();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.id !== this.props.id) {\n            this.loadDog(nextProps);\n        }\n    }\n\n\trender() {\n        const { createNew, newDog, submenu } = this.state;\n\t\tconst { dogStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\t\tconst { insertStatus, saved, dog } = dogStore;\n        const dogFemales = dogStore.findDogsByGender('female');\n        const dogMales = dogStore.findDogsByGender('male');\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const { name } = dog;\n\n\t\treturn (<>\n            <div class='d-flex position-relative'>\n                <div class={`text-center border rounded-circle imageRounded float-right`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\");` : ''}>\n                    {!dog.image && <i class='fas fa-dog text-muted mt-3' style='font-size: 40px;' />}\n                </div>\n                <div class='flex-grow-1 pl-3'>\n                    <h5>\n                        {name}\n                        {hasBirthday && <>\n                            <i class='fas fa-birthday-cake ml-3' />\n                        </>}\n                    </h5>\n                    <span>\n                        {daysUntilBirthday < 7 && <>\n                            <span class='text-muted mr-2'>\n                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                            </span>\n                        </>}\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                </div>\n            </div>\n\n            <div\n                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                style='overflow: auto; scroll-snap-type: x mandatory;'\n            >\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='info'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-info-circle' /> <Text id='dogs.info'>Info</Text></button>\n                    {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'status' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='status'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-thermometer' /> <Text id='dogs.status'>Status</Text></button>\n                    {submenu === 'status' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='pictures'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-images' /> <Text id='dogs.pictures'>Pictures</Text></button>\n                    {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='team'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-users' /> <Text id='dogs.team'>Team</Text></button>\n                    {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'relations' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='relations'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-project-diagram' /> <Text id='dogs.relations'>Relations</Text></button>\n                    {submenu === 'relations' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='achievements'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-clock' /> <Text id='dogs.achievements'>Achievements</Text></button>\n                    {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'links' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='links'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-link' /> <Text id='dogs.links'>Links</Text></button>\n                    {submenu === 'links' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='advanced'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-cogs' /> <Text id='dogs.advanced'>Advanced</Text></button>\n                    {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                style='max-height: 50vh;'\n            >\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                    {submenu === 'info' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='name'\n                                title={<Text id='dogs.full-name'>Fullt navn</Text>}\n                                help={<Text id='dogs.full-name-help'>Fullt navn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='shortname'\n                                title={<Text id='dogs.short-name'>Kallenavn</Text>}\n                                help={<Text id='dogs.short-name-help'>Kallenavnet på hunden. Hva roper du på innkalling?</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='gender' type='select'\n                                datalist={[\n                                    ['male', <Text id='dogs.gender-male'>Male</Text>],\n                                    ['female', <Text id='dogs.gender-female'>Female</Text>]\n                                ]}\n                                title={<Text id='dogs.gender'>Kjønn</Text>}\n                                help={<Text id='dogs.gender-help'>Kjønn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='chipId'\n                                title={<Text id='dogs.chip-id'>Chip ID</Text>}\n                                help={<Text id='dogs.chip-id-help'>Chip ID på hunden. Står ofte i vetrinærhåndbok eller passet.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='birth' type='date' min='2000-01-01' max='today'\n                                title={<Text id='dogs.birth'>Fødselsdato</Text>}\n                                help={<Text id='dogs.birth-help'>Fødselsdato på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Harnesses stores={this.props.stores} saved={saved} object={dog} type='number' field='harness'\n                                title={<Text id='dogs.harness-size'>Selestørrelse</Text>}\n                                help={<Text id='dogs.harness-size-help'>Sele til hunden</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Input saved={saved} dog={dog} field='description' icon='fas fa-paragraph' type='textarea'\n                                title={<Text id='dogs.description'>Beskrivelse</Text>}\n                                help={<Text id='dogs.description-help'>Beskrivelse av hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n\n                            {/* <div class='mt-5 pt-5'>\n                                <Input saved={saved} dog={dog} field='deceased' type='date' min='2000-01-01' max='today'\n                                    title={<Text id='dogs.deceased'>Død</Text>}\n                                    help={<Text id='dogs.deceased-help'>Dødsdato for hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </div> */}\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'status' && <>\n                        <Localizer>\n                            <Status stores={this.props.stores} saved={saved} object={dog} type='number' field='status'\n                                title={<Text id='dogs.status'>Status</Text>}\n                                help={<Text id='dogs.status-help'>Status til hunden</Text>}\n                                updateField={this.updateFieldValue} />\n                            <Input saved={saved} dog={dog} field='specialNeeds'\n                                title={<Text id='dogs.special-needs'>Spesielle behov</Text>}\n                                help={<Text id='dogs.special-needs-help'>Har hunden spesielle behov? Trenger ekstra mat, utstyr eller annet? Eks: \"Ekstra fett\", \"Husk ulveklobandasje\", etc.</Text>}\n                                onInput={this.updateField} />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'pictures' && <>\n                        <Localizer>\n                            {/* <Input saved={saved} dog={dog} field='imageOther' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.photo'>Bilde</Text>}\n                                help={<Text id='dogs.photo-help'>Bilder av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            /> */}\n                            <Input saved={saved} dog={dog} field='image' type='image' icon='fas fa-portrait'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.profile-photo'>Profilbilde</Text>}\n                                help={<Text id='dogs.profile-photo-help'>Profilbilde av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <Localizer>\n                            <Teams stores={this.props.stores} saved={saved} object={dog} type='number' field='team'\n                                title={<Text id='dogs.team'>Team</Text>}\n                                help={<Text id='dogs.team-help'>Team som hunden er på.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Position stores={this.props.stores} saved={saved} object={dog} type='number' field='position'\n                                title={<Text id='dogs.position'>Plass i spannet</Text>}\n                                help={<Text id='dogs.position-help'>Foretrukket plass i spannet.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'relations' && <>\n                        <h5 class='mt-5'><Text id='dogs.mother'>Mor</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.mother}\n                            onInput={this.chooseMother}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-mother'>Velg blant dine hunder</Text> --</option>\n                            {dogFemales && dogFemales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='motherName' type='text'\n                                title={<Text id='dogs.mother-name'>Navn på mor</Text>}\n                                help={<Text id='dogs.mother-name-help'>Navn på moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherChipId' type='text'\n                                title={<Text id='dogs.mother-chipid'>Chip ID på mor</Text>}\n                                help={<Text id='dogs.mother-chipid-help'>Chip ID til moren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherComment'\n                                title={<Text id='dogs.mother-comment'>Kommentar til mor</Text>}\n                                help={<Text id='dogs.mother-comment-help'>Kommentar til moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n\n                        <h5 class='mt-5'><Text id='dogs.father'>Far</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.father}\n                            onInput={this.chooseFather}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-father'>Velg blant dine hunder</Text> --</option>\n                            {dogMales && dogMales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='fatherName' type='text'\n                                title={<Text id='dogs.father-name'>Navn på far</Text>}\n                                help={<Text id='dogs.father-name-help'>Navn på faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherChipId' type='text'\n                                title={<Text id='dogs.father-chipid'>Chip ID på far</Text>}\n                                help={<Text id='dogs.father-chipid-help'>Chip ID til faren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherComment'\n                                title={<Text id='dogs.father-comment'>Kommentar til far</Text>}\n                                help={<Text id='dogs.father-comment-help'>Kommentar til faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'links' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='links' type='text' icon='fas fa-link'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.links'>Linker</Text>}\n                                help={<Text id='dogs.links-help'>Linker til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'achievements' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='achievements' type='text' icon='fas fa-clock'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.achievements'>Bragder</Text>}\n                                help={<Text id='dogs.achievements-help'>Bragder til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='files' type='file' icon='fas fa-file'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.files'>Files</Text>}\n                                help={<Text id='dogs.files-help'>Filer til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                </div>\n\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\nexport default DogsEdit;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointerCursor\":\"pointerCursor__2Gpay\",\"marker-cluster-custom\":\"marker-cluster-custom__1z-5y\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport RaceTracking from '../../components/public/raceTracking.js';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n    isLoading: false,\n};\n\n@observer\nclass AppRaceDetailTracking extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    back = () => {\n        // const { history } = this.props.stores;\n        // history.goBack();\n        const { raceid, path } = this.props;\n        route(`/app-races/${raceid}`);\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n\n        const { raceid } = this.props;\n\n        return (<>\n            <div class='container-fluid position-relative p-0' style={`margin-top: 0; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                <RaceTracking stores={this.props.stores} raceid={raceid} />\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailTracking;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Trackmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadTrack(props = this.props) {\n        const { showHeatmap, raceid, allTeamIds } = props;\n        const { adminStore, trackStore, raceStore, appState } = props.stores;\n        const { selectedClassIds = [] } = appState;\n\n\t\t// this.setState({ isLoading: true });\n        if (showHeatmap) {\n            await adminStore.getPublicHeatmap(raceid, allTeamIds);\n        }\n\n        // const classId = \n        const trackIds = raceStore.getTrackIdsByClass(selectedClassIds[0]);\n\n        if (trackIds && trackIds.length > 0) {\n            trackStore.cleanupMemory();\n            await trackStore.loadPublic({ query: { idin: trackIds } });\n        }\n\t\t// this.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadTrack();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.selectedClassIds !== nextProps.selectedClassIds) {\n            this.loadTrack(nextProps);\n        }\n\t}\n\n    render() {\n        const { trackStore, raceStore, appState, adminStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const {\n            waypoints, waypoints2, waypoints3, zoomToMarkers, mapid,\n            fullscreenMap,\n            onMarkerClick, onMarker2Click, onMarker3Click,\n            showHeatmap, showTracks,\n            showDistanceMarkers, groupWaypoints,\n            focusOnMushers, geoJSONs,\n        } = this.props;\n        const { tracks } = trackStore;\n        const { publicHeatmap: heatmap } = adminStore;\n        const track = tracks[0];\n        const trackIds = raceStore.getTrackIdsByClass();\n\n        // const heatmap = publicHeatmap.slice(0, 10);\n        // const heatmap = [[60.4433,8.8996,14],[61.384,9.1152,14],[60.42,8.9422,15]];\n\n        return (\n            <>\n                {/* heatmap: {`map-${mapid}`}<br /> */}\n                {/* {JSON.stringify(showTracks && track && track.gpx ? track.gpx.geoJSON : null)} */}\n                {/* {JSON.stringify(geoJSONs)} */}\n                <Map\n                    stores={this.props.stores}\n                    // mapId={mapid}\n                    heatmap={showHeatmap ? heatmap : null}\n                    track={track}\n                    geojson={showTracks && track && track.gpx ? track.gpx.geoJSON : null}\n                    gpxInfo={showTracks && track && (track.gpx || track.gpxInfo) ? (track.gpxInfo || track.gpx.gpxInfo) : null}\n                    minZoom={2}\n                    maxZoom={18}\n                    height={600}\n                    waypoints={waypoints}\n                    waypoints2={waypoints2}\n                    waypoints3={waypoints3}\n                    geoJSONs={geoJSONs}\n                    zoomToMarkers={zoomToMarkers}\n                    fullscreenMap={fullscreenMap}\n                    onMarkerClick={onMarkerClick}\n                    onMarker2Click={onMarker2Click}\n                    onMarker3Click={onMarker3Click}\n                    showTrackProfile={false}\n                    distanceMarkerSteps={'long'}\n                    showDistanceMarkers={showDistanceMarkers}\n                    groupWaypoints={groupWaypoints}\n                    focusOnMushers={focusOnMushers}\n                    showFullscreenControl={false}\n                    // key={`map-${mapid}-${util.getNestedValue(track, 'id')}-${trackIds.join('-')}-${selectedClassIds.join('-')}`}\n                    // key={`map-${util.getNestedValue(track, 'id')}`}\n                />\n            </>\n        );\n    }\n}\n\nexport default Trackmap;\n","import { h, Component, createRef, useEffect } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport Markdown from 'preact-markdown';\n\nimport ReactLeafletMultiOptionsPolyline from 'react-leaflet-multi-options-polyline';\n\nimport style from './style.css';\n\nimport mu from '../../lib/musher-util';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport {\n\tCircle,\n\tFeatureGroup,\n\tLayerGroup,\n\tLayersControl,\n\tMap,\n\tMarker,\n\tPopup,\n\tRectangle,\n\tTileLayer,\n\tVideoOverlay,\n\tImageOverlay,\n\tGeoJSON,\n\tWMSTileLayer,\n    useLeaflet,\n\tScaleControl,\n\tPolyline,\n} from 'react-leaflet';\n\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\n\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport '../../../node_modules/react-leaflet-markercluster/dist/styles.min.css';\n\n// import FullscreenControl from 'react-leaflet-fullscreen';\n// import '../../../node_modules/react-leaflet-fullscreen/dist/styles.css';\n\nimport Control from 'react-leaflet-control';\n\nconst { BaseLayer, Overlay } = LayersControl;\n\nimport icons from '../../lib/icons';\nimport '../../../node_modules/leaflet/dist/leaflet.css';\n\nimport L from 'leaflet';\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('../../../node_modules/leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('../../../node_modules/leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('../../../node_modules/leaflet/dist/images/marker-shadow.png')\n});\n\nconst createClusterCustomIcon = function (cluster) {\n  return L.divIcon({\n    html: `<span>${cluster.getChildCount()}</span>`,\n    className: style['marker-cluster-custom'],\n    iconSize: L.point(40, 40, true),\n  });\n};\n\nfunction normalizeRange(val, min, max, newMin, newMax) {\n    return newMin + (val - min) * (newMax - newMin) / (max - min);\n}\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\nconst API_OPEN_WEATHERMAP_KEY = '75cd92317c98db6873031cd2d8de75c5';\nconst INCLINE_STEP = 1;\nconst MAX_HSL_COLOR = 230;\n\n@observer\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasLocation: false,\n\t\t\tvisibleLayers: {\n\t\t\t\tWindspeed: false,\n\t\t\t},\n\t\t\tmapCenter: [],\n\t\t\tmapZoom: 10,\n\t\t\trangeSteps: INCLINE_STEP,\n\t\t\tmaxHslColor: MAX_HSL_COLOR,\n\t\t\thasZoomedToMarkers: false,\n\t\t};\n\t\t// const { waypointStore } = this.props.stores;\n\t\t// waypointStore.load();\n\t}\n\n\tmapRef = createRef();\n\tpolyRef = createRef();\n\n\thandleViewportChanged = (e) => {\n\t\t// console.log('onViewportChanged', e);\n\t\tthis.setState({\n\t\t\tmapCenter: e.center,\n\t\t\tmapZoom: e.zoom,\n\t\t})\n\t}\n\n\thandleLocationFound = (e) => {\n\t\tif (e.latlng) {\n\t\t\tthis.setState({\n\t\t\t\thasLocation: true,\n\t\t\t\tlatlng: e.latlng,\n\t\t\t});\n\t\t}\n\t}\n\n\tgeoJSONStyle() {\n\t\treturn {\n\t\t\tcolor: '#0347A2',\n\t\t\tweight: 5,\n\t\t\tfillOpacity: 0.5,\n\t\t\tfillColor: '#0347A2',\n\t\t}\n\t}\n\n\tgeoJSONStyleList(idx) {\n\t\tconst color = mu.getRankingColor(idx + 1);\n\t\treturn {\n\t\t\tcolor,\n\t\t\tweight: 3,\n\t\t\tfillOpacity: 0.5,\n\t\t\tfillColor: color,\n\t\t}\n\t}\n\n\tonEachFeature = (feature, layer) => {\n\t\tconst { gpxInfo = {} } = this.props;\n\t\tconst popupContent = `<Popup>\n\t\t\t<h5>Details</h5>\n\t\t\t<ul>\n\t\t\t\t<li>Total distance: ${util.format(gpxInfo.totalDistance, 2)} km</li>\n\t\t\t\t<li>Max speed: ${util.format(gpxInfo.maxSpeed, 1)} km/t</li>\n\t\t\t\t<li>Avg speed: ${util.format(gpxInfo.avgSpeed, 1)} km/t</li>\n\t\t\t\t<li>Ascent: ${util.format(gpxInfo.ascent || gpxInfo.calculatedAscend, 0)} m</li>\n\t\t\t\t<li>Descent: ${util.format(gpxInfo.decent || gpxInfo.calculatedDescend, 0)} m</li>\n\t\t\t\t<li>Duration: ${util.secToHms(gpxInfo.duration)}</li>\n\t\t\t</ul>\n\t\t</Popup>`\n\t\tlayer.bindPopup(popupContent)\n\t}\n\n\thandleClick = (e) => {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setLatlng(e.latlng);\n\t\t// this.setState({ currentPos: e.latlng });\n\t}\n\n\tzoomToGeoJSON = (e) => {\n\t\ttry {\n\t\t\tif (e.target) {\n\t\t\t\tlet bounds = e.target.getBounds();\n\n\t\t\t\tif (bounds && bounds._northEast) {\n\t\t\t\t\tthis.setState({ bounds });\n\t\t\t\t}\n\t\t\t\t// const map = this.mapRef.leafletElement;  //get native Map instance\n\t\t\t\t// map.fitBounds(bounds);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t// if (this.geoJSONRef.leafletElement) {\n\t\t// console.log(e);\n\t\t// \tconst map = this.mapRef.leafletElement;  //get native Map instance\n\t\t// \tconst group = this.geoJSONRef.leafletElement; //get native featureGroup instance\n\t\t// \tmap.fitBounds(group.getBounds());\n\t\t// }\n\t}\n\n\tzoomToMarkers = (markers = [], force = false) => {\n\t\tconst { hasZoomedToMarkers } = this.state;\n\t\ttry {\n\t\t\t// console.log('zoomToMarkers', hasZoomedToMarkers, { markers });\n\t\t\tif ((force || !hasZoomedToMarkers) && markers.length && markers.length > 0) {\n\t\t\t\tconst map = this.mapRef.current.leafletElement;  //get native Map instance\n\t\t\t\tconst markerBounds = L.latLngBounds([]);\n\t\t\t\tmarkers.forEach(marker => {\n\t// console.log({ marker });\n\t\t\t\t\tmarkerBounds.extend([marker.lat, marker.lng])\n\t\t\t\t});\n\t// console.log('map.fitBounds');\n\t\t\t\tmap.fitBounds(markerBounds);\n\t\t\t\tthis.setState({ hasZoomedToMarkers: true });\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tzoomToAllMarkers = () => {\n\t\tconst { waypoints = [] } = this.props;\n\t\tconst markers = waypoints;\n\t\tthis.zoomToMarkers(markers, true);\n\t}\n\n\tzoomToFavoriteMarkers = () => {\n\t\tconst { zoomToMarkers = [], waypoints = [] } = this.props;\n\t\tconst markers = zoomToMarkers.length > 0 ? zoomToMarkers : waypoints;\n\t\tthis.zoomToMarkers(markers, true);\n\t}\n\n\t// componentDidMount() {\n\t// }\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.zoomToMarkers !== nextProps.zoomToMarkers) {\n\t\t\t// console.log(nextProps.zoomToMarkers)\n\t\t\tthis.zoomToMarkers(nextProps.zoomToMarkers, true);\n        } else if (this.props.waypoints !== nextProps.waypoints) {\n\t\t\tthis.zoomToMarkers(nextProps.waypoints);\n\t\t}\n\n// \t\tconst { zoomToMarkers = [], waypoints = [] } = nextProps;\n// \t\tconst { zoomToMarkers: prevZoomToMarkers = [] } = this.props;\n// // console.log('componentWillReceiveProps', JSON.stringify(zoomToMarkers.length), JSON.stringify(prevZoomToMarkers.length));\n// \t\t// if (zoomToMarkers.length !== prevZoomToMarkers.length) {\n// \t\tconst markers = zoomToMarkers.length > 0 ? zoomToMarkers : waypoints;\n// \t\tthis.zoomToMarkers(markers);\n\t\t// }\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// try {\n\t\t// \tconst map = this.mapRef.current.leafletElement;  //get native Map instance\n\t\t// \tmap.remove()\n\t\t// } catch (err) {\n\t\t// \tconsole.log(err);\n\t\t// }\n\t}\n\n\toverlayAdd = (e) => {\n\t\t// console.log('overlayAdd', e);\n\t\tconst { name } = e;\n\t\tconst { visibleLayers } = this.state;\n\t\tvisibleLayers[name] = true;\n\t\tthis.setState({ visibleLayers });\n\t}\n\toverlayRemove = (e) => {\n\t\tconst { name } = e;\n\t\t// console.log('overlayRemove', e, name)\n\t\tconst { visibleLayers } = this.state;\n\t\tvisibleLayers[name] = false;\n\t\tthis.setState({ visibleLayers });\n\t}\n\n\tpolylineOptions = () => {\n\t\tconst { gpxInfo } = this.props;\n\t\tconst { rangeSteps } = this.state;\n\t\tlet { maxHslColor } = this.state;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapColorMode, mapRangeMin, mapRangeMax } = appState;\n\n\t\tlet newRangeMin = mapRangeMin;\n\t\tlet newRangeMax = mapRangeMax;\n\n\t\tif (mapColorMode === 'speed') {\n\t\t\tif (gpxInfo && gpxInfo.speeds && gpxInfo.speeds.length > 0) {\n\t\t\t\tnewRangeMin = Math.floor(Math.min(...gpxInfo.speeds.map(e => e * 3.6)));\n\t\t\t\tnewRangeMax = Math.ceil(Math.max(...gpxInfo.speeds.map(e => e * 3.6)));\n\t\t\t}\n\t\t}\n\n\t\tconst range = util.range(newRangeMin, newRangeMax, rangeSteps);\n\t\tconst colors = range.map((e) => {\n\t\t\tconst val = normalizeRange(e, newRangeMin, newRangeMax, 0, maxHslColor);\n\t\t\tlet colorValue;\n\t\t\tif (mapColorMode === 'speed') {\n\t\t\t\tcolorValue = maxHslColor - val;\n\t\t\t} else {\n\t\t\t\tcolorValue = maxHslColor - val;\n\t\t\t}\n\t\t\tconst { r, g, b } = util.hsl2Rgb(colorValue, 100, 45);\n\t\t\treturn { color: `rgb(${r}, ${g}, ${b})` };\n\t\t});\n\n\t\tappState.setMapRange(range, newRangeMin, newRangeMax);\n\t\tappState.setMapColors(colors);\n\t\treturn colors;\n\t}\n\n\tpolylineOptionIdxFn = (latLng) => {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapRange: altThresholds } = appState;\n\t\t// const altThresholds = util.range(MIN_INCLINE, MAX_INCLINE, INCLINE_STEP);\n\t\tfor (let i = 0; i < altThresholds.length; ++i) {\n\t\t\tif (latLng.meta <= altThresholds[i]) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn altThresholds.length;\n\t}\n\n\tpolylinetrackPointFactory = (data) => {\n\t\tconst { gpxInfo } = this.props;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapColorMode, mapRangeMin, mapRangeMax } = appState;\n\n\n\t\tlet dataArray = [];\n\t\tif (mapColorMode === 'speed' && gpxInfo.speeds && gpxInfo.speeds.length > 0) {\n\t\t\tdataArray = gpxInfo.speeds.map(e => e * 3.6);\n\t\t} else if (gpxInfo && gpxInfo.climbs) {\n\t\t\tdataArray = gpxInfo.climbs;\n\t\t}\n\n\t\tconst points = data.filter(e => e[0] && e[1] && e[2]).map((item, idx) => {\n\t\t\tconst trkpt = L.latLng(item[1], item[0], item[2]);\n\t\t\tif (dataArray && dataArray.length > 0) {\n\t\t\t\ttrkpt.meta = dataArray[idx] || 0;\n\t\t\t\tif (trkpt.meta > mapRangeMax) {\n\t\t\t\t\ttrkpt.meta = mapRangeMax;\n\t\t\t\t}\n\t\t\t\tif (trkpt.meta < mapRangeMin) {\n\t\t\t\t\ttrkpt.meta = mapRangeMin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrkpt.meta = 0;\n\t\t\t}\n\t\t\treturn trkpt;\n\t\t});\n\t\treturn points;\n\t}\n\n\tshowSpeed = () => {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setMapColorMode('speed');\n\t}\n\n\t// handleMarkerClick = ({ title, bib, email, e }) => {\n\thandleMarkerClick = (opt = {}) => {\n\t\tconst { onMarkerClick = ({ title, bib }) => console.log({ title, bib }) } = this.props;\n\t\ttry {\n\t\t\tonMarkerClick({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\thandleMarker2Click = (opt = {}) => {\n\t\tconst { onMarker2Click = (opt) => console.log(opt) } = this.props;\n\t\ttry {\n\t\t\tonMarker2Click({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\thandleMarker3Click = (opt = {}) => {\n\t\tconst { onMarker3Click = (opt) => console.log(opt) } = this.props;\n\t\ttry {\n\t\t\tonMarker3Click({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tbaseLayerChange = (e) => {\n\t\tconst { name } = e;\n\t\tconsole.log('baseLayerChange event', e);\n\t\tconsole.log({ name });\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setMapChecked(name);\n\t}\n\n\twhenReadyHandler = (e) => {\n\t\tconst { target } = e;\n\t\ttarget.on('baselayerchange', this.baseLayerChange);\n\t}\n\n\trender() {\n\t\tconst { userStore, appState } = this.props.stores;\n\t\tconst { mapChecked } = appState;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n\t\tconst { visibleLayers, mapZoom, bounds = null } = this.state;\n\t\tconst {\n\t\t\twaypoints = [],\n\t\t\twaypoints2 = [],\n\t\t\twaypoints3 = [],\n\t\t\tgeoJSONs = [],\n\t\t\tzoomToMarkers = [],\n\t\t\tgeojson,\n\t\t\tgpxInfo,\n\t\t\tmapId = 1,\n\t\t\tcenter = [61.0779066, 9.800984],\n\t\t\tzoom = 5,\n\t\t\tminZoom = 4,\n\t\t\tmaxZoom = 18,\n\t\t\tdarkmode,\n\t\t\theight = 500,\n\t\t\theatmap = [],\n\t\t\tskipGeojson = false,\n\t\t\tzoomToWaypoints = false,\n\t\t\tfullscreenMap = false,\n\n\t\t\tshowSearch = true,\n\t\t\tshowZoomControl = true,\n\t\t\tshowLayersControl = true,\n\t\t\tshowFullscreenControl = true,\n\t\t\tshowScaleControl = true,\n\t\t\tshowRange = true,\n\t\t\tshowTrackProfile = true,\n\t\t\tdistanceMarkerSteps = 'normal',\n\t\t\tshowDistanceMarkers = true,\n\t\t\tgroupWaypoints = true,\n\n\t\t\tlayersControlPosition = 'topright',\n\t\t} = this.props;\n\t\tconst { mapColorMode, mapRange: range, mapColors: colors, mapRangeMin, mapRangeMax } = appState;\n\n\t\tconst tempGeoJson = toJS(geojson);\n\t\tconst track = util.asObject(tempGeoJson, 'features', 0, 'geometry', 'coordinates');\n\t\tconst hasWaypoints = zoomToMarkers.length > 0 || waypoints.length > 0;\n\t\tconst hasWaypoints2 = waypoints2.length > 0;\n\n\t\tlet startMarker;\n\t\tlet endMarker;\n\t\tconst distanceMarkers = [];\n\t\tif (track && track[0] && track[0][0]) {\n\t\t\tstartMarker = track[0][0] && track[0][0][0] ?  [track[0][0][1], track[0][0][0]] : [track[0][1], track[0][0]];\n\t\t\tendMarker = track[track.length - 1][0] && track[track.length - 1][0][0] ? [track[track.length - 1][0][1], track[track.length - 1][0][0]] : [track[track.length - 1][1], track[track.length - 1][0]];\n\t\t\tif (gpxInfo && gpxInfo.distances) {\n\t\t\t\tlet totalDistance = 0;\n\t\t\t\tlet currentDistance = 0;\n\t\t\t\tlet steps = 10;\n\t\t\t\tswitch (mapZoom) {\n\t\t\t\t\tcase 15:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 3 : 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 14:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 5 : 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 13:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 7 : 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 12:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 10 : 5;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 15 : 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 15 : 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 20 : 15;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 30 : 20;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 40 : 30;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 70 : 50;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 150 : 100;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 200 : 150;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// console.log({ mapZoom, steps });\n\t\t\t\tgpxInfo.distances.forEach((e, idx) => {\n\t\t\t\t\ttotalDistance += settings.imperial ? kmToMiles(e) : e;\n\t\t\t\t\tcurrentDistance += settings.imperial ? kmToMiles(e) : e;\n\t\t\t\t\tif (currentDistance >= steps) {\n\t\t\t\t\t\tcurrentDistance = 0;\n\t\t\t\t\t\tif (track[idx] && Array.isArray(track[idx])) {\n\t\t\t\t\t\t\tdistanceMarkers.push({\n\t\t\t\t\t\t\t\tlat: track[idx][1],\n\t\t\t\t\t\t\t\tlng: track[idx][0],\n\t\t\t\t\t\t\t\t// icon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\ttitle: Math.floor(totalDistance),\n\t\t\t\t\t\t\t\tbody: '',\n\t\t\t\t\t\t\t\t// color: wp.color,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n        // const mapChecked = darkmode ? 'OpenStreetMap.Dark' : 'OpenStreetMap.Mapnik';\n\t\tconst { isAdmin } = userStore;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div class={`${style.home} w-100 h-100 overflow-hidden position-relative`}\n\t\t\t\t\t// onTouchstart={mu.captureAllEvents}\n\t\t\t\t\t// onTouchend={mu.captureAllEvents}\n\t\t\t\t\tonTouchmove={mu.captureAllEvents}\n\t\t\t\t\tonScroll={mu.captureAllEvents}\n\t\t\t\t>\n\t\t\t\t\t<Map\n\t\t\t\t\t\t// key={mapId}\n\t\t\t\t\t\tbounds={bounds}\n\t\t\t\t\t\tref={this.mapRef}\n\t\t\t\t\t\t// onLoad={(e) => console.log(e)}\n\t\t\t\t\t\tonViewportChanged={this.handleViewportChanged}\n\t\t\t\t\t\tminZoom={minZoom}\n\t\t\t\t\t\tmaxZoom={maxZoom}\n\t\t\t\t\t\t// maxBounds={MAX_BOUNDS}\n\t\t\t\t\t\tcenter={center}\n\t\t\t\t\t\t// onClick={this.handleClick}\n\t\t\t\t\t\tonLocationfound={this.handleLocationFound}\n\t\t\t\t\t\t// onLayeradd={(e) => console.log(e)}\n\t\t\t\t\t\t// onOverlayadd={(e) => console.log(e)}\n\t\t\t\t\t\t// ref={(r) => { this.mapRef = r; }}\n\t\t\t\t\t\tzoom={zoom}\n\t\t\t\t\t\tzoomControl={showZoomControl}\n\t\t\t\t\t\tdoubleClickZoom={true}\n\t\t\t\t\t\tscrollWheelZoom={true}\n\t\t\t\t\t\tdragging={fullscreenMap || !L.Browser.mobile}\n\t\t\t\t\t\t// tap={fullscreenMap || !L.Browser.mobile}\n\t\t\t\t\t\t// tap={!L.Browser.mobile}\n\t\t\t\t\t\ttap={!L.Browser.mobile}\n\t\t\t\t\t\ttouchZoom={L.Browser.mobile ? 'center' : false}\n\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\teaseLinearity={0.35}\n\t\t\t\t\t\tstyle={`width: 100%; min-height: ${height}px; height: 100%;`} className='h-100'\n\t\t\t\t\t\tonOverlayadd={this.overlayAdd}\n\t\t\t\t\t\tonOverlayremove={this.overlayRemove}\n\t\t\t\t\t\twhenReady={this.whenReadyHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showLayersControl && <LayersControl position={layersControlPosition}>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === 'OpenStreetMap.Mapnik'} name='OpenStreetMap.Mapnik'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\t\turl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === 'OpenStreetMap.Dark'}name='OpenStreetMap.Dark'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.'\n\t\t\t\t\t\t\t\t\turl='https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\n\t\t\t\t\t\t\t{/* {['matrikkel_bakgrunn', 'topo4', 'topo4graatone', 'europa', 'toporaster3', 'sjokartraster', 'norges_grunnkart',\n\t\t\t\t\t\t\t'norges_grunnkart_graatone', 'egk', 'terreng_norgeskart', 'havbunn_grunnkart', 'bakgrunnskart_forenklet'].map(layer => <>\t\t\t\t\t\t\t */}\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket topo4`} name={`Norway Kartverket topo4`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo4&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket topo4graatone`} name={`Norway Kartverket topo4graatone`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo4graatone&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t{/* <BaseLayer checked={mapChecked === `Norway Kartverket terreng_norgeskart`} name={`Norway Kartverket terreng_norgeskart`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=terreng_norgeskart&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket norges_grunnkart`} name={`Norway Kartverket norges_grunnkart`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=norges_grunnkart&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket norges_grunnkart_graatone`} name={`Norway Kartverket norges_grunnkart_graatone`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=norges_grunnkart_graatone&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\n\t\t\t\t\t\t\t{/* <BaseLayer checked={mapChecked === `Google Satellite`} name={`Google Satellite`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Google Roadmap`} name={`Google Roadmap`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Google Satellite Text`} name={`Google Satellite Text`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.BlackAndWhite'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\t\turl='https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Carto'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/attribution\">CARTO</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Hikemap'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; wmflabs Hike & Bike'\n\t\t\t\t\t\t\t\t\turl='https://tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Hiking'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.'\n\t\t\t\t\t\t\t\t\turl=' http://{s}.tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t<Overlay checked name='Layer group with circles'>\n\t\t\t\t\t\t\t\t<LayerGroup>\n\t\t\t\t\t\t\t\t\t<Circle center={center} fillColor='blue' radius={200} />\n\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\tcenter={center}\n\t\t\t\t\t\t\t\t\t\tfillColor='red'\n\t\t\t\t\t\t\t\t\t\tradius={100}\n\t\t\t\t\t\t\t\t\t\tstroke={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<LayerGroup>\n\t\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\t\tcenter={circle2}\n\t\t\t\t\t\t\t\t\t\t\tcolor='green'\n\t\t\t\t\t\t\t\t\t\t\tfillColor='green'\n\t\t\t\t\t\t\t\t\t\t\tradius={100}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</LayerGroup>\n\t\t\t\t\t\t\t\t</LayerGroup>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Feature group'>\n\t\t\t\t\t\t\t\t<FeatureGroup color='purple'>\n\t\t\t\t\t\t\t\t\t<Popup>Popup in FeatureGroup</Popup>\n\t\t\t\t\t\t\t\t\t<Circle center={circle2} radius={200} />\n\t\t\t\t\t\t\t\t\t<Rectangle bounds={rectangle} />\n\t\t\t\t\t\t\t\t</FeatureGroup>\n\t\t\t\t\t\t\t</Overlay> */}\n\n\t\t\t\t\t\t\t{/* <Overlay name='Geoportal.gov.pl'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\tlayers={'Raster'}\n\t\t\t\t\t\t\t\t\tformat={'image/png'}\n\t\t\t\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\t\t\t\turl='http://mapy.geoportal.gov.pl/wss/service/img/guest/ORTO/MapServer/WMSServer?'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Wildfire'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\tlayers={'GWIS'}\n\t\t\t\t\t\t\t\t\tformat={'image/png'}\n\t\t\t\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\t\t\t\turl={'https://ies-ows.jrc.ec.europa.eu/gwis?language=eng&'}\n\t\t\t\t\t\t\t\t\tattribution={'European Commission, Joint Research Centre'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay> */}\n\n\n\t\t\t\t\t\t\t<Overlay name='Windspeed'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'wind_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\t// url={`https://tile.openweathermap.org/map/{layer}/{z}/{x}/{y}.png?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/WND/{z}/{x}/{y}?use_norm=false&opacity=0.25&palette=0:0073FF; 2:00AAFF; 3:4BD0D6; 6:8DE7C7; 12:B0F720; 25:F3363B; 50:C60000&arrow_step=64&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t{/* <Overlay checked name='Windspeed2'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\top={'WND'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`http://maps.openweathermap.org/maps/2.0/weather/{op}/{z}/{x}/{y}?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay> */}\n\t\t\t\t\t\t\t<Overlay name='Temperature'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'temp_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\t// url={`https://tile.openweathermap.org/map/{layer}/{z}/{x}/{y}.png?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/TA2/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Snow depth'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/SD0/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Precipitation'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/PA0/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t{isAdmin && <Overlay name='Atmospheric pressure'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/APM/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>}\n\t\t\t\t\t\t</LayersControl>}\n\n\t\t\t\t\t\t{/* {showFullscreenControl && <FullscreenControl position='topright' />} */}\n\n\t\t\t\t\t\t{showScaleControl && <ScaleControl\n\t\t\t\t\t\t\tmetric={true}\n\t\t\t\t\t\t\timperial={false}\n\t\t\t\t\t\t/>}\n\n\t\t\t\t\t\t{visibleLayers.Windspeed && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Wind speed, m/s</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0</div>\n\t\t\t\t\t\t\t\t\t\t<div>2</div>\n\t\t\t\t\t\t\t\t\t\t<div>3</div>\n\t\t\t\t\t\t\t\t\t\t<div>6</div>\n\t\t\t\t\t\t\t\t\t\t<div>12</div>\n\t\t\t\t\t\t\t\t\t\t<div>25</div>\n\t\t\t\t\t\t\t\t\t\t<div>50</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\t// background: rgba(0, 0, 0, 0) linear-gradient(to left, rgb(158, 128, 177), rgba(116, 76, 172, 0.9), rgb(164, 123, 170), rgba(170, 128, 177, 0.84), rgba(176, 128, 177, 0.71), rgba(170, 128, 177, 0.54), rgba(170, 128, 177, 0.44), rgba(255, 255, 0, 0)) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #0073FF,#00AAFF,#4BD0D6,#8DE7C7,#B0F720,#F0B800,#FB5515,#F3363B,#C60000) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers.Temperature && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Temperature, °C</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>-40</div><div>-20</div><div>0</div><div>20</div><div>40</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground-image: linear-gradient(to right, rgb(159, 85, 181) 0%, rgb(44, 106, 187) 8.75%, rgb(82, 139, 213) 12.5%, rgb(103, 163, 222) 18.75%, rgb(142, 202, 240) 25%, rgb(155, 213, 244) 31.25%, rgb(172, 225, 253) 37.5%, rgb(194, 234, 255) 43.75%, rgb(255, 255, 208) 50%, rgb(254, 248, 174) 56.25%, rgb(254, 232, 146) 62.5%, rgb(254, 226, 112) 68.75%, rgb(253, 212, 97) 75%, rgb(244, 168, 94) 82.5%, rgb(244, 129, 89) 87.5%, rgb(244, 104, 89) 93.75%, rgb(244, 76, 73) 100%);\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers.Precipitation && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Precipitation, mm/h</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0</div><div>0.5</div><div>1</div><div>2</div><div>4</div><div>6</div><div>7</div><div>10</div><div>12</div><div>14</div><div>16</div><div>24</div><div>32</div><div>60</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: rgba(0, 0, 0, 0) linear-gradient(to left, rgb(170, 43, 195), rgb(255, 0, 146), rgb(255, 0, 100), rgb(255, 0, 0), rgb(255, 91, 0), rgb(255, 150, 0), rgb(255, 205, 0), rgb(239, 248, 0), rgb(0, 70, 0), rgb(0, 90, 0), rgb(0, 160, 0), rgb(0, 211, 0), rgb(0, 250, 100), rgba(0, 0, 0, 0)) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers['Snow depth'] && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Snow depth (m)</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0.05</div>\n\t\t\t\t\t\t\t\t\t\t<div>0.4</div>\n\t\t\t\t\t\t\t\t\t\t<div>0.8</div>\n\t\t\t\t\t\t\t\t\t\t<div>1.8</div>\n\t\t\t\t\t\t\t\t\t\t<div>15</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #EDEDED, #D9F0F4, #A5E5EF, #7DDEED, #35D2EA, #00CCE8, #706DCE, #514FCC, #3333CC, #1818CC, #C454B7, #C12CB0, #BF00A8, #85408C, #7F2389, #790087, #E80068) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers['Atmospheric pressure'] && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Atmospheric pressure (hPa)</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>940</div>\n\t\t\t\t\t\t\t\t\t\t<div>980</div>\n\t\t\t\t\t\t\t\t\t\t<div>1010</div>\n\t\t\t\t\t\t\t\t\t\t<div>1040</div>\n\t\t\t\t\t\t\t\t\t\t<div>1080</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #0073FF,#00AAFF,#4BD0D6,#8DE7C7,#B0F720,#F0B800,#FB5515,#F3363B,#C60000) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\n\t\t\t\t\t\t{/* <ImageOverlay\n\t\t\t\t\t\t\turl='./assets/515-overlay-v2.png'\n\t\t\t\t\t\t\tbounds={[\n\t\t\t\t\t\t\t\t[52.056765505175235, 15.068457126617433],\n\t\t\t\t\t\t\t\t[52.04421634105194, 15.105557441711428],\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t{heatmap && heatmap.length > 0 && <HeatmapLayer\n\t\t\t\t\t\t\tfitBoundsOnLoad={!hasWaypoints}\n\t\t\t\t\t\t\tfitBoundsOnUpdate={false}\n\t\t\t\t\t\t\tpoints={heatmap}\n\t\t\t\t\t\t\tlongitudeExtractor={m => m[1]}\n\t\t\t\t\t\t\tlatitudeExtractor={m => m[0]}\n\t\t\t\t\t\t\tintensityExtractor={m => parseFloat(m[2])}\n\t\t\t\t\t\t/>}\n\n\t\t\t\t\t\t{showTrackProfile && <>\n\t\t\t\t\t\t\t{track && track.length > 0 && <ReactLeafletMultiOptionsPolyline\n\t\t\t\t\t\t\t\tref={this.polyRef}\n\t\t\t\t\t\t\t\tpositions={this.polylinetrackPointFactory(track)}\n\t\t\t\t\t\t\t\toptionIdxFn={this.polylineOptionIdxFn}\n\t\t\t\t\t\t\t\toptions={this.polylineOptions()}\n\t\t\t\t\t\t\t\tweight={7}\n\t\t\t\t\t\t\t\tlineCap='butt'\n\t\t\t\t\t\t\t\topacity={0.75}\n\t\t\t\t\t\t\t\tsmoothFactor={1}\n\t\t\t\t\t\t\t\tzoomAnimation={true}\n\t\t\t\t\t\t\t\tkey={`${mapColorMode}`}\n\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t{geoJSONs && geoJSONs.length > 0 && geoJSONs.map((gj, idx) => <GeoJSON\n\t\t\t\t\t\t\tdata={gj}\n\t\t\t\t\t\t\tstyle={() => this.geoJSONStyleList(idx)}\n\t\t\t\t\t\t/>)}\n\n\t\t\t\t\t\t{!skipGeojson && geojson && startMarker && <GeoJSON\n\t\t\t\t\t\t\tdata={geojson}\n\t\t\t\t\t\t\tstyle={this.geoJSONStyle}\n\t\t\t\t\t\t\tonEachFeature={this.onEachFeature}\n\t\t\t\t\t\t\tonAdd={zoomToMarkers && zoomToMarkers.length > 0 ? null : this.zoomToGeoJSON}\n\t\t\t\t\t\t/>}\n\n\n\t\t\t\t\t\t{startMarker && <Marker position={startMarker} icon={icons.get('marker')}>\n\t\t\t\t\t\t\t<Popup>\n\t\t\t\t\t\t\t\tStart position: {util.format(startMarker[0], 4)}, {util.format(startMarker[1], 4)}\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t</Marker>}\n\t\t\t\t\t\t{endMarker && <Marker position={endMarker} icon={icons.get('flag')}>\n\t\t\t\t\t\t\t<Popup>\n\t\t\t\t\t\t\t\tEnd position: {util.format(endMarker[0], 4)}, {util.format(endMarker[1], 4)}\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t</Marker>}\n\n\t\t\t\t\t\t{showDistanceMarkers && distanceMarkers && distanceMarkers.length > 0 && <>\n\t\t\t\t\t\t\t{distanceMarkers.length > 0 && distanceMarkers.map(wp => (\n\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getDistanceMarker({\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: darkmode ? '#333' : '#333',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t\t<h5>{wp.title}</h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t{waypoints3.length > 0 && waypoints3.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\ticon={icons.getSmallMarker({\n\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarker3Click({ ...wp, e })}\n\t\t\t\t\t\t\t\tzIndexOffset={100 + idx}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t<h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t</Popup> */}\n\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t{groupWaypoints ? <>\n\t\t\t\t\t\t\t<MarkerClusterGroup\n\t\t\t\t\t\t\t\tmaxClusterRadius={10}\n\t\t\t\t\t\t\t\ticonCreateFunction={createClusterCustomIcon}\n\t\t\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\t\t\tfitBoundsOnLoad={zoomToWaypoints}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{waypoints2.length > 0 && waypoints2.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\t\ticon={icons.getMarker({\n\t\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarker2Click({ ...wp, e })}\n\t\t\t\t\t\t\t\t\t\tzIndexOffset={200 + idx}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t\t\t<h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t\t\t</Popup> */}\n\t\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</MarkerClusterGroup>\n\t\t\t\t\t\t\t<MarkerClusterGroup\n\t\t\t\t\t\t\t\tmaxClusterRadius={10}\n\t\t\t\t\t\t\t\ticonCreateFunction={createClusterCustomIcon}\n\t\t\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\t\t\tfitBoundsOnLoad={zoomToWaypoints}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{waypoints.length > 0 && waypoints.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\t\ticon={icons.getRaceMarker({\n\t\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\t\trank: wp.rank,\n\t\t\t\t\t\t\t\t\t\t\tspeed: wp.speed,\n\t\t\t\t\t\t\t\t\t\t\tbearing: wp.bearing,\n\t\t\t\t\t\t\t\t\t\t\temail: wp.email,\n\t\t\t\t\t\t\t\t\t\t\timage: wp.image,\n\t\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\t\t\ticonWidth: 170,\n\t\t\t\t\t\t\t\t\t\t\ticonAnchorX: (idx % 2 === 0 ? 7 : 163),\n\t\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarkerClick({ ...wp, e })}\n\t\t\t\t\t\t\t\t\t\tzIndexOffset={300 + idx}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}> */}\n\t\t\t\t\t\t\t\t\t\t\t{/* <h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} /> */}\n\t\t\t\t\t\t\t\t\t\t{/* </Popup> */}\n\t\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</MarkerClusterGroup>\n\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t{waypoints2.length > 0 && waypoints2.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getMarker({\n\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\t\ticonHeight: 20,\n\t\t\t\t\t\t\t\t\t\ticonAnchorX: 7,\n\t\t\t\t\t\t\t\t\t\ticonAnchorY: 7,\n\t\t\t\t\t\t\t\t\t\tdotWidth: 14,\n\t\t\t\t\t\t\t\t\t\tdotHeight: 14,\n\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarker2Click({ ...wp, e })}\n\t\t\t\t\t\t\t\t\tzIndexOffset={200 + idx}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t\t<h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t\t</Popup> */}\n\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{waypoints.length > 0 && waypoints.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getRaceMarker({\n\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\tspeed: wp.speed,\n\t\t\t\t\t\t\t\t\t\tbearing: wp.bearing,\n\t\t\t\t\t\t\t\t\t\trank: wp.rank,\n\t\t\t\t\t\t\t\t\t\temail: wp.email,\n\t\t\t\t\t\t\t\t\t\timage: wp.image,\n\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\t\ticonWidth: 170,\n\t\t\t\t\t\t\t\t\t\ticonAnchorX: (idx % 2 === 0 ? 7 : 163),\n\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.handleMarkerClick({ ...wp, e })}\n\t\t\t\t\t\t\t\t\tzIndexOffset={300 + idx}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}> */}\n\t\t\t\t\t\t\t\t\t\t{/* <h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} /> */}\n\t\t\t\t\t\t\t\t\t{/* </Popup> */}\n\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>}\n\t\t\t\t\t</Map>\n\n\t\t\t\t\t{/* {showSearch && <div class='position-absolute' style='bottom: 20px; right: 5px; z-index: 999999;'>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-info' onClick={this.zoomToAllMarkers}><i class='fas fa-search' /></button>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-success ml-1' onClick={this.zoomToFavoriteMarkers}><i class='fas fa-search-location' /></button>\n\t\t\t\t\t</div>} */}\n\t\t\t\t\t<div class='position-absolute' style='bottom: 20px; right: 5px; z-index: 999999;'>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-info' onClick={this.zoomToAllMarkers}><i class='fas fa-search' /></button>\n\t\t\t\t\t</div>\n\n\n\n\t\t\t\t</div>\n\t\t\t\t{showRange && range && range.length > 0 && <>\n\t\t\t\t\t<div class='mb-4'>\n\t\t\t\t\t\t<div class='float-right mt-1'>\n\t\t\t\t\t\t\t<div class='px-1 py-0 float-left' style='line-height: 0.8em;'>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t{util.format(mapRangeMin, 0)}<span class='text-muted'>{mapColorMode === 'speed' ? 'km/t' : '%'}</span>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{range && range.length > 0 && range.map((val, idx) => (\n\t\t\t\t\t\t\t\t<div class='float-left'>\n\t\t\t\t\t\t\t\t\t<div style={`background-color: ${colors[idx].color}; height: 13px; width: 10px;`} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<div class='px-1 py-0 float-left' style='line-height: 0.8em;'>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t{util.format(mapRangeMax, 0)}<span class='text-muted'>{mapColorMode === 'speed' ? 'km/t' : '%'}</span>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div class='float-right mt-1 clearfix'>\n\t\t\t\t\t\t\t<button class='btn btn-link' onClick={this.showSpeed}>Show speed</button>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNotifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    subscribeNotificationTopic = async (field) => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { notificationTopics = {} } = user;\n        const value = 1;\n        await userStore.setNotificationTopic({\n            field: `notificationTopics.${field}`,\n            value,\n        });\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { notificationTopics = {} } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const topic = `race-${race.id}`;\n        if (notificationTopics && notificationTopics[topic]) {\n            return '';\n        }\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <button class='btn btn-block btn-info btn-lg' onClick={() => this.subscribeNotificationTopic(topic)}>\n                        <i class='fas fa-bell' /> <Text id='race.notifications'>Subscribe to race notifications</Text>\n                    </button>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailNotifications;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveAddResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: {},\n            message: '',\n        };\n        this.updateTimer = {};\n    }\n\n    addResult = async (e) => {\n\t\tconst { raceStore, appState } = this.props.stores;\n        const { direction, classid } = e.target.closest('button').dataset;\n        const { checkpointId, selectedClassIds = [] } = appState;\n\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { result } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n\t\tawait raceStore.addResult({\n\t\t\tid: raceid,\n\t\t\tclassId: classid,\n\t\t\tnewResult: {\n                direction,\n                checkpoint: checkpointId,\n                timestamp: new Date(),\n                ...result,\n\t\t\t}\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.setState({\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n            message: `Added ${result.bib} with ${result.dogs} dogs ${direction} ${direction === 'in' ? 'to' : 'of'} checkpoint ${selectedCheckpoint.name}.`,\n        });\n\n        clearTimeout(this.updateTimer.message);\n        this.updateTimer.message = setTimeout(async () => {\n\t\t\tthis.setState({\n                message: '',\n            });\n\t\t}, 3000);\n\t}\n\n    editResult = (e) => {\n        const { raceStore, appState } = this.props.stores;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: classid,\n            resultId: resultid,\n\t\t\t[`raceClassResult${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\tawait raceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.localUpdateSignup(field, value);\n\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t\t}, 500);\n    }\n\n    deleteResult = async () => {\n        const { selectedResult } = this.state;\n        const { appState, raceStore } = this.props.stores;\n\n        const { race } = raceStore;\n        const raceid = race.id;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: currentClass.id,\n            resultId: selectedResult,\n\t\t\traceClassResultDelete: 1,\n\t\t};\n        await raceStore.editClass({\n            id: raceid,\n            data,\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.doneEditResult();\n    }\n\n    selectCheckpoint = (e) => {\n        const checkpointId = e.target.closest('button').dataset.id;\n        const { appState } = this.props.stores;\n        appState.selectCheckpoint(checkpointId)\n    }\n\n    toggleTimestamp = () => {\n        const { showTimestamp, result } = this.state;\n\n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedMusher = currentClass.contestants ? currentClass.contestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp'])).reverse().filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        const lastTimestamp = lastResults && lastResults[0] ? lastResults[0].timestamp : (selectedMusher && selectedMusher.startTime ? selectedMusher.startTime : currentClass.startDate);\n\n        result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n\n        this.setState({\n            showTimestamp: !showTimestamp,\n            result,\n        });\n    }\n\n    doneEditResult = () => {\n        this.setState({\n            selectedResult: '',\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n        });\n    }\n\n    selectResult = (e) => {\n        const resultid = e.target.closest('.resultLine').dataset.resultid;\n        this.setState({\n            selectedResult: resultid,\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n        //     const { currentClass } = this.props;\n        //     const { raceStore } = this.props.stores;\n        //     const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        //     raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        // }\n\t}\n\n    componentDidMount() {\n        this.doneEditResult();\n\t}\n\n    render() {\n        const { result, showTimestamp, message, selectedResult } = this.state;\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n        const currentResult = currentClass.results ? currentClass.results.find(e => e.id === selectedResult) : {};\n\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n\n        return (<>\n            <div class='mt-5' style='height: 70vh;'>\n                <h1>Admin timing - {currentClass.title}</h1>\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n\n                        {currentClass.checkpoints && currentClass.checkpoints.slice().sort(fieldSorter(['sortOrder'])).map((currentCheckpoint, idx) => <>\n                            <div class='col px-0 pt-2'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === currentClass.checkpoints.length - 1 && 'rounded-pill-right'} rounded-none ${checkpointId === currentCheckpoint.id ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.selectCheckpoint}\n                                    data-id={currentCheckpoint.id}\n                                >\n                                    {currentCheckpoint.name}\n                                </button>\n                            </div>\n                        </>)}\n\n                    </div>\n                </div>\n                <div class='w-100 overflow-hidden'>\n                    {selectedCheckpoint && <>\n                        <h3>\n                            {selectedMusher && <><i class='fas fa-user text-muted' /> {selectedMusher.firstname} {selectedMusher.lastname}</>}\n                        </h3>\n\n                        {currentResult ? <>\n                            {['bib', 'dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={currentResult[field]}\n                                        onInput={this.editResult}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['timestamp'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={util.isoDate(currentResult[field], false, false, false)}\n                                        onInput={this.editResult}\n                                    />\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                </div>\n                            </>)}\n\n                            <button class='btn btn-lg btn-danger float-left' onClick={this.deleteResult}>\n                                Delete\n                            </button>\n                            <button class='btn btn-lg btn-info float-right' onClick={this.doneEditResult}>\n                                Done\n                            </button>\n                        </> : <>\n                            {/* bib: String,\n                            position: [],\n                            checkpointIn: String,\n                            checkpointOut: String,\n                            dogs: Number,\n                            timestamp: Date,\n                            addedByUser: Number, */}\n                            {['bib'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {showTimestamp ? <>\n                                {['timestamp'].map(field => <>\n                                    <div class='form-group'>\n                                        <label for={field}>{field}</label>\n                                        <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                            onInput={linkstate(this, `result.${field}`)}\n                                            value={result[field]}\n                                        />\n                                        <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                    </div>\n                                </>)}\n                            </> : <>\n                                <div class='form-group'>\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Show timestamp</button>\n                                </div>\n                            </>}\n\n\n                            {isCheckedIn && isCheckedOut && <>\n                                <div class='alert alert-warning my-2' role='alert'>\n                                    <i class='fas fa-exclamation-triangle' />\n                                    {selectedMusher && <>{selectedMusher.firstname} {selectedMusher.lastname}</>} Has checked in and out of this checkpoint!\n                                </div>\n                            </>}\n\n                            <div class='d-flex justify-content-between'>\n                                <button class='btn btn-lg btn-success float-left' onClick={this.addResult} data-direction='in' data-classid={currentClass.id} disabled={isCheckedIn ? 'disabled' : ''}>\n                                    CP In <i class='fas fa-sign-in-alt ml-2' />\n                                </button>\n                                <div class='text-center'>\n                                    <h3><i class='fas fa-campground text-muted' /> {selectedCheckpoint.name}</h3>\n                                </div>\n                                <button class='btn btn-lg btn-info float-right' onClick={this.addResult} data-direction='out' data-classid={currentClass.id} disabled={isCheckedOut ? 'disabled' : ''}>\n                                    <i class='fas fa-sign-out-alt mr-2' /> CP Out\n                                </button>\n                            </div>\n                        </>}\n\n                    </>}\n                </div>\n                {message && <div class='alert alert-success mt-3' role='alert'>\n                    {message}\n                </div>}\n\n                <div class='overflow-hidden mb-5 mt-3'>\n                    {lastResults && lastResults.map(res => {\n                        const currentCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === res.checkpoint) : null;\n                        const requiredRestMin = res.direction === 'in' && currentCheckpoint.requiredRestMinutes ? (\n                            currentCheckpoint.timeEqualization ? selectedMusher.timeEqualization + currentCheckpoint.requiredRestMinutes : currentCheckpoint.requiredRestMinutes\n                        ) : null;\n                        const firstOutTime = new Date(new Date(res.timestamp).getTime() + requiredRestMin * 60000);\n                        return (<>\n                            <div\n                                class='d-flex justify-content-between resultLine'\n                                data-resultid={res.id}\n                                onClick={this.selectResult}\n                            >\n                                <div class=''>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-clock' /></span> {util.formatDate(res.timestamp, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </nobr>\n                                </div>\n                                <div class='flex-grow-1'>\n                                    <span class='text-muted ml-3'>\n                                        {res.direction === 'in' && <>\n                                            <i class='fas fa-sign-in-alt mr-2 text-success' />\n                                        </>}\n                                        {res.direction === 'out' && <>\n                                            <i class='fas fa-sign-out-alt mr-2 text-primary' />\n                                        </>}\n                                        {res.direction === 'scratched' && <>\n                                            <i class='fas fa-times mr-2 text-danger' />\n                                        </>}\n                                    </span>\n                                    {currentCheckpoint.name}\n                                    {requiredRestMin && <>\n                                        <div>\n                                            {selectedMusher.timeEqualization ? <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} + {selectedMusher.timeEqualization} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </> : <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </>}\n                                        </div>\n                                    </>}\n                                </div>\n                                <div class='px-0'>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-dog ml-3' /></span> {res.dogs}<br />\n                                    </nobr>\n                                </div>\n                            </div>\n                        </>);\n                    })}\n                </div>\n\n                <div class='d-flex justify-content-center mt-3 mb-5'>\n                    <button class='btn btn-sm btn-block btn-danger' onClick={this.addResult} data-direction='scratched' data-classid={currentClass.id} disabled={isScratched ? 'disabled' : ''}>\n                        Scratch <i class='fas fa-times ml-2' />\n                    </button>\n                </div>\n\n            </div>\n        </>);\n    }\n}\n\nexport default RaceLiveAddResult;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport mu from '../../lib/musher-util';\n\nconst STOP_STATUSES = [2, 9];\nconst WARN_STATUSES = [4, 8];\n\n\nfunction getFatigueLevel(wo, dog) {\n    if (dog) {\n        if (STOP_STATUSES.indexOf(dog.status) > -1) {\n            return 'danger';\n        } else if (WARN_STATUSES.indexOf(dog.status) > -1) {\n            return 'warning';\n        }\n    }\n    if (wo) {\n        if (wo.distanceKm > 50) {\n            return 'danger';\n        } else if (wo.distanceKm > 30) {\n            return 'warning';\n        }\n    }\n    return 'success';\n}\n\n@observer\nclass Dog extends Component {\n    render() {\n        const { \n            dog = {},\n            dogs = [],\n            showTeam,\n            showInfo,\n            showName = true,\n            showPosition = true,\n            showAge = false,\n            className,\n            size,\n            onDogClick = () => {},\n        } = this.props;\n\t\tconst { userStore } = this.props.stores;\n        const { isAdmin, user } = userStore;\n        const { language = 'en' } = user;\n\n        const dogPosition = userStore.findDogposition({ position: dog.position, language });\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = Math.ceil(mu.daysUntilNextBirthday(dog.birth));\n\n        let containerWidth = '92px';\n        let imageClasses = '';\n        let fontSize = '35px';\n        if (size === 'small') {\n            containerWidth = '50px';\n            imageClasses = 'imageRoundedSmall';\n            fontSize = '20px';\n        } else if (size === 'medium') {\n            containerWidth = '60px';\n            imageClasses = 'imageRoundedMedium';\n            fontSize = '25px';\n        }\n\n        return (\n            <div class={`mb-2 position-relative ${className} clearfix`} style={`width: ${containerWidth}`}\n                onTouchstart={(e) => { e.stopPropagation(); }}\n                onTouchend={(e) => { e.stopPropagation(); }}\n                onTouchmove={(e) => { e.stopPropagation(); }}\n            >\n                {/* {JSON.stringify(dog, null, 4)} */}\n                {showPosition && dogPosition && <small class='position-absolute' style='left:0px; top: 50px;'>\n                    <span class={`badge badge-${dogPosition.class || 'primary'} mr-3`}>{dogPosition.icon && <i class={dogPosition.icon} />} {dogPosition.name}</span>\n                </small>}\n                <div\n                    class={`text-center border rounded-circle imageRounded ${imageClasses} mx-auto text-muted pt-2`}\n                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                >\n                    {/* {!dog.image && <i class='fas fa-dog mt-3' style='font-size: 40px;' />} */}\n                    {!dog.image && <span class='font-weight-lighter' style={`font-size: ${fontSize};`}>{util.ucfirst(dog.name, true)}</span>}\n                </div>\n                <div class='text-center text-overflow' style='line-height: 1.0em;'>\n                    <small>\n                        {/* <span class='float-right'>\n                            {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                            {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                        </span> */}\n                        <a href={`/dogs/public/${dog.uuidv4}`} onClick={(e) => onDogClick(e, dog.uuidv4, dogs)} class='stretched-link'>\n                            {showName && <>\n                                <span class='mb-1 font-weight-light'>\n                                    <nobr>\n                                        {dog.shortname || dog.name}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </nobr>\n                                </span>\n                            </>}\n                        </a>\n                    </small>\n                </div>\n                <div class='text-center text-overflow' style='line-height: 1.0em;'>\n                    <small>\n                        {dog.birth && showAge && <>\n                            <span class='float-right'>\n                                {/* {daysUntilBirthday < 7 && <>\n                                    <span class='text-muted mr-2'>\n                                        <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                    </span>\n                                </>}                                 */}\n                                {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                            </span>\n                        </>}\n\n                        {showTeam && <><span class='font-weight-light'>{userStore.findTeam(dog.team)}</span><br /></>}\n\n                        {showInfo && <small class='text-muted'>\n                            {dog.weight && <><i class='fas fa-balance-scale ml-2' /> {util.format(dog.weight, 1)} kg</>}\n                            {dog.bodyScore && <><i class='fas fa-dog ml-2' /> {util.format(dog.bodyScore, 1)}</>}\n                        </small>}\n\n                    </small>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dog;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value);\n        }, 1000);\n    }\n\n    async doUpdateField(id, name, value) {\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), name, value);\n    }\n\n    render() {\n        const { storyBody, storyType } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        return (<>\n            <div class='d-flex bd-highlight'>\n                <div class='p-0 w-100 bd-highlight'>\n                    <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                    <div class='border rounded rounded-lg position-relative'>\n                        <Localizer>\n                            <textarea\n                                class='form-control-plaintext px-2'\n                                type='text'\n                                placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                onInput={linkState(this, 'storyBody')}\n                                // onKeyUp={mu.resizeTextarea}\n                                onFocus={mu.resizeTextarea}\n                                style='height: 2.3em;'\n                                value={storyBody || story.body}\n                            />\n                        </Localizer>\n                    </div>\n\n                    <div class='position-relative mt-3'>\n                        {isAdmin && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <label>Pinned to top:</label>\n                                        <input\n                                            type='checkbox'\n                                            id={story.id}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                        />\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                    <button type='button' class='btn btn-primary mb-2'\n                        onClick={this.saveStory}\n                        data-id={story.id}\n                    ><i class='fas fa-paper-plane' /></button>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>                    \n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                            {showEdit[story.id] && <>\n                                <StoryEditInline\n                                    stores={this.props.stores}\n                                    story={story}\n                                    key={`story-edit-${story.id}`}\n                                    callback={this.doneEdit}\n                                />\n                            </>}\n                            {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                            </div>}\n                        </div>\n                    </div>\n\n                    {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='mr-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='story'\n                                onTeamClick={onTeamClick}\n                                onUserClick={onUserClick}\n                            />\n                        </div>\n                        {views > 0 && <>\n                            <div>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={story}\n                                    type='story'\n                                    isTeamAdmin={isTeamAdmin}\n                                    isAdmin={isAdmin}\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                        </>}\n                    </div>\n\n                    {showTeamSetting[story.id] && <>\n                        <small>\n                            <div class='alert alert-info' role='alert'>\n                                <span class='display-4 float-left'>\n                                    <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                </span>\n                                <p>\n                                    <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                </p>\n                                <p>\n                                    <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                </p>\n                                <p>\n                                    <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                </p>\n                            </div>\n                        </small>\n                    </>}\n\n                    <div>\n                        <div class='row'>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                    data-id={story.id}\n                                    onClick={this.likeStory}\n                                >\n                                    <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                </button>\n                            </div>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                    data-id={story.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                </button>\n                            </div>\n                            {hasShareApi ? <>\n                                <div class='col text-center'>\n                                    <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        onClick={this.shareLink}\n                                        data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        data-title={`title: ${story.title}`}\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </button>\n                                </div>\n                            </> : <>\n                                <div class='col text-center'>\n                                    <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        data-native\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </a>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n\n                    <div class='mt-2'>\n                        <StoryComments\n                            stores={this.props.stores}\n                            story={story}\n                            col='10'\n                            offset='2'\n                            compact={false}\n                            showAllComments={showAllComments}\n                            initCall={this.closeAllAddComments}\n                        />\n                        {showAddComment[story.id] && <StoryAddComment\n                            stores={this.props.stores}\n                            story={story}\n                            inputRef={c => this.inputRef[story.id] = c}\n                            inputRefObject={this.inputRef}\n                            col='10'\n                            offset='2'\n                            key={`story-comment-${story.id}`}\n                        />}\n                    </div>\n\n                {/* </div> */}\n\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailUserImages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceUserImage: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\taddRaceUserImage = async () => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceUserImage } = this.state;\n\t\tawait raceStore.addUserImage({ id: raceid, newUserImage: newRaceUserImage });\n\t\tthis.setState({\n\t\t\tnewRaceUserImage: {},\n\t\t});\n\t}\n\n\tupdateUserImageUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceUserImage } = this.state;\n\t\tnewRaceUserImage[field] = value;\n\t\tthis.setState({ newRaceUserImage });\n\t}\n\n\tremoveRaceUserImage = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeUserImage({\n\t\t\tid: raceid,\n\t\t\tuserImageId: id,\n\t\t});\n\t}\n\n\teditRaceUserImage = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceUserImageId: id,\n\t\t\t[`raceUserImage${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editUserImage({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceUserImage = {} } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const tags = ['photos'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: Images](/app-races/${race.id}/userImages)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.user-images'>User images</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.userImages && race.userImages.reverse().map(currentUserImage => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                {isAdmin && <>\n                                    <button class='btn btn-danger position-absolute' style='top:5px; right: 5px;' data-id={currentUserImage.id} onClick={this.removeRaceUserImage}>\n                                        <i class='fas fa-times' />\n                                    </button>\n                                </>}\n\n                                <div class='clearfix'>\n                                    <img src={currentUserImage.image.s3LargeLink} class='img-fluid rounded-lg mb-2' />\n                                </div>\n                                <div class='clearfix'>\n                                    <h5 class='mb-0'>{currentUserImage.title}</h5>\n                                    <small class='text-muted'> {util.formatDate(currentUserImage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentUserImage.body, currentUserImage.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin UserImage Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group '>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                        {isAdmin && <>\n                            <div class='col-12 border rounded-lg m-2 p-3 bg-light'>\n                                <h5>Add new user image</h5>\n                                <div class='row'>\n                                    <div class='col'>\n                                        {newRaceUserImage && newRaceUserImage.image && <img src={newRaceUserImage.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n                                        {['title'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                        {['body'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    onKeyUp={this.resizeTextarea}\n                                                    style='height: 3em;'\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                    </div>\n                                </div>\n                                <Images saved={{}} object={{}} field={'image'} updateField={this.updateUserImageUpload} autoOpen={false} />\n                                <button class='btn btn-info' onClick={this.addRaceUserImage}>Add race user image</button>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailUserImages;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport MusherInfoHeader from '../races/musherInfoHeader';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveMusherResult extends Component {\n    render() {\n        const { bib, onClickNav = () => {} } = this.props;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(bib, 10)) : null;\n        selectedMusher = selectedMusher ? selectedMusher : {};\n        const selectedMusherIdx = sortedContestants ? sortedContestants.findIndex(e => e.bib === parseInt(bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(bib, 10)) : null;\n\n        const team = raceStore.getTeamById(selectedMusher.team);\n        const user = team.members ? team.members.find(m => m.email === selectedMusher.email) : {};\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(selectedMusher);\n\n        let lastResOut;\n        let lastResIn;\n        let totalDistance = 0;\n        let totalMovingTime = 0;\n        let totalInCpTime = 0;\n        let lastEstTimeOut = currentClass.startDate;\n\n        const nextBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx + 1] ? sortedContestants[selectedMusherIdx + 1].bib : null;\n        const prevBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx - 1] ? sortedContestants[selectedMusherIdx - 1].bib : null;\n\n        const locale = 'en-GB';\n\n        return (<>\n            {nextBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextBib)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevBib)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <MusherInfoHeader\n                stores={this.props.stores}\n                contestant={selectedMusher}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n                onClickNav={onClickNav}\n                rank={selectedMusherIdx + 1}\n            >\n                {/* {\n                    \"id\": \"305e720b-12bc-4be3-8244-47a2529c1a26\",\n                    \"user\": 679,\n                    \"Løp\": \"Finnmarksløpet 1200\",\n                    \"bib\": 32,\n                    \"firstname\": \"Thomas\",\n                    \"lastname\": \"Wærner\",\n                    \"cellphone\": \"48176051\",\n                    \"email\": \"thomas.waerner@icloud.com\",\n                    \"country\": \"NO\",\n                    \"flag\": \"🇳🇴\",\n                    \"team\": 2278,\n                    \"startTime\": \"2019-03-08T18:32:00.000Z\",\n                    \"maxStartTime\": 1552071480000,\n                    \"startEpoch\": 1552069920000,\n                    \"timeEqualization\": 26,\n                    \"cpId\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                    \"cpDirection\": \"out\",\n                    \"cpDogs\": 13,\n                    \"cpTimestamp\": \"2019-03-13T00:08:00.000Z\",\n                    \"cpSortOrder\": 8\n                } */}\n                {/* [\n                    {\n                        \"position\": [],\n                        \"id\": \"d9f3d1b6-55e0-4185-b051-e96f1d4eaead\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"out\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-13T00:08:00.000Z\"\n                    },\n                    {\n                        \"position\": [],\n                        \"id\": \"1503b852-3a61-4b91-8323-5e4f862c4399\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"in\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-12T19:49:00.000Z\"\n                    }, */}\n                    {/* {\n                        \"position\":[],\n                        \"polygon\":[],\n                        \"id\":\"fa914e06-c56c-4b5b-9719-2dc6ee12c05d\",\n                        \"name\":\"Jergul\",\n                        \"distanceFromStart\":101,\n                        \"sortOrder\":3,\n                        \"distanceFromPrev\":101,\n                        \"estTimeToCpMinutes\":484\n                    } */}\n\n                    {/* <h3>RaceLiveMusherResult</h3> */}\n                    {/* <h5>{bib} {selectedMusher.lastname}</h5> */}\n                    {/* <xmp>{JSON.stringify(team.imageHeader, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(user, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(image, null, 4)}</xmp> */}\n                <div class='table-responsive'>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Checkpoint</th>\n                                <th class='text-center'>In</th>\n                                <th class='text-center'>Out</th>\n                                <th class='text-center'>Moving time</th>\n                                <th class='text-center'>Avg speed</th>\n                                <th class='text-center'>Total moving time</th>\n                                <th class='text-center'>Rest</th>\n                                <th class='text-center'>Total rest</th>\n                                <th class='text-center'>% rest</th>\n                                <th class='text-center'>Distance</th>\n                                <th class='text-center'>Total distance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {checkpoints && checkpoints.slice().sort(fieldSorter(['sortOrder'])).map((cp, cpIdx) => {\n                                const resIn = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'in') || {};\n                                const resOut = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'out') || {};\n                                const resScratched = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'scratched') || {};\n                                let timeInCp = 0;\n                                if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                    timeInCp = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                }\n                                let movingTime = 0;\n                                if (lastResOut && resIn && lastResOut.timestamp && resIn.timestamp) {\n                                    movingTime = mu.deltaSec(lastResOut.timestamp, resIn.timestamp);\n                                }\n\n                                let hasBeenInCp = false;\n                                let avgSpeed = 0;\n                                if (resIn && resIn.timestamp) {\n                                    hasBeenInCp = true;\n                                    avgSpeed = cp.distanceFromPrev / (movingTime / 3600);\n                                }\n                                totalDistance += cp.distanceFromPrev ? parseInt(cp.distanceFromPrev, 10) : 0;\n                                totalMovingTime += movingTime ? movingTime : 0;\n                                totalInCpTime += timeInCp ? timeInCp : 0;\n                                const percentRest = totalInCpTime / totalMovingTime * 100;\n\n                                let line;\n                                if (hasBeenInCp) {\n                                    let estTimeOut;\n                                    let estRest;\n                                    if (!resOut || !resOut.timestamp) {\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = 180 * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(resIn.timestamp, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n\n                                    line = (<>\n                                        <tr>\n                                            <td><nobr>{cp.name}</nobr></td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resIn.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resIn.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    <i class='fas fa-dog text-muted ml-2' /> {resIn.dogs}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut.timestamp && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resOut.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resOut.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    <i class='fas fa-dog text-muted ml-2' /> {resOut.dogs}\n                                                </nobr>}\n                                                {!resScratched.timestamp && estTimeOut && <nobr class='text-muted font-weight-lighter'>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                                {resScratched.timestamp && <nobr class='text-danger'>\n                                                    <i class='fas fa-times' />\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resScratched.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resScratched.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(movingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(totalMovingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <>                                                \n                                                    {estRest > 0 ? <>\n                                                        <nobr class='text-muted font-weight-lighter'>\n                                                            {util.secToHms(estRest, true)}\n                                                        </nobr>\n                                                    </> : <>\n                                                        <nobr>\n                                                            {util.secToHms(timeInCp, true)}\n                                                        </nobr>\n                                                    </>}                                                \n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(totalInCpTime, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {util.format(percentRest || 0, 0)} <span class='text-muted font-weight-lighter'>%</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {totalDistance} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                        </tr>\n                                    </>);\n                                    if (resOut && resOut.timestamp) {\n                                        lastEstTimeOut = resOut.timestamp;\n                                    }\n                                } else {\n                                    let estTimeIn;\n                                    let estTimeOut;\n                                    let estRest;\n                                    let estTimeToNext = cp.estTimeToCpMinutes || 0;\n                                    if (lastEstTimeOut) {\n                                        estTimeIn = mu.addDeltaSec(lastEstTimeOut, estTimeToNext * 60);\n                                        // requiredRestMinutes: Number,\n                                        // estTimeToCpMinutes: Number,\n                                        // timeEqualization: Number,\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = (cp.estRestMinutes || 180) * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(estTimeIn, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n                                    avgSpeed = cp.distanceFromPrev / (estTimeToNext * 60 / 3600);\n                                    line = (\n                                        <tr>\n                                            <td>{cp.name}</td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && estTimeIn && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isFinishLine && estTimeOut && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(cp.estTimeToCpMinutes * 60, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && !cp.isFinishLine && <nobr>\n                                                    {util.secToHms(estRest, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                        </tr>\n                                    );\n                                }\n                                lastResOut = resOut;\n                                lastResIn = resIn;\n                                return line;\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n\n                {/* <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(currentClass, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(lastResults, null, 4)}</xmp> */}\n            </MusherInfoHeader>\n        </>);\n    }\n}\n\nexport default RaceLiveMusherResult;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNews extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceArticle: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    addRaceArticle = async () => {\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceArticle } = this.state;\n\t\tawait raceStore.addArticle({ id: raceid, newArticle: newRaceArticle });\n\t\tthis.setState({\n\t\t\tnewRaceArticle: {},\n\t\t});\n\t}\n\n    editRaceArticle = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceArticleId: id,\n\t\t\t[`raceArticle${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editArticle({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    removeRaceArticle = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeArticle({\n\t\t\tid: raceid,\n\t\t\tarticleId: id,\n\t\t});\n\t}\n\n    updateArticleUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceArticle } = this.state;\n\t\tnewRaceArticle[field] = value;\n\t\tthis.setState({ newRaceArticle });\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceArticle } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const tags = ['news'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: News](/app-races/${race.id}/news)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.news'>Nyheter</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.articles && race.articles.reverse().map(currentArticle => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                <h5 class='mb-0'>{mu.replaceImages(currentArticle.title, race.images, language, false)}</h5>\n                                <small class='text-muted'> {util.formatDate(currentArticle.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                {currentArticle.image && <img src={currentArticle.image.s3LargeLink} class='float-right w-50 rounded-lg ml-2' />}\n                                <div class='font-weight-bold'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin News Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['ingress', 'body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n                {isAdmin && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                        <h5>Add new article</h5>\n                        {newRaceArticle && newRaceArticle.image && <img src={newRaceArticle.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n\n                        {['title'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        {['ingress', 'body'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    onKeyUp={this.resizeTextarea}\n                                    style='height: 3em;'\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        <Images saved={{}} object={{}} field={'image'} updateField={this.updateArticleUpload} autoOpen={false} />\n                        <button class='btn btn-info' onClick={this.addRaceArticle}>Add race article</button>\n                    </div>\n                </>}\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailNews;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceCommentReply extends Component {\n    commentRace = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await raceStore.commentReplyRace({ id: race.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ race, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-reply'>Write a reply...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        onFocus={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RaceCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport RaceComments from '../public/race/comments';\nimport RaceAddComment from '../public/race/commentAdd';\nimport RaceText from '../public/race/raceText';\nimport Images from '../../components/form/images';\nimport LikesAndComments from '../../components/feedback/likesAndComments';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nimport RaceResults from './results';\nimport RaceNews from './news';\nimport RaceSignup from './signup';\nimport RaceClasses from './classes';\nimport RaceMushers from './mushers';\nimport RaceUserImages from './userImages';\nimport RaceTracking from './tracking';\nimport RaceNotifications from './notifications';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nconst initialState = {\n\tisLoading: false,\n    showAdminSendMessage: {},\n\tnewRaceArticle: {},\n\tnewRaceUserImage: {},\n\tmessage: {\n\t\tsubject: '',\n\t\tbody: '',\n\t},\n};\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {\n            // relevant: 1,\n        };\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    scrollRaces = (e) => {\n        // scrollHeight: 705\n        // scrollLeft: 564\n        // scrollTop: 0\n        // scrollWidth: 1692\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const step = clientWidth;\n        const raceIdx = scrollLeft / step;\n\n        const nearestInt = Math.round(raceIdx);\n        const diff = Math.abs(nearestInt - raceIdx);\n        // console.log({ e, step, raceIdx, scrollLeft, scrollWidth, clientWidth, nearestInt, diff });\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(raceIdx) || diff < 0.5) {\n            this.setState({\n                raceIdx: nearestInt,\n            });\n        }\n    }\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    back = () => {\n        route(`/`);\n    }\n\n\trender() {\n\t\tconst { userStore, raceStore, newsStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { races = [] } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode } = appState;\n\t\tconst { showNews, hideRaces, raceIdx } = this.state;\n\n        const today = new Date();\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='row m-0'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-1 mb-2 p-0 text-center'>\n                        <h5><Text id='races.all-races'>All Races</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-1 mb-2 p-0'>\n                        <div class='row'>\n                            {races && races.reverse().map((race, idx) =>  {\n                                let status = '';\n                                if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                                    status = 'race';\n                                } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                                    status = 'signup';\n                                } else if (today > new Date(race.endDate)) {\n                                    status = 'done';\n                                }\n                                return (<>\n                                    <div\n                                        class={`col-12 mb-5 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}\n                                        style={`\n                                            scroll-snap-align: center;\n                                            flex-wrap: wrap;\n                                            overflow-y: hidden;\n                                        `}\n                                        onTouchstart={(e) => { e.stopPropagation(); }}\n                                        onTouchend={(e) => { e.stopPropagation(); }}\n                                        onTouchmove={(e) => { e.stopPropagation(); }}\n                                    >\n                                        <div class='row d-flex align-items-center position-relative'>\n                                            <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                                {status === 'signup' && !race.liveRace && <>\n                                                    <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                                </>}\n                                                {status === 'race' && <>\n                                                    <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                                </>}\n                                                {status === 'done' && <>\n                                                    <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                                </>}\n                                            </h5>\n                                            {(race.images && race.images[0]) && <div\n                                                class={`w-100`}\n                                                style={`background-image: url(\"${race.images[0].s3LargeLink}\"); background-size: cover; height: 200px; background-repeat: no-repeat; background-position: 50% 50%;`}\n                                            />}\n                                        </div>\n                                        <div class='position-relative'>\n                                            <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                                {status === 'signup' && <>\n                                                    <div class='spinner-grow text-primary' role='status' />\n                                                </>}\n                                                {status === 'race' && <>\n                                                    <div class='spinner-grow text-danger' role='status' />\n                                                </>}\n                                                {status === 'done' && <>\n                                                    <span><i class='fas fa-check text-success' /></span>\n                                                </>}\n                                            </h5>\n                                            <h5 class='pt-2'>\n                                                {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                                {race.title}\n                                            </h5>\n                                        </div>\n                                        <div class='w-100'>\n                                            <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\n                                        </div>\n                                        <div class='w-100'>\n                                            {race.classes && <>\n                                                <div class='mb-3'>\n                                                    <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n\n                                                    <div class='w-100 position-relative'>\n                                                        <div\n                                                            class='d-flex flex-row flex-nowrap'\n                                                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                        >\n                                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                                    {currentClass.title}\n                                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                                </span>\n                                                            </>)}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </>}\n                                        </div>\n                                        <div class='w-100 d-flex justify-content-end'>\n                                            <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'>\n                                                <Text id='races.read-more'>Les mer</Text>\n                                                <i class='fas fa-angle-double-right ml-2' />\n                                            </a>\n                                        </div>\n                                        <div class='w-100 d-flex justify-content-center'>\n                                            <small class='text-muted'>\n                                                <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                                {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n                        </div>\n                    </div>\n                </div>\n\n\n\n            </div>\n\t\t);\n\t}\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport RaceReplyComment from './commentReply';\n\nimport mu from '../../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass RaceComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceComment({ id: race.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', race, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceCommentReply({ id: race.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', race, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentRace({ id: race.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentReplyRace({ id: race.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentRace({ id: race.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentReplyRace({ id: race.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await raceStore.translateCommentReply({ commentid, replyid, race, user });\n        } else {\n            translatedText[key] = await raceStore.translateComment({ commentid, race, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { race, callback = () => {}, initCall = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (race.comments) {\n            totalComments = race.comments.length;\n            if (showAllComments) {\n                filteredComments = race.comments;\n            } else {\n                // filteredComments = race.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = race.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {race && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = raceStore.getCommentTranslations({\n                        race,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = raceStore.getCommentReplyTranslations({\n                                        race,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <RaceReplyComment stores={this.props.stores} race={race}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`race-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default RaceComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {\n};\n\n@observer\nclass RaceText extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { text } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\n        let finalText = text;\n\n        const regex = new RegExp(`/<${language}>(.*?)<\\/${language}>/`);\n        const parsedText = text.replace(regex, '$1');\n        if (parsedText) {\n            finalText = text;\n        }\n\n\t\treturn (\n\t\t\t<>\n                {finalText}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceText;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveResults extends Component {\n    componentWillReceiveProps(nextProps) {\n        if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n            const { currentClass } = this.props;\n            const { raceStore } = this.props.stores;\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        }\n\t}\n\n    componentDidMount() {\n        const { currentClass } = this.props;\n        const { raceStore } = this.props.stores;\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t}\n\n    render() {\n        const widthCp = 20;\n        const width = 40;\n\t\tconst {\n            race,\n            currentClass,\n            onClickMusher = () => {},\n            onClickCheckpoint = () => {},\n            selectedCheckpointId,\n            limit = 100,\n            tableClass = 'table-striped table-sm',\n            thClass,\n            thStyle,\n            tdClass,\n            tdStyle,\n            progressStyle = 'height: 20px;',\n            progressbarStyle,\n        } = this.props;\n        const { checkpoints = [], results = [] } = currentClass;\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n        const dotColor = '#808080';\n\n\t\treturn (<>\n            <div class='table-responsive'>\n                <table class={`table ${tableClass}`}>\n                    <thead>\n                        <tr>\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${width}px;`}>\n                                    <i class='fas fa-flag' />\n                                </div>\n                            </th>\n                            {checkpoints && checkpoints.slice().sort(fieldSorter(['sortOrder'])).map((cp, cpIdx) => <>\n                                {cpIdx > 0 && <th class={thClass} style={thStyle}>\n                                    <div class='' style={`width: ${width}px;`}>\n                                        &nbsp;\n                                    </div>\n                                </th>}\n                                <th class={thClass} style={thStyle}>\n                                    <div\n                                        class={`checkpoint position-relative ${selectedCheckpointId === cp.id ? 'text-primary' : ''}`}\n                                        style={`width: ${widthCp}px; font-size: 1.1em;`}\n                                        onClick={onClickCheckpoint}\n                                        data-id={cp.id}\n                                    >\n                                        <i class='fas fa-campground' />\n\n                                        <div\n                                            class={`rounded-pill-both px-1 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                                            style={`bottom: 0px; right: -20px; font-size: 0.6em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                                        >\n                                            {cp.sortOrder && cp.sortOrder !== 'n/a' && <>{cp.sortOrder}</>}\n                                        </div>\n\n                                    </div>\n                                </th>\n                            </>)}\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${widthCp}px;`}>\n                                    <i class='fas fa-flag-checkered' />\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {sortedContestants && sortedContestants.slice(0, limit).map((co, coIdx) => {\n                            let cpIdx = 0;\n                            let hasLeftCpPrev;\n                            let bibIdxOutPrev;\n                            let estTimeToCpMinutesPrev;\n                            return(<>\n                                <tr class='musher' onClick={onClickMusher} data-bib={co.bib}>\n                                    <td class={tdClass} style={tdStyle}>\n                                        {co.startTime ? util.isoTime(co.startTime) : ''}\n                                    </td>\n                                    {checkpoints && checkpoints.slice().sort(fieldSorter(['sortOrder'])).map((cp, idx) => {\n                                        const res = results.slice().sort(fieldSorter(['timestamp'])).filter(e => parseInt(e.bib, 10) == co.bib && e.checkpoint === cp.id);\n                                        const hasLeftCp = res.find(e => e.direction === 'out');\n                                        const hasArrivedCp = res.find(e => e.direction === 'in');\n                                        const hasScratched= res.find(e => e.direction === 'scratched');\n\n                                        const allResultsIn = results.slice().sort(fieldSorter(['timestamp'])).filter(e => e.direction === 'in' && e.checkpoint === cp.id);\n                                        const bibIdxIn = allResultsIn.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                                        const allResultsOut = results.slice().sort(fieldSorter(['timestamp'])).filter(e => e.direction === 'out' && e.checkpoint === cp.id);\n                                        const bibIdxOut = allResultsOut.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                                        if (bibIdxIn === -1)  {\n                                            if (hasLeftCpPrev) {\n                                                const timeUsedOnStage = Math.floor(new Date(hasLeftCpPrev.timestamp).getTime() / 1000 / 60);\n                                                let percentDone = timeUsedOnStage / estTimeToCpMinutesPrev * 100;\n                                                percentDone = percentDone > 95 ? 95 : percentDone;\n                                                const line = (<>\n                                                    <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                                        <div class='progress' style={`${progressStyle}`}>\n                                                            <div\n                                                                class={`progress-bar progress-bar-striped progress-bar-animated`}\n                                                                role='progressbar'\n                                                                style={`width: ${percentDone}%; ${progressbarStyle}`}\n                                                                aria-valuenow={percentDone}\n                                                                aria-valuemin='0'\n                                                                aria-valuemax='100'\n                                                            >{bibIdxOutPrev + 1 > 0 ? bibIdxOutPrev + 1 : ''}</div>\n                                                        </div>\n\n                                                        {/* estTimeToCpMinutesPrev: {estTimeToCpMinutesPrev}\n                                                        timeUsedOnStage: {timeUsedOnStage}\n                                                        percentDone: {percentDone} */}\n                                                        {co.cpId && res.length > 0 && <>\n                                                            {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                            {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                            {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                                        </>}\n                                                    </td>\n                                                </>);\n                                                bibIdxOutPrev = bibIdxOut;\n                                                hasLeftCpPrev = hasLeftCp;\n                                                estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                                return line;\n                                            }\n                                            return '';\n                                        }\n                                        cpIdx = idx;\n                                        bibIdxOutPrev = bibIdxOut;\n                                        hasLeftCpPrev = hasLeftCp;\n                                        estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                        return (<>\n                                            {hasArrivedCp && idx > 0 && <>\n                                                <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                                    <div class='progress' style={`${progressStyle}`}>\n                                                        <div\n                                                            class={`progress-bar`}\n                                                            role='progressbar'\n                                                            style={`width: 100%; ${progressbarStyle}`}\n                                                            aria-valuenow='10'\n                                                            aria-valuemin='0'\n                                                            aria-valuemax='100'\n                                                        />\n                                                    </div>\n                                                    {co.cpId && res.length > 0 && <>\n                                                        {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                        {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                        {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                                    </>}\n                                                </td>\n                                            </>}\n                                            <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                                <div class='progress' style={`${progressStyle}`}>\n                                                    <div\n                                                        class={`progress-bar ${hasScratched ? 'bg-danger' : 'bg-success'}`}\n                                                        role='progressbar'\n                                                        style={`width: 100%; ${progressbarStyle}`}\n                                                        aria-valuenow='10'\n                                                        aria-valuemin='0'\n                                                        aria-valuemax='100'\n                                                    >{bibIdxIn + 1 > 0 ? bibIdxIn + 1 : ''}</div>\n                                                </div>\n                                                {co.cpId && res.length > 0 && <>\n                                                    {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                    {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                    {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                                </>}\n                                            </td>\n                                        </>);\n                                    })}\n                                    <td colspan={checkpoints.length * 2 - cpIdx} class={tdClass} style={tdStyle}>\n                                        <div class='d-flex flex-nowrap'>\n                                            <div\n                                                class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                style={`background-color: ${mu.getRankingColor(coIdx + 1)}; width: 45px;`}\n                                            >\n                                                {co.bib}\n                                            </div>\n                                            <div>\n                                                <nobr>\n                                                    {co.flag} {co.lastname}\n                                                </nobr>\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </>);\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\t\t</>);\n\t}\n}\n\nexport default RaceLiveResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\n@observer\nclass Drawer extends Component {\n\n    render() {\n        const { appState } = this.props.stores;\n        const { darkmode } = appState;\n        const { children, onCloseClick = () => {}, classNames = 'fixed-bottom', width = '100vw' } = this.props;\n        return (\n            <div\n                class={`${classNames} ${darkmode ? 'bg-darkmode' : 'bg-lightmode'} border rounded rounded-lg pt-4 pb-3 px-4`}\n                style={`\n                    bottom: 0;\n                    left: 0;\n                    width: ${width};\n                    max-height: 80vh;\n                    min-height: 10vh;\n                    overflow: auto;\n                    z-index: 999999;\n                    border-radius: 20px 20px 0 0 !important;\n                    border-top-width: 5px !important;\n                    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.8);\n                `}\n                onTouchmove={mu.captureEvents}\n                onScroll={mu.captureEvents}\n            >\n                <button\n                    class='btn btn-warning btn-sm float-right'\n                    onClick={onCloseClick}\n                >\n                    <i class='fas fa-times' />\n                </button>\n\n                {children}\n\n            </div>\n        );\n    }\n}\n\nexport default Drawer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\n@observer\nclass Team extends Component {\n    requestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const teamId = parseInt(e.target.parentElement.dataset.team || e.target.dataset.team, 10);\n        teamStore.followRequest(teamId, user);\n        this.setState({ requestSent: true });\n    }\n\n    unFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const teamId = parseInt(e.target.parentElement.dataset.team || e.target.dataset.team, 10);\n        teamStore.unollowTeam(teamId);\n        this.setState({ unfollowed: true });\n    }\n\n    getButton = (text = '') => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team, skipHome, simple, classNames } = this.props;\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            if (skipHome) {\n                return '';\n            }\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (<>\n                <button\n                    class={classNames || `btn btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text> {!simple && <>{text}</>}\n                </button>\n                <button\n                    class={classNames || `btn btn-sm btn-block btn-danger float-right`}\n                    onClick={this.unFollowTeam}\n                    data-team={team.id}\n                >\n                    <i class='fas fa-unlink mr-2' />\n                    <Text id='teams.connect.unfollow'>Unfollow</Text>\n                </button>\n            </>);\n        }\n        if (isBlocked) {\n            return '';\n            // return (\n            //     <button\n            //         class={`btn btn-block btn-outline-secondary float-right`}\n            //         disabled='true'\n            //     >\n            //         <i class='fas fa-hand-paper mr-2' />\n            //         <Text id='teams.connect.is-blocked'>Blokkert</Text> {text}\n            //     </button>\n            // );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={classNames || `btn btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text> {!simple && <>{text}</>}\n                </button>\n            );\n        }\n        if (team.public) {\n            return (\n                <button\n                    class={classNames || `btn btn-block btn-outline-success float-right`}\n                    onClick={this.requestFollowTeam}\n                    data-team={team.id}\n                >\n                    <i class='fas fa-plus mr-2' />\n                    <Text id='teams.connect.follow'>Følg</Text> {!simple && <>{text}</>}\n                </button>\n            );\n        }\n    }\n\n    render() {\n        const { unfollowed } = this.state;\n        const { team, buttonOnly } = this.props;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n        const image = team.image && team.image.s3SmallLink ? team.image : null;\n\n        if (buttonOnly) {\n            return (<>\n                {this.getButton(`${team.name}`)}\n            </>);\n        }\n\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-0 position-relative border-top pt-3'\n                        style={`${unfollowed ? 'text-decoration: line-through; opacity: 0.3;' : ''}`}\n                    >\n                        {/* {JSON.stringify(team, null, 4)} */}\n                        <a href={`/teams/public/${team.uuidv4}`}>\n                        <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url(\"${image.s3SmallLink}\");  background-size: cover;` : ''}>\n                            {!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n                        </div>\n                        </a>\n                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                            <h5 class='mb-1' style='line-height: 1.0em;'>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`}>{team.name}</a>\n                                </> : <>\n                                    {team.name}\n                                </>}\n                            </h5>\n                            <div>\n                                {team.place} {team.country}\n                            </div>\n                            <div>\n                                {teamType && <span class='badge badge-pill badge-secondary'>{teamType}</span>}\n                                {teamAmbition && <span class='badge badge-pill badge-secondary ml-2'>{teamAmbition}</span>}\n                            </div>\n                            <small class='text-muted'>\n                                {team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n                                {team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n                            </small>\n                        </div>\n                        <div>\n                            {this.getButton()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Team;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        const page = url.replace(/\\d+$/, 'detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\n@observer\nclass HeaderCustom extends Component {\n    render() {\n        const { children, height = '65px' } = this.props;\n        return (\n            <nav\n\t\t\t\tclass={`navbar navbar-themed bg-light fixed-top py-0`}\n\t\t\t\tstyle={`height: ${height};`}\n\t\t\t>\n\n                {children}\n\n            </nav>\n        );\n    }\n}\n\nexport default HeaderCustom;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n\n        if (!offset) {\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route, Router } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport PubSub, { topics } from '../../lib/pubsub';\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport DogSimplePublic from '../../components/dog/simplePublic';\nimport ImageScroller from '../../components/imageScroller';\n// import TeamConnectConfirm from '../../components/team/connect-confirm';\nimport TeamLine from '../../components/team/publicLine';\nimport PublicTeam from '../../components/team/public';\n\nimport Overlay from '../../components/overlay/';\nimport DogPublicDetail from '../dogs/publicDetail';\n\nimport MiniViewGraph from '../../components/dog/miniViewGraph';\n\nconst initialState = {\n    newTeam: {},\n};\n\n@observer\nclass TeamsDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n        this.time = new Date().getTime();\n        this.apiServer = util.getApiServer();\n    }\n\n    async loadPublicView(props) {\n\t\tthis.setState({ isLoading: true });\n        const { teamid } = props;\n\t\tconst { teamStore } = this.props.stores;\n        await teamStore.getPublicViews(teamid);\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    async loadAll(props = this.props) {\n        await this.loadPublicTeam(props);\n        await this.loadPublicView(props);\n    }\n\n    async loadPublicTeam(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n        const { teamid } = props;\n        await teamStore.loadPublicDetail({ id: teamid });\n    }\n\n    // Overlay functions\n    onDogClick = (e, dogid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n    // /Overlay functions\n\n    subscribeNotificationTopic = async (field) => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { notificationTopics = {} } = user;\n        const value = 1;\n        await userStore.setNotificationTopic({\n            field: `notificationTopics.${field}`,\n            value,\n        });\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n    \n\tcomponentDidMount() {\n        const { back = this.back } = this.props;\n        const { appState } = this.props.stores;\n        appState.setSwipeRight(() => {\n            appState.setSwipeRight();\n            back();\n        });\n        this.loadAll();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.teamid !== this.props.teamid) {\n            this.loadAll(nextProps);\n        }\n    }\n\n\trender() {\n        const { showDog } = this.state;\n\t\tconst { teamStore, userStore } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n\t\tconst { publicTeam, publicTeamFollowers, publicViewsGraphData, publicViewsGraphLegend } = teamStore;\n        const isTeamAdmin = (publicTeam && publicTeam.members) ? publicTeam.members.some(m => m.id === user.id) : false;\n\n        const { marginTop, marginBottom, back = this.back, hideTeam = () => {} } = this.props;\n\n        const defaultImage = {\n            s3XXLargeLink: './assets/homerun-race-logo.png',\n        };\n\n        const {\n            dogs = [],\n            users = [],\n            image,\n            imageHeader,\n            publicWorkouts,\n            publicWorkoutDetails,\n            publicWorkoutSummary,\n            publicTrophys,\n            publicMemories,\n            publicDogs,\n        } = publicTeam;\n\n        const headerImage = imageHeader && imageHeader.s3XXLargeLink ? imageHeader : defaultImage;\n        const teamImage = image && image.s3LargeLink ? image : null;\n        const teamAmbition = userStore.findTeamAmbition({ ambition: publicTeam.ambitions, language });\n        const teamType = userStore.findTeamType({ type: publicTeam.type, language });\n        const isYourTeam = publicTeam.members && publicTeam.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = publicTeam && publicTeam.followers && publicTeam.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = publicTeam.followRequests && publicTeam.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        const { notificationTopics = {} } = user;\n        const topic = `team-${publicTeam.id}`;\n\n\t\treturn (<>\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n\t\t\t<div class='container-fluid pb-5' style={`margin-bottom: ${marginBottom || MARGIN_BOTTOM}; margin-top: ${marginTop || MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='row mb-0'>\n                    <div class='w-100 position-relative'\n                        style={`height: 25vh; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n                    >\n                        {isYourTeam && <>\n                            <a class='btn btn-sm btn-primary position-absolute'\n                                style={`top: 5px; right: 10px;`}\n                                href={`/teams/edit/${publicTeam.id}`}\n                            >\n                                <i class='fas fa-edit' /> <Text id='teams.edit'>Endre</Text>\n                            </a>\n                        </>}                    \n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                        <div class='row'>\n                            <div class='col-3 col-sm-4 col-md-3 col-lg-4 position-relative'>\n                                <div\n                                    class={`text-center border border-white rounded-circle position-absolute imageRounded imageRoundedResponsive imageRoundedResponsivePosition`}\n                                    style={`left: 20px; ${teamImage ? `background-image: url(\"${teamImage.s3LargeLink}\"); background-size: cover; background-repeat: no-repeat; background-position: 50% 50%;` : ''}`}\n                                >\n                                    {!teamImage && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n                                </div>\n                                &nbsp;\n                            </div>\n                            <div class='col-9 col-sm-8 col-md-9 col-lg-8' style='line-height: 1.2em;'>\n                                <h5 class='my-0'>{publicTeam.name}</h5>\n                                <small class='text-muted'>\n                                    {publicTeam.place ? `${publicTeam.place}, ` : ''}{publicTeam.country}\n                                </small><br />\n                                {teamType && <span class='badge badge-pill badge-secondary mt-2'>{teamType}</span>}\n                                {teamAmbition && <span class='badge badge-pill badge-secondary mt-2 ml-2'>{teamAmbition}</span>}\n                                <h6 class='mt-2'>\n                                    <span class='mr-3'><span class='font-weight-bolder'>{publicTeam.followers ? publicTeam.followers.length : 0}</span> <Text id='teams.followers'>followers</Text></span>\n                                    <span class='mr-3'><span class='font-weight-bolder'>{publicTeam.dogs ? publicTeam.dogs.length : 0}</span> <Text id='teams.dogs-menu'>dogs</Text></span>\n                                </h6>\n                            </div>\n                        </div>\n                    </div>\n                    {(!notificationTopics || !notificationTopics[topic]) && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <button class='btn btn-block btn-primary btn-sm' onClick={() => this.subscribeNotificationTopic(topic)}>\n                                <Text id='team.notifications'>Subscribe to team notifications</Text>\n                            </button>                    \n                        </div>\n                    </>}\n                </div>\n\n\t\t\t\t<div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && publicTeam.public > 0 && <div class='clearfix mb-2'>\n                            <PublicTeam stores={this.props.stores} team={publicTeam} buttonOnly={true} skipHome={true} />\n                        </div>}\n                    </div>\n                </div>\n\n                {/* <TeamConnectConfirm stores={this.props.stores} /> */}\n\n\t\t\t\t<div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.socialmedia'>Sosialemedier</Text></h5>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='d-flex justify-content-center'>\n\n                            {isYourTeam && !publicTeam.facebook && <>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'>\n                                        <i class='fab fa-facebook' />\n                                    </div>\n                                    <h3 class='font-weight-lighter'>\n                                        <Text id='teams.add-sosialmedia'>Gå inn på endring av teamet for å legge inn en sosialemedier.</Text>\n                                    </h3>\n                                </div>\n                            </>}\n\n                            {publicTeam.url && <div class='mx-2'><h3><a href={mu.asUrl(publicTeam.url)} target='_blank' rel='noreferrer'><i class='fas fa-link' /></a></h3></div>}\n                            {publicTeam.facebook && <div class='mx-2'><h3><a href={mu.asFacebookLink(publicTeam.facebook)} target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a></h3></div>}\n                            {publicTeam.instagram && <div class='mx-2'><h3><a href={mu.asInstagramLink(publicTeam.instagram)} target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a></h3></div>}\n                            {publicTeam.snapchat && <div class='mx-2'><h3><a href={mu.asSnapchatLink(publicTeam.snapchat)} target='_blank' rel='noreferrer'><i class='fab fa-snapchat' /></a></h3></div>}\n                        </div>\n                        <div class='d-flex justify-content-center mt-3'>\n                            <div class='mx-2'><h3><a class='btn btn-outline-success' href={`/stories/team/${publicTeam.uuidv4}`}><i class='fas fa-rss' /> <Text id='story.all-stories'>Stories</Text></a></h3></div>\n                            <div class='mx-2'><h3><a class='btn btn-outline-primary' href={`/teams/workouts/team/${publicTeam.uuidv4}`} onClick={hideTeam}><i class='fas fa-running' /> <Text id='story.all-workouts'>All workouts</Text></a></h3></div>\n                        </div>\n                    </div>\n                </div>\n\n                {publicTeam.imagesSponsor && <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.public-sponsor-images' fields={{ total: publicTeam.imagesSponsor.length }}>Sponsorer - {publicTeam.imagesSponsor.length} stk</Text></h5>\n                    </div>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative px-0`}>\n                        <ImageScroller stores={this.props.stores} images={publicTeam.imagesSponsor} />\n                    </div>\n                </div>}\n\n                {publicTeam.sponsors && <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.sponsors'>Sponsors</Text></h5>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        {isYourTeam && !publicTeam.sponsors && <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'>\n                                    <i class='fas fa-pen-nib' />\n                                </div>\n                                <h3 class='font-weight-lighter'>\n                                    <Text id='teams.add-sponsors'>Gå inn på endring av teamet for å legge inn sponsorer.</Text>\n                                </h3>\n                            </div>\n                        </>}\n                        <Markdown markdown={mu.replaceImages(publicTeam.sponsors, publicTeam.imagesSponsor, language)} markdownOpts={mu.getMarkdownOptions()} />\n                    </div>\n                </div>}\n\n\n\t\t\t\t<div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.description'>Beskrivelse</Text></h5>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        {isYourTeam && !publicTeam.description && <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'>\n                                    <i class='fas fa-pen-nib' />\n                                </div>\n                                <h3 class='font-weight-lighter'>\n                                    <Text id='teams.add-description'>Gå inn på endring av teamet for å legge inn en beskrivelse.</Text>\n                                </h3>\n                            </div>\n                        </>}\n                        <Markdown markdown={mu.replaceImages(publicTeam.description, publicTeam.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                    </div>\n                </div>\n\n\t\t\t\t{publicTeam.descriptionWorkoutplan && <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.description-workoutplan'>Workoutplan</Text></h5>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        {isYourTeam && !publicTeam.descriptionWorkoutplan && <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'>\n                                    <i class='fas fa-pen-nib' />\n                                </div>\n                                <h3 class='font-weight-lighter'>\n                                    <Text id='teams.add-description-workoutplan'>Gå inn på endring av teamet for å legge inn en treningsplan.</Text>\n                                </h3>\n                            </div>\n                        </>}\n                        <Markdown markdown={mu.replaceImages(publicTeam.descriptionWorkoutplan, publicTeam.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                    </div>\n                </div>}\n\n\t\t\t\t{publicDogs && <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.dogs' fields={{ total: dogs.length }}>Hundene - {dogs.length} stk</Text></h5>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='row'>\n                            {dogs && dogs.map(dog => (\n                                <DogSimplePublic stores={this.props.stores} dog={dog} showAge={true} className={'col'}\n                                    onDogClick={this.onDogClick} \n                                />\n                            ))}\n                        </div>\n                    </div>\n                </div>}\n\n\t\t\t\t{publicTeam.images && <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.public-photos' fields={{ total: publicTeam.images.length }}>Teambilder - {publicTeam.images.length} stk</Text></h5>\n                    </div>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative px-0`}>\n                        <ImageScroller stores={this.props.stores} images={publicTeam.images} />\n                    </div>\n\t\t\t\t</div>}\n\n                {publicMemories && publicTeam.achievements && <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.achievements'>Achievements</Text></h5>\n                    </div>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                        <div class='row'>\n                            {publicTeam.achievements && publicTeam.achievements.map(file => {\n                                return (\n                                    <div class='col-12'>\n                                        {file.date && <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>}\n                                        <span class='mr-2 font-weight-bold'>{file.name}</span>\n                                        <span class='mr-2 font-weight-light'>{file.description}</span>\n                                        {file.url && <span class='mr-2'><a href={mu.asUrl(file.url)} target='_blank' rel='noreferrer' native><i class='fas fa-link' /></a></span>}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n\t\t\t\t</div>}\n\n\t\t\t\t{publicTrophys && publicTeam.trophys && <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.trophy'>Trophys</Text></h5>\n                    </div>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                        <div class='row'>\n                            {publicTeam.trophys && publicTeam.trophys.reverse().map(file => {\n                                const img = mu.getTrophyImage(file.name);\n                                if (!img) {\n                                    return '';\n                                }\n                                const textHeader = file.descriptionHeader && file.descriptionHeader[language] ? file.descriptionHeader[language] : '';\n                                const text = file.description && file.description[language] ? file.description[language] : '';\n                                return (\n                                    <div class='col-4 mt-3'>\n                                        <div class='mb-2'>\n                                            <img src={img} class='img-fluid' />\n                                        </div>\n                                        <strong>{textHeader}</strong>\n                                        {/* <small class='font-weight-lighter mr-2'>\n                                            {util.isoDate(file.createdDate, false, false, true)}\n                                        </small> */}\n                                        <small>\n                                            <details>\n                                                <summary><Text id='teams.trophy-details'>Details</Text></summary>\n                                                <Markdown markdown={mu.replaceImages(text, publicTeam.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                            </details>\n                                        </small>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n\t\t\t\t</div>}\n\n                {/* {util.isArray(publicTeamFollowers) && <div class='row mt-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.followers'>Followers</Text></h5>\n                    </div>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                        {util.isArray(publicTeamFollowers) && publicTeamFollowers.map(t => \n                            <TeamLine stores={this.props.stores} team={t} myTeamId={publicTeam.id} showBlockButton={false} callback={this.loadTeam} />\n                        )}\n                    </div>\n                </div>} */}\n\n\t\t\t\t<div class='row mt-5 mb-5'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'>\n                                <i class='fas fa-ellipsis-h' />\n                            </div>\n                            <div style='line-height: 0.9em;'>\n                                <small>\n                                    <Text id='teams.something-missing'>Er det noe du savner på denne siden? Send oss en melding på Facebook.</Text>\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {(isAdmin || isTeamAdmin) && <>\n                    <h5 class='font-weight-lighter text-muted border-bottom'><Text id='teams.visits'>Team page visits</Text></h5>\n                    <MiniViewGraph stores={this.props.stores}\n                        dataLeft={publicViewsGraphData}\n                        legendLeft={['team']}\n                        key={`minigraph-team-${publicTeam.uuidv4}`}\n                    />\n                </>}\n\n                {publicTeam.uuidv4 && <img src={`${this.apiServer}/api/teams/${publicTeam.uuidv4}/view?user=${user.id}&time=${this.time}`} style='width: 1; height: 1; opacity: 0.1;' />}\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\nexport default TeamsDetail;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport DogScroller from '../dog/scroller';\nimport ImageScroller from '../imageScroller';\n\n@observer\nclass MusherInfoHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { contestant = {}, onMarkerClick = () => {}, children, rank } = this.props;\n        const wp = raceStore.findWaypointByBib(contestant.bib);\n\n        const { isAdmin } = userStore;\n        const musher = contestant.bib ? raceStore.getMusherByBibId(contestant.bib) : raceStore.getMusherByBibEmail(contestant.email);\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(contestant.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = contestant.color;\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(contestant.bib);\n\n        const defaultImage = {\n            s3XXLargeLink: './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n            />\n\n            <div class='d-flex position-relative' style='margin-top: 17vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; font-size: 1.2em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {/* {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>} */}\n                        {rank && <>{rank}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-0' style='line-height: 1.2em;'>\n                    <h5 class='mb-0'>\n                        <div class='d-flex flex-nowrap'>\n                            <div\n                                class='text-white font-weight-bold pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                style={`background-color: ${mu.getRankingColor(rank)}; width: 55px;`}\n                            >\n                                {musher.bib}\n                            </div>\n                            <div>\n                                <nobr>\n                                    {musher.flag} {musher.firstname} {musher.lastname}\n                                </nobr>\n                            </div>\n                        </div>\n                    </h5>\n                    <span class='mb-0' style='margin-left: 93px;'>{musher.sportsClub || team.name || <>&nbsp;</>}</span>\n                </div>\n            </div>\n\n            <div class='d-flex justify-content-center mb-3'>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='details'\n                    >\n                        Details\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='team'\n                    >\n                        Team\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='dogs'\n                    >\n                        Dogs\n                    </button>\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                // style='max-height: 60vh;'\n            >\n                {submenu === 'details' && <>\n                    {children}\n                </>}\n\n                {submenu === 'team' && <>\n                    {team.public > 0 ? <>\n                        <h3>{team.name}</h3>\n                        <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        <ImageScroller stores={this.props.stores} images={team.images} />\n\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {submenu === 'dogs' && <>\n                    {team.public > 0 ? <>\n                        {team.dogs && <div class='w-100 container-fluid'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n                        {showDog && <>                    \n                            <div class='d-flex mb-0 mt-3 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pr-2'\n                                    style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                >\n                                    <h5 class='mb-1'>\n                                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </h5>\n                                    <div>\n                                        {daysUntilBirthday < 7 && <>\n                                            <span class='text-muted mr-2'>\n                                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                            </span>\n                                        </>}                                \n                                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                        </>}\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                    <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                        Toggle admin info\n                    </button>\n                    {showAdminInfo && <>\n                        <small>\n                            <xmp>\n                                musher: {JSON.stringify(musher, null, 4)}<br />\n                                user: {JSON.stringify(user, null, 4)}<br />\n                                team: {JSON.stringify(team, null, 4)}<br />\n                                totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                {/* {\n                                    \"firstDate\": \"2021-03-19 11:59\",\n                                    \"lastDate\": \"2021-03-20 17:13\",\n                                    \"firstEpoch\": 1616151540000,\n                                    \"lastEpoch\": 1616256780000,\n                                    \"now\": {\n                                        \"$numberDecimal\": \"1642675856939\"\n                                    },\n                                    \"totalTimeUsedSec\": 26524316,\n                                    \"totalWorkoutTimeUsedSec\": 130895,\n                                    \"lastDuration\": 25655,\n                                    \"team\": 84,\n                                    \"count\": 4,\n                                    \"distanceKm\": 301.5906237951766,\n                                    \"elevation\": 3610.019075719202,\n                                    \"duration\": 77343,\n                                    \"rest\": 1332,\n                                    \"speedAvg\": 8.294634979660305,\n                                    \"totalRest\": 54884,\n                                    \"loadIndex\": 1080.75,\n                                    \"totalKcalRelated\": 544.535560976128,\n                                    \"weightedTotalKcal\": 12303.171406247127,\n                                    \"flatTotalKcal\": 9424.70699359927,\n                                    \"firstGpxStartEpoch\": null,\n                                    \"lastGpxStartEpoch\": null\n                                } */}\n\n                            </xmp>\n                        </small>\n                    </>}\n                </div>}\n                <div class='d-flex position-absolute' style='right: 10px; bottom: 10px;'>\n                    {inFront.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-left' />\n                    </a>}\n                    {behind.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-right' />\n                    </a>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default MusherInfoHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Drawer from '../../components/drawer/';\nimport DogsEditBaseInfo from '../../components/dog/editBaseInfo';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { userStore } = this.props.stores;\n        const { user } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        userStore.removeImage({\n            id: user.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { user, field, updateField } = this.props;\n        updateField({ id: user.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, user, type = 'text', field, title, icon, help, onInput, updateField } = this.props;\n        const value = user[field];\n        const byMd5 = e => user.image ? e.md5 !== user.image.md5 : true;\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {user.image && user.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={user.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={user.image.name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {user.images && user.images.filter(byMd5).map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={user} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={user} field={field} updateField={updateField} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={user.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogLine extends Component {\n    render() {\n        const { dog, children, onDogClick = () => {} } = this.props;\n\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { vaccineLogStatuses } = userStore;\n\n        return(\n            <div\n                class='d-flex mb-0 position-relative mb-3 dogInfo'\n                data-id={dog.id}\n            >\n                <div>\n                    <div class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''}>\n                        {/* {!dog.image && <i class='fas fa-dog mt-3' style='font-size: 40px;' />} */}\n                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 pr-2' onClick={onDogClick}>\n                    {children}\n                    <span class='float-right'>\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                    <h6 class='mb-1' style='line-height: 1.0em;'>\n                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                    </h6>\n                    {dog.chipId ? <>\n                        <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                    </> : <>\n                        <div class='alert alert-danger' role='alert'>\n                            <Text id='races.missing-chipid'>Missing chid id</Text>\n                        </div>\n                    </>}\n\n                    <div>\n                        {vaccineLogStatuses && vaccineLogStatuses.filter(e => e.chipId === dog.chipId).map((vac) => {\n                            return (\n                                <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'} mr-2 mb-1`}>\n                                    {vac.vaccineAgens.name}\n                                    <span class='font-weight-lighter ml-2 d-none d-sm-block'>\n                                        <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                        {vac.inKarens && <>\n                                            <br />\n                                            (karens: {util.format(vac.karensDaysLeft, 0)} days left)\n                                        </>}\n                                    </span>\n                                </span>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submenu: 'info',\n            showDrawer: false,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { userStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { user } = userStore;\n        if (field === 'images') {\n            if (Array.isArray(user.images) && Array.isArray(value)) {\n                localObjectValue = [...user.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        userStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { userStore } = this.props.stores;\n        await userStore.saveField(id, field, value);\n    }\n\n\tsignupToRace = async () => {\n\t\tconst { raceStore, userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { signup } = raceStore;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\tteam: user.team,\n\t\t\t\tfirstname: user.firstname,\n\t\t\t\tlastname: user.lastname,\n\t\t\t\tsportsClub: user.sportsClub,\n\t\t\t\temail: user.email,\n\t\t\t\tcellphone: user.cellphone,\n\t\t\t\tfacebook: user.facebook,\n\t\t\t\tinstagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    updateSignup = (e) => {\n        const key = e.target.id;\n        const value = e.target.value;\n        const { raceStore } = this.props.stores;\n        raceStore.updateObjectKeyValue('signup', key, value);\n    }\n\n    editSignup = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.localUpdateSignup(field, value);\n            if (field === 'team') {\n                await raceStore.loadTeams(value, true);\n            }\n\t\t}, 500);\n    }\n\n    clearSignupValue = async (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = 'null';\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n        raceStore.editClass({\n            id: raceid,\n            data,\n        });\n        raceStore.localUpdateSignup(field, value);\n        if (field === 'team') {\n            await raceStore.loadTeams(value, true);\n        }\n    }\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        this.setState({\n            showDrawer: !showDrawer,\n        });\n    }\n\n    onDogClick = (e) => {\n        const { id } = e.target.closest('.dogInfo').dataset;\n        console.log('onDogClick', id);\n        const { userStore, raceStore } = this.props.stores;\n        const { signup } = raceStore;\n        const dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        const currentDog = dogs.find(e => e.id == id);\n        this.setState({\n            showDrawer: true,\n            currentDog,\n        });\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n    render() {\n        const { submenu, showDrawer, currentDog } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, saved } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const { signup } = raceStore;\n\n        let signupClass = {};\n        let dogs = [];\n        if (signup.class) {\n            signupClass = raceStore.getRaceClassById(signup.class);\n        }\n        if (signup.team) {\n            dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        }\n        const { vaccineLogStatuses } = userStore;\n\t\tconst today = new Date();\n\n        const chosenDogChipIds = mu.getAlphabet(signupClass.dogs).filter(letter => signup[`dog${letter}`]).map(letter => signup[`dog${letter}`]);\n        const byNotChosen = e => chosenDogChipIds.indexOf(e.chipId) === -1;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.signup'>Påmelding</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    {today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate) ? <>\n                        <span class='font-weight-lighter'><Text id='races.signed-in-as'>Logget inn som</Text>:</span> {user.email}<br /><br />\n                        {signup.id ? <>\n                            <div class='font-weight-bold mb-4'>\n                                <i class='fas fa-check text-success' /> <Text id='races.signed-up'>Din bruker er påmeldt!</Text><br />\n                                {/* <xmp>{JSON.stringify(signup, null, 4)}</xmp> */}\n                            </div>\n\n                            {!race.liveRace && race.signuppayment && <>\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-2 col-form-label text-right font-weight-lighter'><Text id='races.signup'>Påmelding</Text></label>\n                                    <div class='col-10'>\n                                        {signup.paidSignupfee ? <div class='py-2'>\n                                            <Text id='races.paid'>Betalt</Text>: {util.formatDate(signup.paidSignupfee)}\n                                            <i class='fas fa-check text-success ml-3' />\n                                        </div> : <>\n                                            <div class='alert alert-danger mb-1' role='alert'>\n                                                <h5>\n                                                    <span class='font-weight-lighter'><Text id='races.payment-info'>Betaling påmelding</Text>:</span><br />\n                                                    <Markdown markdown={mu.replaceImages(race.signuppayment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                    {signupClass.signupfee || race.signupfee} NOK\n                                                </h5>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n\n\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='race.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'chiplist' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='chiplist'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-ol' /> <Text id='race.chiplist'>Chiplist</Text></button>\n                                    </div>\n                                    {/* <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-dog' /> <Text id='race.team'>Team</Text></button>\n                                    </div> */}\n                                </div>\n                            </div>\n\n                            {submenu === 'info' && <>\n                                <div class='form-group row my-5'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>\n                                        <Text id='races.team'>Team</Text>\n                                    </label>\n                                    <div class='col-9'>\n                                        <select class='form-control form-control-lg' id='team' aria-describedby='teamHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.team}\n                                        >\n                                            <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                            {teams.map(team =>\n                                                <option value={team.id}>{team.name}</option>\n                                            )}\n                                        </select>\n                                        {signup.team ? <>\n                                            {/* <div class='alert alert-success' role='alert'>\n                                                A simple success alert—check it out!\n                                            </div> */}\n                                        </> : <>\n                                            <div class='alert alert-danger clearfix' role='alert'>\n                                                <span class='display-4 float-left mr-3'>\n                                                    <i class='fas fa-exclamation-triangle' />\n                                                </span>\n                                                <Text id='races.choose-race-team' fields={{ title: race.title }}>Please choose race team for {race.title}</Text>\n                                            </div>\n                                        </>}\n                                        {/* <details>\n                                            <summary>\n                                                <i class='fas fa-info-circle' /> <Text id='races.team-about'>About teams</Text>\n                                            </summary>\n                                            <Text id='races.team-help'>\n                                                <ol>\n                                                    <li>Create a team for your race dogs.</li>\n                                                    <li>Add the dogs you want to use for this race.</li>\n                                                    <li>Choose the team for this race.</li>\n                                                </ol>\n                                            </Text>\n                                        </details> */}\n                                    </div>\n                                </div>\n\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='cellphone'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.cellphone}\n                                                placeholder={<Text id='races.cellphone-help'>Hva er mobilnummer ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                {signup.name && <div class='form-group row my-2'>\n                                    <label for='name' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.name'>Navn</Text></label>\n                                    <div class='col-9'>\n                                        {signup.name}\n                                    </div>\n                                </div>}\n                                <div class='form-group row my-2'>\n                                    <label for='firstname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.firstname'>Fornavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='firstname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.firstname}\n                                                placeholder={<Text id='races.firstname-help'>Hva er fornavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='lastname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.lastname'>Etternavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='lastname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.lastname}\n                                                placeholder={<Text id='races.lastname-help'>Hva er etternavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='sportsClub' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='sportsClub'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.sportsClub}\n                                                placeholder={<Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='facebook' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.facebook'>Facebook</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='facebook'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.facebook}\n                                                placeholder={<Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='instagram' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.instagram'>Instagram</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='instagram'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.instagram}\n                                                placeholder={<Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.class'>Klasse</Text></label>\n                                    <div class='col-9'>\n                                        <select class='form-control' id='class' aria-describedby='classHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.class}\n                                            disabled\n                                        >\n                                            <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <option value={currentClass.id}>\n                                                    {currentClass.title}{!race.liveRace && <>\n                                                        - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK\n                                                    </>}\n                                                </option>\n                                            </>)}\n                                        </select>\n                                    </div>\n                                </div>\n                                {race.rules && <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>&nbsp;</label>\n                                    <div class='col-9 pl-5'>\n                                        <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            checked={signup.termsAndAgreement}\n                                            value={1}\n                                        />\n                                        <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                    </div>\n                                </div>}\n                                {race.declaration && <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top'>\n                                        <h5><Text id='races.declaration'>Declaration</Text></h5>\n                                    </div>\n                                    <details class='col-12'>\n                                        {signup.declaration ? <>\n                                            <summary>\n                                                <Text id='races.see-declaration'>See declaration</Text> (<span class='text-muted font-weight-light'><Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}</span>)\n                                            </summary>\n                                        </> : <>\n                                            <summary>\n                                                <h5 class='btn btn-primary'><Text id='races.see-declaration'>See declaration</Text></h5>\n                                            </summary>\n                                        </>}\n\n                                        <Markdown markdown={mu.replaceImages(race.declaration, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\n                                        {signup.declaration ? <>\n                                            <i>\n                                                <Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}\n                                            </i>\n                                        </> : <>\n                                            <div class='pl-5'>\n                                                <input type='checkbox' class='form-check-input' id='declaration'\n                                                    data-classid={signup.class}\n                                                    data-contestantid={signup.id}\n                                                    onInput={this.editSignup}\n                                                    checked={signup.declaration}\n                                                    value={1}\n                                                />\n                                                <label class='form-check-label' for='declaration'><Text id='races.declaration-accept'>I hereby sign the declaration for the race!</Text></label>\n                                            </div>\n                                        </>}\n                                    </details>\n                                </div>}\n\n                                <Input saved={saved} user={user} field='image' icon='fas fa-camera' type='image'\n                                    stores={this.props.stores}\n                                    title={<Text id='users.photos'>Bilder</Text>}\n                                    help={<Text id='users.photos-help'>Bilder av deg.</Text>}\n                                    onInput={this.updateField} updateField={this.updateFieldValue} />\n\n                            </>}\n\n                            {submenu === 'chiplist' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top pt-3'>\n                                        <h5><Text id='races.chiplist'>Chiplist</Text></h5>\n                                    </div>\n\n                                    {signupClass && signupClass.dogs && mu.getAlphabet(signupClass.dogs, ['R1', 'R2']).map(letter => {\n                                        const chosenDog = dogs && dogs.length > 0 ? dogs.find(e => e.chipId === signup[`dog${letter}`]) : null;\n                                        return (<>\n                                            <div class='col-12 center border-top pt-3 d-flex'>\n                                                <div class='display-4' style='width: 50px;'>\n                                                    {letter}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pr-2'>\n                                                    {chosenDog ? <>\n                                                        <DogLine stores={this.props.stores} dog={chosenDog} onDogClick={this.onDogClick}>\n                                                            <button\n                                                                class='btn btn-danger float-right ml-2'\n                                                                onClick={this.clearSignupValue}\n                                                                id={`dog${letter}`}\n                                                                data-classid={signup.class}\n                                                                data-contestantid={signup.id}\n                                                            >\n                                                                <i class='fas fa-times' />\n                                                            </button>\n                                                        </DogLine>\n                                                    </> : <>                                                \n                                                        <select class='form-control p-0'\n                                                            id={`dog${letter}`}\n                                                            data-classid={signup.class}\n                                                            data-contestantid={signup.id}\n                                                            onInput={this.editSignup}\n                                                        >\n                                                            <option value=''>-- Choose dog for this position --</option>\n                                                            {dogs.filter(byNotChosen).map(dog => <>\n                                                                <option value={dog.chipId} selected={dog.chipId === signup[`dog${letter}`] ? 'selected' : ''}>\n                                                                    {dog.shortname || dog.name} - {dog.birth && <>{util.age(dog.birth, dog.deceased)}</>} {dog.gender === 'female' ? '♀️' : '♂️'}\n                                                                </option>\n                                                            </>)}\n                                                        </select>\n                                                    </>}\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n\n                                </div>\n                            </>}\n\n                            {submenu === 'team' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 border-top pt-3'>\n                                        {dogs && dogs.length > 0 ? <>\n                                            {dogs.map(dog => <>\n                                                <DogLine stores={this.props.stores} dog={dog} />\n                                            </>)}\n                                        </> : <>\n                                            <div class='text-center text-muted'>\n                                                <div class='display-1'>\n                                                    <i class='fas fa-dog' />\n                                                </div>\n                                                <h3 class='font-weight-lighter'>\n                                                    <Text id='race.add-dogs'>Add a team to your race signup to see the dogs.</Text>\n                                                </h3>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n                        </> : <>\n\n                            {race.liveRace ? <>\n                                Signup is done at the race normal web pages.\n                            </> : <>\n                                <div class='form-group'>\n                                    <label for='cellphone'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <input type='text' class='form-control' id='cellphone' aria-describedby='cellphoneHelp'\n                                        placeholder={user.cellphone}\n                                        onInput={this.updateSignup}\n                                        value={signup.cellphone}\n                                    />\n                                    <small id='cellphoneHelp' class='form-text text-muted'><Text id='races.cellphone-help'>'Hva er mobilnummer ditt?'</Text></small>\n                                </div>\n\n                                {signup.name && <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='name'><Text id='races.name'>Name</Text></label>\n                                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp'\n                                                placeholder={user.name}\n                                                onInput={this.updateSignup}\n                                                value={signup.name}\n                                            />\n                                            <small id='nameHelp' class='form-text text-muted'><Text id='races.name-help'>Hva er navnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>}\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='firstname'><Text id='races.firstname'>Fornavn</Text></label>\n                                            <input type='text' class='form-control' id='firstname' aria-describedby='firstnameHelp'\n                                                placeholder={user.firstname}\n                                                onInput={this.updateSignup}\n                                                value={signup.firstname}\n                                            />\n                                            <small id='firstnameHelp' class='form-text text-muted'><Text id='races.firstname-help'>Hva er fornavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='lastname'><Text id='races.lastname'>Etternavn</Text></label>\n                                            <input type='text' class='form-control' id='lastname' aria-describedby='lastnameHelp'\n                                                placeholder={user.lastname}\n                                                onInput={this.updateSignup}\n                                                value={signup.lastname}\n                                            />\n                                            <small id='lastnameHelp' class='form-text text-muted'><Text id='races.lastname-help'>Hva er etternavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='sportsClub'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <input type='text' class='form-control' id='sportsClub' aria-describedby='sportsClubHelp'\n                                        placeholder={user.sportsClub}\n                                        onInput={this.updateSignup}\n                                        value={signup.sportsClub}\n                                    />\n                                    <small id='sportsClubHelp' class='form-text text-muted'><Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text></small>\n                                </div>\n\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='facebook'><Text id='races.facebook'>Facebook</Text></label>\n                                            <input type='text' class='form-control' id='facebook' aria-describedby='facebookHelp'\n                                                placeholder={user.facebook}\n                                                onInput={this.updateSignup}\n                                                value={signup.facebook}\n                                            />\n                                            <small id='facebookHelp' class='form-text text-muted'><Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='instagram'><Text id='races.instagram'>Instagram</Text></label>\n                                            <input type='text' class='form-control' id='instagram' aria-describedby='instagramHelp'\n                                                placeholder={user.instagram}\n                                                onInput={this.updateSignup}\n                                                value={signup.instagram}\n                                            />\n                                            <small id='instagramHelp' class='form-text text-muted'><Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='team'><Text id='races.team'>Team</Text></label>\n                                    <select class='form-control' id='team' aria-describedby='teamHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.team}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                        {teams.map(team =>\n                                            <option value={team.id}>{team.name}</option>\n                                        )}\n                                    </select>\n                                    <small id='teamHelp' class='form-text text-muted'><Text id='races.choose-team-help'>Velg fra dine team</Text></small>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='class'><Text id='races.class'>Klasse</Text></label>\n                                    <select class='form-control' id='class' aria-describedby='classHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.class}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                        {race.classes && race.classes.map(currentClass => <>\n                                            <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                        </>)}\n                                    </select>\n                                    <small id='classHelp' class='form-text text-muted'><Text id='races.choose-class-help'>Velg ønsket klasse.</Text></small>\n                                </div>\n\n                                <div class='form-group form-check'>\n                                    <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                        onInput={this.updateSignup}\n                                        checked={signup.termsAndAgreement}\n                                        value={true}\n                                    />\n                                    <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                </div>\n                                <button type='button' class='btn btn-primary' onClick={this.signupToRace}><Text id='races.do-signup'>Meld meg på</Text></button>\n                            </>}\n\n                        </>}\n\n                    </> : <>\n                        {today < new Date(race.signupStartDate) ? <>\n                            <h5 class='mt-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-not-open-yet'>Påmeldingen har ikke åpnet ennå!</Text>\n                            </h5>\n                            <p class='mt-4'>\n                                <Text id='races.signup-opening'>Påmeldingen åpner</Text>:<br />\n                                <span class='display-4'>{util.formatDate(race.signupStartDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</span>\n                            </p>\n                        </> : <>\n                            <h5 class='mt-4 mb-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-closed'>Påmeldingen er stengt!</Text>\n\n                                {/* {JSON.stringify(signup, null, 4)} */}\n                            </h5>\n                        </>}\n                    </>}\n                </div>\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <DogsEditBaseInfo\n                        stores={this.props.stores}\n                        id={currentDog.id}\n                    />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\trequestSent: {},\n    confirmed: {},\n    deleted: {},\n    submenu: 'notfollowing',\n};\n\n@observer\nclass TeamLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    requestFollowTeam = async (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const teamId = parseInt(e.target.parentElement.dataset.team || e.target.dataset.team, 10);\n        teamStore.followRequest(teamId, user);\n        const { requestSent } = this.state;\n        requestSent[teamId] = true;\n        this.setState({ requestSent });\n    }\n\n    confirmRequest = async (e) => {\n        const { callback = () => {} } = this.props;\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        const { confirmed, deleted } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        delete deleted[`${team}-${user}`];\n        this.setState({ confirmed, deleted });\n        await teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        callback();\n    }\n\n    deleteRequest = async (e) => {\n        const { callback = () => {} } = this.props;\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        const { deleted, confirmed } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        delete confirmed[`${team}-${user}`];\n        this.setState({ deleted, confirmed });\n        await teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        callback();\n    }\n\n    unFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const teamId = parseInt(e.target.parentElement.dataset.team || e.target.dataset.team, 10);\n        teamStore.unollowTeam(teamId);\n        this.setState({ unfollowed: true });\n    }\n\n    getUnblockButton = (userId, myTeamId) => {\n        const { confirmed } = this.state;\n        const isConfirmed = confirmed[`${myTeamId}-${userId}`];\n        return <>\n            {isConfirmed ? <>\n                <small class='text-success'>\n                    <i class='fas fa-check' /> <Text id='teams.connect.confirmed'>Confirmed</Text>\n                </small>\n            </> : <>\n                <button class='btn btn-sm btn-block btn-success text-overflow mt-1'\n                    onClick={this.confirmRequest}\n                    data-team={myTeamId}\n                    data-user={userId}>\n                    <Text id='teams.connect.confirm'>Confirm</Text>\n                </button>\n            </>}\n        </>;\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (!team.public) {\n            return (<>\n                <small class='text-muted'>\n                    <Text id='teams.not-public'>Ikke offentlig</Text>\n                </small>\n            </>);\n        }\n        if (isFollowing) {\n            return (<>\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n                <button\n                    class={`btn btn-sm btn-block btn-outline-danger float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <Text id='teams.connect.unfollow'>Unfollow</Text>\n                </button>\n            </>);\n        }\n        if (isBlocked) {\n            return (<></>);\n            // return (\n            //     <button\n            //         class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n            //         disabled='true'\n            //     >\n            //         <i class='fas fa-hand-paper mr-2' />\n            //         <Text id='teams.connect.is-blocked'>Blokkert</Text>\n            //     </button>\n            // );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\trender() {\n        const { deleted = {}, unfollowed } = this.state;\n        const { team, isBlocked, myTeamId, showBlockButton } = this.props;\n        const { storyStore } = this.props.stores;\n\n        const user = storyStore.findPublicUser(team.user) || team.user || {};\n        let image;\n        if (team.image && team.image.s3SmallLink) {\n            image = team.image;\n        } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n            image = team.images[0];\n        } else if (user.image && user.image.s3SmallLink) {\n            image = user.image;\n        } else if (user.images && user.images[0] && user.images[0].s3SmallLink) {\n            image = user.images[0];\n        }\n        let shortname;\n        let name;\n        let username;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n\n        const isDeleted = deleted[`${myTeamId}-${user.id}`];\n\n        return (\n            <div class='col-12 mb-2 pb-2 border-bottom'\n                style={`${unfollowed ? 'text-decoration: line-through; opacity: 0.3;' : ''}`}\n            >\n                <div class='d-flex position-relative'>\n                    <div\n                        class={`text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image.s3MediumLink}\"); background-size: cover;` : ''}\n                    >\n                        {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                    </div>\n                    <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                        <h5 class='mb-0'>\n                            {team.public ? <>\n                                <a href={`/teams/public/${team.uuidv4}`}>{name}</a>\n                            </> : <>\n                                {name}\n                            </>}                                         \n                        </h5>\n                        <div>\n                            {team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n                        </div>\n                        <div>\n                            <small class='text-muted'>\n                                {team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n                                {team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {username}\n                                    </small>\n                                </>}\n                                {showBlockButton && <>\n                                    {isDeleted ? <>\n                                        <small class='text-danger ml-3'>\n                                            <i class='fas fa-ban' /> <Text id='teams.connect.deleted'>Deleted</Text>\n                                        </small>\n                                    </> : <>\n                                        <button class='btn btn-sm btn-link text-overflow p-0 text-muted ml-3'\n                                            style='font-size: 0.8em;'\n                                            onClick={this.deleteRequest}\n                                            data-team={myTeamId}\n                                            data-user={user.id}\n                                        >\n                                            <i class='fas fa-ban' /> <Text id='teams.connect.block'>Blokkere</Text>\n                                        </button>\n                                    </>}\n                                </>}\n                            </small>\n                        </div>\n                    </div>\n                    <div>\n                        {isBlocked ? <>\n                            {this.getUnblockButton(user.id, myTeamId)}\n                        </> : <>\n                            {this.getButton(team)}\n                        </>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TeamLine;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport ImageScroller from '../../components/imageScroller';\n\nfunction nl2br($str) {\n\tif (typeof $str === 'string') {\n\t\treturn $str.replace(/[\\n]/g, '<br>');\n\t}\n\treturn $str;\n}\n\nfunction byBib(a, b) {\n    const aHas = typeof a.bib !== 'undefined';\n    const bHas = typeof b.bib !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.bib - b.bib) || 0;\n}\n\n@observer\nclass AppRaceDetailMushers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayDetails: {},\n            editUserDetails: {},\n            showAdminSendMessage: {},\n            showAdminImport: {},\n            message: {},\n            inboxMessage: {},\n            submenu: 'chiplists',\n            preCheck: {},\n            raceCheck: {},\n            dogJournals: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n        this.parseInputTimer = null;\n    }\n\n    toggleDisplayDetails = (e) => {\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { editUserDetails } = appState;\n\t\tif (!editUserDetails[id]) {\n\t\t\tappState.toggleDisplayDetails(id)\n\t\t}\n\t}\n\n    adminToggleEditUser = async (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState, raceStore, adminStore } = this.props.stores;\n        const { editUserDetails } = appState;\n\n        if (!editUserDetails[id]) {\n            const musher = raceStore.getMusherById(id);\n            await adminStore.getUserByEmail(musher.email);\n            // console.log({ musher, user, teams });\n        }\n\t\tappState.toggleEditUserDetails(id)\n\t}\n\n    veterinaryToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleVeterinaryUserDetails(id, true)\n\t}\n\n    toggleAdminSendMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendMessage } = this.state;\n\t\tshowAdminSendMessage[classId] = !showAdminSendMessage[classId];\n\t\tthis.setState({ showAdminSendMessage });\n\t}\n\n    toggleAdminSendInboxMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendInboxMessage = {} } = this.state;\n\t\tshowAdminSendInboxMessage[classId] = !showAdminSendInboxMessage[classId];\n\t\tthis.setState({ showAdminSendInboxMessage });\n\t}\n\n    toggleAdminImport = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminImport } = this.state;\n\t\tshowAdminImport[classId] = !showAdminImport[classId];\n\t\tthis.setState({ showAdminImport });\n\t}\n\n    adminSignupEdit = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n    adminSignupSetValue = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const { field, value, classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 5);\n    }\n\n\tsendEmail = async (e) => {\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst to = e.target.closest('button').dataset.to;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { message } = this.state;\n\t\tconst { subject, body } = message;\n\t\tconst emailResponse = await appState.sendEmail({\n\t\t\tto,\n\t\t\tsubject,\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ emailResponse });\n\t}\n\n\tresetEmail = () => {\n\t\tthis.setState({\n\t\t\temailResponse: null,\n\t\t\tmessage: {\n\t\t\t\tsubject: '',\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    sendInboxMessage = async (e) => {\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { inboxMessage } = this.state;\n\t\tconst { body } = inboxMessage;\n\t\tconst inboxMessageResponse = await raceStore.sendInboxMessage({\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ inboxMessageResponse });\n\t}\n\n    resetInboxMessage = () => {\n\t\tthis.setState({\n\t\t\tinboxMessage: {\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    signupToRace = async ({ signup }) => {\n\t\tconst { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\t// team: user.team,\n\t\t\t\t// firstname: user.firstname,\n\t\t\t\t// lastname: user.lastname,\n\t\t\t\t// sportsClub: user.sportsClub,\n\t\t\t\t// email: user.email,\n\t\t\t\t// cellphone: user.cellphone,\n\t\t\t\t// facebook: user.facebook,\n\t\t\t\t// instagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    parseInput = async (data, classId) => {\n        clearTimeout(this.parseInputTimer);\n        this.parseInputTimer = setTimeout(() => this.doParseInput(data, classId), 500);\n    }\n\n    doParseInput = async (data, classId) => {\n        const lines = String(data).split('\\n');\n        let headers = [];\n        const jsonData = [];\n\n        // Get headers\n        const firstLine = lines[0];\n        if (firstLine.match(/\\t/)) {\n            headers = firstLine.split('\\t');\n        } else if (firstLine.match(/;/)) {\n            headers = firstLine.split(';');\n        } else {\n            headers = firstLine.split(',');\n        }\n\n        // Map data to headernames\n        for (let i = 1, l = lines.length; i < l; i += 1) {\n            const line = lines[i];\n            let values;\n            if (line.match(/\\t/)) {\n                values = line.split('\\t');\n            } else if (line.match(/;/)) {\n                values = line.split(';');\n            } else {\n                values = line.split(',');\n            }\n            const jsonObject = {};\n            values.forEach((v, idx) => {\n                let val = v;\n                if (headers[idx] === 'email') {\n                    val = v.toLowerCase();\n                }\n                jsonObject[headers[idx]] = val;\n            });\n            jsonData.push(jsonObject);\n        }\n\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        raceStore.addMultipleContestants({ id: raceid, classId, contestants: jsonData });\n        return true;\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n\t}\n\n    clearSearchForBib = () => {\n        this.setState({ searchForBib: '' });\n    }\n\n    savePreCheck = async (e) => {\n        const { id, chipid, name, shortname, team } = e.target.closest('button').dataset;\n        const { preCheck, dogJournals } = this.state;\n        const { dogJournalStore, userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\n        const vetData = {\n            id: user.id,\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email,\n            image: user.image,\n        };\n\n        const dogData = {\n            id,\n            chipId: chipid,\n            name,\n            shortname,\n            team,\n        };\n\n        const preCheckOject = util.getNestedValue(preCheck, id) || {};\n        const journalData = {\n            checkType: 'preCheck',\n            ...preCheckOject,\n        };\n\n        const data = [{\n            dog: { ...dogData },\n            journal: { ...journalData },\n            veterinary: { ...vetData },\n        }];\n\n        if (!dogJournals[chipid]){\n            dogJournals[chipid] = [];\n        }\n        dogJournals[chipid].push({\n            date: new Date(),\n            ...dogData,\n            ...journalData,\n            ...vetData,\n        });\n\n        await dogJournalStore.insert({ data });\n        delete preCheck[id];\n        this.setState({ preCheck });\n    }\n\n    render() {\n        const {\n            showAdminSendMessage = {}, showAdminSendInboxMessage = {}, showAdminImport = {},\n            message = {}, inboxMessage = {},\n            inboxMessageResponse, emailResponse, submenu, searchForBib,\n            preCheck = {},\n            raceCheck = {},\n            dogJournals = {},\n        } = this.state;\n\t\tconst { userStore, raceStore, appState, adminStore } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, isVeterinary } = userStore;\n        const { language = 'en' } = user;\n        const { displayDetails, editUserDetails, veterinaryUserDetails, selectedClassIds = [] } = appState;\n\n\t\tconst { race = {} } = this.props;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const filterByBib = (c) => {\n\t\t\tif (searchForBib) {\n                const regex = new RegExp(`${searchForBib.replace(/[^a-zA-Z 0-9æøåÆØÅ]/, '')}`, 'i');\n\t\t\t\treturn (regex.test(c.bib) || regex.test(c.firstname) || regex.test(c.lastname));\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { user: selectedUser, teams: selectedUserTeams } = adminStore;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.mushers'>Deltakere</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\n                    <div class='w-100 overflow-hidden'>\n                        <div\n                            class='d-flex flex-row flex-nowrap pb-2 px-1'\n                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                        >\n                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === race.classes.length - 1 && 'rounded-pill-right'} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.filterByClass}\n                                        data-id={currentClass.id}\n                                    >\n                                        {currentClass.title}\n                                    </button>\n                                </div>\n                            </>)}\n                        </div>\n                    </div>\n\n                    <div class='row mb-3'>\n                        <div class='col-6 offset-3'>\n                            <div class='input-group'>\n                                <input class='form-control form-control-lg' type='text' placeholder='Search for bib' value={searchForBib} onInput={linkstate(this, 'searchForBib')} />\n                                {searchForBib && <div class='input-group-append'>\n                                    <div class='input-group-text' onClick={this.clearSearchForBib}>x</div>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    {race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                        {isAdmin && <span class='float-right'>\n                            Total app users: {currentClass.contestants && currentClass.contestants.filter(musher => (musher.user || musher.team)).length}\n                        </span>}\n                        <h5>{currentClass.title} {currentClass.startDate && <>\n                            : <span class='font-weight-lighter'>\n                                {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </span>\n                        </>}</h5>\n\n                        {isAdmin && <>\n                            <a class='mx-2' href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a> -\n                            <a class='mx-2' href={`/tv/top5/${race.id}/${currentClass.id}`}>TV Top 5</a> -\n                            <a class='mx-2' href={`/tv/top3/${race.id}/${currentClass.id}`}>TV Top 3</a> -\n\n                            <a class='mx-2' href={`/tv/top10progress/${race.id}/${currentClass.id}`}>TV Top Progress 10</a> -\n                            <a class='mx-2' href={`/tv/top5progress/${race.id}/${currentClass.id}`}>TV Top Progress 5</a> -\n                            <a class='mx-2' href={`/tv/top3progress/${race.id}/${currentClass.id}`}>TV Top Progress 3</a> -\n\n                            <a class='mx-2' href={`/tv/team/${race.id}/1`}>TV One team</a> -\n                            <a class='mx-2' href={`/tv/tracking/${race.id}/${currentClass.id}`}>TV tracking</a> -\n                            <a class='mx-2' href={`/tv/freetext`}>TV free text</a> -\n\n                            <a class='mx-2' href={`/embed/top10/${race.id}/${currentClass.id}`}>Embed top10</a> -\n                            <a class='mx-2' href={`/embed/tracking/${race.id}/${currentClass.id}`}>Embed tracking</a> -\n                            <a class='mx-2' href={`/embed/chiplist/${race.id}/${currentClass.id}`}>Embed chiplist</a> -\n                            <a class='mx-2' href={`/embed/agreement/${race.id}/${currentClass.id}`}>Embed agreement</a> -\n                        </>}\n\n                        <div class='table-responsive'>\n                            <table class='table table-sm table-striped'>\n                                <thead>\n                                    <tr>\n                                        <th scope='col'>#</th>\n                                        <th scope='col' style='min-width: 90%;'><Text id='races.name'>Navn</Text></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {currentClass.contestants && currentClass.contestants.filter(filterByBib).sort(byBib).map((musher, idx) => {\n                                        const currentTeam = raceStore.getTeamById(musher.team);\n                                        const hasVaccines = raceStore.hasVaccines(currentTeam);\n                                        const hasMandatoryCheck = musher.mandatoryCheck;\n\n                                        return (<>\n                                            <tr onClick={this.toggleDisplayDetails} data-id={musher.id}>\n                                                <th scope='row'>\n                                                    {musher.bib ? <>\n                                                        {musher.bib}\n                                                    </> : <>\n                                                        <span class='font-weight-lighter text-muted'>{idx + 1}</span>\n                                                    </>}\n                                                </th>\n                                                <td\n                                                    class={`${displayDetails[musher.id] ? 'font-weight-bold' : ''}`}\n                                                    style={`${displayDetails[musher.id] || veterinaryUserDetails[musher.id] ? '' : 'line-height: 0.8em;'}`}\n                                                >\n                                                    {isVeterinary && <>\n                                                        {musher.team ? <>\n                                                            <button class='btn btn-primary btn-sm float-right ml-4' onClick={this.veterinaryToggleEditUser}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-4 disabled' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </>}\n                                                        {hasVaccines ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </>}\n                                                        {hasMandatoryCheck ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </>}\n                                                    </>}\n                                                    {isAdmin && <>\n                                                        <button class='btn btn-outline-warning btn-sm float-right ml-1' onClick={this.adminToggleEditUser}>\n                                                            <i class='fas fa-user-edit' />\n                                                        </button>\n                                                        {musher.paidSignupfee && <>\n                                                            <span class='float-right'>\n                                                                <i class='fas fa-check text-success' /><br />\n                                                            </span>\n                                                        </>}\n                                                        <small class='float-right'>\n                                                            {musher.raceStatus && <><span class='text-muted'>raceStatus:</span><br /> {musher.raceStatus}<br /></>}\n                                                            {musher.raceComment && <><span class='text-muted'>raceComment:</span><br /> {musher.raceComment}<br /></>}\n                                                            {musher.gpxResultsApproved && <><span class='text-muted'>gpxResultsApproved:</span><br /> {musher.gpxResultsApproved}<br /></>}\n                                                        </small>\n                                                    </>}\n                                                    {(isAdmin || isVeterinary) && race.liveRace > 0 && race.declaration && <>\n                                                        <span class='float-right text-success mr-2' style='font-size: 1.2em;'>\n                                                            {(musher.user || musher.team) && <i class='fas fa-mobile-alt ml-2' />}\n                                                            {musher.declaration && <i class='fas fa-handshake ml-2' alt={util.isoDate(musher.declarationDate)} />}\n\n                                                        </span>\n                                                    </>}\n                                                    {displayDetails[musher.id] ? <>\n                                                        {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                        {musher.firstname ? <>\n                                                            {musher.firstname} {musher.lastname}<br />\n                                                        </> : <>\n                                                            {musher.name}\n                                                        </>}\n                                                        <span class='text-muted'>{currentTeam.name}</span><br />\n                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                        {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}<br />\n\n                                                        {isAdmin && <>\n                                                            {musher.bib && <><i class='fas fa-tshirt ml-2' /> {musher.bib}</>}\n                                                            {musher.startTime && <><i class='fas fa-clock ml-2' /> {util.isoDate(musher.startTime)}</>}\n                                                        </>}\n\n                                                        {musher.price1 && <div class='font-weight-lighter'>\n                                                            <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </div>}\n                                                        {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                        {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                    </> : <>\n                                                        {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                            <i class='fas fa-trophy' />\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </span>}\n                                                        <nobr>\n                                                            {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                            {musher.firstname ? <>\n                                                                {musher.firstname} {musher.lastname}<br />\n                                                            </> : <>\n                                                                {musher.name}\n                                                            </>}\n                                                            <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        </nobr>\n                                                    </>}\n\n\n                                                    {/* <xmp>{JSON.stringify(currentTeam, null, 4)}</xmp> */}\n                                                    {isVeterinary && veterinaryUserDetails[musher.id] && <>\n                                                        <ScrollIntoView horizontal={'end'} vertical={'center'} />\n                                                        <div class='w-100 overflow-hidden' style='max-width: 100%;'>\n                                                            <div\n                                                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                            >\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-left rounded-none ${submenu === 'chiplists' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='chiplists'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-user-md' /> <Text id='racevet.chiplists'>Vaccines</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-none ${submenu === 'precheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='precheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-stethoscope' /> <Text id='racevet.precheck'>PreCheck</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-right rounded-none ${submenu === 'racecheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='racecheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-flag-checkered' /> <Text id='racevet.racecheck'>RaceCheck</Text></button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        {submenu === 'chiplists' && <>\n                                                            <h5 class='mt-4 border-bottom'>Chiplist & Vaccines</h5>\n                                                            <div class='container-fluid'>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogVaccines;\n                                                                    if (currentTeam && currentTeam.vaccines) {\n                                                                        dogVaccines = currentTeam.vaccines.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                                                                                </div>\n                                                                            {/* <xmp>{JSON.stringify(dogVaccines, null, 4)}</xmp> */}\n                                                                                {dogVaccines && dogVaccines.map((vac) => {\n                                                                                    return (\n                                                                                        <div class='col-4 px-1 overflow-hidden'>\n                                                                                            <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'}`}>\n                                                                                                <span class='font-weight-lighter'>\n                                                                                                    <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                                                                                    {vac.inKarens && <>\n                                                                                                        <br />\n                                                                                                        (<Text id='dogs.vaccine-karens'>karens</Text>: {util.format(vac.karensDaysLeft, 0)} <Text id='dogs.vaccine-karens-days-left'>days left</Text>)\n                                                                                                    </>}\n                                                                                                </span>\n                                                                                            </span>\n\n                                                                                            <div class='text-overflow'>\n                                                                                                <small class='font-weight-light'>\n                                                                                                    {vac.vaccineAgens.name}<br />\n                                                                                                    <nobr>{vac.vaccineName}</nobr><br />\n                                                                                                    {/* {util.isoDate(vac.date, false, false, true)}<br /> */}\n                                                                                                    {/* <span class='font-weight-lighter'>\n                                                                                                        <Text id='dogs.vaccine-veterinary'>Veterinær</Text>:\n                                                                                                    </span> {vac.veterinaryFirstname} {vac.veterinaryLastname} &lt;{vac.veterinaryEmail}&gt;<br /> */}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    );\n                                                                                })}\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'precheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Precheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogJournal;\n                                                                    if (currentTeam && currentTeam.journal) {\n                                                                        dogJournal = currentTeam.journal.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-12'>\n                                                                                    {dogJournal && dogJournal.length > 0 && dogJournal.map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                    {dogJournals[dog.chipId] && dogJournals[dog.chipId].length > 0 && dogJournals[dog.chipId].map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='diagnoseId'>Diagnostic</label>\n                                                                                        <select class=\"form-control\" id=\"diagnoseId\" onInput={linkstate(this, `preCheck.${dog.id}.diagnoseId`)} value={util.getNestedValue(preCheck, `${dog.id}.diagnoseId`)}>\n                                                                                            <option value=''>-- Please choose --</option>\n                                                                                            <option value='100'>No findings</option>\n                                                                                        </select>\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' onInput={linkstate(this, `preCheck.${dog.id}.weight`)} value={util.getNestedValue(preCheck, `${dog.id}.weight`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='heartRate'>Heart Rate</label>\n                                                                                        <input type='text' class='form-control' id='heartRate' onInput={linkstate(this, `preCheck.${dog.id}.heartRate`)} value={util.getNestedValue(preCheck, `${dog.id}.heartRate`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='bodyConditionScore'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bodyConditionScore' onInput={linkstate(this, `preCheck.${dog.id}.bodyConditionScore`)} value={util.getNestedValue(preCheck, `${dog.id}.bodyConditionScore`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='generalFindings'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='generalFindings' onInput={linkstate(this, `preCheck.${dog.id}.generalFindings`)} value={util.getNestedValue(preCheck, `${dog.id}.generalFindings`)} />\n                                                                                    </small>\n                                                                                    <small id='generalFindingsHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <button\n                                                                                        class='btn btn-outline-success'\n                                                                                        onClick={this.savePreCheck}\n                                                                                        data-id={dog.id}\n                                                                                        data-chipid={dog.chipId}\n                                                                                        data-team={currentTeam.id}\n                                                                                        data-name={dog.name}\n                                                                                        data-shortname={dog.shortName}\n                                                                                    > Save Pre Check</button>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'racecheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Racecheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='hrHeartLungs'>HR/Heart/Lungs</label>\n                                                                                        <input type='text' class='form-control' id='hrHeartLungs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='bcs'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bcs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='general'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='general' />\n                                                                                    </small>\n                                                                                    <small id='generalHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n                                                    </>}\n\n                                                    {(isAdmin && editUserDetails[musher.id]) && <>\n                                                        <h5>Admin edit:</h5>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label class='col-4 col-form-label text-right'>Email</label>\n                                                            <div class='col-8'>\n                                                                {musher.email}\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='bib' class='col-4 col-form-label text-right'>bib</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='bib'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.bib}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startTime' class='col-4 col-form-label text-right'>startTime</label>\n                                                            <div class='col-8'>\n                                                                <input type='datetime-local' class='form-control' id='startTime'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startTime ? util.isoDate(musher.startTime, false, false, false) : util.isoDate(currentClass.startDate, false, false, false)}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>team</label>\n                                                            <div class='col-8'>\n                                                                {selectedUserTeams ? <>\n                                                                    <select class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    >\n                                                                        <option value=''>-- Choose race team --</option>\n                                                                        {selectedUserTeams && selectedUserTeams.map(t => <>\n                                                                            <option value={t.id}>{t.name} {t.dogs ? `(${t.dogs.length})` : ''}</option>\n                                                                        </>)}\n                                                                    </select>\n                                                                </> : <>                                                                \n                                                                    <input type='number' class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    />\n                                                                </>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='user' class='col-4 col-form-label text-right'>user</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='user'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.user}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Race status</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='raceStatus'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceStatus}\n                                                                >\n                                                                    <option value=''>-- Choose race status --</option>\n                                                                    <option value='OK'>OK - Everything ok</option>\n                                                                    <option value='DNS'>DNS - Did Not Start</option>\n                                                                    <option value='DNF'>DNF - Did Not Finish</option>\n                                                                    <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                    <option value='DQ'>DQ - Disqualified</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='raceComment' class='col-4 col-form-label text-right'>Race comment</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='raceComment'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceComment}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='gpxResultsApproved' class='col-4 col-form-label text-right'>GPX Results approved (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='gpxResultsApproved'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='paidSignupfee' class='col-4 col-form-label text-right'>paidSignupfee (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='paidSignupfee'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.paidSignupfee ? util.isoDate(musher.paidSignupfee, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startOrder' class='col-4 col-form-label text-right'>startOrder</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='startOrder'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startOrder}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='cellphone' class='col-4 col-form-label text-right'>Mobil</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='cellphone'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.cellphone}\n                                                                />\n                                                                {selectedUser.cellphone && <small id='cellphoneHelp' class='form-text text-muted'\n                                                                    data-field='cellphone'\n                                                                    data-value={selectedUser.cellphone}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.cellphone || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='name' class='col-4 col-form-label text-right'>Navn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='name'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.name}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='firstname' class='col-4 col-form-label text-right'>Fornavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='firstname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.firstname}\n                                                                />\n                                                                {selectedUser.firstname && <small id='firstnameHelp' class='form-text text-muted'\n                                                                    data-field='firstname'\n                                                                    data-value={selectedUser.firstname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.firstname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='lastname' class='col-4 col-form-label text-right'>Etternavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='lastname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.lastname}\n                                                                />\n                                                                {selectedUser.lastname && <small id='lastnameHelp' class='form-text text-muted'\n                                                                    data-field='lastname'\n                                                                    data-value={selectedUser.lastname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.lastname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='address' class='col-4 col-form-label text-right'>Adresse</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='address'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.address}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalcode' class='col-4 col-form-label text-right'>Postalcode</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalcode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalcode}\n                                                                />\n                                                                {selectedUser.postalcode && <small id='postalcodeHelp' class='form-text text-muted'\n                                                                    data-field='postalcode'\n                                                                    data-value={selectedUser.postalcode}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalcode || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalplace' class='col-4 col-form-label text-right'>Postalplace</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalplace'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalplace}\n                                                                />\n                                                                {selectedUser.postalplace && <small id='postalplaceHelp' class='form-text text-muted'\n                                                                    data-field='postalplace'\n                                                                    data-value={selectedUser.postalplace}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalplace || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='flag' class='col-4 col-form-label text-right'>flag (emoji)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='flag'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.flag}\n                                                                />\n                                                                {selectedUser.flag && <small id='flagHelp' class='form-text text-muted'\n                                                                    data-field='flag'\n                                                                    data-value={selectedUser.flag}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.flag || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='countryCode' class='col-4 col-form-label text-right'>countryCode (iso)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='countryCode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.countryCode}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='birthdate' class='col-4 col-form-label text-right'>birthdate</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='birthdate'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.birthdate ? util.isoDate(musher.birthdate, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='sportsClub' class='col-4 col-form-label text-right'>Klubb</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='sportsClub'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.sportsClub}\n                                                                />\n                                                                {selectedUser.sportsClub && <small id='sportsClubHelp' class='form-text text-muted'\n                                                                    data-field='sportsClub'\n                                                                    data-value={selectedUser.sportsClub}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.sportsClub || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='status' class='col-4 col-form-label text-right'>Status</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='status'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.status}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='facebook' class='col-4 col-form-label text-right'>Facebook</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='facebook'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.facebook}\n                                                                />\n                                                                {selectedUser.facebook && <small id='facebookHelp' class='form-text text-muted'\n                                                                    data-field='facebook'\n                                                                    data-value={selectedUser.facebook}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.facebook || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='instagram' class='col-4 col-form-label text-right'>Instagram</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='instagram'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.instagram}\n                                                                />\n                                                                {selectedUser.instagram && <small id='instagramHelp' class='form-text text-muted'\n                                                                    data-field='instagram'\n                                                                    data-value={selectedUser.instagram}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.instagram || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        {/* <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Team</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='team' aria-describedby='teamHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.team}\n                                                                >\n                                                                    <option value=''>-- Velg team --</option>\n                                                                    {teams.map(team =>\n                                                                        <option value={team.id}>{team.name}</option>\n                                                                    )}\n                                                                </select>\n                                                            </div>\n                                                        </div> */}\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Klasse</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='class' aria-describedby='classHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.class}\n                                                                >\n                                                                    <option value=''>-- Choose race class --</option>\n                                                                    {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                                                    </>)}\n                                                                </select>\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price1' class='col-4 col-form-label text-right'>Price 1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price1}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price2' class='col-4 col-form-label text-right'>Price 2</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price2'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price2}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price3' class='col-4 col-form-label text-right'>Price 3</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price3'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price3}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='priceSent' class='col-4 col-form-label text-right'>Price sent</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='priceSent'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-5'>\n                                                            <div class='col-8'>\n                                                                <button type='button' class='btn btn-danger float-right'\n                                                                    id='deleteUser'\n                                                                    value='1'\n                                                                    onClick={this.adminSignupEdit}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                >\n                                                                    Delete user from this class\n                                                                </button>\n                                                            </div>\n                                                        </div>\n\n                                                    </>}\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n\n                        {isAdmin && <>\n                            {showAdminSendMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Email to all mushers in {currentClass.title}</h5>\n                                            <div class='overflow-auto p-5' style='max-height: 30vh;'>\n                                                <small>\n                                                    {currentClass.emails && currentClass.emails.map((email) => <div class='border rounded-lg p-3 mb-3'>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Date:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {util.formatDate(email.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                To:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.to.map(e => <span class='badge badge-info px-2 py-1 mr-2'>{e}</span>)}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Subject:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.subject}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row mt-2'>\n                                                            <div class='col-3 text-right'>\n                                                                Body:\n                                                            </div>\n                                                            <div class='col-9'\n                                                                dangerouslySetInnerHTML={{ __html: nl2br(email.body) }}\n                                                            />\n                                                        </div>\n                                                    </div>)}\n                                                </small>\n                                            </div>\n\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>To</label>\n                                                <div class='col-10'>\n                                                    {currentClass.contestants && currentClass.contestants.map((musher) => <>\n                                                        <span class='badge badge-info px-2 py-1 mr-2'>{musher.firstname} {musher.lastname} ({musher.email})</span>\n                                                    </>)}\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>Subject</label>\n                                                <div class='col-10'>\n                                                    <input type='text' class='form-control' id='subject'\n                                                        onInput={linkstate(this, 'message.subject')}\n                                                        value={message.subject}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'message.body')}\n                                                        value={message.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {message.body && <Markdown markdown={message.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            {emailResponse && <>\n                                                <div class={`alert alert-${emailResponse && emailResponse.status >= 300 ? 'danger' : 'success'}`} role='alert'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(emailResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                            <button class='btn btn-success float-right'\n                                                type='button'\n                                                data-to={currentClass.contestants && currentClass.contestants.map(musher => musher.email)}\n                                                data-raceclassid={currentClass.id}\n                                                onClick={this.sendEmail}\n                                            >\n                                                <i class='fas fa-paper-plane' /> Send email to all mushers\n                                            </button>\n                                            <button class='btn btn-danger float-right mr-2'\n                                                type='button'\n                                                onClick={this.resetEmail}\n                                            >\n                                                <i class='fas fa-times' /> Reset email\n                                            </button>\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Hide email form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Send email to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Send inbox message to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminImport} data-class={currentClass.id}>Toggle import form</button>\n                                </div>\n                            </>}\n\n                            {showAdminSendInboxMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Inbox Message to all mushers in {currentClass.title}</h5>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Inbox message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'inboxMessage.body')}\n                                                        value={inboxMessage.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {inboxMessage.body && <Markdown markdown={inboxMessage.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            <div class='clearfix'>\n                                                <button class='btn btn-success float-right'\n                                                    type='button'\n                                                    data-raceclassid={currentClass.id}\n                                                    onClick={this.sendInboxMessage}\n                                                >\n                                                    <i class='fas fa-paper-plane' /> Send inbox message to all mushers\n                                                </button>\n                                                <button class='btn btn-danger float-right mr-2'\n                                                    type='button'\n                                                    onClick={this.resetInboxMessage}\n                                                >\n                                                    <i class='fas fa-times' /> Reset inbox message\n                                                </button>\n                                            </div>\n\n                                            {inboxMessageResponse && <>\n                                                <div class={`alert alert-${inboxMessageResponse && inboxMessageResponse.status >= 300 ? 'danger' : 'success'}`} role='alert' style='max-height: 20vh;'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(inboxMessageResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Hide inboxmessage form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n\n                            </>}\n\n                            {isAdmin && showAdminImport[currentClass.id] && <>\n                                <div class='form-group'>\n                                    <label for='importUsers'><Text id='races.paste-users'>Paste your user data here to import users</Text>:</label>\n                                    <textarea\n                                        class='form-control'\n                                        id='importUsers'\n                                        rows='20'\n                                        oninput={e => this.parseInput(e.target.value, currentClass.id)}\n                                    />\n                                </div>\n                            </>}\n\n                        </>}\n                    </>)}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailMushers;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\n@observer\nclass Overlay extends Component {\n    render() {\n        const { children } = this.props;\n        return (\n            <div\n                class='w-100 h-100 fixed-top bg-light skipRefresh'\n                style={`\n                    margin-bottom: ${MARGIN_BOTTOM};\n                    margin-top: ${MARGIN_TOP};\n                    height: calc(100vh - ${MARGIN_TOP}) !important;\n                    top: 0;\n                    left: 0;\n                    overflow-x: auto;\n                    overflow-y: auto;\n                    transition: .3s;\n                    overscroll-behavior: contain;\n                    z-index: 10000;\n                `}\n            >\n                {children}\n            </div>\n        );\n    }\n}\n\nexport default Overlay;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailClasses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.classes'>Klasser</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                            <div class='col-12 col-sm-6 col-lg-4 mb-4'>\n                                <div class='border rounded rounded-lg p-3'>\n                                    <h5>{currentClass.title}</h5>\n\n                                    {isAdmin && <>\n                                        <a href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a><br />\n                                        <a href={`/tv/team/${race.id}/1`}>TV One team</a><br />\n                                    </>}\n\n                                    <small>\n                                        {currentClass.startDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.startdate'>Start</Text>:</span> {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                        {currentClass.endDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.enddate'>End</Text>:</span> {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                    </small>\n\n                                    <div><span class='font-weight-lighter'><Text id='race.distance'>Distanse</Text>:</span> {currentClass.distance} km</div>\n                                    <div><span class='font-weight-lighter'><Text id='race.signup'>Påmelding</Text>:</span> {currentClass.signupfee || race.signupfee} NOK</div>\n                                    <p class='clearfix'>\n                                        <Markdown markdown={mu.replaceImages(currentClass.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </p>\n                                    <small>\n                                        <Markdown markdown={mu.replaceImages(currentClass.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </small>\n                                    {currentClass.rules && <>\n                                        <h5><Text id='race.rules'>Regler</Text></h5>\n                                        <Markdown markdown={mu.replaceImages(currentClass.rules, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </>}\n                                </div>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailClasses;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-end mb-2'>\n                <span class='ml-2 text-muted font-weight-lighter'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </span>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport Drawer from '../../components/drawer/';\nimport Gauge from '../../components/gauge';\nimport DogScroller from '../../components/dog/scroller';\nimport HeaderCustom from '../../components/header/custom';\n\nimport RaceLiveResults from '../../components/races/liveResults';\nimport MusherInfoHeader from '../../components/races/musherInfoHeader';\nimport RaceLiveAddResult from '../../components/races/liveAddResult';\nimport RaceLiveMusherResult from '../../components/races/liveMusherResult';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t\treloadLastEpoch,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n\t\tconst { reloadIsActive, reloadLastEpoch } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass AppRaceDetailResults extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDrawer: false,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\tasync loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst { raceid } = props;\n        await raceStore.load(raceid);\n        const { race } = raceStore;\n\n\t\tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n            return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t\t}).flat();\n\n        if (allTeamIds.length > 0 && raceid) {\n\t\t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t\t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t\t\traceStore.getWorkoutSummaryActiveTeams();\n\t\t}\n\t\traceStore.getAllClassesSortedBy();\n\n\t\t// Set reload timer\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tthis.updateTimer.reload = setTimeout(async () => {\n\t\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\t\tthis.setState({ reloadLastEpoch });\n\t\t\tthis.loadRace();\n\t\t}, RELOAD_INTERVAL_IN_SEC * 1000);\n\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\tcontentIsNotLoaded: false,\n\t\t});\n\t}\n\n\ttoggleDisplayDetails = (e) => {\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleDisplayDetails(email)\n\t}\n\n\tadminToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleEditUserDetails(email)\n\t}\n\n\tadminSignupEdit = (e) => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n\tlockAllWorkoutsInRace = async () => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n\t\tconst lockMessage = await raceStore.lockAllWorkoutsInRace({ id: raceid });\n\t\tthis.setState({ lockMessage });\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n        this.closeDrawerMusher();\n        this.closeDrawerCheckpoint();\n\t}\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        this.setState({\n            showDrawer: !showDrawer,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerMusher = (e) => {\n\t\tconst selectedMusherBib = e.target.closest('.musher').dataset.bib;\n        const { showDrawerMusher } = this.state;\n        this.selectMusher(selectedMusherBib);\n    }\n\n    selectMusher = (selectedMusherBib) => {\n        this.setState({\n            selectedMusherBib,\n            showDrawerMusher: true,\n            showDrawerCheckpoint: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerMusher = () => {\n        this.setState({\n            selectedMusherBib: '',\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerCheckpoint = (e) => {\n\t\tconst selectedCheckpointId = e.target.closest('.checkpoint').dataset.id;\n        const { showDrawerCheckpoint } = this.state;\n        this.selectCheckpoint(selectedCheckpointId)\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerCheckpoint = () => {\n        this.setState({\n            selectedCheckpointId: '',\n            showDrawerCheckpoint: false,\n        });\n    }\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage, showDrawer, reloadLastEpoch, selectedMusherBib, selectedCheckpointId, showDrawerCheckpoint, showDrawerMusher } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], checkpointId } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n\t\tconst filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const isLiveRace = race.liveRace === 1;\n\n        return (<>\n            <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`/app-races/${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        {/* <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span> */}\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            <a href={`/app-races/${race.id}/tracking`}>\n                                <i class='fas fa-map-marked' />\n                            </a>\n                        </span>\n                    </div>\n                    <div>\n                        <a href={`/app-races/${race.id}`}>\n                            <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                        </a>\n                    </div>\n                    {/* {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <> */}\n                        <div class='d-flex align-items-center'>\n                            {isAdmin && <>\n                                <button class='btn btn-lg btn-block btn-success my-3' onClick={this.toggleDrawer}>\n                                    <i class='fas fa-clock' />\n                                </button>\n                            </>}\n                        </div>\n                    {/* </>} */}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>\n\n            {/* <div\n                class='container-fluid position-relative p-0 w-100 h-100'\n                style={`margin-top: ${MARGIN_TOP};`}\n            > */}\n            <div class='container-fluid position-relative p-0 overflow-auto bg-light' style={`margin-top: ${MARGIN_TOP}; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.results'>Results</Text></h2>\n                </div> */}\n                <div class='col-12'>\n                    <ReloadTimer stores={this.props.stores} />\n                    {isLiveRace ? <>\n\n                    </> : <>\n                        {user.email && <div class='alert alert-primary' role='alert'>\n                            {language === 'no' && <>\n                                Resultatene hentes direkte fra treningsøktene i QPaws appen.<br />\n                                <strong>For at treningsøktene skal bli registrert må øktene:</strong>\n                                <ul>\n                                    <li>Ha riktig dato som er innenfor løpsperioden.</li>\n                                    <li>Være markert som 'Konkurranse'.</li>\n                                    <li>Være registrert på teamet som er påmeldt.</li>\n                                </ul>\n                            </>}\n                            {language === 'en' && <>\n                                The results are imported directly from the workouts inside QPaws app.<br />\n                                <strong>To make sure your workouts are registered check the following:</strong>\n                                <ul>\n                                    <li>Use the correct date on your workout. Has to be inside the race period.</li>\n                                    <li>Mark the workout as 'Race'.</li>\n                                    <li>Workout has to be on the same team as you signed up with.</li>\n                                </ul>\n                            </>}\n                        </div>}\n                    </>}\n\n                    {race.resultsUrl && <div class='p-3 my-2 bg-light'>\n                        <a href={race.resultsUrl} target='_blank' rel='noreferrer' native>\n                            {race.resultsText ? race.resultsText : <><Text id='races.results-here'>Se resultater her</Text> </>} <i class='fas fa-chevron-circle-right' />\n                        </a>\n                    </div>}\n\n                    {(contentIsNotLoaded || !classes || classes.length === 0) && <div class='d-flex justify-content-center my-5 py-5'>\n                        <div class='spinner-border text-primary' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>}\n                </div>\n\n                <div class='col-12'>\n                    {race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => {\n                        return (<>\n                            <div class='mt-2 mb-5'>\n                                {race.resultDanger && <div class='alert alert-danger' role='alert'>\n                                    <div class='spinner-grow text-danger float-left' role='status'>\n                                        <span class='sr-only'>Loading...</span>\n                                    </div>\n                                    <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultDanger, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultWarning && <div class='alert alert-warning' role='alert'>\n                                    <i class='fas fa-exclamation float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultWarning, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultSuccess && <div class='alert alert-success' role='alert'>\n                                    <i class='fas fa-check float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultSuccess, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n\n                                {/* <h5>\n                                    {currentClass.title} {currentClass.startDate && <>\n                                        : <span class='font-weight-lighter'>\n                                            {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </span>\n                                    </>}\n                                </h5> */}\n\n\n                                {race.liveRace ? <>\n                                    <RaceLiveResults\n                                        stores={this.props.stores}\n                                        race={race}\n                                        currentClass={currentClass}\n                                        reloadLastEpoch={reloadLastEpoch}\n                                        key={`raceclass-${currentClass.id}`}\n                                        onClickMusher={this.toggleDrawerMusher}\n                                        onClickCheckpoint={this.toggleDrawerCheckpoint}\n                                        selectedCheckpointId={selectedCheckpointId}\n                                    />\n                                </> : <>\n\n                                    <span class='float-right'>\n                                        <span class='text-muted'><Text id='races.mushers'>Mushers</Text>: {currentClass.totalMushers || 0}</span>\n                                        <span class='text-muted ml-4'><Text id='races.finished-mushers'>Finished mushers</Text>: {currentClass.totalFinished || 0} </span>\n                                    </span>\n\n                                    <div class='table-responsive-md'>\n                                        <table class='table table-sm table-striped'>\n                                            <thead>\n                                                <tr>\n                                                    <th scope='col'>#</th>\n                                                    <th scope='col' style='min-width: 200px;'><Text id='races.name'>Navn</Text></th>\n                                                    {isAdmin && <>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Cellphone</th>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Email</th>\n                                                    </>}\n                                                    {isAdmin && <th scope='col' class='d-none d-lg-table-cell' style='min-width: 400px;'><Text id='races.stages'>Etapper</Text></th>}\n                                                    <th scope='col'><Text id='races.result'>Resultat</Text></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.map((contestant, idx) => {\n                                                    const { musher, currentTeam, currentStages, currentResults, completed, duration,\n                                                        normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                                        flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                                        finishedDate, totalWorkoutTimeUsedSec,\n                                                    } = contestant;\n\n                                                    const totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n                                                    return (<>\n                                                        <tr onClick={this.toggleDisplayDetails} data-email={musher.email}>\n                                                            <th scope='row'>\n                                                                {idx + 1}\n                                                                {isAdmin && currentResults && <>\n                                                                    <br />{currentResults.isLocked ? <i class='fas fa-lock text-danger mr-2' /> : <i class='fas fa-lock-open text-success mr-2' />}\n                                                                </>}\n                                                            </th>\n                                                            <td\n                                                                class={`${displayDetails[musher.email] ? 'font-weight-bold' : ''}`}\n                                                                style={`${displayDetails[musher.email] ? '' : 'line-height: 0.8em;'}`}\n                                                            >\n                                                                {displayDetails[musher.email] ? <>\n                                                                    {musher.firstname} {musher.lastname}<br />\n                                                                    <span class='text-muted'>{currentTeam.name}</span><br />\n                                                                    <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                                    {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}\n                                                                    {musher.price1 && <div class='font-weight-lighter'>\n                                                                        <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </div>}\n                                                                    {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                                    {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                                </> : <>\n                                                                    {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                                        <i class='fas fa-trophy' />\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </span>}\n                                                                    <nobr>\n                                                                        {musher.firstname} {musher.lastname}<br />\n                                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    </nobr>\n                                                                </>}\n\n                                                            </td>\n\n                                                            {isAdmin && <>\n                                                                <td class='d-none d-lg-table-cell'>{musher.cellphone}</td>\n                                                                <td class='d-none d-lg-table-cell'>{musher.email}</td>\n                                                            </>}\n\n                                                            {isAdmin && <td class='d-none d-lg-table-cell'>\n                                                                {isAdmin && <>\n                                                                    <button class='btn btn-primary btn-sm float-right' onClick={this.adminToggleEditUser}><i class='fas fa-user-edit' /></button>\n                                                                </>}\n\n                                                                {(isAdmin && editUserDetails[musher.email]) && <>\n                                                                    <h5>Admin edit:</h5>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Email</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Cellphone</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.cellphone}\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='team' class='col-sm-2 col-form-label text-right'>Race status</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <select class='form-control-plaintext' id='raceStatus'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceStatus}\n                                                                            >\n                                                                                <option value=''>-- Choose race status --</option>\n                                                                                <option value='OK'>OK - Everything ok</option>\n                                                                                <option value='DNS'>DNS - Did Not Start</option>\n                                                                                <option value='DNF'>DNF - Did Not Finish</option>\n                                                                                <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                                <option value='DQ'>DQ - Disqualified</option>\n                                                                                <option value='DC'>DC - Data changed by user</option>\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='raceComment' class='col-sm-2 col-form-label text-right'>Race comment</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='raceComment'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceComment}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='gpxResultsApproved' class='col-sm-2 col-form-label text-right'>GPX Results approved (date)</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='gpxResultsApproved'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price1' class='col-sm-2 col-form-label text-right'>Price 1</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price1'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price1}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price2' class='col-sm-2 col-form-label text-right'>Price 2</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price2'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price2}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price3' class='col-sm-2 col-form-label text-right'>Price 3</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price3'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price3}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='priceSent' class='col-sm-2 col-form-label text-right'>Price sent</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='priceSent'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                </>}\n\n                                                                {isAdmin && <div class='d-flex flex-wrap'>\n                                                                    {currentStages && currentStages.map((stage, idx) => {\n                                                                        const percent = stage.distanceKm / currentClass.distance * 100;\n                                                                        const width = percent > 100 ? 100 : parseInt(percent, 10);\n                                                                        const currentEpoch = Math.floor(new Date(stage.date).getTime() / 1000);\n                                                                        const inDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\n                                                                        inDate.setUTCSeconds(currentEpoch + parseInt(stage.duration, 10));\n                                                                        const images = stage.images.flat();\n                                                                        if (displayDetails[musher.email]) {\n                                                                            return (<>\n                                                                                <div class='bg-light border rounded-lg  text-right position-relative mr-1 mb-1' style={`width: 350px; min-width: 320px;`}>\n                                                                                    <svg viewBox='0 0 300 100' class='position-absolute' style='width: 100%; height: 95%; bottom: 0px; left: 0px; z-index: 0;'>\n                                                                                        <path d={`${stage.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n                                                                                    </svg>\n                                                                                    <div class='position-relative px-3'>\n                                                                                        <span class='position-absolute' style='top: 3px; left: 3px; font-size: 1.3em;'>\n                                                                                            {idx + 1}\n                                                                                        </span>\n                                                                                        <small>\n                                                                                            {isAdmin && <span class='position-absolute' style='top: 0px; right: -5px;'>\n                                                                                                {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-success' />}\n                                                                                            </span>}\n                                                                                            <span class='float-left'>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-out-alt text-muted' /> {util.formatDate(stage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-in-alt text-muted' /> {util.formatDate(inDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                            </span>\n                                                                                            <span class='float-right'>\n                                                                                                {/* {restTimeText}\n                                                                                                {restTimeTrackText} */}\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(stage.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(stage.rest) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(stage.duration - stage.rest) || 'n/a'}</nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(stage.avgDogs, 0) || 'n/a'}</nobr>\n                                                                                            </span>\n                                                                                        </small>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </>);\n                                                                        }\n                                                                        return (<>\n                                                                            <div class='bg-light border rounded-lg text-right position-relative px-3 mr-1 mb-1' style={`width: 300px; min-width: 300px;`}>\n                                                                                <small>\n                                                                                    {isAdmin && <span class='position-absolute' style='top: 2px; right: -5px;'>\n                                                                                        {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-sucess' />}\n                                                                                    </span>}\n\n                                                                                    <span class='float-left'>{idx + 1}</span>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                </small>\n                                                                            </div>\n                                                                        </>);\n                                                                    })}\n                                                                </div>}\n\n                                                            </td>}\n                                                            <td class='text-right position-relative pl-4'>\n                                                                {raceStatus(musher)}\n                                                                {musher.raceComment && <>\n                                                                    <div class='alert alert-warning text-left' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <Markdown markdown={mu.replaceImages(musher.raceComment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                                    </div>\n                                                                </>}\n                                                                {(isAdmin && currentResults.lastUpdated > lastAllowedChangeDate) && <>\n                                                                    <div class='alert alert-danger text-left d-none d-md-block' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <i class='fas fa-user-shield' /> Last changed: {util.formatDate(currentResults.lastUpdated, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                                    </div>\n                                                                </>}\n                                                                {completed >= 99 ? <span class='position-absolute' style='top: 10px; left: 0px;'><i class='fas fa-flag-checkered text-success' /></span> : ''}\n                                                                <small>\n                                                                    {displayDetails[musher.email] ? <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\n                                                                            <br /><nobr><i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(totals.firstEpoch)} - <i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(finishedDate)}</nobr>\n                                                                            {isAdmin && <>\n                                                                                <br />\n                                                                                <div class='text-danger'>\n                                                                                    {totals.firstGpxStartEpoch && <>\n                                                                                        <nobr>firstGpxStartEpoch: {util.isoDate(totals.firstGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                    {totals.lastGpxStartEpoch && <>\n                                                                                        <nobr>lastGpxStartEpoch: {util.isoDate(totals.lastGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                </div>\n                                                                            </>}\n                                                                        </> : <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br />\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                        </>}\n\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(currentResults.avgDogs, 0) || 'n/a'}</nobr> */}\n                                                                    </> : <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n                                                                        </> : <>\n                                                                            {isDone === 1 ? <>\n                                                                                <nobr class='font-weight-bold'><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br />\n                                                                            </> : <>\n                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr><br />\n                                                                            </>}\n                                                                        </>}\n                                                                    </>}\n\n                                                                    {/* raceDistance: {raceDistance}<br /> */}\n\n                                                                    {/* duration: {util.secToHms(duration)}<br />\n                                                                    normalizedDuration: {util.secToHms(normalizedDuration)}<br />\n                                                                    weightedNormalizedDuration: {util.secToHms(weightedNormalizedDuration)}<br /> */}\n\n                                                                    {/* totalKcalRelated: {totalKcalRelated}<br />\n                                                                    weightedTotalKcal: {weightedTotalKcal}<br />\n                                                                    flatTotalKcal: {flatTotalKcal}<br />\n                                                                    percentHarder: {percentHarder}<br /> */}\n\n                                                                    {/* loadIndex: {loadIndex}<br /> */}\n                                                                </small>\n                                                            </td>\n                                                        </tr>\n                                                    </>);\n                                                })}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                    <div class='text-center text-muted'>\n                                        <small>\n                                            {language === 'no' && <>\n                                                OBS! Ref reglene så er det ikke lov til å endre treningsøktene som er med i konkurransen etter at løpet er ferdig.<br />\n                                                Forsøk på dette vil resultere i automatisk deplassering på listene.\n                                            </>}\n                                            {language === 'en' && <>\n                                                IMPORTANT! According to the rules: It is NOT allowed to try alter the workouts related to the competition after the race has ended.<br />\n                                                Attempts will result in automatic deplacement on the resultlists.\n                                            </>}\n                                        </small>\n                                    </div>\n\n                                    {isAdmin && <>\n                                        <button\n                                            class='btn btn-danger btn-lg float-right m-4'\n                                            onClick={this.lockAllWorkoutsInRace}\n                                        >\n                                            Lock all workouts in this race\n                                        </button>\n                                        <xmp class='m-5'>{JSON.stringify(lockMessage, null, 4)}</xmp>\n                                    </>}\n\n                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                                        <a class='btn btn-lg btn-block btn-primary' href={`https://homerunrace.no/index#/race/${race.id}/results`}>All results</a>\n                                    </div>\n                                </>}\n                            </div>\n                        </>);\n                    })}\n                </div>\n\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <RaceLiveAddResult stores={this.props.stores} />\n                </Drawer>\n            </>}\n            {showDrawerCheckpoint && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerCheckpoint}>\n                    <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                </Drawer>\n            </>}\n            {showDrawerMusher && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerMusher}>\n                    <RaceLiveMusherResult stores={this.props.stores} bib={selectedMusherBib} onClickNav={this.selectMusher}  />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const {\n            radius = 50,\n            heightAdd = 0,\n            color = 'success',\n\n            showPercentText = true,\n            percent = 0,\n            prefix = '',\n\n            showCenterText= false,\n            centerText,\n            centerTextSize,\n            centerTextX,\n            centerTextY,\n\n            total = '',\n            totalY = '90%',\n            totalX = '50%',\n            totalTextAnchor = 'middle',\n                        \n            completed = '',\n            completedY = '65%',\n            completedX = '50%',\n            completedTextAnchor = 'middle',\n        } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = centerTextSize || radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2 + heightAdd}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    {showPercentText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>}\n\n                    {showCenterText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{centerText}</text>}\n\n                    {completed && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={completedX}\n                        y={completedY}\n                        dominant-baseline='middle'\n                        text-anchor={completedTextAnchor}\n                        font-size={textSizeSmall}\n                    >{completed}</text>}\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x={totalX}\n                        y={totalY}\n                        dominant-baseline='middle'\n                        text-anchor={totalTextAnchor}\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveCheckpointResult extends Component {\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    toggleInfo = (e) => {\n        const { showInfo } = this.state;\n\t\tthis.setState({ showInfo: !showInfo });\n\t}\n\n    render() {\n        const { id, onClickNav = () => {} } = this.props;\n        const { submenu = 'detailsIn', showInfo } = this.state;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        let selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === id) : null;\n        selectedCheckpoint = selectedCheckpoint ? selectedCheckpoint : {};\n        const { sortedContestants = [] } = raceStore;\n\n        const allResultsCp = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp', '-direction'])).filter(e => e.checkpoint === id) : null;\n\n        const lastResultsIn = allResultsCp ? allResultsCp.filter(e => e.direction === 'in') : null;\n        const lastResultsOut = allResultsCp ? allResultsCp.filter(e => e.direction === 'out') : null;\n        const lastResultsLegtimes = allResultsCp ? allResultsCp.slice().sort(fieldSorter(['legTime', 'timestamp'])).filter(e => e.direction === 'in') : null;\n\n        const lastResultsScratched = allResultsCp ? allResultsCp.filter(e => e.direction === 'scratched') : null;\n\n        const prevCp = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.sortOrder === selectedCheckpoint.sortOrder - 1) : null;\n        const nextCp = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.sortOrder === selectedCheckpoint.sortOrder + 1) : null;\n        const prevResultsOut = currentClass.results && prevCp ? currentClass.results.slice().filter(e => e.checkpoint === prevCp.id && e.direction === 'out') : null;\n        const nextResultsIn = currentClass.results && nextCp ? currentClass.results.slice().filter(e => e.checkpoint === nextCp.id && e.direction === 'in') : null;\n\n        const image = selectedCheckpoint.image;\n        const topImage = selectedCheckpoint.topImage;\n        const shortname = mu.displayNameShort(selectedCheckpoint);\n        const dotColor = ''; // mu.getRankingColor(selectedCheckpoint.sortOrder);\n\n        const defaultImage = './assets/checkpoint.png';\n        const headerImage = topImage ? topImage : defaultImage;\n\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage}\");` : ''}`}\n            />\n\n            {nextCp && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextCp.id)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevCp && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevCp.id)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex position-relative' style='margin-top: 16vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {selectedCheckpoint.sortOrder && selectedCheckpoint.sortOrder !== 'n/a' && <>{selectedCheckpoint.sortOrder}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.2em;'>\n                    <h3 class='mb-2'>\n                        {selectedCheckpoint.name}\n                    </h3>\n                    <div>\n                        {selectedCheckpoint.cellphone && <><span class='text-muted'><i class='fas fa-phone' /></span> <a href={`tel:${selectedCheckpoint.cellphone}`}>{selectedCheckpoint.cellphone}</a></>}\n                        {selectedCheckpoint.email && <><a class='ml-3' href={`mailto:${selectedCheckpoint.email}`}><i class='fas fa-envelope' /></a></>}\n                        {selectedCheckpoint.facebook && <><a class='ml-3' href={`${mu.asFacebookLink(selectedCheckpoint.facebook)}`}><i class='fab fa-facebook' /></a></>}\n                        {selectedCheckpoint.instagram && <><a class='ml-3' href={`${mu.asInstagramLink(selectedCheckpoint.instagram)}`}><i class='fab fa-instagram' /></a></>}\n                        {selectedCheckpoint.description && <><a class='ml-3 text-primary' onCLick={this.toggleInfo}><i class='fas fa-info-circle' /></a></>}\n                    </div>\n                </div>\n            </div>\n            {showInfo && selectedCheckpoint.description && <div>\n                <Markdown markdown={mu.replaceImages(selectedCheckpoint.description, selectedCheckpoint.images)} markdownOpts={mu.getMarkdownOptions()} />\n            </div>}\n            <div class=''>\n                <div class=''>\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-flag' /> Start\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {util.format(selectedCheckpoint.totalDistance || 0, 0)} <span class='text-muted'>km</span>\n                            </div>\n                        </div>\n                        {!selectedCheckpoint.isStartLine && <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-arrow-down' /> Prev\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.format(selectedCheckpoint.distanceFromPrev || 0, 0)} <span class='text-muted'>km</span></nobr>\n                            </div>\n                        </div>}\n                        {/* <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-campground' /> CP\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {selectedCheckpoint.name}\n                            </div>\n                        </div> */}\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-arrow-up' /> Next\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {util.format(selectedCheckpoint.distanceToNext || 0, 0)} <span class='text-muted'>km</span>\n                            </div>\n                        </div>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-flag-checkered' /> Finish\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.format(selectedCheckpoint.distanceToFinish || 0, 0)} <span class='text-muted'>km</span></nobr>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='d-flex justify-content-between mt-2'>\n                        {selectedCheckpoint.requiredRestMinutes && <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-bed' /> Mandatory rest\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.secToHms(selectedCheckpoint.requiredRestMinutes * 60, true)}</nobr>\n                                {selectedCheckpoint.timeEqualization && <>\n                                    <span class='text-muted ml-2'>+</span> <i class='fas fa-user-clock' /> Time Equalization\n                                </>}\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n            </div>\n\n\n            {selectedCheckpoint.hideResults ? <></> : <>\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'detailsIn' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='detailsIn'\n                        >\n                            Details in\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'detailsOut' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='detailsOut'\n                        >\n                            Detail out\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'legTimes' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='legTimes'\n                        >\n                            Leg times\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                    style='max-height: 60vh;'\n                >\n                    {/* {\n                        \"position\": [],\n                        \"id\": \"2e8f57cb-4bc0-4f5f-b41c-783944be9b8a\",\n                        \"bib\": 30,\n                        \"checkpoint\": \"e1f8e66f-1629-4ea6-b155-fa8fb3b377ab\",\n                        \"direction\": \"out\",\n                        \"dogs\": 10,\n                        \"timestamp\": \"2019-03-12T05:50:00.000Z\"\n                    }, */}\n\n                    <div class='table-responsive-lg'>\n                        <table class='table table-striped table-sm'>\n                            {submenu === 'detailsIn' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs in</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsIn && lastResultsIn.map((res, idx) => {\n                                    const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let restTime;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                        restTime = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                    }\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>{res.dogs}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                            {submenu === 'detailsOut' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Rest in cp</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs out</th>\n                                        <th>Next CP</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsOut && lastResultsOut.map((res, idx) => {\n                                    let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    selectedMusher = selectedMusher ? selectedMusher : {};\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const nextResIn = nextResultsIn && nextResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let restTime;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                        restTime = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                    }\n\n                                    let estTimeInNextCp;\n                                    let estTimeToNext = selectedCheckpoint.estTimeToCpMinutes || 0;\n                                    if (estTimeToNext && selectedMusher.cpSortOrder === selectedCheckpoint.sortOrder) {\n                                        estTimeInNextCp = mu.addDeltaSec(resOut.timestamp, estTimeToNext * 60);\n                                    }\n\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && restTime && <>\n                                                    <nobr>\n                                                        {util.secToHms(restTime, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut.dogs}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isFinishLine && nextResIn ? <>\n                                                    <nobr>\n                                                        {mu.formatDate(nextResIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </> : <>\n                                                    {estTimeInNextCp && <>\n                                                        <nobr class='text-muted'>\n                                                            {mu.formatDate(estTimeInNextCp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </nobr>\n                                                    </>}\n                                                </>}\n                                            </td>                                    \n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                            {submenu === 'legTimes' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs in</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsLegtimes && lastResultsLegtimes.map((res, idx) => {\n                                    const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>{res.dogs}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                        </table>\n                    </div>\n                </div>\n            \n            </>}\n\n\n\n            {/* <h3>RaceLiveCheckpointResult</h3> */}\n            {/* <h5>{id} {selectedCheckpoint.name}</h5> */}\n            {/* <xmp>{JSON.stringify(selectedCheckpoint, null, 4)}</xmp> */}\n            {/* <xmp>{JSON.stringify(selectedCheckpoint, null, 4)}</xmp> */}\n            {/* <xmp>{JSON.stringify(lastResultsIn, null, 4)}</xmp> */}\n        </>);\n    }\n}\n\nexport default RaceLiveCheckpointResult;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Trackmap from '../../components/public/trackmap';\nimport Gauge from '../../components/gauge';\n\nimport DogScroller from '../../components/dog/scroller';\nimport ImageScroller from '../imageScroller';\n\nimport Overlay from '../../components/overlay/';\nimport Drawer from '../../components/drawer/';\nimport HeaderCustom from '../../components/header/custom';\nimport Loading from '../../components/loading/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\nimport LineGraph from '../../components/lineGraph';\nimport PublicTeam from '../team/public';\n\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nfunction PageTitle(title, classes = '', style = '') {\n    useEffect(() => {\n        document.title = `Homerun Race: ${title}`;\n    }, [title]);\n    return <span class={classes} style={style}>{title}</span>;\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\nconst initialState = {\n    isLoading: false,\n    email: '',\n    submenu: 'ads',\n    jwtToken: util.getJwtToken(),\n\n    reloadInSec: null,\n    reloadIsActive: false,\n\n    leaderboardMode: 'mushers',\n    filterByraceClass: '',\n    showLeaderBoard: true,\n    showNews: true,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\nconst REPLAY_SPEED = 1;\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    initComponent = () => {\n        this.setState({\n            reloadIsActive: true,\n        }, () => this.tickReloadTimeer());\n    }\n\n    tickReloadTimeer = () => {\n        const { reloadLastEpoch } = this.props;\n        const { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n            const now = Math.floor(new Date().getTime() / 1000);\n            const reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n            this.setState({ reloadInSec });\n            clearTimeout(this.updateTimer.tick);\n            this.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n        return false;\n    }\n\n    componentDidMount() {\n        this.initComponent();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    render() {\n        const { reloadInSec } = this.state;\n        const { radius = 13, fontSize = 11, classNames = '' } = this.props;\n        const reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n        return (<>\n            <span class={classNames}>\n                <Gauge key={`gauge-reload-page`}\n                    color='primary'\n                    radius={radius}\n                    showPercentText={false}\n                    percent={reloadPercent}\n                    showCenterText={true}\n                    centerText={reloadInSec}\n                    centerTextSize={fontSize}\n                    centerTextY={'55%'}\n                />\n            </span>\n        </>);\n    }\n}\n\n@observer\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { submenu = 'details' } = this.state;\n        const { isAdmin } = userStore;\n\n        const { waypoints } = raceStore;\n        const { raceClass = {}, race = {}, onMarkerClick = () => {} } = this.props;\n\n        return (<>\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em;'>{race.title} - {raceClass.title}</span>\n            </div>\n\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 60vh;'\n            >\n                {!waypoints || waypoints.length === 0 && <>\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-dog' /></div>\n                        <div class='w-100'>\n                            <h3><Text id='races.no-teams-found'>No teams found!</Text></h3>\n                            <Text id='races.loading-teams'>Loading teams...</Text>\n                        </div>\n                        <div class='spinner-border text-primary' style='width: 3rem; height: 3rem;' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>\n            </>}\n\n                <table class='table table-striped'>\n                    {waypoints && waypoints.map((musher, idx) => <>\n                        <tr onClick={() => onMarkerClick(musher)}>\n                            <td style='width: 15px;'>{musher.rank}</td>\n                            <td>\n                                <div class='d-flex justify-content-between align-items-start w-100'>\n                                    <div\n                                        class='rounded-circle imageRounded imageRoundedSmallIcon float-left'\n                                        style={`background-image: url(\"${musher.image}\"); background-size: cover; border: 1px ${mu.getRankingColor(musher.rank || idx + 1)} solid; width: 30px !important; height: 30px;`}\n                                    >\n                                        &nbsp;\n                                    </div>\n                                    <div class='flex-grow-1 ml-2'>\n                                        <span class='text-white rounded-pill-both px-2 mr-2'\n                                            style={`background-color: ${mu.getRankingColor(musher.rank || idx + 1)};`}\n                                        >\n                                            {musher.bib}\n                                        </span>\n\n                                        {musher.flag}  {musher.title}\n                                        <div>\n                                            {musher.finishTime < 9999999999 ? <>\n                                                {musher.diffToFirstFinishTime > 0 ? <>\n                                                    {util.secToHms(musher.diffToFirstFinishTime)}\n                                                </> : <>                                            \n                                                    {util.formatDate(util.parseInputDate(musher.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </>}\n                                            </> : <>\n                                                <span class='text-muted'><i class='fas fa-compass' /></span> {mu.windDirection(musher.bearing)}\n                                                <span class='text-muted font-weight-light ml-3'><i class='fas fa-tachometer-alt' /></span> {util.format(musher.speed || 0, 1)} km/h<br />\n                                                {/* {util.format(musher.totalDistanceOnTrack, 1)} km */}\n                                                <span class='text-muted font-weight-light'><i class='fas fa-flag-checkered' /></span> {util.format(musher.distanceToFinish, 1)} km\n                                                {musher.distanceToFinish !== musher.distanceToFirst && musher.distanceToFirst > 0 && <>\n                                                    <span class='text-muted font-weight-light ml-3'>1st:</span> {util.format(musher.distanceToFirst, 1)} km\n                                                </>}\n                                                {musher.distanceToFinish !== musher.distanceToForward && musher.distanceToForward > 0 && <>\n                                                    <span class='text-muted font-weight-light ml-3'><i class='fas fa-arrow-up' /></span> {util.format(musher.distanceToForward, 1)} km\n                                                </>}\n                                                {musher.distanceToBehind > 0 && <>\n                                                    <span class='text-muted font-weight-light ml-3'><i class='fas fa-arrow-down' /></span> {util.format(musher.distanceToBehind, 1)} km\n                                                </>}\n                                            </>}\n                                        </div>\n                                    </div>\n                                    <div>\n                                        {musher.finishTime < 9999999999 ? <>\n                                            <i class='fas fa-flag-checkered' />\n                                        </> : <>\n                                            <i class='fas fa-running' />\n                                        </>}\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </>)}\n                </table>\n\n                {/* waypoints: {JSON.stringify(waypoints.slice(0, 5), null, 4)}<br /> */}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass MusherInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { wpData = {}, onMarkerClick = () => {} } = this.props;\n        const wp = raceStore.findWaypointByBib(wpData.bib);\n\n        const { isAdmin } = userStore;\n        const { user: currentUser = {} } = userStore;\n\n        const musher = wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email);\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(wpData.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = mu.getRankingColor(wp.rank);\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(wpData.bib);\n\n        const defaultImage = {\n            s3XXLargeLink: './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const locale = 'en-GB';\n        const xTicks = [];\n        const dataLeft = [];\n        const legendLeft = [];\n        const unitLeft = [];\n        if (wp && wp.speeds && wp.speeds.length > 0) {\n            const xTicksRange = util.range(wp.speeds[0].timestamp, wp.speeds[wp.speeds.length - 1].timestamp, 600);\n            const partSize = Math.ceil(xTicksRange.length / 5);\n            const parts = Math.floor(xTicksRange.length / partSize);\n            // if (showDebug) {\n                // console.log({ xTicksRange, parts, partSize });\n            // }\n            for (let i = 0, l = xTicksRange.length; i < l; i += partSize) {\n                xTicks.push(\n                    mu.formatDate(util.parseInputDate(xTicksRange[i]), { locale, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })\n                );\n            }\n            xTicks.push(\n                mu.formatDate(util.parseInputDate(xTicksRange[xTicksRange.length - 1]), { locale, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })\n            );\n            // const smoothed = mu.smoothArray(elevations, 5);\n            const data = wp.speeds.map((speed) => ({\n                x: speed.timestamp,\n                y: speed.speed,\n            }));\n            dataLeft.push(data);\n            legendLeft.push('Avg speed');\n            unitLeft.push('km/t');\n\n        }\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n        // console.log({ xTicks });\n\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n            />\n            {behind.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {inFront.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex position-relative' style='margin-top: 17vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                    style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                >\n                    {!image && <div class='text-muted' style='font-size: 25px; padding-top: 5px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -20px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.2em;'>\n                    {/* {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                        <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                    </span>} */}\n\n                    <h3 class='mb-0'>\n                        {musher.flag} {musher.firstname} {musher.lastname}\n                    </h3>\n                    <h6 class='mb-0'>{musher.sportsClub || <>&nbsp;</>}</h6>\n                </div>\n            </div>\n\n            <div class='d-flex justify-content-center mb-3'>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='details'\n                    >\n                        Details\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='team'\n                    >\n                        Team\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='dogs'\n                    >\n                        Dogs\n                    </button>\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n            >\n                {submenu === 'details' && <>\n                    <div class='d-flex justify-content-between'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-list' /> Ranking\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 2.0em;'>\n                                {wp.rank}\n                            </div>\n                        </div>\n                        {wp.finishTime < 9999999999 ? <>\n                            {wp.diffToFirstFinishTime > 0 ? <>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-clock' /> Diff to 1st\n                                        </small>\n                                    </div>\n                                    <div class='text-center' style='font-size: 2.0em;'>\n                                        {util.secToHms(wp.diffToFirstFinishTime)}\n                                    </div>\n                                </div>\n                            </> : <>                                            \n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-clock' /> Start time\n                                        </small>\n                                    </div>\n                                    <div class='text-center' style='font-size: 1.5em;'>\n                                        {util.formatDate(util.parseInputDate(musher.startTime || raceClass.startDate || wp.startTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </div>\n                                </div>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-clock' /> Finish time\n                                        </small>\n                                    </div>\n                                    <div class='text-center' style='font-size: 1.5em;'>\n                                        {util.formatDate(util.parseInputDate(wp.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </div>\n                                </div>\n                            </>}\n                        </> : <>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-tachometer-alt' /> Current speed\n                                    </small>\n                                </div>\n                                <div class='text-center' style='font-size: 2.0em;'>\n                                    {util.format(wp.speed || 0, 1)} <span class='text-muted' style='font-size: 0.5em;'>km/h</span>\n                                </div>\n                            </div>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-compass' /> Bearing\n                                    </small>\n                                </div>\n                                <div class='text-center' style='font-size: 2.0em;'>\n                                    {mu.windDirection(wp.bearing)}\n                                </div>\n                            </div>\n                        </>}\n                    </div>\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-road' /> Total distance\n                                </small>\n                            </div>\n                            <div class='text-center mt-2'>\n                                <Gauge key={`gauge-reload-page`}\n                                    color='primary'\n                                    radius={40}\n                                    showPercentText={false}\n                                    percent={totalDistancePercent}\n                                    showCenterText={true}\n                                    centerText={`${totalDistancePercent}%`}\n                                    centerTextSize={18}\n                                    centerTextY={'55%'}\n                                />\n                            </div>\n                            <div class='text-center'>\n                                <small>\n                                    {util.format(wp.totalDistanceOnTrack, 1)} / {util.format(totalTrackLength, 1)} <span class='text-muted'>km</span>\n                                </small>\n                            </div>\n                        </div>                        \n                        {/* <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    Current speed\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 2.0em;'>\n                                {util.format(wp.speed || 0, 1)} <span class='text-muted' style='font-size: 0.5em;'>km/h</span>\n                            </div>\n                        </div> */}\n                    </div>\n\n                    {wp.finishTime < 9999999999 ? <>\n                        {wp.diffToFirstFinishTime > 0 ? <>\n                            <div class='d-flex justify-content-between mt-2'>\n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-clock' /> Start time\n                                        </small>\n                                    </div>\n                                    <div class='text-center' style='font-size: 1.5em;'>\n                                        {util.formatDate(util.parseInputDate(musher.startTime || raceClass.startDate || wp.startTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </div>\n                                </div>                                \n                                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                                    <div>\n                                        <small class='text-muted'>\n                                            <i class='fas fa-clock' /> Finish time\n                                        </small>\n                                    </div>\n                                    <div class='text-center' style='font-size: 1.5em;'>\n                                        {util.formatDate(util.parseInputDate(wp.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </div>\n                                </div>\n                            </div>\n                        </> : <></>}\n                    </> : <>                        \n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-arrow-down' /> Behind\n                                    </small>\n                                </div>\n                                <div class='text-center'>\n                                    {util.format(wp.distanceToBehind, 1)} <span class='text-muted'>km</span>\n                                </div>\n                            </div>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                <div>\n                                    <small class='text-muted'>\n                                        Team\n                                    </small>\n                                </div>\n                                <div class='text-center'>\n                                    <i class='fas fa-dog' />\n                                </div>\n                            </div>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-arrow-up' /> In front\n                                    </small>\n                                </div>\n                                <div class='text-center'>\n                                    {util.format(wp.distanceToForward, 1)} <span class='text-muted'>km</span>\n                                </div>\n                            </div>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-arrow-up' /> To first\n                                    </small>\n                                </div>\n                                <div class='text-center'>\n                                    {util.format(wp.distanceToFirst, 1)} <span class='text-muted'>km</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                                <div>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-flag-checkered' /> Finish\n                                    </small>\n                                </div>\n                                <div class='text-center' style='font-size: 2.0em;'>\n                                    {util.format(wp.distanceToFinish, 1)} <span class='text-muted' style='font-size: 0.5em;'>km</span>\n                                </div>\n                            </div>\n                        </div>\n                    </>}\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Racetime\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 2.0em;'>\n                                {util.secToHms(wp.raceTime)}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle w-100'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-tachometer-alt' /> Speed plot\n                                </small>\n                            </div>\n                            <div class='w-100 mt-2 overflow-auto'>\n                                <LineGraph\n                                    stores={this.props.stores}\n                                    width={1000}\n                                    height={200}\n                                    showXTicks={1}\n                                    // xTicksVal={val => `${val}`}\n                                    xTicks={xTicks}\n                                    paddingTop={30}\n                                    paddingLeft={50}\n                                    yTicksLeftWidth={'50px'}\n                                    lineFromXzero={true}\n                                    lineFromXmax={true}\n                                    // xTicksLink={'/workouts/week/'}\n\n                                    // yMaxLeft={25}\n                                    dataLeft={dataLeft}\n                                    legendLeft={legendLeft}\n                                    dataFillLeft={[1]}\n                                    // yMaxLeft={30}\n                                    // yMinLeft={0}\n                                    showYTicksLeft={1}\n                                    yTicksLeftPostfix={' km/t'}\n                                    unitLeft={unitLeft}\n                                    avgWindowLeft={[7, 0]}\n                                    smoothLeft={[0, 0]}\n\n                                    // dataRight={dataRight}\n                                    // legendRight={legendRight}\n                                    // // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                                    // // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                                    // showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                                    // yTicksRightPostfix={'km/t'}\n                                    // unitRight={unitRight}\n                                    // avgWindowRight={[0, 0, 0]}\n                                    // smoothRight={[1, 1, 1]}\n\n                                    // marker={week}\n                                />\n                                {/* {JSON.stringify(wp.speeds, null, 4)} */}\n                            </div>\n                        </div>\n                    </div>\n\n\n                    {/* distanceToFinish: {JSON.stringify(wp.distanceToFinish, null, 4)}<br />\n                    distanceToFirst: {JSON.stringify(wp.distanceToFirst, null, 4)}<br />\n                    distanceToForward: {JSON.stringify(wp.distanceToForward, null, 4)}<br />\n                    distanceToBehind: {JSON.stringify(wp.distanceToBehind, null, 4)}<br />\n                    speed: {JSON.stringify(wp.speed, null, 4)}<br />\n                    bearing: {JSON.stringify(wp.bearing, null, 4)}<br />\n                    finishTime: {util.isoDate(wp.finishTime)}<br /> */}\n\n                    {/*\n                        \"lat\": 62.53911889158189,\n                        \"lng\": 11.38222829438746,\n                        \"icon\": null,\n                        \"image\": \"https://themusher.app/220x/the-musher-90bc4d13-1204-49db-9a09-9e4d84775b00.jpeg\",\n                        \"bib\": 3,\n                        \"rank\": 1,\n                        \"flag\": \"🇳🇴\",\n                        \"title\": \"Wærner\",\n                        \"body\": \"-0,0 km/t, -0,0 km\",\n                        \"color\": \"#FA0007\", \n                        \"totalDistanceOnTrack\": 619.146473819473,\n                        \"bearing\": 0,\n                        \"finishTime\": 1644169451                    \n                    */}\n                    \n\n                    {totals && totals.distanceKm && <>\n                        <div class='table-responsive-lg'>\n                            <table class='table table-borderless'>\n                                <tbody>\n                                    <tr>\n                                        <td style='width: 5%;'><i class='fas fa-dog' /></td>\n                                        <td style='width: 60%'><Text id='races.dogs'>Dogs</Text></td>\n                                        <td style='width: 5%;'>&nbsp;</td>\n                                        <td class='text-right' style='width: 30%;'>{team.dogs.length}</td>\n                                    </tr>\n                                    <tr>\n                                        <td><i class='fas fa-road' /></td>\n                                        <td><Text id='races.distance'>Distance</Text></td>\n                                        <td>&nbsp;</td>\n                                        <td class='text-right'><nobr>{totals.distanceKm ? `${util.format(totals.distanceKm, 1)} km` : 'n/a'}</nobr></td>\n                                    </tr>\n                                    <tr>\n                                        <td><i class='fas fa-mountain' /></td>\n                                        <td><Text id='races.ascend'>Ascending</Text></td>\n                                        <td>&nbsp;</td>\n                                        <td class='text-right'><nobr>{totals.elevation ? `${util.format(totals.elevation, 0)} m` : 'n/a'}</nobr></td>\n                                    </tr>\n                                    <tr>\n                                        <td><i class='fas fa-stopwatch' /></td>\n                                        <td><Text id='races.race-time'>Racetime</Text></td>\n                                        <td><i class='fas fa-clock' /></td>\n                                        <td class='text-right'><nobr>{util.secToHms(totals.duration) || 'n/a'}</nobr></td>\n                                    </tr>\n                                    <tr>\n                                        <td><i class='fas fa-bed' /></td>\n                                        <td><Text id='races.rest-time'>Rest</Text></td>\n                                        <td><i class='fas fa-clock' /></td>\n                                        <td class='text-right'><nobr>{util.secToHms(totals.rest) || 'n/a'}</nobr></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </>}\n                </>}\n                {submenu === 'team' && <>\n                    {team.public > 0 ? <>\n                        <h3>{team.name}</h3>\n                        <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        <ImageScroller stores={this.props.stores} images={team.images} />\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n                {submenu === 'dogs' && <>\n                    {team.public > 0 ? <>\n                        {team.dogs && <div class='w-100 container-fluid'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n                        {showDog && <>                    \n                            <div class='d-flex mb-0 mt-3 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pr-2'\n                                    style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                >\n                                    <h5 class='mb-1'>\n                                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </h5>\n                                    <div>\n                                        {daysUntilBirthday < 7 && <>\n                                            <span class='text-muted mr-2'>\n                                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                            </span>\n                                        </>}                                \n                                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                        </>}\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                    <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                        Toggle admin info\n                    </button>\n                    {showAdminInfo && <>\n                        <small>\n                            <xmp>\n                                musher: {JSON.stringify(musher, null, 4)}<br />\n                                user: {JSON.stringify(user, null, 4)}<br />\n                                team: {JSON.stringify(team, null, 4)}<br />\n                                totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                {/* {\n                                    \"firstDate\": \"2021-03-19 11:59\",\n                                    \"lastDate\": \"2021-03-20 17:13\",\n                                    \"firstEpoch\": 1616151540000,\n                                    \"lastEpoch\": 1616256780000,\n                                    \"now\": {\n                                        \"$numberDecimal\": \"1642675856939\"\n                                    },\n                                    \"totalTimeUsedSec\": 26524316,\n                                    \"totalWorkoutTimeUsedSec\": 130895,\n                                    \"lastDuration\": 25655,\n                                    \"team\": 84,\n                                    \"count\": 4,\n                                    \"distanceKm\": 301.5906237951766,\n                                    \"elevation\": 3610.019075719202,\n                                    \"duration\": 77343,\n                                    \"rest\": 1332,\n                                    \"speedAvg\": 8.294634979660305,\n                                    \"totalRest\": 54884,\n                                    \"loadIndex\": 1080.75,\n                                    \"totalKcalRelated\": 544.535560976128,\n                                    \"weightedTotalKcal\": 12303.171406247127,\n                                    \"flatTotalKcal\": 9424.70699359927,\n                                    \"firstGpxStartEpoch\": null,\n                                    \"lastGpxStartEpoch\": null\n                                } */}\n\n                            </xmp>\n                        </small>\n                    </>}\n                </div>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass TrackingMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            reloadLastEpoch: Math.floor(new Date().getTime() / 1000),\n            historyPointIndex: 0,\n            timerRunning: true,\n            replayHistory: false,\n            replaySpeed: REPLAY_SPEED,\n        };\n        this.updateTimer = {};\n    }\n\n    handleHistoryPointIndex = (e) => {\n        const historyIdx = parseInt(e.target.value, 10);\n        clearTimeout(this.updateTimer.reload);\n\n        // console.log({ historyIdx });\n        this.setState({\n            historyPointIndex: historyIdx,\n            timerRunning: false,\n        }, () => {\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex));\n        });\n    }\n\n    playHistory = () => {\n        clearTimeout(this.updateTimer.reload);\n        const { historyPointIndex, replaySpeed } = this.state;\n        const { raceStore } = this.props.stores;\n        const raceTrackerPointTimestamp = raceStore.getRaceTrackerTimestamp(historyPointIndex + 1);\n        // console.log('playHistory', { historyPointIndex });\n        const state = {\n            historyPointIndex: historyPointIndex + 1,\n            timerRunning: false,\n            playingHistory: true,\n        };\n        if (raceTrackerPointTimestamp) {\n            state.raceTrackerPointTimestamp = raceTrackerPointTimestamp\n        }\n        this.setState({\n            ...state,\n        }, () => {\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex + 1));\n        });\n\n        // Set replay timer\n        clearTimeout(this.updateTimer.history);\n        this.updateTimer.history = setTimeout(() => {\n            this.playHistory();\n        }, replaySpeed * 1000);\n    }\n\n    pauseHistory = () => {\n        clearTimeout(this.updateTimer.history);\n        this.setState({\n            playingHistory: false,\n        });\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs, historyPointIndex);\n\n        // Set reload timer\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                console.log('loadLiveRaceResults.reloading...');\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid });\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRace = async (props = this.props) => {\n        try {\n            this.setState({ isLoading: true });\n            const { raceStore, appState } = props.stores;\n            const { raceid, classid } = props;\n            await raceStore.load(raceid);\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const { selectedClassIds = [] } = appState;\n            const selectedClassId = classid || selectedClassIds[0];\n\n            if (classid) {\n                appState.toggleSelectedClassId(classid, true);\n            }\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','));\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId });\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n            raceStore.getAllClassesSortedBy();\n\n            this.setState({ isLoading: false });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    setLeaderboardMode = (e) => {\n        const leaderboardMode = e.target.parentElement.dataset.mode || e.target.dataset.mode;\n        this.setState({ leaderboardMode })\n    }\n\n    chooseRaceClass = (e) => {\n        const filterByraceClass = e.target.value;\n        this.setState({ filterByraceClass })\n    }\n\n    toggleShowLeaderBoard = (hide) => {\n        const { showLeaderBoard } = this.state;\n        if (hide === true) {\n            this.setState({ showLeaderBoard: false });\n        } else {\n            this.setState({ showLeaderBoard: !showLeaderBoard });\n        }\n    }\n\n    toggleShowNews = (hide) => {\n        const { showNews } = this.state;\n        if (hide === true) {\n            this.setState({ showNews: false });\n        } else {\n            this.setState({ showNews: !showNews });\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.reload);\n        clearTimeout(this.updateTimer.history);\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    componentDidMount() {\n        this.loadRace();\n        try {\n            const { width, height } = getWindowDimensions();\n            if (width < 800) {\n                this.toggleShowLeaderBoard(true);\n                this.toggleShowNews(true);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid || this.props.showDrawerReplay !== nextProps.showDrawerReplay) {\n\t\t    this.loadRace(nextProps);\n        }\n\t}\n\n    closeAllDrawers = () => {\n        this.setState({\n            showResults: false,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    onMarkerClick = (wpData) => {\n        this.closeAllDrawers();\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onCpMarkerClick = (cpData) => {\n        if (!cpData || !cpData.id) {\n            return null;\n        }\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId: cpData.id,\n            showDrawerCheckpoint: true,\n            cpData,\n        });\n    }\n\n    toggleDrawerMusher = () => {\n        const { showDrawerMusher } = this.state;\n        this.setState({\n            showDrawerMusher: !showDrawerMusher,\n        });\n    }\n\n    toggleDrawerCheckpoint = () => {\n        const { showDrawerCheckpoint } = this.state;\n        this.setState({\n            showDrawerCheckpoint: !showDrawerCheckpoint,\n        });\n    }\n\n    toggleResults = () => {\n        const { showResults } = this.state;\n        this.setState({\n            showResults: !showResults,\n        });\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    setReplaySpeed = (e) => {\n        const speed = e.target.closest('button').dataset.speed;\n        this.setState({\n            replaySpeed: parseFloat(speed),\n        });\n    }\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const { showDrawerReplay } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','));\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleFocusOnMusher = (e) => {\n        try {\n            const musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n            const { appState, raceStore } = this.props.stores;\n            appState.toggleFocusOnMusher(musherId);\n\n            const { focusOnMushers = [], selectedClassIds = [] } = appState;\n            const classid = selectedClassIds[0]\n\n            const { race } = raceStore;\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === classid)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (race.liveRace > 0) {\n                raceStore.getRaceTrackerActiveTeams(null, focusOnMushers, bibs);\n            } else {\n                raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers, bibs);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleBib = () => {\n        try {\n            const { bib } = this.state;\n            const { appState, raceStore } = this.props.stores;\n            const musher = raceStore.getMusherByBibId(bib);\n            appState.toggleFocusOnMusher(musher.id);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    checkForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.toggleBib();\n        }\n    }\n\n    toggleReplayHistory = () => {\n        const { replayHistory } = this.state;\n        clearTimeout(this.updateTimer.reload);\n        this.setState({\n            showDrawer: false,\n            historyPointIndex: 0,\n            replayHistory: !replayHistory,\n            timerRunning: replayHistory,\n        }, async () => {\n            await this.loadRace();\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            const { maxPoints } = raceStore;\n            if (replayHistory) {\n                console.log('toggleReplayHistory: setting to maxPoints', maxPoints);\n                raceStore.updateWaypointPosition(Math.abs(maxPoints - 1));\n            } else {\n                console.log('toggleReplayHistory: setting to first points');\n                for (let i = 0, l = 10; i < l; i += 1) {\n                    raceStore.updateWaypointPosition(Math.abs(historyPointIndex + i));\n                }\n            }\n        });\n    }\n\n    toggleLines = () => {\n        const { showLines } = this.state;\n        this.setState({\n            showLines: !showLines,\n        });\n    }\n\n    render() {\n        const { historyPointIndex, timerRunning, playingHistory, replaySpeed, raceTrackerPointTimestamp, showLines,\n            allTeamIds, bibs,\n        } = this.state;\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { raceid, path, showHeader = true, drawerClassNames, drawerWidth, showDrawerReplay } = this.props;\n        const { focusOnMushers = [], infoOnMushers = [], selectedClassIds = [] } = appState;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { leaderboardMode, filterByraceClass, showLeaderBoard, showNews, reloadLastEpoch,\n            showDrawerMusher, showDrawerCheckpoint,\n            wpData = {},\n            cpData = {},\n            showResults,\n            showTeam, showDog,\n            submenu, replayHistory,\n            selectedCheckpointId,\n        } = this.state;\n\n        const { activeTeams, teamList, waypoints, geoJSONs, waypoints2, waypoints3, zoomToMarkers, classes, race, racetrackerData, maxPoints } = raceStore;\n\n        const musher = wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email);\n        const team = raceStore.getTeamById(musher.team);\n        const selectedClass = raceStore.getClassById(selectedClassIds[0]) || {};\n\n        let wpCheckpoints = [];\n        if (selectedClass.waypoints && selectedClass.waypoints.length > 0) {\n            wpCheckpoints = selectedClass.waypoints;\n        } else if (selectedClass.checkpoints && selectedClass.checkpoints.length > 0) {\n            wpCheckpoints = selectedClass.checkpoints\n                .slice()\n                .sort(fieldSorter(['sortOrder']))\n                .filter(cp => cp.position && cp.position[0])\n                .map(cp => ({\n                    id: cp.id,\n                    title: cp.name,\n                    lat: cp.position[0],\n                    lng: cp.position[1],\n                }));\n        }\n\n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={team.dogs} />\n            </Overlay>}\n\n\n            {showHeader && <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`/app-races/${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            {!race.resultsHide && <a href={`/app-races/${race.id}/results`}>\n                                <i class='fas fa-stopwatch' />\n                            </a>}\n                        </span>\n                    </div>\n                    <div>\n                        <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                    </div>\n                    {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <>\n                        <div class='d-flex align-items-center'>\n                            &nbsp;\n                        </div>\n                    </>}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>}\n\n            {!showTracking ? <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-hand-paper' /></div>\n                        <h3>Not allowed to view tracking</h3>\n                        {race.countryRegexpMessage}\n                    </div>\n                </div>\n            </> : <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    {race.id ? <>\n                        <Trackmap\n                            marginTop={MARGIN_TOP}\n                            stores={this.props.stores}\n                            raceid={raceid}\n                            waypoints={waypoints}\n                            geoJSONs={showLines ? geoJSONs : null}\n                            // waypoints2={waypoints2}\n                            // waypoints3={waypoints3}\n                            waypoints2={wpCheckpoints}\n\n                            zoomToMarkers={zoomToMarkers}\n                            fullscreenMap={true}\n                            onMarkerClick={this.onMarkerClick}\n                            onMarker2Click={this.onCpMarkerClick}\n                            showHeatmap={race.liveRace < 1}\n                            allTeamIds={allTeamIds}\n                            showTracks={race.liveRace >= 1}\n                            selectedClassIds={selectedClassIds}\n                            showDistanceMarkers={false}\n                            groupWaypoints={false}\n                            focusOnMushers={focusOnMushers}\n                            // key={`trackmap-${selectedClassIds.join('-')}`}\n                            // key={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                            // mapid={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                        />\n                    </> : <>\n                        <Loading stores={this.props.stores} />\n                    </>}\n\n\n                    {timerRunning && <div class='position-absolute' style='top: 125px; left: 5px; z-index: 9999; width: 30px; height: 30px;'>\n                        <ReloadTimer stores={this.props.stores} classNames='float-right ml-2' reloadLastEpoch={reloadLastEpoch} />\n                    </div>}\n\n                        {focusOnMushers && focusOnMushers.length > 0 && <>\n                            <div\n                                class='row mb-2'\n                                style='\n                                    background-color: #1C1F4C;\n                                    background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                    background-size: cover !important;\n                                    background-position: 0 0;\n                                    border-radius: 10px;\n                                '\n                            >\n                                <div class='col-12 text-white' style='font-size: 1.3em;'>\n                                    {focusOnMushers && focusOnMushers.map(musherId => {\n                                        const musher = raceStore.getMusherById(musherId);\n                                        return <>\n                                            <div>\n                                                <nobr>\n                                                    <span class='mr-2' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-times text-warning' /> : <i class='far fa-star' />}</span>\n                                                    <span class='text-right' style='width: 50px; display: inline-block;'>{musher.bib}</span> {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                    {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                                </nobr>\n                                            </div>\n                                        </>\n                                    })}\n                                </div>\n                            </div>\n                        </>}\n\n                        {/* <div class={`row`}>\n                            <div class='col-12 form-inline align-top d-flex justify-content-center'>\n                                <div class='form-group'>\n                                    <input\n                                        class='form-control form-control-lg text-dark border-primary'\n                                        style='background-color: inherit;'\n                                        type='text'\n                                        onInput={linkstate(this, 'bib')}\n                                        onKeyDown={this.checkForEnter}\n                                    />\n                                    <button\n                                        type='button'\n                                        class='ml-2 btn btn-lg btn-primary'\n                                        onClick={this.toggleBib}\n                                    >Search for Bib</button>\n                                </div>\n                            </div>\n                        </div> */}\n\n                    {(showDrawerReplay || replayHistory) && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleReplayHistory} classNames={drawerClassNames} width={drawerWidth}>\n\n                            {maxPoints > 0 ? <>\n                                <div class='d-flex justify-content-center mx-3'>\n                                    {playingHistory ? <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-warning' onClick={this.pauseHistory}><i class='fas fa-pause' /></button>\n                                        </div>\n                                    </> : <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-success' onClick={this.playHistory}><i class='fas fa-play' /></button>\n                                        </div>\n                                    </>}\n                                    <div class='pl-2 pt-2 flex-grow-1'>\n                                        <input type='range' class='custom-range w-100' min={0} max={maxPoints} value={historyPointIndex} onInput={this.handleHistoryPointIndex} />\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-left rounded-none ${replaySpeed === 1 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={1}\n                                        >\n                                            60x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.5 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.5}\n                                        >\n                                            120x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.25 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.25}\n                                        >\n                                            240x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-right rounded-none ${replaySpeed === 0.12 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.12}\n                                        >\n                                            480x\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='flex-grow-1 pt-0 font-weight-bolder text-white text-center' style='font-size: 1.1em;'>\n                                        {raceTrackerPointTimestamp && <>\n                                            {util.formatDate(util.parseInputDate(raceTrackerPointTimestamp), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </>}\n                                        {isAdmin && <>\n                                            / {historyPointIndex}\n                                        </>}\n                                    </div>\n                                    {isAdmin && <>\n                                        <button class='btn btn-danger mt-2 mr-4 rounded-pill-both rounded-none' onClick={this.toggleLines}>\n                                            <i class='fas fa-wave-square' /> Show lines\n                                        </button>\n                                    </>}\n                                </div>\n                            </> : <>\n                                <div class='spinner-border text-primary' role='status'>\n                                    <span class='sr-only'>Loading...</span>\n                                </div>\n                            </>}\n                        </Drawer>\n                    </>}\n\n                    {showResults && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleResults} classNames={drawerClassNames} width={drawerWidth}>\n                            <Results\n                                stores={this.props.stores}\n                                raceClass={selectedClass}\n                                race={race}\n                                onMarkerClick={this.onMarkerClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerMusher && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerMusher} classNames={drawerClassNames} width={drawerWidth}>\n                            <MusherInfo\n                                stores={this.props.stores}\n                                wpData={wpData}\n                                onMarkerClick={this.onMarkerClick}\n                                onTeamClick={this.onTeamClick}\n                                onUserClick={this.onUserClick}\n                                onDogClick={this.onDogClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerCheckpoint && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerCheckpoint}>\n                            <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                        </Drawer>\n                    </>}\n\n                </div>\n            </>}\n        </>);\n    }\n}\n\nexport default TrackingMap;\n"],"sourceRoot":""}