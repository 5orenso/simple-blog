{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/team/formGraph.js","webpack:///./components/workout/totals.js","webpack:///./components/form/links.js","webpack:///./components/workout/status.js","webpack:///./components/user/index.js","webpack:///./components/workout/index.js","webpack:///./components/workout/calendarPlan.js","webpack:///./components/dog/index.js","webpack:///./components/form/achievements.js","webpack:///./components/workout/graphAvg.js","webpack:///./components/form/files.js","webpack:///./components/modal/index.js","webpack:///./components/workout/graph.js","webpack:///./components/user/invite.js","webpack:///./components/dog/scroller.js","webpack:///./routes/teams/detail.js","webpack:///./components/ad/index.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/premium/badge.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","FormGraph","teamStore","stores","graphFitness","graphFatigue","graphForm","length","xTicksAll","map","e","date","partsLength","Math","floor","xTicks","i","l","push","id","class","width","height","showXTicks","paddingTop","lineFromXzero","lineFromXmax","dataLeft","dataFillLeft","legendLeft","dataRight","legendRight","showYTicksLeft","avgWindowLeft","smoothLeft","showYTicksRight","scrollToRight","WorkoutTotals","loadTeams","currentMonth","Date","getMonth","currentYear","getFullYear","month","year","currentTeam","load","query","team","skipMusherWorkoutSummary","addData","loadAll","componentWillReceiveProps","nextProps","currentSeason","currentSeasonSummary","prevSeason","prevSeasonSummary","seasonStart","parseInt","findWorkoutSummary","findWorkoutSummaryTotal","value","distanceKm","smallUnit","elevation","util","secToHms","duration","speedAvg","Achievements","handleAdd","data","updateField","object","field","setState","name","url","removeLink","async","dogStore","target","closest","dataset","linkId","showFiles","links","file","isoDate","createdDate","onClick","data-name","data-id","for","type","aria-describedby","onInput","linkstate","WorkoutStatus","loadWorkoutPlans","workoutPlanStore","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","dog","userStore","getWorkoutSummary","workoutPlan","user","language","MONTHS","mu","getMonths","findTeam","months","monthRange","lastPlanMonth","style","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","format","role","aria-valuenow","aria-valuemin","aria-valuemax","fields","href","User","removeUser","email","parentNode","console","log","removeMember","adminUpdateUser","clearTimeout","updateTimer","setTimeout","doAdminUpdateUser","simulateUser","getSimulateUser","currentUser","isAdmin","teams","findTeams","summary","findMusherSummary","isTeamAdmin","image","getImage","displayName","cellphone","asUrl","rel","facebook","asFacebookLink","instagram","asInstagramLink","snapchat","asSnapchatLink","data-email","JSON","stringify","settings","subscription","deviceInfo","notifications","notificationTopics","applications","shadowTags","garmin","strava","currentLocationGeocode","lastActivityEpoch","activities","veterinaryAllowed","checked","twoFactorLogin","isVeterinary","firstname","lastname","avgDistance","avgElevation","avgDuration","avgDogs","data-team","getWorkoutColor","workout","getWorkoutIcon","MAX_LOADINDEX","getMaxLoadIndex","showAddComment","viewImageIdx","likeWorkout","Workout","toggleDate","stopPropagation","preventDefault","showDate","workoutStore","workoutId","toggleAddComment","parentElement","inputRef","focus","viewImage","idx","shareLink","title","text","appState","shareUrl","onTeamClick","teamid","showTeam","hideTeam","onUserClick","onDogClick","dogid","dogs","showDog","hideDog","forceShowDate","wrapperClasses","wrapperClassesRow","viewmode","hasShareApi","allDogs","intensity","findIntensity","code","teamName","teamNames","forEach","likes","comments","hasLikedWorkout","findIndex","gpxInfo","mushers","loadIndex","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","musherImages","slice","musher","u","findPublicUser","images","publicUser","s3SmallLink","mapImage","imgs","toJS","batteryUsage","battegryLevelStart","battegryLevelEnd","views","getViews","statistics","marginTop","marginBottom","back","img","temperature","isLocked","isInProgress","formatDate","locale","hour12","hour","minute","formatDistance","getLoadIndexColor","normalizeBetween","getLoadIndexText","garminId","stravaId","track","dogsLeft","dogsRight","sledWeight","indexOf","kcalBurnedTotal","kcalMeatGramsTotal","kcalSalmonGramsTotal","kcalFatGramsTotal","description","markdown","replaceImages","comment","markdownOpts","getMarkdownOptions","avgGpsMovingSpeed","dblClick","likeRef","data-url","uuidv4","data-title","data-native","inputRefObject","col","offset","compact","RED_DAYS","Calendar","setFocus","editMonth","showInput","inputYear","inputMonth","inputDay","inputWeek","newDistance","distance","editWeek","week","editDay","day","saveDistance","getYear","response","insert","newId","saveField","resetInput","nextDay","addDays","getDate","getWeek","checkKeydown","key","updateWorkoutPlanTips","hideWorkoutPlanTips","toggleTips","newValue","updateSetting","darkmode","DAYS","getDays","currentDay","currentEpoch","getTime","basehref","showNavigation","showHeader","monthNum","yearNum","nextMonth","nextYear","getNextMonth","prevMonth","prevYear","getPrevMonth","daysOfMonth","getDaysInMonth","weeksInMonth","getWeeksInMonth","daysOfWeek","getDaysInWeek","totalDistanceKmMonth","totalDistanceKmMonthPlan","totalWorkoutDistanceKmMonth","isMonthInTheFuture","summaryMonth","findWorkoutPlanSummaryMonth","tips","tipsMonth","padDate","hasTipsMonth","placeholder","linkState","onKeydown","autocomplete","getDay","weekObj","summaryWeek","findWorkoutPlanSummaryWeek","asNumber","isWeekInTheFuture","totalWeek","totalWorkoutWeek","tipsWeek","hasTipsWeek","data-week","data-year","data-distance","yyyy","mm","dd","isDayInTheFuture","summaryWorkout","findWorkoutSummaryWeekDay","findWorkoutPlanSummaryDay","isChosen","isToday","isDayOff","data-day","data-month","getPlanColor","count","colspan","totalDistance","time","totalWorkouts","avgSpeed","Dog","workoutSummary","dogStatuses","statuses","findDogstatus","status","dogVaccines","findVaccineStatuses","dogVaccineLogStatuses","findVaccineLogStatuses","chipId","dogHistoryStatuses","findHistoryStatuses","dogStatus","dogPosition","findDogposition","position","hasBirthday","birth","daysUntilBirthday","ceil","daysUntilNextBirthday","ucfirst","findHarness","harness","icon","age","deceased","gender","shortname","history","weight","bodyScore","v","endDate","vaccineType","positions","lead","point","wheel","specialNeeds","lang","filter","vac","inKarens","vaccineAgens","removeAchievement","achievementId","achievements","WorkoutGraphAvg","withText","distanceAvgAll","distanceAvg","ascendAvgAll","ascendAvg","speedAvgAll","durationAvgAll","durationAvg","realDurationAvgAll","realDurationAvg","loadIndexAll","plan","teamAmbition","teamType","teamId","graphAvgWorkoutStatsDistance","graphAvgWorkoutStatsElevation","graphAvgWorkoutStatsSpeed","graphAvgWorkoutStatsDuration","graphAvgWorkoutStatsLoadIndex","graphWorkoutAvgWeekDistanceCurrent","graphWorkoutAvgWeekElevationCurrent","graphWorkoutAvgWeekSpeedCurrent","graphWorkoutAvgWeekDurationCurrent","graphWorkoutAvgWeekLoadIndexCurrent","graphAvgWorkoutStatsCount","weekRange","wo","partSize","xTicksVal","val","smoothRight","yTicksLeftPostfix","imperial","unitLeft","yTicksLeftVal","Files","handleAddImage","files","uploadStatus","before","after","autoOpen","apiUrl","Modal","touchStart","startY","touches","pageY","touchEnd","undefined","readyToRefresh","touchMove","close","refreshing","y","appContainer","scrollTop","imagexxl","thumb","src","onTouchstart","onTouchend","onTouchmove","download","WorkoutGraph","rest","ascend","avgImages","rating","graphWorkoutSummaryWeekDistanceCurrent","graphWorkoutSummaryWeekDistancePrev","graphWorkoutSummaryWeekElevationCurrent","graphWorkoutSummaryWeekElevationPrev","avgDayDistance","avgDayElevation","avgDayDuration","avgDaySpeedAvg","avgDayLoadIndex","avgDayAvgDogs","avgDayAvgImages","avgDaySledWeight","avgDayRest","avgDayRating","avgDayTemperature","graphPlanWeekDistanceCurrent","isLoading","showExtra","seasonWeeks","seasonDays","dayRange","parts","xTicksAllDays","partsDays","xTicksDays","xTicksLink","yTicksRightPostfix","unitRight","avgWindowRight","paddingLeft","yTicksLeftWidth","yTicksRightVal","Invite","inviteKennel","friendEmail","inviteSent","inviteNew","hideInvite","forceShow","DogScroller","scrollImages","scrollLeft","clientWidth","imageIdx","nearestInt","round","diff","abs","Number","isInteger","sortByName","a","b","dogA","find","dogB","size","onScroll","sort","dogId","d","className","showName","showPosition","MARGIN_TOP","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","newTeam","submenu","Input","handleImageErrored","onerror","removeImage","removeMainImage","saved","help","datalist","showImages","addToImages","list","data-field","el","onError","rows","formatBytes","removeFile","TeamsDetail","loadTeam","plotFormGraph","loadHeatmap","getHeatmap","loadMore","loadWorkouts","append","limit","loadWorkoutSummary","viewTeam","getWorkoutSummaryDay","daysBack","updateItem","resetGraphPlanWeekDistanceCurrent","prepareWeekGraphs","updateKeyValue","deleteTeam","PubSub","publish","topics","STATUS_MESSAGE","message","route","elementtype","isNew","updateFieldValue","datatype","skipTimer","localObjectValue","Array","isArray","split","parseFloat","updateObjectKeyValue","doUpdateField","reCalculateFitness","recalculated","reCalcFitness","chooseSubmenu","menu","goBack","loadSummaryData","Promise","all","heatmap","workouts","users","followers","blockedFollowers","imageHeader","findTeamAmbition","ambition","ambitions","findTeamType","headerImage","s3XXLargeLink","teamImage","s3LargeLink","place","country","public","data-menu","noimagestext","total","section","trophys","reverse","getTrophyImage","textHeader","descriptionHeader","native","t","myTeamId","showBlockButton","callback","isBlocked","mapId","minZoom","Ad","subject","body","logClick","adStore","ads","apiServer","getApiServer","path","postalcode","page","replace","setTime","loadAd","match","ad","confirmed","deleted","Teams","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","hasFollowRequests","followRequests","reqUser","isDeleted","isConfirmed","publicTeam","displayNameShort","data-user","data-follow"],"mappings":"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","file":"20.chunk.9a016.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@observer\nclass FormGraph extends Component {\n    render() {\n        const { teamStore } = this.props.stores;\n        const {\n            graphFitness,\n            graphFatigue,\n            graphForm,\n\t\t} = teamStore;\n\n        if (!graphFitness || graphFitness.length === 0) {\n            return '';\n        }\n\n        const xTicksAll = graphForm.map(e => e.date);\n        const partsLength = Math.floor(xTicksAll.length / 4);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partsLength) {\n            xTicks.push(xTicksAll[i]);\n        }\n        xTicks[xTicks.length - 1] = xTicksAll[xTicksAll.length - 1];\n\n        return (\n            <>\n                <h5><Text id='teams.fitness'>Form og belastning</Text></h5>\n                <div class='w-100 mt-3 mb-4'>\n                    <Localizer>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={1500}\n                            height={300}\n                            showXTicks={1}\n                            xTicks={xTicks}\n                            paddingTop={30}\n                            lineFromXzero={false}\n                            lineFromXmax={false}\n\n                            dataLeft={[graphFitness, graphFatigue]}\n                            dataFillLeft={[1]}\n                            legendLeft={[<Text id='teams.legend-fitness'>Fitness</Text>, <Text id='teams.legend-fatigue'>Fatigue</Text>]}\n\n                            dataRight={[graphForm]}\n                            legendRight={[<Text id='teams.legend-form'>Form</Text>]}\n\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            avgWindowLeft={[0, 0]}\n                            smoothLeft={[0, 0]}\n\n                            // dataRight={[graphWorkoutAvgWeekElevationCurrent, graphAvgWorkoutStatsElevation]}\n                            // legendRight={[`${seasonStart} ${ascendAvg}`, `${seasonStart} ${ascendAvgAll}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={'m'}\n                            // unitRight={['m', 'm']}\n                            // avgWindowRight={[0, 0]}\n                            // smoothRight={[1, 1]}\n\n                            // marker={week}\n                            scrollToRight={true}\n                        />\n                    </Localizer>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default FormGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass WorkoutTotals extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        await this.loadTeams(props);\n        // await Promise.all([\n        //     this.loadTeams(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n        const { teamStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear, currentTeam, currentSeason: currentSeasonSummary, prevSeason: prevSeasonSummary } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { workoutSummary } = teamStore;\n        const prevSeason = prevSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart - 1) : teamStore.findWorkoutSummaryTotal(seasonStart - 1)) || {});\n        const currentSeason = currentSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart) : teamStore.findWorkoutSummaryTotal(seasonStart)) || {});\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2 border-top'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Distance stores={this.props.stores} value={currentSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Distance stores={this.props.stores} value={prevSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Elevation stores={this.props.stores} value={currentSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Elevation stores={this.props.stores} value={prevSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            {util.secToHms(currentSeason.duration || 0)}\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            {util.secToHms(prevSeason.duration || 0)}\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Speed stores={this.props.stores} value={currentSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Speed stores={this.props.stores} value={prevSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutTotals;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        // await Promise.all([\n        //     this.loadTeams(props),\n        //     this.loadWorkoutPlans(props),\n        //     this.loadWorkoutSummary(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { workoutPlanStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { year = currentYear, month = currentMonth, currentTeam } = props;\n\t\tconst seasonStart = parseInt(year || (month < 8 ? year - 1 : year), 10);\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t}\n\t\t}\n\t}\n\n    async loadWorkoutSummary(props = this.props) {\n        const { year, currentTeam, dog } = props;\n\t\tconst { userStore } = props.stores;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, dog });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n\t\tconst { currentSeason, prevSeason, currentTeam } = this.props;\n\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { workoutPlan } = workoutPlanStore;\n        const { user, workoutSummaryTeam } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst team = teamStore.findTeam(currentTeam) || {};\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { year = currentYear, month = currentMonth } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n        const months = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <span style='display: none;'>{workoutPlan.id}</span>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > year || (month.year === year && month.month >= month)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center text-muted mb-5'>\n                        <div class='display-1'>\n                            <i class='far fa-sad-tear' />\n                        </div>\n                        <h3 class='font-weight-lighter'>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                        <a class='btn btn-success btn-lg mt-3' href='/workouts/plan'><i class='fas fa-calendar-alt' /> <Text id='workout.plan.new'>New workoutplan</Text></a>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.updateTimer = {};\n    }\n    \n    removeUser = async (e) => {\n        let id =  e.target.dataset.id;\n        let email =  e.target.dataset.email;\n        let team =  e.target.dataset.team;\n        if (!id && e.target.parentNode) {\n            id =  e.target.parentNode.dataset.id;\n            email =  e.target.parentNode.dataset.email;\n            team =  e.target.parentNode.dataset.team;\n\t\t}\n        console.log('id, email, team', id, email, team);\n        const { teamStore } = this.props.stores;\n        await teamStore.removeMember(team, { id, email });\n    }\n\n    adminUpdateUser = (e) => {\n        const { email } = e.target.closest('input').dataset;\n        const { name } = e.target;\n        const field = `${email}-${name}`;\n\n        clearTimeout(this.updateTimer[field]);\n        this.updateTimer[field] = setTimeout(() => {\n            this.doAdminUpdateUser(e);\n        }, 500);\n    }\n\n    doAdminUpdateUser = async (e) => {\n        const { email } = e.target.closest('input').dataset;\n        const { name, value } = e.target;\n\n        // console.log({ email, name, value });\n\t\tconst { userStore } = this.props.stores;\n        await userStore.adminUpdateUser(email, { [name]: value });\n    }\n\n    simulateUser = (e) => {\n        const { email } = e.target.closest('button').dataset;\n        const { userStore } = this.props.stores;\n\t\tuserStore.getSimulateUser(email);\n    }\n\n    render() {\n        const { user, team = {} } = this.props;\n\t\tconst { userStore, teamStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const teams = userStore.findTeams(user.teams);\n        const summary = teamStore.findMusherSummary(user.id, team.id) || {};\n        const isTeamAdmin = team.user === currentUser.id;\n        const image = mu.getImage({ user, team });\n        const name = mu.displayName(user);\n\n        // const workoutSummary = dogStore.findWorkoutSummary(dog.id, 2020) || {};\n        // {'0':{'year':2020,'dog':16,'count':1,'distanceKm':9.9,'elevation':202,'duration':0,'speedAvg':0}}\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    <div class='col-12 d-flex mb-0 position-relative'>\n                        {/* {JSON.stringify(dog, null, 4)} */}\n                        <div class={`text-center border rounded-circle imageRounded`} style={image ? `background-image: url('${image}'); background-size: cover;` : ''}>\n                            {!image && <i class='fas fa-user text-muted mt-3' style='font-size: 40px;' />}\n                        </div>\n                        <div class='flex-grow-1 pl-3 pr-2'>\n                            {/* <span class='float-right'>\n                                {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                            </span> */}\n                            \n                            <h5>{name}</h5>\n                            <div>\n                                <small class='text-muted'>\n                                    <div class='d-flex justify-content-left'>\n                                        {user.cellphone && <div class='mr-2'><i class='fas fa-mobile-alt' /> {user.cellphone}</div>}\n                                        {user.email && <div class='mr-2'><i class='fas fa-envelope ml-3' /> {user.email}</div>}\n                                        {user.url && <div class='mr-2'><a href={mu.asUrl(user.url)} target='_blank' rel='noreferrer'><i class='fas fa-link' /></a></div>}\n                                        {user.facebook && <div class='mr-2'><a href={mu.asFacebookLink(user.facebook)} target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a></div>}\n                                        {user.instagram && <div class='mr-2'><a href={mu.asInstagramLink(user.instagram)} target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a></div>}\n                                        {user.snapchat && <div class='mr-2'><a href={mu.asSnapchatLink(user.snapchat)} target='_blank' rel='noreferrer'><i class='fab fa-snapchat' /></a></div>}\n                                    </div>\n                                </small>\n                            </div>\n                            {isAdmin && <>\n                                <button class='btn btn-block btn-success' onClick={this.simulateUser} data-email={user.email}>\n                                    Simulate user\n                                </button>\n\n                                <small>\n                                    <details>\n                                        <summary>settings</summary>\n                                        <xmp>{JSON.stringify(user.settings, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>subscription</summary>\n                                        <xmp>{JSON.stringify(user.subscription, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>deviceInfo</summary>\n                                        <xmp>{JSON.stringify(user.deviceInfo, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>subscription</summary>\n                                        <xmp>{JSON.stringify(user.subscription, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>notifications</summary>\n                                        <xmp>{JSON.stringify(user.notifications, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>notificationTopics</summary>\n                                        <xmp>{JSON.stringify(user.notificationTopics, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>applications</summary>\n                                        <xmp>{JSON.stringify(user.applications, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>shadowTags</summary>\n                                        <xmp>{JSON.stringify(user.shadowTags, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>garmin</summary>\n                                        <xmp>{JSON.stringify(user.garmin, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>strava</summary>\n                                        <xmp>{JSON.stringify(user.strava, null, 4)}</xmp>\n                                    </details>\n                                    <details>\n                                        <summary>currentLocationGeocode</summary>\n                                        <xmp>{JSON.stringify(user.currentLocationGeocode, null, 4)}</xmp>\n                                    </details>\n                                    lastActivityEpoch: {util.isoDate(user.lastActivityEpoch)}<br />\n                                    activities: {util.format(user.activities)}<br />\n\n                                    {user.settings && <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.settings.veterinaryAllowed ? 0 : 1} id={`settings.veterinaryAllowed-${user.id}`} name='settings.veterinaryAllowed' checked={user.settings.veterinaryAllowed ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`settings.veterinaryAllowed-${user.id}`}>\n                                            settings.veterinaryAllowed\n                                        </label>\n                                    </div>}\n                                    <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.twoFactorLogin ? 0 : 1} id={`twoFactorLogin-${user.id}`} name='twoFactorLogin' checked={user.twoFactorLogin ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`twoFactorLogin-${user.id}`}>\n                                            twoFactorLogin\n                                        </label>\n                                    </div>\n                                    <div class='form-check'>\n                                        <input class='form-check-input' type='checkbox' value={user.isVeterinary ? 0 : 1} id={`isVeterinary-${user.id}`} name='isVeterinary' checked={user.isVeterinary ? 'checked' : ''} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        <label class='form-check-label' for={`isVeterinary-${user.id}`}>\n                                            isVeterinary\n                                        </label>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`cellphone-${user.id}`}>cellphone</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`cellphone-${user.id}`} name='cellphone' class='form-control' value={user.cellphone} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`firstname-${user.id}`}>firstname</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`firstname-${user.id}`} name='firstname' class='form-control' value={user.firstname} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                    <div class='form-group row'>\n                                        <label class='col-sm-2 col-form-label' for={`lastname-${user.id}`}>lastname</label>\n                                        <div class='col-sm-10'>\n                                            <input type='text' id={`lastname-${user.id}`} name='lastname' class='form-control' value={user.lastname} data-email={user.email} onInput={this.adminUpdateUser} />\n                                        </div>\n                                    </div>\n                                </small>\n                            </>}\n                            {user.teams && <>\n                                {teams.map(team => (\n                                    <span class='badge badge-pill badge-info mr-2'>{team.name}</span>\n                                ))}<br />\n                            </>}\n                            {team.id && summary && <>\n                                <small class='text-muted'>\n                                    Total:\n                                    {summary && <span class='ml-2'><i class='fas fa-road' /> <Distance stores={this.props.stores} value={summary.distanceKm} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-mountain' /> <Elevation stores={this.props.stores} value={summary.elevation} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-clock' /> {util.secToHms(summary.duration || 0)}</span>}\n                                </small><br />\n                                <small class='text-muted'>\n                                    Avg: \n                                    {summary && <span class='ml-2'><i class='fas fa-road' /> <Distance stores={this.props.stores} value={summary.avgDistance} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-mountain' /> <Elevation stores={this.props.stores} value={summary.avgElevation} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-clock' /> {util.secToHms(summary.avgDuration || 0)}</span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-tachometer-alt' /> <Speed stores={this.props.stores} value={summary.speedAvg} /></span>}\n                                    {summary && <span class='ml-2'><i class='fas fa-dog' /> {util.format(summary.avgDogs, 1)}</span>}\n                                </small>\n                            </>}\n                        </div>\n                        <div>\n                            {isTeamAdmin && user.id !== currentUser.id && <button class='btn btn-sm btn-danger'\n                                onClick={this.removeUser}\n                                data-email={user.email}\n                                data-id={user.id}\n                                data-team={team.id}\n                            ><i class='fas fa-ban' /></button>}\n                            {!isTeamAdmin && user.id === currentUser.id && <button class='btn btn-sm btn-secondary'\n                                onClick={this.removeUser}\n                                data-email={user.email}\n                                data-id={user.id}\n                                data-team={team.id}\n                            ><i class='fas fa-sign-out-alt' />{team.id}</button>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default User;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport Modal from '../modal';\nimport WorkoutComments from '../../components/workout/comments';\nimport WorkoutAddComment from '../../components/workout/commentAdd';\nimport ImageScroller from '../../components/imageScroller';\nimport DogScroller from '../../components/dog/scroller';\n\nimport Overlay from '../../components/overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport LikesAndComments from '../../components/feedback/likesAndComments';\nimport Views from '../../components/feedback/views';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst MAX_LOADINDEX = mu.getMaxLoadIndex();\n\nfunction getWorkoutColor(workout) {\n\tswitch (workout.type) {\n\t\tcase 1:\n\t\t\treturn 'border-primary';\n\t\tcase 2:\n\t\t\treturn 'border-danger';\n\t\tcase 3:\n\t\t\treturn 'border-success';\n\t\tcase 4:\n\t\t\treturn 'border-info';\n\t\tdefault:\n\t\t\treturn 'border-warning';\n\t}\n}\n\nfunction getWorkoutIcon(workout) {\n\tswitch (workout.type) {\n\t\tcase 1:\n\t\t\treturn 'fas fa-running';\n\t\tcase 2:\n\t\t\treturn 'fas fa-flag-checkered';\n\t\tcase 3:\n\t\t\treturn 'fas fa-hiking';\n\t\tcase 4:\n\t\t\treturn 'fas fa-futbol';\n\t\tdefault:\n\t\t\treturn 'fas fa-hiking';\n\t}\n}\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: false,\n    viewImageIdx: {},\n    likeWorkout: {},\n};\n\n@observer\nclass Workout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\n\tlikeWorkout = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        const { workout } = this.props;\n        const workoutId = workout.id;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n        // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    render() {\n        const {\n            showDate,\n            showAddComment,\n            viewImageIdx = {},\n            likeWorkout,\n            dogs,\n            showTeam,\n            showDog,\n        } = this.state;\n        const {\n            workout,\n            showDate: forceShowDate,\n            wrapperClasses = 'col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3',\n            wrapperClassesRow = 'row',\n        } = this.props;\n\t\tconst { userStore, appState, workoutStore } = this.props.stores;\n        const { viewmode, hasShareApi } = appState;\n        const { user, dogs: allDogs } = userStore;\n        const { language = 'en' } = user;\n        const intensity = userStore.findIntensity({ code: workout.intensity, language }) || {};\n        // const teamName = userStore.findTeam(workout.team);\n        const team = userStore.findTeam(workout.team, true) || {};\n        const teamName = team.name;\n        // const teamNames = workout.teams ? workout.teams.map(e => userStore.findTeam(e)) : [];\n        const teamNames = [];\n        if (teamName) {\n            teamNames.push(teamName);\n        }\n        if (workout.teams) {\n            workout.teams.forEach((e) => {\n                if (userStore.findTeam(e)) {\n                    teamNames.push(userStore.findTeam(e));\n                }\n            });\n        }\n\n        const { likes = [], comments = [] } = workout;\n\t\tconst hasLikedWorkout = workout.likes && workout.likes.findIndex(e => e.user === user.id) > -1;\n        const { gpxInfo = {}, mushers = [] } = workout;\n\t\tconst { loadIndex = 0 } = gpxInfo;\n        const workoutEquipment = userStore.findEquipment({ equipment: workout.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: workout.equipment, field: 'icon' });\n\n        const musherImages = [];\n        if (mushers.length > 1) {\n            mushers.slice(1, 10).map((musher) => {\n                const u = workoutStore.findPublicUser(musher) || {};\n                if (u.images && u.images[0]) {\n                    musherImages.push(u.images[0]);\n                }\n            });\n        }\n\n        const publicUser = workoutStore.findPublicUser(mushers[0]) || {};\n        let image;\n        if (publicUser && publicUser.images && publicUser.images[0]) {\n            image = publicUser.images[0];\n        } else if (team.image && team.image.s3SmallLink) {\n            image = team.image;\n        } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n            image = team.images[0];\n        } else if (workout.image && workout.image.s3SmallLink) {\n            image = workout.image;\n        }\n\n        const images = [];\n        if (workout.mapImage) {\n            images.push({\n                ...workout.mapImage,\n                type: 'map',\n            });\n        }\n        if (workout.images) {\n            const imgs = toJS(workout.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[workout.id] ? viewImageIdx[workout.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        let batteryUsage;\n        if (workout && workout.gpxInfo && workout.gpxInfo.battegryLevelStart) {\n            batteryUsage = (workout.gpxInfo.battegryLevelStart - workout.gpxInfo.battegryLevelEnd) * 100;\n        }\n\n        const views = mu.getViews(workout.statistics);\n\n        // let temperature;\n        // let windSpeed;\n        // if (util.checkNested(workout, 'temperature')) {\n        //     const yr = toJS(workout.yr[0].instant.details);\n        //     // displayValue = `Yr.no: 🌡️ ${yr.air_temperature}°C, 💨 ${yr.wind_speed}m/s 🧭 ${mu.windDirection(yr.wind_from_direction)}, ☁️ ${yr.cloud_area_fraction}%, ${yr.air_pressure_at_sea_level}mb, 💦 ${yr.relative_humidity}%`;\n        //     temperature = `${yr.air_temperature}°C`;\n        //     windSpeed = `${yr.wind_speed}m/s`;\n        // }\n\t\t// // const loadMultiplier = loadIndex / 100;\n\n        return (<>\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100 mb-2'>\n                <div class={wrapperClassesRow}>\n\n                    <div class={`${wrapperClasses} d-flex mb-0 position-relative`}>\n\n                        {/* {workout.gpxInfo && <svg viewBox='0 0 300 300' style='top: 80px; left: 10px; width: 90px; height: 90px;' class='position-absolute'>\n                            <path d={`${workout.gpxInfo.svgMap}`} style='fill: none; stroke: #0063FF; stroke-width: 5; opacity: 0.3;' />\n                        </svg>} */}\n\n                        {/* {JSON.stringify(workout, null, 4)} */}\n                        <div class='text-center'>\n                            <div\n                                class={`position-relative text-center border rounded-circle imageRounded ${getWorkoutColor(workout)}`}\n                                style={`${image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                            >\n                                {!image && <i class={`${getWorkoutIcon(workout)} text-${intensity.class ? intensity.class : 'muted'} mt-3`} style='font-size: 40px;' />}\n\n                                {musherImages && musherImages.map((img, idx) => <>\n                                    <div\n                                        class='position-absolute rounded-circle imageRounded border imageRoundedThumb border-white'\n                                        style={`\n                                            background-image: url(\"${img.s3SmallLink}\");\n                                            background-size: cover;\n                                            bottom: -3px;\n                                            left: ${-5 + (idx * 10)}px;\n                                        `}\n                                    />\n                                </>)}\n                            </div>\n                            {workout.temperature !== 0 && <>\n                                <span class='text-muted font-weight-light'>\n                                    <Temperature stores={this.props.stores} value={workout.temperature} />\n                                </span>\n                            </>}\n                        </div>\n                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                            <span class='float-right'>\n                                {workout.isLocked === 1 && <i class='fas fa-lock text-danger ml-3' />}\n                                {workout.isInProgress === 1 && <div class='spinner-grow text-success ml-3' role='status' />}\n                                {workout.isInProgress === 2 && <i class='fas fa-pause-circle text-warning ml-3' />}\n                            </span>\n                            <a class='stretched-link' href={`/workouts/${workout.id}`}>\n                                <h5 class='my-0 mb-1' style='line-height: 1.0em;'>\n                                    {workout.name}\n                                </h5>\n                            </a>\n                            {teamNames && teamNames.length > 0 && <small class='font-weight-lighter'>\n                                {teamNames.map((name, idx) => <>{idx > 0 ? ', ' : ''}{name}</>)}\n                            </small>}\n                            <br />\n                            <small class='text-muted'>\n                                {workout.date && <small onClick={this.toggleDate}>\n                                    {forceShowDate || showDate ? util.formatDate(workout.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(workout.date, new Date(), { locale: 'no-NB' })}\n                                </small>}\n                                <span class={`badge badge-${intensity.class} ml-2`}>{intensity.name}</span>\n                                {loadIndex > 0 && <span class={`ml-2 text-${mu.getLoadIndexColor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}`}>\n                                    <i class='fas fa-hand-rock mr-1' />\n                                    {Math.floor(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))} -&nbsp;\n                                    {mu.getLoadIndexText(util.normalizeBetween(loadIndex, 0, MAX_LOADINDEX, 0, 100))}\n                                </span>}\n                                <br />\n                            </small>\n                            <small>\n                                <div class='text-muted'>\n                                    {workout.garminId > 0 && <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/garmin-connect.png\");`} />}\n                                    {workout.stravaId > 0&& <div class={`float-left mr-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url(\"./assets/strava-icon.png\");`} />}\n\n                                    {workout.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                                    {/* {workout.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(workout.distanceKm)}km</>}\n                                    {workout.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(workout.elevation, 0)}m</>} */}\n                                    {/* {workout.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(workout.speedAvg, 1)}km/t</>} */}\n                                    {workout.dogs > 0 && <><i class='fas fa-dog ml-2' /> {workout.dogs.length}</>}\n                                    {workout.track > 0 && <><i class={`fas fa-map-marked text-${workout.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                                    {workout.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${workout.dogsLeft && workout.dogsRight ? 'success' : 'danger'} ml-2`} /></>}\n                                    {workout.sledWeight > 0 && <>\n                                        <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={workout.sledWeight} />\n                                    </>}\n                                    {batteryUsage > 0 && <span class='text-muted ml-2'><i class='fas fa-battery-three-quarters' /> {util.format(batteryUsage, 1)}% <Text id='workout.battery-used'>used</Text></span>}\n                                </div>\n                                {['beta', 'advanced'].indexOf(viewmode) > -1 && (\n                                    <span class='text-muted'>\n                                        <i class='fas fa-balance-scale' /> {util.format(workout.kcalBurnedTotal)} <Text id='workout.kcal'>kcal</Text>\n                                        <i class='fas fa-drumstick-bite ml-2' /> <Weight stores={this.props.stores} value={workout.kcalMeatGramsTotal / 1000} />\n                                        <i class='fas fa-fish ml-2' /> <Weight stores={this.props.stores} value={workout.kcalSalmonGramsTotal / 1000} />\n                                        <i class='fas fa-piggy-bank ml-2' /> <Weight stores={this.props.stores} value={workout.kcalFatGramsTotal / 1000} />\n                                    </span>\n                                )}\n                            </small>\n                        </div>\n                    </div>\n                    <div class={`${wrapperClasses} position-relative mt-2`}>\n                        <strong>\n                            {workout.description}\n                        </strong>\n                    </div>\n                    <div class={`${wrapperClasses} position-relative`}>\n                        <Markdown markdown={mu.replaceImages(workout.comment, workout.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                    </div>\n                    <div class={`${wrapperClasses} d-flex mb-0 position-relative`}>\n                        <div class='container-fluid px-0'>\n                            <div class='row mt-1'>\n                                {workout.distanceKm > 0 && <div class='col-3'>\n                                    <div class='text-overflow'>\n                                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                                    </div>\n                                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                        <Distance stores={this.props.stores} value={workout.distanceKm} />\n                                    </div>\n                                </div>}\n                                {workout.elevation > 0 && <div class='col-3'>\n                                    <div class='text-overflow'>\n                                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                                    </div>\n                                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                        <Elevation stores={this.props.stores} value={workout.elevation} />\n                                    </div>\n                                </div>}\n                                {workout.duration > 0 && <div class='col-3'>\n                                    <div class='text-overflow'>\n                                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                                    </div>\n                                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                                        {util.secToHms(workout.duration, true)}\n                                    </div>\n                                </div>}\n                                {workout.speedAvg > 0 && <div class='col-3'>\n                                    <div class='text-overflow'>\n                                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                                    </div>\n                                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n\t\t\t\t                        {workout.gpxInfo && workout.gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                                            <Speed stores={this.props.stores} value={workout.gpxInfo.avgGpsMovingSpeed * 3.6} />\n                                        </> : <>\n                                            <Speed stores={this.props.stores} value={workout.speedAvg} />\n                                        </>}\n                                    </div>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && (\n                        <div class={`${wrapperClasses}`}>\n                            <div class='container-fluid px-0 mt-1'>\n                                <div class='row'>\n                                    <ImageScroller stores={this.props.stores} images={images} id={workout.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                    {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                        {workout.dogs && workout.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={workout.dogs} allDogs={allDogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n\n                        <div class='mt-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='workout'\n                                onTeamClick={this.onTeamClick}\n                                onUserClick={this.onUserClick}\n                            />\n                        </div>\n\n                    </>}\n\n                    {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                        <div class={`${wrapperClasses} mb-0 position-relative mt-2`}>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <button type='button' class={`btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''}`}\n                                        onClick={this.likeWorkout}\n                                        // disabled={hasLikedWorkout}\n                                    >\n                                        <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                    </button>\n                                </div>\n                                <div class='col text-center'>\n                                    <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                        data-id={workout.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                    </button>\n                                </div>\n                                {hasShareApi ? <>\n                                    <div class='col text-center'>\n                                        <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                            onClick={this.shareLink}\n                                            data-url={`https://themusher.app/share/workout/${workout.uuidv4}`}\n                                            data-title={`title: ${workout.name}`}\n                                        >\n                                            <i class='fas fa-share' /> <Text id='workout.share'>Del</Text>\n                                        </button>\n                                    </div>\n                                </> : <>\n                                    <div class='col text-center'>\n                                        <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                            href={`https://themusher.app/share/workout/${workout.uuidv4}`}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                            data-native\n                                        >\n                                            <i class='fas fa-share' /> <Text id='workout.share'>Del</Text>\n                                        </a>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n\n                        <div class={`${wrapperClasses} mt-2 mb-3`}>\n                            {showAddComment && <WorkoutAddComment\n                                stores={this.props.stores}\n                                workout={workout}\n                                inputRef={c => this.inputRef[workout.id] = c}\n                                inputRefObject={this.inputRef}\n                                col='12'\n                                offset='0'\n                            />}\n                            <WorkoutComments stores={this.props.stores} workout={workout} col='10' offset='2' compact={true} />\n                        </div>\n\n                        {views > 0 && <>\n                            <div class='mt-2'>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={workout}\n                                    type='workout'\n                                    isTeamAdmin={true}\n                                    isAdmin={false}\n                                    onTeamClick={this.onTeamClick}\n                                    onUserClick={this.onUserClick}\n                                />\n                            </div>\n                        </>}\n\n                    </>}\n\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Workout;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst RED_DAYS = [0, 6];\n\n@observer\nclass Calendar extends Component {\n\tsetFocus = () => {\n\t\tif (this.inputRef) {\n\t\t\tthis.inputRef.focus();\n\t\t}\n\t}\n\teditMonth = (e) => {\n\t\tconst month = e.target.parentElement.dataset.month || e.target.dataset.month;\n\t\tconst year = e.target.parentElement.dataset.year || e.target.dataset.year;\n\t\tconst distance = e.target.parentElement.dataset.distance || e.target.dataset.distance;\n\t\t// console.log({ month, year });\n\t\tthis.setState({\n\t\t\tshowInput: true,\n\t\t\tinputYear: year,\n\t\t\tinputMonth: month,\n\t\t\tinputDay: null,\n\t\t\tinputWeek: null,\n\t\t\tnewDistance: distance || null,\n\t\t}, () => this.setFocus());\n\t}\n\n\teditWeek = (e) => {\n\t\tconst week = e.target.parentElement.dataset.week || e.target.dataset.week;\n\t\tconst year = e.target.parentElement.dataset.year || e.target.dataset.year;\n\t\tconst distance = e.target.parentElement.dataset.distance || e.target.dataset.distance;\n\t\t// console.log({ week, year });\n\t\tthis.setState({\n\t\t\tshowInput: true,\n\t\t\tinputYear: year,\n\t\t\tinputWeek: week,\n\t\t\tinputMonth: null,\n\t\t\tinputDay: null,\n\t\t\tnewDistance: distance || null,\n\t\t}, () => this.setFocus());\n\t}\n\n\teditDay = (e) => {\n\t\tconst day = e.target.parentElement.dataset.day || e.target.dataset.day;\n\t\tconst month = e.target.parentElement.dataset.month || e.target.dataset.month;\n\t\tconst year = e.target.parentElement.dataset.year || e.target.dataset.year;\n\t\tconst week = e.target.parentElement.dataset.week || e.target.dataset.week;\n\t\tconst distance = e.target.parentElement.dataset.distance || e.target.dataset.distance;\n\t\t// console.log({ day, month, year });\n\t\tthis.setState({\n\t\t\tshowInput: true,\n\t\t\tinputYear: year,\n\t\t\tinputMonth: month,\n\t\t\tinputDay: day,\n\t\t\tinputWeek: week,\n\t\t\tnewDistance: distance || null,\n\t\t}, () => this.setFocus());\n\t}\n\n\tsaveDistance = async () => {\n\t\tconst { workoutPlanStore, workoutStore, userStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst teamName = userStore.findTeam(currentTeam) || '';\n\t\tconst { year, month } = this.props;\n\t\tconst { workoutPlans } = workoutPlanStore;\n\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\tconst { inputYear, inputMonth, inputWeek, inputDay, newDistance } = this.state;\n\t\t// console.log({ showInput, inputYear, inputMonth, inputWeek, inputDay, newDistance });\n\n\t\tconst currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n\n\t\tif (!workoutPlanCurrent.id) {\n\t\t\tconst response = await workoutPlanStore.insert({\n\t\t\t\ttitle: `Workout plan for ${seasonStart} - ${seasonStart + 1}: ${teamName}`,\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t});\n\t\t\tconst { id: newId } = response.data;\n\t\t\tawait workoutPlanStore.load(newId);\n\t\t} else {\n\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t}\n\t\tconst { workoutPlan } = workoutPlanStore;\n\t\tconst { id } = workoutPlan;\n\t\t// console.log({ id });\n\n\t\tlet field;\n\t\tif (inputYear) {\n\t\t\tif (inputDay) {\n\t\t\t\tfield = 'days';\n\t\t\t} else {\n\t\t\t\tfield = 'weeks';\n\t\t\t}\n\t\t}\n\t\tawait workoutPlanStore.saveField(id, field, {\n\t\t\tyear: inputYear,\n\t\t\tmonth: inputMonth,\n\t\t\tday: inputDay,\n\t\t\tweek: inputWeek,\n\t\t\tdistance: newDistance,\n\t\t});\n\t\tawait workoutPlanStore.load(id);\n\n\t\tthis.resetInput(true);\n\t}\n\n\tresetInput = (nextDay) => {\n\t\tif (nextDay) {\n\t\t\tconst { inputYear, inputMonth, inputDay } = this.state;\n\t\t\tconst nextDay = util.addDays(new Date(inputYear, inputMonth - 1, inputDay, 0, 0, 0, 0), 1);\n\t\t\tthis.setState({\n\t\t\t\tshowInput: true,\n\t\t\t\tinputYear: nextDay.getFullYear(),\n\t\t\t\tinputMonth: nextDay.getMonth() + 1,\n\t\t\t\tinputDay: nextDay.getDate(),\n\t\t\t\tinputWeek: util.getWeek(nextDay),\n\t\t\t\tnewDistance: null,\n\t\t\t});\n\t\t\tthis.setFocus();\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tshowInput: false,\n\t\t\t\tinputYear: null,\n\t\t\t\tinputMonth: null,\n\t\t\t\tinputDay: null,\n\t\t\t\tinputWeek: null,\n\t\t\t\tnewDistance: null,\n\t\t\t});\n\t\t}\n\t}\n\n\tcheckKeydown = (e) => {\n\t\tswitch (e.key) {\n\t\t\tcase 'Enter':\n\t\t\t\tthis.saveDistance();\n\t\t\t\tbreak;\n\n\t\t\tcase 'Escape':\n\t\t\t\tthis.resetInput();\n\t\t\t\tbreak;\n\t\t\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateWorkoutPlanTips();\n\t}\n\n\tupdateWorkoutPlanTips = () => {\n\t\t// console.log('updateWorkoutPlanTips');\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\t\tconst { settings = {} } = user;\n\t\tthis.setState({ hideWorkoutPlanTips: settings.hideWorkoutPlanTips });\n\t}\n\n\ttoggleTips = async () => {\n\t\tconst { hideWorkoutPlanTips } = this.state;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst newValue = hideWorkoutPlanTips === 1 ? 0 : 1;\n\t\tthis.setState({ hideWorkoutPlanTips: newValue });\n\t\tawait userStore.updateSetting({ 'settings.hideWorkoutPlanTips': newValue }, { hideWorkoutPlanTips: newValue });\n\t}\n\n\trender() {\n\t\tconst { hideWorkoutPlanTips } = this.state;\n\t\tconst { appState, workoutPlanStore, userStore, workoutStore, teamStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { language = 'en' } = user;\n\t\tconst { darkmode } = appState;\n\t\tconst DAYS = mu.getDays(language);\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { showInput, inputYear, inputMonth, inputWeek, inputDay, newDistance } = this.state;\n\n        const currentDay = new Date().getDate();\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst currentEpoch = new Date().getTime();\n\t\tconst { month = currentMonth, year = currentYear, dog, basehref, showNavigation = true, showHeader = true, currentTeam } = this.props;\n\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const monthNum = parseInt(month, 10);\n        const yearNum = parseInt(year, 10);\n        const { month: nextMonth, year: nextYear } = mu.getNextMonth(monthNum, yearNum);\n        const { month: prevMonth, year: prevYear } = mu.getPrevMonth(monthNum, yearNum);\n\n        const daysOfMonth = util.getDaysInMonth(month, year);\n        const weeksInMonth = util.getWeeksInMonth(month, year);\n        const firstWeek = weeksInMonth[0].week;\n        const daysOfWeek = util.getDaysInWeek(firstWeek, year, month);\n        let totalDistanceKmMonth = 0;\n\t\tlet totalDistanceKmMonthPlan = 0;\n\t\tlet totalWorkoutDistanceKmMonth = 0;\n\n\t\tconst monthEpoch = daysOfMonth[daysOfMonth.length - 1].getTime();\n\t\tconst isMonthInTheFuture = monthEpoch > currentEpoch;\n\n\t\tconst summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n\t\tconst { workoutPlan, tips } = workoutPlanStore;\n\n\t\tconst tipsMonth = tips[`${year}-${util.padDate(month)}`];\n\t\tconst hasTipsMonth = tipsMonth && (tipsMonth.comments.length > 0 || tipsMonth.distance);\n\n\t\tconst team = teamStore.findTeam(currentTeam) || {};\n\n\t\treturn (\n\t\t\t<>\n                {showHeader && <>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4 text-center'>\n\t\t\t\t\t\t{showNavigation && <a href={`${basehref || '/workouts/month/'}${nextMonth}/${nextYear}/skipScroll`} class='float-right btn btn-sm btn-outline-secondary ml-2'><i class='fas fa-arrow-right' /></a>}\n\t\t\t\t\t\t{showNavigation && <a href={`${basehref || '/workouts/month/'}${prevMonth}/${prevYear}/skipScroll`} class='float-left btn btn-sm btn-outline-secondary mr-2'><i class='fas fa-arrow-left' /></a>}\n\t\t\t\t\t\t<h3><Text id='workout.plan.month'>Måned</Text> - {MONTHS[month - 1]} {year} {summaryMonth.distance ? `- ${util.format(summaryMonth.distance, 0)} km` : ''}</h3>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-light'><Text id='workout.plan.season'>Sesongen</Text> {seasonStart} - {seasonStart + 1}</h5>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{workoutPlan.id ? <>\n\t\t\t\t\t\t\t\t<small>{workoutPlan.title}</small>\n\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t<div class='display-4'>\n\t\t\t\t\t\t\t\t\t<i class='far fa-sad-tear text-muted' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h5 class='font-weight-lighter text-muted'>\n\t\t\t\t\t\t\t\t\t<Text id='workout.plan.no-workout-plan-found' fields={{ name: team }}>Ingen plan</Text>\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t<div class='text-muted'>\n\t\t\t\t\t\t\t\t\t<Text id='workout.plan.click-to-start'>Click on a date to get started.</Text>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{dog && <div>{dog.name}</div>}\n\t\t\t\t\t\t{/* <small>{util.isoDate(daysOfMonth[0], false, false, true)} - {util.isoDate(daysOfMonth[daysOfMonth.length - 1], false, false, true)}</small> */}\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t{!!(showInput && inputYear && inputWeek && !inputDay) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div class='form-inline w-100'>\n\t\t\t\t\t\t\t\t<div class='form-group w-75 mr-3 mb-0'>\n\t\t\t\t\t\t\t\t\t<input class='form-control w-100 form-control' type='text' \n\t\t\t\t\t\t\t\t\t\tplaceholder={`Enter distance for ${inputYear} w${inputWeek}`}\n\t\t\t\t\t\t\t\t\t\tref={c => this.inputRef = c}\n\t\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'newDistance')}\n\t\t\t\t\t\t\t\t\t\tonKeydown={this.checkKeydown}\n\t\t\t\t\t\t\t\t\t\tautocomplete='off'\n\t\t\t\t\t\t\t\t\t\tvalue={newDistance || ''}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button type='button' class='btn btn-primary' onClick={this.saveDistance}><Text id='workout.plan.save'>Lagre</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t{!!(showInput && inputYear && inputMonth) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div class='form-inline w-100'>\n\t\t\t\t\t\t\t\t<div class='form-group w-75 mr-3 mb-0'>\n\t\t\t\t\t\t\t\t\t<input class='form-control w-100 form-control' type='text'\n\t\t\t\t\t\t\t\t\t\tplaceholder={`Enter distance for ${inputYear}-${util.padDate(inputMonth)} ${inputDay ? `-${util.padDate(inputDay)}` : ''}`}\n\t\t\t\t\t\t\t\t\t\tref={c => this.inputRef = c}\n\t\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'newDistance')}\n\t\t\t\t\t\t\t\t\t\tonKeydown={this.checkKeydown}\n\t\t\t\t\t\t\t\t\t\tautocomplete='off'\n\t\t\t\t\t\t\t\t\t\tvalue={newDistance || ''}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button type='button' class='btn btn-primary' onClick={this.saveDistance}><Text id='workout.plan.save'>Lagre</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{language === 'no' && <>\n\t\t\t\t\t{hideWorkoutPlanTips ? <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4 d-flex justify-content-end'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclass='btn btn-outline-primary btn-sm'\n\t\t\t\t\t\t\t\tonClick={this.toggleTips}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-eye' /> <Text id='workout.plan.show-tips'>Show tips</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</> : <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4 d-flex justify-content-end'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclass='btn btn-primary btn-sm'\n\t\t\t\t\t\t\t\tonClick={this.toggleTips}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-eye-slash' /> <Text id='workout.plan.hide-tips'>Hide tips</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\t\t\t\t</>}\n\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t<div class='table-responsive'>\n\t\t\t\t\t\t<table class='table table-striped table-sm'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th class='text-muted'><small><Text id='workout.plan.week'>Uke</Text></small></th>\n\t\t\t\t\t\t\t\t\t{daysOfWeek.map(day => <th><small>{DAYS[day.getDay()]}</small></th>)}\n\t\t\t\t\t\t\t\t\t<th class='text-muted'><small><Text id='workout.plan.sum'>Sum</Text></small></th>\n\t\t\t\t\t\t\t\t\t<th class='text-muted'><small><Text id='workout.plan.planned'>Plan</Text></small></th>\n\t\t\t\t\t\t\t\t\t{/* <th class='text-muted'>Totalt</th> */}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{weeksInMonth && weeksInMonth.map(weekObj => {\n\t\t\t\t\t\t\t\t\tconst daysOfWeek = util.getDaysInWeek(weekObj.week, year, month);\n\t\t\t\t\t\t\t\t\tconst summaryWeek = workoutPlanStore.findWorkoutPlanSummaryWeek(util.asNumber(year), weekObj.week) || {};\n\t\t\t\t\t\t\t\t\tconst weekEpoch = daysOfWeek[6].getTime();\n\t\t\t\t\t\t\t\t\tconst isWeekInTheFuture = weekEpoch > currentEpoch;\n\t\t\t\t\t\t\t\t\tlet totalWeek = 0;\n\t\t\t\t\t\t\t\t\tlet totalWorkoutWeek = 0;\n\t\t\t\t\t\t\t\t\tif (summaryWeek.distance > 0) {\n\t\t\t\t\t\t\t\t\t\ttotalDistanceKmMonthPlan += summaryWeek.distance;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst tipsWeek = tips[`${year}-${util.padDate(month)}-w${util.padDate(weekObj.week)}`];\n\t\t\t\t\t\t\t\t\tconst hasTipsWeek = tipsWeek && (tipsWeek.comments.length > 0 || tipsWeek.distance);\n\n\t\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td class={`text-right text-muted pt-3 border-right ${!inputDay && inputYear == year && inputWeek == weekObj.week ? 'border rounded border-primary' : ''}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<small onClick={this.editWeek} data-week={weekObj.week} data-year={year} data-distance={summaryWeek.distance}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{weekObj.week}\n\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t{daysOfWeek.map(day => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst yyyy = day.getFullYear();\n\t\t\t\t\t\t\t\t\t\t\t\tconst mm = day.getMonth() + 1;\n\t\t\t\t\t\t\t\t\t\t\t\tconst dd = day.getDate();\n\t\t\t\t\t\t\t\t\t\t\t\tconst epoch = day.getTime();\n\t\t\t\t\t\t\t\t\t\t\t\tconst isDayInTheFuture = epoch > currentEpoch;\n\t\t\t\t\t\t\t\t\t\t\t\tconst summaryWorkout = userStore.findWorkoutSummaryWeekDay((isDayInTheFuture ? yyyy - 1 : yyyy), mm, dd, monthNum) || {};\n\t\t\t\t\t\t\t\t\t\t\t\tconst summary = workoutPlanStore.findWorkoutPlanSummaryDay(yyyy, mm, dd, monthNum) || {};\n\t\t\t\t\t\t\t\t\t\t\t\tif (summary && summary.distance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalWeek += summary.distance;\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalDistanceKmMonth += summary.distance;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (summaryWorkout.distanceKm) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalWorkoutWeek += summaryWorkout.distanceKm;\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalWorkoutDistanceKmMonth += summaryWorkout.distanceKm;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst isChosen = (inputYear == yyyy && inputMonth == mm && inputDay == dd);\n\t\t\t\t\t\t\t\t\t\t\t\tconst isToday =  (currentYear == yyyy) && (currentMonth == mm) && (currentDay == dd);\n\t\t\t\t\t\t\t\t\t\t\t\tconst isDayOff = RED_DAYS.indexOf(day.getDay()) > -1;\n\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(summary);\n\t\t\t\t\t\t\t\t\t\t\t\t// count: 1, day: 5, distanceKm: 10, duration: 3600, elevation: 200, month: 9, speedAvg: 12, year: 2020\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td class={`text-center overflow-hidden font-weight-light position-relative pt-3 pb-3 border-right ${isChosen ? 'calendarIsChosen' : ''} ${isToday ? 'calendarIsToday' : ''} ${isDayOff ? 'calendarIsWeekend' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`font-size: 0.8em; min-width: 3rem;`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.editDay} data-day={day.getDate()} data-month={day.getMonth() + 1} data-year={year} data-week={weekObj.week} data-distance={summary.distance}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='position-absolute text-muted' style='top: 0px; right: 2px; font-size: 0.7em;'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{day.getDate()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{summary && summary.distance ? \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='rounded-pill w-100 px-1'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`background-color: ${mu.getPlanColor(summary, darkmode)};`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={summary.distance} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{summary.count > 1 && <span class='position-absolute text-danger' style='bottom: 0; right: 0px; font-size: 0.6em;'>{summary.count}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : '-'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{summaryWorkout.distanceKm > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class={`position-absolute font-weight-bold`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`bottom: 0; left: 0px; font-size: 0.85em; color: ${isDayInTheFuture ? '#393DB1' : '#2BAAA9'};`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={summaryWorkout.distanceKm} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t<td class='text-right pt-3 pb-3 position-relative border-right' style='font-size: 0.8em;'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalWeek} />\n\t\t\t\t\t\t\t\t\t\t\t\t{totalWorkoutWeek > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class={`position-absolute`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`bottom: 0; left: 0px; font-size: 0.85em; color: ${isWeekInTheFuture ? '#393DB1' : '#2BAAA9'};`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalWorkoutWeek} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td class='text-right pt-3 pb-3 text-muted border-right' style='font-size: 0.8em;'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.editWeek} data-week={weekObj.week} data-year={year} data-distance={summaryWeek.distance}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{summaryWeek.distance > 0 && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class='rounded-pill w-100 px-1 text-white text-center'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={`background-color: ${mu.getPlanColor(summaryWeek, darkmode)};`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={summaryWeek.distance} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t{/* <td class='text-right text-muted pt-3'>{totalDistanceKmMonth}</td> */}\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t{!hideWorkoutPlanTips && language === 'no' && tipsWeek && hasTipsWeek && <tr>\n\t\t\t\t\t\t\t\t\t\t\t<td colspan='10' class='pb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h5><span class='font-weight-lighter'>Uke {weekObj.week} {year}:</span>Tips fra Femundløpet</h5>\n\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.totalDistance > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-road' /> Distanse</span>: {tipsWeek.totalDistance} km\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.distance > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-road' /> Distanse pr økt</span>: {tipsWeek.distance}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.time && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-clock' /> Tid pr økt</span>: {tipsWeek.time}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.totalWorkouts > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-list-ol' /> Antall økter</span>: {tipsWeek.totalWorkouts}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.avgSpeed && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-tachometer-alt' /> Gjennomsnittsfart</span>: {tipsWeek.avgSpeed}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.comments && <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tipsWeek.comments.map(c => <p>{c}</p>)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>}\n\n\t\t\t\t\t\t\t\t\t</>);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t<tfoot>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colspan='8' class='text-right pb-3'><Text id='workout.plan.totalkm'>Totalt km</Text></td>\n\t\t\t\t\t\t\t\t\t<td class='text-right position-relative pb-3'>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonth} />\n\t\t\t\t\t\t\t\t\t\t{totalWorkoutDistanceKmMonth > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t<span class='position-absolute'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={`bottom: 0; left: 0px; font-size: 0.65em; color: ${isMonthInTheFuture ? '#393DB1' : '#2BAAA9'};`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalWorkoutDistanceKmMonth} />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class='text-right text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonthPlan} />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t{!hideWorkoutPlanTips && language === 'no' && tipsMonth && hasTipsMonth && <tr>\n\t\t\t\t\t\t\t\t\t<td colspan='10' class='pb-3'>\n\t\t\t\t\t\t\t\t\t\t<h5><span class='font-weight-lighter'>{MONTHS[month - 1]} {year}:</span> Tips fra Femundløpet</h5>\n\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.totalDistance > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-road' /> Distanse</span>: {tipsMonth.totalDistance} km\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.distance > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-road' /> Distanse pr økt</span>: {tipsMonth.distance}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.time && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-clock' /> Tid pr økt</span>: {tipsMonth.time}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.totalWorkouts > 0 && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-list-ol' /> Antall økter</span>: {tipsMonth.totalWorkouts}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.avgSpeed && <div>\n\t\t\t\t\t\t\t\t\t\t\t<span class='text-muted'><i class='fas fa-tachometer-alt' /> Gjennomsnittsfart</span>: {tipsMonth.avgSpeed}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t\t\t\t{tipsMonth.comments && <div>\n\t\t\t\t\t\t\t\t\t\t\t{tipsMonth.comments.map(c => <p>{c}</p>)}\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>}\n\t\t\t\t\t\t\t</tfoot>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Calendar;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass Dog extends Component {\n    render() {\n        const { dog } = this.props;\n\t\tconst { userStore, dogStore, appState } = this.props.stores;\n        const { isAdmin, user } = userStore;\n        const { language = 'en' } = user;\n        const { viewmode } = appState;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const workoutSummary = dogStore.findWorkoutSummary(dog.id, seasonStart) || {};\n        // {\"0\":{\"year\":2020,\"dog\":16,\"count\":1,\"distanceKm\":9.9,\"elevation\":202,\"duration\":0,\"speedAvg\":0}}\n        const dogStatuses = dog.statuses ? dog.statuses.map(e => userStore.findDogstatus({ status: e, language })) : [];\n        const dogVaccines = dogStore.findVaccineStatuses(dog.id);\n        const dogVaccineLogStatuses = dogStore.findVaccineLogStatuses(dog.chipId);\n        const dogHistoryStatuses = dogStore.findHistoryStatuses(dog.id);\n        const dogStatus = userStore.findDogstatus({ status: dog.status, language });\n        const dogPosition = userStore.findDogposition({ position: dog.position, language });\n        const teamNames = [];\n        if (userStore.findTeam(dog.team)) {\n            teamNames.push(userStore.findTeam(dog.team));\n        }\n        if (dog.teams) {\n            dog.teams.forEach((e) => {\n                if (userStore.findTeam(e)) {\n                    teamNames.push(userStore.findTeam(e));\n                }\n            });\n        }\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const { url = `/dogs/${dog.id}` } = this.props;\n\n        return (\n            <div class='w-100 mb-3'>\n                <div class='row'>\n                    <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-0 position-relative'>\n                        {/* {JSON.stringify(dog, null, 4)} */}\n                        <div class={`text-center border rounded-circle imageRounded text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''}>\n                            {/* {!dog.image && <i class='fas fa-dog mt-3' style='font-size: 40px;' />} */}\n                            {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 pr-2'\n                            style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                        >\n                            <span class='float-right'>\n                                {dogPosition && <span class={`badge badge-${dogPosition.class || 'primary'} mr-3`}>{dogPosition.icon && <i class={dogPosition.icon} />} {dogPosition.name}</span>}\n                                {daysUntilBirthday < 7 && <>\n                                    <span class='text-muted mr-2'>\n                                        <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                    </span>\n                                </>}                                \n                                {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                            </span>\n                            <a class='stretched-link' href={url}>\n                                <h5 class='mb-1' style='line-height: 1.0em;'>\n                                    {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                    {hasBirthday && <>\n                                        <i class='fas fa-birthday-cake ml-3' />\n                                    </>}\n                                </h5>\n                            </a>\n                            <div>\n                                {teamNames && teamNames.length > 0 && <small class='font-weight-lighter'>\n                                    {teamNames.map((name, idx) => <>{idx > 0 ? ', ' : ''}{name}</>)}\n                                </small>}\n                                <br />\n                            </div>\n\n                            <small class='text-muted'>\n                                {/* {dog.chipId && <span class='ml-0'><i class='fas fa-microchip' /> {dog.chipId}</span>} */}\n                                {dog.history > 0 && <span class='ml-0'><i class='fas fa-file-signature' /> {dog.history.length}</span>}\n                                {dog.images > 0 && <span class='ml-2'><i class='fas fa-image' /> {dog.images.length}</span>}\n\n                                {workoutSummary && workoutSummary.distanceKm > 0 && <span class='ml-2'><i class='fas fa-road' /> <Distance stores={this.props.stores} value={workoutSummary.distanceKm} /></span>}\n                                {workoutSummary && workoutSummary.elevation > 0 && <span class='ml-2'><i class='fas fa-mountain' /> <Elevation stores={this.props.stores} value={workoutSummary.elevation} /></span>}\n                                {workoutSummary && workoutSummary.duration > 0 && <span class='ml-2'><i class='fas fa-clock' /> {util.secToHms(workoutSummary.duration, true)}</span>}\n                                {workoutSummary && workoutSummary.speedAvg > 0 && <span class='ml-2'><i class='fas fa-tachometer-alt' /> <Speed stores={this.props.stores} value={workoutSummary.speedAvg} /></span>}\n\n                                {dog.weight > 0 && <><i class='fas fa-balance-scale ml-2' /> <Weight stores={this.props.stores} value={dog.weight} /></>}\n                                {dog.bodyScore > 0 && <><i class='fas fa-dog ml-2' /> {util.format(dog.bodyScore, 1)}</>}\n                            </small>\n\n                            {['beta', 'advanced', 'normal'].indexOf(viewmode) > -1 && <>\n                                <div>\n                                    {dogVaccines && dogVaccines.map(v => (\n                                        <span class={`badge badge-success mr-2`} title={util.isoDate(v.endDate, false, false, true)}>\n                                            {v.vaccineType}\n                                            <span class='font-weight-light ml-3'>\n                                                <i class='fas fa-calendar-check' /> {util.isoDate(v.endDate, false, false, true)}                                    \n                                            </span>\n                                        </span>\n                                    ))}\n                                    {dogHistoryStatuses && dogHistoryStatuses.map(v => (\n                                        <span class={`badge badge-warning mr-2`} title={util.isoDate(v.endDate, false, false, true)}>{v.title}</span>\n                                    ))}\n                                </div>\n                            </>}\n\n                            {['beta', 'advanced'].indexOf(viewmode) > -1 && <>\n                                {dog.positions && dog.positions.lead && <div class=''>\n                                    {dog.positions.lead.distanceKm > 0 && <span class='badge badge-secondary mr-2'>\n                                        <span class='font-weight-lighter'><Text id='dogs.sort-lead'>Lead</Text>:</span> <Distance stores={this.props.stores} value={dog.positions.lead.distanceKm} />\n                                    </span>}\n                                    {dog.positions.point.distanceKm > 0 && <span class='badge badge-secondary mr-2'>\n                                        <span class='font-weight-lighter'><Text id='dogs.sort-point'>Point</Text>:</span> <Distance stores={this.props.stores} value={dog.positions.point.distanceKm} />\n                                    </span>}\n                                    {dog.positions.team.distanceKm > 0 && <span class='badge badge-secondary mr-2'>\n                                        <span class='font-weight-lighter'><Text id='dogs.sort-team'>Team</Text>:</span> <Distance stores={this.props.stores} value={dog.positions.team.distanceKm} />\n                                    </span>}\n                                    {dog.positions.wheel.distanceKm > 0 && <span class='badge badge-secondary mr-2'>\n                                        <span class='font-weight-lighter'><Text id='dogs.sort-wheel'>Wheel</Text>:</span> <Distance stores={this.props.stores} value={dog.positions.wheel.distanceKm} />\n                                    </span>}\n                                </div>}\n                            </>}\n\n                            <div class='clearfix pb-0'>\n                                {dog.specialNeeds && <span class={`badge badge-warning ml-2 mt-1 float-right`}><i class='fas fa-exclamation-triangle' /> {dog.specialNeeds}</span>}\n                                {dogStatus && <span class={`badge badge-${dogStatus.class} ml-2 mt-1 float-right`}>{dogStatus.icon && <i class={dogStatus.icon} />} {dogStatus.name}</span>}\n                                {dogStatuses && dogStatuses.map(status => <>\n                                    <span class={`badge badge-${status.class} ml-2 mt-1 float-right`}>\n                                        {status.icon && <i class={status.icon} />} {status.lang && status.lang[language] ? status.lang[language] : status.name}\n                                    </span>\n                                </>)}\n                            </div>\n\n                            {dogVaccineLogStatuses && dogVaccineLogStatuses.length > 0 && <>\n                                <div class='mt-2'>\n                                    {dogVaccineLogStatuses && dogVaccineLogStatuses.filter(e => e.chipId === dog.chipId).map((vac) => {\n                                        return (\n                                            <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'} mr-2 mb-1`}>\n                                                <i class='fas fa-user-md' /> {vac.vaccineAgens.name}\n                                                {/* <span class='font-weight-lighter ml-2'> */}\n                                                    {/* <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)} */}\n                                                    {/* {vac.inKarens && <>\n                                                        <br />\n                                                        (karens: {util.format(vac.karensDaysLeft, 0)} days left)\n                                                    </>} */}\n                                                {/* </span> */}\n                                            </span>\n                                        );\n                                    })}\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dog;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distanceAvgAll: <Text id='workout.graph.distance-avg-all' />,\n    distanceAvg: <Text id='workout.graph.distance-avg' />,\n    ascendAvgAll: <Text id='workout.graph.ascend-avg-all' />,\n    ascendAvg: <Text id='workout.graph.ascend-avg' />,\n    speedAvgAll: <Text id='workout.graph.speed-avg-all' />,\n    speedAvg: <Text id='workout.graph.speed-avg' />,\n    durationAvgAll: <Text id='workout.graph.duration-avg-all' />,\n    durationAvg: <Text id='workout.graph.duration-avg' />,\n    realDurationAvgAll: <Text id='workout.graph.real-duration-avg-all' />,\n    realDurationAvg: <Text id='workout.graph.real-duration-avg' />,\n    loadIndex: <Text id='workout.graph.load-index' />,\n    loadIndexAll: <Text id='workout.graph.load-index-all' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutGraphAvg extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { week, distanceAvgAll, distanceAvg, ascendAvgAll, ascendAvg, speedAvgAll, speedAvg,\n            durationAvg, realDurationAvg,\n            durationAvgAll, realDurationAvgAll,\n            loadIndex, loadIndexAll,\n            year,\n            teamAmbition,\n            teamType,\n            teamId,\n        } = this.props;\n        const {\n\t\t\tgraphAvgWorkoutStatsDistance,\n\t\t\tgraphAvgWorkoutStatsElevation,\n            graphAvgWorkoutStatsSpeed,\n            graphAvgWorkoutStatsDuration,\n            graphAvgWorkoutStatsRealDuration,\n            graphAvgWorkoutStatsLoadIndex,\n            graphWorkoutAvgWeekDistanceCurrent,\n            graphWorkoutAvgWeekElevationCurrent,\n            graphWorkoutAvgWeekSpeedCurrent,\n            graphWorkoutAvgWeekDurationCurrent,\n            graphWorkoutAvgWeekRealDurationCurrent,\n            graphWorkoutAvgWeekLoadIndexCurrent,\n            graphAvgWorkoutStatsCount,\n            user,\n\t\t} = userStore;\n\n        const { settings = {} } = user;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {teamType && <a href={`/settings/team/${teamId}`}><span class='badge badge-pill badge-secondary ml-2 float-right'>{teamType}</span></a>}\n                {teamAmbition && <a href={`/settings/team/${teamId}`}><span class='badge badge-pill badge-secondary ml-2 float-right'>{teamAmbition}</span></a>}\n\n                <h5><Text id='workout.graph.title-avg'>Gjennomsnitt</Text> {seasonStart} - {seasonStart + 1}</h5>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={150}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n\n                        dataLeft={[graphWorkoutAvgWeekLoadIndexCurrent, graphAvgWorkoutStatsLoadIndex]}\n                        legendLeft={[`${seasonStart} ${loadIndex}`, `${seasonStart} ${loadIndexAll}`]}\n                        dataFillLeft={[1]}\n\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        avgWindowLeft={[0, 2]}\n                        smoothLeft={[1, 1]}\n\n                        dataRight={[graphAvgWorkoutStatsCount]}\n                        showYTicksRight={1}\n                        smoothRight={[1]}\n                        // yTicksRightPostfix={'m'}\n                        // unitRight={['m', 'm']}\n                        // avgWindowRight={[0, 0]}\n\n                        // marker={week}\n                    />\n                </div>\n\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={150}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n\n                        dataLeft={[graphWorkoutAvgWeekDistanceCurrent, graphAvgWorkoutStatsDistance]}\n                        legendLeft={[`${seasonStart} ${distanceAvg}`, `${seasonStart} ${distanceAvgAll}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                        unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                        avgWindowLeft={[0, 2]}\n                        smoothLeft={[1, 1]}\n\n                        dataRight={[graphAvgWorkoutStatsCount]}\n                        showYTicksRight={1}\n                        smoothRight={[1]}\n                        // yTicksRightPostfix={'m'}\n                        // unitRight={['m', 'm']}\n                        // avgWindowRight={[0, 0]}\n                        // smoothRight={[1, 1]}\n\n                        // marker={week}\n                    />\n                </div>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={150}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n\n                        dataLeft={[graphWorkoutAvgWeekElevationCurrent, graphAvgWorkoutStatsElevation]}\n                        legendLeft={[`${seasonStart} ${ascendAvg}`, `${seasonStart} ${ascendAvgAll}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'ft' : 'm'}\n                        unitLeft={settings.imperial ? ['ft', 'ft', 'ft'] : ['m', 'm', 'm']}\n                        avgWindowLeft={[0, 2]}\n                        smoothLeft={[1, 1]}\n\n                        dataRight={[graphAvgWorkoutStatsCount]}\n                        showYTicksRight={1}\n                        smoothRight={[1]}\n                        // marker={week}\n                    />\n                </div>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={150}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n\n                        dataLeft={[graphWorkoutAvgWeekSpeedCurrent, graphAvgWorkoutStatsSpeed]}\n                        legendLeft={[`${seasonStart} ${speedAvg}`, `${seasonStart} ${speedAvgAll}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                        avgWindowLeft={[0, 2]}\n                        smoothLeft={[1, 1]}\n\n                        dataRight={[graphAvgWorkoutStatsCount]}\n                        showYTicksRight={1}\n                        smoothRight={[1]}\n\n                        // dataRight={[\n                        //     graphWorkoutAvgWeekDurationCurrent,\n                        //     graphAvgWorkoutStatsDuration,\n                        // ]}\n                        // legendRight={[\n                        //     `${seasonStart} ${durationAvg}`,\n                        //     `${seasonStart} ${durationAvgAll}`,\n                        // ]}\n                        // showYTicksRight={1}\n                        // yTicksRightVal={val => util.secToHms(val, true)}\n                        // avgWindowRight={[0, 0, 2, 2]}\n                        // smoothRight={[1, 1, 1, 1]}\n                        // marker={week}\n                    />\n                </div>\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={150}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n\n                        dataLeft={[graphWorkoutAvgWeekDurationCurrent, graphAvgWorkoutStatsDuration]}\n                        legendLeft={[`${seasonStart} ${durationAvg}`, `${seasonStart} ${durationAvgAll}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftVal={val => util.secToHms(val, true)}\n                        avgWindowLeft={[0, 2]}\n                        smoothLeft={[1, 1]}\n\n                        dataRight={[graphAvgWorkoutStatsCount]}\n                        showYTicksRight={1}\n                        smoothRight={[1]}\n                        // marker={week}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutGraphAvg;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\n@observer\nclass Modal extends Component {\n    toggleDate = () => {\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startY: e.touches[0].pageY,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startY: undefined,\n            readyToRefresh: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        const { close } = this.props;\n        const { startY, refreshing } = this.state;\n        const scrollDistance = 30;\n        const y = e.touches[0].pageY;\n        if (this.appContainer) {\n            const { scrollTop } = this.appContainer;\n            if (scrollTop === 0 && y > startY + scrollDistance && !refreshing) {\n                close();\n            }\n        }\n    }\n\n    render() {\n        const { showDate } = this.state;\n        const { image, imagexxl, close, thumb, name, title, date } = this.props;\n        return (\n            <div class='fixed-top bg-dark text-center pt-2' style='width: 100vw; height: 100vh;'>\n                <button class='btn btn-secondary float-right mr-2' onClick={close}>X</button>\n\n                    <div class='d-flex mb-2 px-2'>\n                        {/* {JSON.stringify(dog, null, 4)} */}\n                        {thumb && <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={thumb ? `background-image: url(\"${thumb}\");` : ''}>\n                            &nbsp;\n                        </div>}\n                        <div class='flex-grow-1 pl-3 pr-2 text-left' style='line-height: 1.3em;'>\n                            {name && <strong class='mr-2'>{name}:</strong>}\n                            {title}<br />\n                            <small class='text-muted'>\n                                {date && <small onClick={this.toggleDate}>\n                                    {showDate ? util.formatDate(date, { locale: 'no-NB' }) : util.formatDistance(date, new Date(), { locale: 'no-NB' })}\n                                </small>}\n                            </small>\n                        </div>\n                    </div>\n\n\n                <img src={image}\n                    class='img-fluid align-middle mt-2 mb-2'\n                    onClick={close}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                    ref={c => this.appContainer = c}\n                />\n\n                <a target='_blank' rel='noopener noreferrer' href={imagexxl || image} download={imagexxl || image}>\n                    <i class='fas fa-download' /> <Text id='modal.download'>Last ned bildet</Text>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport LineGraph from '../../components/lineGraph';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    duration: <Text id='workout.graph.duration'>Duration</Text>,\n    rest: <Text id='workout.graph.rest'>Rest</Text>,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n    speedAvg: <Text id='workout.graph.speedavg'>Speed</Text>,\n    loadIndex: <Text id='workout.graph.loadindex'>Loadindex</Text>,\n\n    avgDogs: <Text id='workout.graph.avgdogs'>Avg dogs</Text>,\n    avgImages: <Text id='workout.graph.avgimages'>Avg images</Text>,\n    sledWeight: <Text id='workout.graph.sledweight'>Sled weight</Text>,\n    rating: <Text id='workout.graph.rating'>Rating</Text>,\n    temperature: <Text id='workout.graph.temperature'>Temperature</Text>,\n}))\n@observer\nclass WorkoutGraph extends Component {\n    render() {\n        const { userStore, workoutPlanStore } = this.props.stores;\n        const {\n            user,\n\t\t\tworkoutSummary,\n\t\t\tgraphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev,\n\t\t\tgraphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev,\n            avgDayDistance, avgDayElevation, \n            avgDayDuration, avgDaySpeedAvg, avgDayLoadIndex, \n            avgDayAvgDogs, avgDayAvgImages, avgDaySledWeight,\n            avgDayRest, avgDayRating, avgDayTemperature,\n\t\t} = userStore;\n        const { settings = {} } = user;\n        const { graphPlanWeekDistanceCurrent } = workoutPlanStore;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const {\n            isLoading,\n            week,\n            distance,\n            duration,\n            rest,\n            ascend,\n            plan,\n            speedAvg,\n            loadIndex,\n            avgDogs,\n            avgImages,\n            sledWeight,\n            rating,\n            temperature,\n            year = currentYear,\n            month = currentMonth,\n            showExtra = false,\n        } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const seasonDays = util.dayRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = Math.floor(xTicksAll.length / 5);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += parts) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        const xTicksAllDays = seasonDays.map(wo => `${wo.day}.${wo.month}`);\n        const partsDays = Math.floor(xTicksAllDays.length / 5);\n        const xTicksDays = [];\n        for (let i = 0, l = xTicksAllDays.length; i < l; i += partsDays) {\n            xTicksDays.push(xTicksAllDays[i]);\n        }\n\n        return (\n            <>\n                {/* <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5> */}\n                <div class='w-100 mt-3 mb-4 border-top pt-5'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <h5 class='text-center'><Text id='workout.graph.total-distance'>Total distance</Text></h5>\n                    <LineGraph\n                        stores={this.props.stores}\n                        width={500}\n                        height={200}\n                        showXTicks={1}\n                        xTicksVal={val => `${week} ${val}`}\n                        xTicks={xTicks}\n                        paddingTop={30}\n                        lineFromXzero={true}\n                        lineFromXmax={true}\n                        xTicksLink={'/workouts/week/'}\n\n                        dataLeft={[graphWorkoutSummaryWeekDistanceCurrent, graphWorkoutSummaryWeekDistancePrev, graphPlanWeekDistanceCurrent]}\n                        legendLeft={[`${seasonStart} ${distance}`, `${seasonStart - 1} ${distance}`, `${seasonStart} ${plan}`]}\n                        dataFillLeft={[1]}\n                        // yMaxLeft={30}\n                        // yMinLeft={0}\n                        showYTicksLeft={1}\n                        yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                        unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                        avgWindowLeft={[0, 0, 0]}\n                        smoothLeft={[1, 1, 1]}\n\n                        dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                        legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                        showYTicksRight={1}\n                        yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                        unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                        avgWindowRight={[0, 0]}\n                        smoothRight={[1, 1]}\n\n                        // marker={week}\n                    />\n                </div>\n\n                {!isLoading && graphWorkoutSummaryWeekDistanceCurrent && graphWorkoutSummaryWeekDistanceCurrent.length < 3 && (\n                    <div class='mb-5 py-3 border-top border-bottom'>\n                        <div class='text-left' style='line-height: 1.0em;'>\n                            <div class='display-4 float-left text-warning mr-3'>\n                                <i class='fas fa-paw' />\n                            </div>\n                            <small>\n                                <Text id='workout.graph.too-little-data'>Foreløpig er det litt lite data for å kunne vise noen fine grafer. \n                                Etterhvert som du legger inn flere treninger så vil dette bli en fin tabell og graf som viser progresjonen din.</Text>\n                            </small>\n                        </div>\n                    </div>\n                )}\n                {showExtra && <>\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-rating'>Average rating/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayRating]}\n                            legendLeft={[`${seasonStart} ${rating}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayTemperature]}\n                            legendRight={[`${seasonStart} ${temperature}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? '°F' : '°C'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-distance'>Average distance/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDistance]}\n                            legendLeft={[`${seasonStart} ${distance}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayElevation]}\n                            legendRight={[`${seasonStart} ${ascend}`]}\n                            showYTicksRight={1}\n                            yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-duration'>Average duration/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            paddingLeft={50}\n                            yTicksLeftWidth={'50px'}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayDuration]}\n                            legendLeft={[`${seasonStart} ${duration}`]}\n                            yTicksLeftVal={val => `${util.secToHms(val)}`}\n\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mi' : 'km'}\n                            // unitLeft={settings.imperial ? ['mi', 'mi', 'mi'] : ['km', 'km', 'km']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayRest]}\n                            legendRight={[`${seasonStart} ${rest}`]}\n                            showYTicksRight={1}\n                            yTicksRightVal={val => `${util.secToHms(val)}`}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-speed'>Average speed/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDaySpeedAvg]}\n                            legendLeft={[`${seasonStart} ${speedAvg}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDayLoadIndex]}\n                            legendRight={[`${seasonStart} ${loadIndex}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    <div class='w-100 mt-3 mb-4 mt-5 pt-5 border-top'>\n                        <h5 class='text-center'><Text id='workout.graph.avg-dogs'>Average dogs/day</Text></h5>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={500}\n                            height={200}\n                            showXTicks={1}\n                            xTicksVal={val => `${val}`}\n                            xTicks={xTicksDays}\n                            paddingTop={30}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            dataLeft={[avgDayAvgDogs, avgDayAvgImages]}\n                            legendLeft={[`${seasonStart} ${avgDogs}`, `${seasonStart} ${avgImages}`]}\n                            // dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            // yTicksLeftPostfix={settings.imperial ? 'mph' : 'km/t'}\n                            // unitLeft={settings.imperial ? ['mph', 'mph', 'mph'] : ['km/t', 'km/t', 'km/t']}\n                            avgWindowLeft={[0, 0, 0]}\n                            smoothLeft={[0, 0, 0]}\n\n                            dataRight={[avgDaySledWeight]}\n                            legendRight={[`${seasonStart} ${sledWeight}`]}\n                            showYTicksRight={1}\n                            // yTicksRightPostfix={settings.imperial ? 'ft' : 'm'}\n                            // unitRight={settings.imperial ? ['ft', 'ft'] : ['m', 'm']}\n                            avgWindowRight={[0, 0]}\n                            smoothRight={[0, 0]}\n\n                            // marker={week}\n                        />\n                    </div>\n\n                    {/* <xmp>{JSON.stringify(avgDayDuration, null, 4)}</xmp> */}\n                </>}\n            </>\n        );\n    }\n}\n\nexport default WorkoutGraph;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass Invite extends Component {\n    inviteKennel = async () => {\n        const { friendEmail: email } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const response = await userStore.inviteKennel({ email });\n        this.setState({\n            response,\n            inviteSent: true,\n        });\n    }\n\n    inviteNew = () => {\n        this.setState({\n            inviteSent: false,\n        });\n    }\n\n    hideInvite = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideInvite': 1 });\n        this.setState({\n            hideInvite: true,\n        });\n    }\n\n    render() {\n        const { inviteSent, hideInvite } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (!forceShow && settings.hideInvite || hideInvite) {\n            return '';\n        }\n        if (inviteSent) {\n            return (\n                <div class='col-12'>\n                    <Text id='users.invite.thanks'>Takk for at du hjelper oss til å bli flere 😃</Text>\n                    <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.inviteNew}>\n                        <Text id='users.invite.more'>Invitere flere</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 pb-4 clearfix'>\n                <h5><Text id='users.invite.title'>Inviter ny kennel til The Musher</Text></h5>\n                <p>\n                    <Text id='users.invite.text'>Jeg håper du vil hjelpe oss til å bli flere. Appen vil bli lansert veldig snart og det er påtide å invitere inn flere brukere.</Text>\n                </p>\n                <div>\n                    <div class='form-row align-items-center'>\n                        <div class='col-auto'>\n                            <label class='sr-only' for='inlineFormInput'><Text id='users.invite.email'>E-post</Text></label>\n                            <Localizer>\n                                <input type='text' class='form-control form-control-sm mb-2' id='inlineFormInput'\n                                    placeholder={<Text id='users.invite.email-placeholder'>E-post til ny kennel</Text>}\n                                    onInput={linkState(this, 'friendEmail')}\n                                />\n                            </Localizer>\n                        </div>\n                        <div class='col-auto'>\n                            <button type='button' class='btn btn-sm btn-primary mb-2' onClick={this.inviteKennel}>\n                                <Text id='users.invite.send'>Send invitasjon</Text>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                {!forceShow && <button type='button' class='btn btn-sm btn-link mb-2 float-left' onClick={this.hideInvite}>\n                    <i class='fas fa-eye-slash' /> <Text id='users.invite.hide'>Skjul</Text>\n                </button>}\n            </div>\n        );\n    }\n}\n\nexport default Invite;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport PubSub, { topics } from '../../lib/pubsub';\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport Dog from '../../components/dog';\nimport User from '../../components/user';\nimport FormGraph from '../../components/team/formGraph';\nimport TeamLine from '../../components/team/publicLine';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutGraphAvg from '../../components/workout/graphAvg';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Workout from '../../components/workout';\nimport Map from '../../components/map';\nimport PremiumBadge from '../../components/premium/badge';\nimport UserInvite from '../../components/user/invite';\nimport TeamConnectConfirm from '../../components/team/connect-confirm';\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\nimport ImageScroller from '../../components/imageScroller';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Ad from '../../components/ad/';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nconst initialState = {\n    newTeam: {},\n    submenu: 'stats',\n};\n\nconst LIMIT = 10;\n\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { teamStore } = this.props.stores;\n        const { team } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        teamStore.removeImage({\n            id: team.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { team, field, updateField } = this.props;\n        updateField({ id: team.id, field, value: {} });\n    }\n\n    render() {\n        const { saved, team, field, icon, title, type, help, onInput, updateField, datalist = [], showImages = true, showFiles = true, addToImages = true } = this.props;\n        const value = team[field];\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group  mb-5 pb-1 border-bottom ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={team.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    <datalist id={`list-${field}`} >\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        if (type === 'select') {\n            return (\n                <div class={`form-group  mb-5 pb-1 border-bottom ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <select\n                        list={`list-${field}`}\n                        class={`form-control ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}\n                        id={`${field}Input`}\n                        aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={team.id}\n                        data-field={field}\n                        onInput={onInput}\n                        autocomplete='off'\n                    >\n                        <option value=''>-- <Text id='teams.choose-country'>Velg land</Text> --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {team[field] && team[field].s3SmallLink && <div class='col-3 p-1'>\n                                <img src={team[field].s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={team[field].name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {showImages && <>                            \n                                {team.images && team.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                    </div>\n                                ))}\n                            </>}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={team} field={field} updateField={updateField} addToImages={addToImages} autoOpen={false} />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'toggle') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <div class='custom-control custom-switch'>\n                        <input type='checkbox'\n                            class='custom-control-input'\n                            id={`${field}Input`}\n                            value={value === 1 ? 0 : 1}\n                            data-id={team.id}\n                            data-field={field}\n                            onInput={onInput}\n                            checked={value == 1 ? 'checked' : ''}\n                        />\n                        <label class='custom-control-label' for={`${field}Input`} />\n                    </div>\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={team.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={10}\n                    />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!team.files || team.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='teams.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='teams.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {team.files && team.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={team} field={field} updateField={updateField} />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }        \n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={team} field={field} updateField={updateField} />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={team} field={field} updateField={updateField} />\n                    {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${team.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={team.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${team.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='teams.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n\n@observer\nclass TeamsDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    async loadAll(props = this.props) {\n        this.setState({ isLoading: true });\n        await this.loadTeam(props),\n        await this.loadSummaryData(props);\n        this.setState({ isLoading: false });\n    }\n\n    async loadSummaryData(props = this.props) {\n        await Promise.all([\n            this.loadWorkoutPlans(props),\n            this.loadWorkoutSummary(props),\n            this.loadHeatmap(props),\n            this.loadWorkouts(),\n        ]);\n    }\n\n    loadTeam = async (props = this.props) => {\n\t\tconst { teamStore, userStore, workoutStore } = props.stores;\n        await teamStore.load(props.team, false, { addData: ['dogs', 'users', 'followers', 'blockedFollowers'] });\n        const { team } = teamStore;\n        await userStore.getWorkoutSummary({ team: team.id });\n        teamStore.plotFormGraph();\n    }\n\n    loadHeatmap = async (props = this.props) => {\n\t\tconst { workoutStore } = props.stores;\n        await workoutStore.getHeatmap(props.team);\n    }\n\n\tloadMore = () => {\n\t\tconst { offset } = this.state;\n\t\tthis.setState({ offset: offset + LIMIT }, () => {\n\t\t\tthis.loadWorkouts(true);\n\t\t});\n\t}\n\n    loadWorkouts = async (append = false) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore } = this.props.stores;\n        const { team } = this.props;\n\t\tconst { offset } = this.state;\n\t\tawait workoutStore.load({ query: { team }, limit: LIMIT, offset }, append);\n\t\t// await this.loadWorkoutSummary();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    loadWorkoutSummary = async (props = this.props) => {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        const viewTeam = props.team || currentTeam;\n        await userStore.getWorkoutSummary({ team: viewTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: viewTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: viewTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: viewTeam });\n    }\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 8 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, teamStore } = props.stores;\n        const { team } = teamStore;\n\n\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (team.id) {\n\t\t\tawait workoutPlanStore.load({\n\t\t\t\tquery: {\n\t\t\t\t\tteam: team.id,\n\t\t\t\t\tseasonYear: seasonStart,\n\t\t\t\t},\n\t\t\t\taddData: ['tips'],\n\t\t\t});\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t} else {\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlan', {});\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlans', []);\n\t\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteTeam = async () => {\n\t\tconst { teamStore } = this.props.stores;\n\t\tconst { team } = teamStore;\n        await teamStore.saveField(team.id, 'offline', 1);\n\t\tPubSub.publish(topics.STATUS_MESSAGE, {\n\t\t\tmessage: 'Teamet er slettet',\n\t\t\ttype: 'success',\n\t\t\ticon: 'fas fa-check',\n\t\t});\n        route(`/teams/list`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { teamStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { team } = teamStore;\n        if (field === 'images') {\n            if (Array.isArray(team.images) && Array.isArray(value)) {\n                localObjectValue = [...team.images, ...value];\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(team.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...team.achievements, ...value];\n                } else {\n                    localObjectValue = [...team.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(team.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...team.links, ...value];\n                } else {\n                    localObjectValue = [...team.links, value];\n                }\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(team.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...team.files, ...value];\n                } else {\n                    localObjectValue = [...team.files, value];\n                }\n            }\n        }        \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            teamStore.updateObjectKeyValue('newTeam', field, value);\n        } else {\n            teamStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { teamStore } = this.props.stores;\n        await teamStore.saveField(id, field, value);\n    }\n\n    reCalculateFitness = async () => {\n\t\tconst { recalculated } = this.state;\n\t\tif (recalculated) {\n\t\t\treturn true;\n\t\t}\n\t\tconst { teamStore } = this.props.stores;\n\t\tconst { team } = teamStore;\n\t\tthis.setState({ recalculated: true });\n        await teamStore.reCalcFitness(team.id);\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.team !== this.props.team) {\n            this.loadAll(nextProps);\n        }\n        if (nextProps.month !== this.props.month || nextProps.year !== this.props.year) {\n            this.loadSummaryData(nextProps);\n        }\n    }\n\n\trender() {\n        const { submenu, recalculated } = this.state;\n\t\tconst { teamStore, userStore, workoutPlanStore, workoutStore } = this.props.stores;\n        const { workoutPlan, workoutPlans } = workoutPlanStore;\n        const { heatmap, workouts, currentTeam } = workoutStore;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n\t\tconst { team, dogs, users, followers = [], blockedFollowers = [], saved, graphFitness } = teamStore;\n\n        const { image, imageHeader } = team;\n        const { isAdmin, user } = userStore;\n        const { language = 'en' } = user;\n        const {\n            user: currentUser,\n        } = userStore;\n        const isTeamAdmin = team.user === currentUser.id;\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const defaultImage = {\n            s3XXLargeLink: './assets/homerun-race-logo.png',\n        };\n\n        const headerImage = imageHeader && imageHeader.s3XXLargeLink ? imageHeader : defaultImage;\n        const teamImage = image && image.s3LargeLink ? image : null;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='row mb-1'>\n                    <div class='w-100 position-relative'\n                        style={`height: 25vh; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n                    >\n                        <a class='btn btn-sm btn-primary position-absolute'\n                            style={`top: 5px; right: 10px;`}\n                            href={`/teams/edit/${team.id}`}\n                        >\n                            <i class='fas fa-edit' /> <Text id='teams.edit'>Endre</Text>\n                        </a>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                        <div class='row'>\n                            <div class='col-3 col-sm-4 col-md-3 col-lg-4 position-relative'>\n                                <div\n                                    class={`text-center border border-white rounded-circle position-absolute imageRounded imageRoundedResponsive imageRoundedResponsivePosition`}\n                                    style={`left: 20px; ${teamImage ? `background-image: url(\"${teamImage.s3LargeLink}\"); background-size: cover; background-repeat: no-repeat; background-position: 50% 50%;` : ''}`}\n                                >\n                                    {!teamImage && <i class='fas fa-users text-muted mt-4' style='font-size: 60px;' />}\n                                </div>\n                                &nbsp;\n                            </div>\n                            <div class='col-9 col-sm-8 col-md-9 col-lg-8' style='line-height: 1.2em;'>\n                                <h5 class='my-0'>{team.name}</h5>\n                                <small class='text-muted'>\n                                    {team.place ? `${team.place}, ` : ''}{team.country}\n                                </small><br />\n                                {teamType && <a href={`/settings/team/${team.id}`}><span class='badge badge-pill badge-secondary mt-2'>{teamType}</span></a>}\n                                {teamAmbition && <a href={`/settings/team/${team.id}`}><span class='badge badge-pill badge-secondary mt-2 ml-2'>{teamAmbition}</span></a>}\n                                {isTeamAdmin && <span class='badge badge-pill badge-primary mt-2 ml-2'><Text id='teams.admin'>Admin</Text></span>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-1'>\n                        {team.public > 0 && <>\n                            <a href={`/teams/public/${team.uuidv4}`} class='btn btn-success btn-block'><i class='fas fa-users' /> <Text id='teams.public-profile'>Public profile</Text></a>\n                        </>}\n                    </div>\n                </div>\n\n\t\t\t\t<div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-1'>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'stats' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='stats'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-tachometer-alt' /> <Text id='teams.stats'>Stats</Text></button>\n                                        {submenu === 'stats' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'presentation' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='presentation'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-chalkboard-teacher' /> <Text id='teams.presentation'>Presentation</Text></button>\n                                        {submenu === 'presentation' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='pictures'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-images' /> <Text id='teams.pictures'>Pictures</Text></button>\n                                        {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='dogs'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-dog' /> <Text id='teams.dogs-menu'>Dogs</Text></button>\n                                        {submenu === 'dogs' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'mushers' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='mushers'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-user' /> <Text id='teams.mushers'>Mushers</Text></button>\n                                        {submenu === 'mushers' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'workouts' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='workouts'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-running' /> <Text id='teams.workouts'>Workouts</Text></button>\n                                        {submenu === 'workouts' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='workoutplan'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n                                        {submenu === 'workoutplan' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'fitness' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='fitness'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-chart-line' /> <Text id='teams.fitness-menu'>Fitness</Text></button>\n                                        {submenu === 'fitness' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'compare' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='compare'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-exchange-alt' /> <Text id='teams.compare'>Compare</Text></button>\n                                        {submenu === 'compare' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'trophy' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='trophy'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-award' /> <Text id='teams.trophy'>Trophy case</Text></button>\n                                        {submenu === 'trophy' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='achievements'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-clock' /> <Text id='teams.achievements'>Achievements</Text></button>\n                                        {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'followers' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='followers'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-users' /> <Text id='teams.followers'>Followers</Text></button>\n                                        {submenu === 'followers' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    {/* <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block ${submenu === 'veterinary' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='veterinary'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-cogs' /> <Text id='teams.veterinary'>Vet</Text></button>\n                                        {submenu === 'veterinary' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div> */}\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='advanced'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-cogs' /> <Text id='teams.log'>Advanced</Text></button>\n                                        {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                </div>\n                            </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                </div>\n\n\n                {submenu === 'stats' && <>\n                    <div class='row mt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <WorkoutGraph stores={this.props.stores} isLoading={false} key={`graph-${workoutPlan.id}-${workoutPlans.length}`} />\n                            <WorkoutTotals stores={this.props.stores} currentTeam={team.id} />\n                            <WorkoutStatus stores={this.props.stores} currentTeam={team.id} />\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'presentation' && <>\n                    <div class='row mt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <div class='d-flex justify-content-center'>\n                                {!team.facebook && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'>\n                                            <i class='fab fa-facebook' />\n                                        </div>\n                                        <h3 class='font-weight-lighter'>\n                                            <Text id='teams.add-sosialmedia'>Gå inn på endring av teamet for å legge inn en sosialemedier.</Text>\n                                        </h3>\n                                    </div>\n                                </>}\n\n                                {team.url && <div class='mx-2'><h3><a href={mu.asUrl(team.url)} target='_blank' rel='noreferrer'><i class='fas fa-link' /></a></h3></div>}\n                                {team.facebook && <div class='mx-2'><h3><a href={mu.asFacebookLink(team.facebook)} target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a></h3></div>}\n                                {team.instagram && <div class='mx-2'><h3><a href={mu.asInstagramLink(team.instagram)} target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a></h3></div>}\n                                {team.snapchat && <div class='mx-2'><h3><a href={mu.asSnapchatLink(team.snapchat)} target='_blank' rel='noreferrer'><i class='fab fa-snapchat' /></a></h3></div>}\n                            </div>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            {!team.description && <>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'>\n                                        <i class='fas fa-pen-nib' />\n                                    </div>\n                                    <h3 class='font-weight-lighter'>\n                                        <Text id='teams.add-description'>Gå inn på endring av teamet for å legge inn en beskrivelse.</Text>\n                                    </h3>\n                                </div>\n                            </>}\n                            <Markdown markdown={mu.replaceImages(team.description, team.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'pictures' && <>\n                    <div class='row mt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                            <Localizer>\n                                <ImageScroller stores={this.props.stores} images={team.images} noimagestext={<Text id='teams.no-photos'>No photos for this team.</Text>} />\n                            </Localizer>\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'dogs' && <>\n                    <div class='row mt-3'>\n\n                        {(!dogs || dogs.length === 0) && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-dog' /></div>\n                                    <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                    <Text id='teams.no-dogs-text'>You can add more dogs to this team.</Text>\n                                </div>\n                            </div>\n                        </>}\n\n                        {dogs && dogs.length > 0 && <>\n                            <div class='col-12 mt-3'>\n                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                    <h5><Text id='teams.dogs' fields={{ total: dogs.length }}>Hundene - {dogs.length} stk</Text></h5>\n                                </div>\n                                {dogs && dogs.map(dog => (\n                                    <Dog stores={this.props.stores} dog={dog} />\n                                ))}\n                            </div>\n                        </>}\n                    </div>\n                </>}\n\n                {submenu === 'mushers' && <>\n                    <div class='row mt-3'>\n                        <div class='offset-0 col-12 mt-2'>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                <a class='btn btn-secondary float-right'\n                                    href={`/teams/addmember/${team.id}`}\n                                >\n                                    <i class='fas fa-plus' /> <Text id='teams.add-new-member'>Legg til medlem</Text>\n                                </a>\n                            </div>\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <h5><Text id='teams.members' fields={{ total: users.length }}>Medlemmer - {users.length} stk</Text></h5>\n                            {users && users.map(user => (\n                                <User stores={this.props.stores} user={user} team={team} />\n                            ))}\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'workouts' && <>\n                    <div class='row mt-3'>\n\n                        {(!workouts || workouts.length === 0) && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-running' /></div>\n                                    <h3><Text id='teams.no-workouts-title'>No workouts for this team!</Text></h3>\n                                    <Text id='teams.no-workouts-text'>You can add more workouts to this team.</Text>\n                                </div>\n                                <div class='text-center mt-3'>\n                                    <a href='/workouts' class='btn btn-primary'>\n                                        <i class='fas fa-running' /> <Text id='header.add-workouts'>Add Workouts</Text>\n                                    </a>\n                                </div>\n                            </div>\n                        </>}\n\n                        {workouts && workouts.length > 0 && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                                <h5><Text id='teams.workouts'>Workouts</Text></h5>\n                            </div>\n                            <div class='offset-0 col-12 mt-3'>\n                                {workouts && workouts.map(workout => (\n                                    <Workout stores={this.props.stores} workout={workout} showDate={true} />\n                                ))}\n                            </div>\n                        </>}\n                    </div>\n                </>}\n\n                {submenu === 'workoutplan' && <>\n                    <div class='row mt-3'>\n                        <CalendarPlan stores={this.props.stores}\n                            basehref={`/teams/${team.id}/`}\n                            month={month}\n                            year={year}\n                            key={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}`}\n                            showNavigation={true}\n                            showHeader={true}\n                            currentTeam={currentTeam}\n                        />\n                        <div class='col-12'>\n                            <Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'fitness' && <>\n                    <div class='row mt-3'>\n                        {(!graphFitness || graphFitness.length === 0) && <>\n                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-chart-area' /></div>\n                                    <h3><Text id='teams.no-workouts-title'>No workouts for this team!</Text></h3>\n                                    <Text id='teams.no-workouts-fitness-text'>When you add workouts your fitness graph will be calculated every night.</Text>\n                                </div>\n                                <div class='text-center mt-3'>\n                                    <a href='/workouts' class='btn btn-primary'>\n                                        <i class='fas fa-running' /> <Text id='header.add-workouts'>Add Workouts</Text>\n                                    </a>\n                                </div>\n                            </div>\n                        </>}\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <FormGraph stores={this.props.stores} />\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'compare' && <>\n                    <div class='row mt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <h5><Text id='teams.compare'>Compare</Text></h5>\n                            <WorkoutGraphAvg stores={this.props.stores} isLoading={false}\n                                key={`graph-avg-${workoutPlan.id}-${workoutPlans.length}`}\n                                teamId={team.id}\n                                teamAmbition={teamAmbition}\n                                teamType={teamType}\n                            />\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'trophy' && <>\n                    <div class='row mt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            {(!team.trophys || team.trophys.length === 0) && <>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-award' /></div>\n                                    <h3><Text id='teams.no-trophys-title'>No trophys for this team!</Text></h3>\n                                    <Text id='teams.no-trophys-text'>You have to add more workouts, pictures, log entries for dogs, etc to earn trophys.</Text>\n                                </div>\n                            </>}\n\n                            <div class='row'>\n                                {team.trophys && team.trophys.reverse().map(file => {\n                                    const img = mu.getTrophyImage(file.name);\n                                    if (!img) {\n                                        return '';\n                                    }\n                                    const textHeader = file.descriptionHeader && file.descriptionHeader[language] ? file.descriptionHeader[language] : '';\n                                    const text = file.description && file.description[language] ? file.description[language] : '';\n                                    return (\n                                        <div class='col-4 mt-3'>\n                                            <div class='mb-2'>\n                                                <img src={img} class='img-fluid' />\n                                            </div>\n                                            <strong>{textHeader}</strong>\n                                            {/* <small class='font-weight-lighter mr-2'>\n                                                {util.isoDate(file.createdDate, false, false, true)}\n                                            </small> */}\n                                            <small>\n                                                <details>\n                                                    <summary><Text id='teams.trophy-details'>Details</Text></summary>\n                                                    <Markdown markdown={mu.replaceImages(text, team.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </details>\n                                            </small>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'achievements' && <>\n                    <div class='row mt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            {(!team.achievements || team.achievements.length === 0) && <>\n                                <div class='text-center text-muted'>\n                                    <div class='display-1'><i class='fas fa-clock' /></div>\n                                    <h3><Text id='teams.no-achievements-title'>No achievements for this team!</Text></h3>\n                                    <Text id='teams.no-achievements-text'>You can add achievements to this team. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                </div>\n                            </>}\n\n                            {team.achievements && team.achievements.map(file => (\n                                <div class='col-12 p-1'>\n                                    {file.date && <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>}\n                                    <span class='mr-2 font-weight-bold'>{file.name}</span>\n                                    <span class='mr-2 font-weight-light'>{file.description}</span>\n                                    {file.url && <span class='mr-2'><a href={mu.asUrl(file.url)} target='_blank' rel='noreferrer' native><i class='fas fa-link' /></a></span>}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'followers' && <>\n                    <div class='row mt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <h5><Text id='teams.followers'>Followers</Text></h5>\n                        </div>\n\n                        <div class={`col-12`}>\n                            <TeamConnectConfirm stores={this.props.stores} />\n                        </div>\n\n                        <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                            <div class='row'>\n                                {(!util.isArray(followers) || followers.length === 0) && <>\n                                    <div class='col-12 text-center text-muted mb-5'>\n                                        <div class='display-1'>\n                                            <i class='far fa-sad-tear' />\n                                        </div>\n                                        <h3 class='font-weight-lighter'>\n                                            <Text id='teams.no-followers'>Currently you have no followers, but fear not. It's easy get new followers. Be active in the feed and make you team profile beautiful.</Text>\n                                        </h3>\n                                    </div>\n\n                                    <div class='col-12 mb-5' style='font-size: 1.5em;'>\n                                        <Localizer>\n                                            <Input stores={this.props.stores} saved={saved} team={team} field='public' icon='fas fa-eye' type='toggle'\n                                                title={<Text id='teams.public'>Synlig offentlig</Text>}\n                                                help={<Text id='teams.public-help'>Skal teamet være mulig å følge? Alle som vil følge må godkjennes av dere først.</Text>}\n                                                onInput={this.updateField}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                    {/* <UserInvite stores={this.props.stores} forceShow={true} /> */}\n                                </>}\n\n                                {util.isArray(followers) && followers.map(t => \n                                    <TeamLine stores={this.props.stores} team={t} myTeamId={team.id} showBlockButton={true} callback={this.loadTeam} />\n                                )}\n\n                                {util.isArray(blockedFollowers) && blockedFollowers.length > 0 && <>\n                                    <div class='col-12 mt-5'>\n                                        <h5><Text id='teams.blocked-followers'>Blokkerte team</Text>:</h5>\n                                    </div>\n                                    {util.isArray(blockedFollowers) && blockedFollowers.map(t => \n                                        <TeamLine stores={this.props.stores} team={t} myTeamId={team.id} isBlocked={true} callback={this.loadTeam} />\n                                    )}\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </>}\n\n                {submenu === 'advanced' && <>\n                    <div class='row mt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <h5><Text id='teams.heatmap'>Heatmap</Text></h5>\n                            <Text id='teams.heatmap-info'>Heatmapen viser hvor du har vært denne sesongen.</Text>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            {heatmap && heatmap.length > 0 && <Map\n                                stores={this.props.stores}\n                                mapId={heatmap.length}\n                                heatmap={heatmap}\n                                minZoom={2}\n                                height={600}\n                            />}\n                        </div>\n\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-5 mt-5 border-top'>\n                            <h5 class='mt-5'><Text id='teams.recalculate-title'>Recalculate fitness, form and fatigue</Text></h5>\n                            <Text id='teams.recalculate-help'>\n                                Click the button below if you want to recalculate the fitness, form and fatigue data for your team and all dogs in this team.<br />\n                                Please don't overuse this function. If the calculations is not changed after 1 try, \n                                then it's not going to change the next time either.<br />\n                                <br />\n                                Calculations can take up to 1 hour, so please be patitient.\n                            </Text>\n\n                            <button class={`btn btn-block btn-warning mt-2 float-left ${recalculated ? 'disabled': ''}`}\n                                style='font-size: 0.8em;'\n                                onClick={this.reCalculateFitness}\n                            >\n                                <i class='fas fa-sync' /> <Text id='teams.recalculate'>Recalculate fitness, form and fatigue</Text>\n                            </button><br />\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-5 border-top'>\n                            <h5 class='mt-5'><Text id='teams.delete-title'>Delete team</Text></h5>\n                            <Text id='teams.delete-help'>\n                                Click the button below to delete this team. All data related to this team will be lost. All team statistics will also be affected.<br />\n                                <br />\n                                It's important to remember that you need to have at lease one team in the app, even if you only have one dog.\n                            </Text>\n                            <button class='btn btn-block btn-sm btn-danger mt-2 float-right'\n                                onClick={this.deleteTeam}\n                            >\n                                <i class='fas fa-trash' /> <Text id='teams.delete'>Delete</Text> {team.name}\n                            </button>\n                        </div>\n\n                    </div>\n                </>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TeamsDetail;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass PremiumBadge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        return (\n            <span class='badge badge-pill badge-warning float-right'><i class='fas fa-award mr-2' /> <Text id='premium.title'>Premium</Text></span>\n\n        );\n    }\n}\n\nexport default PremiumBadge;\n"],"sourceRoot":""}