{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/workout/commentAdd.js","webpack:///./components/workout/commentReply.js","webpack:///./components/data/distance.js","webpack:///./components/style.css","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js","webpack:///./components/workout/comments.js","webpack:///./components/feedback/views.js"],"names":["initialState","DisplayLikesAndComments","observer","props","toggleLikes","setState","showLikesList","state","displayTeam","e","teamId","preventDefault","stopPropagation","stores","appState","openDrawer","height","openInbox","fromuser","render","this","storyStore","teamStore","workoutStore","raceStore","likes","comments","type","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","public","mu","getImage","team","priority","displayNameShort","name","displayName","href","uuidv4","title","id","fields","total","image","shortname","Component","WorkoutAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentWorkout","response","callback","inputRefObject","workout","comment","showAddImage","status","body","images","resizeTextarea","addImage","addImages","push","value","handleImageErrored","target","onerror","setTimeout","src","Date","inputRef","col","offset","showAvatar","extraClass","userStore","firstname","ucfirst","lastname","email","userImage","undefined","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","ref","data-id","disabled","img","onError","removeImage","data-name","object","updateField","before","after","autoOpen","WorkoutCommentReply","commentId","commentReplyWorkout","displayDistance","distance","format","Distance","smallUnit","settings","imperial","kmToMiles","module","exports","Temperature","celciusToFahrenheit","Weight","kgToPounds","Elevation","meterToFeet","Speed","kmtToMph","showAddComment","showAllComments","showAllReplies","viewImageIdx","WorkoutComments","likeComment","parentElement","dataset","likeWorkoutComment","likeReply","replyId","likeWorkoutCommentReply","replyComment","focus","toggleComments","toggleReplies","viewImage","closest","idx","translate","showOriginal","translatedText","key","commentid","replyid","translateCommentReply","translateComment","max_comments","compact","currentUser","isAdmin","language","filteredComments","totalComments","diplayedComments","Math","max","reverse","hasLikedComment","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","loading","s3LargeLink","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","formatted_address","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-comment","data-replyid","more","c","toggleViews","isTeamAdmin","showViewList","views","onTeamClick","viewUsersArrays","Object","entries","statistics","forEach","weekObject","viewUsers","flat","userId"],"mappings":"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","file":"4.chunk.2a075.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\nconst MAX_USERS_TO_DISPLAY = 1;\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <small>\n                                <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                            </small>\n                        </span>\n                        {likes.slice(0, MAX_USERS_TO_DISPLAY).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            const name = mu.displayName(user);\n                            return (<>\n                                <span class='font-weight-normal'>\n                                    <small>\n                                        {publicTeam ? <>\n                                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => this.displayTeam(e, publicTeam.uuidv4)}>\n                                                {name}\n                                            </a>\n                                        </> : <>\n                                            {name}\n                                        </>}\n                                    </small>\n                                </span>\n                            </>);\n                            // return (<>\n                            //     {publicTeam ? <>\n                            //         <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                            //             <div\n                            //                 class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //                 style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                            //             >\n                            //                 {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //             </div>\n                            //         </a>\n                            //     </> : <>\n                            //         <div\n                            //             class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //             style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            //         >\n                            //             {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //         </div>\n                            //     </>}\n                            // </>);\n                        })}\n                        {likes.length > MAX_USERS_TO_DISPLAY && <>\n                            <span class='text-muted font-weight-normal ml-2' onClick={this.toggleLikes}>\n                                <small>\n                                    <Text id='likes-comments.and' fields={{ total: likes.length - MAX_USERS_TO_DISPLAY }}>and {likes.length - MAX_USERS_TO_DISPLAY} others.</Text>\n                                </small>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <small>\n                        <i class='fas fa-comment text-primary' /> {comments.length}\n                    </small>\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-normal mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => this.displayTeam(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                <small>\n                                    {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                <small>\n                                    {name}\n                                </small>\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n    \n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentWorkout({ id: workout.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[workout.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ workout, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, col = 12, offset = 0, showAvatar = true, extraClass = '', workout } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class={`col-${col} offset-${offset} ${extraClass}`}>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    {showAvatar && <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>}\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={workout.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {comment.images && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' />  <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentReplyWorkout({ id: workout.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ workout, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WorkoutCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport WorkoutReplyComment from '../../components/workout/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n};\n\nconst MAX_COMMENTS = 1;\n\n@observer\nclass WorkoutComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutComment({ id: workout.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', workout, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutCommentReply({ id: workout.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', workout, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { workout } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await teamStore.translateCommentReply({ commentid, replyid, object: workout, user });\n        } else {\n            translatedText[key] = await teamStore.translateComment({ commentid, object: workout, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { workout, callback = () => {}, col = 12, offset = 0, compact = false } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (workout.comments) {\n            totalComments = workout.comments.length;\n            if (showAllComments) {\n                filteredComments = workout.comments;\n            } else {\n                // filteredComments = workout.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = workout.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {/* {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>} */}\n                {workout && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                   const translation = teamStore.getCommentTranslations({\n                        object: workout,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                </h5>\n\n                                                {teams && teams.length > 0 && <div class='mb-2'>\n                                                    <small class='font-weight-lighter text-muted'>\n                                                        {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                            <a href={`/teams/public/${t.uuidv4}`} class='mr-2'><i class='fas fa-users text-muted' /> {t.name}</a>\n                                                        </>)}\n                                                    </small>\n                                                </div>}\n\n                                                <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                            </span>\n                                        </div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row'>\n                                                <div\n                                                    class={`col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 30vh;`}                                                    \n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                        {isAdmin && currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                            <span class='ml-2 text-muted'>\n                                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                            </span>\n                                        </>}\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    const replyTranslation = teamStore.getCommentReplyTranslations({\n                                        object: workout,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                                {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                                    <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                                </> : <>\n                                                                    {displayName}\n                                                                </>}\n                                                            </h5>\n\n                                                            {teams && teams.length > 0 && <div class='mb-2'>\n                                                                <small class='font-weight-lighter text-muted'>\n                                                                    {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                                        <a href={`/teams/public/${t.uuidv4}`} class='mr-2'>\n                                                                            <i class='fas fa-users text-muted' /> {t.name}\n                                                                        </a>\n                                                                    </>)}\n                                                                </small>\n                                                            </div>}\n\n                                                            <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <WorkoutReplyComment stores={this.props.stores} workout={workout}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-end mb-2'>\n                <span class='ml-2 text-muted font-weight-normal'\n                    onClick={this.toggleViews}\n                >\n                    <small>\n                        {views} <Text id='story.views'>views</Text>\n                    </small>\n                </span>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-normal mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                    >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                <small>\n                                    {name} <span class='font-weight-normal'>- {publicTeam.name}</span>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                <small>\n                                    {name}\n                                </small>\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n"],"sourceRoot":""}