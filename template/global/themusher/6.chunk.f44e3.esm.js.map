{"version":3,"sources":["webpack:///./components/dog/dogs.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["placeholder","id","name","getPlaceholder","newPlaceholder","unique","Date","getTime","util","randomPassword","List","Component","render","provided","snapshot","innerRef","children","className","this","props","class","droppableProps","ref","style","isDraggingOver","borderStyle","width","Dog","removeThisPlaceholder","removePlaceholder","idx","list","dog","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","background","maxWidth","height","onClick","image","s3ThumbLink","ucfirst","shortname","initialState","filterby","get","Dogs","observer","constructor","super","toggleDog","async","e","target","closest","dataset","dogId","parseInt","object","type","elementtype","field","updateField","isNew","showPositions","value","toJS","indexOf","action","splice","push","skipTimer","singleValue","setState","filterText","dndDogs","findAllDogsInTeams","dogStore","stores","dogs","currentTeam","selectedTeams","teams","currentTeamId","filter","team","some","r","map","addAllDogsInTeam","allDogsInTeam","dogFilter","allDogs","filterLeft","find","a","dogsRight","filterRight","dogsLeft","defaultDogsRight","n","Math","ceil","length","defaultDogsLeft","idxLeft","findIndex","idxRight","dogPositionUpdated","updateDogPositions","addPlaceholderLeft","state","addPlaceholderRight","clearAllDogs","resetDogPositions","toggleSearchField","showSearchField","getList","onDragEnd","result","source","destination","droppableId","items","startIndex","endIndex","Array","from","removed","reorder","index","droppableSource","droppableDestination","sourceClone","destClone","move","datatype","clearDogPositions","changeFilter","set","loadDog","getFilteredDogs","match","RegExp","getNestedValue","filteredDogs","load","query","deceased","addData","componentWillReceiveProps","nextProps","componentDidMount","userStore","user","language","saved","title","icon","help","teamNames","findTeam","for","onInput","linkState","selected","fields","total","isArray","dogStatus","findDogstatus","status","dogPosition","findDogposition","position","dogHistoryStatuses","findHistoryStatuses","data-id","format","findHarness","harness","birth","age","gender","specialNeeds","v","isoDate","endDate","key","draggableId","Images","handleAddImage","file","addToImages","images","files","uploadStatus","before","after","autoOpen","apiUrl","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","setTimeout","click","componentWillUnmount","removeEventListener","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","c","Object","keys","isImage","src","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax"],"mappings":"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","file":"6.chunk.f44e3.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst placeholder = {\n    id: 0,\n    name: 'empty',\n};\n\nconst getPlaceholder = () => {\n    const newPlaceholder = { ...placeholder };\n    newPlaceholder.unique= `${new Date().getTime()}-${util.randomPassword()}`;\n    return newPlaceholder;\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    // padding: grid * 2,\n    // margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"#808080\" : \"\",\n    maxWidth: 92,\n    height: 100,\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    borderStyle: isDraggingOver ? \"dashed\" : \"\",\n    // background: isDraggingOver ? \"#a0a0a0\" : \"\",\n    // padding: grid,\n    width: 110,\n});\n\nclass List extends Component {\n  render() {\n    const { provided, snapshot, innerRef, children, className } = this.props;\n    return (\n        <div class={`h-100 border ${className}`} {...provided.droppableProps} ref={innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n        >\n            {children}\n        </div>\n    );\n  }\n}\n\n\nclass Dog extends Component {\n    removeThisPlaceholder = () => {\n        const { removePlaceholder = () => {}, idx, list } = this.props;\n        removePlaceholder({ idx, list });\n    }\n\n    render() {\n        const { provided, snapshot, innerRef, dog } = this.props;\n        return (\n            <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={innerRef}\n                class='mx-2 my-2 p-2'\n                style={getItemStyle(\n                    snapshot.isDragging,\n                    provided.draggableProps.style\n                )}\n            >\n                {dog.id === 0 ? (\n                    <>\n                        <div>\n                            <div class={`text-center border rounded-circle imageRounded text-muted pt-2`}>\n                                <span class='font-weight-lighter' style='font-size: 35px;'>&nbsp;</span>\n                            </div>\n                            <div class='text-center'>\n                                <button class='btn btn-sm btn-link float-right p-0' onClick={this.removeThisPlaceholder}>\n                                    <i class='fas fa-trash-alt' />\n                                </button>\n                                &nbsp;\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div>\n                            <div class={`text-center border rounded-circle imageRounded text-muted pt-2`} style={`${dog.image ? `background-image: url(\"${dog.image.s3ThumbLink}\");` : ''}`}>\n                                {/* {!dog.image && <i class='fas fa-dog' style='font-size: 20px;' />} */}\n                                {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                            </div>\n                            <div class='text-center'>\n                                <small>\n                                    {dog.shortname || dog.name}<br />\n                                </small>\n\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\n\nconst initialState = {\n    filterby: util.get('dogs-filter'),\n};\n\n@observer\nclass Dogs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dogsLeft: [],\n            dogsRight: [],\n            ...initialState,\n        };\n    }\n\n    toggleDog = async (e) => {\n        const { id } = e.target.closest('#dogContainer').dataset;\n        const dogId = parseInt(id, 10);\n        const { object, type, elementtype, field, updateField, isNew, showPositions } = this.props;\n        const value = toJS(object[field]) || [];\n        const idx = value.indexOf(dogId);\n        let action;\n        if (idx > -1) {\n            value.splice(idx, 1);\n            action = 'remove';\n        } else {\n            value.push(dogId);\n            action = 'add';\n        }\n        await updateField({ id: object.id, field, value, type, elementtype, isNew, skipTimer: true, singleValue: dogId });\n        this.setState({\n            filterText: '',\n        });\n        if (showPositions) {\n            this.dndDogs({ dogId, action });\n        }\n    }\n\n    findAllDogsInTeams = () => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object, currentTeam = {} } = this.props;\n        const selectedTeams = toJS(object.teams || []);\n        const currentTeamId = currentTeam.id;\n        const filter = (e) => {\n            if (e.team === currentTeamId || (e.teams && e.teams.indexOf(currentTeamId) > -1)) {\n                return true;\n            }\n            if (selectedTeams.indexOf(e.team) > -1) {\n                return true;\n            }\n            if (e.teams) {\n                return e.teams.some(r => selectedTeams.indexOf(r) >= 0);\n            }\n            return false;\n        };\n        const allDogsInTeam = dogs.filter(filter).map(e => e.id);\n        return allDogsInTeam;\n    }\n\n    addAllDogsInTeam = async () => {\n        const { object, type, elementtype, field, updateField, isNew } = this.props;\n        const allDogsInTeam = this.findAllDogsInTeams();\n        await updateField({ id: object.id, field, value: allDogsInTeam, type, elementtype, isNew, skipTimer: true });\n    }\n\n    // toggleFilter = () => {\n    //     const { showAll } = this.state;\n    //     this.setState({\n    //         showAll: showAll ? 0 : 1,\n    //     });\n    //     this.loadDog();\n    // }\n\n    // toggleSelectedFilter = () => {\n    //     const { showOnlySelected } = this.state;\n    //     this.setState({\n    //         showOnlySelected: showOnlySelected ? 0 : 1,\n    //     });\n    // }\n\n    dndDogs = ({ dogId, action }) => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object } = this.props;\n        const dogFilter = object.dogs ? (e) => object.dogs.indexOf(e.id) > -1 : () => false;\n        const allDogs = toJS(dogs);\n        const filterLeft = (dogId) => dogId === 0 || (allDogs.find(a => a.id === dogId) && object.dogsRight.indexOf(dogId) === -1);\n        const filterRight = (dogId) => dogId === 0 || (allDogs.find(a => a.id === dogId) && object.dogsLeft.indexOf(dogId) === -1);\n\n        const defaultDogsRight = allDogs.filter(dogFilter);\n        const n = Math.ceil(defaultDogsRight.length / 2);\n        const defaultDogsLeft = defaultDogsRight.splice(0, n);\n\n        let dogsLeft = [];\n        if (object.dogsLeft && object.dogsLeft.length > 0) {\n            dogsLeft = object.dogsLeft.filter(filterLeft)\n                .map((dogId) => {\n                    const dog = allDogs.find(e => e.id === dogId) || getPlaceholder();\n                    // console.log('dogId', dogId, dog);\n                    return dog;\n                });\n        }\n\n        let dogsRight = [];\n        if (object.dogsRight && object.dogsRight.length > 0) {\n            dogsRight = object.dogsRight.filter(filterRight)\n                .map((dogId) => {\n                    const dog = allDogs.find(e => e.id === dogId) || getPlaceholder();\n                    // console.log('dogId', dogId, dog);\n                    return dog;\n                });\n        }\n\n\n        if (action === 'add') {\n            const dog = dogs.find(e => e.id === dogId);\n            if (dog) {\n                if (dogsLeft.length > dogsRight.length) {\n                    dogsRight.push(dog);\n                } else {\n                    dogsLeft.push(dog);\n                }\n            }\n        }\n        if (action === 'remove') {\n            const idxLeft = dogsLeft.findIndex(e => e.id === dogId);\n            if (idxLeft > -1) {\n                dogsLeft.splice(idxLeft, 1);\n            }\n            const idxRight = dogsRight.findIndex(e => e.id === dogId);\n            if (idxRight > -1) {\n                dogsRight.splice(idxRight, 1);\n            }\n        }\n        // I owe Mariska Kleintjens a beer for this one: \n        if (dogsLeft.length === 0 && dogsRight.length === 0) {\n            dogsLeft = defaultDogsLeft;\n            dogsRight = defaultDogsRight;\n        }\n        if (action) {\n            this.setState({\n                dogsLeft,\n                dogsRight,\n                dogPositionUpdated: true,\n            }, () => this.updateDogPositions());\n            \n        } else {\n            this.setState({\n                dogsLeft,\n                dogsRight,\n            });\n        }\n    }\n\n    addPlaceholderLeft = () => {\n        const { dogsLeft = [] } = this.state;\n        dogsLeft.push(getPlaceholder());\n        this.setState({\n            dogsLeft,\n            dogPositionUpdated: true,\n        });\n    }\n\n    addPlaceholderRight = () => {\n        const { dogsRight = [] } = this.state;\n        dogsRight.push(getPlaceholder());\n        this.setState({\n            dogsRight,\n            dogPositionUpdated: true,\n        });\n    }\n\n    removePlaceholder = ({ idx, list }) => {\n        if (list === 'dogsLeft') {\n            const { dogsLeft = [] } = this.state;\n            dogsLeft.splice(idx, 1);\n            this.setState({\n                dogsLeft,\n                dogPositionUpdated: true,\n            });\n        }\n        if (list === 'dogsRight') {\n            const { dogsRight = [] } = this.state;\n            dogsRight.splice(idx, 1);\n            this.setState({\n                dogsRight,\n                dogPositionUpdated: true,\n            });\n        }\n    }\n\n    async loadDog(props = this.props) {\n        const { showPositions } = this.props;\n\t\tconst { dogStore } = props.stores;\n        await dogStore.load({ query: { deceased: 0 }, addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n\n        if (showPositions) {\n            this.dndDogs({});\n        }\n        this.getFilteredDogs();\n    }\n\n    clearAllDogs = async () => {\n        const { object, type, elementtype, field, updateField, isNew } = this.props;\n        await updateField({ id: object.id, field, value: [], type, elementtype, isNew, skipTimer: true });\n        this.resetDogPositions();\n    }\n    \n    toggleSearchField = () => {\n        const { showSearchField } = this.state;\n        this.setState({\n            showSearchField: showSearchField ? null : 1,\n        });\n    }\n\n    getList = id => this.state[id];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n            this.setState({\n                [source.droppableId]: items,\n                dogPositionUpdated: true,\n            });\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                dogsLeft: result.dogsLeft,\n                dogsRight: result.dogsRight,\n                dogPositionUpdated: true,\n            });\n        }\n    }\n\n    updateDogPositions = async () => {\n        const { dogsLeft = [], dogsRight = [] } = this.state;\n        const { object, updateField, isNew } = this.props;\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft.map(e => e.id), isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight.map(e => e.id), isNew, datatype: 'array' });\n        this.setState({ dogPositionUpdated: false });\n    }\n\n    resetDogPositions = async () => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object, updateField, isNew } = this.props;\n        const dogFilter = (e) => object.dogs.indexOf(e.id) > -1;\n        const allDogs = toJS(dogs);\n\n        const dogsRight = allDogs.filter(dogFilter);\n        const n = Math.ceil(dogsRight.length / 2);\n        const dogsLeft = dogsRight.splice(0, n);\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft.map(e => e.id), isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight.map(e => e.id), isNew, datatype: 'array' });\n        this.setState({\n            dogsLeft,\n            dogsRight,\n            dogPositionUpdated: false,\n        });\n    }\n\n    clearDogPositions = async () => {\n        const { object, updateField, isNew } = this.props;\n        const dogsRight = [];\n        const dogsLeft = [];\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft, isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight, isNew, datatype: 'array' });\n        this.setState({\n            dogsLeft,\n            dogsRight,\n            dogPositionUpdated: false,\n        });\n    }\n\n    changeFilter = (e) => {\n\t\tconst value = e.target.value;\n\t\tthis.setState({\n\t\t\tfilterby: value,\n\t\t});\n        util.set('dogs-filter', value);\n        this.loadDog();\n\t}\n\n    getFilteredDogs = (props = this.props) => {\n        const { filterby, filterText } = this.state;\n        const { object, filter = () => true } = props;\n        const { dogStore } = this.props.stores;\n\t\tconst { dogs = [] } = dogStore;\n\n        let dogFilter = filter;\n        if (object.dogs) {\n            switch (filterby) {\n                case 'all':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = () => true;\n                    }\n                    break;\n                case 'onlySelected':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = (e) => object.dogs.indexOf(e.id) > -1;\n                    }\n                    break;\n                case 'onlyTeam':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = (e) => object.team === e.team || object.dogs.indexOf(e.id) > -1;\n                    }\n                    break;        \n                case 'leadOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.lead.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'pointOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.point.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'teamOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.team.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'wheelOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.wheel.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n            }\n        }\n        let filteredDogs = dogs.filter(dogFilter);\n        this.setState({\n            filteredDogs,\n        })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.filter !== this.props.filter) {\n            this.getFilteredDogs(nextProps);\n        }\n    }\n\n    componentDidMount() {\n        this.loadDog();\n    }\n\n    render() {\n        const { filterby, filterText, showSearchField, dogsLeft = [], dogsRight = [], dogPositionUpdated, filteredDogs = [] } = this.state;\n        const { userStore, dogStore } = this.props.stores;\n\t\tconst { dogs = [] } = dogStore;\n        const { isAdmin, user } = userStore;\n        const { language = 'en' } = user;\n\n        const { saved = {}, object, field, title, icon, help, showPositions = false, currentTeam = {} } = this.props;\n        const value = toJS(object[field]) || [];\n\n        const allDogsInTeam = this.findAllDogsInTeams();\n        const teamNames = object.teams ? object.teams.map(e => userStore.findTeam(e)) : [];\n\n        return (\n            <div class={`form-group  mb-5 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <span class='float-right' onClick={this.toggleSearchField}>\n                    <i class='fas fa-search' />\n                </span>\n                <button class='btn btn-sm btn-link float-right mr-5' onClick={this.clearAllDogs}>\n                    <i class='fas fa-eraser' /> <Text id='dog.dogs.remove-all-dogs'>Fjern alle hundene</Text>\n                </button>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                <div class='container-fluid px-0'>\n                    {showSearchField && <div class='row'>\n                        <div class='col-12'>\n                            <Localizer>\n                                <input\n                                    class='form-control form-control-sm'\n                                    type='text'\n                                    placeholder={<Text id='dog.dogs.search-for-dogs'>Søk etter hund</Text>}\n                                    value={filterText}\n                                    onInput={linkState(this, 'filterText')}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>}\n                    <div class='row'>\n                        <div class='col-12'>\n                            <div class='form-row align-items-center'>\n                                <div class='col-auto my-2 mx-auto'>\n                                    <select class='custom-select'\n                                        style='background-color: inherit; border: none; padding-top: 0; padding-bottom: 0; height: 1.4em; font-size: 0.8em;'\n                                        onInput={this.changeFilter}\n                                    >\n                                        <option value='' selected={!filterby}>-- <Text id='dog.dogs.choose-filter'>Choose filter</Text> ---</option>\n                                        <option value='all' selected={filterby === 'all'}><Text id='dog.dogs.show-all'>Vis alle</Text></option>\n                                        <option value='onlySelected' selected={filterby === 'onlySelected'}><Text id='dog.dogs.show-only-selected'>Vis kun valgte</Text></option>\n                                        <option value='onlyTeam' selected={filterby === 'onlyTeam'}><Text id='dog.dogs.show-only-team-dogs'>Vis kun hundene i teamet</Text></option>\n                                        <option value='leadOnly' selected={filterby === 'leadOnly'}><Text id='dog.dogs.show-lead-dogs-only'>Vis kun lederhunder</Text></option>\n                                        <option value='pointOnly' selected={filterby === 'pointOnly'}><Text id='dog.dogs.show-point-dogs-only'>Vis kun pointhunder</Text></option>\n                                        <option value='teamOnly' selected={filterby === 'teamOnly'}><Text id='dog.dogs.show-team-dogs-only'>Vis kun teamhunder</Text></option>\n                                        <option value='wheelOnly' selected={filterby === 'wheelOnly'}><Text id='dog.dogs.show-wheel-dogs-only'>Vis kun wheelhunder</Text></option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='row'>\n                        {allDogsInTeam.length > 0 && <>\n                            <button class='btn btn-primary btn-block'\n                                onClick={this.addAllDogsInTeam}\n                            >\n                               <i class='fas fa-plus mr-2' /> <Text id='dog.dogs.add-all-in-team' fields={{ total: allDogsInTeam.length }}>Add all dogs in team</Text>{currentTeam.name ? `: ${currentTeam.name}` : ''}\n                               {teamNames && teamNames.length > 0 && <span class='font-weight-lighter'>\n                                    , {teamNames.map((name, idx) => <>{idx > 0 ? ', ' : ''}{name}</>)}\n                                </span>}\n                            </button>\n                        </>}\n\n                        {util.isArray(dogs) && filteredDogs.map(dog => {\n                            const dogStatus = userStore.findDogstatus({ status: dog.status, language });\n                            const dogPosition = userStore.findDogposition({ position: dog.position, language });\n                            const dogHistoryStatuses = dogStore.findHistoryStatuses(dog.id);\n                            return (\n                                <div class='col-6 col-sm-6 col-md-6 col-lg-6 mb-1'>\n                                    <div class={`border rounded px-3 pt-2 pb-1 ${value.indexOf(dog.id) > -1 ? 'bg-success' : ''} position-relative`}\n                                        onClick={this.toggleDog}\n                                        id='dogContainer'\n                                        data-id={dog.id}\n                                        style='padding: .3rem !important; line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                    >\n                                        {dogPosition && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-${dogPosition.class || 'primary'} mr-3`}>{dogPosition.icon && <i class={dogPosition.icon} />} {dogPosition.name}</span>\n                                        </small>}\n\n                                        {filterby === 'leadOnly' && util.getNestedValue(dog, 'positions.lead.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-lead'>Lead</Text>: {util.format(util.getNestedValue(dog, 'positions.lead.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'pointOnly' && util.getNestedValue(dog, 'positions.point.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-point'>Point</Text>: {util.format(util.getNestedValue(dog, 'positions.point.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'teamOnly' && util.getNestedValue(dog, 'positions.team.distanceKm')> 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-team'>Team</Text>: {util.format(util.getNestedValue(dog, 'positions.team.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'wheelOnly' && util.getNestedValue(dog, 'positions.wheel.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-wheel'>Wheel</Text>: {util.format(util.getNestedValue(dog, 'positions.wheel.distanceKm'), 0)}km</span>\n                                        </small>}\n\n                                        <div class='d-flex'>\n                                            <div class={`text-center border rounded-circle imageRounded imageRoundedSmall text-muted pt-2`} style={`${dog.image ? `background-image: url(\"${dog.image.s3ThumbLink}\");` : ''}`}>\n                                                {/* {!dog.image && <i class='fas fa-dog' style='font-size: 20px;' />} */}\n                                                {!dog.image && <span class='font-weight-lighter' style='font-size: 20px;'>{util.ucfirst(dog.name, true)}</span>}\n                                            </div>\n                                            <div class='flex-grow-1 pl-2 pr-1'\n                                                style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 0.9em;`}\n                                            >\n                                                <small>\n                                                    <small class='float-right'>\n                                                        {dog.birth && <span class='mr-1'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                                    </small>\n                                                    {dog.shortname || dog.name}<br />\n                                                    <div style='line-height: 0.8em;'><small>{userStore.findTeam(dog.team)}</small></div>\n                                                </small>\n                                                <small class='float-right'>\n                                                    {dogStatus && dogStatus.id && <span class={`badge badge-${dogStatus.class} mr-2 font-weight-light`}>{dogStatus.icon && <i class={dogStatus.icon} />} {dogStatus.name}</span>}\n                                                    {dog.specialNeeds && <span class={`badge badge-warning mr-2 font-weight-light`}><i class='fas fa-exclamation-triangle' /> {dog.specialNeeds}</span>}\n                                                    {dogHistoryStatuses && dogHistoryStatuses.map(v => (\n                                                        <span class={`badge badge-warning mr-2`} title={util.isoDate(v.endDate, false, false, true)}>{v.title}</span>\n                                                    ))}\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dog.dogs.saved-changes'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n\n\n                {showPositions && <>\n                    <div class='container-fluid px-0 clearfix'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='dog.dogs.dogs-positions'>Posisjoner i spannet</Text></h5>\n                            </div>\n                        </div>\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <div class='row'>\n                                <div class='col-6 pr-0' style='min-height: 100px;'>\n                                    <Droppable droppableId=\"dogsLeft\">\n                                        {(provided, snapshot) => (\n                                            <List provided={provided} snapshot={snapshot} innerRef={provided.innerRef} className='ml-auto'>\n                                                {dogsLeft && dogsLeft.map((dog, idx) =>\n                                                    <Draggable key={`${dog.id}-${dog.unique}`} draggableId={`dragId-${dog.id}-${dog.unique}`} index={idx}>\n                                                        {provided => (\n                                                            <Dog provided={provided} snapshot={snapshot} innerRef={provided.innerRef} dog={dog} removePlaceholder={this.removePlaceholder} idx={idx} list='dogsLeft' />\n                                                        )}\n                                                    </Draggable>\n                                                )}\n                                                {provided.placeholder}\n                                            </List>\n                                        )}\n                                    </Droppable>\n                                </div>\n                                <div class='col-6 pl-0' style='min-height: 100px;'>\n                                    <Droppable droppableId=\"dogsRight\">\n                                        {(provided, snapshot) => (\n                                            <List provided={provided} snapshot={snapshot} innerRef={provided.innerRef} className='mr-auto'>\n                                                {dogsRight && dogsRight.map((dog, idx) =>\n                                                    <Draggable key={`${dog.id}-${dog.unique}`} draggableId={`dragId-${dog.id}-${dog.unique}`} index={idx}>\n                                                        {provided => (\n                                                            <Dog provided={provided} snapshot={snapshot} innerRef={provided.innerRef} dog={dog} removePlaceholder={this.removePlaceholder} idx={idx} list='dogsRight' />\n                                                        )}\n                                                    </Draggable>\n                                                )}\n                                                {provided.placeholder}\n                                            </List>\n                                        )}\n                                    </Droppable>\n                                </div>\n                            </div>\n                        </DragDropContext>\n                        <div class='row mb-3 mt-2'>\n                            <div class='col-6 pr-0'>\n                                <button class='btn btn-sm btn-outline-secondary' onClick={this.addPlaceholderLeft}>\n                                    <i class='fas fa-plus-circle' /> <Text id='dog.dogs.addplaceholder'>Add placeholder</Text>\n                                </button>\n                            </div>\n                            <div class='col-6 pl-0'>\n                                <button class='float-right btn btn-sm btn-outline-secondary' onClick={this.addPlaceholderRight}>\n                                    <i class='fas fa-plus-circle' /> <Text id='dog.dogs.addplaceholder'>Add placeholder</Text>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='container-fluid px-0'>\n                        <div class='row'>\n                            <div class='col-6'>\n                                <button class={`btn btn-sm btn-${dogPositionUpdated ? 'primary' : 'secondary'}`} onClick={this.updateDogPositions}>\n                                    <i class='fas fa-save' /> <Text id='dog.dogs.saveDogPositions'>Save dog positions</Text>\n                                </button>\n                            </div>\n                            <div class='col-6'>\n                                <button class={`float-right btn btn-sm btn-warning`} onClick={this.resetDogPositions}>\n                                    <i class='fas fa-sync' /> <Text id='dog.dogs.resetDogPositions'>Reset dog positions</Text>\n                                </button>\n                            </div>\n                        </div>\n                        <div class='row mt-2'>\n                            <div class='col-6'>\n                                &nbsp;\n                            </div>\n                            <div class='col-6'>\n                                <button class={`float-right btn btn-sm btn-link`} onClick={this.clearDogPositions}>\n                                    <i class='fas fa-eraser' /> <Text id='dog.dogs.clearDogPositions'>Clear dog positions</Text>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n\n            </div>\n        );\n    }\n}\n\nexport default Dogs;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}