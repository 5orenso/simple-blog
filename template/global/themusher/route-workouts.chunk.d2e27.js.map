{"version":3,"sources":["webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["kmToMiles","value","util","format","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","loadedTime","isLoading","offset","limit","submenu","workoutFilter","sessionid","Date","getTime","dataFields","Workouts","observer","props","loadAll","currentMonth","currentYear","state","setState","userStore","stores","messageStore","currentTeam","workoutStore","getMonth","getFullYear","month","year","Promise","all","loadWorkouts","team","loadWorkoutSummary","loadWorkoutPlans","getNotifications","getUnReadMessages","loadStravaActivities","loadGarminActivities","loadTeams","load","query","addData","setLoadMore","unsetLoadMore","workoutPlanCurrent","workoutPlanStore","imperial","user","settings","seasonYear","workoutPlans","id","prepareWeekGraphs","updateKeyValue","resetGraphPlanWeekDistanceCurrent","chooseSubmenu","e","target","parentElement","dataset","menu","chooseDay","day","dd","mm","yyyy","w","date","d","getDate","m","y","parseInt","renderContent","obj","workout","showDate","wrapperClasses","wrapperClassesRow","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","this","teamStore","skipMusherWorkoutSummary","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummary","getWorkoutSummaryDay","daysBack","componentWillMount","componentWillUnmount","clearInterval","cleanupMemory","componentDidMount","appState","checkCordova","componentWillReceiveProps","nextProps","render","percentComplete","scrolledDown","workoutPlan","workoutSummaryWeekDay","language","MONTHS","getMonths","seasonStart","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","planMonth","sumWorkoutPlanMonth","summaryMonth","findWorkoutSummaryMonth","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","callback","key","data-menu","onClick","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","smallUnit","url","section","showExtra","basehref","showNavigation","showHeader","strava","activities","garmin","name","data","wrapperClassNames","contentClassNames","dataValues","type","fields","Component","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","monthRange","prevSeasonMonths","xTicksAll","weekRange","map","wo","partSize","xTicks","i","l","push","scope"],"mappings":"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","file":"route-workouts.chunk.d2e27.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n\nimport FastList from '../../components/team/fastList';\n\nfunction kmToMiles(value) {\n    return util.format(0.621371 * value, 1);\n}\n\nconst initialState = {\n\tloadedTime: 0,\n\tisLoading: false,\n\toffset: 0,\n\tlimit: 5,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n\tsessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadAll = async (props = this.props) => {\n\t\tconst { limit, offset } = this.state;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore, messageStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n        // await userStore.getInfo();\n\t\tawait Promise.all([\n\t\t\tthis.loadWorkouts({ team: currentTeam, year, month, limit, offset }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tmessageStore.getUnReadMessages(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(props),\n\t\t]);\n\t\tthis.setState({\n\t\t\tloadedTime: new Date().getTime(),\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tloadWorkouts = ({ team, year, month, limit, offset }) => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst append = offset > 0;\n\t\tworkoutStore.load({\n\t\t\tquery: {\n\t\t\t\tteam,\n\t\t\t\tyear,\n\t\t\t\tmonth,\n\t\t\t},\n\t\t\tlimit,\n\t\t\toffset,\n\t\t\taddData: ['publicTeams', 'publicUsers'],\n\t\t}, append);\n\t}\n\n    setLoadMore = () => {\n        const { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\n        workoutStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadWorkouts({ team: currentTeam, year, month, limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { workoutStore } = this.props.stores;\n        workoutStore.setLoadMore(() => {});\n    }\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { user } = userStore;\n        const { settings = {} } = user;\n\t\tconst { imperial } = settings;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({\n\t\t\t\tquery: {\n\t\t\t\t\tteam: currentTeam,\n\t\t\t\t\tseasonYear: seasonStart,\n\t\t\t\t},\n\t\t\t\taddData: ['tips'],\n\t\t\t});\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year, imperial });\n\t\t\t} else {\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlan', {});\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlans', []);\n\t\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\trenderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        return (<>\n\t\t\t<Workout\n\t\t\t\tstores={this.props.stores}\n\t\t\t\tworkout={obj}\n\t\t\t\tshowDate={true}\n\t\t\t\twrapperClasses={'w-100'}\n\t\t\t\twrapperClassesRow={''}\n\t\t\t/>\n        </>);\n    }\n\n\t// Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { workoutStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => workoutStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n\tcomponentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentWillUnmount() {\n        const { workoutStore, stravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n        workoutStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        this.unsetLoadMore();\n\t\tworkoutStore.cleanupMemory();\n    }\n\t// /Scroll views timer\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadAll();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t\tthis.setLoadMore();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadAll(nextProps);\n        }\n    }\n\n\trender() {\n        const { scrolledDown } = this.props;\n\t\tconst { isLoading, submenu, handleIntersection, sessionid, loadedTime } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user, workoutSummaryWeekDay = [] } = userStore;\n        const { language = 'en', settings = {} } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\t\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst { stravaActivities = [] } = stravaActivityStore;\n\t\tconst { garminActivityDetails = [] } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top' style={`margin-top: ${scrolledDown > 0 ? 0 : SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'}; transition: all 0.3s ease-in-out;`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* <xmp>\n\t\t\t\ttotalTime: {totalTime}<br />\n\t\t\t\tcordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams)}<br />\n\t\t\t\t</xmp> */}\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={currentSpeed * 3.6} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistance / 1000} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadAll} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-1'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-left rounded-none ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-right rounded-none ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={settings.imperial ? `${kmToMiles(planMonth)} mi` : `${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={settings.imperial ? `${kmToMiles(summaryMonth)} mi` : `${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={totalSpeedavgMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<WorkoutStatus\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}-${settings.imperial}`}\n\t\t\t\t\t\t\t\tshowExtra={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t{/* <WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3 text-center'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}-${loadedTime}`}\n\t\t\t\t\t\t\tshowNavigation={true}\n\t\t\t\t\t\t\tshowHeader={true}\n\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t<div class='row mt-3'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\t\t\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t{user && user.strava && <>\n\t\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activities={stravaActivities} key={`strava-${currentTeam}-${stravaActivities.length}`} />\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t{user && user.garmin && <>\n\t\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activities={garminActivityDetails} key={`garmin-${currentTeam}-${garminActivityDetails.length}`} />\n\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t{/* <Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t\t</Text> */}\n\t\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<FastList\n\t\t\t\t\t\t\t\tdata={workoutsFiltered}\n\t\t\t\t\t\t\t\twrapperClassNames={'row pb-4'}\n\t\t\t\t\t\t\t\tcontentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n\t\t\t\t\t\t\t\trenderContent={this.renderContent}\n\t\t\t\t\t\t\t\tdataFields={dataFields}\n\t\t\t\t\t\t\t\tdataValues={{ type: '11' }}\n\t\t\t\t\t\t\t\thandleIntersection={handleIntersection}\n\t\t\t\t\t\t\t\tsessionid={sessionid}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* {workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t\t))} */}\n\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>\n\t\t\t\t</>}\t\t\t\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { isLoading, year = currentYear, month = currentMonth, showHeader = true } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { user } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <div class='table-responsive-md'>\n                        <table class='table table-sm table-striped font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-center'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart - 1} - {seasonStart}</nobr></th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart} - {seasonStart + 1}</nobr></th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}