{"version":3,"sources":["webpack:///./components/public/raceTracking.js"],"names":["MARGIN_TOP","mu","marginTop","initialState","marginTopBack","marginBottom","subMenuMarginTop","isLoading","email","submenu","jwtToken","util","getJwtToken","reloadInSec","reloadIsActive","leaderboardMode","filterByraceClass","showLeaderBoard","showNews","ReloadTimer","observer","Component","constructor","props","super","initComponent","this","setState","tickReloadTimeer","reloadLastEpoch","state","now","Math","floor","Date","getTime","clearTimeout","updateTimer","tick","setTimeout","componentDidMount","componentWillUnmount","render","radius","fontSize","classNames","reloadPercent","normalizeBetween","class","key","color","showPercentText","percent","showCenterText","centerText","centerTextSize","centerTextY","Results","chooseSubmenu","e","target","closest","dataset","raceStore","userStore","stores","waypoints","raceClass","race","onMarkerClick","style","id","title","length","role","map","musher","idx","restPercent","format","restTime","raceTime","displayNameShort","onClick","rank","finishTime","currentState","getRankingColor","bib","flag","diffToFirstFinishTime","secToHms","formatDate","parseInputDate","locale","hour12","hour","minute","distanceToFinish","distanceToFirst","distanceToForward","distanceToBehind","currentAvgSpeed","speed","states","duration","height","showText","MusherInfo","toggleAdminInfo","stopPropagation","showAdminInfo","toggleInfo","showInfo","onDogClick","dogid","dogs","preventDefault","currentDog","find","uuidv4","showDog","dog","wpData","wp","findWaypointByBib","isAdmin","user","currentUser","getMusherByBibId","getMusherByBibEmail","team","getTeamById","members","m","totals","getClassByBib","getTotalsByTeamId","image","getImage","priority","fallback","image1","shortname","dotColor","hasBirthday","birth","daysUntilBirthday","ceil","daysUntilNextBirthday","inFront","behind","findNearestMushers","headerImage","imageHeader","s3XXLargeLink","topImage1","teamImages","images","i","l","push","s3SmallLink","s3LargeLink","indexOf","followers","followRequests","findIndex","firstname","lastname","sportsClub","type","data-submenu","public","name","markdown","replaceImages","description","markdownOpts","getMarkdownOptions","d","allDogs","ucfirst","findHarness","harness","age","deceased","gender","JSON","stringify","TrackingMap","handleHistoryPointIndex","historyIdx","parseInt","value","reload","historyPointIndex","timerRunning","updateWaypointPosition","abs","playHistory","replaySpeed","raceTrackerPointTimestamp","getRaceTrackerTimestamp","playingHistory","history","pauseHistory","loadLiveRaceResults","async","teamIds","focusOnMushers","bibs","classid","historySteps","replayHistory","showDrawerReplay","classInfo","getClassById","getRaceTrackerData","raceTrackerRace","startDate","endDate","getRaceTrackerActiveTeams","console","log","RELOAD_INTERVAL_IN_SEC","loadRaceResults","raceid","loadWorkoutSummary","getWorkoutSummaryActiveTeams","loadRace","appState","filterByBibs","load","getAllClassesSortedBy","selectedClassIds","allClassIds","classes","selectedClassId","setSelectedClassId","toggleSelectedClassId","allTeamIds","filter","currentClass","contestants","flat","loadTeams","join","liveRace","err","setLeaderboardMode","parentElement","mode","chooseRaceClass","toggleShowLeaderBoard","hide","toggleShowNews","closeAllDrawers","showResults","showDrawerCheckpoint","showDrawerMusher","onMusherClick","onCpMarkerClick","cpData","selectedCheckpointId","toggleDrawerMusher","toggleDrawerCheckpoint","toggleResults","selectCheckpoint","showDrawer","onTeamClick","teamid","showTeam","hideTeam","onUserClick","hideDog","setReplaySpeed","parseFloat","filterByClass","toggleReplayHistory","cleanupMemoryClass","selectedMusherBib","toggleFocusOnMusher","musherId","musherid","toggleBib","checkForEnter","maxPoints","toggleLines","showLines","width","innerWidth","innerHeight","window","getWindowDimensions","componentWillReceiveProps","nextProps","teams","language","showHeader","drawerClassNames","drawerWidth","largeMarkers","isAnimatedMarkers","linkBase","infoOnMushers","geoJSONs","zoomToMarkers","selectedClass","wpCheckpoints","checkpoints","slice","cp","position","lat","lng","showTracking","countryRegexp","currentLocationGeocode","RegExp","test","formattedCountry","back","href","resultsHide","getPillClass","data-id","waypoints2","fullscreenMap","onMarker2Click","showHeatmap","showTracks","showDistanceMarkers","groupWaypoints","getMusherById","data-musherid","mapCredits","onCloseClick","min","max","onInput","data-speed","onClickNav","countryRegexpMessage"],"mappings":"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","file":"12.chunk.fe1c5.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Trackmap from '../../components/public/trackmap';\nimport Gauge from '../../components/gauge';\n\nimport DogScroller from '../../components/dog/scroller';\nimport ImageScroller from '../imageScroller';\n\nimport Overlay from '../../components/overlay/';\nimport Drawer from '../../components/drawer/';\nimport HeaderCustom from '../../components/header/custom';\nimport Loading from '../../components/loading/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\nimport LineGraph from '../../components/lineGraph';\nimport States from '../../components/states';\nimport PublicTeam from '../team/public';\nimport RaceTrackingMusherDetail from './raceTrackingMusherDetail';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nfunction PageTitle(title, classes = '', style = '') {\n    useEffect(() => {\n        document.title = `Homerun Race: ${title}`;\n    }, [title]);\n    return <span class={classes} style={style}>{title}</span>;\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\nconst initialState = {\n    isLoading: false,\n    email: '',\n    submenu: 'ads',\n    jwtToken: util.getJwtToken(),\n\n    reloadInSec: null,\n    reloadIsActive: false,\n\n    leaderboardMode: 'mushers',\n    filterByraceClass: '',\n    showLeaderBoard: true,\n    showNews: true,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\nconst REPLAY_SPEED = 1;\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    initComponent = () => {\n        this.setState({\n            reloadIsActive: true,\n        }, () => this.tickReloadTimeer());\n    }\n\n    tickReloadTimeer = () => {\n        const { reloadLastEpoch } = this.props;\n        const { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n            const now = Math.floor(new Date().getTime() / 1000);\n            const reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n            this.setState({ reloadInSec });\n            clearTimeout(this.updateTimer.tick);\n            this.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n        return false;\n    }\n\n    componentDidMount() {\n        this.initComponent();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    render() {\n        const { reloadInSec } = this.state;\n        const { radius = 13, fontSize = 11, classNames = '' } = this.props;\n        const reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n        return (<>\n            <span class={classNames}>\n                <Gauge key={`gauge-reload-page`}\n                    color='primary'\n                    radius={radius}\n                    showPercentText={false}\n                    percent={reloadPercent}\n                    showCenterText={true}\n                    centerText={reloadInSec}\n                    centerTextSize={fontSize}\n                    centerTextY={'55%'}\n                />\n            </span>\n        </>);\n    }\n}\n\n@observer\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { submenu = 'details' } = this.state;\n        const { isAdmin } = userStore;\n\n        const { waypoints } = raceStore;\n        const { raceClass = {}, race = {}, onMarkerClick = () => {} } = this.props;\n\n        return (<>\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em;'><Text id='races.gps-ranking'>GPS Ranking</Text>: {race.title} - {raceClass.title}</span>\n            </div>\n\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 60vh;'\n            >\n                {!waypoints || waypoints.length === 0 && <>\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-dog' /></div>\n                        <div class='w-100'>\n                            <h3><Text id='races.no-teams-found'>No teams found!</Text></h3>\n                            <Text id='races.loading-teams'>Loading teams...</Text>\n                        </div>\n                        <div class='spinner-border text-primary' style='width: 3rem; height: 3rem;' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>\n                </>}\n\n                <table class='table table-sm table-striped'>\n                    {waypoints && waypoints.map((musher, idx) => {\n                        const restPercent = util.format(musher.restTime / musher.raceTime * 100, 0);\n                        const shortname = mu.displayNameShort(musher);\n\n                        return (<>\n                            <tr onClick={() => onMarkerClick(musher)}>\n                                <td style='width: 15px;' class='text-center'>{musher.rank}</td>\n                                <td>\n                                    <div class='d-flex justify-content-between align-items-start w-100'>\n                                        {/* <div\n                                            class='rounded-circle imageRounded imageRoundedSmallIcon float-left text-center'\n                                            style={`\n                                                background-image: url(\"${musher.image}\");\n                                                background-size: cover;\n                                                border: 1px ${mu.getRankingColor(musher.rank || idx + 1)} solid;\n                                                width: 30px !important;\n                                                height: 30px;\n                                                padding-top: 3px;\n                                            `}\n                                        >\n                                            {musher.image ? '' : shortname}\n                                        </div> */}\n                                        <div class='flex-grow-1'>\n                                            <div class='float-right ml-2'>\n                                                <div class='text-center'>\n                                                    <Gauge key={`gauge-reload-page`}\n                                                        color={restPercent < 40 ? (restPercent < 30 ? 'danger' : 'warning') : 'success'}\n                                                        radius={30}\n                                                        showPercentText={false}\n                                                        percent={restPercent}\n                                                        showCenterText={true}\n                                                        centerText={`${restPercent}%`}\n                                                        centerTextSize={15}\n                                                        centerTextY={'55%'}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='float-right'>\n                                                {musher.finishTime < 9999999999 ? <>\n                                                    <i class='fas fa-flag-checkered text-success' />\n                                                </> : <>\n                                                    {musher.currentState === 'rest' ? <>\n                                                        <i class='fas fa-bed text-warning' />\n                                                    </> : <>\n                                                        <i class='fas fa-running text-primary' />\n                                                    </>}\n                                                </>}\n                                            </div>\n\n                                            <span class='text-white rounded-pill-left px-2 mr-2'\n                                                style={`background-color: ${mu.getRankingColor(musher.rank || idx + 1)};`}\n                                            >\n                                                {musher.bib}\n                                            </span>\n\n                                            {musher.flag}  {musher.title}\n                                            <div>\n                                                <small>\n                                                    {musher.finishTime < 9999999999 ? <>\n                                                        {musher.diffToFirstFinishTime > 0 ? <>\n                                                            <span class='text-muted'><i class='fas fa-arrow-up' /></span> {util.secToHms(musher.diffToFirstFinishTime)}\n                                                        </> : <>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.formatDate(util.parseInputDate(musher.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </>}\n                                                        <nobr>\n                                                            <i class='fas fa-running text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </> : <>\n                                                        {/* <span class='text-muted'><i class='fas fa-compass' /></span> {mu.windDirection(musher.bearing)} */}\n                                                        {/* {util.format(musher.totalDistanceOnTrack, 1)} km */}\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.format(musher.distanceToFinish, 1)} km\n                                                        </nobr>\n                                                        {musher.distanceToFinish !== musher.distanceToFirst && musher.distanceToFirst > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted font-weight-light ml-2'>1st:</span> {util.format(musher.distanceToFirst, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToFinish !== musher.distanceToForward && musher.distanceToForward > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-up' /></span> {util.format(musher.distanceToForward, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToBehind > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-down' /></span> {util.format(musher.distanceToBehind, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        <br />\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-tachometer-alt' /></span> {util.format((musher.currentAvgSpeed ? musher.currentAvgSpeed * 3.6 : musher.speed) || 0, 1)} km/h\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-running ml-2 text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </>}\n\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class='mt-1 container-fluid'>\n                                        <States stores={this.props.stores} states={musher.states} duration={musher.raceTime} key={`state-${musher.bib}`} height={'6px'} showText={false} />\n                                    </div>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </table>\n\n                {/* waypoints: {JSON.stringify(waypoints.slice(0, 5), null, 4)}<br /> */}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass MusherInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { wpData = {}, onMarkerClick = () => {} } = this.props;\n        const wp = raceStore.findWaypointByBib(wpData.bib);\n\n        const { isAdmin } = userStore;\n        const { user: currentUser = {} } = userStore;\n\n        const musher = (wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(wpData.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = mu.getRankingColor(wp.rank);\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        // const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(wpData.bib);\n\n        const restPercent = util.format(wp.restTime / wp.raceTime * 100, 0);\n        // const runPercent = 100 - restPercent;\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n\n        const locale = 'en-GB';\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const now = Math.floor(new Date().getTime() / 1000);\n\n        return (<>\n            {behind.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {inFront.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em; height: 16vh;'>&nbsp;</span>\n            </div>\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 55vh;'\n            >\n\n                <div class='w-100 position-absolute'\n                    style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n                />\n\n                <div class='d-flex position-relative'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                    >\n                        {!image && <div class='text-muted' style='font-size: 25px; padding-top: 5px;'>{shortname}</div>}\n                        <div\n                            class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: -20px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>}\n                        </div>\n                    </div>\n                    <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.8em;'>\n                        <div class='float-right' style='font-size: 1.2em;'>\n                            {wp.finishTime < 9999999999 ? <>\n                                <i class='fas fa-flag-checkered text-success' />\n                            </> : <>\n                                {wp.currentState === 'rest' ? <>\n                                    <i class='fas fa-bed text-warning' />\n                                </> : <>\n                                    <i class='fas fa-running text-primary' />\n                                </>}\n                            </>}\n                        </div>\n                        {/* {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>} */}\n\n                        <h3 class='mb-0'>\n                            {musher.flag} {musher.firstname} {musher.lastname}\n                        </h3>\n                        <h6 class='mb-0'>{musher.sportsClub || <>&nbsp;</>}</h6>\n                    </div>\n                </div>\n\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='details'\n                        >\n                            Details\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='team'\n                        >\n                            Team\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='dogs'\n                        >\n                            Dogs\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                >\n                    {submenu === 'details' && <>\n                        <RaceTrackingMusherDetail\n                            stores={this.props.stores}\n                            wp={wp}\n                            musher={musher}\n                        />\n                    </>}\n                    {submenu === 'team' && <>\n                        {team.public > 0 ? <>\n                            <h3>{team.name}</h3>\n                            <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                            <ImageScroller stores={this.props.stores} images={teamImages} />\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                                {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                            </div>\n                        </>}\n                    </>}\n                    {submenu === 'dogs' && <>\n                        {team.public > 0 ? <>\n                            {team.dogs && <div class='w-100 container-fluid'>\n                                <div class='row pt-2'>\n                                    <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                                </div>\n                            </div>}\n                            {showDog && <>\n                                <div class='d-flex mb-0 mt-3 position-relative'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3 pr-2'\n                                        style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                    >\n                                        <h5 class='mb-1'>\n                                            {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                            {hasBirthday && <>\n                                                <i class='fas fa-birthday-cake ml-3' />\n                                            </>}\n                                        </h5>\n                                        <div>\n                                            {daysUntilBirthday < 7 && <>\n                                                <span class='text-muted mr-2'>\n                                                    <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                                </span>\n                                            </>}\n                                            {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                            {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                            </>}\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            </div>\n                        </>}\n                    </>}\n\n                    {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                        <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                            Toggle admin info\n                        </button>\n                        {showAdminInfo && <>\n                            <small>\n                                <xmp>\n                                    musher: {JSON.stringify(musher, null, 4)}<br />\n                                    user: {JSON.stringify(user, null, 4)}<br />\n                                    team: {JSON.stringify(team, null, 4)}<br />\n                                    totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                    {/* {\n                                        \"firstDate\": \"2021-03-19 11:59\",\n                                        \"lastDate\": \"2021-03-20 17:13\",\n                                        \"firstEpoch\": 1616151540000,\n                                        \"lastEpoch\": 1616256780000,\n                                        \"now\": {\n                                            \"$numberDecimal\": \"1642675856939\"\n                                        },\n                                        \"totalTimeUsedSec\": 26524316,\n                                        \"totalWorkoutTimeUsedSec\": 130895,\n                                        \"lastDuration\": 25655,\n                                        \"team\": 84,\n                                        \"count\": 4,\n                                        \"distanceKm\": 301.5906237951766,\n                                        \"elevation\": 3610.019075719202,\n                                        \"duration\": 77343,\n                                        \"rest\": 1332,\n                                        \"speedAvg\": 8.294634979660305,\n                                        \"totalRest\": 54884,\n                                        \"loadIndex\": 1080.75,\n                                        \"totalKcalRelated\": 544.535560976128,\n                                        \"weightedTotalKcal\": 12303.171406247127,\n                                        \"flatTotalKcal\": 9424.70699359927,\n                                        \"firstGpxStartEpoch\": null,\n                                        \"lastGpxStartEpoch\": null\n                                    } */}\n\n                                </xmp>\n                            </small>\n                        </>}\n                    </div>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass TrackingMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            reloadLastEpoch: Math.floor(new Date().getTime() / 1000),\n            historyPointIndex: 0,\n            timerRunning: true,\n            replayHistory: false,\n            replaySpeed: REPLAY_SPEED,\n        };\n        this.updateTimer = {};\n    }\n\n    handleHistoryPointIndex = (e) => {\n        const historyIdx = parseInt(e.target.value, 10);\n        clearTimeout(this.updateTimer.reload);\n\n        // console.log({ historyIdx });\n        this.setState({\n            historyPointIndex: historyIdx,\n            timerRunning: false,\n        }, () => {\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex));\n        });\n    }\n\n    playHistory = () => {\n        clearTimeout(this.updateTimer.reload);\n        const { historyPointIndex, replaySpeed } = this.state;\n        const { raceStore } = this.props.stores;\n        const raceTrackerPointTimestamp = raceStore.getRaceTrackerTimestamp(historyPointIndex + 1);\n        // console.log('playHistory', { historyPointIndex });\n        const state = {\n            historyPointIndex: historyPointIndex + 1,\n            timerRunning: false,\n            playingHistory: true,\n        };\n        if (raceTrackerPointTimestamp) {\n            state.raceTrackerPointTimestamp = raceTrackerPointTimestamp\n        }\n        this.setState({\n            ...state,\n        }, () => {\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex + 1));\n        });\n\n        // Set replay timer\n        clearTimeout(this.updateTimer.history);\n        this.updateTimer.history = setTimeout(() => {\n            this.playHistory();\n        }, replaySpeed * 1000);\n    }\n\n    pauseHistory = () => {\n        clearTimeout(this.updateTimer.history);\n        this.setState({\n            playingHistory: false,\n        });\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs);\n\n        // Set reload timer\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                console.log('loadLiveRaceResults.reloading...');\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRace = async (props = this.props) => {\n        try {\n            this.setState({ isLoading: true });\n            const { raceStore, appState } = props.stores;\n            const { raceid, classid, filterByBibs, historySteps } = props;\n            await raceStore.load(raceid);\n            raceStore.getAllClassesSortedBy();\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const { selectedClassIds = [] } = appState;\n            const allClassIds = race?.classes.map(e => e.id);\n            let selectedClassId = classid || selectedClassIds[0];\n            if (allClassIds.indexOf(selectedClassId) === -1) {\n                selectedClassId = allClassIds[0];\n                appState.setSelectedClassId(selectedClassId);\n            }\n            if (classid) {\n                appState.toggleSelectedClassId(classid, true);\n            }\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\n            this.setState({ isLoading: false });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    setLeaderboardMode = (e) => {\n        const leaderboardMode = e.target.parentElement.dataset.mode || e.target.dataset.mode;\n        this.setState({ leaderboardMode })\n    }\n\n    chooseRaceClass = (e) => {\n        const filterByraceClass = e.target.value;\n        this.setState({ filterByraceClass })\n    }\n\n    toggleShowLeaderBoard = (hide) => {\n        const { showLeaderBoard } = this.state;\n        if (hide === true) {\n            this.setState({ showLeaderBoard: false });\n        } else {\n            this.setState({ showLeaderBoard: !showLeaderBoard });\n        }\n    }\n\n    toggleShowNews = (hide) => {\n        const { showNews } = this.state;\n        if (hide === true) {\n            this.setState({ showNews: false });\n        } else {\n            this.setState({ showNews: !showNews });\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.reload);\n        clearTimeout(this.updateTimer.history);\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    componentDidMount() {\n        this.loadRace();\n        try {\n            const { width, height } = getWindowDimensions();\n            if (width < 800) {\n                this.toggleShowLeaderBoard(true);\n                this.toggleShowNews(true);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid || this.props.showDrawerReplay !== nextProps.showDrawerReplay) {\n\t\t    this.loadRace(nextProps);\n        }\n\t}\n\n    closeAllDrawers = () => {\n        this.setState({\n            showResults: false,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    onMarkerClick = (wpData) => {\n        this.closeAllDrawers();\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onMusherClick = (wpData) => {\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onCpMarkerClick = (cpData) => {\n        if (!cpData || !cpData.id) {\n            return null;\n        }\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId: cpData.id,\n            showDrawerCheckpoint: true,\n            cpData,\n        });\n    }\n\n    toggleDrawerMusher = () => {\n        const { showDrawerMusher } = this.state;\n        this.setState({\n            showDrawerMusher: !showDrawerMusher,\n        });\n    }\n\n    toggleDrawerCheckpoint = () => {\n        const { showDrawerCheckpoint } = this.state;\n        this.setState({\n            showDrawerCheckpoint: !showDrawerCheckpoint,\n        });\n    }\n\n    toggleResults = () => {\n        const { showResults } = this.state;\n        this.closeAllDrawers();\n        this.setState({            \n            showResults: !showResults,\n        });\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    setReplaySpeed = (e) => {\n        const speed = e.target.closest('button').dataset.speed;\n        this.setState({\n            replaySpeed: parseFloat(speed),\n        });\n    }\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const {\n                showDrawerReplay,\n                historySteps,\n                filterByBibs,\n            } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n                selectedMusherBib: '',\n                showDrawerCheckpoint: false,\n                showDrawerMusher: false,\n                showDrawer: false,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleFocusOnMusher = (e) => {\n        try {\n            const musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n            const { appState, raceStore } = this.props.stores;\n            appState.toggleFocusOnMusher(musherId);\n\n            const { focusOnMushers = [], selectedClassIds = [] } = appState;\n            const classid = selectedClassIds[0]\n\n            const { race } = raceStore;\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === classid)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (race.liveRace > 0) {\n                raceStore.getRaceTrackerActiveTeams(null, focusOnMushers, bibs);\n            } else {\n                raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers, bibs);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleBib = () => {\n        try {\n            const { bib } = this.state;\n            const { appState, raceStore } = this.props.stores;\n            const musher = raceStore.getMusherByBibId(bib);\n            appState.toggleFocusOnMusher(musher.id);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    checkForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.toggleBib();\n        }\n    }\n\n    toggleReplayHistory = () => {\n        const { replayHistory } = this.state;\n        clearTimeout(this.updateTimer.reload);\n        this.setState({\n            showDrawer: false,\n            historyPointIndex: 0,\n            replayHistory: !replayHistory,\n            timerRunning: replayHistory,\n        }, async () => {\n            await this.loadRace();\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            const { maxPoints } = raceStore;\n            if (replayHistory) {\n                console.log('toggleReplayHistory: setting to maxPoints', maxPoints);\n                raceStore.updateWaypointPosition(Math.abs(maxPoints - 1));\n            } else {\n                console.log('toggleReplayHistory: setting to first points');\n                for (let i = 0, l = 10; i < l; i += 1) {\n                    raceStore.updateWaypointPosition(Math.abs(historyPointIndex + i));\n                }\n            }\n        });\n    }\n\n    toggleLines = () => {\n        const { showLines } = this.state;\n        this.setState({\n            showLines: !showLines,\n        });\n    }\n\n    render() {\n        const { historyPointIndex, timerRunning, playingHistory, replaySpeed, raceTrackerPointTimestamp, showLines,\n            allTeamIds, bibs,\n        } = this.state;\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const {\n            raceid,\n            path,\n            showHeader = true,\n            drawerClassNames,\n            drawerWidth,\n            showDrawerReplay,\n            largeMarkers,\n            isAnimatedMarkers,\n            linkBase = '/app-races/',\n        } = this.props;\n        const { focusOnMushers = [], infoOnMushers = [], selectedClassIds = [] } = appState;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { leaderboardMode, filterByraceClass, showLeaderBoard, showNews, reloadLastEpoch,\n            showDrawerMusher, showDrawerCheckpoint,\n            wpData = {},\n            cpData = {},\n            showResults,\n            showTeam, showDog,\n            submenu, replayHistory,\n            selectedCheckpointId,\n        } = this.state;\n\n        const { activeTeams, teamList, waypoints, geoJSONs, waypoints2, waypoints3, zoomToMarkers, classes, race, racetrackerData, maxPoints } = raceStore;\n\n        const musher = wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email);\n        const team = raceStore.getTeamById(musher.team);\n        const selectedClass = raceStore.getClassById(selectedClassIds[0]) || {};\n\n        let wpCheckpoints = [];\n        if (selectedClass.waypoints && selectedClass.waypoints.length > 0) {\n            wpCheckpoints = selectedClass.waypoints;\n        } else if (selectedClass.checkpoints && selectedClass.checkpoints.length > 0) {\n            wpCheckpoints = selectedClass.checkpoints\n                .slice()\n                .filter(cp => cp.position && cp.position[0])\n                .map(cp => ({\n                    id: cp.id,\n                    title: cp.name,\n                    lat: cp.position[0],\n                    lng: cp.position[1],\n                }));\n        }\n\n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={team.dogs} />\n            </Overlay>}\n\n\n            {showHeader && <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`${linkBase}${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            {!race.resultsHide && <a href={`${linkBase}${race.id}/results`}>\n                                <i class='fas fa-stopwatch' />\n                            </a>}\n                        </span>\n                    </div>\n                    <div>\n                        <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                    </div>\n                    {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <>\n                        <div class='d-flex align-items-center'>\n                            &nbsp;\n                        </div>\n                    </>}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>}\n\n            {!showTracking ? <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-hand-paper' /></div>\n                        <h3>Not allowed to view tracking</h3>\n                        {race.countryRegexpMessage}\n                    </div>\n                </div>\n            </> : <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    {race.id ? <>\n                        <Trackmap\n                            marginTop={MARGIN_TOP}\n                            stores={this.props.stores}\n                            raceid={raceid}\n                            waypoints={waypoints}\n                            geoJSONs={showLines ? geoJSONs : null}\n                            // waypoints2={waypoints2}\n                            // waypoints3={waypoints3}\n                            waypoints2={wpCheckpoints}\n\n                            zoomToMarkers={zoomToMarkers}\n                            fullscreenMap={true}\n                            onMarkerClick={this.onMarkerClick}\n                            onMarker2Click={this.onCpMarkerClick}\n                            showHeatmap={race.liveRace < 1}\n                            allTeamIds={allTeamIds}\n                            showTracks={race.liveRace >= 1}\n                            selectedClassIds={selectedClassIds}\n                            showDistanceMarkers={false}\n                            groupWaypoints={false}\n                            focusOnMushers={focusOnMushers}\n                            largeMarkers={largeMarkers}\n                            isAnimatedMarkers={isAnimatedMarkers}\n                            replaySpeed={replaySpeed * 1000}\n                            // key={`trackmap-${selectedClassIds.join('-')}`}\n                            // key={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                            // mapid={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                        />\n                    </> : <>\n                        <Loading stores={this.props.stores} />\n                    </>}\n\n\n                    {timerRunning && <div class='position-absolute' style='top: 125px; left: 5px; z-index: 9999; width: 30px; height: 30px;'>\n                        <ReloadTimer stores={this.props.stores} classNames='float-right ml-2' reloadLastEpoch={reloadLastEpoch} />\n                    </div>}\n\n                    {focusOnMushers && focusOnMushers.length > 0 && <>\n                        <div\n                            class='row mb-2'\n                            style='\n                                background-color: #1C1F4C;\n                                background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                background-size: cover !important;\n                                background-position: 0 0;\n                                border-radius: 10px;\n                            '\n                        >\n                            <div class='col-12 text-white' style='font-size: 1.3em;'>\n                                {focusOnMushers && focusOnMushers.map(musherId => {\n                                    const musher = raceStore.getMusherById(musherId);\n                                    return <>\n                                        <div>\n                                            <nobr>\n                                                <span class='mr-2' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-times text-warning' /> : <i class='far fa-star' />}</span>\n                                                <span class='text-right' style='width: 50px; display: inline-block;'>{musher.bib}</span> {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                            </nobr>\n                                        </div>\n                                    </>\n                                })}\n                            </div>\n                        </div>\n                    </>}\n\n                    {race.mapCredits && <>\n                        <div class='position-absolute' style='bottom: 30px; left: 7px; z-index: 9999; width: 100px; height: 40px;'>\n                            <Markdown markdown={mu.replaceImages(race.mapCredits, race.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </>}\n\n                    {/* <div class={`row`}>\n                        <div class='col-12 form-inline align-top d-flex justify-content-center'>\n                            <div class='form-group'>\n                                <input\n                                    class='form-control form-control-lg text-dark border-primary'\n                                    style='background-color: inherit;'\n                                    type='text'\n                                    onInput={linkstate(this, 'bib')}\n                                    onKeyDown={this.checkForEnter}\n                                />\n                                <button\n                                    type='button'\n                                    class='ml-2 btn btn-lg btn-primary'\n                                    onClick={this.toggleBib}\n                                >Search for Bib</button>\n                            </div>\n                        </div>\n                    </div> */}\n\n                    {(showDrawerReplay || replayHistory) && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleReplayHistory} classNames={drawerClassNames} width={drawerWidth}>\n\n                            {maxPoints > 0 ? <>\n                                <div class='d-flex justify-content-center mx-3'>\n                                    {playingHistory ? <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-warning' onClick={this.pauseHistory}><i class='fas fa-pause' /></button>\n                                        </div>\n                                    </> : <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-success' onClick={this.playHistory}><i class='fas fa-play' /></button>\n                                        </div>\n                                    </>}\n                                    <div class='pl-2 pt-2 flex-grow-1'>\n                                        <input type='range' class='custom-range w-100' min={0} max={maxPoints} value={historyPointIndex} onInput={this.handleHistoryPointIndex} />\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-left rounded-none ${replaySpeed === 1 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={1}\n                                        >\n                                            60x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.5 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.5}\n                                        >\n                                            120x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.25 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.25}\n                                        >\n                                            240x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block right rounded-none ${replaySpeed === 0.12 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.12}\n                                        >\n                                            480x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-right rounded-none ${replaySpeed === 0.05 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.05}\n                                        >\n                                            1000x\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='flex-grow-1 pt-0 font-weight-bolder text-center' style='font-size: 1.1em;'>\n                                        {raceTrackerPointTimestamp && <>\n                                            {util.formatDate(util.parseInputDate(raceTrackerPointTimestamp), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </>}\n                                        {isAdmin && <>\n                                            / {historyPointIndex}\n                                        </>}\n                                    </div>\n                                    {isAdmin && <>\n                                        <button class='btn btn-danger mt-2 mr-4 rounded-pill-both rounded-none' onClick={this.toggleLines}>\n                                            <i class='fas fa-wave-square' /> Show lines\n                                        </button>\n                                    </>}\n                                </div>\n                            </> : <>\n                                <div class='spinner-border text-primary' role='status'>\n                                    <span class='sr-only'>Loading...</span>\n                                </div>\n                            </>}\n                        </Drawer>\n                    </>}\n\n                    {showResults && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleResults} classNames={drawerClassNames} width={drawerWidth}>\n                            <Results\n                                stores={this.props.stores}\n                                raceClass={selectedClass}\n                                race={race}\n                                onMarkerClick={this.onMusherClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerMusher && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerMusher} classNames={drawerClassNames} width={drawerWidth}>\n                            <MusherInfo\n                                stores={this.props.stores}\n                                wpData={wpData}\n                                onMarkerClick={this.onMarkerClick}\n                                onTeamClick={this.onTeamClick}\n                                onUserClick={this.onUserClick}\n                                onDogClick={this.onDogClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerCheckpoint && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerCheckpoint}>\n                            <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                        </Drawer>\n                    </>}\n\n                </div>\n            </>}\n        </>);\n    }\n}\n\nexport default TrackingMap;\n"],"sourceRoot":""}