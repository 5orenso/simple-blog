{"version":3,"sources":["webpack:///./components/workout/status.js","webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["WorkoutStatus","observer","props","loadWorkoutPlans","currentMonth","currentYear","seasonStart","workoutPlanCurrent","year","currentTeam","workoutPlanStore","stores","Date","getMonth","util","getYear","parseInt","load","query","team","seasonYear","seasonMonth","workoutPlans","id","state","loadAll","this","Promise","all","loadTeams","loadWorkoutSummary","teamStore","skipMusherWorkoutSummary","addData","userStore","getWorkoutSummary","componentDidMount","componentWillReceiveProps","nextProps","render","lastPlanMonth","user","language","MONTHS","mu","getMonths","months","monthRange","class","map","month","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","format","style","role","aria-valuenow","aria-valuemin","aria-valuemax","fields","name","Component","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","workoutFilter","Workouts","loadWorkouts","setState","workoutStore","getNotifications","loadStravaActivities","loadGarminActivities","prepareWeekGraphs","chooseSubmenu","e","target","parentElement","dataset","menu","chooseDay","day","dd","mm","yyyy","w","date","d","getDate","m","y","getFullYear","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummaryDay","daysBack","appState","checkCordova","percentComplete","workoutPlan","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","summaryMonth","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","href","secToHms","callback","key","data-menu","onClick","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","basehref","showNavigation","showHeader","strava","act","activity","garmin","url","workout","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","xTicks","i","l","push","scope"],"mappings":"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","file":"route-workouts.chunk.dd36e.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        await Promise.all([\n            this.loadTeams(props),\n            this.loadWorkoutPlans(props),\n            this.loadWorkoutSummary(props),\n        ]);\n    }\n\n    async loadTeams(props = this.props) {\n        const { currentTeam } = props;\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { year, currentTeam } = props;\n\t\tconst { workoutPlanStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 8 ? currentYear - 1 : currentYear), 10);\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t}\n\t\t}\n\t}\n\n    async loadWorkoutSummary(props = this.props) {\n        const { year, currentTeam } = props;\n\t\tconst { userStore } = props.stores;\n        await userStore.getWorkoutSummary({ team: currentTeam, year });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n        const { currentTeam } = this.props;\n\t\tconst { currentSeason, prevSeason } = this.props;\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { workoutPlan } = workoutPlanStore;\n        const { user, workoutSummaryTeam } = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { team } = teamStore;\n\n        const { year } = this.props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n        const months = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > currentYear || (month.year === currentYear && month.month >= currentMonth)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center'>\n                        <h3>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n};\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tawait Promise.all([\n\t\t\tworkoutStore.load({ query: { team: currentTeam, year, month } }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(),\n\t\t]);\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user } = userStore;\n        const { language = 'no' } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst seasonStart = parseInt(year || (currentMonth < 8 ? currentYear - 1 : currentYear), 10);\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={`${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={`${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalDistanceKmMonth, 0)} <small><small><small>km</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalSpeedavgMonth, 1)} <small><small><small>km/t</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}`}\n\t\t\t\t\t\t\tshowNavigation={false}\n\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}