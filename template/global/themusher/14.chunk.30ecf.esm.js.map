{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/form/links.js","webpack:///./components/form/achievements.js","webpack:///./routes/dogs/edit.js","webpack:///./components/form/files.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Achievements","handleAdd","data","updateField","object","field","id","value","setState","name","url","removeLink","async","e","dogStore","stores","target","closest","dataset","linkId","showFiles","class","links","length","map","file","util","isoDate","createdDate","onClick","data-name","data-id","for","type","aria-describedby","onInput","linkstate","description","removeAchievement","achievementId","achievements","date","MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","Input","handleImageErrored","image","retry","parseInt","onerror","setTimeout","src","Date","removeImage","dog","parentElement","removeFile","saved","datalist","min","max","step","title","icon","help","refName","showImages","maxValue","undefined","files","formatBytes","size","style","data-field","rows","images","s3SmallLink","onError","img","autoOpen","addToImages","list","el","Teams","toggleType","typeId","isNew","toJS","teams","indexOf","removeTeam","team","addTeam","userStore","highlight","idx","isPrimary","isSecondary","isArray","hintTeam","role","Harnesses","harnesses","user","language","harness","colorNonstop","lang","Status","toggleStatus","statuses","removeStatus","status","addStatus","dogstatuses","Position","dogPositions","DogsEdit","insertDog","newDog","insert","resetDog","route","elementtype","fieldType","updateFieldValue","datatype","skipTimer","newValue","localObjectValue","Array","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","chooseMother","dogId","motherDog","findDog","chipId","chooseFather","fatherDog","chooseSubmenu","submenu","menu","back","history","goBack","createNew","load","addData","saveField","loadDog","insertStatus","dogFemales","findDogsByGender","dogMales","hasBirthday","birth","daysUntilBirthday","Math","ceil","daysUntilNextBirthday","linkState","age","deceased","gender","data-menu","mother","d","father","Files","handleAddImage","uploadStatus","before","after","apiUrl","height","width"],"mappings":"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","file":"14.chunk.30ecf.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom(false);\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n\n        if (!image.dataset.retry) {\n            image.dataset.retry = 0;\n        }\n        image.dataset.retry = parseInt(image.dataset.retry, 10) + 1;\n        if (image.dataset.retry > 5) {\n            return false;\n        }\n\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeImage({\n            id: dog.id,\n            name: imageName,\n        });\n    }\n\n    removeFile = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const fileName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeFile({\n            id: dog.id,\n            name: fileName,\n        });\n    }\n\n    render() {\n        const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField, refName, showImages = false, showFiles = true } = this.props;\n        let value = dog[field] || '';\n\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(dog[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!dog.files || dog.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='dogs.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='dogs.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {dog.files && dog.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={10}\n                    />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    {showImages && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {(!dog.images || dog.images.length === 0) && <>\n                                    <div class='text-center text-muted mb-3'>\n                                        <div class='display-1'><i class='fas fa-images' /></div>\n                                        <h3><Text id='dogs.no-images-title'>No images for this dog!</Text></h3>\n                                        <Text id='dogs.no-images-text'>You can add more images to this dog. Puppy pictures, workout pictures, lazy summer pictures, etc. All is a nice way to create a better profile for this dog.</Text>\n                                    </div>\n                                </>}\n                                {field === 'image' ? <>\n                                    {dog.image && dog.image.s3SmallLink && <div class='col-3 p-1'>\n                                        <img src={dog.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={dog.image.name}\n                                        ><i class='fas fa-trash' /> Remove</button>\n                                        <span class='badge badge-success'>Main</span>\n                                    </div>}\n                                </> : <>\n                                    {dog.images && dog.images.map(img => (\n                                        <div class='col-3 p-1'>\n                                            <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                            <button class='btn btn-sm btn-link'\n                                                onClick={this.removeImage}\n                                                data-name={img.name}\n                                            ><i class='fas fa-trash' /> Remove</button>\n                                        </div>\n                                    ))}\n                                </>}\n\n                            </div>\n                        </div>\n                    </>}\n\n                    {field === 'image' ? <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} addToImages={false} />\n                    </> : <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} />\n                    </>}\n\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        // onInput={e => console.log(e)}\n                        // onChange={e => console.log(e)}\n                    />\n                    <datalist id={`list-${field}`}>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'select') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n\n                    <select type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                    >\n                        <option value=''>-- Velg kjønn --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label> {refName}\n                <input type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={dog.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleType(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        if (value === null) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.teams.indexOf(value) > -1) {\n            dogStore.removeTeam({ id: object.id, team: value });\n        } else if (object.team) {\n            dogStore.addTeam({ id: object.id, team: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        const { highlight } = this.props;\n\n        return (\n            <div class={`form-group mb-1 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = object && util.isArray(object.teams) && object.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleType(team.id)}\n                                            >\n                                                {object.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n\n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                    </>}\n                                                </>}\n\n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Harnesses extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { harnesses, user } = userStore;\n        const { language = 'en' } = user;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {harnesses && harnesses.map((harness, idx) => (\n                                    <div class='col px-0 mb-2'\n                                        ref={value === harness.id ? c => this.container = c : null}\n                                    >\n                                        <div class={`border\n                                            rounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === harnesses.length ? 'rounded-pill-right': '')}\n                                            p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                            style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                            onClick={() => this.toggleType(harness.id)}\n                                        >\n                                            {harness.lang && harness.lang[language] ? harness.lang[language] : harness.name}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Status extends Component {\n    // toggleStatus(typeId) {\n    //     const { object, type, field, updateField, isNew } = this.props;\n    //     let value = toJS(object[field]);\n    //     if (value === typeId) {\n    //         value = 0;\n    //     } else {\n    //         value = typeId;\n    //     }\n    //     updateField({ id: object.id, field, value, type, isNew });\n    // }\n\n    toggleStatus(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = 0;\n        } else {\n            value = typeId;\n        }\n        if (value === 0) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.statuses.indexOf(value) > -1) {\n            dogStore.removeStatus({ id: object.id, status: value });\n        } else if (object.status) {\n            dogStore.addStatus({ id: object.id, status: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogstatuses, user } = userStore;\n        const { language } = user;\n\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {dogstatuses && dogstatuses.map((status, idx) => {\n                                    const isPrimary = value === status.id;\n                                    const isSecondary = object && util.isArray(object.statuses) && object.statuses.indexOf(status.id) > -1;\n                                    return (\n                                        <div class='col mb-2 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === dogstatuses.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleStatus(status.id)}\n                                            >\n                                                {language && status.lang && status.lang[language] ? status.lang[language] : status.name}\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Position extends Component {\n    toggleStatus(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogPositions } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {dogPositions && dogPositions.map(status => (\n                            <div class='offset-2 col-8 mb-2'>\n                                <div class={`border rounded rounded-pill px-3 py-1 bg-${value === status.id ? status.class || 'success' : ''}`}\n                                    onClick={() => this.toggleStatus(status.id)}\n                                    style='line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small>\n                                        {status.name}\n                                    </small>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDog: {},\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    async loadDog() {\n\t\tconst { dogStore } = this.props.stores;\n        if (this.props.dog === 'new') {\n            this.setState({ createNew: true });\n        } else {\n            await dogStore.load(this.props.dog, false, { addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n        }\n    }\n\n\tresetDog() {\n\t\tthis.setState({\n            newDog: {},\n            createNew: false,\n        });\n\t}\n\n\tinsertDog = async () => {\n\t\tconst { newDog } = this.state;\n\t\tconst { dogStore } = this.props.stores;\n\t\tawait dogStore.insert({ ...newDog });\n        this.resetDog();\n        route(`/dogs/`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { dogStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { dog } = dogStore;\n        if (field === 'images') {\n            if (Array.isArray(dog.images) && Array.isArray(value)) {\n                localObjectValue = [...dog.images, ...value];\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(dog.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.files, ...value];\n                } else {\n                    localObjectValue = [...dog.files, value];\n                }\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(dog.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.achievements, ...value];\n                } else {\n                    localObjectValue = [...dog.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(dog.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.links, ...value];\n                } else {\n                    localObjectValue = [...dog.links, value];\n                }\n            }\n        }\n\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            dogStore.updateObjectKeyValue('newDog', field, value);\n        } else {\n            dogStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { dogStore } = this.props.stores;\n        await dogStore.saveField(id, field, value);\n    }\n\n    chooseMother = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const motherDog = dogStore.findDog(dogId);\n\n        if (motherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: motherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherName', value: motherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherChipId', value: motherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: null, skipTimer: true });\n        }\n    }\n\n    chooseFather = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const fatherDog = dogStore.findDog(dogId);\n\n        if (fatherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: fatherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherName', value: fatherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherChipId', value: fatherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: null, skipTimer: true });\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/edit/${dog.id}/${submenu}`);\n\t}\n\n    back = () => {\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}`);\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadDog();\n    }\n\n\trender() {\n        const { createNew, newDog, submenu } = this.state;\n\t\tconst { dogStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\t\tconst { insertStatus, saved, dog } = dogStore;\n        const dogFemales = dogStore.findDogsByGender('female');\n        const dogMales = dogStore.findDogsByGender('male');\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const { name } = dog;\n        if (createNew) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <button class='btn btn-link float-left pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}\n                    >\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <div>\n                                <h5 style='padding-left: 35px;'><Text id='dogs.add-new'>Legg til ny hund</Text></h5>\n                                <div class='form-group'>\n                                    <label for='nameInput'><Text id='dogs.name'>Navn</Text></label>\n                                    <input type='text' class='form-control' id='nameInput' aria-describedby='nameHelp'\n                                        onInput={linkState(this, 'newDog.name')}\n                                        value={newDog.name}\n                                    />\n                                    <small id='nameHelp' class='form-text text-muted'><Text id='dogs.name-of-dog'>Fullt navn på hunden.</Text></small>\n                                </div>\n                                <button type='button' class='btn btn-primary'\n                                    onClick={this.insertDog}\n                                >\n                                    <Text id='dogs.save-new'>Registrer ny hund</Text>\n                                </button>\n\n                                {insertStatus && <div class='alert alert-success mt-4 col-12' role='alert'>\n                                    <Text id='dogs.dog-saved'>Hunden er lagret</Text> 🐕\n                                </div>}\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link float-left pl-0 fixed-top'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}\n                >\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='clearfix'>\n                            <div class={`text-center border rounded-circle imageRounded float-right`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\");` : ''}>\n                                {!dog.image && <i class='fas fa-dog text-muted mt-3' style='font-size: 40px;' />}\n                            </div>\n                            <span class='float-right'>\n                                {daysUntilBirthday < 7 && <>\n                                    <span class='text-muted mr-2'>\n                                        <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                    </span>\n                                </>}\n                                {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                            </span>\n                            <h5 style='padding-left: 35px;'>\n                                <Text id='dogs.edit'>Endre</Text>: {name}\n                                {hasBirthday && <>\n                                    <i class='fas fa-birthday-cake ml-3' />\n                                </>}\n                            </h5>\n                        </div>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='row'>\n                            <div class='col-12 my-3'>\n                                <div class='row'>\n                                    <div class='w-100 overflow-hidden'>\n                                        <div\n                                            class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                                        >\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='info'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-info-circle' /> <Text id='dogs.info'>Info</Text></button>\n\t\t                                        {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'status' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='status'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-thermometer' /> <Text id='dogs.status'>Status</Text></button>\n\t\t                                        {submenu === 'status' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='pictures'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-images' /> <Text id='dogs.pictures'>Pictures</Text></button>\n\t\t                                        {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='team'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-users' /> <Text id='dogs.team'>Team</Text></button>\n\t\t                                        {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'relations' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='relations'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-project-diagram' /> <Text id='dogs.relations'>Relations</Text></button>\n\t\t                                        {submenu === 'relations' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='achievements'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-clock' /> <Text id='dogs.achievements'>Achievements</Text></button>\n\t\t                                        {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-none ${submenu === 'links' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='links'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-link' /> <Text id='dogs.links'>Links</Text></button>\n\t\t                                        {submenu === 'links' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                            <div class='col px-0 pt-2'>\n                                                <button\n                                                    class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                                    data-menu='advanced'\n                                                    onClick={this.chooseSubmenu}\n                                                ><i class='fas fa-cogs' /> <Text id='dogs.log'>Advanced</Text></button>\n\t\t                                        {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                        {submenu === 'info' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='name'\n                                    title={<Text id='dogs.full-name'>Fullt navn</Text>}\n                                    help={<Text id='dogs.full-name-help'>Fullt navn på hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='shortname'\n                                    title={<Text id='dogs.short-name'>Kallenavn</Text>}\n                                    help={<Text id='dogs.short-name-help'>Kallenavnet på hunden. Hva roper du på innkalling?</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='gender' type='select'\n                                    datalist={[\n                                        ['male', <Text id='dogs.gender-male'>Male</Text>],\n                                        ['female', <Text id='dogs.gender-female'>Female</Text>]\n                                    ]}\n                                    title={<Text id='dogs.gender'>Kjønn</Text>}\n                                    help={<Text id='dogs.gender-help'>Kjønn på hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='chipId'\n                                    title={<Text id='dogs.chip-id'>Chip ID</Text>}\n                                    help={<Text id='dogs.chip-id-help'>Chip ID på hunden. Står ofte i vetrinærhåndbok eller passet.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='birth' type='date' min='2000-01-01' max='today'\n                                    title={<Text id='dogs.birth'>Fødselsdato</Text>}\n                                    help={<Text id='dogs.birth-help'>Fødselsdato på hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Harnesses stores={this.props.stores} saved={saved} object={dog} type='number' field='harness'\n                                    title={<Text id='dogs.harness-size'>Selestørrelse</Text>}\n                                    help={<Text id='dogs.harness-size-help'>Sele til hunden</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                                <Input saved={saved} dog={dog} field='description' icon='fas fa-paragraph' type='textarea'\n                                    title={<Text id='dogs.description'>Beskrivelse</Text>}\n                                    help={<Text id='dogs.description-help'>Beskrivelse av hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n\n                                <div class='mt-5 pt-5'>\n                                    <Input saved={saved} dog={dog} field='deceased' type='date' min='2000-01-01' max='today'\n                                        title={<Text id='dogs.deceased'>Død</Text>}\n                                        help={<Text id='dogs.deceased-help'>Dødsdato for hunden.</Text>}\n                                        onInput={this.updateField}\n                                    />\n                                </div>\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'status' && <>\n                            <Localizer>\n                                <Status stores={this.props.stores} saved={saved} object={dog} type='number' field='status'\n                                    title={<Text id='dogs.status'>Status</Text>}\n                                    help={<Text id='dogs.status-help'>Status til hunden</Text>}\n                                    updateField={this.updateFieldValue} />\n                                <Input saved={saved} dog={dog} field='specialNeeds'\n                                    title={<Text id='dogs.special-needs'>Spesielle behov</Text>}\n                                    help={<Text id='dogs.special-needs-help'>Har hunden spesielle behov? Trenger ekstra mat, utstyr eller annet? Eks: \"Ekstra fett\", \"Husk ulveklobandasje\", etc.</Text>}\n                                    onInput={this.updateField} />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'pictures' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='imageOther' type='image' icon='fas fa-camera'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.photo'>Bilde</Text>}\n                                    help={<Text id='dogs.photo-help'>Bilder av hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                    showImages={true}\n                                />\n                                <Input saved={saved} dog={dog} field='image' type='image' icon='fas fa-portrait'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.profile-photo'>Profilbilde</Text>}\n                                    help={<Text id='dogs.profile-photo-help'>Profilbilde av hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                    showImages={true}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'team' && <>\n                            <Localizer>\n                                <Teams stores={this.props.stores} saved={saved} object={dog} type='number' field='team'\n                                    title={<Text id='dogs.team'>Team</Text>}\n                                    help={<Text id='dogs.team-help'>Team som hunden er på.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                                <Position stores={this.props.stores} saved={saved} object={dog} type='number' field='position'\n                                    title={<Text id='dogs.position'>Plass i spannet</Text>}\n                                    help={<Text id='dogs.position-help'>Foretrukket plass i spannet.</Text>}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'relations' && <>\n                            <h5 class='mt-5'><Text id='dogs.mother'>Mor</Text></h5>\n                            <select class='form-control' aria-describedby='fatherHelp'\n                                value={dog.mother}\n                                onInput={this.chooseMother}\n                            >\n                                <option value=''>-- <Text id='dogs.choose-mother'>Velg blant dine hunder</Text> --</option>\n                                {dogFemales && dogFemales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                            </select>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='motherName' type='text'\n                                    title={<Text id='dogs.mother-name'>Navn på mor</Text>}\n                                    help={<Text id='dogs.mother-name-help'>Navn på moren til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='motherChipId' type='text'\n                                    title={<Text id='dogs.mother-chipid'>Chip ID på mor</Text>}\n                                    help={<Text id='dogs.mother-chipid-help'>Chip ID til moren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='motherComment'\n                                    title={<Text id='dogs.mother-comment'>Kommentar til mor</Text>}\n                                    help={<Text id='dogs.mother-comment-help'>Kommentar til moren til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </Localizer>\n\n                            <h5 class='mt-5'><Text id='dogs.father'>Far</Text></h5>\n                            <select class='form-control' aria-describedby='fatherHelp'\n                                value={dog.father}\n                                onInput={this.chooseFather}\n                            >\n                                <option value=''>-- <Text id='dogs.choose-father'>Velg blant dine hunder</Text> --</option>\n                                {dogMales && dogMales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                            </select>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='fatherName' type='text'\n                                    title={<Text id='dogs.father-name'>Navn på far</Text>}\n                                    help={<Text id='dogs.father-name-help'>Navn på faren til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='fatherChipId' type='text'\n                                    title={<Text id='dogs.father-chipid'>Chip ID på far</Text>}\n                                    help={<Text id='dogs.father-chipid-help'>Chip ID til faren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                    onInput={this.updateField}\n                                />\n                                <Input saved={saved} dog={dog} field='fatherComment'\n                                    title={<Text id='dogs.father-comment'>Kommentar til far</Text>}\n                                    help={<Text id='dogs.father-comment-help'>Kommentar til faren til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'links' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='links' type='text' icon='fas fa-link'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.links'>Linker</Text>}\n                                    help={<Text id='dogs.links-help'>Linker til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'achievements' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='achievements' type='text' icon='fas fa-clock'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.achievements'>Bragder</Text>}\n                                    help={<Text id='dogs.achievements-help'>Bragder til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n                        {submenu === 'advanced' && <>\n                            <Localizer>\n                                <Input saved={saved} dog={dog} field='files' type='file' icon='fas fa-file'\n                                    stores={this.props.stores}\n                                    title={<Text id='dogs.files'>Files</Text>}\n                                    help={<Text id='dogs.files-help'>Filer til denne hunden.</Text>}\n                                    onInput={this.updateField}\n                                    updateField={this.updateFieldValue}\n                                />\n                            </Localizer>\n                        </>}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DogsEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n"],"sourceRoot":""}