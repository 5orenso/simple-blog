{"version":3,"sources":["webpack:///./components/story/add.js","webpack:///./components/story/publicDetail.js","webpack:///./routes/stories/detail.js","webpack:///./components/dog/scroller.js","webpack:///./components/story/publicFeed.js","webpack:///./components/yrweather/index.js"],"names":["initialState","showAddImage","showTeamChange","showChangeVisibility","showChangeType","sendButtonEnabled","StoryAdd","observer","props","beforeImagesUploaded","setState","afterImagesUploaded","addStory","body","response","story","state","callback","hashTags","postfix","topic","team","storyStore","stores","length","map","tag","join","insert","type","title","pinned","images","public","urlText","url","currency","price","code","country","region","startDate","endDate","status","loadPublicFeed","hashtags","mu","resizeTextarea","inputRef","addImage","data","addImages","push","value","removeImage","e","imageName","target","parentElement","dataset","name","util","isArray","idx","findIndex","splice","changeVisibility","changePinned","changeType","toggleTeamChange","handleImageErrored","image","onerror","setTimeout","src","Date","setPublicTeam","publicTeams","userStore","findPublicTeams","id","setFocus","hasFocus","removeFocus","componentDidMount","this","render","col","offset","appState","user","isAdmin","displayNameShort","firstname","ucfirst","lastname","email","userImage","undefined","teamId","parseInt","findTeam","darkmode","class","style","s3SmallLink","onClick","for","placeholder","onInput","linkState","onKeyUp","onFocus","ref","c","data-id","href","disabled","onChange","teams","selected","checked","img","onError","data-name","object","updateField","before","after","autoOpen","Component","StoryPublicFeed","loadStoriesPublicFeed","componentWillReceiveProps","nextProps","publicFeed","showAllComments","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","MARGIN_TOP_BACK","marginTopBack","isLoading","submenu","viewmenu","Home","reloadFeeds","preventDefault","back","history","goBack","loadAll","messageStore","getFingerprint","getInfo","getNotifications","getUnReadMessages","currentLocationInfo","coords","getWeatherUser","lat","latitude","lon","longitude","altitude","yrWeather","currentLocationGeocode","place","formatted_address","role","DogScroller","scrollImages","imageIdx","scrollLeft","clientWidth","nearestInt","Math","round","diff","abs","Number","isInteger","sortByName","a","b","allDogs","dogA","find","dogB","dogs","size","onDogClick","onScroll","sort","dogId","dog","onTouchstart","stopPropagation","onTouchend","onTouchmove","filter","d","indexOf","className","showName","showPosition","loading","limit","idxConfirm","idxSuggestion","idxAd","sessionid","getTime","dataFields","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","topRankedRandomized","shuffleArray","topRankedStories","feed","startPosition","now","forEach","date","parseInputDate","floor","endPosition","i","randomPlace","randomInt","isObject","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","onTeamClick","teamid","showTeam","hideTeam","onUserClick","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","path","hashtag","holdingStore","key","componentWillMount","componentWillUnmount","hasNewStories","publicDogs","YrWeather","toggleyrWeather","showWeather","loadWeather","formatWeather","yrWeatherKeys","yrWeatherFormatted","captureEvents","getNestedValue","night","morning","day","evening","getTemperatureColor","format","getWindSpeedColor","slice","w","isoTime","time","windDirection"],"mappings":"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","file":"82.chunk.a667d.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    removeImage = async (e) => {\n        const { story } = this.state;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        if (util.isArray(story.images)) {\n            const idx = story.images.findIndex(e => e.name === imageName);\n            if (idx > -1) {\n                story.images.splice(idx, 1);\n            }\n        }\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport Story from './publicStory';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n        const { story } = props;\n\t\tawait storyStore.loadPublicFeed({ story });\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.story !== this.props.story) {\n            this.loadStoriesPublicFeed(nextProps);\n        }\n    }\n\n    render() {\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n\n                <div class='row pb-4 bg-light'>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                        {!publicFeed || publicFeed.length === 0 && <>\n                            <div class='text-center text-muted mt-5'>\n                                <div class='display-1 text-center mb-5'>\n                                    <i class='fas fa-comment' />\n                                </div>\n                                <h3>No story found!</h3>\n                            </div>\n                        </>}\n                        {publicFeed && publicFeed.map((story) => <>\n                            <Story\n                                stores={this.props.stores}\n                                story={story}\n                                showAllComments={true}\n                            />\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport StoryPublicDetail from '../../components/story/publicDetail';\nimport Ad from '../../components/ad/';\nimport YrWeather from '../../components/yrweather/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n\tviewmenu: 'wall',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, messageStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\n\t\tconst { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n\t\t}\n\t\tthis.setState({ isLoading: false });\n    }\n\n\treloadFeeds = async (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadStoriesPublicFeed();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n        const { story } = props;\n\t\tawait storyStore.loadPublicFeed({ story });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\trender() {\n\t\tconst { isLoading } = this.state;\n        const { story } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { yrWeather, currentLocationGeocode = {} } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <div>\n                    <button class='btn btn-link pl-0 fixed-top text-primary'\n                        style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                        onClick={this.back}>\n                        <i class='fas fa-arrow-circle-left' />\n                    </button>\n                </div>\n\n                <Ad stores={this.props.stores} url={this.props.url} />\n                <div class='bg-light'>\n                    <YrWeather stores={this.props.stores} data={yrWeather} place={place} />\n                </div>\n\n                <StoryAdd stores={this.props.stores} />\n\n                <div class='row bg-light'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                        <small>\n                            <small>\n                                <div class='float-right'>\n                                    {isLoading ? <>\n                                        <div class='spinner-border text-primary' role='status'>\n                                            <span class='sr-only'>Loading...</span>\n                                        </div>\n                                    </> : <>\n                                        <a href='#' style='font-size: 1.8em;' onClick={this.reloadFeeds}><i class='fas fa-sync-alt' /></a>\n                                    </>}\n                                </div>\n                            </small>\n                            <span class='text-muted'>\n                                <i class='fas fa-rss' /> <Text id='home.wall'>Veggen</Text>\n                            </span>\n                        </small>\n                    </div>\n                </div>\n                <StoryPublicDetail stores={this.props.stores} story={story} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n// const fieldSorter = (fields) => (a, b) => fields.map(o => {\n//     let dir = 1;\n//     if (o[0] === '-') { dir = -1; o=o.substring(1); }\n//     return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n// }).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            // this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    // insertWorkouts = () => {\n    //     const { storyStore } = this.props.stores;\n    //     const { publicWorkouts, publicFeed } = storyStore;\n    //     if (publicWorkouts.length) {\n    //         const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n    //         storyStore.localUpdateField('publicFeed', finalArray);\n    //     }\n    // }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories, publicDogs } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={publicDogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n"],"sourceRoot":""}