{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/workout/status.js","webpack:///./components/story/add.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/comments.js","webpack:///./components/team/publicFeed.js","webpack:///./components/user/updateSettings.js","webpack:///./components/workout/table.js","webpack:///./components/story/publicFeed.js","webpack:///./components/races/index.js","webpack:///./components/notifications/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","viewmenu","Home","observer","Component","constructor","props","super","loadTeamInfo","async","loadWorkoutSummary","loadWorkoutPlans","year","currentMonth","Date","getMonth","currentYear","util","getYear","seasonStart","parseInt","workoutPlanStore","workoutStore","userStore","stores","team","currentTeam","id","load","query","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","prepareWeekGraphs","updateItem","resetGraphPlanWeekDistanceCurrent","loadDogs","dogStore","addData","reloadFeeds","e","preventDefault","setState","loadStoriesPublicFeed","loadTeamsPublicFeed","setViewMenu","menu","target","closest","dataset","this","chooseSubmenu","parentElement","state","appState","getFingerprint","getInfo","getNotifications","Promise","all","loadTeams","teamStore","skipMusherWorkoutSummary","getFeed","getWorkoutSummary","storyStore","loadPublicFeed","componentDidMount","loadAll","render","stravaActivityStore","garminActivityDetailsStore","workoutPlan","darkmode","viewmode","workouts","teams","tracks","isAdmin","dogs","totalTeams","length","totalDogs","totalTracks","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","currentTeamObject","findTeam","workoutSummary","workoutSummary2019","findWorkoutSummary","findWorkoutSummaryTotal","workoutSummary2020","user","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","format","indexOf","url","onClick","data-menu","callback","key","distancekm","currentSeason","prevSeason","showHeader","strava","map","act","activity","garmin","fields","total","name","workout","StoryAdd","commentStory","inputRefObject","story","comment","response","status","resizeTextarea","inputRef","displayNameShort","firstname","ucfirst","lastname","email","userImage","image","images","undefined","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","value","ref","WorkoutStatus","language","MONTHS","getMonths","months","monthRange","lastPlanMonth","month","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","aria-valuenow","aria-valuemin","aria-valuemax","title","body","public","showAddImage","addStory","insert","data","addImages","push","addImage","handleImageErrored","onerror","setTimeout","src","col","offset","c","teamId","checked","data-id","img","onError","removeImage","data-name","object","updateField","StoryCommentReply","commentId","commentReplyStory","showAddComment","showAllComments","showAllReplies","StoryComments","likeComment","likeStoryComment","likeReply","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","compact","currentUser","max_comments","filteredComments","totalComments","diplayedComments","comments","slice","Math","max","reverse","displayName","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","markdown","replaceImages","markdownOpts","getMarkdownOptions","formatDistance","createdDate","locale","reply","hasLikedReply","data-comment","more","displayDistance","distanceKm","viewImageIdx","TeamPublicFeed","toggleDate","stopPropagation","showDate","likeWorkout","workoutId","addLikeToFeed","addCommentToFeed","console","log","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","addLikeToWorkout","toggleAddComment","viewImage","idx","publicTeamsFeed","feed","findPublicTeam","hasLikedWorkout","totalFollowers","followers","isYourTeam","members","isFollowing","hasRequestedFollow","followRequests","mapImage","imgs","toJS","imageIdx","currentImage","date","formatDate","hour12","hour","minute","equipment","findEquipment","elevation","speedAvg","track","dogsLeft","dogsRight","sledWeight","kcalBurnedTotal","kcalMeatGramsTotal","kcalSalmonGramsTotal","kcalFatGramsTotal","duration","s3LargeLink","data-idx","buttonOnly","toggleSetting","field","settings","updateSetting","hideSettings","forceShow","summaryEmails","infoEmails","partnerEmails","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","floor","xTicks","i","l","m","scope","StoryPublicFeed","likeStory","storyId","publicFeed","hasLikedStory","line","isString","text","match","RegExp","exec","parsedLanguageText","replace","p1","p2","isObject","s3XXLargeLink","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","raceStore","loadRace","componentWillReceiveProps","nextProps","newsStore","notifications","races","newsList","sort","a","b","startDate","race","today","endDate","signupStartDate","signupEndDate","active","s3MediumLink","ingress","classes","currentClass","profile","main","searchText","Notifications","unread","filter","read"],"mappings":"otBAMA,MAAMA,EAAaC,IAAGC,WAAU,GAC1BC,EAAgBF,IAAGG,eACnBC,EAAsBJ,IAAGK,mBAqBzBC,EAAe,CACpBC,WAAW,EACXC,QAAS,eACTC,SAAU,Q,IAILC,EADLC,Y,EAAD,cACmBC,YACfC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAwBtBE,aAAeC,uBACR,EAAKC,2BACL,EAAKC,oBA1BU,KAgDtBA,iBAAmBF,eAAOH,EAAQ,EAAKA,OACtC,MAAM,KAAEM,GAASN,EAEXO,GAAe,IAAIC,MAAOC,WAAa,EACvCC,EAAcC,IAAKC,UACnBC,EAAcC,SAASR,IAASC,EAAe,EAAIG,EAAc,EAAIA,GAAc,KACnF,iBAAEK,EAAF,aAAoBC,EAApB,UAAkCC,GAAcjB,EAAMkB,QACtD,KAAEC,GAASF,GACX,YAAEG,EAAcD,EAAKE,IAAOL,EAElC,GAAII,EAAa,OACVL,EAAiBO,KAAK,CAAEC,MAAO,CACpCJ,KAAMC,EACNI,WAAYX,EACZY,YAAa,KAEd,MAAM,aAAEC,GAAiBX,EACnBY,EAAqBD,EAAa,IAAM,GAC1CC,EAAmBN,WAChBN,EAAiBO,KAAKK,EAAmBN,IAC/CN,EAAiBa,kBAAkB,CAAEtB,eAGtCS,EAAiBc,WAAW,eAAgB,IAC5Cd,EAAiBc,WAAW,cAAe,IAC3Cd,EAAiBe,qCAzEG,KA6EtBC,SAAW5B,iBACV,MAAM,SAAE6B,GAAa,EAAKhC,MAAMkB,QAC1B,YAAEE,GAAgBY,QAElBA,EAASV,KAAK,CAAEC,MAAO,CAAEJ,KAAMC,GAAea,QAAS,CAAC,qBAjFzC,KAoFtBC,YAAc/B,eAAOgC,GACpBA,EAAEC,iBACF,EAAKC,SAAS,CAAE5C,WAAW,UACrB,EAAK6C,8BACL,EAAKC,sBACX,EAAKF,SAAS,CAAE5C,WAAW,KAzFN,KAsGtB+C,YAAeL,IACdA,EAAEC,iBACF,MAAMK,EAAON,EAAEO,OAAOC,QAAQ,KAAKC,QAAQH,KAC3CI,KAAKR,SAAS,CAAE1C,SAAU8C,KAzGL,KA4GtBK,cAAiBX,IAEhBU,KAAKR,SAAS,CAAE3C,QADAyC,EAAEO,OAAOK,cAAcH,QAAQH,MAAQN,EAAEO,OAAOE,QAAQH,QA3GlEI,KAAKG,M,+VAAL,IACOxD,GAId,gBACC,MAAM,SAAEyD,EAAF,UAAYhC,GAA4B4B,KAAK7C,MAAMkB,OACzD2B,KAAKR,SAAS,CAAE5C,WAAW,UACfwD,EAASC,uBACTjC,EAAUkC,gBAChBlC,EAAUmC,yBAEVP,KAAKzC,2BAELiD,QAAQC,IAAI,CACjBT,KAAKxC,mBACLwC,KAAKU,cAGNV,KAAKR,SAAS,CAAE5C,WAAW,IAS5B,gBAAgBO,EAAQ6C,KAAK7C,OAC5B,MAAM,UAAEwD,EAAF,aAAaxC,GAAiBhB,EAAMkB,QACpC,YAAEE,GAAgBJ,QAClBwC,EAAUlC,KAAK,CAAEC,MAAO,CAAEJ,KAAMC,EAAaqC,0BAA0B,GAAQxB,QAAS,CAAC,oBAGhG,iBACC,MAAM,UAAEhB,GAAc4B,KAAK7C,MAAMkB,aACrBD,EAAUyC,QAAQ,IAG/B,2BACC,MAAM,UAAEzC,EAAF,aAAaD,GAAiB6B,KAAK7C,MAAMkB,QACzC,YAAEE,GAAgBJ,QAEZC,EAAU0C,kBAAkB,CAAExC,KAAMC,IA+CjD,4BAA4BpB,EAAQ6C,KAAK7C,OACxC,MAAM,WAAE4D,GAAe5D,EAAMkB,aACvB0C,EAAWC,iBAGlB,0BAA0B7D,EAAQ6C,KAAK7C,OACtC,MAAM,UAAEwD,GAAcxD,EAAMkB,aACtBsC,EAAUK,iBAcjBC,oBACCjB,KAAKkB,UAGNC,SACC,MAAM,UAAEvE,EAAF,QAAaC,EAAb,SAAsBC,GAAakD,KAAKG,OACxC,UAAE/B,EAAF,SAAuBgC,EAAvB,iBAAiClC,EAAjC,UAAmDyC,EAAnD,aAA8DxC,EAA9D,oBACLiD,EADK,2BACgBC,GAA+BrB,KAAK7C,MAAMkB,QAC1D,YAAEiD,EAAF,aAAezC,GAAiBX,GAChC,SAAEqD,EAAF,SAAYC,GAAapB,GACzB,SACLqB,EADK,MAELC,EAFK,OAEEC,EAFF,QAEUC,EAFV,KAEmBC,GACrBzD,EASE0D,EAAaJ,EAAMK,OACnBC,EAAYH,EAAKE,OACjBE,EAAcN,EAAOI,QAErB,YAAExD,EAAF,4BAAe2D,EAAf,UAA4CC,EAA5C,cAAuDC,EAAvD,aAAsEC,EAAtE,UAAoFC,GAAcnE,EAElGoE,EAAoBnE,EAAUoE,SAASjE,GAAa,IACpD,eAAEkE,GAAmB9B,EACrB+B,GAAsBnE,EAAcoC,EAAUgC,mBAAmBpE,EAAa,MAAQoC,EAAUiC,wBAAwB,QAAU,GAC5HC,IAAsBtE,EAAcoC,EAAUgC,mBAAmBpE,EAAa,MAAQoC,EAAUiC,wBAAwB,QAAU,IAExI,KAAEE,IAAS1E,GACX,iBAAE2E,IAAqB3B,GACvB,sBAAE4B,IAA0B3B,EAElC,OACC,mBAAK4B,MAAM,kBAAkBC,MAAQ,kBAAiB3G,kBAA8BH,MACnF,mBAAK6G,MAAM,qBAAqBC,MAAQ,eAAczG,wBAA0C8E,EAAW,UAAY,cACrHK,GAAW,mBAAKqB,MAAQ,8BACxB,iBAAGE,KAAK,SAASF,MAAM,iCAAgC,wBAAM,iBAAGA,MAAM,uBAAf,IAAuC,YAAC,IAAD,CAAMzE,GAAG,cAAT,YAE/F,mBAAKyE,MAAQ,2DACZ,iBAAGE,KAAK,IAAIF,MAAM,+BAA8B,wBAAM,iBAAGA,MAAM,sBAAf,IAAsC,YAAC,IAAD,CAAMzE,GAAG,kBAAT,gBAEvF,mBAAKyE,MAAQ,8BACZ,iBAAGE,KAAK,QAAQF,MAAM,iCAAgC,wBAAM,iBAAGA,MAAM,eAAf,IAA+B,YAAC,IAAD,CAAMzE,GAAG,aAAT,WAEtF,mBAAKyE,MAAQ,8BACZ,iBAAGE,KAAK,QAAQF,MAAM,iCAAgC,wBAAM,iBAAGA,MAAM,gBAAf,IAAgC,YAAC,IAAD,CAAMzE,GAAG,aAAT,YAIvF2D,GAAaD,GAA+B,mBAC5C,mBAAKe,MAAM,OACV,mBAAKA,MAAM,yFACV,kBAAIA,MAAM,iCAAV,WAEC,mBAAKA,MAAM,oBAAoBG,KAAK,YAErC,mBAAKH,MAAM,YACV,mBAAKA,MAAM,qCAAqCC,MAAM,qBAAqBpF,IAAKuF,SAASf,IACzF,mBAAKW,MAAM,qCAAqCC,MAAM,qBAAqBpF,IAAKwF,OAAsB,IAAfjB,EAAoB,GAA3G,SACA,mBAAKY,MAAM,qCAAqCC,MAAM,qBAAqBpF,IAAKwF,OAAOlB,EAAgB,IAAM,GAA7G,QAED,iBAAGa,MAAM,2BAA2BE,KAAK,sBAAqB,YAAC,IAAD,CAAM3E,GAAG,2BAAT,sBAOhE,CAAC,QAAQ+E,QAAQ/B,IAAa,EAAI,mBAClC,YAAC,IAAD,CAAInD,OAAQ2B,KAAK7C,MAAMkB,OAAQmF,IAAKxD,KAAK7C,MAAMqG,MAC/C,YAAC,IAAD,CAAUnF,OAAQ2B,KAAK7C,MAAMkB,SAE7B,mBAAK4E,MAAM,OACV,mBAAKA,MAAM,2EACV,yBACC,yBACC,mBAAKA,MAAM,eACTrG,EAAY,mBACZ,mBAAKqG,MAAM,8BAA8BG,KAAK,UAC7C,oBAAMH,MAAM,WAAZ,gBAEI,mBACL,iBAAGE,KAAK,IAAID,MAAM,oBAAoBO,QAASzD,KAAKX,aAAa,iBAAG4D,MAAM,uBAI5E,kBAAIA,MAAM,uBACT,kBAAIA,MAAM,YACT,iBAAGA,MAAQ,aAAwB,SAAbnG,EAAsB,SAAW,IAAMqG,KAAK,IAAIM,QAASzD,KAAKL,YAAa+D,YAAU,QAAO,YAAC,IAAD,CAAMlF,GAAG,aAAT,YAEnH,kBAAIyE,MAAM,YACT,iBAAGA,MAAQ,aAAwB,YAAbnG,EAAyB,SAAW,IAAMqG,KAAK,IAAIM,QAASzD,KAAKL,YAAa+D,YAAU,WAAU,YAAC,IAAD,CAAMlF,GAAG,iBAAT,eAEzH,kBAAIyE,MAAM,YACT,iBAAGA,MAAQ,aAAwB,WAAbnG,EAAwB,SAAW,IAAMqG,KAAK,IAAIM,QAASzD,KAAKL,YAAa+D,YAAU,UAAS,YAAC,IAAD,CAAMlF,GAAG,eAAT,kBAQ9G,SAAb1B,GAAuB,mBACvB,YAAC,IAAD,CAAiBuB,OAAQ2B,KAAK7C,MAAMkB,UAEvB,YAAbvB,GAA0B,mBAC1B,YAAC,IAAD,CAAgBuB,OAAQ2B,KAAK7C,MAAMkB,UAEtB,WAAbvB,GAAyB,mBACzB,mBAAKmG,MAAM,2EACV,YAAC,IAAD,CAAO5E,OAAQ2B,KAAK7C,MAAMkB,OAAQsF,SAAU3D,KAAK3C,aAAcuG,IAAM,SAAQrF,KAE9E,YAAC,IAAD,CAAeF,OAAQ2B,KAAK7C,MAAMkB,OAAQuF,IAAM,UAASf,GAAmBgB,WAAcC,cAAejB,GAAoBkB,WAAYrB,IACzI,YAAC,IAAD,CAAerE,OAAQ2B,KAAK7C,MAAMkB,OAAQuF,IAAM,UAASf,GAAmBgB,WAAcC,cAAejB,GAAoBkB,WAAYrB,MAErI,mBACL,mBAAKO,MAAM,OACV,mBAAKA,MAAM,2EACV,YAAC,IAAD,CAAO5E,OAAQ2B,KAAK7C,MAAMkB,OAAQsF,SAAU3D,KAAK3C,aAAcuG,IAAM,SAAQrF,KAE9E,mBAAK0E,MAAM,8DAORrG,GAAa6F,GAA4C,IAA1BA,EAAeV,QAC/C,mBAAKkB,MAAM,sCACV,mBAAKA,MAAM,eACV,mBAAKA,MAAM,aACV,iBAAGA,MAAM,gBAEV,sBACC,YAAC,IAAD,CAAMzE,GAAG,sBAAT,8BAED,qBACC,YAAC,IAAD,CAAMA,GAAG,uBAAT,2IAGD,qBACC,YAAC,IAAD,CAAMA,GAAG,uBAAT,yOAID,qBACC,YAAC,IAAD,CAAMA,GAAG,uBAAT,wOAKF,sBACC,YAAC,IAAD,CAAMA,GAAG,oBAAT,2BAED,sBACEsD,EAAa,GAAK,sBAAI,iBAAGmB,MAAM,oBAAoBE,KAAK,WAAU,YAAC,IAAD,CAAM3E,GAAG,qBAAT,4BAClEwD,EAAY,GAAK,sBAAI,iBAAGiB,MAAM,oBAAoBE,KAAK,UAAS,YAAC,IAAD,CAAM3E,GAAG,qBAAT,4BAChEyD,EAAc,GAAK,sBAAI,iBAAGgB,MAAM,oBAAoBE,KAAK,YAAW,YAAC,IAAD,CAAM3E,GAAG,qBAAT,4BACrE,sBAAI,iBAAGyE,MAAM,oBAAoBE,KAAK,cAAa,YAAC,IAAD,CAAM3E,GAAG,qBAAT,uCAKtD,YAAC,IAAD,CAAcH,OAAQ2B,KAAK7C,MAAMkB,OAAQzB,UAAWA,EAAWgH,IAAM,SAAQtC,EAAY9C,MAAMK,EAAakD,WAC3G,CAAC,OAAQ,YAAYwB,QAAQ/B,IAAa,GAAK,mBAC/C,YAAC,IAAD,CACCnD,OAAQ2B,KAAK7C,MAAMkB,OACnBzB,UAAWA,EACXgH,IAAM,iBAAgBtC,EAAY9C,MAAMK,EAAakD,SACrDiC,YAAY,OAOhB,YAAC,IAAD,CAAI3F,OAAQ2B,KAAK7C,MAAMkB,OAAQmF,IAAKxD,KAAK7C,MAAMqG,MAE/C,mBAAKP,MAAM,OACV,mBAAKA,MAAM,kEACV,mBAAKA,MAAM,OAEV,mBAAKA,MAAM,iBACV,sBACCA,MAAQ,iBAA4B,UAAZpG,EAAsB,aAAe,mCAC7DqG,MAAM,6CACNQ,YAAU,QACVD,QAASzD,KAAKC,eACd,iBAAGgD,MAAM,eALV,IAK0B,YAAC,IAAD,CAAMzE,GAAG,cAAT,SAG3B,mBAAKyE,MAAM,iBACV,sBACCA,MAAQ,iBAA4B,iBAAZpG,EAA6B,cAAgB,oCACrEqG,MAAM,6CACNQ,YAAU,eACVD,QAASzD,KAAKC,eACd,iBAAGgD,MAAM,mBALV,IAK8B,YAAC,IAAD,CAAMzE,GAAG,iBAAT,eAE/B,mBAAKyE,MAAM,iBACV,sBACCA,MAAQ,iBAA4B,WAAZpG,EAAuB,cAAgB,oCAC/DqG,MAAM,6CACNQ,YAAU,SACVD,QAASzD,KAAKC,eACd,iBAAGgD,MAAM,kBALV,IAK6B,YAAC,IAAD,CAAMzE,GAAG,eAAT,aAE9B,mBAAKyE,MAAM,iBACV,sBACCA,MAAQ,iBAA4B,sBAAZpG,EAAkC,cAAgB,oCAC1EqG,MAAM,6CACNQ,YAAU,oBACVD,QAASzD,KAAKC,eACd,iBAAGgD,MAAM,sBALV,IAKiC,YAAC,IAAD,CAAMzE,GAAG,eAAT,cAIvB,UAAZ3B,GAAuB,mBAAKoG,MAAM,6DAClC,YAAC,IAAD,CAAO5E,OAAQ2B,KAAK7C,MAAMkB,UAEd,iBAAZxB,GAA8B,mBAAKoG,MAAM,6DACzC,YAAC,IAAD,MACA,YAAC,IAAD,CAAc5E,OAAQ2B,KAAK7C,MAAMkB,UAErB,WAAZxB,GAAwB,mBAAKoG,MAAM,6DACnC,YAAC,IAAD,CAAe5E,OAAQ2B,KAAK7C,MAAMkB,OAAQuF,IAAM,UAASf,GAAmBgB,WAAcC,cAAejB,GAAoBkB,WAAYrB,KAE7H,sBAAZ7F,GAAmC,mBAAKoG,MAAM,6DAC9C,YAAC,IAAD,CAAe5E,OAAQ2B,KAAK7C,MAAMkB,OAAQuF,IAAM,UAASf,GAAmBgB,WAAcC,cAAejB,GAAoBkB,WAAYrB,MAK3I,YAAC,IAAD,CAAerE,OAAQ2B,KAAK7C,MAAMkB,SAErB,iBAAZxB,GAA8B,mBAAKoG,MAAM,OAExCH,IAAQA,GAAKmB,QAAUlB,IAAoBA,GAAiBhB,OAAS,GACrE,mBACCkB,MAAM,kHACNC,MAAM,qBAEN,sBAAI,YAAC,IAAD,CAAM1E,GAAG,iCAAT,mCACHuE,IAAoBA,GAAiBmB,IAAIC,GACzC,YAAC,IAAD,CAAQ9F,OAAQ2B,KAAK7C,MAAMkB,OAAQ+F,SAAUD,EAAKP,IAAM,UAASrF,KAAe4F,EAAI3F,SAGtFsE,IAAQA,GAAKuB,QAAUrB,IAAyBA,GAAsBjB,OAAS,GAC/E,mBACCkB,MAAM,kHACNC,MAAM,qBAEN,sBAAI,YAAC,IAAD,CAAM1E,GAAG,iCAAT,mCACHwE,IAAyBA,GAAsBkB,IAAIC,GACnD,YAAC,IAAD,CAAQ9F,OAAQ2B,KAAK7C,MAAMkB,OAAQ+F,SAAUD,EAAKP,IAAM,UAASrF,KAAe4F,EAAI3F,SAItFiD,GAAYA,EAASM,OAAS,GAAK,mBAAKkB,MAAM,eAC9C,mBAAKA,MAAM,uEACV,sBACC,YAAC,IAAD,CAAMzE,GAAG,qBAAqB8F,OAAQ,CAAEC,MAAO9C,EAASM,SAAxD,yBAAyFN,EAASM,OAAlG,QACCQ,GAAqBA,EAAkBiC,MAAQ,uBAC/C,qBAAOvB,MAAM,uBAAb,IAAoC,YAAC,IAAD,CAAMzE,GAAG,6BAAT,eAApC,KAA8F+D,EAAkBiC,KAAhH,QAIF/C,GAAYA,EAASyC,IAAIO,GACzB,YAAC,IAAD,CAASpG,OAAQ2B,KAAK7C,MAAMkB,OAAQoG,QAASA,a,EActC1H,a,iKC3aT2H,EADL1H,Y,EAAD,cACuBC,YAAU,gDAC7B0H,aAAerH,iBACX,MAAM,SAAEqG,EAAW,SAAb,eAAuBiB,EAAiB,IAAO,EAAKzH,OACpD,MAAE0H,GAAU,EAAK1H,OACvB,WAAE4D,GAAe,EAAK5D,MAAMkB,QACtB,QAAEyG,EAAU,IAAO,EAAK3E,MAC9B4E,QAAiBhE,EAAW4D,aAAa,CAAEnG,GAAIqG,EAAMrG,GAAIsG,YAC3DC,GAAgC,MAApBA,EAASC,SACf,EAAKxF,SAAS,CACVsF,QAAS,IACV,KACCzI,IAAG4I,eAAeL,EAAeC,EAAMrG,OAE3CmF,EAAS,CAAEkB,QAAOE,eAI1B5D,SACI,MAAM,SAAE+D,GAAalF,KAAK7C,OACpB,QAAE2H,GAAY9E,KAAKG,OACnB,UAAE/B,GAAc4B,KAAK7C,MAAMkB,QAC3B,KAAEyE,EAAO,IAAO1E,EAChB+G,EAAmBrC,EAAKsC,UAAa,GAAEtH,IAAKuH,QAAQvC,EAAKsC,WAAW,KAAQtH,IAAKuH,QAAQvC,EAAKwC,UAAU,KAAW,GAAExH,IAAKuH,QAAQvC,EAAKyC,OAAS,IAAI,GAEpJC,EAAY1C,EAAK2C,QAAU3C,EAAK4C,OAAS5C,EAAK4C,OAAO,QAAKC,GAEhE,OACI,uBACI,mBAAK1C,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAUsC,EAAa,0BAAyBA,EAAUI,yCAA2C,IAA7F,mCAEN9C,EAAK2C,OAAS,oBAAMxC,MAAM,sBAAsBC,MAAM,oBAAoBiC,IAEhF,mBAAKlC,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU4C,IAAI,mBAAkB,YAAC,IAAD,CAAMrH,GAAG,oBAAT,cAC7C,YAAC,IAAD,KACI,wBACIyE,MAAM,kCACN6C,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMvH,GAAG,0BAAT,yBACbwH,QAASC,YAAUjG,KAAM,WACzBkG,QAAS7J,IAAG4I,eACZ/B,MAAM,iBACNiD,MAAOrB,EACPsB,IAAKlB,MAIjB,mBAAKjC,MAAM,uCACP,sBAAQ6C,KAAK,SAAS7C,MAAM,uBACxBQ,QAASzD,KAAK2E,cACjB,YAAC,IAAD,CAAMnG,GAAG,wBAAT,kB,EAWlBkG,O,+HCpET2B,EADLrJ,Y,EAAD,cAC4BC,YACxBkE,SACF,MACY,UAAE/C,EAAF,iBAAaF,EAAb,UAA+ByC,GAAcX,KAAK7C,MAAMkB,QACxD,KAAEyE,GAAS1E,GACX,SAAEkI,EAAW,MAASxD,EAC5ByD,EAASlK,IAAGmK,UAAUF,IAEtB,KAAEhI,GAASqC,GAEL,KAAElD,GAASuC,KAAK7C,MACtBO,GAAe,IAAIC,MAAOC,WAAa,EACjCC,EAAcJ,GAAQK,IAAKC,UACjCC,EAAcC,SAASP,EAAe,EAAIG,EAAc,EAAIA,EAAa,IACnE4I,EAAS3I,IAAK4I,WAAc1I,EAAF,SAA0BA,EAAc,EAAhB,UACxD,IAAI2I,EAEJ,OACI,mBAAK1D,MAAM,wBACP,mBAAKA,MAAM,YACP,mBAAKA,MAAM,UACP,sBACI,YAAC,IAAD,CAAMzE,GAAG,wBAAT,yBAIZ,mBAAKyE,MAAM,+BACNwD,GAAUA,EAAOvC,IAAK0C,IACnB,GAAIA,EAAMnJ,KAAOI,GAAgB+I,EAAMnJ,OAASI,GAAe+I,EAAMA,OAASlJ,EAC1E,MAAO,GAEX,MAAMmJ,EAAY3I,EAAiB4I,oBAAoBF,EAAMnJ,KAAMmJ,EAAMA,MAAQ,GACjF,IAAKC,EACD,MAAO,GAEXF,EAAgBE,EAChB,MACME,EADe3I,EAAU4I,wBAAwBJ,EAAMnJ,KAAMmJ,EAAMA,MAAQ,GAC5CC,EAAY,IAC3CI,EAASF,EAAgB,IAAM,IAAMjJ,IAAKwF,OAAOyD,EAAe,GACtE,OACI,mBAAK9D,MAAM,qBASP,mBAAKA,MAAM,0BACP,mBAAKA,MAAQ,YAAWC,IAAM,yBAC1BA,MAAO,mCAEP,mBAAKD,MAAM,+CAA+CG,KAAK,cAC3DF,MAAQ,WAAU+D,mBAClBC,gBAAeD,EAAQE,gBAAc,IAAIC,gBAAc,OAEtDtJ,IAAKwF,OAAOyD,EAAe,GAJhC,OAQR,mBAAK9D,MAAM,cACNsD,EAAOK,EAAMA,OADlB,IAC2BA,EAAMnJ,UAK3CkJ,GAAiB,mBAAK1D,MAAM,sBAC1B,sBACI,YAAC,IAAD,CAAMzE,GAAG,qCAAqC8F,OAAQ,CAAEE,KAAMlG,EAAKkG,OAAnE,wCAAiHlG,EAAKkG,KAAtH,a,EAUb6B,O,2eC5Ef,MAAM1J,EAAe,CACpBkI,MAAO,CACAwC,MAAO,GACPC,KAAM,GACN5B,OAAQ,GACR6B,QAAQ,GAEZC,cAAc,G,IAIZ9C,EADL1H,Y,EAAD,cACuBC,YACnBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAQnBsK,SAAWnK,iBACP,MAAM,SAAEqG,EAAW,UAAa,EAAKxG,OAC/B,MAAE0H,EAAQ,IAAO,EAAK1E,OAC5B,WAAEY,GAAe,EAAK5D,MAAMkB,OAC5B0G,QAAiBhE,EAAW2G,OAAO,CAC/BL,MAAOxC,EAAMwC,MACbC,KAAMzC,EAAMyC,KACZ5B,OAAQb,EAAMa,OACd6B,OAAQ1C,EAAM0C,OAAS,EAAI,EAC3BjJ,KAAMuG,EAAMvG,OAElByG,GAAgC,MAApBA,EAASC,eACTjE,EAAWC,iBACjB2C,EAASoB,EAAS4C,MAClB,EAAKnI,SAAS,CACVqF,MAAO,CACHwC,MAAO,GACPC,KAAM,GACN5B,OAAQ,KAEb,KACCrJ,IAAG4I,eAAe,EAAKC,SAAL,kBA7BX,KAkCnB0C,UAAY,EAAGzB,YAEX,MAAM,MAAEtB,GAAU7E,KAAKG,MACvB0E,EAAMa,OAAOmC,QAAQ1B,GACrBnG,KAAKR,SAAS,CAAEqF,WAtCD,KAyCnBiD,SAAW,KACP,MAAM,aAAEN,GAAiBxH,KAAKG,MAC9BH,KAAKR,SAAS,CACVgI,cAAeA,KA5CJ,KAgDnBO,mBAAsBzI,IAClB,MAAMmG,EAAQnG,EAAEO,OAChB4F,EAAMuC,QAAU,KAChBC,WAAW,KACPxC,EAAMyC,KAAQ,IAAG,IAAIvK,MACtB,MAnDHqC,KAAKG,M,+VAAL,IACOxD,GAEPqD,KAAKkF,SAAW,GAmDpB/D,SACI,MAAM,IAAEgH,EAAM,GAAR,OAAYC,EAAS,GAAMpI,KAAK7C,OAChC,MAAE0H,EAAF,aAAS2C,GAAiBxH,KAAKG,OAC/B,UAAE/B,EAAF,SAAagC,GAAaJ,KAAK7C,MAAMkB,QACrC,KAAEyE,EAAO,IAAO1E,EAChB+G,EAAmBrC,EAAKsC,UAAa,GAAEtH,IAAKuH,QAAQvC,EAAKsC,WAAW,KAAQtH,IAAKuH,QAAQvC,EAAKwC,UAAU,KAAW,GAAExH,IAAKuH,QAAQvC,EAAKyC,OAAS,IAAI,GAEpJC,EAAY1C,EAAK2C,QAAU3C,EAAK4C,OAAS5C,EAAK4C,OAAO,QAAKC,IAC1D,SAAEpE,GAAanB,EAErB,OACI,mBAAK6C,MAAM,SACP,mBAAKA,MAAM,gBAEP,mBAAKA,MAAQ,OAAMkF,YAAcC,+EAAoF7G,EAAW,QAAU,+BACtI,mBAAK0B,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAUsC,EAAa,0BAAyBA,EAAUI,yCAA2C,IAA7F,mCAEN9C,EAAK2C,OAAS,oBAAMxC,MAAM,sBAAsBC,MAAM,oBAAoBiC,IAEhF,mBAAKlC,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU4C,IAAI,mBAAkB,YAAC,IAAD,CAAMrH,GAAG,cAAT,UAC7C,YAAC,IAAD,KACI,wBACIyE,MAAM,uBACN6C,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMvH,GAAG,oBAAT,uBACbwH,QAASC,YAAUjG,KAAM,cACzBkG,QAAS7J,IAAG4I,eACZ/B,MAAM,iBACNiD,MAAOtB,EAAMyC,KACblB,IAAKiC,GAAKrI,KAAKkF,SAAL,aAAgCmD,MAItD,mBAAKpF,MAAM,uCACP,sBAAQ6C,KAAK,SAAS7C,MAAM,uBACxBQ,QAASzD,KAAKyH,UACjB,iBAAGxE,MAAM,4BAK1B,uBACI,mBAAKA,MAAM,OACP,mBAAKA,MAAM,qBACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACNzE,GAAG,OACHwH,QAASC,YAAUjG,KAAM,eAExB8C,EAAKpB,OAASoB,EAAKpB,MAAMwC,IAAKoE,IAC3B,MAAMhK,EAAOF,EAAUoE,SAAS8F,GAAQ,GACxC,OAAIhK,GAAQA,EAAKiJ,OACL,sBAAQpB,MAAO7H,EAAKE,IAAKF,EAAKkG,MAEnC,MAGT1B,EAAKpB,OAAS,mBACZ,sBAAQyE,MAAM,IAAd,wBAMpB,mBAAKlD,MAAM,qBACP,mBAAKA,MAAM,cACP,mBAAKA,MAAM,gEACP,yBACI,qBACI6C,KAAK,WACL7C,MAAM,uBACNzE,GAAG,SACHwH,QAASC,YAAUjG,KAAM,gBACzBuI,QAAyB,GAAhB1D,EAAM0C,SAEnB,qBAAOtE,MAAM,uBAAuB4C,IAAI,UAAS,YAAC,IAAD,CAAMrH,GAAG,gBAAT,kBAKjE,mBAAKyE,MAAM,qBACP,yBACI,sBAAQ6C,KAAK,SAAS7C,MAAQ,aAC1BuF,UAAS3D,EAAMrG,GACfiF,QAASzD,KAAK8H,UAEd,iBAAG7E,MAAQ,8BAJf,IAI8C,YAAC,IAAD,CAAMzE,GAAG,mBAAT,gBAItD,mBAAKyE,MAAM,sBACNuE,GAAgB,mBACb,mBAAKvE,MAAM,mBACP,mBAAKA,MAAM,OACN4B,EAAMa,QAAUb,EAAMa,OAAOxB,IAAIuE,GAC9B,mBAAKxF,MAAM,aACP,mBAAKiF,IAAKO,EAAI7C,YAAa3C,MAAM,YAAYyF,QAAS1I,KAAK+H,qBAC3D,sBAAQ9E,MAAM,sBACVQ,QAASzD,KAAK2I,YACdC,YAAWH,EAAIjE,MAClB,iBAAGvB,MAAM,iBAHV,YAQhB,YAAC,IAAD,CAAQ4F,OAAQhE,EAAOiE,YAAa9I,KAAK4H,uB,EAYlElD,Q,sgBCjIAqE,I,EAAAA,EApEd/L,Y,EAAD,cACgCC,YAAU,gDACtC0H,aAAerH,iBACX,MAAM,SAAEqG,EAAW,SAAb,UAAuBqF,EAAvB,eAAkCpE,EAAiB,IAAO,EAAKzH,OAC/D,MAAE0H,GAAU,EAAK1H,OACvB,WAAE4D,GAAe,EAAK5D,MAAMkB,QACtB,QAAEyG,EAAU,IAAO,EAAK3E,MAC9B4E,QAAiBhE,EAAWkI,kBAAkB,CAAEzK,GAAIqG,EAAMrG,GAAIwK,YAAWlE,YAC3EC,GAAgC,MAApBA,EAASC,SACf,EAAKxF,SAAS,CACVsF,QAAS,IACV,KACCzI,IAAG4I,eAAeL,EAAeoE,MAErCrF,EAAS,CAAEkB,QAAOE,WAAUiE,gBAIpC7H,SACI,MAAM,SAAE+D,GAAalF,KAAK7C,OACpB,QAAE2H,GAAY9E,KAAKG,OACnB,UAAE/B,GAAc4B,KAAK7C,MAAMkB,QAC3B,KAAEyE,EAAO,IAAO1E,EAChB+G,EAAmBrC,EAAKsC,UAAa,GAAEtH,IAAKuH,QAAQvC,EAAKsC,WAAW,KAAQtH,IAAKuH,QAAQvC,EAAKwC,UAAU,KAAW,GAAExH,IAAKuH,QAAQvC,EAAKyC,OAAS,IAAI,GAEpJC,EAAY1C,EAAK2C,QAAU3C,EAAK4C,OAAS5C,EAAK4C,OAAO,QAAKC,GAEhE,OACI,mBAAK1C,MAAM,SACP,mBAAKA,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAUsC,EAAa,0BAAyBA,EAAUI,yCAA2C,IAA7F,mCAENJ,GAAa,oBAAMvC,MAAM,sBAAsBC,MAAM,oBAAoBiC,IAE/E,mBAAKlC,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU4C,IAAI,mBAAkB,YAAC,IAAD,CAAMrH,GAAG,oBAAT,cAC7C,YAAC,IAAD,KACI,wBACIyE,MAAM,kDACN6C,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMvH,GAAG,0BAAT,yBACbwH,QAASC,YAAUjG,KAAM,WACzBkG,QAAS7J,IAAG4I,eACZ/B,MAAM,iBACNiD,MAAOrB,EACPsB,IAAKlB,MAIjB,mBAAKjC,MAAM,uCACP,sBAAQ6C,KAAK,SAAS7C,MAAM,8BACxBQ,QAASzD,KAAK2E,cACjB,YAAC,IAAD,CAAMnG,GAAG,wBAAT,kB,ECvDjC,MAAM7B,EAAe,CACjBuM,eAAgB,GAChBC,iBAAiB,EACjBC,eAAgB,I,IAMdC,EADLrM,Y,EAAD,cAC4BC,YACvBC,YAAYC,GAAO,MAChBC,MAAMD,GADU,YAQpBmM,YAAchM,eAAOgC,GACjB,MAAM,SAAEqE,EAAW,UAAa,EAAKxG,MAC/B6L,EAAY1J,EAAEO,OAAOK,cAAcH,QAAQvB,IAAMc,EAAEO,OAAOE,QAAQvB,IAElE,MAAEqG,GAAU,EAAK1H,OACvB,WAAE4D,GAAe,EAAK5D,MAAMkB,OAC5B0G,QAAiBhE,EAAWwI,iBAAiB,CAAE/K,GAAIqG,EAAMrG,GAAIwK,cAK7D,OAHFjE,GAAgC,MAApBA,EAASC,QACfrB,EAAS,CAAEmC,KAAM,cAAejB,QAAOmE,YAAWjE,cAE/C,GAnBS,KAsBpByE,UAAYlM,eAAOgC,GACf,MAAM,SAAEqE,EAAW,UAAa,EAAKxG,MAE/BsM,EAAUnK,EAAEO,OAAOK,cAAcH,QAAQvB,IAAMc,EAAEO,OAAOE,QAAQvB,GAChEwK,EAAY1J,EAAEO,OAAOK,cAAcH,QAAQ+E,SAAWxF,EAAEO,OAAOE,QAAQ+E,SAEvE,MAAED,GAAU,EAAK1H,OACvB,WAAE4D,GAAe,EAAK5D,MAAMkB,OAC5B0G,QAAiBhE,EAAW2I,sBAAsB,CAAElL,GAAIqG,EAAMrG,GAAIiL,UAAST,cAEvEjE,GAAgC,MAApBA,EAASC,QACrBrB,EAAS,CAAEmC,KAAM,YAAajB,QAAOmE,YAAWS,UAAS1E,cAjC7C,KAqCpB4E,aAAerM,eAAOgC,GAClB,MAAM0J,EAAY1J,EAAEO,OAAOK,cAAcH,QAAQvB,IAAMc,EAAEO,OAAOE,QAAQvB,IAElE,eAAE0K,GAAmB,EAAK/I,MAChC+I,EAAeF,IAAcE,EAAeF,GAClD,EAAKxJ,SAAS,CACb0J,kBACE,KACW,EAAKhE,SAAS8D,IACd,EAAK9D,SAAS8D,GAAWY,WA9CjB,KAmDpBC,eAAiB,KACnB,MAAM,gBAAEV,GAAoBnJ,KAAKG,MACjCH,KAAKR,SAAS,CACb2J,iBAAkBA,KAtDG,KA0DpBW,cAAiBxK,IACb,MAAM0J,EAAY1J,EAAEO,OAAOK,cAAcH,QAAQvB,IAAMc,EAAEO,OAAOE,QAAQvB,IACxE,eAAE4K,GAAmBpJ,KAAKG,MAC1BiJ,EAAeJ,IAAcI,EAAeJ,GAClDhJ,KAAKR,SAAS,CACb4J,oBA7DKpJ,KAAKG,M,+VAAL,IACOxD,GAEPqD,KAAKkF,SAAW,GA8DpB/D,SACI,MAAM,eAAE+H,EAAF,gBAAkBC,EAAlB,eAAmCC,GAAmBpJ,KAAKG,OACjE,MAAE0E,EAAF,SAASlB,EAAW,SAApB,QAA8BoG,GAAU,GAAU/J,KAAK7C,OACjD,UAAEiB,GAAc4B,KAAK7C,MAAMkB,QACzByE,KAAMkH,EAAR,SAAqB1D,EAAW,MAASlI,EAE/C,IAGI6L,EAHAC,EAAmB,GACnBC,EAAgB,EAChBC,EAAmB,EAcvB,OAZIvF,EAAMwF,WACNF,EAAgBtF,EAAMwF,SAAStI,OAC3BoH,EACAe,EAAmBrF,EAAMwF,UAGzBJ,EAAeF,EAAU,EAvFpB,EAwFLG,EAAmBrF,EAAMwF,SAASC,MAAMC,KAAKC,IAAIL,EAAgBF,EAAc,KAEnFG,EAAmBF,EAAiBnI,QAIpC,uBACK8C,GAASqF,GAAoBA,EAAiBO,UAAUvG,IAAKY,IAC1D,MAAM,KAAEhC,EAAO,IAAOgC,EAChBK,EAAmBrC,EAAKsC,UAAa,GAAEtH,IAAKuH,QAAQvC,EAAKsC,WAAW,KAAQtH,IAAKuH,QAAQvC,EAAKwC,UAAU,KAAW,GAAExH,IAAKuH,QAAQvC,EAAKyC,OAAS,IAAI,GACpJmF,EAAc5H,EAAKsC,UAAa,GAAEtC,EAAKsC,aAAatC,EAAKwC,WAAc,GAAExC,EAAKyC,MAC9EC,EAAY1C,EAAK2C,QAAU3C,EAAK4C,OAAS5C,EAAK4C,OAAO,QAAKC,GAC1DgF,EAAkB7F,EAAQ8F,OAAS9F,EAAQ8F,MAAMC,UAAUvL,GAAKA,EAAEwD,OAASkH,EAAYxL,KAAO,EAEpG,IAAIsM,EAAmB,GACnBC,EAAe,EACfC,EAAkB,EAWtB,OAVIlG,EAAQuF,WACRU,EAAejG,EAAQuF,SAAStI,OAE5B+I,EADA1B,EAAetE,EAAQtG,IACJsG,EAAQuF,SAERvF,EAAQuF,SAASC,MAAM,EAAGL,GAEjDe,EAAkBF,EAAiB/I,QAInC,mBAAKkB,MAAM,OACP,mBAAKA,MAAM,iDACP,mBACIA,MAAQ,mEACRC,OAAUsC,EAAa,0BAAyBA,EAAUI,yCAA2C,IAA7F,mCAEN9C,EAAK2C,OAAS,oBAAMxC,MAAM,sBAAsBC,MAAM,oBAAoBiC,IAEhF,mBAAKlC,MAAM,wBAAwBC,MAAM,uBACrC,mBAAKD,MAAM,mCACP,oBAAMC,MAAM,sBACR,kBAAID,MAAM,wBAAwBC,MAAM,qBAAqBwH,GAC7D,YAAC,IAAD,CAAUO,SAAU5O,IAAG6O,cAAcpG,EAAQA,QAASA,EAAQY,OAAQY,GAAW6E,aAAc9O,IAAG+O,yBAG1G,yBACI,sBAAQnI,MAAQ,6BAA2B0H,EAAkB,eAAiB,IAC1ElH,QAASzD,KAAKsJ,YACdd,UAAS1D,EAAQtG,IAEjB,YAAC,IAAD,CAAMA,GAAG,iBAAT,QALR,IAQI,sBAAQyE,MAAM,2BACVQ,QAASzD,KAAK2J,aACdnB,UAAS1D,EAAQtG,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAZR,IAeI,sBAAQyE,MAAM,qCACTnF,IAAKuN,eAAevG,EAAQwG,YAAa,IAAI3N,KAAQ,CAAE4N,OAAQ,aAI3EzG,EAAQ8F,OAAS9F,EAAQ8F,MAAM7I,OAAS,GAAK,qBAAOkB,MAAM,4DAA4DC,MAAM,8BACzH,iBAAGD,MAAM,kCADiC,IACG6B,EAAQ8F,MAAM7I,SAGnE,mBAAKkB,MAAM,wBACN6B,GAAWgG,GAAoBA,EAAiB5G,IAAKsH,IAClD,MAAM,KAAE1I,EAAO,IAAO0I,EAChBrG,EAAmBrC,EAAKsC,UAAa,GAAEtH,IAAKuH,QAAQvC,EAAKsC,WAAW,KAAQtH,IAAKuH,QAAQvC,EAAKwC,UAAU,KAAW,GAAExH,IAAKuH,QAAQvC,EAAKyC,OAAS,IAAI,GACpJmF,EAAc5H,EAAKsC,UAAa,GAAEtC,EAAKsC,aAAatC,EAAKwC,WAAc,GAAExC,EAAKyC,MAC9EC,EAAY1C,EAAK2C,QAAU3C,EAAK4C,OAAS5C,EAAK4C,OAAO,QAAKC,GAC1D8F,EAAgBD,EAAMZ,OAASY,EAAMZ,MAAMC,UAAUvL,GAAKA,EAAEwD,OAASkH,EAAYxL,KAAO,EAE9F,OACI,mBAAKyE,MAAM,OACP,mBAAKA,MAAM,wCACP,mBACIA,MAAQ,mEACRC,OAAUsC,EAAa,0BAAyBA,EAAUI,yCAA2C,IAA7F,mCAEN9C,EAAK2C,OAAS,oBAAMxC,MAAM,sBAAsBC,MAAM,oBAAoBiC,IAEhF,mBAAKlC,MAAM,wBAAwBC,MAAM,uBACrC,mBAAKD,MAAM,2BACP,oBAAMC,MAAM,sBACR,kBAAID,MAAM,wBAAwBC,MAAM,qBAAqBwH,GAC7D,YAAC,IAAD,CAAUO,SAAU5O,IAAG6O,cAAcM,EAAM1G,QAAS0G,EAAM9F,OAAQY,GAAW6E,aAAc9O,IAAG+O,yBAGtG,yBACI,sBAAQnI,MAAQ,6BAA2BwI,EAAgB,eAAiB,IACxEhI,QAASzD,KAAKwJ,UACdkC,eAAc5G,EAAQtG,GACtBgK,UAASgD,EAAMhN,IAEf,YAAC,IAAD,CAAMA,GAAG,iBAAT,QANR,IASI,sBAAQyE,MAAM,2BACVQ,QAASzD,KAAK2J,aACdnB,UAAS1D,EAAQtG,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAbR,IAgBI,sBAAQyE,MAAM,qCACTnF,IAAKuN,eAAeG,EAAMF,YAAa,IAAI3N,KAAQ,CAAE4N,OAAQ,aAIzEC,EAAMZ,OAAS,qBAAO3H,MAAM,4DAA4DC,MAAM,8BAC3F,iBAAGD,MAAM,kCADG,IACiCuI,EAAMZ,MAAM7I,YAM5EgJ,EAAeC,EAAkB,GAAK,uBACnC,sBAAQ/H,MAAM,2BACVQ,QAASzD,KAAK8J,cACdtB,UAAS1D,EAAQtG,IAEjB,YAAC,IAAD,CAAMA,GAAG,qBAAqB8F,OAAQ,CAAEqH,KAAMZ,EAAeC,IAA7D,OACSD,EAAeC,EADxB,4BAOX9B,EAAepE,EAAQtG,KAAO,mBAAKyE,MAAM,iDACtC,YAAC,EAAD,CAAmB5E,OAAQ2B,KAAK7C,MAAMkB,OAAQwG,MAAOA,EACjDlB,SAAUA,EACVqF,UAAWlE,EAAQtG,GACnB0G,SAAUmD,GAAKrI,KAAKkF,SAASJ,EAAQtG,IAAM6J,EAC3CzD,eAAgB5E,KAAKkF,eAMxCiF,EAAgBC,EAAmB,GAAK,uBACrC,sBAAQnH,MAAM,2BACVQ,QAASzD,KAAK6J,gBAEd,YAAC,IAAD,CAAMrL,GAAG,qBAAqB8F,OAAQ,CAAEqH,KAAMxB,EAAgBC,IAA9D,OACSD,EAAgBC,EADzB,2BAKPjB,GAAmB,uBAChB,sBAAQlG,MAAM,2BACVQ,QAASzD,KAAK6J,gBAEd,YAAC,IAAD,CAAMrL,GAAG,8BAAT,mC,EAQT6K,O,qYC7Pf,SAASuC,EAAgBC,GACxB,OACQ/N,IAAKwF,OAAOuI,EADhBA,EAAa,EACe,EAGA,G,mJAKjC,MAAMlP,EAAe,CACpBuM,eAAgB,GACb4C,aAAc,I,IAIZC,EADL/O,Y,EAAD,cAC6BC,YACzBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAQnB6O,WAAc1M,IACVA,EAAE2M,kBACF3M,EAAEC,iBACF,MAAM,SAAE2M,GAAalM,KAAKG,MAC1BH,KAAKR,SAAS,CAAE0M,UAAWA,KAZZ,KAgBtBC,YAAc7O,eAAOgC,GACd,MAAM8M,EAAYnO,SAASqB,EAAEO,OAAOC,QAAQ,UAAUC,QAAQvB,GAAI,KAElE,aAAEL,GAAiB,EAAKhB,MAAMkB,OAC9B0G,QAAiB5G,EAAagO,YAAY,CAAE3N,GAAI4N,IACxB,MAApBrH,EAASC,QACT,EAAKqH,cAAcD,EAAWrH,EAAS4C,OAtB5B,KA0BnB2E,iBAAmB,EAAGxG,OAAMrB,UAASM,WAAUiE,YAAWS,cACtD8C,QAAQC,IAAI,mBAAoB,CAAE/H,UAASM,WAAUiE,cACrD,MAAM,UAAErI,GAAcX,KAAK7C,MAAMkB,OACjC,OAAQyH,GACJ,IAAK,cACDnF,EAAU8L,iBAAiB,CAAEjO,GAAIiG,EAAQjG,GAAImJ,KAAM5C,EAAS4C,KAAMqB,cAClE,MACJ,IAAK,YACDrI,EAAU+L,sBAAsB,CAAElO,GAAIiG,EAAQjG,GAAImJ,KAAM5C,EAAS4C,KAAMqB,YAAWS,YAClF,MAEJ,QACQT,EACArI,EAAUgM,2BAA2B,CAAEnO,GAAIiG,EAAQjG,GAAImJ,KAAM5C,EAAS4C,KAAMqB,cAE5ErI,EAAUiM,oBAAoB,CAAEpO,GAAIiG,EAAQjG,GAAImJ,KAAM5C,EAAS4C,SAzC5D,KA+CnB0E,cAAgB,CAAC7N,EAAImJ,KACjB,MAAM,UAAEhH,GAAcX,KAAK7C,MAAMkB,OACjCsC,EAAUkM,iBAAiB,CAAErO,KAAImJ,UAjDlB,KAoDtBmF,iBAAoBxN,IACnB,MAAM8M,EAAY9M,EAAEO,OAAOC,QAAQ,UAAUC,QAAQvB,IAC/C,eAAE0K,GAAmBlJ,KAAKG,MACtB+I,EAAekD,UACRlD,EAAekD,GAEtBlD,EAAekD,IAAa,EAEtCpM,KAAKR,SAAS,CACb0J,kBACE,KACElJ,KAAKkF,SAASkH,IACjBpM,KAAKkF,SAASkH,GAAWxC,WAhEN,KAqEnBmD,UAAazN,IACf,MAAM,GAAEd,EAAF,IAAMwO,GAAQ1N,EAAEO,OAAOC,QAAQ,OAAOC,SAChC,aAAE+L,GAAiB9L,KAAKG,MAC9B2L,EAAatN,GAAMwO,EACnBhN,KAAKR,SAAS,CAAEsM,kBAvEhB9L,KAAKG,M,+VAAL,IACOxD,GAEbqD,KAAKkF,SAAW,GAuEd,0BAA0B/H,EAAQ6C,KAAK7C,OACzC,MAAM,UAAEwD,GAAcxD,EAAMkB,aACtBsC,EAAUK,iBAGd,sBACIhB,KAAKN,sBAGZuB,oBACOjB,KAAKkB,UAGTC,SACI,MAAM,eAAE+H,EAAF,SAAkBgD,EAAlB,aAA4BJ,EAAe,IAAO9L,KAAKG,OACvD,UAAEQ,EAAF,UAAavC,EAAb,SAAwBgC,GAAaJ,KAAK7C,MAAMkB,QAChD,KAAEyE,GAAS1E,GACX,SAAEkI,EAAW,MAASxD,GACtB,gBAAEmK,GAAoBtM,GACtB,SAAEY,GAAanB,EAErB,OACI,mBAAK6C,MAAM,SACNgK,GAAmBA,EAAgB/I,IAAKgJ,IACrC,MAAM5O,EAAOqC,EAAUwM,eAAeD,EAAK5O,OAAS,GACpD,IAAImH,EACAnH,EAAKmH,OAASnH,EAAKmH,MAAMG,YACzBH,EAAQnH,EAAKmH,MACNnH,EAAKoH,QAAUpH,EAAKoH,OAAO,IAAMpH,EAAKoH,OAAO,GAAGE,cACvDH,EAAQnH,EAAKoH,OAAO,IAExB,MAAM,MAAEkF,EAAF,SAASP,GAAa6C,EACtBE,EAAkBF,EAAKtC,OAASsC,EAAKtC,MAAMC,UAAUvL,GAAKA,EAAEwD,OAASA,EAAKtE,KAAO,EACjF6O,EAAiB/O,GAAQA,EAAKgP,UAAYhP,EAAKgP,UAAUvL,OAAS,EAElEwL,EAAajP,EAAKkP,SAAWlP,EAAKkP,QAAQjK,QAAQT,EAAKtE,KAAO,EAC9DiP,EAAcnP,GAAQA,EAAKgP,WAAahP,EAAKgP,UAAU/J,QAAQT,EAAKtE,KAAO,EAC3EkP,EAAqBpP,EAAKqP,gBAAkBrP,EAAKqP,eAAe9C,UAAUvL,GAAKA,EAAEd,KAAOsE,EAAKtE,KAAO,EACpGkH,EAAS,GAIf,GAHIwH,EAAKU,UACLlI,EAAOmC,KAAKqF,EAAKU,UAEjBV,EAAKxH,OAAQ,CACb,MAAMmI,EAAOC,YAAKZ,EAAKxH,QACvBA,EAAOmC,QAAQgG,GAEnB,MAAME,EAAWjC,EAAaoB,EAAK1O,IAAMsN,EAAaoB,EAAK1O,IAAM,EAC3DwP,EAAetI,GAAUA,EAAOqI,GAAYrI,EAAOqI,GAAY,KAcrE,OAAQ,mBACJ,mBAAK9K,MAAM,qBACP,mBAAKA,MAAQ,sGAAqG1B,EAAW,QAAU,qBAEnI,mBAAK0B,MAAM,UACP,mBAAKA,MAAQ,mEAAmEC,MAAOuC,EAAS,0BAAyBA,EAAMG,iBAAmB,KAC5IH,GAAS,iBAAGxC,MAAM,+BAA+BC,MAAM,sBAE7D,mBAAKD,MAAM,mBAAmBC,MAAM,uBAChC,kBAAID,MAAM,OAAOC,MAAM,uBAAuB5E,EAAKkG,MACnD,uBACK0I,EAAKe,MAAQ,qBAAOhL,MAAM,aAAaQ,QAASzD,KAAKgM,YACjDE,EAAWpO,IAAKoQ,WAAWhB,EAAKe,KAAM,CAAE1C,OAAQ,QAAS4C,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAAevQ,IAAKuN,eAAe6B,EAAKe,KAAM,IAAItQ,KAAQ,CAAE4N,OAAQ,WAEzJ,IAAhB2B,EAAK3F,OAAe,mBACjB,qBAAOtE,MAAM,mBACT,iBAAGA,MAAM,0BAEX,mBACF,qBAAOA,MAAM,mBACT,iBAAGA,MAAM,iBADb,KACiCnF,IAAKwF,OAAO+J,GAD7C,MAIJ,qBAAOpK,MAAM,cACRiK,EAAKoB,UAAY,GAAK,mBAAE,iBAAGrL,MAAM,iBAAX,IAA8B7E,EAAUmQ,cAAcrB,EAAKoB,YAAcpB,EAAKoB,WACpGpB,EAAKrB,WAAa,GAAK,mBAAE,iBAAG5I,MAAM,qBAAX,IAAkC2I,EAAgBsB,EAAKrB,YAAvD,MACvBqB,EAAKsB,UAAY,GAAK,mBAAE,iBAAGvL,MAAM,yBAAX,IAAsCnF,IAAKwF,OAAO4J,EAAKsB,UAAW,GAAlE,KACtBtB,EAAKuB,SAAW,GAAK,mBAAE,iBAAGxL,MAAM,+BAAX,IAA4CnF,IAAKwF,OAAO4J,EAAKuB,SAAU,GAAvE,QACrBvB,EAAKrL,KAAO,GAAK,mBAAE,iBAAGoB,MAAM,oBAAX,IAAiCiK,EAAKrL,KAAKE,QAC5DmL,EAAKwB,MAAQ,GAAK,mBAAE,iBAAGzL,MAAQ,0BAAyBiK,EAAKwB,MAAQ,EAAI,UAAY,mBACrFxB,EAAKyB,SAAW,GAAK,mBAAE,iBAAG1L,MAAQ,0BAAyBiK,EAAKyB,UAAYzB,EAAK0B,UAAY,UAAY,mBACzG1B,EAAK2B,WAAa,GAAK,mBACpB,iBAAG5L,MAAM,uBADW,IACcnF,IAAKwF,OAAO4J,EAAK2B,WAAY,GAD3C,OAGvB3B,EAAK4B,iBAAmB,mBAAE,iBAAG7L,MAAM,yBAAX,IAAsCnF,IAAKwF,OAAO4J,EAAK4B,iBAAvD,SACxB5B,EAAK6B,oBAAsB,mBAAE,iBAAG9L,MAAM,+BAAX,IAA4CnF,IAAKwF,OAAO4J,EAAK6B,mBAAqB,IAAM,GAAxF,OAC3B7B,EAAK8B,sBAAwB,mBAAE,iBAAG/L,MAAM,qBAAX,IAAkCnF,IAAKwF,OAAO4J,EAAK8B,qBAAuB,IAAM,GAAhF,OAC7B9B,EAAK+B,mBAAqB,mBAAE,iBAAGhM,MAAM,2BAAX,IAAwCnF,IAAKwF,OAAO4J,EAAK+B,kBAAoB,IAAM,GAAnF,WAM3C,mBAAKhM,MAAM,YACP,mBAAKA,MAAM,oCACP,YAAC,IAAD,CAAUgI,SAAU5O,IAAG6O,cAAcgC,EAAK1I,KAAM0I,EAAKxH,OAAQY,GAAW6E,aAAc9O,IAAG+O,wBAE7F,mBAAKnI,MAAM,mBACP,YAAC,IAAD,CAAUgI,SAAU5O,IAAG6O,cAAcgC,EAAKpI,QAASoI,EAAKxH,OAAQY,GAAW6E,aAAc9O,IAAG+O,yBAIpG,mBAAKnI,MAAM,YACNiK,EAAKrB,WAAa,GAAK,mBAAK5I,MAAM,OAC/B,uBACI,yBAAO,YAAC,IAAD,CAAMzE,GAAG,6BAAT,cAEX,mBAAKyE,MAAM,gBAAgBC,MAAM,qBAC7B,iBAAGD,MAAM,gBADb,IAC+B2I,EAAgBsB,EAAKrB,YADpD,OAIHqB,EAAKsB,UAAY,GAAK,mBAAKvL,MAAM,OAC9B,uBACI,yBAAO,YAAC,IAAD,CAAMzE,GAAG,2BAAT,gBAEX,mBAAKyE,MAAM,gBAAgBC,MAAM,qBAC7B,iBAAGD,MAAM,oBADb,IACmCnF,IAAKwF,OAAO4J,EAAKsB,UAAW,GAD/D,MAIHtB,EAAKgC,SAAW,GAAK,mBAAKjM,MAAM,OAC7B,uBACI,yBAAO,YAAC,IAAD,CAAMzE,GAAG,6BAAT,cAEX,mBAAKyE,MAAM,gBAAgBC,MAAM,qBAC7B,iBAAGD,MAAM,iBADb,IACgCnF,IAAKuF,SAAS6J,EAAKgC,aA0B3D,mBAAKjM,MAAM,6BACN+K,GAAgB,mBAAK/K,MAAM,gBACxB,mBACIA,MAAQ,8BACRC,MAAQ,qBAER,mBAAKD,MAAQ,YAAYC,MAAM,oBAAoBgF,IAAK8F,EAAamB,gBAG5EzJ,GAAUA,EAAO3D,OAAS,GAAK,mBAAKkB,MAAM,iCACtCyC,EAAOxB,IAAI,CAACuE,EAAKuE,IAUN,mBACJ,mBACI/J,MAAQ,2BACRC,MAAQ,sBAER,mBAAKD,MAAQ,mBAAmBC,MAAM,oBAAoBgF,IAAKO,EAAI7C,YAAanC,QAASzD,KAAK+M,UAAWvE,UAAS0E,EAAK1O,GAAI4Q,WAAUpC,SAOzJ,mBAAK/J,MAAM,QACN2H,GAASA,EAAM7I,OAAS,GAAK,qBAAOkB,MAAM,0CAA0CC,MAAM,8BACvF,iBAAGD,MAAM,kCADiB,IACmB2H,EAAM7I,QAEtDsI,GAAYA,EAAStI,OAAS,GAAK,qBAAOkB,MAAM,sDAAsDC,MAAM,8BACzG,iBAAGD,MAAM,gCADuB,IACWoH,EAAStI,UAI1DwL,IAAeE,IAAgBC,GAAsB,mBAAKzK,MAAM,iBAC9D,YAAC,IAAD,CAAY5E,OAAQ2B,KAAK7C,MAAMkB,OAAQC,KAAMA,EAAM+Q,YAAY,KAGnE,uBACI,mBAAKpM,MAAM,OACP,mBAAKA,MAAM,qBACP,sBAAQ6C,KAAK,SAAS7C,MAAQ,0BAAyBmK,EAAkB,UAAY,gCAAgCA,EAAkB,eAAiB,KACpJ5E,UAAS0E,EAAK1O,GACdiF,QAASzD,KAAKmM,aAGd,iBAAGlJ,OAAUmK,EAAkB,mBAAqB,OAAzC,kBALf,IAKiF,YAAC,IAAD,CAAM5O,GAAG,iBAAT,SAGrF,mBAAKyE,MAAM,qBACP,sBAAQ6C,KAAK,SAAS7C,MAAM,oDACxBuF,UAAS0E,EAAK1O,GACdiF,QAASzD,KAAK8M,kBAEd,iBAAG7J,MAAM,mBAJb,IAIiC,YAAC,IAAD,CAAMzE,GAAG,wBAAT,iBAM7C,mBAAKyE,MAAM,QACNiG,EAAegE,EAAK1O,KAAO,YAAC,IAAD,CACxBH,OAAQ2B,KAAK7C,MAAMkB,OACnBoG,QAASyI,EACThI,SAAUmD,GAAKrI,KAAKkF,SAASgI,EAAK1O,IAAM6J,EACxCF,IAAI,KACJC,OAAO,IACPzE,SAAU3D,KAAKsM,mBAEnB,YAAC,IAAD,CACIjO,OAAQ2B,KAAK7C,MAAMkB,OACnBoG,QAASyI,EACT/E,IAAI,KACJC,OAAO,IACP2B,SAAS,EACTpG,SAAU3D,KAAKsM,8B,EAaxCP,Q,iICtWd/O,Y,EAAD,cAC2BC,YAAU,gDACjCqS,cAAehS,eAAOiS,GAClB,MAAM,UAAEnR,GAAc,EAAKjB,MAAMkB,QACjC,KAAEyE,GAAS1E,GACX,SAAEoR,EAAW,IAAO1M,QACd1E,EAAUqR,cAAc,CAAE,CAAE,YAAWF,GAA8B,IAApBC,EAASD,GAAe,EAAI,KALtD,KAQjCG,aAAepS,iBACX,MAAM,UAAEc,GAAc,EAAKjB,MAAMkB,aAC3BD,EAAUqR,cAAc,CAAE,wBAAyB,IACzD,EAAKjQ,SAAS,CACVkQ,cAAc,KAItBvO,SACI,MAAM,aAAEuO,GAAiB1P,KAAKG,OAC9B,UAAE/B,GAAc4B,KAAK7C,MAAMkB,QACrB,UAAEsR,GAAc3P,KAAK7C,OACrB,KAAE2F,GAAS1E,GACX,SAAEoR,EAAW,IAAO1M,EAC1B,OAAI4M,GAAgBF,EAASE,eAGxBC,GAAaH,EAASI,eAAiBJ,EAASK,YAAcL,EAASM,cAFjE,GAMR,mBAAK7M,MAAM,iGACN,sBAAI,YAAC,IAAD,CAAMzE,GAAG,kBAAT,yBAEFgR,EAASI,eAAiB,mBAAK3M,MAAM,YAClD,mBAAKA,MAAM,+BACV,YAAC,IAAD,CAAMzE,GAAG,gCAAT,mBAED,mBAAKyE,MAAM,SACV,mBAAKA,MAAM,gCACV,qBAAO6C,KAAK,WAAW7C,MAAM,uBAAuBzE,GAAG,wBAAwBwH,QAAS,IAAMhG,KAAKsP,cAAc,iBAAkB/G,QAASiH,EAASI,gBACrJ,qBAAO3M,MAAM,uBAAuB4C,IAAI,2BAEzC,qBAAO5C,MAAM,cAAa,YAAC,IAAD,CAAMzE,GAAG,wCAAT,uCAI1BgR,EAASK,YAAc,mBAAK5M,MAAM,YACnC,mBAAKA,MAAM,+BACV,YAAC,IAAD,CAAMzE,GAAG,6BAAT,SAED,mBAAKyE,MAAM,SACV,mBAAKA,MAAM,gCACV,qBAAO6C,KAAK,WAAW7C,MAAM,uBAAuBzE,GAAG,qBAAqBwH,QAAS,IAAMhG,KAAKsP,cAAc,cAAe/G,QAASiH,EAASK,aAC/I,qBAAO5M,MAAM,uBAAuB4C,IAAI,wBAEzC,qBAAO5C,MAAM,cAAa,YAAC,IAAD,CAAMzE,GAAG,qCAAT,6BAI1BgR,EAASM,eAAiB,mBAAK7M,MAAM,YACtC,mBAAKA,MAAM,+BACV,YAAC,IAAD,CAAMzE,GAAG,gCAAT,aAED,mBAAKyE,MAAM,SACV,mBAAKA,MAAM,gCACV,qBAAO6C,KAAK,WAAW7C,MAAM,uBAAuBzE,GAAG,wBAAwBwH,QAAS,IAAMhG,KAAKsP,cAAc,iBAAkB/G,QAASiH,EAASM,gBACrJ,qBAAO7M,MAAM,uBAAuB4C,IAAI,2BAEzC,qBAAO5C,MAAM,cAAa,YAAC,IAAD,CAAMzE,GAAG,wCAAT,gDAIhB,mBAAKyE,MAAM,YACP,mBAAKA,MAAM,qBACP,yBACI,iBAAGE,KAAK,UACJ,iBAAGF,MAAM,qBADb,IACmC,YAAC,IAAD,CAAMzE,GAAG,4BAAT,sDAM/C,mBAAKyE,MAAM,YACP,mBAAKA,MAAM,gCACP,yBACI,sBAAQ6C,KAAK,SAAS7C,MAAM,2BAA2BQ,QAASzD,KAAK0P,cACjE,iBAAGzM,MAAM,qBADb,IACmC,YAAC,IAAD,CAAMzE,GAAG,uBAAT,iC,qHC9EzDuR,EAPLC,YAAU7S,KAAD,CACN8S,KAAM,YAAC,IAAD,CAAMzR,GAAG,uBACf0R,SAAU,YAAC,IAAD,CAAM1R,GAAG,2BACnB2R,OAAQ,YAAC,IAAD,CAAM3R,GAAG,yBACjB4R,KAAM,YAAC,IAAD,CAAM5R,GAAG,yB,GAElBxB,Y,EAND,cAO2BC,YACvBkE,SACI,MAAM,UAAE/C,GAAc4B,KAAK7C,MAAMkB,QAC3B,KAAaZ,EAAb,MAAmBmJ,EAAnB,WAA0B5C,GAAa,GAAShE,KAAK7C,OACrD,KACF2F,GACN1E,GACQ,SAAEkI,EAAW,MAASxD,EAC5ByD,EAASlK,IAAGmK,UAAUF,GAEhB5I,EAAekJ,IAAS,IAAIjJ,MAAOC,WAAa,EACtDC,EAAcJ,GAAQK,IAAKC,UAC3BC,EAAcC,SAASP,EAAe,EAAIG,EAAc,EAAIA,EAAa,IAGnEwS,EAAevS,IAAK4I,WAAc1I,EAAF,SAA0BA,EAAc,EAAhB,UACxDsS,EAAmBxS,IAAK4I,WAAc1I,EAAc,EAAhB,SAA8BA,EAAF,UAGhEuS,EAFczS,IAAK0S,UAAaxS,EAAF,SAA0BA,EAAc,EAAhB,UAE9BkG,IAAIuM,GAAMA,EAAGR,MAErCS,EAAWnG,KAAKoG,MAAMJ,EAAUxO,QADxBwO,EAAUxO,OAAS,IAE3B6O,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGC,EAAIP,EAAUxO,OAAQ8O,EAAIC,EAAGD,GAAKH,EAC9CE,EAAO/I,KAAK0I,EAAUM,IAG1B,OACI,mBACK7M,GAAc,sBAAI,YAAC,IAAD,CAAMxF,GAAG,uBAAT,sBAAJ,IAA8DR,EAA9D,MAA8EA,EAAc,GAC3G,mBAAKiF,MAAM,mBAGP,qBAAOA,MAAM,QAAO,yBAChB,qBAAOA,MAAM,oDACT,yBACI,sBACI,kBAAIC,MAAM,oBAAmB,YAAC,IAAD,CAAM1E,GAAG,wBAAT,WAC5B6R,EAAanM,IAAI6M,GACd,kBAAI9N,MAAM,aAAaC,MAAM,oBAAmB,iBAAGC,KAAO,mBAAkB4N,EAAEnK,SAASmK,EAAEtT,QAAS8I,EAAOwK,EAAEnK,MAAQ,QAI/H,yBACI,sBACI,kBAAIoK,MAAM,MAAM9N,MAAM,oBAAoBlF,EAAc,EAAxD,MAA8DA,GAC7DsS,EAAiBpM,IAAI6M,GAGd,mBACI,kBAAI9N,MAAM,aAAaC,MAAM,oBAEzB,wBAAO9E,EAAU4I,wBAAwB+J,EAAEtT,KAAMsT,EAAEnK,QAAc,uBACjE,wBAAOxI,EAAU4I,wBAAwB+J,EAAEtT,KAAMsT,EAAEnK,MAAO,cAAoB,0BAK9F,kBAAI3D,MAAM,aAAaC,MAAM,oBACzB,wBAAM,iBAAGD,MAAM,gBAAf,OAAyC,uBACzC,wBAAM,iBAAGA,MAAM,oBAAf,MAA4C,yBAGpD,sBACI,kBAAI+N,MAAM,MAAM9N,MAAM,oBAAoBlF,EAA1C,MAA0DA,EAAc,GACvEqS,EAAanM,IAAI6M,GAGV,mBACI,kBAAI9N,MAAM,aAAaC,MAAM,oBACzB,wBAAO9E,EAAU4I,wBAAwB+J,EAAEtT,KAAMsT,EAAEnK,QAAc,uBACjE,wBAAOxI,EAAU4I,wBAAwB+J,EAAEtT,KAAMsT,EAAEnK,MAAO,cAAoB,0BAK9F,kBAAI3D,MAAM,aAAaC,MAAM,oBACzB,wBAAM,iBAAGD,MAAM,gBAAf,OAAyC,uBACzC,wBAAM,iBAAGA,MAAM,oBAAf,MAA4C,mC,MAarE8M,Q,ujBC1Ff,MAAMpT,EAAe,CACpBuM,eAAgB,GACb4C,aAAc,I,IAIZmF,EADLjU,Y,EAAD,cAC8BC,YAC1BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAQnB6O,WAAc1M,IACVA,EAAE2M,kBACF3M,EAAEC,iBACF,MAAM,SAAE2M,GAAalM,KAAKG,MAC1BH,KAAKR,SAAS,CAAE0M,UAAWA,KAZZ,KAetBgF,UAAY5T,eAAOgC,GACZ,MAAM6R,EAAUlT,SAASqB,EAAEO,OAAOC,QAAQ,UAAUC,QAAQvB,GAAI,KAEhE,WAAEuC,GAAe,EAAK5D,MAAMkB,aACX0C,EAAWmQ,UAAU,CAAE1S,GAAI2S,KAnB7B,KAyBtBrE,iBAAoBxN,IACnB,MAAM6R,EAAU7R,EAAEO,OAAOC,QAAQ,UAAUC,QAAQvB,IAC7C,eAAE0K,GAAmBlJ,KAAKG,MACtB+I,EAAeiI,UACRjI,EAAeiI,GAEtBjI,EAAeiI,IAAW,EAEpCnR,KAAKR,SAAS,CACb0J,kBACE,KACElJ,KAAKkF,SAASiM,IACjBnR,KAAKkF,SAASiM,GAASvH,WArCJ,KA0CnBmD,UAAazN,IACf,MAAM,GAAEd,EAAF,IAAMwO,GAAQ1N,EAAEO,OAAOC,QAAQ,OAAOC,SAChC,aAAE+L,GAAiB9L,KAAKG,MAC9B2L,EAAatN,GAAMwO,EACnBhN,KAAKR,SAAS,CAAEsM,kBA5ChB9L,KAAKG,M,+VAAL,IACOxD,GAEbqD,KAAKkF,SAAW,GA4Cd,4BAA4B/H,EAAQ6C,KAAK7C,OAC3C,MAAM,WAAE4D,GAAe5D,EAAMkB,aACvB0C,EAAWC,iBAGlBC,oBACOjB,KAAKP,wBAGT0B,SACI,MAAM,eAAE+H,EAAF,SAAkBgD,EAAlB,aAA4BJ,GAAiB9L,KAAKG,OAClD,UAAE/B,EAAF,WAAa2C,EAAb,SAAyBX,GAAaJ,KAAK7C,MAAMkB,QACjD,KAAEyE,GAAS1E,GACX,WAAEgT,GAAerQ,GACvB,SAAEuF,EAAW,MAASxD,GAChB,SAAEvB,GAAanB,EAErB,OACI,mBAAK6C,MAAM,SACNmO,GAAcA,EAAWlN,IAAKW,IAC3B,MAAMvG,EAAOyC,EAAWoM,eAAetI,EAAMvG,OAAS,GACtD,IAAImH,EACAnH,EAAKmH,OAASnH,EAAKmH,MAAMG,YACzBH,EAAQnH,EAAKmH,MACNnH,EAAKoH,QAAUpH,EAAKoH,OAAO,IAAMpH,EAAKoH,OAAO,GAAGE,cACvDH,EAAQnH,EAAKoH,OAAO,IAExB,MAAM,MAAEkF,EAAF,SAASP,GAAaxF,EACtBwM,EAAgBxM,EAAM+F,OAAS/F,EAAM+F,MAAMC,UAAUvL,GAAKA,EAAEwD,OAASA,EAAKtE,KAAO,EACjF6O,EAAiB/O,GAAQA,EAAKgP,UAAYhP,EAAKgP,UAAUvL,OAAS,EAElEwL,EAAajP,EAAKkP,SAAWlP,EAAKkP,QAAQjK,QAAQT,EAAKtE,KAAO,EAC9DiP,EAAcnP,GAAQA,EAAKgP,WAAahP,EAAKgP,UAAU/J,QAAQT,EAAKtE,KAAO,EAC3EkP,EAAqBpP,EAAKqP,gBAAkBrP,EAAKqP,eAAe9C,UAAUvL,GAAKA,EAAEd,KAAOsE,EAAKtE,KAAO,EAEpGkH,EAAS,GACf,GAAIb,EAAMa,OAAQ,CACd,MAAMmI,EAAOC,YAAKjJ,EAAMa,QACxBA,EAAOmC,QAAQgG,GAEnB,MAAME,EAAWjC,EAAajH,EAAMrG,IAAMsN,EAAajH,EAAMrG,IAAM,EAC7DwP,EAAetI,GAAUA,EAAOqI,GAAYrI,EAAOqI,GAAY,KAErE,OAAQ,mBACJ,mBAAK9K,MAAM,qBACP,mBAAKA,MAAQ,sGAAqG1B,EAAW,QAAU,qBAEnI,mBAAK0B,MAAM,UACP,mBAAKA,MAAQ,mEAAmEC,MAAOuC,EAAS,0BAAyBA,EAAMG,iBAAmB,KAC5IH,GAAS,iBAAGxC,MAAM,+BAA+BC,MAAM,sBAE7D,mBAAKD,MAAM,mBAAmBC,MAAM,uBAChC,kBAAID,MAAM,OAAOC,MAAM,uBAAuB5E,EAAKkG,MACnD,mBAAKvB,MAAM,QACN4B,EAAMoJ,MAAQ,qBAAOhL,MAAM,aAAaQ,QAASzD,KAAKgM,YAClDE,EAAWpO,IAAKoQ,WAAWrJ,EAAMoJ,KAAM,CAAE1C,OAAQ,QAAS4C,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAAevQ,IAAKuN,eAAexG,EAAMoJ,KAAM,IAAItQ,KAAQ,CAAE4N,OAAQ,WAE1J,IAAjB1G,EAAM0C,OAAe,mBAClB,qBAAOtE,MAAM,mBACT,iBAAGA,MAAM,0BAEX,mBACF,qBAAOA,MAAM,mBACT,iBAAGA,MAAM,iBADb,KACiCnF,IAAKwF,OAAO+J,GAD7C,SAOhB,mBAAKpK,MAAM,YACP,mBAAKA,MAAM,mBACP,YAAC,IAAD,CAAUgI,SAAU5O,IAAG6O,cAAcrG,EAAMyC,KAAMzC,EAAMa,OAAQY,GAAW6E,aAAc9O,IAAG+O,yBAKnG,mBAAKnI,MAAM,6BACN+K,GAAgB,mBAAK/K,MAAM,gBACxB,mBACIA,MAAQ,8BACRC,MAAQ,qBAER,mBAAKD,MAAQ,YAAYC,MAAM,oBAAoBgF,IAAK8F,EAAamB,gBAG5EzJ,GAAUA,EAAO3D,OAAS,GAAK,mBAAKkB,MAAM,iCACtCyC,EAAOxB,IAAI,CAACuE,EAAKuE,IACN,mBACJ,mBACI/J,MAAQ,2BACRC,MAAQ,wCAER,mBAAKD,MAAQ,mBAAmBC,MAAM,oBAAoBgF,IAAKO,EAAI7C,YAAanC,QAASzD,KAAK+M,UAAWvE,UAAS3D,EAAMrG,GAAI4Q,WAAUpC,SAqB1J,mBAAK/J,MAAM,QACN2H,GAASA,EAAM7I,OAAS,GAAK,qBAAOkB,MAAM,0CAA0CC,MAAM,8BACvF,iBAAGD,MAAM,kCADiB,IACmB2H,EAAM7I,QAEtDsI,GAAYA,EAAStI,OAAS,GAAK,qBAAOkB,MAAM,sDAAsDC,MAAM,8BACzG,iBAAGD,MAAM,gCADuB,IACWoH,EAAStI,UAI1DwL,IAAeE,IAAgBC,GAAsBpP,EAAKiJ,QAAU,mBAAKtE,MAAM,iBAC7E,YAAC,IAAD,CAAY5E,OAAQ2B,KAAK7C,MAAMkB,OAAQC,KAAMA,EAAM+Q,YAAY,KAGnE,uBACI,mBAAKpM,MAAM,OACP,mBAAKA,MAAM,qBACP,sBAAQ6C,KAAK,SAAS7C,MAAQ,0BAAyBoO,EAAgB,UAAY,gCAAgCA,EAAgB,eAAiB,KAChJ7I,UAAS3D,EAAMrG,GACfiF,QAASzD,KAAKkR,WAGd,iBAAGjO,OAAUoO,EAAgB,mBAAqB,OAAvC,kBALf,IAK+E,YAAC,IAAD,CAAM7S,GAAG,iBAAT,SAGnF,mBAAKyE,MAAM,qBACP,sBAAQ6C,KAAK,SAAS7C,MAAM,oDACxBuF,UAAS3D,EAAMrG,GACfiF,QAASzD,KAAK8M,kBAEd,iBAAG7J,MAAM,mBAJb,IAIiC,YAAC,IAAD,CAAMzE,GAAG,wBAAT,iBAM7C,mBAAKyE,MAAM,QACNiG,EAAerE,EAAMrG,KAAO,YAAC,IAAD,CACzBH,OAAQ2B,KAAK7C,MAAMkB,OACnBwG,MAAOA,EACPK,SAAUmD,GAAKrI,KAAKkF,SAASL,EAAMrG,IAAM6J,EACzCzD,eAAgB5E,KAAKkF,SACrBiD,IAAI,KACJC,OAAO,MAEX,YAAC,IAAD,CACI/J,OAAQ2B,KAAK7C,MAAMkB,OACnBwG,MAAOA,EACPsD,IAAI,KACJC,OAAO,IACP2B,SAAS,e,EAclCkH,Q,saCrOf,SAAS/F,EAAcoG,EAAO,GAAI5L,EAAQY,EAAW,MASjD,GAAIxI,IAAKyT,SAASD,GAAO,CAC3B,IAAIE,EAAOF,EACL,MACAG,EADc,IAAIC,OAAQ,IAAGpL,YAAmBA,KAAa,KAC/CqL,KAAKH,GACzB,GAAIC,EAAO,CACV,MAAMG,EAAqBH,EAAM,GAC7BG,IACHJ,EAAOI,GAGH,OAAOJ,EAAKK,QAAQ,+BAlBxB,SAAuBJ,EAAOK,EAAIC,GAE9B,OAAIjU,IAAKkU,SAAStM,EAAOoM,IACb,YAAWpM,EAAOoM,GAAIG,6DAA6DF,GAAM,WAE9F,MAeX,OAAOT,E,qFAjCX,MAAMY,EAAmB,CACxBC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,OAAO,GA6BF9V,EAAe,CACpBC,WAAW,G,IAIN8V,EADL1V,Y,EAAD,cACoBC,YAChBC,YAAYC,GACRC,MAAMD,GACN6C,KAAKG,M,+VAAL,IACOxD,GAIX,eAAeQ,EAAQ6C,KAAK7C,OAC9B6C,KAAKR,SAAS,CAAE5C,WAAW,IAC3B,MAAM,UAAE+V,GAAcxV,EAAMkB,aAEtBsU,EAAUlU,KAAK,CAAEC,MADT,KAEdsB,KAAKR,SAAS,CAAE5C,WAAW,IAGzBqE,oBACFjB,KAAK4S,WAGNC,0BAA0BC,GACzB9S,KAAK4S,SAASE,GAGZ3R,SACI,MAAM,SAAEf,EAAF,UAAYhC,EAAZ,UAAuBuU,EAAvB,UAAkCI,GAAc/S,KAAK7C,MAAMkB,QACjE,QAAYuD,EAAZ,cAA2BoR,EAAgB,IAAO5U,GAClD,MAAE6U,GAAUN,GACZ,SAAEO,GAAaH,GAEf,SAAYzM,EAAW,MAASlG,EAGhC,OACI,mBAAK6C,MAAM,OACP,mBAAKA,MAAM,UACP,sBAAI,YAAC,IAAD,CAAMzE,GAAG,iBAAT,oBAGNyU,GAA0B,IAAjBA,EAAMlR,SAAiB,mBAAKkB,MAAM,2BACzC,4CAD8B,qCAEI,uBAClC,iBAAGE,KAAK,2BAAR,mBAGH8P,GAASA,EAAME,KAAK,CAACC,EAAGC,IAAMD,EAAEE,UAAYD,EAAEC,WAAW7I,UAAUvG,IAAIqP,IACpE,MAAMC,EAAQ,IAAI7V,KAClB,IAAIqH,EAAS,GACb,GAAIwO,GAAS,IAAI7V,KAAK4V,EAAKD,YAAcE,GAAS,IAAI7V,KAAK4V,EAAKE,SAC5DzO,EAAS,YACN,GAAIwO,GAAS,IAAI7V,KAAK4V,EAAKG,kBAAoBF,GAAS,IAAI7V,KAAK4V,EAAKI,eACzE3O,EAAS,cACN,GAAIwO,EAAQ,IAAI7V,KAAK4V,EAAKE,SAC7B,OAAQ,oBAGZ,OAAQ,mBACJ,mBAAKxQ,MAAM,2CAEP,mBAAKA,MAAM,0BACP,kBAAIA,MAAM,oBAAoBC,MAAM,2BACpB,WAAX8B,GAAuB,mBACpB,mBAAK/B,MAAM,4BAA4BG,KAAK,YAEpC,SAAX4B,GAAqB,mBAClB,mBAAK/B,MAAM,2BAA2BG,KAAK,YAEnC,SAAX4B,GAAqB,mBAClB,wBAAM,iBAAG/B,MAAM,iCAGvB,kBAAIA,MAAM,eACLrB,GAAW,iBAAGqB,MAAQ,aAAYsQ,EAAKK,OAAS,gBAAkB,qCAClEL,EAAKlM,OAEV,mBAAKpE,MAAM,0DACP,kBAAIA,MAAM,oBAAoBC,MAAM,yBACpB,WAAX8B,GAAuB,mBACpB,oBAAM/B,MAAM,gDAA+C,YAAC,IAAD,CAAMzE,GAAG,qBAAT,oBAEnD,SAAXwG,GAAqB,mBAClB,oBAAM/B,MAAM,+CAA8C,YAAC,IAAD,CAAMzE,GAAG,0BAAT,eAElD,SAAXwG,GAAqB,mBAClB,oBAAM/B,MAAM,gDAA+C,YAAC,IAAD,CAAMzE,GAAG,uBAAT,oBAGjE+U,EAAK7N,QAAU6N,EAAK7N,OAAO,GAAM,mBAAKwC,IAAKqL,EAAK7N,OAAO,GAAGmO,aAAc5Q,MAAM,iBAAoB,IAExG,mBAAKA,MAAM,aACP,iBAAGA,MAAM,aACL,YAAC,IAAD,CAAUgI,SAAUC,EAAcqI,EAAKO,QAASP,EAAK7N,OAAQY,GAAW6E,aAAc+G,KAEzFqB,EAAKQ,SAAW,mBACb,mBAAK9Q,MAAM,QACP,qBAAOA,MAAM,4BAA2B,YAAC,IAAD,CAAMzE,GAAG,iBAAT,WAAxC,MAAyF,uBACxF+U,EAAKQ,QAAQZ,KAAK,CAACC,EAAGC,IAAMD,EAAElD,SAAWmD,EAAEnD,UAAUhM,IAAI8P,GAAgB,mBACtE,oBAAM/Q,MAAM,uDACP+Q,EAAa3M,WAM9B,iBAAGlE,KAAO,cAAaoQ,EAAK/U,GAAMyE,MAAM,kCAAiC,YAAC,IAAD,CAAMzE,GAAG,mBAAT,aAE7E,mBAAKyE,MAAM,eACP,qBAAOA,MAAM,cACT,YAAC,IAAD,CAAMzE,GAAG,mBAAT,aADJ,KACkD+U,EAAKD,WAAa,mBAAGxV,IAAKoQ,WAAWqF,EAAKD,UAAW,CAAE/H,OAAQjF,KAC5GiN,EAAKE,SAAW,yBAAM3V,IAAKoQ,WAAWqF,EAAKE,QAAS,CAAElI,OAAQjF,iB,EAexFoM,Q,6eCnKf,MAAM/V,EAAe,CACjBiD,KAAM,CACRqU,SAAS,EACTC,MAAM,GAEPC,WAAY,I,IAIPC,EADLpX,Y,EAAD,cAC4BC,YACxBC,YAAYC,GACRC,MAAMD,GACN6C,KAAKG,M,+VAAL,IACOxD,GAIXwE,SACI,MAAM,UAAE/C,GAAc4B,KAAK7C,MAAMkB,QACjC,cAAE2U,EAAgB,IAAO5U,EAEzBiW,EADqBrB,EAAcsB,OAAOhV,IAAMA,EAAEiV,MACtBxS,QAAU,EAEtC,OAAIsS,EAAS,EACF,GAIP,mBAAKpR,MAAM,4EACP,mBAAKA,MAAM,qBAAqBG,KAAK,SACjC,iBAAGD,KAAK,uBAAuBF,MAAM,aACjC,iBAAGA,MAAM,+BACT,oBAAMA,MAAM,iCAAiCoR,GAFjD,IAEgE,YAAC,IAAD,CAAM7V,GAAG,wBAAT,wD,EAQrE4V","file":"route-home.chunk.0a415.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\n// import DogStatus from '../../components/dog/status';\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport Races from '../../components/races';\nimport Notifications from '../../components/notifications';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n\tviewmenu: 'wall',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, workoutStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\t// await this.loadFeed();\n\t\tawait this.loadWorkoutSummary();\n\t\t// await this.loadDogs();\n\t\tawait Promise.all([\n\t\t\tthis.loadWorkoutPlans(),\n\t\t\tthis.loadTeams(),\n\t\t]);\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tloadTeamInfo = async () => {\n\t\tawait this.loadWorkoutSummary();\n\t\tawait this.loadWorkoutPlans();\n\t\t// await this.loadTeams();\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadFeed() {\n\t\tconst { userStore } = this.props.stores;\n        await userStore.getFeed({});\n    }\n\n\tasync loadWorkoutSummary() {\n\t\tconst { userStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\t// await workoutStore.load({ query: { team: currentTeam } });\n        await userStore.getWorkoutSummary({ team: currentTeam });\n    }\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { team } = userStore;\n\t\tconst { currentTeam = team.id } = workoutStore;\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t} else {\n\t\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t}\n\t}\n\n\tloadDogs = async () => {\n\t\tconst { dogStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\n\t\tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t}\n\n\treloadFeeds = async (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n\t\tawait this.loadStoriesPublicFeed();\n\t\tawait this.loadTeamsPublicFeed();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed();\n\t}\n\n\tasync loadTeamsPublicFeed(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed();\n\t}\n\n\tsetViewMenu = (e) => {\n\t\te.preventDefault();\n\t\tconst menu = e.target.closest('a').dataset.menu;\n\t\tthis.setState({ viewmenu: menu });\n\t}\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n\trender() {\n\t\tconst { isLoading, submenu, viewmenu } = this.state;\n\t\tconst { userStore, dogStore, appState, workoutPlanStore, teamStore, workoutStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode } = appState;\n\t\tconst {\n\t\t\tworkouts,\n\t\t\tteams, tracks, isAdmin, dogs,\n\t\t} = userStore;\n\t\t// const { dogs } = dogStore;\n\t\t// const dogsInjured = dogStore.findDogsByStatus(2);\n\t\t// const dogsPregnant = dogStore.findDogsByStatus(4);\n\t\t// const dogsMedication = dogStore.findDogsByStatus(8);\n\t\t// const dogsSick = dogStore.findDogsByStatus(9);\n\t\t// const dogsWithStatus = dogStore.findDogsByStatus([2, 4, 8, 9]);\n\t\t// const dogsWithNeeds = dogStore.findDogsWithNeeds();\n\n\t\tconst totalTeams = teams.length;\n\t\tconst totalDogs = dogs.length;\n\t\tconst totalTracks = tracks.length;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\t\tconst { workoutSummary } = teamStore;\n\t\tconst workoutSummary2019 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2019) : teamStore.findWorkoutSummaryTotal(2019)) || {};\n        const workoutSummary2020 = (currentTeam ? teamStore.findWorkoutSummary(currentTeam, 2020) : teamStore.findWorkoutSummaryTotal(2020)) || {};\n\n\t\tconst { user } = userStore;\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t{isAdmin && <div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/admin' class='text-secondary stretched-link'><nobr><i class='fas fa-user-shield' /> <Text id='home.admin'>Admin</Text></nobr></a>\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div class={`col text-center subtopmenu border-bottom border-primary`}>\n\t\t\t\t\t\t<a href='/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='home.dashboard'>Dashboard</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/feed' class='text-secondary stretched-link'><nobr><i class='fas fa-rss' /> <Text id='home.feed'>Feed</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class={`col text-center subtopmenu`}>\n\t\t\t\t\t\t<a href='/todo' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='home.todo'>Todo</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{['beta'].indexOf(viewmode) > -1 ? <>\n\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\t\t\t\t\t<StoryAdd stores={this.props.stores} />\n\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<div class='float-right'>\n\t\t\t\t\t\t\t\t\t\t{isLoading ? <>\n\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t<a href='#' style='font-size: 1.8em;' onClick={this.reloadFeeds}><i class='fas fa-sync-alt' /></a>\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<ul class='nav nav-sm nav-tabs'>\n\t\t\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'wall' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='wall'><Text id='home.wall'>Veggen</Text></a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'workout' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='workout'><Text id='home.workouts'>Treninger</Text></a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li class='nav-item'>\n\t\t\t\t\t\t\t\t\t\t\t<a class={`nav-link ${viewmenu === 'totals' ? 'active' : ''}`} href='#' onClick={this.setViewMenu} data-menu='totals'><Text id='home.totals'>Totaler</Text></a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{viewmenu === 'wall' && <>\n\t\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} />\n\t\t\t\t\t</>}\n\t\t\t\t\t{viewmenu === 'workout' && <>\n\t\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} />\n\t\t\t\t\t</>}\n\t\t\t\t\t{viewmenu === 'totals' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadTeamInfo} key={`teams-${currentTeam}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} key={`totals-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} key={`status-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t</>}\n\t\t\t\t</> : <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadTeamInfo} key={`teams-${currentTeam}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t{/* {isLoading && <div class='text-center mt-5 mb-5'>\n\t\t\t\t\t\t\t\t<div class='spinner-border text-primary' role='status'>\n\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>} */}\n\n\t\t\t\t\t\t\t{!isLoading && workoutSummary && workoutSummary.length === 0 && (\n\t\t\t\t\t\t\t\t<div class='mb-5 py-3 border-top border-bottom'>\n\t\t\t\t\t\t\t\t\t<div class='text-center'>\n\t\t\t\t\t\t\t\t\t\t<div class='display-4'>\n\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-paw' />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-title'>Velkommen til The Musher.</Text>\n\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-1'>The Musher er en app som er kontinuerlig under utvikling.\n\t\t\t\t\t\t\t\t\t\t\tAlle ideer/innspill/kommentarer mottas med stor takk på Facebooksiden vår 😃</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-2'>Fokus til appen er enkel registrering av hunder, team, treninger og hendelser rundt hundene.\n\t\t\t\t\t\t\t\t\t\t\tNår man har mange hunder så er det ofte vanskelig å holde styr på løpetid, vaksiner, treninger,\n\t\t\t\t\t\t\t\t\t\t\tskader, vetrinærbesøk, chiplister, osv.</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<Text id='home.welcome-body-3'>Alle data lagres sentralt i skyen hos AWS (Amazon Web Services) og det vil derfor være mulig å bruke appen fra flere telefoner\n\t\t\t\t\t\t\t\t\t\t\tog datamaskiner samtidig. Dette kan være fint dersom det er flere som trener og følger opp hundene.</Text>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<Text id='home.howto-title'>Slik kommer du i gang:</Text>\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t{totalTeams < 1 && <li><a class='btn btn-info mt-3' href='/teams/'><Text id='home.howto-step-1'>Legg inn teamene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t{totalDogs < 1 && <li><a class='btn btn-info mt-3' href='/dogs/'><Text id='home.howto-step-2'>Legg inn hundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t{totalTracks < 1 && <li><a class='btn btn-info mt-3' href='/tracks/'><Text id='home.howto-step-3'>Legg inn rundene dine.</Text></a></li>}\n\t\t\t\t\t\t\t\t\t\t<li><a class='btn btn-info mt-3' href='/workouts/'><Text id='home.howto-step-4'>Begynn å registrere treningene.</Text></a></li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} key={`graph-${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t\t\t{['beta', 'advanced'].indexOf(viewmode) > -1 && <>\n\t\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\tkey={`workout-table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t\n\n\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t\t<div class='row'>\n\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'races' ? 'btn-danger' : 'btn-outline-danger'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='races'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-dog' /> <Text id='home.races'>Løp</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'lastWorkouts' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='lastWorkouts'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-running' /> <Text id='home.workouts'>Treninger</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-equals' /> <Text id='home.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplanStatus' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='workoutplanStatus'\n\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t><i class='fas fa-chart-line' /> <Text id='home.status'>Status</Text></button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{submenu === 'races' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<Install />\n\t\t\t\t\t\t\t<InviteFriend stores={this.props.stores} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'totals' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} key={`totals-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{submenu === 'workoutplanStatus' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} key={`status-${workoutSummary2020.distancekm}`} currentSeason={workoutSummary2020} prevSeason={workoutSummary2019} />\n\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Notifications stores={this.props.stores} />\n\n\t\t\t\t\t{submenu === 'lastWorkouts' && <div class='row'>\n\n\t\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{workouts && workouts.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t<Text id='home.last-workouts' fields={{ total: workouts.length }}>Siste treningsturer - {workouts.length} stk</Text>\n\t\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{workouts && workouts.map(workout => (\n\t\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>}\n\n\t\t\t\t</>}\n\n\t\t\t\t{/* {!isLoading && <UserUpdate stores={this.props.stores} />} */}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n    commentStory = async () => {\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n            });\n            callback({ story, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control rounded rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentStory}\n                                ><Text id='comments.add-comment'>Send</Text></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    render() {\n\t\tconst { currentSeason, prevSeason } = this.props;\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { team } = teamStore;\n\n        const { year } = this.props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n        const months = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > currentYear || (month.year === currentYear && month.month >= currentMonth)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center'>\n                        <h3>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n\nconst initialState = {\n\tstory: {\n        title: '',\n        body: '',\n        images: [],\n        public: false,\n    },\n    showAddImage: false,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addStory = async () => {\n        const { callback = () => {} } = this.props;\n        const { story = {} } = this.state;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.insert({\n            title: story.title,\n            body: story.body,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed();\n            callback(response.data);\n            this.setState({\n                story: {\n                    title: '',\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n            });\n\t\t}\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { col = 12, offset = 0 } = this.props;\n        const { story, showAddImage } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                <div class='row bg-light'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-3 mt-0`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div \n                                class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                            >\n                                {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                            </div>\n                            <div class='col pl-3' style='line-height: 1.2em;'>\n\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <Localizer>\n                                            <textarea\n                                                class='form-control rounded'\n                                                type='text'\n                                                placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                onInput={linkState(this, 'story.body')}\n                                                onKeyUp={mu.resizeTextarea}\n                                                style='height: 2.3em;'\n                                                value={story.body}\n                                                ref={c => this.inputRef['newStoryBody'] = c}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                        <button type='button' class='btn btn-primary mb-2'\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                <div class='col-4 text-center'>\n                                    <div class='form-group'>\n                                        <small>\n                                            <select\n                                                class='custom-select custom-select-sm'\n                                                id='team'\n                                                onInput={linkState(this, 'story.team')}\n                                            >\n                                                {user.teams && user.teams.map((teamId) => {\n                                                    const team = userStore.findTeam(teamId, true);\n                                                    if (team && team.public) {\n                                                        return (<option value={team.id}>{team.name}</option>);\n                                                    }\n                                                    return '';\n                                                })}\n                                                \n                                                {!user.teams && <>\n                                                    <option value=''>No public teams</option>\n                                                </>}\n                                            </select>\n                                        </small>\n                                    </div>\n                                </div>\n                                <div class='col-4 text-center'>\n                                    <div class='form-group'>\n                                        <div class='custom-control custom-control-sm custom-switch text-overflow'>\n                                            <small>\n                                                <input\n                                                    type='checkbox'\n                                                    class='custom-control-input'\n                                                    id='public'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    checked={story.public == 1}\n                                                />\n                                                <label class='custom-control-label' for='public'><Text id='story.public'>Is public</Text></label>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='col-4 text-center'>\n                                    <small>\n                                        <button type='button' class={`btn btn-sm`}\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        >\n                                            <i class={`text-success fas fa-image`} /> <Text id='store.add-image'>Add image</Text>\n                                        </button>\n                                    </small>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    {showAddImage && <>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {story.images && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} />\n                                    </>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    commentStory = async () => {\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control form-control-sm rounded rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentStory}\n                                ><Text id='comments.add-comment'>Send</Text></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies } = this.state;\n\t\tconst { story, callback = () => {}, compact = false } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser, language = 'no' } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <span style='font-size: 0.95em;'>\n                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                            <Markdown markdown={mu.replaceImages(comment.comment, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                        </span>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                            <Markdown markdown={mu.replaceImages(reply.comment, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageSlider from '../imageSlider';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    viewImageIdx: {},\n};\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        console.log('addCommentToFeed', { workout, response, commentId });\n        const { teamStore } = this.props.stores;\n        switch (type) {\n            case 'likeComment':\n                teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                break;\n            case 'likeReply':\n                teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                break;\n        \n            default:\n                if (commentId) {\n                    teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                } else {\n                    teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                }\n                break;\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { teamStore } = this.props.stores;\n        teamStore.addLikeToWorkout({ id, data });\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadTeamsPublicFeed(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed();\n\t}\n\n    async loadAll() {\n\t\tawait this.loadTeamsPublicFeed();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n\t}\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx = {} } = this.state;\n        const { teamStore, userStore, appState } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'no' } = user;\n        const { publicTeamsFeed } = teamStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                {publicTeamsFeed && publicTeamsFeed.map((feed) => {\n                    const team = teamStore.findPublicTeam(feed.team) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    }\n                    const { likes, comments } = feed;\n                    const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n                    const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n                    const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n                    const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n                    const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n                    const images = [];\n                    if (feed.mapImage) {\n                        images.push(feed.mapImage);\n                    }\n                    if (feed.images) {\n                        const imgs = toJS(feed.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[feed.id] ? viewImageIdx[feed.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n                    // if (feed.gpxInfo && feed.gpxInfo.svgMap) {\n                    //     images.push({\n                    //         svg: feed.gpxInfo.svgMap,\n                    //         stroke: '#0275d8',\n                    //     });\n                    // }\n                    // if (feed.gpxInfo && feed.gpxInfo.svgElevation) {\n                    //     images.push({\n                    //         svg: feed.gpxInfo.svgElevation,\n                    //         stroke: '#5cb85c',\n                    //     });\n                    // }\n\n                    return (<>\n                        <div class='row pb-4 bg-light'>\n                            <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\n                                <div class='d-flex'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                        <h5 class='mb-1' style='line-height: 1.0em;'>{team.name}</h5>\n                                        <div>\n                                            {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                                                {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                                            </small>}\n                                            {feed.public === 1 ? <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-globe-europe' />\n                                                </small>\n                                            </> : <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                                </small>\n                                            </>}\n                                            <small class='text-muted'>\n                                                {feed.equipment > 0 && <><i class='fas fa-tools' /> {userStore.findEquipment(feed.equipment) || feed.equipment}</>}\n                                                {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                                                {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                                                {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>}\n                                                {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                                                {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                                                {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>}\n                                                {feed.sledWeight > 0 && <>\n                                                    <i class='fas fa-sleigh ml-2' /> {util.format(feed.sledWeight, 0)} kg\n                                                </>}\n                                                {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                                                {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                                                {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                                                {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>}\n                                            </small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='row mt-2'>\n                                    <div class='clearfix col-12 font-weight-bold'>\n                                        <Markdown markdown={mu.replaceImages(feed.name, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                    <div class='clearfix col-12'>\n                                        <Markdown markdown={mu.replaceImages(feed.comment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                </div>\n\n                                <div class='row mt-1'>\n                                    {feed.distanceKm > 0 && <div class='col'>\n                                        <div>\n                                            <small><Text id='workout.calendar.distance'>Distanse</Text></small>\n                                        </div>\n                                        <div class='text-overflow' style='font-size: 1.4em;'>\n                                            <i class='fas fa-road' /> {displayDistance(feed.distanceKm)}km\n                                        </div>\n                                    </div>}\n                                    {feed.elevation > 0 && <div class='col'>\n                                        <div>\n                                            <small><Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                                        </div>\n                                        <div class='text-overflow' style='font-size: 1.4em;'>\n                                            <i class='fas fa-mountain' /> {util.format(feed.elevation, 0)}m\n                                        </div>\n                                    </div>}\n                                    {feed.duration > 0 && <div class='col'>\n                                        <div>\n                                            <small><Text id='workout.calendar.duration'>Varighet</Text></small>\n                                        </div>\n                                        <div class='text-overflow' style='font-size: 1.4em;'>\n                                            <i class='fas fa-clock' /> {util.secToHms(feed.duration)}\n                                        </div>\n                                    </div>}\n                                </div>\n\n                                {/* <div class='row'>\n                                    <div class='row mb-3'>\n                                        {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                                            <div class='col-6 mt-auto text-center overflow-hidden'>\n                                                <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                                    <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                                                </svg>\n                                                <small class='text-muted'>Track</small>\n                                            </div>\n                                        </>}\n                                        {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                                            <div class='col-6 mt-auto text-center overflow-hidden'>\n                                                <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                                    <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                                                </svg>\n                                                <small class='text-muted'>Elevation</small>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div> */}\n\n                                <div class='container-fluid px-0 mt-1'>\n                                    {currentImage && <div class='clearfix row'>\n                                        <div\n                                            class={`col-12 px-0 overflow-hidden`}\n                                            style={`max-height: 50vh;`}                                                    \n                                        >\n                                            <img class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                        </div>\n                                    </div>}\n                                    {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                        {images.map((img, idx) => {\n                                            // if (img.svg) {\n                                            //     return (<>\n                                            //         <div class={`col-4 mt-auto`}>\n                                            //             <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                            //                 <path d={`${img.svg}`} style={`fill: none; stroke: ${img.stroke || '#0275d8'}; stroke-width: 5; opacity: 0.5;`} />\n                                            //             </svg>\n                                            //         </div>\n                                            //     </>);\n                                            // }\n                                            return (<>\n                                                <div\n                                                    class={`col px-0 overflow-hidden`}\n                                                    style={`max-height: 100px;`}                                                    \n                                                >\n                                                    <img class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={feed.id} data-idx={idx} />\n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>}\n                                </div>\n\n                                <div class='mt-2'>\n                                    {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                    </small>}\n                                    {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-comment text-primary' /> {comments.length}\n                                    </small>}\n                                </div>\n\n                                {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                                </div>}\n\n                                <div>\n                                    <div class='row'>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class={`btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''}`}\n                                                data-id={feed.id}\n                                                onClick={this.likeWorkout}\n                                                // disabled={hasLikedWorkout}\n                                            >\n                                                <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                            </button>\n                                        </div>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                                data-id={feed.id}\n                                                onClick={this.toggleAddComment}\n                                            >\n                                                <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {showAddComment[feed.id] && <WorkoutAddComment\n                                        stores={this.props.stores}\n                                        workout={feed}\n                                        inputRef={c => this.inputRef[feed.id] = c}\n                                        col='10'\n                                        offset='2'\n                                        callback={this.addCommentToFeed}\n                                    />}\n                                    <WorkoutComments\n                                        stores={this.props.stores}\n                                        workout={feed}\n                                        col='10'\n                                        offset='2'\n                                        compact={false}\n                                        callback={this.addCommentToFeed}\n                                    />\n                                </div>\n                            </div>\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 6 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-06-01`, `${seasonStart}-05-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-06-01`, `${seasonStart + 1}-05-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n    viewImageIdx: {},\n};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const storyId = parseInt(e.target.closest('button').dataset.id, 10);\n\n\t\tconst { storyStore } = this.props.stores;\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response.status === 200) {\n            // this.addLikeToFeed(storyId, response.data);\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed();\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx } = this.state;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user } = userStore;\n        const { publicFeed } = storyStore;\n\t\tconst { language = 'no' } = user;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n                {publicFeed && publicFeed.map((story) => {\n                    const team = storyStore.findPublicTeam(story.team) || {};\n                    let image;\n                    if (team.image && team.image.s3SmallLink) {\n                        image = team.image;\n                    } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n                        image = team.images[0];\n                    }\n                    const { likes, comments } = story;\n                    const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === user.id) > -1;\n                    const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n                    const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n                    const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n                    const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n                    const images = [];\n                    if (story.images) {\n                        const imgs = toJS(story.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    return (<>\n                        <div class='row pb-4 bg-light'>\n                            <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\n                                <div class='d-flex'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedSmall`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                        <h5 class='mb-1' style='line-height: 1.0em;'>{team.name}</h5>\n                                        <div class='mb-2'>\n                                            {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                                {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                            </small>}\n                                            {story.public === 1 ? <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-globe-europe' />\n                                                </small>\n                                            </> : <>\n                                                <small class='ml-2 text-muted'>\n                                                    <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                                </small>\n                                            </>}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='row mt-2'>\n                                    <div class='clearfix col-12'>\n                                        <Markdown markdown={mu.replaceImages(story.body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </div>\n                                </div>\n\n\n                                <div class='container-fluid px-0 mt-1'>\n                                    {currentImage && <div class='clearfix row'>\n                                        <div\n                                            class={`col-12 px-0 overflow-hidden`}\n                                            style={`max-height: 70vh;`}                                                    \n                                        >\n                                            <img class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                        </div>\n                                    </div>}\n                                    {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                        {images.map((img, idx) => {\n                                            return (<>\n                                                <div\n                                                    class={`col px-0 overflow-hidden`}\n                                                    style={`max-height: 100px; min-width: 100px;`}                                                    \n                                                >\n                                                    <img class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={story.id} data-idx={idx} />\n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>}\n                                </div>\n\n                                {/* <div class='row'>\n                                    <div class='mx-0 px-0 clearfix row'>\n                                        {story.images && story.images.map((img, idx) => {\n                                            const width_first = 'col-12';\n                                            const width_second = 'col';\n                                            return (<>\n                                                <div class={`px-0 ${idx === 0 ? width_first : width_second} overflow-hidden`} style={`max-height: 60vh;`}>\n                                                    <img class={`img-fluid ${idx > 0 ? 'border border-2' : ''}`} style='min-width: 100px;' src={img.s3LargeLink} />                                        \n                                                </div>\n                                            </>);\n                                        })}\n                                    </div>\n                                </div> */}\n\n                                <div class='mt-2'>\n                                    {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                                    </small>}\n                                    {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                        <i class='fas fa-comment text-primary' /> {comments.length}\n                                    </small>}\n                                </div>\n\n                                {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public && <div class='clearfix mb-2'>\n                                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n                                </div>}\n\n                                <div>\n                                    <div class='row'>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class={`btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''}`}\n                                                data-id={story.id}\n                                                onClick={this.likeStory}\n                                                // disabled={hasLikedStory}\n                                            >\n                                                <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                                            </button>\n                                        </div>\n                                        <div class='col-6 text-center'>\n                                            <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                                data-id={story.id}\n                                                onClick={this.toggleAddComment}\n                                            >\n                                                <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='mt-2'>\n                                    {showAddComment[story.id] && <StoryAddComment\n                                        stores={this.props.stores}\n                                        story={story}\n                                        inputRef={c => this.inputRef[story.id] = c}\n                                        inputRefObject={this.inputRef}\n                                        col='10'\n                                        offset='2'\n                                    />}\n                                    <StoryComments\n                                        stores={this.props.stores}\n                                        story={story}\n                                        col='10'\n                                        offset='2'\n                                        compact={false}\n                                    />\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </>);\n                })}\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nfunction replaceImages(line = '', images, language = 'no') {\n    function imageReplacer(match, p1, p2, p3, offset, string) {\n        // console.log({ match, p1, p2, p3, offset, string })\n        if (util.isObject(images[p1])) {\n            return `<img src=${images[p1].s3XXLargeLink} class='img-fluid float-right' style='width: ${p2 || 40}%;' />`;\n        }\n        return '';\n    }\n\n    if (util.isString(line)) {\n\t\tlet text = line;\n        const regex = new RegExp(`<${language}>(.*?)</${language}>`, 's');\n\t\tconst match = regex.exec(text);\n\t\tif (match) {\n\t\t\tconst parsedLanguageText = match[0];\n\t\t\tif (parsedLanguageText) {\n\t\t\t\ttext = parsedLanguageText;\n\t\t\t}\n\t\t}\n        return text.replace(/\\{\\{img\\.(\\d+)\\s*(\\d*)\\}\\}/g, imageReplacer);\n    }\n    return line;\n}\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {};\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode, language = 'no' } = appState;\n\t\tconst { showNews } = this.state;\n\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <h5><Text id='races.homerun'>Homerun races</Text></h5>\n                </div>\n\n                {(races || races.length === 0) && <div class='col-12 text-center py-5'>\n                    <h5>No upcoming races!</h5>\n                    Take a look at the previous races:<br />\n                    <a href='https://homerunrace.no/'>homerunrace.no</a>\n                </div>}\n\n                {races && races.sort((a, b) => a.startDate - b.startDate).reverse().map(race =>  {\n                    const today = new Date();\n                    let status = '';\n                    if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                        status = 'race';\n                    } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                        status = 'signup';\n                    } else if (today > new Date(race.endDate)) {\n                        return (<></>);\n                    }\n\n                    return (<>\n                        <div class='col-12 col-sm-12 col-md-6 col-lg-6 mb-3'>\n\n                            <div class='card position-relative'>\n                                <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                    {status === 'signup' && <>\n                                        <div class='spinner-grow text-primary' role='status' />\n                                    </>}\n                                    {status === 'race' && <>\n                                        <div class='spinner-grow text-danger' role='status' />\n                                    </>}\n                                    {status === 'done' && <>\n                                        <span><i class='fas fa-check text-success' /></span>\n                                    </>}\n                                </h5>\n                                <h5 class='card-header'>\n                                    {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                    {race.title}\n                                </h5>\n                                <div class='list-thumb d-flex align-items-center position-relative'>\n                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                        {status === 'signup' && <>\n                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                        </>}\n                                        {status === 'race' && <>\n                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                        </>}\n                                        {status === 'done' && <>\n                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                        </>}\n                                    </h5>\n                                    {(race.images && race.images[0]) ? <img src={race.images[0].s3MediumLink} class='card-img-top' /> : ''}\n                                </div>\n                                <div class='card-body'>\n                                    <p class='card-text'>\n                                        <Markdown markdown={replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\t\t\t\t\t\t\t\t\n                                    </p>\n                                    {race.classes && <>\n                                        <div class='mb-3'>\n                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                    {currentClass.title}\n                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                </span>\n                                            </>)}\t\t\t\t\t\t\t\t\t\t\t\n                                        </div>\n                                    </>}\n                                    <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'><Text id='races.read-more'>Les mer</Text></a>\n                                </div>\n                                <div class='card-footer'>\n                                    <small class='text-muted'>\n                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\t\t\t\t\t\t\n                    </>);\n                })}\n\n\n            </div>\n        );\n    }\n}\n\nexport default Races;\n","import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\n\nconst initialState = {\n    menu: {\n\t\tprofile: false,\n\t\tmain: false,\n\t},\n\tsearchText: '',\n};\n\n@observer\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n\t\tconst { notifications = [] } = userStore;\n\t\tconst unreadNotificatins = notifications.filter(e => !e.read);\n\t\tconst unread = unreadNotificatins.length || 0;\n\n        if (unread < 3) {\n            return '';\n        }\n\n\t\treturn (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 clearfix px-0'>\n                <div class='alert alert-danger' role='alert'>\n                    <a href='/users/notifications' class='text-dark'>\n                        <i class='fas fa-bell mr-2 text-dark' />\n                        <span class='badge badge-pill badge-danger'>{unread}</span> <Text id='notifications.unread'>Uleste varslinger. Klikk her for å se alle...</Text>\n                    </a>\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Notifications;\n"],"sourceRoot":""}