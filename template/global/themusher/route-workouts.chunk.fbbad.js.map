{"version":3,"sources":["webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","loadedTime","isLoading","submenu","workoutFilter","sessionid","Date","getTime","dataFields","Workouts","observer","props","loadWorkouts","currentMonth","currentYear","setState","userStore","stores","currentTeam","workoutStore","getMonth","getFullYear","month","year","Promise","all","load","query","team","loadWorkoutSummary","loadWorkoutPlans","getNotifications","loadStravaActivities","loadGarminActivities","loadTeams","workoutPlanCurrent","workoutPlanStore","seasonYear","addData","workoutPlans","id","prepareWeekGraphs","updateKeyValue","resetGraphPlanWeekDistanceCurrent","chooseSubmenu","e","target","parentElement","dataset","menu","chooseDay","day","state","dd","mm","yyyy","w","date","d","getDate","m","y","parseInt","renderContent","obj","workout","showDate","wrapperClasses","wrapperClassesRow","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","this","teamStore","skipMusherWorkoutSummary","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummary","getWorkoutSummaryDay","daysBack","componentWillMount","componentWillUnmount","clearInterval","componentDidMount","appState","checkCordova","componentWillReceiveProps","nextProps","render","percentComplete","scrolledDown","workoutPlan","user","workoutSummaryWeekDay","language","MONTHS","getMonths","seasonStart","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","planMonth","sumWorkoutPlanMonth","summaryMonth","findWorkoutSummaryMonth","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","class","style","href","role","util","secToHms","format","callback","key","data-menu","onClick","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","url","section","basehref","showNavigation","showHeader","strava","activities","garmin","fields","name","data","wrapperClassNames","contentClassNames","dataValues","type","Component","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","monthRange","prevSeasonMonths","xTicksAll","weekRange","map","wo","partSize","xTicks","i","l","push","scope"],"mappings":"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","file":"route-workouts.chunk.fbbad.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nimport FastList from '../../components/team/fastList';\n\nconst initialState = {\n\tloadedTime: 0,\n\tisLoading: false,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n\tsessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tawait Promise.all([\n\t\t\tworkoutStore.load({ query: { team: currentTeam, year, month } }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(props),\n\t\t]);\n\t\tthis.setState({\n\t\t\tloadedTime: new Date().getTime(),\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({\n\t\t\t\tquery: {\n\t\t\t\t\tteam: currentTeam,\n\t\t\t\t\tseasonYear: seasonStart,\n\t\t\t\t},\n\t\t\t\taddData: ['tips'],\n\t\t\t});\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t} else {\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlan', {});\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlans', []);\n\t\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\trenderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        return (<>\n\t\t\t<Workout\n\t\t\t\tstores={this.props.stores}\n\t\t\t\tworkout={obj}\n\t\t\t\tshowDate={true}\n\t\t\t\twrapperClasses={'w-100'}\n\t\t\t\twrapperClassesRow={''}\n\t\t\t/>\n        </>);\n    }\n\n\t// Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { workoutStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => workoutStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n\tcomponentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentWillUnmount() {\n        const { workoutStore, stravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n        workoutStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n    }\n\t// /Scroll views timer\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n        const { scrolledDown } = this.props;\n\t\tconst { isLoading, submenu, handleIntersection, sessionid, loadedTime } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user, workoutSummaryWeekDay = [] } = userStore;\n        const { language = 'en' } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\t\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst { stravaActivities = [] } = stravaActivityStore;\n\t\tconst { garminActivityDetails = [] } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top' style={`margin-top: ${scrolledDown > 0 ? 0 : SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'}; transition: all 0.3s ease-in-out;`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={`${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={`${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalDistanceKmMonth, 0)} <small><small><small>km</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalSpeedavgMonth, 1)} <small><small><small>km/t</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<WorkoutStatus\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}-${loadedTime}`}\n\t\t\t\t\t\t\tshowNavigation={true}\n\t\t\t\t\t\t\tshowHeader={true}\n\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row mt-3'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\t\t\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t{user && user.strava && <>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activities={stravaActivities} key={`strava-${currentTeam}-${stravaActivities.length}`} />\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t{user && user.garmin && <>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activities={garminActivityDetails} key={`garmin-${currentTeam}-${garminActivityDetails.length}`} />\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<FastList\n\t\t\t\t\t\t\tdata={workoutsFiltered}\n\t\t\t\t\t\t\twrapperClassNames={'row pb-4'}\n\t\t\t\t\t\t\tcontentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n\t\t\t\t\t\t\trenderContent={this.renderContent}\n\t\t\t\t\t\t\tdataFields={dataFields}\n\t\t\t\t\t\t\tdataValues={{ type: '11' }}\n\t\t\t\t\t\t\thandleIntersection={handleIntersection}\n\t\t\t\t\t\t\tsessionid={sessionid}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* {workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))} */}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { isLoading, year = currentYear, month = currentMonth, showHeader = true } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { user } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}