{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/feedback/likesAndComments.js","webpack:///./components/workout/commentAdd.js","webpack:///./components/util/scrollIntoView.js","webpack:///./components/workout/totals.js","webpack:///./components/imageSlider/index.js","webpack:///./components/workout/commentReply.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/data/distance.js","webpack:///./components/workout/status.js","webpack:///./components/story/add.js","webpack:///./components/story/comments.js","webpack:///../node_modules/preact-pwa-install/src/util.js","webpack:///../node_modules/preact-pwa-install/src/index.js","webpack:///./components/install/index.js","webpack:///./components/style.css","webpack:///./components/team/publicFeedLine.js","webpack:///./components/team/publicFeed.js","webpack:///./components/story/publicStory.js","webpack:///./components/story/storyPoll.js","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/team/connect-boxes.js","webpack:///./components/user/invite.js","webpack:///./components/user/updateSettings.js","webpack:///./components/ad/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./components/team/teams.js","webpack:///./components/races/index.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/workout/comments.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/feedback/views.js","webpack:///./components/yrweather/index.js","webpack:///./components/team/fastList.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","subMenuMarginTop","isLoading","submenu","Home","observer","props","chooseSubmenu","e","setState","target","parentElement","dataset","menu","addNavigation","viewmenu","appState","stores","setSwipeRight","setSwipeLeft","route","destroyLog","workoutStore","cordovaDestroyLog","state","loadAll","this","userStore","messageStore","getFingerprint","getInfo","getNotifications","getUnReadMessages","componentDidMount","componentWillUnmount","componentWillReceiveProps","render","path","teamid","user","currentTeam","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","class","style","role","util","secToHms","format","href","id","data-menu","Component","DisplayLikesAndComments","toggleLikes","showLikesList","storyStore","teamStore","raceStore","likes","comments","type","onTeamClick","length","onClick","slice","map","like","teams","publicTeam","findPublicUser","findPublicTeamByMembers","isArray","find","public","getImage","team","priority","displayNameShort","name","displayName","uuidv4","title","fields","total","image","shortname","WorkoutAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentWorkout","response","callback","inputRefObject","workout","comment","showAddImage","status","body","images","resizeTextarea","addImage","addImages","push","value","handleImageErrored","onerror","setTimeout","src","Date","inputRef","col","offset","showAvatar","extraClass","firstname","ucfirst","lastname","email","userImage","undefined","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","ref","data-id","disabled","img","onError","removeImage","data-name","object","updateField","before","after","autoOpen","ScrollIntoView","container","horizontal","vertical","behavior","inline","block","scrollIntoView","c","WorkoutTotals","loadTeams","currentMonth","currentYear","getMonth","getFullYear","month","year","load","query","skipMusherWorkoutSummary","addData","nextProps","currentSeasonSummary","currentSeason","prevSeasonSummary","prevSeason","seasonStart","parseInt","findWorkoutSummary","findWorkoutSummaryTotal","distanceKm","smallUnit","elevation","duration","speedAvg","touchStart","stopPropagation","startX","touches","pageX","touchEnd","sliding","touchMove","totalImages","x","prevImage","nextImage","imageContainer","currentImage1","currentImage2","currentIdx","imageDots","Array","fill","y","nextImageContainer","nextIdx","nextImages","imgHeight","imgWidth","curImage","dimensions","width","height","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","s3LargeLink","image1","image2","i","WorkoutCommentReply","commentId","commentReplyWorkout","StoryAdd","commentStory","story","StoryCommentReply","commentReplyStory","initCall","displayDistance","distance","Distance","settings","imperial","kmToMiles","WorkoutStatus","loadWorkoutPlans","workoutPlanCurrent","workoutPlanStore","seasonYear","seasonMonth","workoutPlans","loadWorkoutSummary","getWorkoutSummary","dog","lastPlanMonth","workoutPlan","language","MONTHS","getMonths","findTeam","months","monthRange","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","aria-valuenow","aria-valuemin","aria-valuemax","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","insert","pinned","urlText","url","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","data","imageName","idx","findIndex","splice","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","isAdmin","teamId","darkmode","onChange","selected","checked","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","likeStoryComment","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","deleteCommentReplyStory","commentid","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","translate","translatedText","key","preventDefault","replyid","translateCommentReply","translateComment","max_comments","compact","currentUser","filteredComments","totalComments","diplayedComments","Math","max","reverse","hasLikedComment","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","translation","getCommentTranslations","targetLang","data-comment","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","getWindow","window","isStandalone","matchMedia","matches","navigator","standalone","dispatchToOnPrompt","CACHE","onPrompts","forEach","onPrompt","prompt","awaitInstallPrompt","installPromptListener","installPrompt","Promise","resolve","appInstalledListener","addEventListener","userChoice","then","choiceResult","outcome","success","removeEventListener","func","reset","useInstaller","useState","setInstallPrompt","useEffect","cancel","installed","InstallButton","onclick","module","exports","likeWorkout","idxSuggestion","idxAd","limit","hasFollowSugguestions","hasAd","sessionid","getTime","TeamPublicFeedLine","toggleDate","showDate","workoutId","addLikeToFeed","addCommentToFeed","holdingStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","workoutsAddLikeToComment","workoutsAddLikeToCommentReply","workoutsAddCommentToWorkoutComment","workoutsAddCommentToWorkout","addLikeToWorkout","workoutsAddLikeToWorkout","toggleAddComment","shareLink","shareUrl","text","showWorkoutDetail","localName","console","log","translatedTextName","translatedTextComment","feed","field","containerRef","publicDogs","onUserClick","onDogClick","hasShareApi","publicUser","findPublicTeam","findTeamAmbition","ambition","ambitions","username","userLink","teamType","findTeamType","isTeamAdmin","members","some","m","hasLikedWorkout","totalFollowers","followers","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","gpxInfo","hideProfile","mapImage","currentLocationGeocode","views","getViews","statistics","adminData","getAdminData","translationName","getTranslation","feedName","feedComment","date","formatDate","hour12","hour","minute","dogs","track","sledWeight","temperature","formattedCounty","moonIllumination","phaseIcon","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","dblClick","likeRef","allDogs","avgGpsMovingSpeed","buttonOnly","data-url","data-title","rel","data-native","dataFields","TeamPublicFeed","setLoadMore","loadTeamsPublicFeed","unsetLoadMore","insertTopRanked","publicTeamsFeed","topRankedRandomized","shuffleArray","topRankedWorkouts","randomPlace","randomInt","isObject","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","idxConfirm","insertTeamSuggestions","showTeam","hideTeam","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","renderContent","obj","sort","componentWillMount","clearInterval","findPublicTeamByUuidv4","back","dataValues","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","publicFeedUpdate","storyType","saveStoryField","subfield","subvalue","clearTimeout","updateTimer","doUpdateField","updateFieldValue","skipTimer","newValue","localObjectValue","textareaRef","createRef","opts","current","data-subfield","data-subvalue","StoryTypeRegular","showStoryDetail","setSelectedImage","selectedImageIdx","getInlineComponents","components","finalBody","offline","component","storyId","params","content","StoryTypeAd","asUrl","currencty","StoryTypeArticle","StoryPublicFeed","likeIds","Object","keys","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","loadStoriesPublicFeed","hashtag","reports","hasLikedStory","simple","classNames","StoryPoll","pollStory","line","toggleResult","viewResult","lines","split","trim","replace","hasPolledStory","polls","totalPolls","maxPercent","percent","md5","voteDays","days","finishDate","addDays","isExpired","hasImageRegexp","RegExp","hasPolledLine","extended","test","data-line","Temperature","celciusToFahrenheit","Weight","kgToPounds","requestSent","Teams","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","loadPublic","notfollowing","array","publicTeamsToFollow","place","Invite","inviteKennel","friendEmail","inviteSent","inviteNew","hideInvite","updateSetting","forceShow","toggleSetting","hideSettings","summaryEmails","infoEmails","partnerEmails","Ad","withText","subject","logClick","ads","adStore","apiServer","getApiServer","loadAd","page","section","postalcode","setTime","time","match","ad","native","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","checkForNewStories","clearCheckForNewStories","publicFeed","topRankedStories","startPosition","now","parseInputDate","floor","endPosition","hasNewStories","Elevation","meterToFeet","Speed","kmtToMph","Images","handleAddImage","file","addToImages","files","uploadStatus","apiUrl","toggleTeam","unsetTeamIfSelected","dogStore","setCurrentTeam","isDefined","showAllTeams","highlight","showAll","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","toggleRaces","hideRaces","toggleFeature","racesFrontpage","setToggleFeature","scrollRaces","raceIdx","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","loadRace","relevant","races","today","onScroll","race","signupStartDate","signupEndDate","liveRace","active","ingress","classes","a","b","currentClass","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","hasFollowRequests","reqUser","isDeleted","isConfirmed","data-user","data-follow","WorkoutComments","likeWorkoutComment","likeWorkoutCommentReply","DragNDropFileupload","dropRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","updateProgress","fileObj","uploadDone","open","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","click","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","isImage","result","formatBytes","children","toggleViews","showViewList","viewUsersArrays","entries","weekObject","viewUsers","flat","userId","YrWeather","toggleyrWeather","showWeather","loadWeather","currentLocationInfo","coords","getWeatherUser","lat","latitude","lon","longitude","altitude","formatWeather","yrWeather","yrWeatherKeys","yrWeatherFormatted","captureEvents","getNestedValue","night","morning","day","evening","getTemperatureColor","getWindSpeedColor","w","isoTime","windDirection","FastListLine","removeIntersectionObserver","addIntersectionObserver","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","isIntersecting","currentHeight","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses"],"mappings":"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","file":"route-home.chunk.d633e.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport YrWeather from '../../components/yrweather/';\nimport Races from '../../components/races/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, messageStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\tawait messageStore.getUnReadMessages();\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.addNavigation();\n\t\tthis.loadAll();\n\t}\n\n\t// Swipe navigation\n\taddNavigation = (props = this.props) => {\n        const { viewmenu } = props;\n        const { appState } = this.props.stores;\n\t\tif (viewmenu === 'wall') {\n\t\t\tappState.setSwipeRight();\n\t\t\tappState.setSwipeLeft(() => {\n\t\t\t\tappState.setSwipeLeft();\n\t\t\t\troute(`/home-workout`);\n\t\t\t});\n\t\t}\n\t\tif (viewmenu === 'workout') {\n\t\t\tappState.setSwipeLeft();\n\t\t\tappState.setSwipeRight(() => {\n\t\t\t\tappState.setSwipeRight();\n\t\t\t\troute(`/`);\n\t\t\t});\n\t\t}\n\t}\n\n\t// getState = async () => {\n\t// \tconst { workoutStore } = this.props.stores;\n\t// \tawait workoutStore.cordovaGetState();\n\t// \tawait workoutStore.cordovaProviderState();\n\t// \tawait workoutStore.cordovaIsPowerSaveMode();\n\t// \tawait workoutStore.cordovaGetLog();\n\t// }\n\n\tdestroyLog = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tworkoutStore.cordovaDestroyLog();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setSwipeRight();\n\t\tappState.setSwipeLeft();\n\t}\n\t// /Swipe navigation\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.viewmenu !== this.props.viewmenu) {\n            // this.addNavigation(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { viewmenu, path, teamid, scrollToTop } = this.props;\n\t\tconst { userStore, appState, workoutStore } = this.props.stores;\n\t\t// const { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode, apiServer } = appState;\n\t\tconst { isAdmin, user } = userStore;\n\t\tconst { currentLocationGeocode = {}, yrWeatherKeys = [] } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, cordovaAuthorizationStatus, powerSaveStatus,\n\t\t\tproviderState, log, isRunning, totalDistance, geoLocationState, bgGeo, currentSpeed, totalTime, workouts } = workoutStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\n{/* <xmp>bgGeo: {JSON.stringify(bgGeo, null, 4)}</xmp> */}\n\n{/* <button class='btn btn-success btn-block' onClick={this.getState}>Get State</button>\n<button class='btn btn-success btn-block' onClick={this.destroyLog}>Destroy log</button>\n<xmp>cordovaAuthorizationStatus: {JSON.stringify(cordovaAuthorizationStatus, null, 4)}</xmp>\n<xmp>cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams, null, 4)}</xmp>\n<xmp>geoLocationState: {JSON.stringify(geoLocationState, null, 4)}</xmp>\n<xmp>powerSaveStatus: {JSON.stringify(powerSaveStatus, null, 4)}</xmp>\n<xmp>providerState: {JSON.stringify(providerState, null, 4)}</xmp>\n<xmp>isRunning: {JSON.stringify(isRunning, null, 4)}</xmp>\n<xmp>totalDistance: {JSON.stringify(totalDistance, null, 4)}</xmp>\n<xmp>currentSpeed: {JSON.stringify(currentSpeed, null, 4)}</xmp>\n<xmp>totalTime: {JSON.stringify(totalTime, null, 4)}</xmp>\n<xmp>workoutStore.workouts: {JSON.stringify(workouts.length, null, 4)}</xmp> */}\n\n{/* {log && <>{JSON.stringify(log.split('\\n').map(e => `${e}\\n`), null, 4)}</>} */}\n\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{/* <xmp>{JSON.stringify(window.cordova, null, 4)}</xmp> */}\n\t\t\t\t{/* <div class=''>\n\t\t\t\t\t{user.id && <YrWeather stores={this.props.stores} place={place} yrWeather={yrWeatherKeys.join(',')} />}\n\t\t\t\t</div> */}\n\n\t\t\t\t{user.id && <StoryAdd stores={this.props.stores} />}\n\n\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1'\n\t\t\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t\t\t>\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-left rounded-none ${viewmenu === 'wall' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='wall'\n\t\t\t\t\t\t\t\t\t\thref='/'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-comments' /> <Text id='home.wall'>Veggen</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-right rounded-none ${viewmenu === 'workout' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='workout'\n\t\t\t\t\t\t\t\t\t\thref='/home-workout'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-running' />  <Text id='home.feed'>Feed</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\thref='/home-totals'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='home.totals'>Totaler</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t{viewmenu === 'wall' && <>\n\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} path={path} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'workout' && <>\n\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} teamid={teamid} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'totals' && <>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} />\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\nconst MAX_USERS_TO_DISPLAY = 1;\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, MAX_USERS_TO_DISPLAY).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            const name = mu.displayName(user);\n                            return (<>\n                                <span class='font-weight-lighter'>\n                                    {publicTeam ? <>\n                                        <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                            {name}\n                                        </a>\n                                    </> : <>\n                                        {name}\n                                    </>}\n                                </span>\n                            </>);\n                            // return (<>\n                            //     {publicTeam ? <>\n                            //         <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                            //             <div\n                            //                 class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //                 style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                            //             >\n                            //                 {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //             </div>\n                            //         </a>\n                            //     </> : <>\n                            //         <div\n                            //             class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //             style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            //         >\n                            //             {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //         </div>\n                            //     </>}\n                            // </>);\n                        })}\n                        {likes.length > MAX_USERS_TO_DISPLAY && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - MAX_USERS_TO_DISPLAY }}>and {likes.length - MAX_USERS_TO_DISPLAY} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n    \n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentWorkout({ id: workout.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[workout.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ workout, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, col = 12, offset = 0, showAvatar = true, extraClass = '', workout } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class={`col-${col} offset-${offset} ${extraClass}`}>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    {showAvatar && <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>}\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={workout.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {comment.images && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' />  <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass WorkoutTotals extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        await this.loadTeams(props);\n        // await Promise.all([\n        //     this.loadTeams(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n        const { teamStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear, currentTeam, currentSeason: currentSeasonSummary, prevSeason: prevSeasonSummary } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { workoutSummary } = teamStore;\n        const prevSeason = prevSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart - 1) : teamStore.findWorkoutSummaryTotal(seasonStart - 1)) || {});\n        const currentSeason = currentSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart) : teamStore.findWorkoutSummaryTotal(seasonStart)) || {});\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2 border-top'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Distance stores={this.props.stores} value={currentSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Distance stores={this.props.stores} value={prevSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Elevation stores={this.props.stores} value={currentSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Elevation stores={this.props.stores} value={prevSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            {util.secToHms(currentSeason.duration || 0)}\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            {util.secToHms(prevSeason.duration || 0)}\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Speed stores={this.props.stores} value={currentSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Speed stores={this.props.stores} value={prevSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutTotals;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentReplyWorkout({ id: workout.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ workout, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WorkoutCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        // await Promise.all([\n        //     this.loadTeams(props),\n        //     this.loadWorkoutPlans(props),\n        //     this.loadWorkoutSummary(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { workoutPlanStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { year = currentYear, month = currentMonth, currentTeam } = props;\n\t\tconst seasonStart = parseInt(year || (month < 8 ? year - 1 : year), 10);\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t}\n\t\t}\n\t}\n\n    async loadWorkoutSummary(props = this.props) {\n        const { year, currentTeam, dog } = props;\n\t\tconst { userStore } = props.stores;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, dog });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n\t\tconst { currentSeason, prevSeason, currentTeam } = this.props;\n\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { workoutPlan } = workoutPlanStore;\n        const { user, workoutSummaryTeam } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst team = teamStore.findTeam(currentTeam) || {};\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { year = currentYear, month = currentMonth } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n        const months = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <span style='display: none;'>{workoutPlan.id}</span>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > year || (month.year === year && month.month >= month)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center text-muted mb-5'>\n                        <div class='display-1'>\n                            <i class='far fa-sad-tear' />\n                        </div>\n                        <h3 class='font-weight-lighter'>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                        <a class='btn btn-success btn-lg mt-3' href='/workouts/plan'><i class='fas fa-calendar-alt' /> <Text id='workout.plan.new'>New workoutplan</Text></a>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    removeImage = async (e) => {\n        const { story } = this.state;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        if (util.isArray(story.images)) {\n            const idx = story.images.findIndex(e => e.name === imageName);\n            if (idx > -1) {\n                story.images.splice(idx, 1);\n            }\n        }\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","/** Object.assign ponyfill (note: used by Rollup)\n *\t@private\n */\nexport function assign(obj) {\n\tfor (let i=1; i<arguments.length; i++) {\n\t\t// eslint-disable-next-line guard-for-in, prefer-rest-params\n\t\tfor (let p in arguments[i]) obj[p] = arguments[i][p];\n\t}\n\treturn obj;\n}\n\n\nexport function getWindow() {\n\ttry {\n\t\tif (window) return window;\n\t}\n\tcatch (e) {\n\t\treturn;\n\t}\n}\n\n","import { h, Component } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { assign, getWindow } from './util'; // eslint-disable-line no-unused-vars\n\n/**\n * Returns true if the application is running as an installed PWA.\n *\n * @example\n * let isStandalone = isStandAlone();\n *\n */\nexport function isStandalone() {\n\tlet window = getWindow();\n\tif (!window) return false;\n\n\treturn window.matchMedia && window.matchMedia('(display-mode: standalone)').matches && true ||\n            window.navigator && window.navigator.standalone === true || false;\n}\n\nconst CACHE = {\n\tprompt: null,\n\tinstallPromptListener: null,\n\tappInstalledListener: null,\n\tonPrompts: []\n};\n\n/**\n * Any window listeners and cached prompts that have been captured by awaitInstallPrompt() are removed.\n */\nexport function reset() {\n\tlet window = getWindow();\n\tif (CACHE.installPromptListener) {\n\t\twindow && window.removeEventListener && window.removeEventListener('beforeinstallprompt', CACHE.installPromptListener);\n\t\tCACHE.installPromptListener = null;\n\t}\n\tif (CACHE.appInstalledListener) {\n\t\twindow && window.removeEventListener && window.removeEventListener('appinstalled', CACHE.appInstalledListener);\n\t\tCACHE.appInstalledListener = null;\n\t}\n\tCACHE.prompt = null;\n\tCACHE.onPrompts = [];\n}\n\nfunction removeOnPrompt(func) {\n\tCACHE.onPrompts = CACHE.onPrompts.filter(onPrompt => onPrompt !== func);\n}\n\nfunction dispatchToOnPrompt() {\n\tCACHE.onPrompts.forEach(onPrompt => onPrompt(CACHE.prompt));\n}\n\n/**\n * This function allows you to listen to the browser for the install prompt\n * that allows you to install the application standalone.\n *\n * Different browsers have different criteria for when this prompt is made available.\n * Currently Chrome requires that  the user \"interact\" with the content on your domain\n * for at least 30 seconds.\n *\n * More info can be found here:\n * https://developers.google.com/web/fundamentals/app-install-banners/\n *\n * awaitInstallPrompt offers the following capabilities:\n * * Listen to the browser for an install prompt.\n * * Stop listening at any time.\n * * Trigger the prompt to request app installation.\n *\n * @param {Function} onPrompt (prompt, cancel) => {} A function that will be called when\n * the browser delivers a prompt that we can present. The first argument prompt is a function\n * you can call at any time the triggers the install process. cancel is another function\n * that allows you to stop listening for prompts.\n *\n * @returns {Function} An function that when called, will stop listening for incoming prompts from the browser.\n *\n * @example\n * let cancel = awaitInstallPrompt((prompt) => {\n *      prompt().then(\n *          success => console.log(\n *              success && 'Successfully installed app as PWA.'\n *                      || 'User abandoned install.'\n *          )\n *      )\n * })\n */\nexport function awaitInstallPrompt(onPrompt) {\n\tif (!CACHE.installPromptListener) {\n\t\tlet window = getWindow();\n\t\tif (!window || isStandalone()) return null;\n\t\tCACHE.installPromptListener = e => {\n\t\t\te.preventDefault();\n\t\t\tlet installPrompt = e;\n\t\t\tCACHE.prompt = () =>  new Promise(resolve => {\n\t\t\t\tCACHE.appInstalledListener = () => {\n\t\t\t\t\tresolve(true);\n\t\t\t\t};\n\t\t\t\twindow.addEventListener('appinstalled', CACHE.appInstalledListener);\n\t\t\t\tinstallPrompt.prompt();\n\t\t\t\tinstallPrompt.userChoice.then(choiceResult => {\n\t\t\t\t\tchoiceResult.outcome !== 'accepted' && resolve(false);\n\t\t\t\t});\n\t\t\t}).then(success => {\n\t\t\t\tinstallPrompt = null;\n\t\t\t\tCACHE.appInstalledListener && window.removeEventListener('appinstalled', CACHE.appInstalledListener);\n\t\t\t\tif (success) {\n\t\t\t\t\tCACHE.prompt = null;\n\t\t\t\t\tdispatchToOnPrompt();\n\t\t\t\t}\n\t\t\t\treturn success;\n\t\t\t});\n\t\t\tdispatchToOnPrompt();\n\t\t};\n\t\twindow.addEventListener('beforeinstallprompt', CACHE.installPromptListener);\n\t}\n\tif (onPrompt) {\n\t\tCACHE.onPrompts.push(onPrompt);\n\t\tCACHE.prompt && onPrompt(CACHE.prompt);\n\t\treturn () => removeOnPrompt(onPrompt);\n\t}\n\treturn () => reset();\n}\n\n/**\n * A Higher Order Component that implements the awaitInstallPrompt() lifecycle and provides\n * the wrapped component with only the meaning full artifacts as props:\n *\n * Props:\n * * isStandalone - true if the app is running in standalone mode.\n * * installPrompt - the prompt function that you call at any time.\n *\n * @example\n * export installer()(\n *      function({isStandalone, installPrompt}){\n *          return (\n *              isStandalone && <p>Running as Standalone</p> ||\n *              installPrompt && <a href=\"#\" onclick={installPrompt}>Install App</a>\n *          );\n *      }\n * );\n */\nexport function installer() {\n\treturn Child => {\n\t\tclass Installer extends Component {\n\n\t\t\tstatic getDerivedStateFromProps(props, state) {\n\t\t\t\treturn state.isStandalone === undefined && { isStandalone: isStandalone() };\n\t\t\t}\n\n\t\t\tcancel() {\n\t\t\t\tthis.setState({ prompt: null });\n\t\t\t\tthis.canceltoken && this.canceltoken();\n\t\t\t}\n        \n\t\t\tcomponentDidMount() {\n\t\t\t\tif (this.state.isStandalone === false) {\n\t\t\t\t\tthis.canceltoken = awaitInstallPrompt(prompt => {\n\t\t\t\t\t\tthis.setState({ prompt });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponentWillUnmount() {\n\t\t\t\tthis.cancel();\n\t\t\t}\n        \n\t\t\trender(props, { isStandalone, prompt }) {\n\t\t\t\treturn h(Child, { ...props, isStandalone, installPrompt: prompt } );\n\t\t\t}\n\t\t}\n\t\treturn Installer;\n\t};\n}\n\n/**\n * A Hook that implements the awaitInstallPrompt() lifecycle and returns\n * an object that contains the isStandalone and installPrompt props:\n *\n * @returns {Object}\n * * isStandalone - true if the app is running in standalone mode.\n * * installPrompt - the prompt function that you call at any time.\n */\nexport function useInstaller() {\n\tconst [standalone] = useState(isStandalone());\n\tconst [installPrompt, setInstallPrompt] = useState(null);\n\tuseEffect(() => awaitInstallPrompt((prompt, cancel) => {\n\t\tsetInstallPrompt({ prompt: () =>\n\t\t\tprompt().then(installed => {\n\t\t\t\tinstalled && cancel();\n\t\t\t\treturn installed;\n\t\t\t})\n\t\t});\n\t}));\n\treturn ({ isStandalone: standalone, installPrompt: installPrompt && installPrompt.prompt });\n}\n\nexport default useInstaller;\n","import { h } from 'preact';\nimport { useInstaller } from 'preact-pwa-install';\nimport { Text } from 'preact-i18n';\n\nexport default function InstallButton() {\n\tconst { installPrompt, isStandalone } = useInstaller();\n\treturn installPrompt && (\n        <div class='text-center'>\n            <a class='btn btn-success' href=\"#\" onclick={installPrompt}>\n                <Text id='install.install-app'>Install The Musher</Text>\n            </a>\n        </div>\n    ) || isStandalone && '';\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport { route } from 'preact-router';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport Speed from '../data/speed';\nimport Elevation from '../data/elevation';\nimport Weight from '../data/weight';\nimport Distance from '../data/distance';\nimport Temperature from '../data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false,\n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    storyStore.workoutsAddLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    storyStore.workoutsAddLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        storyStore.workoutsAddCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        storyStore.workoutsAddCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            teamStore.addLikeToWorkout({ id, data });\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            storyStore.workoutsAddLikeToWorkout({ id, data });\n        }\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    showWorkoutDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const target = e.target.closest('#workoutDetail');\n        if (target) {\n            const { id } = target.dataset;\n            if (id) {\n            console.log({ target, id });\n                route(`/workouts/public/${id}`);\n            }\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { feed = {} } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedTextName = await teamStore.translate({ object: feed, user, field: 'name' });\n        let translatedTextComment;\n        if (feed.comment) {\n            translatedTextComment = await teamStore.translate({ object: feed, user, field: 'comment' });\n        }\n        this.setState({ showOriginal: 0, translatedTextName, translatedTextComment });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { feed, idx, onTeamClick = () => {}, onUserClick = () => {}, onDogClick = () => {}, holdingStore = 'team' } = this.props;\n        const { showAddComment, showDate, likeWorkout, showOriginal, translatedTextName, translatedTextComment } = this.state;\n        const { teamStore, storyStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { darkmode, hasShareApi } = appState;\n        let publicDogs;\n\n        let team = {};\n        let publicUser = {};\n        if (holdingStore === 'team') {\n            team = teamStore.findPublicTeam(feed.team);\n            publicUser = teamStore.findPublicUser(feed.user) || {};\n            const { publicDogs: teamPublicDogs } = teamStore;\n            publicDogs = teamPublicDogs;\n        } else if (holdingStore === 'story') {\n            team = storyStore.findPublicTeam(feed.team);\n            publicUser = storyStore.findPublicUser(feed.user) || {};\n            const { publicDogs: storyPublicDogs } = storyStore;\n            publicDogs = storyPublicDogs;\n        }\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        const image = mu.getImage({ user: publicUser, team, object: feed, priority: 'user' });\n\n        const { likes, comments } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\t\tconst { gpxInfo = {} } = feed;\n\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (publicUser) {\n            shortname = mu.displayNameShort(publicUser);\n            name = mu.displayName(publicUser);\n            username = mu.displayName(publicUser);\n            if (publicUser.settings && publicUser.uuidv4 !== user.uuidv4) {\n                userLink = publicUser.settings.hideProfile ? null : `/inbox/${publicUser.uuidv4}`;\n            }\n        }\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        const translationName = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'name',\n        }) || translatedTextName;\n        let feedName = translationName || feed.name;\n        const translationComment = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'comment',\n        }) || translatedTextComment;\n        let feedComment = translationComment || feed.comment;\n\n        if (showOriginal) {\n            feedName = feed.name;\n            feedComment = feed.comment;\n        }\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                    <span class='badge badge-pill badge-secondary float-right'>{teamType}</span>\n                    <h5 class='mb-1 position-relative' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    <div class='mb-2'>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {feed.public === 1 ? <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-globe-europe' />\n                            </small>\n                        </> : <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                            </small>\n                        </>}\n                        {username && <>\n                            <small class='ml-2 text-muted'>\n                                {userLink ? <>\n                                    <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                </> : <>\n                                    <i class='fas fa-user' /> {username}\n                                </>}\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={feed.sledWeight} />\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> <Temperature stores={this.props.stores} value={feed.temperature} />\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                            {feed.moonIllumination && feed.moonIllumination.phaseIcon && <span class='float-right ml-2'>{feed.moonIllumination.phaseIcon}</span>}\n                        </small>\n                    </div>\n\n                    {isAdmin && <div\n                        class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                        style='overflow: auto;'\n                    >\n                        <small class='text-muted mr-2'>Adm:</small>\n                        {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {publicUser.deviceInfo && <>\n                            <span class='badge badge-secondary ml-1 float-right font-weight-light'>\n                                {['platform', 'manufacturer', 'model'].map(e => <>\n                                    <span class='ml-1 text-white'>\n                                        {publicUser.deviceInfo[e]}\n                                    </span>\n                                </>)}\n                            </span>\n                        </>}\n                        {adminData && <>\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                            </>)}\n                        </>}\n                    </div>}\n                </div>\n            </div>\n\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='d-flex justify-content-between bg-light rounded-lg px-2'>\n                {feed.distanceKm > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Distance stores={this.props.stores} value={feed.distanceKm} />\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Elevation stores={this.props.stores} value={feed.elevation} />\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {gpxInfo && gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                            <Speed stores={this.props.stores} value={gpxInfo.avgGpsMovingSpeed * 3.6} />\n                        </> : <>\n                            <Speed stores={this.props.stores} value={feed.speedAvg} />\n                        </>}\n                    </div>\n                </div>}\n            </div>\n\n            <div class='row mt-2'>\n                <div id='workoutDetail' class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;' onClick={this.showWorkoutDetail} data-id={feed.uuidv4}>\n                    <Markdown markdown={mu.replaceImages(feedName, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feedComment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                {feed.language !== language && <>\n                    {!showOriginal && translationName ? <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                    </> : <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                    </>}\n                </>}\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments\n                    stores={this.props.stores}\n                    likes={likes}\n                    comments={comments}\n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                                data-native\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport TeamConnectBoxes from './connect-boxes';\nimport TeamConnectConfirm from './connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from './fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from './publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 10,\n    offset: 0,\n    hasFollowSugguestions: false, \n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeamsPublicFeed({ props = this.props, limit, offset }) {\n\t\tconst { teamStore } = props.stores;\n        const { teamid } = props;\n\t\tawait teamStore.loadPublicFeed({ limit, offset, sort: '-createdDate', teamid });\n\t}\n\n    setLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {\n            const { teamid } = this.props;\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadTeamsPublicFeed({ limit, offset, teamid });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {});\n    }\n\n    async loadAll(props = this.props) {\n        const { limit } = this.state;\n        const { teamid } = props;\n\t\tawait this.loadTeamsPublicFeed({ props, limit, offset: 0, teamid });\n        // this.insertTopRanked();\n        // this.insertAds();\n        // this.insertTeamConfirm();\n        // this.insertTeamSuggestions();\n    }\n\n    insertTopRanked = () => {\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed, topRankedWorkouts } = teamStore;\n        const topRankedRandomized = util.shuffleArray(topRankedWorkouts);\n        const feed = [...publicTeamsFeed];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            const randomPlace = mu.randomInt(0, 7);\n            if (util.isObject(topRankedRandomized[i])) {\n                feed.splice(randomPlace, 0, topRankedRandomized[i]);\n            }\n        }\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { teamStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => teamStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { teamStore } = this.props.stores;\n        teamStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // teamStore.cleanupMemory();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n        this.setLoadMore();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.teamid !== this.props.teamid) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <TeamPublicFeedLine\n                stores={this.props.stores}\n                feed={obj}\n                idx={idx}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { showTeam, showDog, handleIntersection, sessionid, dogs } = this.state;\n        const { teamStore, appState } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const { path, darkmode } = appState;\n        const { teamid } = this.props;\n        const team = teamStore.findPublicTeamByUuidv4(teamid);\n        \n        const image = mu.getImage({ team });\n        let shortname;\n        let name;\n        let username;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n        }\n\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {team ? <>\n                    <div class='row pb-3 pt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                            <div class='row'>\n                                <h3>\n                                    <div class='d-flex position-relative'>\n                                        <div\n                                            class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                                        >\n                                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                                        </div>\n                                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                                            <h3 class='mb-1'>\n                                                {team.public ? <>\n                                                    <a href={`/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a>\n                                                </> : <>\n                                                    {name}\n                                                </>}\n                                            </h3>\n                                        </div>\n                                    </div>\n                                </h3>\n                            </div>\n                        </div>\n                    </div>\n                </> : <>\n                    <TeamConnectConfirm stores={this.props.stores} />\n                </>}\n\n                {(!publicTeamsFeed || publicTeamsFeed.length === 0) && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-chart-area' /></div>\n                            <h3><Text id='search.no-workouts-found'>No workouts found.</Text></h3>\n                            <Text id='teams.no-public-workouts-text'>Please follow more teams to see their workout activity on this page. This is a great way to get updates from all your favorite mushers.</Text>\n                        </div>\n                        <div class='text-center mt-3'>\n                            <a href='/teams/connect' class='btn btn-primary'>\n                                <i class='fas fa-users' /> <Text id='header.connect-team'>Follow teams</Text>\n                            </a>\n                        </div>\n                    </div>\n                </>}\n\n                <FastList\n                    data={publicTeamsFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    dataValues={{ type: '10' }}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport StoryPoll from './storyPoll';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n        this.textareaRef = createRef();\n        this.state = {\n            sendButtonEnabled: true,\n            storyBody: props.story.body,\n        };\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n        const { subfield, subvalue } = e.target.dataset;\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { storyStore } = this.props.stores;\n        storyStore.publicFeedUpdate(id, name, value);\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value, {\n                query: {\n                    [subfield]: subvalue,\n                },\n            });\n        }, 1000);\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        if (field === 'images') {\n            if (Array.isArray(story.images) && Array.isArray(value)) {\n                localObjectValue = [...story.images, ...value];\n            }\n        }\n    \n        storyStore.updateField(id, field, localObjectValue);\n        storyStore.publicFeedUpdate(id, field, localObjectValue);\n\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, name, value, opts = {}) {\n        this.setState({ sendButtonEnabled: false });\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true, {\n            query: { ...opts.query },\n        });\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    removeImage = async (e) => {\n        const { storyStore } = this.props.stores;\n        const { story } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        storyStore.removeImage({\n            id: story.id,\n            name: imageName,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    componentDidMount() {\n        this.textareaRef.current.focus();\n    }\n\n    render() {\n        const { storyBody, storyType, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        const { id } = story;\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <div class='col-12 text-center mt-2'>\n                        <div class='container-fluid'>\n                            <div class='row d-flex align-items-end'>\n                                {util.isArray(story.images) && story.images.map((img, idx) => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                        <small>\n                                            <input\n                                                class='form-control'\n                                                type='text'\n                                                name={`images.title`}\n                                                data-subfield={`name`}\n                                                data-subvalue={story.images[idx].name}\n                                                onInput={this.saveStoryField}\n                                                value={story.images[idx].title}\n                                            />\n                                        </small>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={story} updateField={this.updateFieldValue} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={false} />\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <label><Text id='story.content'>Content</Text></label>\n                        <div class='border rounded rounded-lg position-relative'>\n                            <Localizer>\n                                <textarea\n                                    class='form-control-plaintext px-2'\n                                    type='text'\n                                    placeholder={<Text id='story.add-content'>Add your text here...</Text>}\n                                    onInput={linkState(this, 'storyBody')}\n                                    // onKeyUp={mu.resizeTextarea}\n                                    onFocus={mu.resizeTextarea}\n                                    style='height: 2.3em;'\n                                    value={storyBody || story.body}\n                                    ref={this.textareaRef}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        {isAdmin && <>\n                            <div class='col-12 mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <input\n                                            type='checkbox'\n                                            id={`pinned-${story.id}`}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                            />\n                                        <label class='ml-2' for={`pinned-${story.id}`}>Pinned to top.</label>\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <button type='button' class={`btn btn-block btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                            onClick={this.saveStory}\n                            data-id={story.id}\n                        ><i class='fas fa-paper-plane' /> <Text id='story.edit-save'>Save changes</Text></button>\n                    </div>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    setSelectedImage = (imageIdx) => {\n        this.setState({ selectedImageIdx: imageIdx });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText, selectedImageIdx = 0 } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n        const { components = [], finalBody = '' } = mu.getInlineComponents(body || '');\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} callback={this.setSelectedImage} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(finalBody, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                    {components && components.map((component, idx) => {\n                        if (component.name === 'poll') {\n                            return <StoryPoll\n                                stores={this.props.stores}\n                                story={story}\n                                storyId={story.id}\n                                params={component.params}\n                                opts={component.opts}\n                                content={component.content}\n                                selectedImageIdx={selectedImageIdx}\n                            />;\n                        }\n                    })}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>\n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    {showEdit[story.id] || showDeleteStory[story.id] ? <>\n                        <div class='row mt-2'>\n                            <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {showEdit[story.id] && <>\n                                    <StoryEditInline\n                                        stores={this.props.stores}\n                                        story={story}\n                                        key={`story-edit-${story.id}`}\n                                        callback={this.doneEdit}\n                                    />\n                                </>}\n                                {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                    <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                </div>}\n                            </div>\n                        </div>\n                    </> : <>\n\n                        {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='mr-2'>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='story'\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                            {views > 0 && <>\n                                <div>\n                                    <Views\n                                        stores={this.props.stores}\n                                        views={views}\n                                        object={story}\n                                        type='story'\n                                        isTeamAdmin={isTeamAdmin}\n                                        isAdmin={isAdmin}\n                                        onTeamClick={onTeamClick}\n                                        onUserClick={onUserClick}\n                                    />\n                                </div>\n                            </>}\n                        </div>\n\n                        {showTeamSetting[story.id] && <>\n                            <small>\n                                <div class='alert alert-info' role='alert'>\n                                    <span class='display-4 float-left'>\n                                        <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                    </span>\n                                    <p>\n                                        <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                    </p>\n                                    <p>\n                                        <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                    </p>\n                                    <p>\n                                        <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                    </p>\n                                </div>\n                            </small>\n                        </>}\n\n                        <div>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                        data-id={story.id}\n                                        onClick={this.likeStory}\n                                    >\n                                        <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        data-id={story.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                    </button>\n                                </div>\n                                {hasShareApi ? <>\n                                    <div class='col text-center'>\n                                        <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                            onClick={this.shareLink}\n                                            data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            data-title={`title: ${story.title}`}\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </button>\n                                    </div>\n                                </> : <>\n                                    <div class='col text-center'>\n                                        <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                            href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                            data-native\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </a>\n                                    </div>\n                                </>}\n\n                            </div>\n                        </div>\n\n                        <div class='mt-2'>\n                            <StoryComments\n                                stores={this.props.stores}\n                                story={story}\n                                col='10'\n                                offset='2'\n                                compact={false}\n                                showAllComments={showAllComments}\n                                initCall={this.closeAllAddComments}\n                            />\n                            {showAddComment[story.id] && <StoryAddComment\n                                stores={this.props.stores}\n                                story={story}\n                                inputRef={c => this.inputRef[story.id] = c}\n                                inputRefObject={this.inputRef}\n                                col='10'\n                                offset='2'\n                                key={`story-comment-${story.id}`}\n                            />}\n                        </div>\n                    </>}\n                {/* </div> */}\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryPoll extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {};\n        this.inputRef = {};\n    }\n\n    pollStory = async (e) => {\n        const { storyId } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { line } = e.target.dataset;\n\t\tconst response = await storyStore.pollStory({ id: storyId, line });\n\t}\n\n    toggleResult = () => {\n        const { viewResult } = this.state;\n        this.setState({ viewResult: !viewResult });\n    }\n\n    render() {\n        const { viewResult } = this.state;\n        const { story, storyId, params, opts, content, selectedImageIdx } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const lines = content.split('\\n').map(line => line.trim().replace(/^\\-\\s*/g, ''));\n        const hasPolledStory = story.polls && story.polls.findIndex(e => e.user === currentUser.id) > -1;\n        const totalPolls = story.polls ? story.polls.length : 0;\n        let maxPercent = 0;\n        lines.forEach((line) => {\n            const percent = (story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length / totalPolls : 0) * 100;\n            if (percent > maxPercent) {\n                maxPercent = percent;\n            }\n        });\n        const voteDays = opts.days ? parseInt(opts.days, 10) : 7;\n\n        const finishDate = util.addDays(story.date, voteDays);\n        const isExpired = finishDate < new Date();\n        const hasImageRegexp = new RegExp(/{{img\\./i);\n\n        return (<>\n            <div class='w-100 my-4 storyPoll'>\n                {isExpired || hasPolledStory || viewResult ? <>\n                    {lines && lines.map((line, idx) => {\n                        const hasPolledLine = story.polls && story.polls.findIndex(e => e.user === currentUser.id && e.line === mu.md5(line)) > -1;\n                        const totalLinePolls = story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length : 0;\n                        const percent = totalLinePolls / totalPolls * 100;\n                        return (<>\n                            <div class={`progress position-relative my-2 `} style='height: 1.5em; font-size: 1.3em;'>\n                                <span class='position-absolute' style='right: 10px;'> {util.format(percent || 0, 1)}%</span>\n                                <span class='position-absolute' style='left: 10px;'>\n                                    <Markdown markdown={mu.replaceImages(`${line} ${hasPolledLine && `<i class='fas fa-check-circle' />`}`, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                                </span>\n                                <div\n                                    class={`progress-bar ${maxPercent === percent ? 'bg-primary' : 'bg-secondary'}`}\n                                    role=\"progressbar\"\n                                    style={`width: ${percent}%;`}\n                                    aria-valuenow={percent}\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                />\n                            </div>\n                        </>);\n                    })}\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>{util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}</div>\n                        {isExpired ? <>\n                            <div class='ml-2'>- <Text id='story.finished'>Finished</Text></div>\n                        </> : <>\n                            <div class='ml-2'>- {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text></div>\n                            {!hasPolledStory && <div class='ml-2' onClick={this.toggleResult}>- <Text id='story.view-vote'>View vote</Text></div>}\n                        </>}\n                    </div>\n                </> : <>\n                    {lines && lines.map((line, idx) => <>\n                        <button class={`btn btn-block ${hasImageRegexp.test(line) && idx === selectedImageIdx ? 'btn-outline-success' : 'btn-outline-primary'} rounded-pill`} onClick={this.pollStory} data-line={mu.md5(line)}>\n                            {hasImageRegexp.test(line) && idx === selectedImageIdx && <span class='float-right'><i class='fas fa-eye' /></span>}\n                            <Markdown markdown={mu.replaceImages(line, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                        </button>\n                    </>)}\n\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>{util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}</div>\n                        {isExpired ? <>\n                            <div class='ml-2'>- <Text id='story.finished'>Finished</Text></div>\n                        </> : <>\n                            <div class='ml-2'>- {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text></div>\n                        </>}\n                        <div class='ml-2' onClick={this.toggleResult}>- <Text id='story.view-results'>View results</Text></div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPoll;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass Invite extends Component {\n    inviteKennel = async () => {\n        const { friendEmail: email } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const response = await userStore.inviteKennel({ email });\n        this.setState({\n            response,\n            inviteSent: true,\n        });\n    }\n\n    inviteNew = () => {\n        this.setState({\n            inviteSent: false,\n        });\n    }\n\n    hideInvite = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideInvite': 1 });\n        this.setState({\n            hideInvite: true,\n        });\n    }\n\n    render() {\n        const { inviteSent, hideInvite } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (!forceShow && settings.hideInvite || hideInvite) {\n            return '';\n        }\n        if (inviteSent) {\n            return (\n                <div class='col-12'>\n                    <Text id='users.invite.thanks'>Takk for at du hjelper oss til å bli flere 😃</Text>\n                    <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.inviteNew}>\n                        <Text id='users.invite.more'>Invitere flere</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 pb-4 clearfix'>\n                <h5><Text id='users.invite.title'>Inviter ny kennel til The Musher</Text></h5>\n                <p>\n                    <Text id='users.invite.text'>Jeg håper du vil hjelpe oss til å bli flere. Appen vil bli lansert veldig snart og det er påtide å invitere inn flere brukere.</Text>\n                </p>\n                <div>\n                    <div class='form-row align-items-center'>\n                        <div class='col-auto'>\n                            <label class='sr-only' for='inlineFormInput'><Text id='users.invite.email'>E-post</Text></label>\n                            <Localizer>\n                                <input type='text' class='form-control form-control-sm mb-2' id='inlineFormInput'\n                                    placeholder={<Text id='users.invite.email-placeholder'>E-post til ny kennel</Text>}\n                                    onInput={linkState(this, 'friendEmail')}\n                                />\n                            </Localizer>\n                        </div>\n                        <div class='col-auto'>\n                            <button type='button' class='btn btn-sm btn-primary mb-2' onClick={this.inviteKennel}>\n                                <Text id='users.invite.send'>Send invitasjon</Text>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                {!forceShow && <button type='button' class='btn btn-sm btn-link mb-2 float-left' onClick={this.hideInvite}>\n                    <i class='fas fa-eye-slash' /> <Text id='users.invite.hide'>Skjul</Text>\n                </button>}\n            </div>\n        );\n    }\n}\n\nexport default Invite;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n// const fieldSorter = (fields) => (a, b) => fields.map(o => {\n//     let dir = 1;\n//     if (o[0] === '-') { dir = -1; o=o.substring(1); }\n//     return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n// }).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            // this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    // insertWorkouts = () => {\n    //     const { storyStore } = this.props.stores;\n    //     const { publicWorkouts, publicFeed } = storyStore;\n    //     if (publicWorkouts.length) {\n    //         const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n    //         storyStore.localUpdateField('publicFeed', finalArray);\n    //     }\n    // }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories, publicDogs } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={publicDogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Teams extends Component {\n    toggleTeam = (team) => {\n\t\tconst { callback, unsetTeamIfSelected = true } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\t\tif (unsetTeamIfSelected && team === currentTeam) {\n\t\t\tdogStore.setCurrentTeam(undefined);\n\t\t\tworkoutStore.setCurrentTeam(undefined);\n\t\t} else {\n\t\t\tdogStore.setCurrentTeam(team);\n\t\t\tworkoutStore.setCurrentTeam(team);\n\t\t}\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n    showAllTeams = () => {\n\t\tconst { callback } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tdogStore.setCurrentTeam(undefined);\n\t\tworkoutStore.setCurrentTeam(undefined);\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// componentDidMount() {\n\t// \tif (this.container) {\n\t// \t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'center' });\n\t// \t}\n\t// }\n\n    render() {\n        const { userStore, dogStore } = this.props.stores;\n        const { teams } = userStore;\n\t\tconst { currentTeam } = dogStore;\n\t\tconst { highlight, showAll = true } = this.props;\n        return (\n\t\t\t<div class='row mt-2'>\n\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1 no-scrollbar'\n\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* <xmp><br /><br /><br /><br />{JSON.stringify(teams, null, 4)}</xmp> */}\n\t\t\t\t\t\t{teams && teams.map((team, idx) => {\n\t\t\t\t\t\t\tlet classNames;\n\t\t\t\t\t\t\tif (teams.length === 1) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-both';\n\t\t\t\t\t\t\t} else if (idx === 0) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-left';\n\t\t\t\t\t\t\t} else if (idx + 1 === teams.length) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-right';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div class='col mb-0 px-0 clearfix' key={team.id}>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-sm btn-block \n\t\t\t\t\t\t\t\t\t\t\trounded-none ${classNames}\n\t\t\t\t\t\t\t\t\t\t\t${currentTeam === team.id ? 'btn-success' : 'btn-outline-success'}\n\t\t\t\t\t\t\t\t\t\t\ttext-nowrap clearfix`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleTeam(team.id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-users' /> {team.name}\n\n\t\t\t\t\t\t\t\t\t\t{highlight && highlight.indexOf(team.id) > -1 && <>\n\t\t\t\t\t\t\t\t\t\t\t{currentTeam === team.id ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check float-right' />\n\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-warning float-right' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t{/* {currentTeam === team.id && <ScrollIntoView horizontal={'center'} vertical={'end'} />} */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t{showAll && <div class='row'>\n\t\t\t\t\t\t<div class='col-12 mb-1 px-1 d-flex justify-content-center'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass={`btn btn-sm rounded-lg btn-link text-nowrap clearfix`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tonClick={this.showAllTeams}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-users' /> <Text id='teams.show-all'>Show all</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n    }\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            raceIdx: 0,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {\n            relevant: 1,\n        };\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    toggleRaces = async () => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { toggleFeature = {} } = user;\n        const value = toggleFeature.racesFrontpage ? 0 : 1;\n        this.setState({ hideRaces: value });\n        await userStore.setToggleFeature({\n            field: 'toggleFeature.racesFrontpage',\n            value,\n        });\n    }\n\n    scrollRaces = (e) => {\n        // scrollHeight: 705\n        // scrollLeft: 564\n        // scrollTop: 0\n        // scrollWidth: 1692\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const step = clientWidth;\n        const raceIdx = scrollLeft / step;\n\n        const nearestInt = Math.round(raceIdx);\n        const diff = Math.abs(nearestInt - raceIdx);\n        // console.log({ e, step, raceIdx, scrollLeft, scrollWidth, clientWidth, nearestInt, diff });\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(raceIdx) || diff < 0.5) {\n            this.setState({\n                raceIdx: nearestInt,\n            });\n        }\n    }\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\t// componentWillReceiveProps(nextProps) {\n    //     if (this.props.)\n\t// \tthis.loadRace(nextProps);\n\t// }\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races = [] } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode } = appState;\n\t\tconst { showNews, hideRaces, raceIdx } = this.state;\n        const { toggleFeature = {}, language = 'en' } = user;\n\n        const today = new Date();\n\n        if (!races || races.length === 0) {\n            return '';\n        }\n\n        return (\n            <div class='row'>\n                {hideRaces || toggleFeature.racesFrontpage ? <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-1'>\n                        <div class='row'>\n                            <div class={`col-12 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative px-0`}>\n                                <div class='w-100 d-flex justify-content-center'>\n                                    <button class='btn btn-lg btn-block btn-link' onClick={this.toggleRaces}>\n                                        <i class='fas fa-flag-checkered' /> <Text id='races.show-races'>Show Races</Text> {races.length > 1 && <>- {races.length}</>}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </> : <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-1'>\n                        <div class='row'>\n\n                            <div class='w-100 position-relative'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap bg-light border-top border-bottom'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                    onScroll={this.scrollRaces}\n                                >\n                                    {races && races.map((race, idx) =>  {\n                                        let status = '';\n                                        if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                                            status = 'race';\n                                        } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                                            status = 'signup';\n                                        } else if (today > new Date(race.endDate)) {\n                                            status = 'done';\n                                        }\n                                        return (<>\n                                            <div\n                                                class={`col-${races.length === 1 ? '12' : '8 ml-4'} ${races.length === idx + 1 ? 'mr-5' : ''} mb-0 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}\n                                                style={`\n                                                    scroll-snap-align: center;\n                                                    flex-wrap: wrap;\n                                                    overflow-y: hidden;\n                                                `}\n                                                onTouchstart={(e) => { e.stopPropagation(); }}\n                                                onTouchend={(e) => { e.stopPropagation(); }}\n                                                onTouchmove={(e) => { e.stopPropagation(); }}\n                                            >\n                                                <div class='row d-flex align-items-center position-relative'>\n                                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                                        {status === 'signup' && !race.liveRace && <>\n                                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                                        </>}\n                                                        {status === 'race' && <>\n                                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                                        </>}\n                                                        {status === 'done' && <>\n                                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                                        </>}\n                                                    </h5>\n                                                    {(race.images && race.images[0]) && <>\n                                                        <div\n                                                            class={`w-100`}\n                                                            style={`background-image: url(\"${race.images[0].s3LargeLink}\"); background-size: cover; height: 100px; background-repeat: no-repeat; background-position: 50% 50%;`}\n                                                            onClick={() => route(`/app-races/${race.id}`)}\n                                                        />\n                                                    </>}\n                                                </div>\n                                                <div class='position-relative'>\n                                                    <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                                        {status === 'signup' && <>\n                                                            <div class='spinner-grow text-primary' role='status' />\n                                                        </>}\n                                                        {status === 'race' && <>\n                                                            <div class='spinner-grow text-danger' role='status' />\n                                                        </>}\n                                                        {status === 'done' && <>\n                                                            <span><i class='fas fa-check text-success' /></span>\n                                                        </>}\n                                                    </h5>\n                                                    <h5 class='pt-2'>\n                                                        {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                                        <a href={`/app-races/${race.id}`}> \n                                                            {race.title}\n                                                        </a>\n                                                    </h5>\n                                                </div>\n                                                <div class='w-100'>\n                                                    <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\n                                                </div>\n                                                <div class='w-100'>\n                                                    {race.classes && <>\n                                                        <div class='mb-3'>\n                                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n\n                                                            <div class='w-100 position-relative'>\n                                                                <div\n                                                                    class='d-flex flex-row flex-nowrap'\n                                                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                                >\n                                                                    {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                                            {currentClass.title}\n                                                                            {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                                        </span>\n                                                                    </>)}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </>}\n                                                </div>\n                                                <div class='w-100 d-flex justify-content-between'>\n                                                    <a href={`/app-races/${race.id}/tracking`} class='btn btn-primary'>\n                                                        <Text id='races.tracking'>Tracking</Text>\n                                                        <i class='fas fa-map-marked ml-2' />\n                                                    </a>\n                                                    <a href={`/app-races/${race.id}`} class='btn btn-primary'>\n                                                        <Text id='races.read-more'>Les mer</Text>\n                                                        <i class='fas fa-angle-double-right ml-2' />\n                                                    </a>\n                                                </div>\n                                                <div class='w-100 d-flex justify-content-center'>\n                                                    <small class='text-muted'>\n                                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                                    </small>\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n                                </div>\n                            </div>\n\n                            {races && races.length > 1 && <>\n                                <div class='w-100 text-center'>\n                                    <small>\n                                        <small>\n                                            {races && races.map((img, idx) => <>\n                                                <i class={`${idx === raceIdx ? 'fas' : 'far'} fa-circle mr-1`} />\n                                            </>)}\n                                        </small>\n                                    </small>\n                                </div>\n                                <div\n                                    class='position-absolute text-white font-weight-lighter px-1 py-1 rounded-lg'\n                                    style='top: 10px; right: 10px; background-color: rgba(0, 0, 0, 0.3); line-height: 1.0em;'\n                                >\n                                    <small>{raceIdx + 1} / {races.length}</small>\n                                </div>\n                            </>}\n\n                            <div class={`col-12 mb-1 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}>\n                                <div class='w-100 d-flex justify-content-center'>\n                                    <button class='btn btn-link' onClick={this.toggleRaces}>\n                                        <i class='fas fa-angle-up' /> <Text id='races.hide'>Hide Races</Text>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default Races;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport WorkoutReplyComment from '../../components/workout/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n};\n\nconst MAX_COMMENTS = 1;\n\n@observer\nclass WorkoutComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutComment({ id: workout.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', workout, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutCommentReply({ id: workout.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', workout, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { workout } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await teamStore.translateCommentReply({ commentid, replyid, object: workout, user });\n        } else {\n            translatedText[key] = await teamStore.translateComment({ commentid, object: workout, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { workout, callback = () => {}, col = 12, offset = 0, compact = false } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (workout.comments) {\n            totalComments = workout.comments.length;\n            if (showAllComments) {\n                filteredComments = workout.comments;\n            } else {\n                // filteredComments = workout.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = workout.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {/* {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>} */}\n                {workout && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                   const translation = teamStore.getCommentTranslations({\n                        object: workout,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                    {displayName}\n                                                </h5>\n\n                                                {teams && teams.length > 0 && <div class='mb-2'>\n                                                    <small class='font-weight-lighter text-muted'>\n                                                        {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                            <a href={`/teams/public/${t.uuidv4}`} class='mr-2'><i class='fas fa-users text-muted' /> {t.name}</a>\n                                                        </>)}\n                                                    </small>\n                                                </div>}\n\n                                                <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                            </span>\n                                        </div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row'>\n                                                <div\n                                                    class={`col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 30vh;`}                                                    \n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                        {isAdmin && currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                            <span class='ml-2 text-muted'>\n                                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                            </span>\n                                        </>}\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    const replyTranslation = teamStore.getCommentReplyTranslations({\n                                        object: workout,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                            </h5>\n\n                                                            {teams && teams.length > 0 && <div class='mb-2'>\n                                                                <small class='font-weight-lighter text-muted'>\n                                                                    {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                                        <a href={`/teams/public/${t.uuidv4}`} class='mr-2'>\n                                                                            <i class='fas fa-users text-muted' /> {t.name}\n                                                                        </a>\n                                                                    </>)}\n                                                                </small>\n                                                            </div>}\n\n                                                            <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <WorkoutReplyComment stores={this.props.stores} workout={workout}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutComments;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-end mb-2'>\n                <span class='ml-2 text-muted font-weight-lighter'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </span>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}