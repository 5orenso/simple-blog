{"version":3,"sources":["webpack:///./routes/settings/teamDetail.js"],"names":["initialState","searchText","showInfo","MARGIN_TOP_BACK","mu","marginTopBack","Settings","withText","public","id","publicHelp","publicWorkouts","publicWorkoutsHelp","publicWorkoutDetails","publicWorkoutDetailsHelp","publicWorkoutSummary","publicWorkoutSummaryHelp","publicTrophys","publicTrophysHelp","publicMemories","publicMemoriesHelp","publicDogs","publicDogsHelp","observer","props","loadTeam","stores","userStore","workoutStore","teamStore","load","teamid","toggleInfo","e","name","target","closest","dataset","state","setState","toggleSetting","field","value","updateField","team","saveField","updateSetting","back","history","goBack","componentDidMount","this","render","teamTypes","teamAmbitions","user","language","class","style","onClick","map","setting","idx","data-name","type","onInput","checked","for","className","activeClassName","data-value","lang","ambitions","Component"],"mappings":"4iBAWMA,EAAe,CACpBC,WAAY,GACTC,SAAU,IAGRC,EAAkBC,IAAGC,eAAc,GAmBnCC,EAjBLC,YAAS,CACNC,OAAQ,YAAC,IAAD,CAAMC,GAAG,gBAAT,kBACRC,WAAY,YAAC,IAAD,CAAMD,GAAG,qBAAT,6FACZE,eAAgB,YAAC,IAAD,CAAMF,GAAG,yBAAT,mBAChBG,mBAAoB,YAAC,IAAD,CAAMH,GAAG,8BAAT,sDACpBI,qBAAsB,YAAC,IAAD,CAAMJ,GAAG,iCAAT,2BACtBK,yBAA0B,YAAC,IAAD,CAAML,GAAG,sCAAT,8DAC1BM,qBAAsB,YAAC,IAAD,CAAMN,GAAG,iCAAT,2BACtBO,yBAA0B,YAAC,IAAD,CAAMP,GAAG,sCAAT,6DAC1BQ,cAAe,YAAC,IAAD,CAAMR,GAAG,wBAAT,kBACfS,kBAAmB,YAAC,IAAD,CAAMT,GAAG,6BAAT,qDACnBU,eAAgB,YAAC,IAAD,CAAMV,GAAG,yBAAT,mBAChBW,mBAAoB,YAAC,IAAD,CAAMX,GAAG,8BAAT,sDACpBY,WAAY,YAAC,IAAD,CAAMZ,GAAG,qBAAT,eACZa,eAAgB,YAAC,IAAD,CAAMb,GAAG,0BAAT,mD,GAEnBc,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMJC,SAAW,SAAOD,GAAP,wCAEP,YAFO,IAAOA,MAAQ,EAAKA,QAApB,EACkCA,EAAME,QAAlCC,UADN,EACiBC,aACxB,gBAFO,EACLC,UACcC,KAAKN,EAAMO,QAAQ,EAAO,KAA1C,MAEE,yDAXa,EAkBnBC,WAAa,SAACC,GAAM,IACRC,EAASD,EAAEE,OAAOC,QAAQ,KAAKC,QAA/BH,KACAhC,EAAa,EAAKoC,MAAlBpC,SACRA,EAASgC,IAAShC,EAASgC,GAC3B,EAAKK,SAAS,CAAErC,cAtBD,EAyBnBsC,cAAgB,SAAOC,GAAP,4CAINC,EAEN,OALQb,EAAc,EAAKL,MAAME,OAAzBG,WAIEc,YAFFlC,GADNmC,EAASf,EAATe,MACMnC,GAEkBgC,EADpBC,EAAQE,EAAKH,GAAS,EAAI,GAEhC,gBAAMZ,EAAUgB,UAAUpC,EAAIgC,EAAOC,IAArC,MAA2C,yDA/B5B,EAkCnBI,cAAgB,SAAOL,EAAOC,GAAd,0CAKZ,OAJQb,EAAc,EAAKL,MAAME,OAAzBG,WAGEc,YADFlC,EADGoB,EAATe,KACMnC,GACkBgC,EAAOC,GACjC,gBAAMb,EAAUgB,UAAUpC,EAAIgC,EAAOC,IAArC,MAA2C,yDAvC5B,EA0CnBK,KAAO,WACiB,EAAKvB,MAAME,OAAvBsB,QACAC,UA1CR,EAAKX,M,+VAAL,IACOtC,GAHQ,E,0HActBkD,kBAAA,WACCC,KAAK1B,Y,EAgCN2B,OAAA,WAAS,aACyBD,KAAK3B,MAAME,OAAzBC,EADX,EACWA,UACL0B,EAAmC1B,EAAnC0B,UAAWC,EAAwB3B,EAAxB2B,cAFjB,EAEyC3B,EAAT4B,KAC1BC,gBAHN,MAGiB,KAHjB,EAIMZ,EAJN,EACAf,UAGMe,KAJN,EAKmDO,KAAKb,MALxD,IAKkBpC,gBALlB,MAK6B,GAL7B,EAOR,OACC,mBAAKuD,MAAM,kBAAkBC,MAAM,2CACtB,sBAAQD,MAAM,2CACVC,MAAK,QAAUvD,EAAV,6CACLwD,QAASR,KAAKJ,MACd,iBAAGU,MAAM,8BAGzB,mBAAKA,MAAM,WACV,mBAAKA,MAAM,uEACV,sBAAI,YAAC,IAAD,CAAMhD,GAAG,iBAAT,WAIN,mBAAKgD,MAAM,WACK,mBAAKA,MAAM,uEACzB,kBAAIA,MAAM,kBAAkBb,EAAKV,OAElC,mBAAKuB,MAAM,qFAAqFC,MAAM,qBAClF,CAAC,UAAUE,KAAI,SAACC,EAASC,GAAV,OAAkB,mBAC9B,mBAAKL,MAAK,QAASK,EAAM,EAAI,aAAe,KACxC,mBAAKL,MAAM,2DACP,oBAAMA,MAAM,cAAcC,MAAM,uBAC3B,EAAKlC,MAAMqC,IAAYA,EACvB,EAAKrC,MAASqC,EAAd,SAAgC,iBAAGJ,MAAM,qCAAqCE,QAAS,EAAK3B,WAAY+B,YAAWF,IACnH,EAAKrC,MAASqC,EAAd,SAAgC3D,EAAS2D,IAAY,mBAClD,uBAAM,qBAAOJ,MAAM,cAAc,EAAKjC,MAASqC,EAAd,WAGzC,mBAAKJ,MAAM,0DAA0DC,MAAM,0BACvE,qBAAOM,KAAK,WAAWP,MAAM,uBAAuBhD,GAAE,WAAaoD,EAAWI,QAAS,kBAAM,EAAKzB,cAAcqB,IAAUK,QAAStB,EAAKiB,KACxI,qBAAOJ,MAAM,uBAAuBU,IAAG,WAAaN,YAOxE,mBAAKJ,MAAM,sEAAsEC,MAAK,aAAcd,EAAKpC,OAAS,EAAM,IAAlC,KACpG,kBAAIiD,MAAM,kBAAiB,YAAC,IAAD,CAAMhD,GAAG,yBAAT,qBAE5B,mBAAKgD,MAAM,qFAAqFC,MAAK,+BAAgCd,EAAKpC,OAAS,EAAM,IAApD,KACjF,CAAC,iBAAkB,uBAAwB,uBAAwB,gBAAiB,iBAAkB,cAAcoD,KAAI,SAACC,EAASC,GAAV,OAAkB,mBACvI,mBAAKL,MAAK,QAASK,EAAM,EAAI,aAAe,KACxC,mBAAKL,MAAM,2DACP,oBAAMA,MAAM,cAAcC,MAAM,uBAC3B,EAAKlC,MAAMqC,IAAYA,EACvB,EAAKrC,MAASqC,EAAd,SAAgC,iBAAGJ,MAAM,qCAAqCE,QAAS,EAAK3B,WAAY+B,YAAWF,IACnH,EAAKrC,MAASqC,EAAd,SAAgC3D,EAAS2D,IAAY,mBAClD,uBAAM,qBAAOJ,MAAM,cAAc,EAAKjC,MAASqC,EAAd,WAGzC,mBAAKJ,MAAM,0DAA0DC,MAAM,0BACvE,qBAAOM,KAAK,WAAWP,MAAM,uBAAuBhD,GAAE,WAAaoD,EAAWI,QAAS,kBAAM,EAAKzB,cAAcqB,IAAUK,QAAStB,EAAKiB,KACxI,qBAAOJ,MAAM,uBAAuBU,IAAG,WAAaN,YASxE,mBAAKJ,MAAM,uEACzB,kBAAIA,MAAM,kBAAiB,YAAC,IAAD,CAAMhD,GAAG,cAAT,UAE5B,mBAAKgD,MAAM,qFAAqFC,MAAM,qBAClFL,GAAaA,EAAUO,KAAI,SAACI,EAAMF,GAAP,OAAe,mBACvC,mBAAKL,MAAK,QAASK,EAAM,EAAI,aAAe,KACxC,mBAAKL,MAAM,2DACP,oBAAMA,MAAM,eACR,YAAC,OAAD,CAAMW,UAAU,iBAAiBC,gBAAiB,SAC9CC,aAAYN,EAAKvD,GACjBkD,QAAS,kBAAM,EAAKb,cAAc,OAAQkB,EAAKvD,MAEjC,OAAb+C,EAAoBQ,EAAK9B,KAAQ8B,EAAKO,KAAKf,IAAaQ,EAAK9B,OAIrEU,EAAKoB,OAASA,EAAKvD,IAAM,sBAAQgD,MAAM,sCACpC,iBAAGA,MAAM,sCAM7B,mBAAKA,MAAM,kEACP,qBAAOA,MAAM,cAAa,YAAC,IAAD,CAAMhD,GAAG,mBAAT,eAG9B,mBAAKgD,MAAM,uEACzB,kBAAIA,MAAM,kBAAiB,YAAC,IAAD,CAAMhD,GAAG,mBAAT,gBAE5B,mBAAKgD,MAAM,qFAAqFC,MAAM,qBAClFJ,GAAiBA,EAAcM,KAAI,SAACI,EAAMF,GAAP,OAAe,mBAC/C,mBAAKL,MAAK,QAASK,EAAM,EAAI,aAAe,KACxC,mBAAKL,MAAM,2DACP,oBAAMA,MAAM,eACR,YAAC,OAAD,CAAMW,UAAU,iBAAiBC,gBAAiB,SAC9CC,aAAYN,EAAKvD,GACjBkD,QAAS,kBAAM,EAAKb,cAAc,YAAakB,EAAKvD,MAEtC,OAAb+C,EAAoBQ,EAAK9B,KAAQ8B,EAAKO,KAAKf,IAAaQ,EAAK9B,OAIrEU,EAAK4B,YAAcR,EAAKvD,IAAM,sBAAQgD,MAAM,sCACzC,iBAAGA,MAAM,sCAM7B,mBAAKA,MAAM,kEACP,qBAAOA,MAAM,cAAa,YAAC,IAAD,CAAMhD,GAAG,wBAAT,kC,GAzK3BgE,e,MAmLRnE,a","file":"111.chunk.cc4fa.js","sourcesContent":["import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport { route } from 'preact-router';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tsearchText: '',\n    showInfo: {},\n};\n\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\n\n@withText({\n    public: <Text id='teams.public'>Public visible</Text>,\n    publicHelp: <Text id='teams.public-help'>Should it be possible to follow your team? All follow-requests has to be approved by you.</Text>,\n    publicWorkouts: <Text id='teams.public-workouts'>Public workouts</Text>,\n    publicWorkoutsHelp: <Text id='teams.public-workouts-help'>Should your workouts be visible to your followers?</Text>,\n    publicWorkoutDetails: <Text id='teams.public-workouts-details'>Public workouts details</Text>,\n    publicWorkoutDetailsHelp: <Text id='teams.public-workouts-details-help'>Should your workouts details be visible to your followers?</Text>,\n    publicWorkoutSummary: <Text id='teams.public-workouts-summary'>Public workouts summary</Text>,\n    publicWorkoutSummaryHelp: <Text id='teams.public-workouts-summary-help'>Should your workout summary be visible to your followers?</Text>,\n    publicTrophys: <Text id='teams.public-trophys'>Public trophys</Text>,\n    publicTrophysHelp: <Text id='teams.public-trophys-help'>Should your trophys be visible to your followers?</Text>,\n    publicMemories: <Text id='teams.public-memories'>Public memories</Text>,\n    publicMemoriesHelp: <Text id='teams.public-memories-help'>Should your memories be visible to your followers?</Text>,\n    publicDogs: <Text id='teams.public-dogs'>Public dogs</Text>,\n    publicDogsHelp: <Text id='teams.public-dogs-help'>Should your dogs be visible to your followers?</Text>,\n})\n@observer\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    loadTeam = async (props = this.props) => {\n\t\tconst { teamStore, userStore, workoutStore } = props.stores;\n        await teamStore.load(props.teamid, false, {\n            // addData: ['dogs', 'users', 'followers', 'blockedFollowers'],\n        });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeam();\n\t}\n\n    toggleInfo = (e) => {\n        const { name } = e.target.closest('i').dataset;\n        const { showInfo } = this.state;\n        showInfo[name] = !showInfo[name];\n        this.setState({ showInfo });\n\t}\n\n    toggleSetting = async (field) => {\n        const { teamStore } = this.props.stores;\n\t\tconst { team } = teamStore;\n        const { id } = team;\n        const value = team[field] ? 0 : 1;\n        teamStore.updateField(id, field, value);\n        await teamStore.saveField(id, field, value);\n    }\n\n    updateSetting = async (field, value) => {\n        const { teamStore } = this.props.stores;\n\t\tconst { team } = teamStore;\n        const { id } = team;\n        teamStore.updateField(id, field, value);\n        await teamStore.saveField(id, field, value);\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\trender() {\n\t\tconst { teamStore, userStore } = this.props.stores;\n        const { teamTypes, teamAmbitions, user } = userStore;\n        const { language = 'en' } = user;\n        const { team } = teamStore;\n        const { searchText, showInfo = {}, settings = {} } = this.state;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style='margin-bottom: 200px; margin-top: 60px;'>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n\t\t\t\t<div class='row m-2'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t\t<h1><Text id='settings.team'>Team</Text></h1>\n                    </div>\n                </div>\n\n\t\t\t\t<div class='row m-2'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'>{team.name}</h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {['public'].map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting] || setting}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleSetting(setting)} checked={team[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2' style={`opacity: ${team.public ? 1.0 : 0.2};`}>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='teams.public-settings'>Public settings</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style={`font-size: 1.2em; opacity: ${team.public ? 1.0 : 0.2};`}>\n                        {['publicWorkouts', 'publicWorkoutSummary', 'publicWorkoutDetails', 'publicTrophys', 'publicMemories', 'publicDogs'].map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting] || setting}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleSetting(setting)} checked={team[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n                    \n\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='teams.type'>Type</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-0 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {teamTypes && teamTypes.map((type, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1'>\n                                        <Link className='stretched-link' activeClassName={'active'}\n                                            data-value={type.id}\n                                            onClick={() => this.updateSetting('type', type.id)}\n                                        >\n                                            {language === 'no' ? type.name : (type.lang[language] || type.name)}\n                                        </Link>\n                                        {/* <xmp>{JSON.stringify(type, null, 4)}</xmp> */}\n                                    </span>\n                                    {team.type === type.id && <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                        <i class='fas fa-check text-primary' />\n                                    </button>}\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n                        <small class='text-muted'><Text id='teams.type-help'>Type team</Text></small>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-5 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='teams.ambitions'>Ambisjoner</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-0 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {teamAmbitions && teamAmbitions.map((type, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1'>\n                                        <Link className='stretched-link' activeClassName={'active'}\n                                            data-value={type.id}\n                                            onClick={() => this.updateSetting('ambitions', type.id)}\n                                        >\n                                            {language === 'no' ? type.name : (type.lang[language] || type.name)}\n                                        </Link>\n                                        {/* <xmp>{JSON.stringify(type, null, 4)}</xmp> */}\n                                    </span>\n                                    {team.ambitions === type.id && <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                        <i class='fas fa-check text-primary' />\n                                    </button>}\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n                        <small class='text-muted'><Text id='teams.ambitions-help'>Ambisjonsnivå til teamet.</Text></small>\n                    </div>\n\n                </div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Settings;\n"],"sourceRoot":""}