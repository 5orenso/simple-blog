{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/story/add.js","webpack:///./components/story/publicDetail.js","webpack:///./components/story/comments.js","webpack:///./components/style.css","webpack:///./components/story/publicStory.js","webpack:///./components/data/temperature.js","webpack:///./components/team/connect-boxes.js","webpack:///./components/ad/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/form/images.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./components/feedback/views.js","webpack:///./components/yrweather/index.js","webpack:///./components/team/fastList.js"],"names":["initialState","DisplayLikesAndComments","observer","Component","constructor","props","super","toggleLikes","showLikesList","this","state","setState","render","storyStore","teamStore","workoutStore","raceStore","stores","likes","comments","type","onTeamClick","onUserClick","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","e","public","mu","getImage","team","priority","displayNameShort","name","displayName","href","uuidv4","title","id","fields","total","image","shortname","touchStart","stopPropagation","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","scrollDistance","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","imageDots","Array","fill","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","img","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","ref","c","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","async","callback","inputRefObject","story","comment","showAddImage","response","status","body","resizeTextarea","addImage","addImages","value","push","handleImageErrored","target","onerror","setTimeout","Date","inputRef","userStore","userImage","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","disabled","onError","removeImage","data-name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","componentDidMount","initCall","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","insert","pinned","urlText","url","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","data","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","appState","isAdmin","firstname","ucfirst","lastname","email","teamId","parseInt","findTeam","darkmode","onChange","selected","checked","StoryPublicFeed","loadStoriesPublicFeed","publicFeed","showAllComments","showAddComment","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","dataset","likeStoryComment","replyId","likeStoryCommentReply","replyComment","parentElement","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","commentid","deleteCommentReplyStory","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","idx","translate","preventDefault","replyid","translatedText","key","translateCommentReply","translateComment","compact","currentUser","language","max_comments","filteredComments","totalComments","diplayedComments","Math","max","reverse","hasLikedComment","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","data-comment","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","module","exports","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","publicFeedUpdate","storyType","saveStoryField","clearTimeout","updateTimer","doUpdateField","StoryTypeRegular","showStoryDetail","localName","route","likeRef","getTranslation","field","dblClick","offline","StoryTypeAd","componentWillMount","asUrl","rel","currencty","format","StoryTypeArticle","toggleDate","showDate","storyId","likeIds","Object","keys","toggleAddComment","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","shareLink","text","shareUrl","hashtag","hasShareApi","findPublicTeam","isTeamAdmin","members","some","m","username","userLink","settings","hideProfile","reports","hasLikedStory","totalFollowers","followers","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","yrWeather","views","getViews","statistics","adminData","getAdminData","buttonOnly","simple","classNames","date","formatDate","hour12","hour","minute","formattedCounty","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","role","data-url","data-title","data-native","Temperature","imperial","celciusToFahrenheit","requestSent","Teams","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","isLoading","loadPublic","query","notfollowing","array","limit","loadTeams","publicTeamsToFollow","place","dogs","Ad","withText","subject","logClick","adStore","ads","apiServer","getApiServer","section","path","currentTeam","ambitions","postalcode","findTeamAmbition","ambition","findTeamType","page","replace","load","setTime","loadAd","time","match","ad","native","MARGIN_TOP","marginTop","idxConfirm","idxSuggestion","idxAd","sessionid","getTime","dataFields","reloadStories","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","topRankedStories","topRankedRandomized","shuffleArray","feed","startPosition","now","forEach","parseInputDate","floor","endPosition","l","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","teamid","showTeam","hideTeam","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","sort","componentWillUnmount","hasNewStories","marginBottom","back","Images","handleAddImage","file","addToImages","skipTimer","files","uploadStatus","apiUrl","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","addData","hasFollowRequests","reqUser","isDeleted","isConfirmed","data-user","data-follow","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","JSON","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","isImage","result","formatBytes","aria-valuenow","aria-valuemin","aria-valuemax","children","toggleViews","showViewList","viewUsersArrays","entries","year","yearObject","week","weekObject","viewUsers","flat","userId","YrWeather","toggleyrWeather","showWeather","currentLocationInfo","coords","latitude","lat","longitude","lon","altitude","getWeatherUser","formatWeather","loadWeather","yrWeatherKeys","yrWeatherFormatted","captureEvents","onScroll","getNestedValue","night","morning","day","evening","getTemperatureColor","getWindSpeedColor","w","isoTime","windDirection","FastListLine","containerRef","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","isIntersecting","currentHeight","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses"],"mappings":"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","file":"31.chunk.cab79.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\nconst MAX_USERS_TO_DISPLAY = 1;\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, MAX_USERS_TO_DISPLAY).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            const name = mu.displayName(user);\n                            return (<>\n                                <span class='font-weight-lighter'>\n                                    {publicTeam ? <>\n                                        <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                            {name}\n                                        </a>\n                                    </> : <>\n                                        {name}\n                                    </>}\n                                </span>\n                            </>);\n                            // return (<>\n                            //     {publicTeam ? <>\n                            //         <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                            //             <div\n                            //                 class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //                 style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                            //             >\n                            //                 {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //             </div>\n                            //         </a>\n                            //     </> : <>\n                            //         <div\n                            //             class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //             style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            //         >\n                            //             {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //         </div>\n                            //     </>}\n                            // </>);\n                        })}\n                        {likes.length > MAX_USERS_TO_DISPLAY && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - MAX_USERS_TO_DISPLAY }}>and {likes.length - MAX_USERS_TO_DISPLAY} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport Story from './publicStory';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n\t\tconst { storyStore } = props.stores;\n        const { story } = props;\n\t\tawait storyStore.loadPublicFeed({ story });\n\t}\n\n\tcomponentDidMount() {\n        this.loadStoriesPublicFeed();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.story !== this.props.story) {\n            this.loadStoriesPublicFeed(nextProps);\n        }\n    }\n\n    render() {\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100'>\n\n                <div class='row pb-4 bg-light'>\n                    <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                        {!publicFeed || publicFeed.length === 0 && <>\n                            <div class='text-center text-muted mt-5'>\n                                <div class='display-1 text-center mb-5'>\n                                    <i class='fas fa-comment' />\n                                </div>\n                                <h3>No story found!</h3>\n                            </div>\n                        </>}\n                        {publicFeed && publicFeed.map((story) => <>\n                            <Story\n                                stores={this.props.stores}\n                                story={story}\n                                showAllComments={true}\n                            />\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value);\n        }, 1000);\n    }\n\n    async doUpdateField(id, name, value) {\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), name, value);\n    }\n\n    render() {\n        const { storyBody, storyType } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        return (<>\n            <div class='d-flex bd-highlight'>\n                <div class='p-0 w-100 bd-highlight'>\n                    <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                    <div class='border rounded rounded-lg position-relative'>\n                        <Localizer>\n                            <textarea\n                                class='form-control-plaintext px-2'\n                                type='text'\n                                placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                onInput={linkState(this, 'storyBody')}\n                                // onKeyUp={mu.resizeTextarea}\n                                onFocus={mu.resizeTextarea}\n                                style='height: 2.3em;'\n                                value={storyBody || story.body}\n                            />\n                        </Localizer>\n                    </div>\n\n                    <div class='position-relative mt-3'>\n                        {isAdmin && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <label>Pinned to top:</label>\n                                        <input\n                                            type='checkbox'\n                                            id={story.id}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                        />\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                    <button type='button' class='btn btn-primary mb-2'\n                        onClick={this.saveStory}\n                        data-id={story.id}\n                    ><i class='fas fa-paper-plane' /></button>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>                    \n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                            {showEdit[story.id] && <>\n                                <StoryEditInline\n                                    stores={this.props.stores}\n                                    story={story}\n                                    key={`story-edit-${story.id}`}\n                                    callback={this.doneEdit}\n                                />\n                            </>}\n                            {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                            </div>}\n                        </div>\n                    </div>\n\n                    {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='mr-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='story'\n                                onTeamClick={onTeamClick}\n                                onUserClick={onUserClick}\n                            />\n                        </div>\n                        {views > 0 && <>\n                            <div>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={story}\n                                    type='story'\n                                    isTeamAdmin={isTeamAdmin}\n                                    isAdmin={isAdmin}\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                        </>}\n                    </div>\n\n                    {showTeamSetting[story.id] && <>\n                        <small>\n                            <div class='alert alert-info' role='alert'>\n                                <span class='display-4 float-left'>\n                                    <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                </span>\n                                <p>\n                                    <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                </p>\n                                <p>\n                                    <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                </p>\n                                <p>\n                                    <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                </p>\n                            </div>\n                        </small>\n                    </>}\n\n                    <div>\n                        <div class='row'>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                    data-id={story.id}\n                                    onClick={this.likeStory}\n                                >\n                                    <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                </button>\n                            </div>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                    data-id={story.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                </button>\n                            </div>\n                            {hasShareApi ? <>\n                                <div class='col text-center'>\n                                    <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        onClick={this.shareLink}\n                                        data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        data-title={`title: ${story.title}`}\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </button>\n                                </div>\n                            </> : <>\n                                <div class='col text-center'>\n                                    <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        data-native\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </a>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n\n                    <div class='mt-2'>\n                        <StoryComments\n                            stores={this.props.stores}\n                            story={story}\n                            col='10'\n                            offset='2'\n                            compact={false}\n                            showAllComments={showAllComments}\n                            initCall={this.closeAllAddComments}\n                        />\n                        {showAddComment[story.id] && <StoryAddComment\n                            stores={this.props.stores}\n                            story={story}\n                            inputRef={c => this.inputRef[story.id] = c}\n                            inputRefObject={this.inputRef}\n                            col='10'\n                            offset='2'\n                            key={`story-comment-${story.id}`}\n                        />}\n                    </div>\n\n                {/* </div> */}\n\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        const page = url.replace(/\\d+$/, 'detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n\n        if (!offset) {\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-end mb-2'>\n                <span class='ml-2 text-muted font-weight-lighter'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </span>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}