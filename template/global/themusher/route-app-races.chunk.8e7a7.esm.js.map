{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/form/links.js","webpack:///./routes/public/race/commentAdd.js","webpack:///./components/dog/editBaseInfo.js","webpack:///./components/story/add.js","webpack:///./components/story/comments.js","webpack:///./routes/app-races/tracking.js","webpack:///./components/team/publicFeedLine.js","webpack:///./routes/app-races/notifications.js","webpack:///./components/form/achievements.js","webpack:///./components/races/liveAddResult.js","webpack:///./components/story/publicStory.js","webpack:///./components/story/storyPoll.js","webpack:///./routes/app-races/userImages.js","webpack:///./components/races/liveMusherResult.js","webpack:///./components/form/files.js","webpack:///./routes/app-races/news.js","webpack:///./routes/public/race/commentReply.js","webpack:///./components/team/connect-boxes.js","webpack:///./routes/public/race/comments.js","webpack:///./routes/public/race/raceText.js","webpack:///./components/races/liveResults.js","webpack:///./components/ad/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/races/musherInfoHeader.js","webpack:///./routes/app-races/signup.js","webpack:///./routes/app-races/mushers.js","webpack:///./components/team/connect-confirm.js","webpack:///./routes/app-races/index.js","webpack:///./routes/app-races/classes.js","webpack:///./routes/app-races/results.js","webpack:///./components/team/fastList.js","webpack:///./components/public/raceTracking.js"],"names":["initialState","ScrollIntoView","observer","Component","constructor","props","super","this","state","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","touchStart","e","stopPropagation","setState","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","scrollDistance","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","length","imageDots","Array","fill","map","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","img","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","class","style","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","async","callback","inputRefObject","story","storyStore","stores","comment","showAddImage","response","id","status","body","mu","resizeTextarea","addImage","addImages","value","push","handleImageErrored","image","target","onerror","setTimeout","Date","inputRef","userStore","user","displayNameShort","userImage","displayName","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","onClick","disabled","util","isArray","onError","removeImage","data-name","name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","initCall","Achievements","handleAdd","data","field","url","removeLink","dogStore","closest","dataset","linkId","showFiles","links","file","isoDate","createdDate","aria-describedby","linkstate","RaceAdd","commentRace","race","raceStore","marginTop","marginTopBack","marginBottom","Input","retry","parseInt","dog","parentElement","removeFile","saved","datalist","min","max","step","title","icon","help","refName","showImages","maxValue","files","formatBytes","size","data-field","rows","addToImages","list","el","Teams","toggleType","typeId","isNew","toJS","teams","indexOf","removeTeam","team","addTeam","highlight","idx","isPrimary","isSecondary","hintTeam","role","Harnesses","harnesses","language","harness","colorNonstop","lang","Status","toggleStatus","statuses","removeStatus","addStatus","dogstatuses","Position","dogPositions","DogsEdit","insertDog","newDog","insert","resetDog","route","elementtype","fieldType","updateFieldValue","datatype","skipTimer","newValue","localObjectValue","achievements","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","chooseMother","dogId","motherDog","findDog","chipId","chooseFather","fatherDog","chooseSubmenu","submenu","menu","back","history","goBack","cleanupMemoryDetail","load","addData","createNew","saveField","loadDog","dogFemales","findDogsByGender","dogMales","hasBirthday","birth","daysUntilBirthday","Math","ceil","daysUntilNextBirthday","age","deceased","gender","data-menu","mother","d","father","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","pinned","public","urlText","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","imageName","findIndex","splice","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","appState","isAdmin","firstname","ucfirst","lastname","email","teamId","findTeam","darkmode","href","onChange","selected","checked","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","likeStoryComment","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","commentid","deleteCommentReplyStory","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","translate","preventDefault","replyid","translatedText","key","translateCommentReply","translateComment","displayTeam","openDrawer","openInbox","fromuser","compact","currentUser","max_comments","filteredComments","totalComments","diplayedComments","comments","slice","reverse","findPublicTeamByMembers","hasLikedComment","likes","filteredReplises","totalReplies","diplayedReplies","imgs","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","data-comment","uuidv4","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","fields","more","MARGIN_TOP","subMenuMarginTop","isLoading","AppRaceDetailTracking","raceid","likeWorkout","idxSuggestion","idxAd","limit","hasFollowSugguestions","hasAd","sessionid","getTime","TeamPublicFeedLine","toggleDate","showDate","workoutId","workoutStore","addLikeToFeed","addCommentToFeed","workout","holdingStore","teamStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","workoutsAddLikeToComment","workoutsAddLikeToCommentReply","workoutsAddCommentToWorkoutComment","workoutsAddCommentToWorkout","addLikeToWorkout","workoutsAddLikeToWorkout","toggleAddComment","toggleAdminDetails","showAdminDetails","reportWorkout","adminRemoveWorkout","adminHideWorkout","shareLink","text","shareUrl","showWorkoutDetail","localName","console","log","feed","translatedTextName","translatedTextComment","containerRef","onTeamClick","onUserClick","onDogClick","hasShareApi","publicDogs","publicUser","findPublicTeam","findPublicUser","teamPublicDogs","storyPublicDogs","findTeamAmbition","ambition","ambitions","findTeamType","isTeamAdmin","members","some","m","getImage","priority","reports","hasLikedWorkout","isYourTeam","isFollowing","followers","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","gpxInfo","shortname","username","userLink","settings","hideProfile","mapImage","yrWeather","views","getViews","statistics","adminData","getAdminData","translationName","getTranslation","feedName","feedComment","buttonOnly","simple","classNames","date","formatDate","hour12","hour","minute","dogs","track","sledWeight","temperature","format","formattedCounty","moonIllumination","phaseIcon","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","dblClick","likeRef","allDogs","distanceKm","elevation","duration","secToHms","speedAvg","avgGpsMovingSpeed","data-url","data-title","rel","data-native","showAvatar","extraClass","AppRaceDetailNotifications","subscribeNotificationTopic","notificationTopics","setNotificationTopic","description","removeAchievement","achievementId","fieldSorter","a","b","o","dir","substring","reduce","p","n","LastResults","lastResults","currentClass","selectedMusher","selectResult","res","currentCheckpoint","checkpoints","find","cp","checkpoint","requiredRestMin","direction","requiredRestMinutes","timeEqualization","timestamp","data-resultid","year","month","sortOrder","RaceLiveAddResult","addResult","classid","checkpointId","selectedClassIds","getClassById","selectedCheckpoint","result","showTimestamp","classId","newResult","editContestant","bib","message","editResult","currentResult","resultid","selectedClassId","raceClassId","resultId","editClass","updateClassesResultLocal","contestants","results","sortContestantsByResult","selectedResult","sortedContestants","isCheckedIn","isCheckedOut","isScratched","prevCheckpoint","isCheckedInPrev","isCheckedOutPrev","isScratchedPrev","sort","getPreviousCheckpoint","lastResult","lastTimestamp","startTime","deleteResult","raceClassResultDelete","doneEditResult","selectCheckpoint","toggleTimestamp","lastCheckpoint","resIn","resOut","resScratched","data-classid","replace","data-direction","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","publicFeedUpdate","storyType","saveStoryField","subfield","subvalue","query","textareaRef","createRef","opts","current","data-subfield","data-subvalue","StoryTypeRegular","showStoryDetail","setSelectedImage","selectedImageIdx","components","finalBody","getInlineComponents","offline","component","storyId","params","content","StoryTypeAd","componentWillMount","asUrl","currencty","StoryTypeArticle","StoryPublicFeed","likeIds","Object","keys","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","hashtag","hasLikedStory","totalFollowers","StoryPoll","pollStory","line","toggleResult","viewResult","lines","trim","hasPolledStory","polls","totalPolls","maxPercent","forEach","percent","md5","voteDays","days","finishDate","addDays","isExpired","hasImageRegexp","RegExp","hasPolledLine","aria-valuenow","aria-valuemin","aria-valuemax","extended","test","data-line","AppRaceDetailUserImages","addRaceUserImage","newRaceUserImage","addUserImage","newUserImage","updateUserImageUpload","removeRaceUserImage","removeUserImage","userImageId","editRaceUserImage","raceUserImageId","editUserImage","element","scrollHeight","tags","RaceLiveMusherResult","onClickNav","selectedMusherIdx","getTeamById","lastResOut","lastResIn","totalDistance","totalTime","totalMovingTime","totalInCpTime","lastEstTimeOut","lastAvgSpeed","nextBib","prevBib","contestant","rank","now","floor","timeInCp","isStartLine","deltaSec","movingTime","hasBeenInCp","avgSpeed","distanceFromPrev","percentRest","reqTotalRestInSec","estTimeOutClass","totalRestClass","estTimeOut","estRest","restInCpSoFar","addDeltaSec","day","isFinishLine","estTimeIn","movingTimeSoFar","distanceMeters","avgSpeedMs","estTimeToNext","estTimeToCpMinutes","estRestMinutes","Files","handleAddImage","uploadStatus","apiUrl","AppRaceDetailNews","addRaceArticle","newRaceArticle","addArticle","newArticle","editRaceArticle","raceArticleId","editArticle","removeRaceArticle","removeArticle","articleId","updateArticleUpload","RaceCommentReply","commentReplyRace","requestSent","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","loadPublic","notfollowing","array","loadTeams","publicTeamsToFollow","place","RaceComments","likeRaceComment","likeRaceCommentReply","deleteCommentRace","deleteCommentReplyRace","editCommentRace","editCommentReplyRace","finalText","regex","Checkpoints","thClass","thStyle","selectedCheckpointId","widthCp","onClickCheckpoint","dotColor","cpIdx","Contestants","onClickMusher","tdClass","tdStyle","progressStyle","progressbarStyle","finalContestants","co","coIdx","hasLeftCpPrev","bibIdxOutPrev","estTimeToCpMinutesPrev","hasScratchedPrev","data-bib","isoTime","checkpointResults","hasLeftCp","hasArrivedCp","hasScratched","bibIdxIn","bibIdxOut","percentInCp","nowEpoch","prevCpOutEpoch","timeUsedOnStage","percentDone","data-prevtimestamp","data-timeUsedOnStage","data-estTimeToCpMinutesPrev","data-nowEpoch","data-prevCpOutEpoch","cpId","output","colspan","getRankingColor","flag","RaceLiveResults","reloadLastEpoch","sortOrderResults","tableClass","Ad","withText","subject","logClick","adStore","ads","apiServer","getApiServer","section","path","currentTeam","postalcode","page","setTime","loadAd","time","match","ad","native","idxConfirm","dataFields","reloadStories","loadStoriesPublicFeed","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","publicFeed","topRankedStories","topRankedRandomized","shuffleArray","startPosition","parseInputDate","endPosition","l","randomPlace","randomInt","isObject","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","teamid","showTeam","hideTeam","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","componentWillUnmount","hasNewStories","MusherInfoHeader","toggleAdminInfo","showAdminInfo","toggleInfo","showInfo","currentDog","totalTrackLength","onMarkerClick","children","wp","findWaypointByBib","musher","getMusherByBibId","getMusherByBibEmail","totals","getClassByBib","getTotalsByTeamId","fallback","color","inFront","behind","totalDistanceOnTrack","findNearestMushers","headerImage","imageHeader","s3XXLargeLink","topImage1","teamImages","sportsClub","data-submenu","findHarness","JSON","stringify","removeMainImage","byMd5","DogLine","vaccineLogStatuses","vac","inKarens","vaccineAgens","durationEnd","karensDaysLeft","AppRaceDetailSignup","signupToRace","signup","addContestant","newContestant","cellphone","facebook","instagram","updateSignup","editSignup","contestantid","contestantId","localUpdateSignup","clearSignupValue","toggleDrawer","showDrawer","findDogsByTeam","signupClass","getRaceClassById","today","chosenDogChipIds","getAlphabet","letter","byNotChosen","signupStartDate","signupEndDate","liveRace","signuppayment","paidSignupfee","signupfee","data-contestantid","classes","distance","rules","termsAndAgreement","declaration","declarationDate","chosenDog","onCloseClick","byBib","aHas","AppRaceDetailMushers","toggleDisplayDetails","editUserDetails","adminToggleEditUser","adminStore","getMusherById","getUserByEmail","toggleEditUserDetails","veterinaryToggleEditUser","toggleVeterinaryUserDetails","toggleAdminSendMessage","showAdminSendMessage","toggleAdminSendInboxMessage","showAdminSendInboxMessage","toggleAdminImport","showAdminImport","adminSignupEdit","adminSignupSetValue","sendEmail","raceId","to","raceclassid","emailResponse","resetEmail","sendInboxMessage","inboxMessage","inboxMessageResponse","resetInboxMessage","parseInput","parseInputTimer","doParseInput","String","headers","jsonData","firstLine","values","jsonObject","v","val","toLowerCase","addMultipleContestants","filterByClass","toggleSelectedClassId","clearSearchForBib","searchForBib","savePreCheck","chipid","preCheck","dogJournals","dogJournalStore","vetData","dogData","journalData","checkType","getNestedValue","journal","veterinary","displayDetails","raceCheck","isVeterinary","veterinaryUserDetails","filterByBib","selectedUser","selectedUserTeams","scope","hasVaccines","hasMandatoryCheck","mandatoryCheck","raceStatus","raceComment","gpxResultsApproved","alt","asFacebookLink","asInstagramLink","price1","priceSent","price2","price3","dogVaccines","vaccines","vaccineName","dogJournal","veterinaryFirstname","veterinaryLastname","diagnoseId","heartRate","weight","bodyConditionScore","generalFindings","data-chipid","data-shortname","shortName","startOrder","data-value","address","postalplace","countryCode","birthdate","emails","dangerouslySetInnerHTML","__html","$str","data-to","data-raceclassid","data-class","oninput","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","hasFollowRequests","reqUser","isDeleted","isConfirmed","publicTeam","data-user","data-follow","MARGIN_TOP_BACK","MARGIN_BOTTOM","likeRace","resizeAllTextareas","textareaList","document","getElementsByTagName","addNavigation","updateKeyValue","getDogs","allTeamIds","flat","getAllClassesSortedBy","loadPublicInteractions","loadRace","hasLikedRace","isLiveRace","showSignup","showTracking","countryRegexp","formattedCountry","resultsHide","veterinaryInfo","trailDescription","program","prices","ingress","cols","AppRaceDetailClasses","contentIsNotLoaded","reloadInSec","reloadIsActive","ReloadTimer","initComponent","tickReloadTimeer","tick","reloadPercent","normalizeBetween","AppRaceDetailResults","loadLiveRaceResults","teamIds","focusOnMushers","bibs","historySteps","replayHistory","showDrawerReplay","classInfo","getRaceTrackerData","raceTrackerRace","getRaceTrackerActiveTeams","loadRaceResults","timerRunning","loadWorkoutSummary","getWorkoutSummaryActiveTeams","reload","RELOAD_INTERVAL_IN_SEC","lockAllWorkoutsInRace","lockMessage","filterByBibs","toggleReplayHistory","cleanupMemoryClass","selectedMusherBib","showDrawerCheckpoint","showDrawerMusher","err","toggleDrawerMusher","selectMusher","closeDrawerMusher","toggleDrawerCheckpoint","closeDrawerCheckpoint","loadTimes","allClassIds","setSelectedClassId","currentEmail","lastAllowedChangeDate","setHours","getHours","raceAdmins","isRaceAdmin","getPillClass","resultsUrl","resultsText","resultDanger","resultWarning","resultSuccess","totalMushers","totalFinished","currentStages","currentResults","completed","normalizedDuration","weightedNormalizedDuration","isDone","finishedDate","totalWorkoutTimeUsedSec","data-email","isLocked","stage","currentEpoch","inDate","setUTCSeconds","viewBox","svgElevation","rest","avgDogs","lastUpdated","nonstop","totalRest","firstEpoch","firstGpxStartEpoch","lastGpxStartEpoch","FastListLine","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","entries","isIntersecting","currentHeight","childNodes","offsetHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses","jwtToken","getJwtToken","leaderboardMode","filterByraceClass","showLeaderBoard","showNews","radius","fontSize","showPercentText","showCenterText","centerText","centerTextSize","centerTextY","Results","waypoints","raceClass","restPercent","restTime","raceTime","finishTime","currentState","diffToFirstFinishTime","distanceToFinish","distanceToFirst","distanceToForward","distanceToBehind","currentAvgSpeed","speed","states","showText","MusherInfo","wpData","TrackingMap","handleHistoryPointIndex","historyIdx","historyPointIndex","updateWaypointPosition","abs","playHistory","replaySpeed","raceTrackerPointTimestamp","getRaceTrackerTimestamp","playingHistory","pauseHistory","setLeaderboardMode","mode","chooseRaceClass","toggleShowLeaderBoard","hide","toggleShowNews","closeAllDrawers","showResults","onMusherClick","onCpMarkerClick","cpData","toggleResults","setReplaySpeed","toggleFocusOnMusher","musherId","musherid","toggleBib","checkForEnter","maxPoints","toggleLines","showLines","innerWidth","innerHeight","getWindowDimensions","showHeader","drawerClassNames","drawerWidth","largeMarkers","isAnimatedMarkers","linkBase","infoOnMushers","geoJSONs","zoomToMarkers","selectedClass","wpCheckpoints","position","lat","lng","waypoints2","fullscreenMap","onMarker2Click","showHeatmap","showTracks","showDistanceMarkers","groupWaypoints","data-musherid","mapCredits","data-speed","countryRegexpMessage"],"mappings":"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","file":"route-app-races.chunk.8e7a7.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../../../components/form/images';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentRace = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await raceStore.commentRace({ id: race.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[race.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ race, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, race } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (<>\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={race.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default RaceAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom(false);\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n\n        if (!image.dataset.retry) {\n            image.dataset.retry = 0;\n        }\n        image.dataset.retry = parseInt(image.dataset.retry, 10) + 1;\n        if (image.dataset.retry > 5) {\n            return false;\n        }\n\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeImage({\n            id: dog.id,\n            name: imageName,\n        });\n    }\n\n    removeFile = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const fileName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeFile({\n            id: dog.id,\n            name: fileName,\n        });\n    }\n\n    render() {\n        const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField, refName, showImages = false, showFiles = true } = this.props;\n        let value = dog[field] || '';\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(dog[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!dog.files || dog.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='dogs.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='dogs.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {dog.files && dog.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={10}\n                    />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    {showImages && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {(!dog.images || dog.images.length === 0) && <>\n                                    <div class='text-center text-muted mb-3'>\n                                        <div class='display-1'><i class='fas fa-images' /></div>\n                                        <h3><Text id='dogs.no-images-title'>No images for this dog!</Text></h3>\n                                        <Text id='dogs.no-images-text'>You can add more images to this dog. Puppy pictures, workout pictures, lazy summer pictures, etc. All is a nice way to create a better profile for this dog.</Text>\n                                    </div>\n                                </>}\n                                {field === 'image' ? <>\n                                    {dog.image && dog.image.s3SmallLink && <div class='col-3 p-1'>\n                                        <img src={dog.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={dog.image.name}\n                                        ><i class='fas fa-trash' /> Remove</button>\n                                        <span class='badge badge-success'>Main</span>\n                                    </div>}\n                                </> : <>\n                                    {dog.images && dog.images.map(img => (\n                                        <div class='col-3 p-1'>\n                                            <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                            <button class='btn btn-sm btn-link'\n                                                onClick={this.removeImage}\n                                                data-name={img.name}\n                                            ><i class='fas fa-trash' /> Remove</button>\n                                        </div>\n                                    ))}\n                                </>}\n\n                            </div>\n                        </div>\n                    </>}\n\n                    {field === 'image' ? <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} addToImages={false} />\n                    </> : <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} />\n                    </>}\n\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        // onInput={e => console.log(e)}\n                        // onChange={e => console.log(e)}\n                    />\n                    <datalist id={`list-${field}`}>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'select') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n\n                    <select type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                    >\n                        <option value=''>-- Velg kjønn --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label> {refName}\n                <input type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={dog.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleType(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        if (value === null) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.teams.indexOf(value) > -1) {\n            dogStore.removeTeam({ id: object.id, team: value });\n        } else if (object.team) {\n            dogStore.addTeam({ id: object.id, team: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        const { highlight } = this.props;\n\n        return (\n            <div class={`form-group mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = object && util.isArray(object.teams) && object.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleType(team.id)}\n                                            >\n                                                {object.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n\n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                    </>}\n                                                </>}\n\n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Harnesses extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { harnesses, user } = userStore;\n        const { language = 'en' } = user;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {harnesses && harnesses.map((harness, idx) => (\n                                    <div class='col px-0 mb-2'\n                                        ref={value === harness.id ? c => this.container = c : null}\n                                    >\n                                        <div class={`border\n                                            rounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === harnesses.length ? 'rounded-pill-right': '')}\n                                            p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                            style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                            onClick={() => this.toggleType(harness.id)}\n                                        >\n                                            {harness.lang && harness.lang[language] ? harness.lang[language] : harness.name}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Status extends Component {\n    // toggleStatus(typeId) {\n    //     const { object, type, field, updateField, isNew } = this.props;\n    //     let value = toJS(object[field]);\n    //     if (value === typeId) {\n    //         value = 0;\n    //     } else {\n    //         value = typeId;\n    //     }\n    //     updateField({ id: object.id, field, value, type, isNew });\n    // }\n\n    toggleStatus(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = 0;\n        } else {\n            value = typeId;\n        }\n        if (value === 0) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.statuses.indexOf(value) > -1) {\n            dogStore.removeStatus({ id: object.id, status: value });\n        } else if (object.status) {\n            dogStore.addStatus({ id: object.id, status: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogstatuses, user } = userStore;\n        const { language } = user;\n\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {dogstatuses && dogstatuses.map((status, idx) => {\n                                    const isPrimary = value === status.id;\n                                    const isSecondary = object && util.isArray(object.statuses) && object.statuses.indexOf(status.id) > -1;\n                                    return (\n                                        <div class='col mb-2 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === dogstatuses.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleStatus(status.id)}\n                                            >\n                                                {language && status.lang && status.lang[language] ? status.lang[language] : status.name}\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Position extends Component {\n    toggleStatus(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogPositions } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {dogPositions && dogPositions.map(status => (\n                            <div class='offset-2 col-8 mb-2'>\n                                <div class={`border rounded rounded-pill px-3 py-1 bg-${value === status.id ? status.class || 'success' : ''}`}\n                                    onClick={() => this.toggleStatus(status.id)}\n                                    style='line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small>\n                                        {status.name}\n                                    </small>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDog: {},\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    async loadDog(props = this.props) {\n        const { id } = props;\n\t\tconst { dogStore } = this.props.stores;\n        dogStore.cleanupMemoryDetail();\n        await dogStore.load(id, false, { addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n    }\n\n\tresetDog() {\n\t\tthis.setState({\n            newDog: {},\n            createNew: false,\n        });\n\t}\n\n\tinsertDog = async () => {\n\t\tconst { newDog } = this.state;\n\t\tconst { dogStore } = this.props.stores;\n\t\tawait dogStore.insert({ ...newDog });\n        this.resetDog();\n        route(`/dogs/`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { dogStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { dog } = dogStore;\n        if (field === 'images') {\n            if (Array.isArray(dog.images) && Array.isArray(value)) {\n                localObjectValue = [...dog.images, ...value];\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(dog.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.files, ...value];\n                } else {\n                    localObjectValue = [...dog.files, value];\n                }\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(dog.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.achievements, ...value];\n                } else {\n                    localObjectValue = [...dog.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(dog.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.links, ...value];\n                } else {\n                    localObjectValue = [...dog.links, value];\n                }\n            }\n        }\n\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            dogStore.updateObjectKeyValue('newDog', field, value);\n        } else {\n            dogStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { dogStore } = this.props.stores;\n        await dogStore.saveField(id, field, value);\n    }\n\n    chooseMother = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const motherDog = dogStore.findDog(dogId);\n\n        if (motherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: motherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherName', value: motherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherChipId', value: motherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: null, skipTimer: true });\n        }\n    }\n\n    chooseFather = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const fatherDog = dogStore.findDog(dogId);\n\n        if (fatherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: fatherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherName', value: fatherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherChipId', value: fatherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: null, skipTimer: true });\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/edit/${dog.id}/${submenu}`);\n\t}\n\n    back = () => {\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}`);\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadDog();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.id !== this.props.id) {\n            this.loadDog(nextProps);\n        }\n    }\n\n\trender() {\n        const { createNew, newDog, submenu } = this.state;\n\t\tconst { dogStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\t\tconst { insertStatus, saved, dog } = dogStore;\n        const dogFemales = dogStore.findDogsByGender('female');\n        const dogMales = dogStore.findDogsByGender('male');\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const { name } = dog;\n\n\t\treturn (<>\n            <div class='d-flex position-relative'>\n                <div class={`text-center border rounded-circle imageRounded float-right`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\");` : ''}>\n                    {!dog.image && <i class='fas fa-dog text-muted mt-3' style='font-size: 40px;' />}\n                </div>\n                <div class='flex-grow-1 pl-3'>\n                    <h5>\n                        {name}\n                        {hasBirthday && <>\n                            <i class='fas fa-birthday-cake ml-3' />\n                        </>}\n                    </h5>\n                    <span>\n                        {daysUntilBirthday < 7 && <>\n                            <span class='text-muted mr-2'>\n                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                            </span>\n                        </>}\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                </div>\n            </div>\n\n            <div\n                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                style='overflow: auto; scroll-snap-type: x mandatory;'\n            >\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='info'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-info-circle' /> <Text id='dogs.info'>Info</Text></button>\n                    {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'status' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='status'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-thermometer' /> <Text id='dogs.status'>Status</Text></button>\n                    {submenu === 'status' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='pictures'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-images' /> <Text id='dogs.pictures'>Pictures</Text></button>\n                    {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='team'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-users' /> <Text id='dogs.team'>Team</Text></button>\n                    {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'relations' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='relations'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-project-diagram' /> <Text id='dogs.relations'>Relations</Text></button>\n                    {submenu === 'relations' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='achievements'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-clock' /> <Text id='dogs.achievements'>Achievements</Text></button>\n                    {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'links' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='links'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-link' /> <Text id='dogs.links'>Links</Text></button>\n                    {submenu === 'links' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='advanced'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-cogs' /> <Text id='dogs.advanced'>Advanced</Text></button>\n                    {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                style='max-height: 50vh;'\n            >\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                    {submenu === 'info' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='name'\n                                title={<Text id='dogs.full-name'>Fullt navn</Text>}\n                                help={<Text id='dogs.full-name-help'>Fullt navn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='shortname'\n                                title={<Text id='dogs.short-name'>Kallenavn</Text>}\n                                help={<Text id='dogs.short-name-help'>Kallenavnet på hunden. Hva roper du på innkalling?</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='gender' type='select'\n                                datalist={[\n                                    ['male', <Text id='dogs.gender-male'>Male</Text>],\n                                    ['female', <Text id='dogs.gender-female'>Female</Text>]\n                                ]}\n                                title={<Text id='dogs.gender'>Kjønn</Text>}\n                                help={<Text id='dogs.gender-help'>Kjønn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='chipId'\n                                title={<Text id='dogs.chip-id'>Chip ID</Text>}\n                                help={<Text id='dogs.chip-id-help'>Chip ID på hunden. Står ofte i vetrinærhåndbok eller passet.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='birth' type='date' min='2000-01-01' max='today'\n                                title={<Text id='dogs.birth'>Fødselsdato</Text>}\n                                help={<Text id='dogs.birth-help'>Fødselsdato på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Harnesses stores={this.props.stores} saved={saved} object={dog} type='number' field='harness'\n                                title={<Text id='dogs.harness-size'>Selestørrelse</Text>}\n                                help={<Text id='dogs.harness-size-help'>Sele til hunden</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Input saved={saved} dog={dog} field='description' icon='fas fa-paragraph' type='textarea'\n                                title={<Text id='dogs.description'>Beskrivelse</Text>}\n                                help={<Text id='dogs.description-help'>Beskrivelse av hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n\n                            {/* <div class='mt-5 pt-5'>\n                                <Input saved={saved} dog={dog} field='deceased' type='date' min='2000-01-01' max='today'\n                                    title={<Text id='dogs.deceased'>Død</Text>}\n                                    help={<Text id='dogs.deceased-help'>Dødsdato for hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </div> */}\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'status' && <>\n                        <Localizer>\n                            <Status stores={this.props.stores} saved={saved} object={dog} type='number' field='status'\n                                title={<Text id='dogs.status'>Status</Text>}\n                                help={<Text id='dogs.status-help'>Status til hunden</Text>}\n                                updateField={this.updateFieldValue} />\n                            <Input saved={saved} dog={dog} field='specialNeeds'\n                                title={<Text id='dogs.special-needs'>Spesielle behov</Text>}\n                                help={<Text id='dogs.special-needs-help'>Har hunden spesielle behov? Trenger ekstra mat, utstyr eller annet? Eks: \"Ekstra fett\", \"Husk ulveklobandasje\", etc.</Text>}\n                                onInput={this.updateField} />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'pictures' && <>\n                        <Localizer>\n                            {/* <Input saved={saved} dog={dog} field='imageOther' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.photo'>Bilde</Text>}\n                                help={<Text id='dogs.photo-help'>Bilder av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            /> */}\n                            <Input saved={saved} dog={dog} field='image' type='image' icon='fas fa-portrait'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.profile-photo'>Profilbilde</Text>}\n                                help={<Text id='dogs.profile-photo-help'>Profilbilde av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <Localizer>\n                            <Teams stores={this.props.stores} saved={saved} object={dog} type='number' field='team'\n                                title={<Text id='dogs.team'>Team</Text>}\n                                help={<Text id='dogs.team-help'>Team som hunden er på.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Position stores={this.props.stores} saved={saved} object={dog} type='number' field='position'\n                                title={<Text id='dogs.position'>Plass i spannet</Text>}\n                                help={<Text id='dogs.position-help'>Foretrukket plass i spannet.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'relations' && <>\n                        <h5 class='mt-5'><Text id='dogs.mother'>Mor</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.mother}\n                            onInput={this.chooseMother}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-mother'>Velg blant dine hunder</Text> --</option>\n                            {dogFemales && dogFemales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='motherName' type='text'\n                                title={<Text id='dogs.mother-name'>Navn på mor</Text>}\n                                help={<Text id='dogs.mother-name-help'>Navn på moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherChipId' type='text'\n                                title={<Text id='dogs.mother-chipid'>Chip ID på mor</Text>}\n                                help={<Text id='dogs.mother-chipid-help'>Chip ID til moren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherComment'\n                                title={<Text id='dogs.mother-comment'>Kommentar til mor</Text>}\n                                help={<Text id='dogs.mother-comment-help'>Kommentar til moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n\n                        <h5 class='mt-5'><Text id='dogs.father'>Far</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.father}\n                            onInput={this.chooseFather}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-father'>Velg blant dine hunder</Text> --</option>\n                            {dogMales && dogMales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='fatherName' type='text'\n                                title={<Text id='dogs.father-name'>Navn på far</Text>}\n                                help={<Text id='dogs.father-name-help'>Navn på faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherChipId' type='text'\n                                title={<Text id='dogs.father-chipid'>Chip ID på far</Text>}\n                                help={<Text id='dogs.father-chipid-help'>Chip ID til faren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherComment'\n                                title={<Text id='dogs.father-comment'>Kommentar til far</Text>}\n                                help={<Text id='dogs.father-comment-help'>Kommentar til faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'links' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='links' type='text' icon='fas fa-link'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.links'>Linker</Text>}\n                                help={<Text id='dogs.links-help'>Linker til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'achievements' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='achievements' type='text' icon='fas fa-clock'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.achievements'>Bragder</Text>}\n                                help={<Text id='dogs.achievements-help'>Bragder til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='files' type='file' icon='fas fa-file'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.files'>Files</Text>}\n                                help={<Text id='dogs.files-help'>Filer til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                </div>\n\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\nexport default DogsEdit;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    removeImage = async (e) => {\n        const { story } = this.state;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        if (util.isArray(story.images)) {\n            const idx = story.images.findIndex(e => e.name === imageName);\n            if (idx > -1) {\n                story.images.splice(idx, 1);\n            }\n        }\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`} onClick={(e) => this.displayTeam(e, t.uuidv4)}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                                    <a href={`/inbox/${user.uuidv4}`} onClick={(e) => this.openInbox(e, user.uuidv4)}>{displayName}</a>\n                                                                </> : <>\n                                                                    {displayName}\n                                                                </>}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2' onClick={(e) => this.displayTeam(e, t.uuidv4)}> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport RaceTracking from '../../components/public/raceTracking.js';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n    isLoading: false,\n};\n\n@observer\nclass AppRaceDetailTracking extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    back = () => {\n        // const { history } = this.props.stores;\n        // history.goBack();\n        const { raceid, path } = this.props;\n        route(`/app-races/${raceid}`);\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n\n        const { raceid } = this.props;\n\n        return (<>\n            <div class='container-fluid position-relative p-0' style={`margin-top: 0; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                <RaceTracking stores={this.props.stores} raceid={raceid} />\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailTracking;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport { route } from 'preact-router';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport Speed from '../data/speed';\nimport Elevation from '../data/elevation';\nimport Weight from '../data/weight';\nimport Distance from '../data/distance';\nimport Temperature from '../data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false,\n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    storyStore.workoutsAddLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    storyStore.workoutsAddLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        storyStore.workoutsAddCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        storyStore.workoutsAddCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            teamStore.addLikeToWorkout({ id, data });\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            storyStore.workoutsAddLikeToWorkout({ id, data });\n        }\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleAdminDetails = () => {\n        const { showAdminDetails } = this.state;\n        this.setState({\n            showAdminDetails: !showAdminDetails,\n        });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    reportWorkout = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        await teamStore.reportWorkout({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveWorkout = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        await teamStore.adminHideWorkout({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    showWorkoutDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const target = e.target.closest('#workoutDetail');\n        if (target) {\n            const { id } = target.dataset;\n            if (id) {\n            console.log({ target, id });\n                route(`/workouts/public/${id}`);\n            }\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { feed = {} } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedTextName = await teamStore.translate({ object: feed, user, field: 'name' });\n        let translatedTextComment;\n        if (feed.comment) {\n            translatedTextComment = await teamStore.translate({ object: feed, user, field: 'comment' });\n        }\n        this.setState({ showOriginal: 0, translatedTextName, translatedTextComment });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n    }\n\n    render() {\n        const {\n            showAddComment,\n            showDate,\n            likeWorkout,\n            showOriginal,\n            translatedTextName,\n            translatedTextComment,\n            showAdminDetails,\n            showMenu = {},\n        } = this.state;\n        const {\n            feed,\n            idx,\n            onTeamClick = () => {},\n            onUserClick = () => {},\n            onDogClick = () => {},\n            holdingStore = 'team',\n        } = this.props;\n        const { teamStore, storyStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { darkmode, hasShareApi } = appState;\n        let publicDogs;\n\n        let team = {};\n        let publicUser = {};\n        if (holdingStore === 'team') {\n            team = teamStore.findPublicTeam(feed.team);\n            publicUser = teamStore.findPublicUser(feed.user) || {};\n            const { publicDogs: teamPublicDogs } = teamStore;\n            publicDogs = teamPublicDogs;\n        } else if (holdingStore === 'story') {\n            team = storyStore.findPublicTeam(feed.team);\n            publicUser = storyStore.findPublicUser(feed.user) || {};\n            const { publicDogs: storyPublicDogs } = storyStore;\n            publicDogs = storyPublicDogs;\n        }\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        const image = mu.getImage({ user: publicUser, team, object: feed, priority: 'user' });\n\n        const { likes, comments, reports = [] } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\t\tconst { gpxInfo = {} } = feed;\n\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (publicUser) {\n            shortname = mu.displayNameShort(publicUser);\n            name = mu.displayName(publicUser);\n            username = mu.displayName(publicUser);\n            if (publicUser.settings && publicUser.uuidv4 !== user.uuidv4) {\n                userLink = publicUser.settings.hideProfile ? null : `/inbox/${publicUser.uuidv4}`;\n            }\n        }\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        const translationName = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'name',\n        }) || translatedTextName;\n        let feedName = translationName || feed.name;\n        const translationComment = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'comment',\n        }) || translatedTextComment;\n        let feedComment = translationComment || feed.comment;\n\n        if (showOriginal) {\n            feedName = feed.name;\n            feedComment = feed.comment;\n        }\n\n        return (<>\n            {(isAdmin || (user.id === feed.user)) ? <>\n                <span class='float-right font-weight-lighter text-muted'>\n                    <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={feed.uuidv4} />\n                </span>\n            </> : <>\n                {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                    <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                </span>}\n            </>}\n            {showMenu[feed.uuidv4] && <>\n                <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                    <button class='btn btn-link btn-block text-left' onClick={this.reportWorkout} data-id={feed.uuidv4}><i class='fas fa-flag' /> Report</button>\n                    {isAdmin && <>\n                        <hr />\n                        <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveWorkout} data-id={feed.id}>\n                            <i class='fas fa-eraser' /> Remove from feed\n                        </button>\n                    </>}\n                    <button class='btn btn-link btn-block text-left' onClick={this.toggleAdminDetails}>\n                        <i class='fas fa-user-cog' /> Toggle admin details\n                    </button>\n                </div>\n            </>}\n\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                    {/* <span class='badge badge-pill badge-secondary float-right'>{teamType}</span> */}\n                    <h5 class='mb-1 position-relative' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => this.displayTeam(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    \n                    <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {username && <>\n                            <small class='ml-2 text-muted'>\n                                {userLink ? <>\n                                    <i class='fas fa-user' /> <a href={userLink} onClick={(e) => this.openInbox(e, publicUser.uuidv4)}>{username}</a>\n                                </> : <>\n                                    <i class='fas fa-user' /> {username}\n                                </>}\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={feed.sledWeight} />\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> <Temperature stores={this.props.stores} value={feed.temperature} />\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                            {feed.moonIllumination && feed.moonIllumination.phaseIcon && <span class='ml-2'>{feed.moonIllumination.phaseIcon}</span>}\n                        </small>\n                    </div>\n\n                    {showAdminDetails && isAdmin && <div\n                        class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                        style='overflow: auto;'\n                    >\n                        <small class='text-muted mr-2'>Adm:</small>\n                        {reports && reports.length > 0 && <>\n                            <small class='text-danger mr-2'>\n                                <i class='fas fa-flag' /> {reports.length}\n                            </small>\n                        </>}\n                        {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {publicUser.deviceInfo && <>\n                            <span class='badge badge-secondary ml-1 float-right font-weight-light'>\n                                {['platform', 'manufacturer', 'model'].map(e => <>\n                                    <span class='ml-1 text-white'>\n                                        {publicUser.deviceInfo[e]}\n                                    </span>\n                                </>)}\n                            </span>\n                        </>}\n                        {adminData && <>\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                            </>)}\n                        </>}\n                    </div>}\n                </div>\n            </div>\n\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='d-flex justify-content-between bg-light rounded-lg px-2'>\n                {feed.distanceKm > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Distance stores={this.props.stores} value={feed.distanceKm} />\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Elevation stores={this.props.stores} value={feed.elevation} />\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {gpxInfo && gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                            <Speed stores={this.props.stores} value={gpxInfo.avgGpsMovingSpeed * 3.6} />\n                        </> : <>\n                            <Speed stores={this.props.stores} value={feed.speedAvg} />\n                        </>}\n                    </div>\n                </div>}\n            </div>\n\n            <div class='row mt-2'>\n                <div id='workoutDetail' class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;' onClick={this.showWorkoutDetail} data-id={feed.uuidv4}>\n                    <Markdown markdown={mu.replaceImages(feedName, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feedComment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                {feed.language !== language && <>\n                    {!showOriginal && translationName ? <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                    </> : <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                    </>}\n                </>}\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments\n                    stores={this.props.stores}\n                    likes={likes}\n                    comments={comments}\n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                                data-native\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNotifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    subscribeNotificationTopic = async (field) => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { notificationTopics = {} } = user;\n        const value = 1;\n        await userStore.setNotificationTopic({\n            field: `notificationTopics.${field}`,\n            value,\n        });\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { notificationTopics = {} } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const topic = `race-${race.id}`;\n        if (notificationTopics && notificationTopics[topic]) {\n            return '';\n        }\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <button class='btn btn-block btn-info btn-lg' onClick={() => this.subscribeNotificationTopic(topic)}>\n                        <i class='fas fa-bell' /> <Text id='race.notifications'>Subscribe to race notifications</Text>\n                    </button>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailNotifications;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\nimport { toJS } from 'mobx';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass LastResults extends Component {\n    render() {\n        const { lastResults = [], currentClass = {}, selectedMusher = {}, selectResult = () => {} } = this.props;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n        return (<>\n\n            <table class='table table-striped'>\n                <thead>\n                    <tr>\n                        <th style='width: 10%'>Time</th>\n                        <th style='width: 5%'>Dir</th>\n                        <th style='width: 75%'>Checkpoint</th>\n                        <th style='width: 10%'>Dogs</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {lastResults && lastResults.length > 0 && lastResults.map(res => {\n                        const currentCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === res.checkpoint) : null;\n                        const requiredRestMin = res.direction === 'in' && currentCheckpoint.requiredRestMinutes ? (\n                            currentCheckpoint.timeEqualization ? selectedMusher.timeEqualization + currentCheckpoint.requiredRestMinutes : currentCheckpoint.requiredRestMinutes\n                        ) : null;\n                        const firstOutTime = new Date(new Date(res.timestamp).getTime() + requiredRestMin * 60000);\n                        return (<>\n                            <tr \n                                class='resultLine'\n                                data-resultid={res.id}\n                                onClick={selectResult}\n                            >\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-clock' /></span> {util.formatDate(res.timestamp, { locale: language, year: '2-digit', month: '2-digit', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </nobr>\n                                </td>\n                                <td>\n                                    {res.direction === 'in' && <>\n                                        <i class='fas fa-sign-in-alt mr-2 text-success' />\n                                    </>}\n                                    {res.direction === 'out' && <>\n                                        <i class='fas fa-sign-out-alt mr-2 text-info' />\n                                    </>}\n                                    {res.direction === 'scratched' && <>\n                                        <i class='fas fa-times mr-2 text-danger' />\n                                    </>}\n                                </td>\n                                <td>\n                                    <span class='text-muted'>{currentCheckpoint.sortOrder}:</span> {currentCheckpoint.name}\n                                    {/* {requiredRestMin && <>\n                                        <div>\n                                            {selectedMusher.timeEqualization ? <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} + {selectedMusher.timeEqualization} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </> : <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </>}\n                                        </div>\n                                    </>} */}\n                                </td>\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-dog ml-3' /></span> {res.dogs}<br />\n                                    </nobr>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </tbody>\n            </table>\n        </>);\n    }\n}\n\n@observer\nclass RaceLiveAddResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: {},\n            message: '',\n        };\n        this.updateTimer = {};\n    }\n\n    addResult = async (e) => {\n\t\tconst { raceStore, appState } = this.props.stores;\n        const { direction, classid } = e.target.closest('button').dataset;\n        const { checkpointId, selectedClassIds = [] } = appState;\n\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { result, showTimestamp } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        if (showTimestamp) {\n            result.timestamp = result.timestamp ? result.timestamp : new Date();\n        } else {\n            result.timestamp = new Date();\n        }\n\n        if (direction === 'scratched') {\n            await raceStore.addResult({\n                id: raceid,\n                classId: classid,\n                showTimestamp: false,\n                newResult: {\n                    direction: 'in',\n                    checkpoint: checkpointId,\n                    ...result,\n                }\n            });\n            await raceStore.editContestant({\n                id: raceid,\n                classId: classid,\n                bib: result.bib,\n                field: 'raceStatus',\n                value: 'DNF',\n            });\n        }\n\n\t\tawait raceStore.addResult({\n\t\t\tid: raceid,\n\t\t\tclassId: classid,\n            showTimestamp: false,\n\t\t\tnewResult: {\n                direction,\n                checkpoint: checkpointId,\n                ...result,\n\t\t\t}\n        });\n\n        // const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        // raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.setState({\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n            selectedMusher: null,\n            lastResults: null,\n            message: `Added ${result.bib} with ${result.dogs} dogs ${direction} ${direction === 'in' ? 'to' : 'of'} checkpoint ${selectedCheckpoint.name}.`,\n        });\n\n        clearTimeout(this.updateTimer.message);\n        this.updateTimer.message = setTimeout(async () => {\n\t\t\tthis.setState({\n                message: '',\n            });\n\t\t}, 3000);\n\t}\n\n    editResult = (e) => {\n        const { raceStore, appState } = this.props.stores;\n        const { currentResult } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        // const resultIdx = lastResults.findIndex(e => e.id === resultid);\n        // if (resultIdx > -1) {\n        //     console.log({ resultIdx })\n        //     lastResults[resultIdx][field] = value;\n        //     this.setState({ lastResults });\n        // }\n        currentResult[field] = value;\n        this.setState({ currentResult });\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        \n        const data = {\n            raceClassId: classid,\n            resultId: resultid,\n\t\t\t[`raceClassResult${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n            await raceStore.editClass({\n                id: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.updateClassesResultLocal(classid, resultid, field, value);\n            const currentClass = raceStore.getClassById(selectedClassId);\n\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t\t}, 500);\n    }\n\n    updateField = (e) => {\n        const { raceStore, appState } = this.props.stores;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const { result, selectedResult, showTimestamp } = this.state;\n        result[field] = value;\n        \n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        \n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        if (!selectedMusher) {\n            this.setState({\n                result,\n            });\n            return false;\n        }\n        let lastResults;\n        let isCheckedIn;\n        let isCheckedOut;\n        let isScratched;\n        let currentResult;\n        let prevCheckpoint;\n        let isCheckedInPrev;\n        let isCheckedOutPrev;\n        let isScratchedPrev;\n\n        if (currentClass) {\n            lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n            if (lastResults && lastResults.length > 0) {\n                isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n                isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n                isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n                prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n                if (prevCheckpoint) {\n                    isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n                    isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n                    isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n                }\n            }\n            currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === selectedResult)) : {};\n        }\n\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : null;\n        if (lastResult) {\n            const lastTimestamp = lastResults && lastResults[0] ? lastResults[0].timestamp : (selectedMusher && selectedMusher.startTime ? selectedMusher.startTime : currentClass.startDate);\n            if (showTimestamp) {\n                result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n            }\n            result.dogs = lastResult.dogs;\n        }\n        \n        this.setState({\n            result,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            prevCheckpoint,\n            currentResult,\n            lastResults,\n        });\n    }\n\n\n    deleteResult = async () => {\n        const { selectedResult } = this.state;\n        const { appState, raceStore } = this.props.stores;\n\n        const { race } = raceStore;\n        const raceid = race.id;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: currentClass.id,\n            resultId: selectedResult,\n\t\t\traceClassResultDelete: 1,\n\t\t};\n        await raceStore.editClass({\n            id: raceid,\n            data,\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.doneEditResult();\n    }\n\n    selectCheckpoint = (e) => {\n        const { showTimestamp, result } = this.state;\n        const checkpointId = e.target.closest('button').dataset.id;\n        const { appState, raceStore } = this.props.stores;\n        appState.selectCheckpoint(checkpointId);\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { sortedContestants = [] } = raceStore;\n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n\n        const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n        const prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n        const isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n        const isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n        const isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n        \n        this.setState({\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            lastResults,\n        });\n\n    }\n\n    toggleTimestamp = () => {\n        const { showTimestamp, result } = this.state;\n\n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedMusher = currentClass.contestants ? currentClass.contestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp'])).reverse().filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        let lastTimestamp;\n        if (lastResults && lastResults[0]) {\n            lastTimestamp = lastResults[0].timestamp;\n        } else if (selectedMusher.startTime) {\n            lastTimestamp = selectedMusher.startTime;\n        } else if (currentClass.startDate) {\n            lastTimestamp = currentClass.startDate;\n        } else {\n            lastTimestamp = new Date();\n        }\n        result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n\n        this.setState({\n            showTimestamp: !showTimestamp,\n            result,\n        });\n    }\n\n    doneEditResult = () => {\n        const { raceStore, appState } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const { checkpointId } = appState;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        this.setState({\n            selectedResult: '',\n            selectedCheckpoint,\n            currentResult: null,\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n        });\n    }\n\n    selectResult = (e) => {\n        const resultid = e.target.closest('.resultLine').dataset.resultid;\n        \n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === resultid)) : {};\n        \n        this.setState({\n            selectedResult: resultid,\n            currentResult,\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n        //     const { currentClass } = this.props;\n        //     const { raceStore } = this.props.stores;\n        //     const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        //     raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        // }\n\t}\n\n    componentDidMount() {\n        this.doneEditResult();\n\t}\n\n    render() {\n        const {\n            result,\n            showTimestamp,\n            message,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            currentResult,\n            lastResults = [],\n        } = this.state;\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { checkpointId } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : {};\n        let lastCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === lastResult.checkpoint) : null;\n        lastCheckpoint = lastCheckpoint ? lastCheckpoint : {};\n\n        // const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        // const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        // const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        // const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        // const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        // const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n        // const currentResult = currentClass.results ? currentClass.results.find(e => e.id === selectedResult) : {};\n\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n\n        return (<>\n            <div class='mt-2 pb-5' style='height: 70vh;'>\n                <h3>Admin timing - {currentClass.title}</h3>\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n\n                        {currentClass.checkpoints && currentClass.checkpoints.map((currentCheckpoint, idx) => {\n                            let resIn = {};\n                            let resOut = {};\n                            let resScratched = {};\n                            if (lastResults && lastResults.length > 0) {\n                                resIn = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'in') || {};\n                                resOut = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'out') || {};\n                                resScratched = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'scratched') || {};\n                            }\n                            \n                            return (<>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === currentClass.checkpoints.length - 1 && 'rounded-pill-right'} rounded-none ${checkpointId === currentCheckpoint.id ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.selectCheckpoint}\n                                        data-id={currentCheckpoint.id}\n                                    >\n                                        {currentCheckpoint.sortOrder}: {currentCheckpoint.name}\n                                        {resOut && resOut.id ? <i class='fas fa-check text-white ml-2' /> : ''}\n                                        {resIn && resIn.id && !resOut.id ? <i class='fas fa-map-marker-alt text-white ml-2' /> : ''}\n                                    </button>\n                                </div>\n                            </>);\n                        })}\n\n                    </div>\n                </div>\n                <div class='w-100 overflow-hidden'>\n                    {selectedCheckpoint && <>\n                        <h3>\n                            {selectedMusher && <><i class='fas fa-user text-muted' /> {selectedMusher.firstname} {selectedMusher.lastname}</>}\n                        </h3>\n\n                        {currentResult ? <>\n                            {['bib', 'dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={currentResult[field]}\n                                        onInput={this.editResult}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['timestamp'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                    <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={util.isoDate(currentResult[field], false, false, false)}\n                                        onInput={this.editResult}\n                                    />\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                </div>\n                            </>)}\n\n                            <button class='btn btn-lg btn-danger float-left' onClick={this.deleteResult}>\n                                Delete\n                            </button>\n                            <button class='btn btn-lg btn-info float-right' onClick={this.doneEditResult}>\n                                Done\n                            </button>\n                        </> : <>\n\n                            {selectedCheckpoint.sortOrder > lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Previous checkpoint is not logged yet.\n                                </div>\n                            </>}\n\n                            {!isCheckedOutPrev && selectedCheckpoint.sortOrder === lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Not checked out of prev.\n                                </div>\n                            </>}\n                            {/* {selectedCheckpoint.sortOrder} gt\n                            {lastCheckpoint.sortOrder}<br />\n                            isCheckedIn: {JSON.stringify(isCheckedIn, null, 4)}<br />\n                            isCheckedOut: {JSON.stringify(isCheckedOut, null, 4)}<br />\n                            isScratched: {JSON.stringify(isScratched, null, 4)}<br /> */}\n\n                            {/* bib: String,\n                            position: [],\n                            checkpointIn: String,\n                            checkpointOut: String,\n                            dogs: Number,\n                            timestamp: Date,\n                            addedByUser: Number, */}\n                            {['bib'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={this.updateField}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-dog' /> {field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {showTimestamp ? <>\n                                {['timestamp'].map(field => <>\n                                    <div class='form-group'>\n                                        <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                        <input\n                                            type='datetime-local'\n                                            class='form-control'\n                                            id={field}\n                                            aria-describedby={`${field}Help`}\n                                            onInput={linkstate(this, `result.${field}`)}\n                                            value={util.isoDate(result[field], false, false, false).replace(/ /g, 'T')}\n                                            min={util.isoDate(lastResult.timestamp, false, false, false).replace(/ /g, 'T')}\n                                        />\n                                        <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Hide timestamp</button>\n                                    </div>\n                                </>)}\n                            </> : <>\n                                <div class='form-group'>\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Show timestamp</button>\n                                </div>\n                            </>}\n\n\n                            {isCheckedIn && isCheckedOut && <>\n                                <div class='alert alert-warning my-2 clearfix' role='alert'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    {selectedMusher && <>{selectedMusher.firstname} {selectedMusher.lastname}</>} Has checked in and out of this checkpoint!\n                                </div>\n                            </>}\n\n                            <div class='d-flex justify-content-between'>\n                                <div class='text-center'>\n                                    <h3><i class='fas fa-campground text-muted' /> {selectedCheckpoint.name}</h3>\n                                </div>\n                            </div>\n\n                            <div class='d-flex justify-content-between'>\n                                <button class='btn btn-lg btn-success float-left' onClick={this.addResult} data-direction='in' data-classid={currentClass.id} disabled={isCheckedIn ? 'disabled' : ''}>\n                                    CP In <i class='fas fa-sign-in-alt ml-2' />\n                                </button>\n                                <button class='btn btn-lg btn-info float-right' onClick={this.addResult} data-direction='out' data-classid={currentClass.id} disabled={isCheckedOut ? 'disabled' : ''}>\n                                    <i class='fas fa-sign-out-alt mr-2' /> CP Out\n                                </button>\n                            </div>\n                        </>}\n\n                    </>}\n                </div>\n                {message && <div class='alert alert-success mt-3 clearfix' role='alert'>\n                    {message}\n                </div>}\n\n                <div class='overflow-hidden mb-5 mt-3'>\n                    <LastResults\n                        stores={this.props.stores}\n                        lastResults={lastResults}\n                        currentClass={currentClass}\n                        selectedMusher={selectedMusher}\n                        selectResult={this.selectResult}\n                    />\n                </div>\n\n                <div class='d-flex justify-content-center mt-3 mb-5'>\n                    <button class='btn btn-sm btn-block btn-danger' onClick={this.addResult} data-direction='scratched' data-classid={currentClass.id} disabled={isScratched ? 'disabled' : ''}>\n                        Scratch <i class='fas fa-times ml-2' />\n                    </button>\n                </div>\n\n            </div>\n        </>);\n    }\n}\n\nexport default RaceLiveAddResult;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport StoryPoll from './storyPoll';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n        this.textareaRef = createRef();\n        this.state = {\n            sendButtonEnabled: true,\n            storyBody: props.story.body,\n        };\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n        const { subfield, subvalue } = e.target.dataset;\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { storyStore } = this.props.stores;\n        storyStore.publicFeedUpdate(id, name, value);\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value, {\n                query: {\n                    [subfield]: subvalue,\n                },\n            });\n        }, 1000);\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        if (field === 'images') {\n            if (Array.isArray(story.images) && Array.isArray(value)) {\n                localObjectValue = [...story.images, ...value];\n            }\n        }\n    \n        storyStore.updateField(id, field, localObjectValue);\n        storyStore.publicFeedUpdate(id, field, localObjectValue);\n\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, name, value, opts = {}) {\n        this.setState({ sendButtonEnabled: false });\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true, {\n            query: { ...opts.query },\n        });\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    removeImage = async (e) => {\n        const { storyStore } = this.props.stores;\n        const { story } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        storyStore.removeImage({\n            id: story.id,\n            name: imageName,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    componentDidMount() {\n        this.textareaRef.current.focus();\n    }\n\n    render() {\n        const { storyBody, storyType, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        const { id } = story;\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <div class='col-12 text-center mt-2'>\n                        <div class='container-fluid'>\n                            <div class='row d-flex align-items-end'>\n                                {util.isArray(story.images) && story.images.map((img, idx) => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                        <small>\n                                            <input\n                                                class='form-control'\n                                                type='text'\n                                                name={`images.title`}\n                                                data-subfield={`name`}\n                                                data-subvalue={story.images[idx].name}\n                                                onInput={this.saveStoryField}\n                                                value={story.images[idx].title}\n                                            />\n                                        </small>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={story} updateField={this.updateFieldValue} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={false} />\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <label><Text id='story.content'>Content</Text></label>\n                        <div class='border rounded rounded-lg position-relative'>\n                            <Localizer>\n                                <textarea\n                                    class='form-control-plaintext px-2'\n                                    type='text'\n                                    placeholder={<Text id='story.add-content'>Add your text here...</Text>}\n                                    onInput={linkState(this, 'storyBody')}\n                                    // onKeyUp={mu.resizeTextarea}\n                                    onFocus={mu.resizeTextarea}\n                                    style='height: 2.3em;'\n                                    value={storyBody || story.body}\n                                    ref={this.textareaRef}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        {isAdmin && <>\n                            <div class='col-12 mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <input\n                                            type='checkbox'\n                                            id={`pinned-${story.id}`}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 'false' : util.isoDate()}\n                                            checked={story.pinned ? 'checked' : ''}\n                                            />\n                                        <label class='ml-2' for={`pinned-${story.id}`}>Pinned to top.</label>\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <button type='button' class={`btn btn-block btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                            onClick={this.saveStory}\n                            data-id={story.id}\n                        ><i class='fas fa-paper-plane' /> <Text id='story.edit-save'>Save changes</Text></button>\n                    </div>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    setSelectedImage = (imageIdx) => {\n        this.setState({ selectedImageIdx: imageIdx });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText, selectedImageIdx = 0 } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n        const { components = [], finalBody = '' } = mu.getInlineComponents(body || '');\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} callback={this.setSelectedImage} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(finalBody, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                    {components && components.map((component, idx) => {\n                        if (component.name === 'poll') {\n                            return <StoryPoll\n                                stores={this.props.stores}\n                                story={story}\n                                storyId={story.id}\n                                params={component.params}\n                                opts={component.opts}\n                                content={component.content}\n                                selectedImageIdx={selectedImageIdx}\n                            />;\n                        }\n                    })}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleAdminDetails = () => {\n        const { showAdminDetails } = this.state;\n        this.setState({\n            showAdminDetails: !showAdminDetails,\n        });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    displayTeam = (e, teamId) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('publicTeam', { teamId, height: '80vh' });\n\t}\n\n    openInbox = (e, fromuser) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { appState } = this.props.stores;\n        appState.openDrawer('inboxDetail', { fromuser, height: '80vh' });\n\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const {\n            showAddComment,\n            showDate,\n            viewImageIdx,\n            showMenu = {},\n            showEdit = {},\n            showDeleteStory = {},\n            showTeamSetting,\n            likeStory,\n            likeIds,\n            showAdminDetails\n        } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>\n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                            <button class='btn btn-link btn-block text-left' onClick={this.toggleAdminDetails}>\n                                <i class='fas fa-user-cog' /> Toggle admin details\n                            </button>\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => this.displayTeam(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink} onClick={(e) => this.openInbox(e, user.uuidv4)}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {showAdminDetails && isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    {showEdit[story.id] || showDeleteStory[story.id] ? <>\n                        <div class='row mt-2'>\n                            <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {showEdit[story.id] && <>\n                                    <StoryEditInline\n                                        stores={this.props.stores}\n                                        story={story}\n                                        key={`story-edit-${story.id}`}\n                                        callback={this.doneEdit}\n                                    />\n                                </>}\n                                {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                    <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                </div>}\n                            </div>\n                        </div>\n                    </> : <>\n\n                        {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='mr-2'>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='story'\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                            {views > 0 && <>\n                                <div>\n                                    <Views\n                                        stores={this.props.stores}\n                                        views={views}\n                                        object={story}\n                                        type='story'\n                                        isTeamAdmin={isTeamAdmin}\n                                        isAdmin={isAdmin}\n                                        onTeamClick={onTeamClick}\n                                        onUserClick={onUserClick}\n                                    />\n                                </div>\n                            </>}\n                        </div>\n\n                        {showTeamSetting[story.id] && <>\n                            <small>\n                                <div class='alert alert-info' role='alert'>\n                                    <span class='display-4 float-left'>\n                                        <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                    </span>\n                                    <p>\n                                        <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                    </p>\n                                    <p>\n                                        <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                    </p>\n                                    <p>\n                                        <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                    </p>\n                                </div>\n                            </small>\n                        </>}\n\n                        <div>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                        data-id={story.id}\n                                        onClick={this.likeStory}\n                                    >\n                                        <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                        data-id={story.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                    </button>\n                                </div>\n                                {hasShareApi ? <>\n                                    <div class='col text-center'>\n                                        <button class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                            onClick={this.shareLink}\n                                            data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            data-title={`title: ${story.title}`}\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </button>\n                                    </div>\n                                </> : <>\n                                    <div class='col text-center'>\n                                        <a class='btn btn-sm btn-outline-secondary btn-block text-overflow'\n                                            href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                            data-native\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </a>\n                                    </div>\n                                </>}\n\n                            </div>\n                        </div>\n\n                        <div class='mt-2'>\n                            <StoryComments\n                                stores={this.props.stores}\n                                story={story}\n                                col='10'\n                                offset='2'\n                                compact={false}\n                                showAllComments={showAllComments}\n                                initCall={this.closeAllAddComments}\n                            />\n                            {showAddComment[story.id] && <StoryAddComment\n                                stores={this.props.stores}\n                                story={story}\n                                inputRef={c => this.inputRef[story.id] = c}\n                                inputRefObject={this.inputRef}\n                                col='10'\n                                offset='2'\n                                key={`story-comment-${story.id}`}\n                            />}\n                        </div>\n                    </>}\n                {/* </div> */}\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryPoll extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {};\n        this.inputRef = {};\n    }\n\n    pollStory = async (e) => {\n        const { storyId } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { line } = e.target.closest('button').dataset;\n\t\tconst response = await storyStore.pollStory({ id: storyId, line });\n\t}\n\n    toggleResult = () => {\n        const { viewResult } = this.state;\n        this.setState({ viewResult: !viewResult });\n    }\n\n    render() {\n        const { viewResult } = this.state;\n        const { story, storyId, params, opts, content, selectedImageIdx } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const lines = content.split('\\n').map(line => line.trim().replace(/^\\-\\s*/g, ''));\n        const hasPolledStory = story.polls && story.polls.findIndex(e => e.user === currentUser.id) > -1;\n        const totalPolls = story.polls ? story.polls.length : 0;\n        let maxPercent = 0;\n        lines.forEach((line) => {\n            const percent = (story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length / totalPolls : 0) * 100;\n            if (percent > maxPercent) {\n                maxPercent = percent;\n            }\n        });\n        const voteDays = opts.days ? parseInt(opts.days, 10) : 7;\n\n        const finishDate = util.addDays(story.date, voteDays);\n        const isExpired = finishDate < new Date();\n        const hasImageRegexp = new RegExp(/{{img\\./i);\n\n        return (<>\n            <div class='w-100 my-4 storyPoll'>\n                {isExpired || hasPolledStory || viewResult ? <>\n                    {lines && lines.map((line, idx) => {\n                        const hasPolledLine = story.polls && story.polls.findIndex(e => e.user === currentUser.id && e.line === mu.md5(line)) > -1;\n                        const totalLinePolls = story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length : 0;\n                        const percent = totalLinePolls / totalPolls * 100;\n                        return (<>\n                            <div class={`progress position-relative my-2 `} style='height: 1.5em; font-size: 1.3em;'>\n                                <span class='position-absolute' style='right: 10px;'> {util.format(percent || 0, 1)}%</span>\n                                <span class='position-absolute' style='left: 10px;'>\n                                    <Markdown markdown={mu.replaceImages(`${line} ${hasPolledLine ? `<i class='fas fa-check-circle' />` : ''}`, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                                </span>\n                                <div\n                                    class={`progress-bar ${maxPercent === percent ? 'bg-primary' : 'bg-secondary'}`}\n                                    role=\"progressbar\"\n                                    style={`width: ${percent}%;`}\n                                    aria-valuenow={percent}\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                />\n                            </div>\n                        </>);\n                    })}\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>\n                            <small>\n                                {util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}\n                            </small>\n                        </div>\n                        {isExpired ? <>\n                            <div class='ml-2'>\n                                <small>\n                                    - <Text id='story.finished'>Finished</Text>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div class='ml-2'>\n                                <small>\n                                    - {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text>\n                                </small>        \n                            </div>\n                            {!hasPolledStory && <div class='ml-2' onClick={this.toggleResult}>\n                                <small>\n                                    - <Text id='story.view-vote'>View vote</Text>\n                                </small>\n                            </div>}\n                        </>}\n                    </div>\n                </> : <>\n                    {lines && lines.map((line, idx) => <>\n                        <button\n                            class={`btn btn-block ${hasImageRegexp.test(line) && idx === selectedImageIdx ? 'btn-outline-success' : 'btn-outline-primary'} rounded-pill`}\n                            onClick={this.pollStory}\n                            data-line={mu.md5(line)}\n                        >\n                            {hasImageRegexp.test(line) && idx === selectedImageIdx && <span class='float-right'><i class='fas fa-eye' /></span>}\n                            <Markdown markdown={mu.replaceImages(line, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                        </button>\n                    </>)}\n\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>\n                            <small>\n                                {util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}\n                            </small>\n                        </div>\n                        {isExpired ? <>\n                            <div class='ml-2'>\n                                <small>\n                                    - <Text id='story.finished'>Finished</Text>\n                                </small>\n                            </div>\n                        </> : <>\n                            <div class='ml-2'>\n                                <small>\n                                    - {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text>\n                                </small>        \n                            </div>\n                        </>}\n                        <div class='ml-2' onClick={this.toggleResult}>\n                            <small>    \n                                - <Text id='story.view-results'>View results</Text>\n                            </small>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPoll;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailUserImages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceUserImage: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\taddRaceUserImage = async () => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceUserImage } = this.state;\n\t\tawait raceStore.addUserImage({ id: raceid, newUserImage: newRaceUserImage });\n\t\tthis.setState({\n\t\t\tnewRaceUserImage: {},\n\t\t});\n\t}\n\n\tupdateUserImageUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceUserImage } = this.state;\n\t\tnewRaceUserImage[field] = value;\n\t\tthis.setState({ newRaceUserImage });\n\t}\n\n\tremoveRaceUserImage = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeUserImage({\n\t\t\tid: raceid,\n\t\t\tuserImageId: id,\n\t\t});\n\t}\n\n\teditRaceUserImage = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceUserImageId: id,\n\t\t\t[`raceUserImage${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editUserImage({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceUserImage = {} } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const tags = ['photos'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: Images](/app-races/${race.id}/userImages)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.user-images'>User images</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.userImages && race.userImages.reverse().map(currentUserImage => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                {isAdmin && <>\n                                    <button class='btn btn-danger position-absolute' style='top:5px; right: 5px;' data-id={currentUserImage.id} onClick={this.removeRaceUserImage}>\n                                        <i class='fas fa-times' />\n                                    </button>\n                                </>}\n\n                                <div class='clearfix'>\n                                    <img src={currentUserImage.image.s3LargeLink} class='img-fluid rounded-lg mb-2' />\n                                </div>\n                                <div class='clearfix'>\n                                    <h5 class='mb-0'>{currentUserImage.title}</h5>\n                                    <small class='text-muted'> {util.formatDate(currentUserImage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentUserImage.body, currentUserImage.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin UserImage Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group '>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                        {isAdmin && <>\n                            <div class='col-12 border rounded-lg m-2 p-3 bg-light'>\n                                <h5>Add new user image</h5>\n                                <div class='row'>\n                                    <div class='col'>\n                                        {newRaceUserImage && newRaceUserImage.image && <img src={newRaceUserImage.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n                                        {['title'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                        {['body'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    onKeyUp={this.resizeTextarea}\n                                                    style='height: 3em;'\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                    </div>\n                                </div>\n                                <Images saved={{}} object={{}} field={'image'} updateField={this.updateUserImageUpload} autoOpen={false} />\n                                <button class='btn btn-info' onClick={this.addRaceUserImage}>Add race user image</button>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailUserImages;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport MusherInfoHeader from '../races/musherInfoHeader';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveMusherResult extends Component {\n    render() {\n        const { bib, onClickNav = () => {} } = this.props;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId) || {};\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(bib, 10)) : null;\n        selectedMusher = selectedMusher ? selectedMusher : {};\n        const selectedMusherIdx = sortedContestants ? sortedContestants.findIndex(e => e.bib === parseInt(bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(bib, 10)) : null;\n\n        const team = raceStore.getTeamById(selectedMusher.team);\n        const user = team.members ? team.members.find(m => m.email === selectedMusher.email) : {};\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(selectedMusher);\n\n        let lastResOut;\n        let lastResIn;\n        let totalDistance = 0;\n        let totalTime = 0;\n        let totalMovingTime = 0;\n        let totalInCpTime = 0;\n        let lastEstTimeOut = currentClass.startDate;\n        let lastAvgSpeed = 0;\n\n        const nextBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx + 1] ? sortedContestants[selectedMusherIdx + 1].bib : null;\n        const prevBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx - 1] ? sortedContestants[selectedMusherIdx - 1].bib : null;\n\n        const locale = 'en-GB';\n\n        return (<>\n            {nextBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextBib)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevBib)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <MusherInfoHeader\n                stores={this.props.stores}\n                contestant={selectedMusher}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n                onClickNav={onClickNav}\n                rank={selectedMusherIdx + 1}\n            >\n                {/* {\n                    \"id\": \"305e720b-12bc-4be3-8244-47a2529c1a26\",\n                    \"user\": 679,\n                    \"Løp\": \"Finnmarksløpet 1200\",\n                    \"bib\": 32,\n                    \"firstname\": \"Thomas\",\n                    \"lastname\": \"Wærner\",\n                    \"cellphone\": \"48176051\",\n                    \"email\": \"thomas.waerner@icloud.com\",\n                    \"country\": \"NO\",\n                    \"flag\": \"🇳🇴\",\n                    \"team\": 2278,\n                    \"startTime\": \"2019-03-08T18:32:00.000Z\",\n                    \"maxStartTime\": 1552071480000,\n                    \"startEpoch\": 1552069920000,\n                    \"timeEqualization\": 26,\n                    \"cpId\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                    \"cpDirection\": \"out\",\n                    \"cpDogs\": 13,\n                    \"cpTimestamp\": \"2019-03-13T00:08:00.000Z\",\n                    \"cpSortOrder\": 8\n                } */}\n                {/* [\n                    {\n                        \"position\": [],\n                        \"id\": \"d9f3d1b6-55e0-4185-b051-e96f1d4eaead\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"out\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-13T00:08:00.000Z\"\n                    },\n                    {\n                        \"position\": [],\n                        \"id\": \"1503b852-3a61-4b91-8323-5e4f862c4399\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"in\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-12T19:49:00.000Z\"\n                    }, */}\n                    {/* {\n                        \"position\":[],\n                        \"polygon\":[],\n                        \"id\":\"fa914e06-c56c-4b5b-9719-2dc6ee12c05d\",\n                        \"name\":\"Jergul\",\n                        \"distanceFromStart\":101,\n                        \"sortOrder\":3,\n                        \"distanceFromPrev\":101,\n                        \"estTimeToCpMinutes\":484\n                    } */}\n\n                    {/* <h3>RaceLiveMusherResult</h3> */}\n                    {/* <h5>{bib} {selectedMusher.lastname}</h5> */}\n                    {/* <xmp>{JSON.stringify(team.imageHeader, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(user, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(image, null, 4)}</xmp> */}\n                <div class='table-responsive'>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Checkpoint</th>\n                                <th class='text-center'>In</th>\n                                <th class='text-center'>Out</th>\n                                <th class='text-center'>Moving time</th>\n                                <th class='text-center'>Avg speed</th>\n                                <th class='text-center'>Total moving time</th>\n                                <th class='text-center'>Rest</th>\n                                <th class='text-center'>Total rest</th>\n                                <th class='text-center'>% rest</th>\n                                <th class='text-center'>Distance</th>\n                                <th class='text-center'>Total distance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {checkpoints && checkpoints.map((cp, cpIdx) => {\n                                const now = Math.floor(new Date().getTime() / 1000, 10);\n                                const resIn = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'in') || {};\n                                const resOut = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'out') || {};\n                                const resScratched = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'scratched') || {};\n                                let timeInCp = 0;\n                                if (!cp.isStartLine && resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                    timeInCp = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                }\n                                let movingTime = 0;\n                                if (lastResOut && resIn && lastResOut.timestamp && resIn.timestamp) {\n                                    movingTime = mu.deltaSec(lastResOut.timestamp, resIn.timestamp);\n                                }\n\n                                let hasBeenInCp = false;\n                                let avgSpeed = 0;\n                                if (resIn && resIn.timestamp) {\n                                    hasBeenInCp = true;\n                                    avgSpeed = cp.distanceFromPrev / (movingTime / 3600);\n                                }\n                                totalDistance += cp.distanceFromPrev ? parseInt(cp.distanceFromPrev, 10) : 0;\n                                totalMovingTime += movingTime ? movingTime : 0;\n                                totalInCpTime += timeInCp ? timeInCp : 0;\n                                totalTime += (movingTime ? movingTime : 0) + (timeInCp ? timeInCp : 0);\n                                const percentRest = totalTime ? totalInCpTime / totalTime * 100 : 0;\n                                const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n                                let line;\n                                let estTimeOutClass = 'text-muted font-weight-lighter';\n                                let totalRestClass = 'text-info';\n                                if (hasBeenInCp) {\n                                    let estTimeOut;\n                                    let estRest;\n                                    let restInCpSoFar;\n                                    // if (cp.isStartLine) {\n                                    //     estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                    //     estRest = 0;\n                                    if (!resOut || !resOut.timestamp) {\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.timeEqualization) {\n                                            if (currentClass.requiredRestMinutes && totalInCpTime < reqTotalRestInSec) {\n                                                estRest = reqTotalRestInSec - totalInCpTime + selectedMusher.timeEqualization * 60;\n                                                estTimeOutClass = 'text-warning font-weight-bold';\n                                            }\n                                            if (!estRest && cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                                estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                            }\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = 180 * 60;\n                                        }\n                                        if (cp.isStartLine) {\n                                            estTimeOut = mu.addDeltaSec(selectedMusher.startTime || currentClass.startDate, 0);\n                                        } else {\n                                            estTimeOut = mu.addDeltaSec(resIn.timestamp, estRest);\n                                            restInCpSoFar = mu.deltaSec(resIn.timestamp, now);\n                                        }\n                                        lastEstTimeOut = estTimeOut;\n\n                                        if (reqTotalRestInSec) {\n                                            if ((totalInCpTime + restInCpSoFar) > (reqTotalRestInSec + (selectedMusher.timeEqualization * 60))) {\n                                                totalRestClass = 'text-success';\n                                            } else {\n                                                totalRestClass = 'text-danger';\n                                            }\n                                        }\n                                    }\n\n                                    line = (<>\n                                        <tr>\n                                            <td><nobr>{cp.name}</nobr></td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resIn.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resIn.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    {resIn.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resIn.dogs}</>}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resOut.timestamp && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(resOut.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(resOut.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        {resOut.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resOut.dogs}</>}\n                                                    </nobr>}\n                                                    {!resScratched.timestamp && estTimeOut && <nobr class={`${estTimeOutClass}`}>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </>}\n                                                {resScratched.timestamp && <nobr class='text-danger'>\n                                                    <i class='fas fa-times' />\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resScratched.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resScratched.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(movingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(totalMovingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine || cp.isStartLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!resOut || !resOut.timestamp ? <>\n                                                            <nobr class='text-info'>\n                                                                {util.secToHms(restInCpSoFar, true)}\n                                                            </nobr>\n                                                        </> : <>\n                                                            {!cp.isStartLine && <>\n                                                                {estRest > 0 ? <>\n                                                                    <nobr class='text-muted font-weight-lighter'>\n                                                                        {util.secToHms(estRest, true)}\n                                                                    </nobr>\n                                                                </> : <>\n                                                                    <nobr>\n                                                                        {util.secToHms(timeInCp, true)}\n                                                                    </nobr>\n                                                                </>}\n                                                            </>}\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    <nobr>\n                                                        {util.secToHms(totalInCpTime, true)}\n                                                    </nobr>\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!cp.isStartLine && <>\n                                                            <nobr>\n                                                                {restInCpSoFar ? <>\n                                                                    <span class={totalRestClass}>\n                                                                        {util.secToHms(totalInCpTime + restInCpSoFar, true)}\n                                                                    </span> <span class='text-muted font-weight-lighter'>/ {util.secToHms(reqTotalRestInSec + (selectedMusher.timeEqualization * 60), true)}</span>\n                                                                </> : <>\n                                                                    {util.secToHms(totalInCpTime, true)}\n                                                                </>}\n                                                            </nobr>\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                                {/* {cp.timeEqualization && <>\n                                                    <br />\n                                                    {currentClass.requiredRestMinutes}\n                                                </>} */}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isStartLine || resScratched.timestamp ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {percentRest > 0 && <nobr>\n                                                        {util.format(percentRest || 0, 0)} <span class='text-muted font-weight-lighter'>%</span>\n                                                    </nobr>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {totalDistance} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                        </tr>\n                                    </>);\n                                    if (resOut && resOut.timestamp) {\n                                        lastEstTimeOut = resOut.timestamp;\n                                        lastAvgSpeed = avgSpeed;\n                                    }\n                                } else {\n                                    let estTimeIn;\n                                    let estTimeOut;\n                                    let estRest;\n                                    let movingTimeSoFar;\n                                    const distanceMeters = cp.distanceFromPrev * 1000;\n                                    const avgSpeedMs = lastAvgSpeed / 3.6;\n                                    let estTimeToNext = lastAvgSpeed ? (distanceMeters / avgSpeedMs / 60) : (cp.estTimeToCpMinutes || 0);\n                                    if (cp.isStartLine) {\n                                        estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                        estRest = 0;\n                                    } else if (lastEstTimeOut) {\n                                        estTimeIn = mu.addDeltaSec(lastEstTimeOut, estTimeToNext * 60);\n                                        // requiredRestMinutes: Number,\n                                        // estTimeToCpMinutes: Number,\n                                        // timeEqualization: Number,\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = (cp.estRestMinutes || 180) * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(estTimeIn, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n                                    if (lastResOut && lastResOut.timestamp) {\n                                        movingTimeSoFar = mu.deltaSec(lastResOut.timestamp, now);\n                                    }\n\n                                    avgSpeed = lastAvgSpeed || cp.distanceFromPrev / (estTimeToNext * 60 / 3600);\n                                    line = (\n                                        <tr>\n                                            <td>{cp.name}</td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info font-weight-light'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        est:\n                                                        <span class='text-muted mr-1 ml-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isFinishLine && estTimeOut && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && <nobr>\n                                                        {util.secToHms(cp.estTimeToCpMinutes * 60, true)}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar + totalMovingTime, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && !cp.isFinishLine && <nobr>\n                                                    {util.secToHms(estRest, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                        </tr>\n                                    );\n                                }\n                                lastResOut = resOut;\n                                lastResIn = resIn;\n                                return line;\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n\n                {/* <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(currentClass, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(lastResults, null, 4)}</xmp> */}\n            </MusherInfoHeader>\n        </>);\n    }\n}\n\nexport default RaceLiveMusherResult;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNews extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceArticle: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    addRaceArticle = async () => {\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceArticle } = this.state;\n\t\tawait raceStore.addArticle({ id: raceid, newArticle: newRaceArticle });\n\t\tthis.setState({\n\t\t\tnewRaceArticle: {},\n\t\t});\n\t}\n\n    editRaceArticle = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceArticleId: id,\n\t\t\t[`raceArticle${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editArticle({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    removeRaceArticle = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeArticle({\n\t\t\tid: raceid,\n\t\t\tarticleId: id,\n\t\t});\n\t}\n\n    updateArticleUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceArticle } = this.state;\n\t\tnewRaceArticle[field] = value;\n\t\tthis.setState({ newRaceArticle });\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceArticle } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const tags = ['news'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: News](/app-races/${race.id}/news)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.news'>Nyheter</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.articles && race.articles.reverse().map(currentArticle => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                <h5 class='mb-0'>{mu.replaceImages(currentArticle.title, race.images, language, false)}</h5>\n                                <small class='text-muted'> {util.formatDate(currentArticle.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                {currentArticle.image && <img src={currentArticle.image.s3LargeLink} class='float-right w-50 rounded-lg ml-2' />}\n                                <div class='font-weight-bold'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin News Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['ingress', 'body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n                {isAdmin && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                        <h5>Add new article</h5>\n                        {newRaceArticle && newRaceArticle.image && <img src={newRaceArticle.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n\n                        {['title'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        {['ingress', 'body'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    onKeyUp={this.resizeTextarea}\n                                    style='height: 3em;'\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        <Images saved={{}} object={{}} field={'image'} updateField={this.updateArticleUpload} autoOpen={false} />\n                        <button class='btn btn-info' onClick={this.addRaceArticle}>Add race article</button>\n                    </div>\n                </>}\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailNews;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceCommentReply extends Component {\n    commentRace = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await raceStore.commentReplyRace({ id: race.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ race, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-reply'>Write a reply...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        onFocus={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RaceCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport RaceReplyComment from './commentReply';\n\nimport mu from '../../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass RaceComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceComment({ id: race.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', race, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceCommentReply({ id: race.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', race, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentRace({ id: race.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentReplyRace({ id: race.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentRace({ id: race.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentReplyRace({ id: race.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await raceStore.translateCommentReply({ commentid, replyid, race, user });\n        } else {\n            translatedText[key] = await raceStore.translateComment({ commentid, race, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { race, callback = () => {}, initCall = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (race.comments) {\n            totalComments = race.comments.length;\n            if (showAllComments) {\n                filteredComments = race.comments;\n            } else {\n                // filteredComments = race.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = race.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {race && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = raceStore.getCommentTranslations({\n                        race,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = raceStore.getCommentReplyTranslations({\n                                        race,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <RaceReplyComment stores={this.props.stores} race={race}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`race-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default RaceComments;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {\n};\n\n@observer\nclass RaceText extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { text } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\n        let finalText = text;\n\n        const regex = new RegExp(`/<${language}>(.*?)<\\/${language}>/`);\n        const parsedText = text.replace(regex, '$1');\n        if (parsedText) {\n            finalText = text;\n        }\n\n\t\treturn (\n\t\t\t<>\n                {finalText}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceText;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass Checkpoints extends Component {\n    render() {\n        const { checkpoints, thClass, thStyle, selectedCheckpointId, width, widthCp, onClickCheckpoint = () => {}, dotColor } = this.props;\n        return (<>\n            {checkpoints && checkpoints.map((cp, cpIdx) => <>\n                {cpIdx > 0 && <th class={thClass} style={thStyle}>\n                    <div class='' style={`width: ${width}px;`}>\n                        &nbsp;\n                    </div>\n                </th>}\n                <th class={thClass} style={thStyle}>\n                    <div\n                        class={`checkpoint position-relative ${selectedCheckpointId === cp.id ? 'text-primary' : ''}`}\n                        style={`width: ${widthCp}px; font-size: 1.1em;`}\n                        onClick={onClickCheckpoint}\n                        data-id={cp.id}\n                    >\n                        <i class='fas fa-campground' />\n\n                        <div\n                            class={`rounded-pill-both px-1 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: 0px; right: -20px; font-size: 0.6em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {cp.sortOrder && cp.sortOrder !== 'n/a' && <>{cp.sortOrder}</>}\n                        </div>\n\n                    </div>\n                </th>\n            </>)}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantLineCheckpoint extends Component {\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n@observer\nclass Contestants extends Component {\n    render() {\n        const {\n            currentClass,\n            contestants,\n            limit,\n            onClickMusher,\n            tdClass,\n            tdStyle,\n            progressStyle,\n            progressbarStyle,\n        } = this.props;\n\n        const { checkpoints = [], results = [] } = currentClass;\n        const finalContestants = contestants && limit ? contestants.slice(0, limit) : contestants;\n\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n\n        const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n        const now = Math.floor(new Date().getTime() / 1000, 10);\n\n        return (<>\n            {finalContestants && finalContestants.map((co, coIdx) => {\n                let cpIdx = 0;\n                let hasLeftCpPrev;\n                let bibIdxOutPrev;\n                let estTimeToCpMinutesPrev;\n                let hasScratchedPrev;\n                let totalInCpTime = 0;\n\n                let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(co.bib, 10)) : null;\n                selectedMusher = selectedMusher ? selectedMusher : {};\n\n                return(<>\n                    <tr class='musher' onClick={onClickMusher} data-bib={co.bib}>\n                        <td class={tdClass} style={tdStyle}>\n                            {co.startTime ? util.isoTime(co.startTime) : ''}\n                        </td>\n\n                        {checkpoints && checkpoints.map((cp, idx) => {\n                            const checkpointResults = results.slice().filter(e => e.checkpoint === cp.id).sort(fieldSorter(['timestamp']));\n                            const res = checkpointResults.filter(e => parseInt(e.bib, 10) == co.bib);\n                            const hasLeftCp = res.find(e => e.direction === 'out');\n                            const hasArrivedCp = res.find(e => e.direction === 'in');\n                            const hasScratched = res.find(e => e.direction === 'scratched');\n\n                            const allResultsIn = checkpointResults.filter(e => (e.direction === 'in' || e.direction === 'scratched'));\n                            const bibIdxIn = allResultsIn.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            const allResultsOut = checkpointResults.filter(e => e.direction === 'out');\n                            const bibIdxOut = allResultsOut.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            let timeInCp = 0;\n                            let percentInCp;\n                            if (!cp.isStartLine && hasArrivedCp && hasLeftCp && hasArrivedCp.timestamp && hasLeftCp.timestamp) {\n                                timeInCp = mu.deltaSec(hasArrivedCp.timestamp, hasLeftCp.timestamp);\n                            }\n                            totalInCpTime += timeInCp ? timeInCp : 0;\n\n                            if (!hasLeftCp && hasArrivedCp && !cp.isStartLine) {\n                                if (cp.timeEqualization && reqTotalRestInSec) {\n                                    const restInCpSoFar = mu.deltaSec(hasArrivedCp.timestamp, now);\n                                    // console.log({ reqTotalRestInSec, totalInCpTime, restInCpSoFar })\n                                    percentInCp = (totalInCpTime + restInCpSoFar) / reqTotalRestInSec * 100;\n                                    percentInCp = percentInCp > 100 ? 100 : percentInCp;\n                                    // console.log({ percentInCp })\n                                }\n                            }\n\n                            if (hasScratchedPrev) {\n                                return '';\n                            }\n\n                            if (bibIdxIn === -1)  {\n                                if (hasLeftCpPrev) {\n                                    const nowEpoch = Math.floor(new Date().getTime() / 1000);\n                                    const prevCpOutEpoch = Math.floor(new Date(hasLeftCpPrev.timestamp).getTime() / 1000);\n                                    const timeUsedOnStage = Math.floor((nowEpoch - prevCpOutEpoch) / 60);\n                                    // let percentDone = timeUsedOnStage / estTimeToCpMinutesPrev * 100;\n                                    let percentDone = timeUsedOnStage / cp.estTimeToCpMinutes * 100;\n                                    percentDone = percentDone > 95 ? 95 : percentDone;\n                                    const line = (<>\n                                        <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                            <div class='progress' style={`${progressStyle}`}>\n                                                <div\n                                                    class={`progress-bar progress-bar-striped`}\n                                                    role='progressbar'\n                                                    style={`width: ${percentDone}%; ${progressbarStyle}`}\n                                                    aria-valuenow={percentDone}\n                                                    aria-valuemin='0'\n                                                    aria-valuemax='100'\n                                                    data-prevtimestamp={hasLeftCpPrev.timestamp}\n                                                    data-timeUsedOnStage={timeUsedOnStage}\n                                                    data-estTimeToCpMinutesPrev={estTimeToCpMinutesPrev}\n                                                    data-nowEpoch={nowEpoch}\n                                                    data-prevCpOutEpoch={prevCpOutEpoch}\n                                                >{bibIdxOutPrev + 1 > 0 ? bibIdxOutPrev + 1 : ''}</div>\n                                            </div>\n\n                                            {/* estTimeToCpMinutesPrev: {estTimeToCpMinutesPrev}\n                                            timeUsedOnStage: {timeUsedOnStage}\n                                            percentDone: {percentDone} */}\n                                            {co.cpId && res.length > 0 && <>\n                                                {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                            </>}\n                                        </td>\n                                    </>);\n                                    bibIdxOutPrev = bibIdxOut;\n                                    hasLeftCpPrev = hasLeftCp;\n                                    estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                    return line;\n                                }\n                                return '';\n                            }\n                            cpIdx = idx;\n                            bibIdxOutPrev = bibIdxOut;\n                            hasLeftCpPrev = hasLeftCp;\n                            estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n\n                            const output = (<>\n                                {(hasArrivedCp || hasScratched) && idx > 0 && <>\n                                    <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                        <div class='progress' style={`${progressStyle}`}>\n                                            <div\n                                                class={`progress-bar`}\n                                                role='progressbar'\n                                                style={`width: 100%; ${progressbarStyle}`}\n                                                aria-valuenow='100'\n                                                aria-valuemin='0'\n                                                aria-valuemax='100'\n                                            />\n                                        </div>\n                                        {co.cpId && res.length > 0 && <>\n                                            {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                        </>}\n                                    </td>\n                                </>}\n                                <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                    <div class='progress' style={`${progressStyle}`}>\n                                        <div\n                                            class={`progress-bar ${percentInCp > 0 ? 'progress-bar-striped' : ''} ${hasScratched ? 'bg-danger' : 'bg-success'}`}\n                                            role='progressbar'\n                                            style={`width: ${percentInCp || 100}%; ${progressbarStyle}`}\n                                            aria-valuenow={percentInCp}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        >{hasScratched ? <i class='fas fa-times' /> : <>{bibIdxIn + 1 > 0 ? bibIdxIn + 1 : ''}</>}</div>\n                                    </div>\n                                    {co.cpId && res.length > 0 && <>\n                                        {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                    </>}\n                                </td>\n                            </>);\n\n                            hasScratchedPrev = hasScratched;\n                            return output;\n                        })}\n                        <td colspan={checkpoints.length * 2 - cpIdx} class={tdClass} style={tdStyle}>\n                            <div class='d-flex flex-nowrap'>\n                                <div\n                                    class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                    style={`background-color: ${mu.getRankingColor(coIdx + 1)}; width: 45px;`}\n                                >\n                                    {co.bib}\n                                </div>\n                                <div>\n                                    <nobr>\n                                        {co.flag} {co.lastname}\n                                    </nobr>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </>);\n            })}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantCheckpoint extends Component {\n\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n\n@observer\nclass RaceLiveResults extends Component {\n    componentWillReceiveProps(nextProps) {\n        if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n            const { currentClass } = this.props;\n            const { raceStore } = this.props.stores;\n            const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n        }\n\t}\n\n    componentDidMount() {\n        const { currentClass } = this.props;\n        const { raceStore } = this.props.stores;\n        const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n\t}\n\n    render() {\n        const widthCp = 20;\n        const width = 40;\n\t\tconst {\n            race,\n            currentClass,\n            onClickMusher = () => {},\n            onClickCheckpoint = () => {},\n            selectedCheckpointId,\n            limit = 100,\n            tableClass = 'table-striped table-sm',\n            thClass,\n            thStyle,\n            tdClass,\n            tdStyle,\n            progressStyle = 'height: 20px;',\n            progressbarStyle,\n        } = this.props;\n        const { checkpoints = [], sortOrderResults } = currentClass;\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n        const dotColor = '#808080';\n\n\t\treturn (<>\n            <div class='table-responsive'>\n                <table class={`table ${tableClass}`}>\n                    <thead>\n                        <tr>\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${width}px;`}>\n                                    <i class='fas fa-flag' />\n                                </div>\n                            </th>\n\n                            <Checkpoints stores={this.props.stores}\n                                checkpoints={checkpoints}\n                                thClass={thClass}\n                                thStyle={thStyle}\n                                selectedCheckpointId={selectedCheckpointId}\n                                width={width}\n                                widthCp={widthCp}\n                                onClickCheckpoint={onClickCheckpoint}\n                                dotColor={dotColor}\n                            />\n\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${widthCp}px;`}>\n                                    <i class='fas fa-flag-checkered' />\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <Contestants\n                            stores={this.props.stores}\n                            currentClass={currentClass}\n                            contestants={sortedContestants}\n                            limit={limit}\n                            onClickMusher={onClickMusher}\n                            tdClass={tdClass}\n                            tdStyle={tdStyle}\n                            progressStyle={progressStyle}\n                            progressbarStyle={progressbarStyle}\n                        />\n                    </tbody>\n                </table>\n            </div>\n\t\t</>);\n\t}\n}\n\nexport default RaceLiveResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n// const fieldSorter = (fields) => (a, b) => fields.map(o => {\n//     let dir = 1;\n//     if (o[0] === '-') { dir = -1; o=o.substring(1); }\n//     return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n// }).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            // this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    // insertWorkouts = () => {\n    //     const { storyStore } = this.props.stores;\n    //     const { publicWorkouts, publicFeed } = storyStore;\n    //     if (publicWorkouts.length) {\n    //         const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n    //         storyStore.localUpdateField('publicFeed', finalArray);\n    //     }\n    // }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories, publicDogs } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={publicDogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport DogScroller from '../dog/scroller';\nimport ImageScroller from '../imageScroller';\nimport RaceTrackingMusherDetail from '../public/raceTrackingMusherDetail';\n\n@observer\nclass MusherInfoHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { contestant = {}, onMarkerClick = () => {}, children, rank } = this.props;\n        const wp = raceStore.findWaypointByBib(contestant.bib);\n\n        const { isAdmin } = userStore;\n        const musher = (contestant.bib ? raceStore.getMusherByBibId(contestant.bib) : raceStore.getMusherByBibEmail(contestant.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(contestant.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        let image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = contestant.color;\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(contestant.bib);\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n            />\n\n            <div class='d-flex position-relative' style='margin-top: 17vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; font-size: 1.2em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {/* {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>} */}\n                        {rank && <>{rank}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-0' style='line-height: 1.2em;'>\n                    <h5 class='mb-0'>\n                        <div class='d-flex flex-nowrap'>\n                            <div\n                                class='text-white font-weight-bold pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                style={`background-color: ${mu.getRankingColor(rank)}; width: 55px;`}\n                            >\n                                {musher.bib}\n                            </div>\n                            <div>\n                                <nobr>\n                                    {musher.flag} {musher.firstname} {musher.lastname}\n                                </nobr>\n                            </div>\n                        </div>\n                    </h5>\n                    <span class='mb-0' style='margin-left: 93px;'>{musher.sportsClub || team.name || <>&nbsp;</>}</span>\n                </div>\n            </div>\n\n            <div class='d-flex justify-content-center mb-3'>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='details'\n                    >\n                        Details\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'gpsdata' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='gpsdata'\n                    >\n                        GPS Data\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='team'\n                    >\n                        Team\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='dogs'\n                    >\n                        Dogs\n                    </button>\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                // style='max-height: 60vh;'\n            >\n                {submenu === 'details' && <>\n                    {children}\n                </>}\n\n                {submenu === 'gpsdata' && <>\n                    <RaceTrackingMusherDetail\n                        stores={this.props.stores}\n                        wp={wp}\n                        musher={musher}\n                    />\n                </>}\n\n                {submenu === 'team' && <>\n                    {team.public > 0 ? <>\n                        <h3>{team.name}</h3>\n                        <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        <ImageScroller stores={this.props.stores} images={teamImages} />\n\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                        </div>\n                    </>}\n                </>}\n\n                {submenu === 'dogs' && <>\n                    {team.public > 0 ? <>\n                        {team.dogs && <div class='w-100 container-fluid'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n                        {showDog && <>                    \n                            <div class='d-flex mb-0 mt-3 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pr-2'\n                                    style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                >\n                                    <h5 class='mb-1'>\n                                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </h5>\n                                    <div>\n                                        {daysUntilBirthday < 7 && <>\n                                            <span class='text-muted mr-2'>\n                                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                            </span>\n                                        </>}                                \n                                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                        </>}\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                    <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                        Toggle admin info\n                    </button>\n                    {showAdminInfo && <>\n                        <small>\n                            <xmp>\n                                musher: {JSON.stringify(musher, null, 4)}<br />\n                                user: {JSON.stringify(user, null, 4)}<br />\n                                team: {JSON.stringify(team, null, 4)}<br />\n                                totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                {/* {\n                                    \"firstDate\": \"2021-03-19 11:59\",\n                                    \"lastDate\": \"2021-03-20 17:13\",\n                                    \"firstEpoch\": 1616151540000,\n                                    \"lastEpoch\": 1616256780000,\n                                    \"now\": {\n                                        \"$numberDecimal\": \"1642675856939\"\n                                    },\n                                    \"totalTimeUsedSec\": 26524316,\n                                    \"totalWorkoutTimeUsedSec\": 130895,\n                                    \"lastDuration\": 25655,\n                                    \"team\": 84,\n                                    \"count\": 4,\n                                    \"distanceKm\": 301.5906237951766,\n                                    \"elevation\": 3610.019075719202,\n                                    \"duration\": 77343,\n                                    \"rest\": 1332,\n                                    \"speedAvg\": 8.294634979660305,\n                                    \"totalRest\": 54884,\n                                    \"loadIndex\": 1080.75,\n                                    \"totalKcalRelated\": 544.535560976128,\n                                    \"weightedTotalKcal\": 12303.171406247127,\n                                    \"flatTotalKcal\": 9424.70699359927,\n                                    \"firstGpxStartEpoch\": null,\n                                    \"lastGpxStartEpoch\": null\n                                } */}\n\n                            </xmp>\n                        </small>\n                    </>}\n                </div>}\n                <div class='d-flex position-absolute' style='right: 10px; bottom: 10px;'>\n                    {inFront.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-left' />\n                    </a>}\n                    {behind.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-right' />\n                    </a>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default MusherInfoHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Drawer from '../../components/drawer/';\nimport DogsEditBaseInfo from '../../components/dog/editBaseInfo';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { userStore } = this.props.stores;\n        const { user } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        userStore.removeImage({\n            id: user.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { user, field, updateField } = this.props;\n        updateField({ id: user.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, user, type = 'text', field, title, icon, help, onInput, updateField } = this.props;\n        const value = user[field];\n        const byMd5 = e => user.image ? e.md5 !== user.image.md5 : true;\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {user.image && user.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={user.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={user.image.name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {user.images && user.images.filter(byMd5).map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={user} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={user} field={field} updateField={updateField} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={user.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogLine extends Component {\n    render() {\n        const { dog, children, onDogClick = () => {} } = this.props;\n\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { vaccineLogStatuses } = userStore;\n\n        return(\n            <div\n                class='d-flex mb-0 position-relative mb-3 dogInfo'\n                data-id={dog.id}\n            >\n                <div>\n                    <div class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''}>\n                        {/* {!dog.image && <i class='fas fa-dog mt-3' style='font-size: 40px;' />} */}\n                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 pr-2' onClick={onDogClick}>\n                    {children}\n                    <span class='float-right'>\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                    <h6 class='mb-1' style='line-height: 1.0em;'>\n                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                    </h6>\n                    {dog.chipId ? <>\n                        <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                    </> : <>\n                        <div class='alert alert-danger' role='alert'>\n                            <Text id='races.missing-chipid'>Missing chid id</Text>\n                        </div>\n                    </>}\n\n                    <div>\n                        {vaccineLogStatuses && vaccineLogStatuses.filter(e => e.chipId === dog.chipId).map((vac) => {\n                            return (\n                                <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'} mr-2 mb-1`}>\n                                    {vac.vaccineAgens.name}\n                                    <span class='font-weight-lighter ml-2 d-none d-sm-block'>\n                                        <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                        {vac.inKarens && <>\n                                            <br />\n                                            (karens: {util.format(vac.karensDaysLeft, 0)} days left)\n                                        </>}\n                                    </span>\n                                </span>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submenu: 'info',\n            showDrawer: false,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { userStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { user } = userStore;\n        if (field === 'images') {\n            if (Array.isArray(user.images) && Array.isArray(value)) {\n                localObjectValue = [...user.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        userStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { userStore } = this.props.stores;\n        await userStore.saveField(id, field, value);\n    }\n\n\tsignupToRace = async () => {\n\t\tconst { raceStore, userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { signup } = raceStore;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\tteam: user.team,\n\t\t\t\tfirstname: user.firstname,\n\t\t\t\tlastname: user.lastname,\n\t\t\t\tsportsClub: user.sportsClub,\n\t\t\t\temail: user.email,\n\t\t\t\tcellphone: user.cellphone,\n\t\t\t\tfacebook: user.facebook,\n\t\t\t\tinstagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    updateSignup = (e) => {\n        const key = e.target.id;\n        const value = e.target.value;\n        const { raceStore } = this.props.stores;\n        raceStore.updateObjectKeyValue('signup', key, value);\n    }\n\n    editSignup = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.localUpdateSignup(field, value);\n            if (field === 'team') {\n                await raceStore.loadTeams(value, true);\n            }\n\t\t}, 500);\n    }\n\n    clearSignupValue = async (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = 'null';\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n        raceStore.editClass({\n            id: raceid,\n            data,\n        });\n        raceStore.localUpdateSignup(field, value);\n        if (field === 'team') {\n            await raceStore.loadTeams(value, true);\n        }\n    }\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        this.setState({\n            showDrawer: !showDrawer,\n        });\n    }\n\n    onDogClick = (e) => {\n        const { id } = e.target.closest('.dogInfo').dataset;\n        console.log('onDogClick', id);\n        const { userStore, raceStore } = this.props.stores;\n        const { signup } = raceStore;\n        const dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        const currentDog = dogs.find(e => e.id == id);\n        this.setState({\n            showDrawer: true,\n            currentDog,\n        });\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n    render() {\n        const { submenu, showDrawer, currentDog } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, saved } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const { signup } = raceStore;\n\n        let signupClass = {};\n        let dogs = [];\n        if (signup.class) {\n            signupClass = raceStore.getRaceClassById(signup.class);\n        }\n        if (signup.team) {\n            dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        }\n        const { vaccineLogStatuses } = userStore;\n\t\tconst today = new Date();\n\n        const chosenDogChipIds = mu.getAlphabet(signupClass.dogs).filter(letter => signup[`dog${letter}`]).map(letter => signup[`dog${letter}`]);\n        const byNotChosen = e => chosenDogChipIds.indexOf(e.chipId) === -1;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.signup'>Påmelding</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    {today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate) ? <>\n                        <span class='font-weight-lighter'><Text id='races.signed-in-as'>Logget inn som</Text>:</span> {user.email}<br /><br />\n                        {signup.id ? <>\n                            <div class='font-weight-bold mb-4'>\n                                <i class='fas fa-check text-success' /> <Text id='races.signed-up'>Din bruker er påmeldt!</Text><br />\n                                {/* <xmp>{JSON.stringify(signup, null, 4)}</xmp> */}\n                            </div>\n\n                            {!race.liveRace && race.signuppayment && <>\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-2 col-form-label text-right font-weight-lighter'><Text id='races.signup'>Påmelding</Text></label>\n                                    <div class='col-10'>\n                                        {signup.paidSignupfee ? <div class='py-2'>\n                                            <Text id='races.paid'>Betalt</Text>: {util.formatDate(signup.paidSignupfee)}\n                                            <i class='fas fa-check text-success ml-3' />\n                                        </div> : <>\n                                            <div class='alert alert-danger mb-1' role='alert'>\n                                                <h5>\n                                                    <span class='font-weight-lighter'><Text id='races.payment-info'>Betaling påmelding</Text>:</span><br />\n                                                    <Markdown markdown={mu.replaceImages(race.signuppayment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                    {signupClass.signupfee || race.signupfee} NOK\n                                                </h5>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n\n\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='race.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'chiplist' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='chiplist'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-ol' /> <Text id='race.chiplist'>Chiplist</Text></button>\n                                    </div>\n                                    {/* <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-dog' /> <Text id='race.team'>Team</Text></button>\n                                    </div> */}\n                                </div>\n                            </div>\n\n                            {submenu === 'info' && <>\n                                <div class='form-group row my-5'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>\n                                        <Text id='races.team'>Team</Text>\n                                    </label>\n                                    <div class='col-9'>\n                                        <select class='form-control form-control-lg' id='team' aria-describedby='teamHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.team}\n                                        >\n                                            <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                            {teams.map(team =>\n                                                <option value={team.id}>{team.name}</option>\n                                            )}\n                                        </select>\n                                        {signup.team ? <>\n                                            {/* <div class='alert alert-success' role='alert'>\n                                                A simple success alert—check it out!\n                                            </div> */}\n                                        </> : <>\n                                            <div class='alert alert-danger clearfix' role='alert'>\n                                                <span class='display-4 float-left mr-3'>\n                                                    <i class='fas fa-exclamation-triangle' />\n                                                </span>\n                                                <Text id='races.choose-race-team' fields={{ title: race.title }}>Please choose race team for {race.title}</Text>\n                                            </div>\n                                        </>}\n                                        {/* <details>\n                                            <summary>\n                                                <i class='fas fa-info-circle' /> <Text id='races.team-about'>About teams</Text>\n                                            </summary>\n                                            <Text id='races.team-help'>\n                                                <ol>\n                                                    <li>Create a team for your race dogs.</li>\n                                                    <li>Add the dogs you want to use for this race.</li>\n                                                    <li>Choose the team for this race.</li>\n                                                </ol>\n                                            </Text>\n                                        </details> */}\n                                    </div>\n                                </div>\n\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='cellphone'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.cellphone}\n                                                placeholder={<Text id='races.cellphone-help'>Hva er mobilnummer ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                {signup.name && <div class='form-group row my-2'>\n                                    <label for='name' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.name'>Navn</Text></label>\n                                    <div class='col-9'>\n                                        {signup.name}\n                                    </div>\n                                </div>}\n                                <div class='form-group row my-2'>\n                                    <label for='firstname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.firstname'>Fornavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='firstname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.firstname}\n                                                placeholder={<Text id='races.firstname-help'>Hva er fornavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='lastname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.lastname'>Etternavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='lastname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.lastname}\n                                                placeholder={<Text id='races.lastname-help'>Hva er etternavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='sportsClub' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='sportsClub'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.sportsClub}\n                                                placeholder={<Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='facebook' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.facebook'>Facebook</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='facebook'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.facebook}\n                                                placeholder={<Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='instagram' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.instagram'>Instagram</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='instagram'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.instagram}\n                                                placeholder={<Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.class'>Klasse</Text></label>\n                                    <div class='col-9'>\n                                        <select class='form-control' id='class' aria-describedby='classHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.class}\n                                            disabled\n                                        >\n                                            <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <option value={currentClass.id}>\n                                                    {currentClass.title}{!race.liveRace && <>\n                                                        - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK\n                                                    </>}\n                                                </option>\n                                            </>)}\n                                        </select>\n                                    </div>\n                                </div>\n                                {race.rules && <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>&nbsp;</label>\n                                    <div class='col-9 pl-5'>\n                                        <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            checked={signup.termsAndAgreement}\n                                            value={1}\n                                        />\n                                        <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                    </div>\n                                </div>}\n                                {race.declaration && <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top'>\n                                        <h5><Text id='races.declaration'>Declaration</Text></h5>\n                                    </div>\n                                    <details class='col-12'>\n                                        {signup.declaration ? <>\n                                            <summary>\n                                                <Text id='races.see-declaration'>See declaration</Text> (<span class='text-muted font-weight-light'><Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}</span>)\n                                            </summary>\n                                        </> : <>\n                                            <summary>\n                                                <h5 class='btn btn-primary'><Text id='races.see-declaration'>See declaration</Text></h5>\n                                            </summary>\n                                        </>}\n\n                                        <Markdown markdown={mu.replaceImages(race.declaration, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\n                                        {signup.declaration ? <>\n                                            <i>\n                                                <Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}\n                                            </i>\n                                        </> : <>\n                                            <div class='pl-5'>\n                                                <input type='checkbox' class='form-check-input' id='declaration'\n                                                    data-classid={signup.class}\n                                                    data-contestantid={signup.id}\n                                                    onInput={this.editSignup}\n                                                    checked={signup.declaration}\n                                                    value={1}\n                                                />\n                                                <label class='form-check-label' for='declaration'><Text id='races.declaration-accept'>I hereby sign the declaration for the race!</Text></label>\n                                            </div>\n                                        </>}\n                                    </details>\n                                </div>}\n\n                                <Input saved={saved} user={user} field='image' icon='fas fa-camera' type='image'\n                                    stores={this.props.stores}\n                                    title={<Text id='users.photos'>Bilder</Text>}\n                                    help={<Text id='users.photos-help'>Bilder av deg.</Text>}\n                                    onInput={this.updateField} updateField={this.updateFieldValue} />\n\n                            </>}\n\n                            {submenu === 'chiplist' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top pt-3'>\n                                        <h5><Text id='races.chiplist'>Chiplist</Text></h5>\n                                    </div>\n\n                                    {signupClass && signupClass.dogs && mu.getAlphabet(signupClass.dogs, ['R1', 'R2']).map(letter => {\n                                        const chosenDog = dogs && dogs.length > 0 ? dogs.find(e => e.chipId === signup[`dog${letter}`]) : null;\n                                        return (<>\n                                            <div class='col-12 center border-top pt-3 d-flex'>\n                                                <div class='display-4' style='width: 50px;'>\n                                                    {letter}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pr-2'>\n                                                    {chosenDog ? <>\n                                                        <DogLine stores={this.props.stores} dog={chosenDog} onDogClick={this.onDogClick}>\n                                                            <button\n                                                                class='btn btn-danger float-right ml-2'\n                                                                onClick={this.clearSignupValue}\n                                                                id={`dog${letter}`}\n                                                                data-classid={signup.class}\n                                                                data-contestantid={signup.id}\n                                                            >\n                                                                <i class='fas fa-times' />\n                                                            </button>\n                                                        </DogLine>\n                                                    </> : <>                                                \n                                                        <select class='form-control p-0'\n                                                            id={`dog${letter}`}\n                                                            data-classid={signup.class}\n                                                            data-contestantid={signup.id}\n                                                            onInput={this.editSignup}\n                                                        >\n                                                            <option value=''>-- Choose dog for this position --</option>\n                                                            {dogs.filter(byNotChosen).map(dog => <>\n                                                                <option value={dog.chipId} selected={dog.chipId === signup[`dog${letter}`] ? 'selected' : ''}>\n                                                                    {dog.shortname || dog.name} - {dog.birth && <>{util.age(dog.birth, dog.deceased)}</>} {dog.gender === 'female' ? '♀️' : '♂️'}\n                                                                </option>\n                                                            </>)}\n                                                        </select>\n                                                    </>}\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n\n                                </div>\n                            </>}\n\n                            {submenu === 'team' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 border-top pt-3'>\n                                        {dogs && dogs.length > 0 ? <>\n                                            {dogs.map(dog => <>\n                                                <DogLine stores={this.props.stores} dog={dog} />\n                                            </>)}\n                                        </> : <>\n                                            <div class='text-center text-muted'>\n                                                <div class='display-1'>\n                                                    <i class='fas fa-dog' />\n                                                </div>\n                                                <h3 class='font-weight-lighter'>\n                                                    <Text id='race.add-dogs'>Add a team to your race signup to see the dogs.</Text>\n                                                </h3>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n                        </> : <>\n\n                            {race.liveRace ? <>\n                                Signup is done at the race normal web pages.\n                            </> : <>\n                                <div class='form-group'>\n                                    <label for='cellphone'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <input type='text' class='form-control' id='cellphone' aria-describedby='cellphoneHelp'\n                                        placeholder={user.cellphone}\n                                        onInput={this.updateSignup}\n                                        value={signup.cellphone}\n                                    />\n                                    <small id='cellphoneHelp' class='form-text text-muted'><Text id='races.cellphone-help'>'Hva er mobilnummer ditt?'</Text></small>\n                                </div>\n\n                                {signup.name && <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='name'><Text id='races.name'>Name</Text></label>\n                                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp'\n                                                placeholder={user.name}\n                                                onInput={this.updateSignup}\n                                                value={signup.name}\n                                            />\n                                            <small id='nameHelp' class='form-text text-muted'><Text id='races.name-help'>Hva er navnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>}\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='firstname'><Text id='races.firstname'>Fornavn</Text></label>\n                                            <input type='text' class='form-control' id='firstname' aria-describedby='firstnameHelp'\n                                                placeholder={user.firstname}\n                                                onInput={this.updateSignup}\n                                                value={signup.firstname}\n                                            />\n                                            <small id='firstnameHelp' class='form-text text-muted'><Text id='races.firstname-help'>Hva er fornavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='lastname'><Text id='races.lastname'>Etternavn</Text></label>\n                                            <input type='text' class='form-control' id='lastname' aria-describedby='lastnameHelp'\n                                                placeholder={user.lastname}\n                                                onInput={this.updateSignup}\n                                                value={signup.lastname}\n                                            />\n                                            <small id='lastnameHelp' class='form-text text-muted'><Text id='races.lastname-help'>Hva er etternavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='sportsClub'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <input type='text' class='form-control' id='sportsClub' aria-describedby='sportsClubHelp'\n                                        placeholder={user.sportsClub}\n                                        onInput={this.updateSignup}\n                                        value={signup.sportsClub}\n                                    />\n                                    <small id='sportsClubHelp' class='form-text text-muted'><Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text></small>\n                                </div>\n\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='facebook'><Text id='races.facebook'>Facebook</Text></label>\n                                            <input type='text' class='form-control' id='facebook' aria-describedby='facebookHelp'\n                                                placeholder={user.facebook}\n                                                onInput={this.updateSignup}\n                                                value={signup.facebook}\n                                            />\n                                            <small id='facebookHelp' class='form-text text-muted'><Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='instagram'><Text id='races.instagram'>Instagram</Text></label>\n                                            <input type='text' class='form-control' id='instagram' aria-describedby='instagramHelp'\n                                                placeholder={user.instagram}\n                                                onInput={this.updateSignup}\n                                                value={signup.instagram}\n                                            />\n                                            <small id='instagramHelp' class='form-text text-muted'><Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='team'><Text id='races.team'>Team</Text></label>\n                                    <select class='form-control' id='team' aria-describedby='teamHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.team}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                        {teams.map(team =>\n                                            <option value={team.id}>{team.name}</option>\n                                        )}\n                                    </select>\n                                    <small id='teamHelp' class='form-text text-muted'><Text id='races.choose-team-help'>Velg fra dine team</Text></small>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='class'><Text id='races.class'>Klasse</Text></label>\n                                    <select class='form-control' id='class' aria-describedby='classHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.class}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                        {race.classes && race.classes.map(currentClass => <>\n                                            <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                        </>)}\n                                    </select>\n                                    <small id='classHelp' class='form-text text-muted'><Text id='races.choose-class-help'>Velg ønsket klasse.</Text></small>\n                                </div>\n\n                                <div class='form-group form-check'>\n                                    <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                        onInput={this.updateSignup}\n                                        checked={signup.termsAndAgreement}\n                                        value={true}\n                                    />\n                                    <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                </div>\n                                <button type='button' class='btn btn-primary' onClick={this.signupToRace}><Text id='races.do-signup'>Meld meg på</Text></button>\n                            </>}\n\n                        </>}\n\n                    </> : <>\n                        {today < new Date(race.signupStartDate) ? <>\n                            <h5 class='mt-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-not-open-yet'>Påmeldingen har ikke åpnet ennå!</Text>\n                            </h5>\n                            <p class='mt-4'>\n                                <Text id='races.signup-opening'>Påmeldingen åpner</Text>:<br />\n                                <span class='display-4'>{util.formatDate(race.signupStartDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</span>\n                            </p>\n                        </> : <>\n                            <h5 class='mt-4 mb-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-closed'>Påmeldingen er stengt!</Text>\n\n                                {/* {JSON.stringify(signup, null, 4)} */}\n                            </h5>\n                        </>}\n                    </>}\n                </div>\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <DogsEditBaseInfo\n                        stores={this.props.stores}\n                        id={currentDog.id}\n                    />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport ImageScroller from '../../components/imageScroller';\n\nfunction nl2br($str) {\n\tif (typeof $str === 'string') {\n\t\treturn $str.replace(/[\\n]/g, '<br>');\n\t}\n\treturn $str;\n}\n\nfunction byBib(a, b) {\n    const aHas = typeof a.bib !== 'undefined';\n    const bHas = typeof b.bib !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.bib - b.bib) || 0;\n}\n\n@observer\nclass AppRaceDetailMushers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayDetails: {},\n            editUserDetails: {},\n            showAdminSendMessage: {},\n            showAdminImport: {},\n            message: {},\n            inboxMessage: {},\n            submenu: 'chiplists',\n            preCheck: {},\n            raceCheck: {},\n            dogJournals: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n        this.parseInputTimer = null;\n    }\n\n    toggleDisplayDetails = (e) => {\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { editUserDetails } = appState;\n\t\tif (!editUserDetails[id]) {\n\t\t\tappState.toggleDisplayDetails(id)\n\t\t}\n\t}\n\n    adminToggleEditUser = async (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState, raceStore, adminStore } = this.props.stores;\n        const { editUserDetails } = appState;\n\n        if (!editUserDetails[id]) {\n            const musher = raceStore.getMusherById(id);\n            await adminStore.getUserByEmail(musher.email);\n            // console.log({ musher, user, teams });\n        }\n\t\tappState.toggleEditUserDetails(id)\n\t}\n\n    veterinaryToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleVeterinaryUserDetails(id, true)\n\t}\n\n    toggleAdminSendMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendMessage } = this.state;\n\t\tshowAdminSendMessage[classId] = !showAdminSendMessage[classId];\n\t\tthis.setState({ showAdminSendMessage });\n\t}\n\n    toggleAdminSendInboxMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendInboxMessage = {} } = this.state;\n\t\tshowAdminSendInboxMessage[classId] = !showAdminSendInboxMessage[classId];\n\t\tthis.setState({ showAdminSendInboxMessage });\n\t}\n\n    toggleAdminImport = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminImport } = this.state;\n\t\tshowAdminImport[classId] = !showAdminImport[classId];\n\t\tthis.setState({ showAdminImport });\n\t}\n\n    adminSignupEdit = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n    adminSignupSetValue = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const { field, value, classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 5);\n    }\n\n\tsendEmail = async (e) => {\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst to = e.target.closest('button').dataset.to;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { message } = this.state;\n\t\tconst { subject, body } = message;\n\t\tconst emailResponse = await appState.sendEmail({\n\t\t\tto,\n\t\t\tsubject,\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ emailResponse });\n\t}\n\n\tresetEmail = () => {\n\t\tthis.setState({\n\t\t\temailResponse: null,\n\t\t\tmessage: {\n\t\t\t\tsubject: '',\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    sendInboxMessage = async (e) => {\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { inboxMessage } = this.state;\n\t\tconst { body } = inboxMessage;\n\t\tconst inboxMessageResponse = await raceStore.sendInboxMessage({\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ inboxMessageResponse });\n\t}\n\n    resetInboxMessage = () => {\n\t\tthis.setState({\n\t\t\tinboxMessage: {\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    signupToRace = async ({ signup }) => {\n\t\tconst { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\t// team: user.team,\n\t\t\t\t// firstname: user.firstname,\n\t\t\t\t// lastname: user.lastname,\n\t\t\t\t// sportsClub: user.sportsClub,\n\t\t\t\t// email: user.email,\n\t\t\t\t// cellphone: user.cellphone,\n\t\t\t\t// facebook: user.facebook,\n\t\t\t\t// instagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    parseInput = async (data, classId) => {\n        clearTimeout(this.parseInputTimer);\n        this.parseInputTimer = setTimeout(() => this.doParseInput(data, classId), 500);\n    }\n\n    doParseInput = async (data, classId) => {\n        const lines = String(data).split('\\n');\n        let headers = [];\n        const jsonData = [];\n\n        // Get headers\n        const firstLine = lines[0];\n        if (firstLine.match(/\\t/)) {\n            headers = firstLine.split('\\t');\n        } else if (firstLine.match(/;/)) {\n            headers = firstLine.split(';');\n        } else {\n            headers = firstLine.split(',');\n        }\n\n        // Map data to headernames\n        for (let i = 1, l = lines.length; i < l; i += 1) {\n            const line = lines[i];\n            let values;\n            if (line.match(/\\t/)) {\n                values = line.split('\\t');\n            } else if (line.match(/;/)) {\n                values = line.split(';');\n            } else {\n                values = line.split(',');\n            }\n            const jsonObject = {};\n            values.forEach((v, idx) => {\n                let val = v;\n                if (headers[idx] === 'email') {\n                    val = v.toLowerCase();\n                }\n                jsonObject[headers[idx]] = val;\n            });\n            jsonData.push(jsonObject);\n        }\n\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        raceStore.addMultipleContestants({ id: raceid, classId, contestants: jsonData });\n        return true;\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n\t}\n\n    clearSearchForBib = () => {\n        this.setState({ searchForBib: '' });\n    }\n\n    savePreCheck = async (e) => {\n        const { id, chipid, name, shortname, team } = e.target.closest('button').dataset;\n        const { preCheck, dogJournals } = this.state;\n        const { dogJournalStore, userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\n        const vetData = {\n            id: user.id,\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email,\n            image: user.image,\n        };\n\n        const dogData = {\n            id,\n            chipId: chipid,\n            name,\n            shortname,\n            team,\n        };\n\n        const preCheckOject = util.getNestedValue(preCheck, id) || {};\n        const journalData = {\n            checkType: 'preCheck',\n            ...preCheckOject,\n        };\n\n        const data = [{\n            dog: { ...dogData },\n            journal: { ...journalData },\n            veterinary: { ...vetData },\n        }];\n\n        if (!dogJournals[chipid]){\n            dogJournals[chipid] = [];\n        }\n        dogJournals[chipid].push({\n            date: new Date(),\n            ...dogData,\n            ...journalData,\n            ...vetData,\n        });\n\n        await dogJournalStore.insert({ data });\n        delete preCheck[id];\n        this.setState({ preCheck });\n    }\n\n    render() {\n        const {\n            showAdminSendMessage = {}, showAdminSendInboxMessage = {}, showAdminImport = {},\n            message = {}, inboxMessage = {},\n            inboxMessageResponse, emailResponse, submenu, searchForBib,\n            preCheck = {},\n            raceCheck = {},\n            dogJournals = {},\n        } = this.state;\n\t\tconst { userStore, raceStore, appState, adminStore } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, isVeterinary } = userStore;\n        const { language = 'en' } = user;\n        const { displayDetails, editUserDetails, veterinaryUserDetails, selectedClassIds = [] } = appState;\n\n\t\tconst { race = {} } = this.props;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const filterByBib = (c) => {\n\t\t\tif (searchForBib) {\n                const regex = new RegExp(`${searchForBib.replace(/[^a-zA-Z 0-9æøåÆØÅ]/, '')}`, 'i');\n\t\t\t\treturn (regex.test(c.bib) || regex.test(c.firstname) || regex.test(c.lastname));\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { user: selectedUser = {}, teams: selectedUserTeams } = adminStore;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.mushers'>Deltakere</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\n                    <div class='w-100 overflow-hidden'>\n                        <div\n                            class='d-flex flex-row flex-nowrap pb-2 px-1'\n                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                        >\n                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === race.classes.length - 1 && 'rounded-pill-right'} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.filterByClass}\n                                        data-id={currentClass.id}\n                                    >\n                                        {currentClass.title}\n                                    </button>\n                                </div>\n                            </>)}\n                        </div>\n                    </div>\n\n                    <div class='row mb-3'>\n                        <div class='col-6 offset-3'>\n                            <div class='input-group'>\n                                <input class='form-control form-control-lg' type='text' placeholder='Search for bib' value={searchForBib} onInput={linkstate(this, 'searchForBib')} />\n                                {searchForBib && <div class='input-group-append'>\n                                    <div class='input-group-text' onClick={this.clearSearchForBib}>x</div>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    {race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                        {isAdmin && <span class='float-right'>\n                            Total app users: {currentClass.contestants && currentClass.contestants.filter(musher => (musher.user || musher.team)).length}\n                        </span>}\n                        <h5>{currentClass.title} {currentClass.startDate && <>\n                            : <span class='font-weight-lighter'>\n                                {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </span>\n                        </>}</h5>\n\n                        {isAdmin && <>\n                            <a class='mx-2' href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a> -\n                            <a class='mx-2' href={`/tv/top5/${race.id}/${currentClass.id}`}>TV Top 5</a> -\n                            <a class='mx-2' href={`/tv/top3/${race.id}/${currentClass.id}`}>TV Top 3</a> -\n\n                            <a class='mx-2' href={`/tv/top10progress/${race.id}/${currentClass.id}`}>TV Top Progress 10</a> -\n                            <a class='mx-2' href={`/tv/top5progress/${race.id}/${currentClass.id}`}>TV Top Progress 5</a> -\n                            <a class='mx-2' href={`/tv/top3progress/${race.id}/${currentClass.id}`}>TV Top Progress 3</a> -\n\n                            <a class='mx-2' href={`/tv/team/${race.id}/1`}>TV One team</a> -\n                            <a class='mx-2' href={`/tv/tracking/${race.id}/${currentClass.id}`}>TV tracking</a> -\n                            <a class='mx-2' href={`/tv/freetext`}>TV free text</a> -\n\n                            <a class='mx-2' href={`/embed/top10/${race.id}/${currentClass.id}`}>Embed top10</a> -\n                            <a class='mx-2' href={`/embed/tracking/${race.id}/${currentClass.id}`}>Embed tracking</a> -\n                            <a class='mx-2' href={`/embed/chiplist/${race.id}/${currentClass.id}`}>Embed chiplist</a> -\n                            <a class='mx-2' href={`/embed/agreement/${race.id}/${currentClass.id}`}>Embed agreement</a> -\n                        </>}\n\n                        <div class='table-responsive'>\n                            <table class='table table-sm table-striped'>\n                                <thead>\n                                    <tr>\n                                        <th scope='col'>#</th>\n                                        <th scope='col' style='min-width: 90%;'><Text id='races.name'>Navn</Text></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {currentClass.contestants && currentClass.contestants.filter(filterByBib).sort(byBib).map((musher, idx) => {\n                                        const currentTeam = raceStore.getTeamById(musher.team);\n                                        const hasVaccines = raceStore.hasVaccines(currentTeam);\n                                        const hasMandatoryCheck = musher.mandatoryCheck;\n\n                                        return (<>\n                                            <tr onClick={this.toggleDisplayDetails} data-id={musher.id}>\n                                                <th scope='row'>\n                                                    {musher.bib ? <>\n                                                        {musher.bib}\n                                                    </> : <>\n                                                        <span class='font-weight-lighter text-muted'>{idx + 1}</span>\n                                                    </>}\n                                                </th>\n                                                <td\n                                                    class={`${displayDetails[musher.id] ? 'font-weight-bold' : ''}`}\n                                                    style={`${displayDetails[musher.id] || veterinaryUserDetails[musher.id] ? '' : 'line-height: 0.8em;'}`}\n                                                >\n                                                    {isVeterinary && <>\n                                                        {musher.team ? <>\n                                                            <button class='btn btn-primary btn-sm float-right ml-4' onClick={this.veterinaryToggleEditUser}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-4 disabled' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </>}\n                                                        {hasVaccines ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </>}\n                                                        {hasMandatoryCheck ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </>}\n                                                    </>}\n                                                    {isAdmin && <>\n                                                        <button class='btn btn-outline-warning btn-sm float-right ml-1' onClick={this.adminToggleEditUser}>\n                                                            <i class='fas fa-user-edit' />\n                                                        </button>\n                                                        {musher.paidSignupfee && <>\n                                                            <span class='float-right'>\n                                                                <i class='fas fa-check text-success' /><br />\n                                                            </span>\n                                                        </>}\n                                                        <small class='float-right'>\n                                                            {musher.raceStatus && <><span class='text-muted'>raceStatus:</span><br /> {musher.raceStatus}<br /></>}\n                                                            {musher.raceComment && <><span class='text-muted'>raceComment:</span><br /> {musher.raceComment}<br /></>}\n                                                            {musher.gpxResultsApproved && <><span class='text-muted'>gpxResultsApproved:</span><br /> {musher.gpxResultsApproved}<br /></>}\n                                                        </small>\n                                                    </>}\n                                                    {(isAdmin || isVeterinary) && race.liveRace > 0 && race.declaration && <>\n                                                        <span class='float-right text-success mr-2' style='font-size: 1.2em;'>\n                                                            {(musher.user || musher.team) && <i class='fas fa-mobile-alt ml-2' />}\n                                                            {musher.declaration && <i class='fas fa-handshake ml-2' alt={util.isoDate(musher.declarationDate)} />}\n\n                                                        </span>\n                                                    </>}\n                                                    {displayDetails[musher.id] ? <>\n                                                        {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                        {musher.firstname ? <>\n                                                            {musher.firstname} {musher.lastname}<br />\n                                                        </> : <>\n                                                            {musher.name}\n                                                        </>}\n                                                        <span class='text-muted'>{currentTeam.name}</span><br />\n                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                        {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}<br />\n\n                                                        {isAdmin && <>\n                                                            {musher.bib && <><i class='fas fa-tshirt ml-2' /> {musher.bib}</>}\n                                                            {musher.startTime && <><i class='fas fa-clock ml-2' /> {util.isoDate(musher.startTime)}</>}\n                                                        </>}\n\n                                                        {musher.price1 && <div class='font-weight-lighter'>\n                                                            <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </div>}\n                                                        {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                        {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                    </> : <>\n                                                        {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                            <i class='fas fa-trophy' />\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </span>}\n                                                        <nobr>\n                                                            {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                            {musher.firstname ? <>\n                                                                {musher.firstname} {musher.lastname}<br />\n                                                            </> : <>\n                                                                {musher.name}\n                                                            </>}\n                                                            <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        </nobr>\n                                                    </>}\n\n\n                                                    {/* <xmp>{JSON.stringify(currentTeam, null, 4)}</xmp> */}\n                                                    {isVeterinary && veterinaryUserDetails[musher.id] && <>\n                                                        <ScrollIntoView horizontal={'end'} vertical={'center'} />\n                                                        <div class='w-100 overflow-hidden' style='max-width: 100%;'>\n                                                            <div\n                                                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                            >\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-left rounded-none ${submenu === 'chiplists' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='chiplists'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-user-md' /> <Text id='racevet.chiplists'>Vaccines</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-none ${submenu === 'precheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='precheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-stethoscope' /> <Text id='racevet.precheck'>PreCheck</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-right rounded-none ${submenu === 'racecheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='racecheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-flag-checkered' /> <Text id='racevet.racecheck'>RaceCheck</Text></button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        {submenu === 'chiplists' && <>\n                                                            <h5 class='mt-4 border-bottom'>Chiplist & Vaccines</h5>\n                                                            <div class='container-fluid'>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogVaccines;\n                                                                    if (currentTeam && currentTeam.vaccines) {\n                                                                        dogVaccines = currentTeam.vaccines.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                                                                                </div>\n                                                                            {/* <xmp>{JSON.stringify(dogVaccines, null, 4)}</xmp> */}\n                                                                                {dogVaccines && dogVaccines.map((vac) => {\n                                                                                    return (\n                                                                                        <div class='col-4 px-1 overflow-hidden'>\n                                                                                            <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'}`}>\n                                                                                                <span class='font-weight-lighter'>\n                                                                                                    <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                                                                                    {vac.inKarens && <>\n                                                                                                        <br />\n                                                                                                        (<Text id='dogs.vaccine-karens'>karens</Text>: {util.format(vac.karensDaysLeft, 0)} <Text id='dogs.vaccine-karens-days-left'>days left</Text>)\n                                                                                                    </>}\n                                                                                                </span>\n                                                                                            </span>\n\n                                                                                            <div class='text-overflow'>\n                                                                                                <small class='font-weight-light'>\n                                                                                                    {vac.vaccineAgens.name}<br />\n                                                                                                    <nobr>{vac.vaccineName}</nobr><br />\n                                                                                                    {/* {util.isoDate(vac.date, false, false, true)}<br /> */}\n                                                                                                    {/* <span class='font-weight-lighter'>\n                                                                                                        <Text id='dogs.vaccine-veterinary'>Veterinær</Text>:\n                                                                                                    </span> {vac.veterinaryFirstname} {vac.veterinaryLastname} &lt;{vac.veterinaryEmail}&gt;<br /> */}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    );\n                                                                                })}\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'precheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Precheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogJournal;\n                                                                    if (currentTeam && currentTeam.journal) {\n                                                                        dogJournal = currentTeam.journal.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-12'>\n                                                                                    {dogJournal && dogJournal.length > 0 && dogJournal.map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                    {dogJournals[dog.chipId] && dogJournals[dog.chipId].length > 0 && dogJournals[dog.chipId].map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='diagnoseId'>Diagnostic</label>\n                                                                                        <select class=\"form-control\" id=\"diagnoseId\" onInput={linkstate(this, `preCheck.${dog.id}.diagnoseId`)} value={util.getNestedValue(preCheck, `${dog.id}.diagnoseId`)}>\n                                                                                            <option value=''>-- Please choose --</option>\n                                                                                            <option value='100'>No findings</option>\n                                                                                        </select>\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' onInput={linkstate(this, `preCheck.${dog.id}.weight`)} value={util.getNestedValue(preCheck, `${dog.id}.weight`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='heartRate'>Heart Rate</label>\n                                                                                        <input type='text' class='form-control' id='heartRate' onInput={linkstate(this, `preCheck.${dog.id}.heartRate`)} value={util.getNestedValue(preCheck, `${dog.id}.heartRate`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='bodyConditionScore'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bodyConditionScore' onInput={linkstate(this, `preCheck.${dog.id}.bodyConditionScore`)} value={util.getNestedValue(preCheck, `${dog.id}.bodyConditionScore`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='generalFindings'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='generalFindings' onInput={linkstate(this, `preCheck.${dog.id}.generalFindings`)} value={util.getNestedValue(preCheck, `${dog.id}.generalFindings`)} />\n                                                                                    </small>\n                                                                                    <small id='generalFindingsHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <button\n                                                                                        class='btn btn-outline-success'\n                                                                                        onClick={this.savePreCheck}\n                                                                                        data-id={dog.id}\n                                                                                        data-chipid={dog.chipId}\n                                                                                        data-team={currentTeam.id}\n                                                                                        data-name={dog.name}\n                                                                                        data-shortname={dog.shortName}\n                                                                                    > Save Pre Check</button>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'racecheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Racecheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='hrHeartLungs'>HR/Heart/Lungs</label>\n                                                                                        <input type='text' class='form-control' id='hrHeartLungs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='bcs'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bcs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='general'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='general' />\n                                                                                    </small>\n                                                                                    <small id='generalHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n                                                    </>}\n\n                                                    {(isAdmin && editUserDetails[musher.id]) && <>\n                                                        <h5>Admin edit:</h5>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label class='col-4 col-form-label text-right'>Email</label>\n                                                            <div class='col-8'>\n                                                                {musher.email}\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='bib' class='col-4 col-form-label text-right'>bib</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='bib'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.bib}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startTime' class='col-4 col-form-label text-right'>startTime</label>\n                                                            <div class='col-8'>\n                                                                <input type='datetime-local' class='form-control' id='startTime'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startTime ? util.isoDate(musher.startTime, false, false, false) : util.isoDate(currentClass.startDate, false, false, false)}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>team</label>\n                                                            <div class='col-8'>\n                                                                {selectedUserTeams ? <>\n                                                                    <select class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    >\n                                                                        <option value=''>-- Choose race team --</option>\n                                                                        {selectedUserTeams && selectedUserTeams.map(t => <>\n                                                                            <option value={t.id}>{t.name} {t.dogs ? `(${t.dogs.length})` : ''}</option>\n                                                                        </>)}\n                                                                    </select>\n                                                                </> : <>                                                                \n                                                                    <input type='number' class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    />\n                                                                </>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='user' class='col-4 col-form-label text-right'>user</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='user'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.user}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Race status</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='raceStatus'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceStatus}\n                                                                >\n                                                                    <option value=''>-- Choose race status --</option>\n                                                                    <option value='OK'>OK - Everything ok</option>\n                                                                    <option value='DNS'>DNS - Did Not Start</option>\n                                                                    <option value='DNF'>DNF - Did Not Finish</option>\n                                                                    <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                    <option value='DQ'>DQ - Disqualified</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='raceComment' class='col-4 col-form-label text-right'>Race comment</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='raceComment'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceComment}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='gpxResultsApproved' class='col-4 col-form-label text-right'>GPX Results approved (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='gpxResultsApproved'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='paidSignupfee' class='col-4 col-form-label text-right'>paidSignupfee (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='paidSignupfee'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.paidSignupfee ? util.isoDate(musher.paidSignupfee, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startOrder' class='col-4 col-form-label text-right'>startOrder</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='startOrder'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startOrder}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='cellphone' class='col-4 col-form-label text-right'>Mobil</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='cellphone'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.cellphone}\n                                                                />\n                                                                {selectedUser && selectedUser.cellphone && <small id='cellphoneHelp' class='form-text text-muted'\n                                                                    data-field='cellphone'\n                                                                    data-value={selectedUser.cellphone}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.cellphone || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='name' class='col-4 col-form-label text-right'>Navn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='name'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.name}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='firstname' class='col-4 col-form-label text-right'>Fornavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='firstname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.firstname}\n                                                                />\n                                                                {selectedUser && selectedUser.firstname && <small id='firstnameHelp' class='form-text text-muted'\n                                                                    data-field='firstname'\n                                                                    data-value={selectedUser.firstname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.firstname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='lastname' class='col-4 col-form-label text-right'>Etternavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='lastname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.lastname}\n                                                                />\n                                                                {selectedUser && selectedUser.lastname && <small id='lastnameHelp' class='form-text text-muted'\n                                                                    data-field='lastname'\n                                                                    data-value={selectedUser.lastname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.lastname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='address' class='col-4 col-form-label text-right'>Adresse</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='address'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.address}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalcode' class='col-4 col-form-label text-right'>Postalcode</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalcode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalcode}\n                                                                />\n                                                                {selectedUser && selectedUser.postalcode && <small id='postalcodeHelp' class='form-text text-muted'\n                                                                    data-field='postalcode'\n                                                                    data-value={selectedUser.postalcode}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalcode || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalplace' class='col-4 col-form-label text-right'>Postalplace</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalplace'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalplace}\n                                                                />\n                                                                {selectedUser && selectedUser.postalplace && <small id='postalplaceHelp' class='form-text text-muted'\n                                                                    data-field='postalplace'\n                                                                    data-value={selectedUser.postalplace}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalplace || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='flag' class='col-4 col-form-label text-right'>flag (emoji)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='flag'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.flag}\n                                                                />\n                                                                {selectedUser && selectedUser.flag && <small id='flagHelp' class='form-text text-muted'\n                                                                    data-field='flag'\n                                                                    data-value={selectedUser.flag}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.flag || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='countryCode' class='col-4 col-form-label text-right'>countryCode (iso)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='countryCode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.countryCode}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='birthdate' class='col-4 col-form-label text-right'>birthdate</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='birthdate'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.birthdate ? util.isoDate(musher.birthdate, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='sportsClub' class='col-4 col-form-label text-right'>Klubb</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='sportsClub'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.sportsClub}\n                                                                />\n                                                                {selectedUser && selectedUser.sportsClub && <small id='sportsClubHelp' class='form-text text-muted'\n                                                                    data-field='sportsClub'\n                                                                    data-value={selectedUser.sportsClub}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.sportsClub || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='status' class='col-4 col-form-label text-right'>Status</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='status'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.status}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='facebook' class='col-4 col-form-label text-right'>Facebook</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='facebook'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.facebook}\n                                                                />\n                                                                {selectedUser && selectedUser.facebook && <small id='facebookHelp' class='form-text text-muted'\n                                                                    data-field='facebook'\n                                                                    data-value={selectedUser.facebook}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.facebook || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='instagram' class='col-4 col-form-label text-right'>Instagram</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='instagram'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.instagram}\n                                                                />\n                                                                {selectedUser && selectedUser.instagram && <small id='instagramHelp' class='form-text text-muted'\n                                                                    data-field='instagram'\n                                                                    data-value={selectedUser.instagram}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.instagram || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        {/* <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Team</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='team' aria-describedby='teamHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.team}\n                                                                >\n                                                                    <option value=''>-- Velg team --</option>\n                                                                    {teams.map(team =>\n                                                                        <option value={team.id}>{team.name}</option>\n                                                                    )}\n                                                                </select>\n                                                            </div>\n                                                        </div> */}\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Klasse</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='class' aria-describedby='classHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.class}\n                                                                >\n                                                                    <option value=''>-- Choose race class --</option>\n                                                                    {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                                                    </>)}\n                                                                </select>\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price1' class='col-4 col-form-label text-right'>Price 1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price1}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price2' class='col-4 col-form-label text-right'>Price 2</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price2'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price2}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price3' class='col-4 col-form-label text-right'>Price 3</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price3'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price3}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='priceSent' class='col-4 col-form-label text-right'>Price sent</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='priceSent'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='topImage1' class='col-4 col-form-label text-right'>topImage1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='topImage1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.topImage1}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='image1' class='col-4 col-form-label text-right'>image1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='image1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.image1}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-5'>\n                                                            <div class='col-8'>\n                                                                <button type='button' class='btn btn-danger float-right'\n                                                                    id='deleteUser'\n                                                                    value='1'\n                                                                    onClick={this.adminSignupEdit}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                >\n                                                                    Delete user from this class\n                                                                </button>\n                                                            </div>\n                                                        </div>\n\n                                                    </>}\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n\n                        {isAdmin && <>\n                            {showAdminSendMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Email to all mushers in {currentClass.title}</h5>\n                                            <div class='overflow-auto p-5' style='max-height: 30vh;'>\n                                                <small>\n                                                    {currentClass.emails && currentClass.emails.map((email) => <div class='border rounded-lg p-3 mb-3'>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Date:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {util.formatDate(email.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                To:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.to.map(e => <span class='badge badge-info px-2 py-1 mr-2'>{e}</span>)}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Subject:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.subject}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row mt-2'>\n                                                            <div class='col-3 text-right'>\n                                                                Body:\n                                                            </div>\n                                                            <div class='col-9'\n                                                                dangerouslySetInnerHTML={{ __html: nl2br(email.body) }}\n                                                            />\n                                                        </div>\n                                                    </div>)}\n                                                </small>\n                                            </div>\n\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>To</label>\n                                                <div class='col-10'>\n                                                    {currentClass.contestants && currentClass.contestants.map((musher) => <>\n                                                        <span class='badge badge-info px-2 py-1 mr-2'>{musher.firstname} {musher.lastname} ({musher.email})</span>\n                                                    </>)}\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>Subject</label>\n                                                <div class='col-10'>\n                                                    <input type='text' class='form-control' id='subject'\n                                                        onInput={linkstate(this, 'message.subject')}\n                                                        value={message.subject}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'message.body')}\n                                                        value={message.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {message.body && <Markdown markdown={message.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            {emailResponse && <>\n                                                <div class={`alert alert-${emailResponse && emailResponse.status >= 300 ? 'danger' : 'success'}`} role='alert'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(emailResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                            <button class='btn btn-success float-right'\n                                                type='button'\n                                                data-to={currentClass.contestants && currentClass.contestants.map(musher => musher.email)}\n                                                data-raceclassid={currentClass.id}\n                                                onClick={this.sendEmail}\n                                            >\n                                                <i class='fas fa-paper-plane' /> Send email to all mushers\n                                            </button>\n                                            <button class='btn btn-danger float-right mr-2'\n                                                type='button'\n                                                onClick={this.resetEmail}\n                                            >\n                                                <i class='fas fa-times' /> Reset email\n                                            </button>\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Hide email form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Send email to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Send inbox message to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminImport} data-class={currentClass.id}>Toggle import form</button>\n                                </div>\n                            </>}\n\n                            {showAdminSendInboxMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Inbox Message to all mushers in {currentClass.title}</h5>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Inbox message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'inboxMessage.body')}\n                                                        value={inboxMessage.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {inboxMessage.body && <Markdown markdown={inboxMessage.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            <div class='clearfix'>\n                                                <button class='btn btn-success float-right'\n                                                    type='button'\n                                                    data-raceclassid={currentClass.id}\n                                                    onClick={this.sendInboxMessage}\n                                                >\n                                                    <i class='fas fa-paper-plane' /> Send inbox message to all mushers\n                                                </button>\n                                                <button class='btn btn-danger float-right mr-2'\n                                                    type='button'\n                                                    onClick={this.resetInboxMessage}\n                                                >\n                                                    <i class='fas fa-times' /> Reset inbox message\n                                                </button>\n                                            </div>\n\n                                            {inboxMessageResponse && <>\n                                                <div class={`alert alert-${inboxMessageResponse && inboxMessageResponse.status >= 300 ? 'danger' : 'success'}`} role='alert' style='max-height: 20vh;'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(inboxMessageResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Hide inboxmessage form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n\n                            </>}\n\n                            {isAdmin && showAdminImport[currentClass.id] && <>\n                                <div class='form-group'>\n                                    <label for='importUsers'><Text id='races.paste-users'>Paste your user data here to import users</Text>:</label>\n                                    <textarea\n                                        class='form-control'\n                                        id='importUsers'\n                                        rows='20'\n                                        oninput={e => this.parseInput(e.target.value, currentClass.id)}\n                                    />\n                                </div>\n                            </>}\n\n                        </>}\n                    </>)}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailMushers;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport RaceComments from '../public/race/comments';\nimport RaceAddComment from '../public/race/commentAdd';\nimport RaceText from '../public/race/raceText';\nimport Images from '../../components/form/images';\nimport LikesAndComments from '../../components/feedback/likesAndComments';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nimport RaceResults from './results';\nimport RaceNews from './news';\nimport RaceSignup from './signup';\nimport RaceClasses from './classes';\nimport RaceMushers from './mushers';\nimport RaceUserImages from './userImages';\nimport RaceTracking from './tracking';\nimport RaceNotifications from './notifications';\n\nimport Ad from '../../components/ad/';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n    showAdminSendMessage: {},\n\tnewRaceArticle: {},\n\tnewRaceUserImage: {},\n\tmessage: {\n\t\tsubject: '',\n\t\tbody: '',\n\t},\n};\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAdminSendMessage: {},\n            newRaceArticle: {},\n            newRaceUserImage: {},\n            message: {\n                subject: '',\n                body: '',\n            },\n            submenu: props.submenu || 'about',\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\tasync loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore, userStore } = props.stores;\n\t\tconst { user = {} } = userStore;\n\t\tconst { raceid } = props;\n\t\tawait raceStore.load(raceid);\n\t\tthis.setState({ isLoading: false });\n\n\t\tlet signup = {};\n\t\tconst { race } = raceStore;\n\t\tif (race.classes && user && user.email) {\n\t\t\tfor (let i = 0, l = race.classes.length; i < l; i += 1) {\n\t\t\t\tconst currentClass = race.classes[i];\n\t\t\t\tif (currentClass.contestants) {\n\t\t\t\t\tconst idx = currentClass.contestants.findIndex(e => e.email === user.email);\n\t\t\t\t\tif (idx > -1) {\n\t\t\t\t\t\tsignup = { ...currentClass.contestants[idx], class: currentClass.id };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\traceStore.updateKeyValue('signup', signup);\n        if (signup.user) {\n            await userStore.getDogs({ id: signup.user });\n        }\n\n\t\tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n            return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t\t}).flat();\n\t\tif (allTeamIds.length > 0 && raceid) {\n\t\t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t\t}\n\t\traceStore.getAllClassesSortedBy();\n\n\t\tawait raceStore.loadPublicInteractions(raceid);\n\t}\n\n    likeRace = async () => {\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst { race } = raceStore;\n\t\tconst response = await raceStore.likeRace({ id: race.id });\n\n        if (response && response.status === 200) {\n\t\t\t// this.loadRaceDetail({ race });\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst raceId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[raceId]) {\n\t\t\t\tthis.inputRef[raceId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n        const { raceid } = this.props;\n        route(`/app-races/${raceid}/${submenu}`);\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n\tresizeAllTextareas = () => {\n\t\tconst textareaList = document.getElementsByTagName('textarea');\n\t\tfor(let i = 0, l = textareaList.length; i < l; i += 1){\n\t\t\tconst textarea = textareaList[i];\n\t\t\tthis.resizeTextarea(textarea);\n\t\t}\n\t}\n\n    addNavigation = (props) => {\n        // console.log({ props });\n        this.setState({ submenu: props.submenu });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n        this.resizeAllTextareas();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.raceid !== this.props.raceid) {\n            this.loadRace(nextProps);\n        }\n        // console.log('componentWillReceiveProps', nextProps.submenu, this.props.submenu);\n        if (nextProps.submenu !== this.props.submenu) {\n            this.addNavigation(nextProps);\n        }\n\t}\n\n    back = () => {\n        route(`/`);\n    }\n\n\trender() {\n        const { submenu } = this.state;\n        const { showAdminSendMessage, message, emailResponse } = this.state;\n        const { showAddComment, newRaceArticle, newRaceUserImage } = this.state;\n\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, isVeterinary } = userStore;\n\n        const { language = 'en' } = user;\n\n\t\tconst { raceid, subsection } = this.props;\n\t\tconst { race, signup, zoomToMarkers } = raceStore;\n        const { darkmode, displayDetails, editUserDetails } = appState;\n\n\t\tconst { likes = [], comments = [] } = race;\n\t\tconst hasLikedRace = race.likes && race.likes.findIndex(e => e.user === user.id) > -1;\n\n        const today = new Date();\n        let status = '';\n        if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n            status = 'race';\n        } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n            status = 'signup';\n        }\n        const isLiveRace = race.liveRace === 1;\n        const showSignup = isLiveRace ? !!signup.email : true;\n\n        if (submenu === 'tracking') {\n            return (\n                <RaceTracking stores={this.props.stores} raceid={raceid} />\n            );\n        }\n        if (submenu === 'results') {\n            return (\n                <RaceResults stores={this.props.stores} raceid={raceid} />\n            );\n        }\n        \n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='row m-0'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-1 mb-2 p-0'>\n                        <div class='row d-flex align-items-center position-relative'>\n                            <h3 class='position-absolute' style='top: 3px; right: 5px;'>\n                                {status === 'signup' && !isLiveRace && <>\n                                    <span\n                                        class='badge badge-primary badge-lg border border-white ml-2'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <Text id='races.signup-open'>Påmelding åpen</Text>\n                                    </span>\n                                </>}\n                                {status === 'race' && <>\n                                    <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                </>}\n                                {status === 'done' && <>\n                                    <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                </>}\n                            </h3>\n                            {(race.images && race.images[0]) ? <img src={race.images[0].s3LargeLink} class='img-fluid' /> : ''}\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        {isAdmin && <>\n                            <a class='btn btn-primary float-right' href={`https://homerunrace.no/index#/race/${race.id}/edit`}>Edit</a>\n                        </>}\n                        <h3>{race.title}</h3>\n                        <div>\n                            {race.startDate && <><Text id='races.periode'>Periode</Text>: {util.formatDate(race.startDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n                            {race.endDate && <> - {util.formatDate(race.endDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'about' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='about'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='race.about'>About</Text></button>\n                                        {submenu === 'about' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    {showSignup && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'signup' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='signup'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-user-edit' /> <Text id='race.signup'>Sign up</Text></button>\n                                        {submenu === 'signup' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {!race.resultsHide && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'results' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='results'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-ol' /> <Text id='race.results'>Results</Text></button>\n                                        {submenu === 'results' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {showTracking && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'tracking' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='tracking'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='race.tracking'>Tracking</Text></button>\n                                        {submenu === 'tracking' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {(isAdmin || isVeterinary) && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'mushers' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='mushers'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-users' /> <Text id='races.mushers'>Mushers</Text></button>\n                                        {submenu === 'mushers' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.rules && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'rules' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='rules'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-gavel' /> <Text id='race.rules'>Rules</Text></button>\n                                        {submenu === 'rules' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.veterinaryInfo && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'veterinary' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='veterinary'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-stethoscope' /> <Text id='race.veterinary'>Veterinary info</Text></button>\n                                        {submenu === 'veterinary' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.checkpoints && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'checkpoints' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='checkpoints'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='race.checkpoints'>Checkpoints</Text></button>\n                                        {submenu === 'checkpoints' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.trailDescription && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'track' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='track'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-signs' /> <Text id='race.track-description'>Track description</Text></button>\n                                        {submenu === 'track' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.program && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'program' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='program'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-alt' /> <Text id='race.program'>Program</Text></button>\n                                        {submenu === 'program' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.prices && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'prices' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='prices'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-award' /> <Text id='race.prices'>Premier</Text></button>\n                                        {submenu === 'prices' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {!isLiveRace && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'classes' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='classes'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-folder-open' /> <Text id='race.classes'>Classes</Text></button>\n                                        {submenu === 'classes' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'news' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='news'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-rss' /> <Text id='race.news'>News</Text></button>\n                                        {submenu === 'news' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'userImages' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='userImages'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-images' /> <Text id='race.user-images'>User images</Text></button>\n                                        {submenu === 'userImages' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12'>\n                        <Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n                    </div>\n                </div>\n\n                {submenu === 'about' && <>\n                    <RaceNotifications stores={this.props.stores} race={race} />\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.about'>Om løpet</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <p class='clearfix'>\n                                <strong>\n                                    <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </strong>\n                            </p>\n\n                            {status === 'signup' && <>\n                                {isLiveRace ? <>                                \n                                    <button\n                                        class='btn btn-block btn-success mb-3'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <i class='fas fa-user-edit' /> {race.declaration && <><Text id='race.declaration'>Declaration</Text> &</>} <Text id='race.chiplist'>Chiplist</Text>\n                                    </button>\n                                </> : <>                                \n                                    <button\n                                        class='btn btn-block btn-success mb-3'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <i class='fas fa-user-edit' /> <Text id='race.signup'>Sign up</Text>\n                                    </button>\n                                </>}\n                            </>}\n\n                            <Markdown markdown={mu.replaceImages(race.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            {race.tag && race.tag.split(',').map(tag => <>\n                                <span class='badge badge-pill badge-primary py-1 ml-2'>\n                                    <a class='text-white' href={`https://www.facebook.com/hashtag/${tag}`} target='_blank' rel='noreferrer' native>\n                                        <i class='fab fa-facebook' /> #{tag}\n                                    </a>\n                                </span>\n                                <span class='badge badge-pill badge-primary py-1 ml-2'>\n                                    <a class='text-white' href={`https://www.instagram.com/explore/tags/${tag}`} target='_blank' rel='noreferrer' native>\n                                        <i class='fab fa-instagram' /> #{tag}\n                                    </a>\n                                </span>\n                            </>)}\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'results' && <>\n                    <RaceNotifications stores={this.props.stores} race={race} />\n                    <RaceResults stores={this.props.stores} raceid={raceid} />\n                </>}\n                {submenu === 'tracking' && <>\n                    <RaceTracking stores={this.props.stores} raceid={raceid} />\n                </>}\n                {submenu === 'news' && <>\n                    <RaceNews stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'userImages' && <>\n                    <RaceUserImages stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'rules' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.rules'>Regler</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.rules, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'veterinary' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.veterinary'>Veterinærinfo</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.veterinaryInfo, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'checkpoints' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.checkpoints'>Sjekkpunkter</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.checkpoints, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'track' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.track-description'>Løypebeskrivelse</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.trailDescription, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'program' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.program'>Program</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.program, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'prices' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.prices'>Premier</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.prices, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'mushers' && <>\n                    <RaceMushers stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'classes' && <>\n                    <RaceClasses stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'signup' && <>\n                    <RaceSignup stores={this.props.stores} race={race} />\n                </>}\n\n                {['about'].indexOf(submenu) > -1 && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <div class=''>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='race'\n                                    // onTeamClick={onTeamClick}\n                                    // onUserClick={onUserClick}\n                                />\n                            </div>\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            <div class='row'>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class={`btn btn-outline-${hasLikedRace ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedRace ? 'text-primary' : ''}`}\n                                        onClick={this.likeRace}\n                                        // disabled={hasLikedRace}\n                                    >\n                                        <i class={`${hasLikedRace ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedRace ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class='btn btn-outline-secondary btn-lg btn-block'\n                                        data-id={race.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Comment</Text>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            {showAddComment && user.email && <RaceAddComment\n                                stores={this.props.stores}\n                                race={race}\n                                // callback={this.loadRaceDetail}\n                                inputRef={c => this.inputRef[race.id] = c}\n                                inputRefObject={this.inputRef}\n                            />}\n                        </div>\n                        <div class='col-12 mt-2'>\n                            <RaceComments\n                                stores={this.props.stores}\n                                race={race}\n                                cols='12'\n                                // callback={this.loadRaceDetail}\n                            />\n                        </div>\n                    </div>\n                </>}\n            </div>\n\t\t);\n\t}\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailClasses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.classes'>Klasser</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                            <div class='col-12 col-sm-6 col-lg-4 mb-4'>\n                                <div class='border rounded rounded-lg p-3'>\n                                    <h5>{currentClass.title}</h5>\n\n                                    {isAdmin && <>\n                                        <a href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a><br />\n                                        <a href={`/tv/team/${race.id}/1`}>TV One team</a><br />\n                                    </>}\n\n                                    <small>\n                                        {currentClass.startDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.startdate'>Start</Text>:</span> {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                        {currentClass.endDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.enddate'>End</Text>:</span> {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                    </small>\n\n                                    <div><span class='font-weight-lighter'><Text id='race.distance'>Distanse</Text>:</span> {currentClass.distance} km</div>\n                                    <div><span class='font-weight-lighter'><Text id='race.signup'>Påmelding</Text>:</span> {currentClass.signupfee || race.signupfee} NOK</div>\n                                    <p class='clearfix'>\n                                        <Markdown markdown={mu.replaceImages(currentClass.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </p>\n                                    <small>\n                                        <Markdown markdown={mu.replaceImages(currentClass.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </small>\n                                    {currentClass.rules && <>\n                                        <h5><Text id='race.rules'>Regler</Text></h5>\n                                        <Markdown markdown={mu.replaceImages(currentClass.rules, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </>}\n                                </div>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailClasses;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport Drawer from '../../components/drawer/';\nimport Gauge from '../../components/gauge';\nimport DogScroller from '../../components/dog/scroller';\nimport HeaderCustom from '../../components/header/custom';\n\nimport RaceLiveResults from '../../components/races/liveResults';\nimport MusherInfoHeader from '../../components/races/musherInfoHeader';\nimport RaceLiveAddResult from '../../components/races/liveAddResult';\nimport RaceLiveMusherResult from '../../components/races/liveMusherResult';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n        const { reloadLastEpoch } = this.props;\n\t\tconst { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass AppRaceDetailResults extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDrawer: false,\n            timerRunning: true,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs, true);\n\n        // Set reload timer\n        // if (timerRunning) {\n        //     clearTimeout(this.updateTimer.reload);\n        //     this.updateTimer.reload = setTimeout(() => {\n        //         console.log('loadLiveRaceResults.reloading...');\n        //         const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n        //         this.setState({ reloadLastEpoch });\n        //         // this.loadRace(props);\n        //         this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n        //     }, RELOAD_INTERVAL_IN_SEC * 1000);\n        // }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n\tasync loadRace(props = this.props) {\n        const { loadTimes = 0 } = this.state;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore, appState } = props.stores;\n\t\tconst { raceid, classid, filterByBibs, historySteps } = props;\n        await raceStore.load(raceid);\n        raceStore.getAllClassesSortedBy();\n        \n        const { race } = raceStore;\n        const { focusOnMushers } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const allClassIds = race?.classes.map(e => e.id);\n        let selectedClassId = selectedClassIds[0];\n        if (allClassIds.indexOf(selectedClassId) === -1) {\n            selectedClassId = allClassIds[0];\n            appState.setSelectedClassId(selectedClassId);\n        }\n        if (classid) {\n            appState.toggleSelectedClassId(classid, true);\n        }\n\t\tconst allTeamIds = race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n            })\n            .flat();\n\n        const bibs = filterByBibs ? filterByBibs : race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n            })\n            .flat();\n\n        if (allTeamIds.length > 0) {\n            await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n        }\n\n        if (race.liveRace > 0) {\n            await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(async () => {\n            \tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n            \tthis.setState({ reloadLastEpoch });\n            \tthis.loadRace();\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        } else {\n            await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n        }\n\n        // if (allTeamIds.length > 0 && raceid) {\n        //     if (!race.liveRace) {\n        //         await raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n        //         raceStore.getWorkoutSummaryActiveTeams();\n        //     }\n        //     if (loadTimes === 0) {\n        //         await raceStore.loadTeams(allTeamIds.join(','));\n        //     }\n\t\t// }\n\n\t\t// // Set reload timer\n\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\tcontentIsNotLoaded: false,\n            loadTimes: loadTimes + 1,\n\t\t});\n\t}\n\n\ttoggleDisplayDetails = (e) => {\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleDisplayDetails(email)\n\t}\n\n\tadminToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleEditUserDetails(email)\n\t}\n\n\tadminSignupEdit = (e) => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n\tlockAllWorkoutsInRace = async () => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n\t\tconst lockMessage = await raceStore.lockAllWorkoutsInRace({ id: raceid });\n\t\tthis.setState({ lockMessage });\n\t}\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const {\n                showDrawerReplay,\n                historySteps,\n                filterByBibs,\n            } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n                selectedMusherBib: '',\n                showDrawerCheckpoint: false,\n                showDrawerMusher: false,\n                showDrawer: false,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\t// filterByClass = (e) => {\n\t// \tconst selectedClassId = e.target.closest('button').dataset.id;\n\t// \tconst { appState } = this.props.stores;\n\t// \tappState.toggleSelectedClassId(selectedClassId, true);\n    //     this.closeDrawerMusher();\n    //     this.closeDrawerCheckpoint();\n\t// }\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        // if (!showDrawer) {\n        //     // Stop reload when we are updating results.\n        //     clearTimeout(this.updateTimer.reload);\n        // } else {\n        //     this.loadRace();\n        // }\n        this.setState({\n            showDrawer: !showDrawer,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerMusher = (e) => {\n\t\tconst selectedMusherBib = e.target.closest('.musher').dataset.bib;\n        const { showDrawerMusher } = this.state;\n        this.selectMusher(selectedMusherBib);\n    }\n\n    selectMusher = (selectedMusherBib) => {\n        this.setState({\n            selectedMusherBib,\n            showDrawerMusher: true,\n            showDrawerCheckpoint: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerMusher = () => {\n        this.setState({\n            selectedMusherBib: '',\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerCheckpoint = (e) => {\n\t\tconst selectedCheckpointId = e.target.closest('.checkpoint').dataset.id;\n        const { showDrawerCheckpoint } = this.state;\n        this.selectCheckpoint(selectedCheckpointId)\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerCheckpoint = () => {\n        this.setState({\n            selectedCheckpointId: '',\n            showDrawerCheckpoint: false,\n        });\n    }\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage, showDrawer, reloadLastEpoch, selectedMusherBib, selectedCheckpointId, showDrawerCheckpoint, showDrawerMusher, loadTimes } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, currentEmail } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], checkpointId } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n\t\tconst filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const isLiveRace = race.liveRace === 1;\n        const raceAdmins = race && race.raceAdmins ? race.raceAdmins.split(',') : [];\n        const isRaceAdmin = isAdmin || raceAdmins.indexOf(currentEmail) > -1;\n        // const isRaceAdmin = raceAdmins.indexOf(currentEmail);\n\n        return (<>\n            <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`/app-races/${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        {/* <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span> */}\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            <a href={`/app-races/${race.id}/tracking`}>\n                                <i class='fas fa-map-marked' />\n                            </a>\n                        </span>\n                    </div>\n                    <div>\n                        <a href={`/app-races/${race.id}`}>\n                            <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                        </a>\n                    </div>\n                    {/* {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <> */}\n                        <div class='d-flex align-items-center'>\n                            {isRaceAdmin && <>\n                                <button class='btn btn-lg btn-block btn-success my-3' onClick={this.toggleDrawer}>\n                                    <i class='fas fa-clock' />\n                                </button>\n                            </>}\n                        </div>\n                    {/* </>} */}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>\n\n            {/* <div\n                class='container-fluid position-relative p-0 w-100 h-100'\n                style={`margin-top: ${MARGIN_TOP};`}\n            > */}\n            <div class='container-fluid position-relative p-0 overflow-auto bg-light' style={`margin-top: ${MARGIN_TOP}; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.results'>Results</Text></h2>\n                </div> */}\n                <div class='col-12'>\n                    <ReloadTimer stores={this.props.stores} reloadLastEpoch={reloadLastEpoch} />\n\n                    {isLiveRace ? <>\n\n                    </> : <>\n                        {user.email && <div class='alert alert-primary' role='alert'>\n                            {language === 'no' && <>\n                                Resultatene hentes direkte fra treningsøktene i QPaws appen.<br />\n                                <strong>For at treningsøktene skal bli registrert må øktene:</strong>\n                                <ul>\n                                    <li>Ha riktig dato som er innenfor løpsperioden.</li>\n                                    <li>Være markert som 'Konkurranse'.</li>\n                                    <li>Være registrert på teamet som er påmeldt.</li>\n                                </ul>\n                            </>}\n                            {language === 'en' && <>\n                                The results are imported directly from the workouts inside QPaws app.<br />\n                                <strong>To make sure your workouts are registered check the following:</strong>\n                                <ul>\n                                    <li>Use the correct date on your workout. Has to be inside the race period.</li>\n                                    <li>Mark the workout as 'Race'.</li>\n                                    <li>Workout has to be on the same team as you signed up with.</li>\n                                </ul>\n                            </>}\n                        </div>}\n                    </>}\n\n                    {race.resultsUrl && <div class='p-3 my-2 bg-light'>\n                        <a href={race.resultsUrl} target='_blank' rel='noreferrer' native>\n                            {race.resultsText ? race.resultsText : <><Text id='races.results-here'>Se resultater her</Text> </>} <i class='fas fa-chevron-circle-right' />\n                        </a>\n                    </div>}\n\n                    {(contentIsNotLoaded || !classes || classes.length === 0) && <div class='d-flex justify-content-center my-5 py-5'>\n                        <div class='spinner-border text-primary' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>}\n                </div>\n\n                <div class='col-12'>\n                    {race.classes && race.classes.filter(filterByClassId).map(currentClass => {\n                        return (<>\n                            <div class='mt-2 mb-5'>\n                                {race.resultDanger && <div class='alert alert-danger' role='alert'>\n                                    <div class='spinner-grow text-danger float-left' role='status'>\n                                        <span class='sr-only'>Loading...</span>\n                                    </div>\n                                    <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultDanger, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultWarning && <div class='alert alert-warning' role='alert'>\n                                    <i class='fas fa-exclamation float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultWarning, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultSuccess && <div class='alert alert-success' role='alert'>\n                                    <i class='fas fa-check float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultSuccess, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n\n                                {/* <h5>\n                                    {currentClass.title} {currentClass.startDate && <>\n                                        : <span class='font-weight-lighter'>\n                                            {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </span>\n                                    </>}\n                                </h5> */}\n\n\n                                {race.liveRace ? <>\n                                    {!showDrawer && <>\n                                        <RaceLiveResults\n                                            stores={this.props.stores}\n                                            race={race}\n                                            currentClass={currentClass}\n                                            reloadLastEpoch={reloadLastEpoch}\n                                            key={`raceclass-${currentClass.id}`}\n                                            onClickMusher={this.toggleDrawerMusher}\n                                            onClickCheckpoint={this.toggleDrawerCheckpoint}\n                                            selectedCheckpointId={selectedCheckpointId}\n                                        />\n                                    </>}\n                                </> : <>\n\n                                    <span class='float-right'>\n                                        <span class='text-muted'><Text id='races.mushers'>Mushers</Text>: {currentClass.totalMushers || 0}</span>\n                                        <span class='text-muted ml-4'><Text id='races.finished-mushers'>Finished mushers</Text>: {currentClass.totalFinished || 0} </span>\n                                    </span>\n\n                                    <div class='table-responsive-md'>\n                                        <table class='table table-sm table-striped'>\n                                            <thead>\n                                                <tr>\n                                                    <th scope='col'>#</th>\n                                                    <th scope='col' style='min-width: 200px;'><Text id='races.name'>Navn</Text></th>\n                                                    {isAdmin && <>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Cellphone</th>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Email</th>\n                                                    </>}\n                                                    {isAdmin && <th scope='col' class='d-none d-lg-table-cell' style='min-width: 400px;'><Text id='races.stages'>Etapper</Text></th>}\n                                                    <th scope='col'><Text id='races.result'>Resultat</Text></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.map((contestant, idx) => {\n                                                    const { musher, currentTeam, currentStages, currentResults, completed, duration,\n                                                        normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                                        flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                                        finishedDate, totalWorkoutTimeUsedSec,\n                                                    } = contestant;\n\n                                                    const totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n                                                    return (<>\n                                                        <tr onClick={this.toggleDisplayDetails} data-email={musher.email}>\n                                                            <th scope='row'>\n                                                                {idx + 1}\n                                                                {isAdmin && currentResults && <>\n                                                                    <br />{currentResults.isLocked ? <i class='fas fa-lock text-danger mr-2' /> : <i class='fas fa-lock-open text-success mr-2' />}\n                                                                </>}\n                                                            </th>\n                                                            <td\n                                                                class={`${displayDetails[musher.email] ? 'font-weight-bold' : ''}`}\n                                                                style={`${displayDetails[musher.email] ? '' : 'line-height: 0.8em;'}`}\n                                                            >\n                                                                {displayDetails[musher.email] ? <>\n                                                                    {musher.firstname} {musher.lastname}<br />\n                                                                    <span class='text-muted'>{currentTeam.name}</span><br />\n                                                                    <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                                    {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}\n                                                                    {musher.price1 && <div class='font-weight-lighter'>\n                                                                        <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </div>}\n                                                                    {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                                    {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                                </> : <>\n                                                                    {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                                        <i class='fas fa-trophy' />\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </span>}\n                                                                    <nobr>\n                                                                        {musher.firstname} {musher.lastname}<br />\n                                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    </nobr>\n                                                                </>}\n\n                                                            </td>\n\n                                                            {isAdmin && <>\n                                                                <td class='d-none d-lg-table-cell'>{musher.cellphone}</td>\n                                                                <td class='d-none d-lg-table-cell'>{musher.email}</td>\n                                                            </>}\n\n                                                            {isAdmin && <td class='d-none d-lg-table-cell'>\n                                                                {isAdmin && <>\n                                                                    <button class='btn btn-primary btn-sm float-right' onClick={this.adminToggleEditUser}><i class='fas fa-user-edit' /></button>\n                                                                </>}\n\n                                                                {(isAdmin && editUserDetails[musher.email]) && <>\n                                                                    <h5>Admin edit:</h5>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Email</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Cellphone</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.cellphone}\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='team' class='col-sm-2 col-form-label text-right'>Race status</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <select class='form-control-plaintext' id='raceStatus'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceStatus}\n                                                                            >\n                                                                                <option value=''>-- Choose race status --</option>\n                                                                                <option value='OK'>OK - Everything ok</option>\n                                                                                <option value='DNS'>DNS - Did Not Start</option>\n                                                                                <option value='DNF'>DNF - Did Not Finish</option>\n                                                                                <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                                <option value='DQ'>DQ - Disqualified</option>\n                                                                                <option value='DC'>DC - Data changed by user</option>\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='raceComment' class='col-sm-2 col-form-label text-right'>Race comment</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='raceComment'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceComment}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='gpxResultsApproved' class='col-sm-2 col-form-label text-right'>GPX Results approved (date)</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='gpxResultsApproved'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price1' class='col-sm-2 col-form-label text-right'>Price 1</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price1'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price1}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price2' class='col-sm-2 col-form-label text-right'>Price 2</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price2'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price2}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price3' class='col-sm-2 col-form-label text-right'>Price 3</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price3'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price3}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='priceSent' class='col-sm-2 col-form-label text-right'>Price sent</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='priceSent'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                </>}\n\n                                                                {isAdmin && <div class='d-flex flex-wrap'>\n                                                                    {currentStages && currentStages.map((stage, idx) => {\n                                                                        const percent = stage.distanceKm / currentClass.distance * 100;\n                                                                        const width = percent > 100 ? 100 : parseInt(percent, 10);\n                                                                        const currentEpoch = Math.floor(new Date(stage.date).getTime() / 1000);\n                                                                        const inDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\n                                                                        inDate.setUTCSeconds(currentEpoch + parseInt(stage.duration, 10));\n                                                                        const images = stage.images.flat();\n                                                                        if (displayDetails[musher.email]) {\n                                                                            return (<>\n                                                                                <div class='bg-light border rounded-lg  text-right position-relative mr-1 mb-1' style={`width: 350px; min-width: 320px;`}>\n                                                                                    <svg viewBox='0 0 300 100' class='position-absolute' style='width: 100%; height: 95%; bottom: 0px; left: 0px; z-index: 0;'>\n                                                                                        <path d={`${stage.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n                                                                                    </svg>\n                                                                                    <div class='position-relative px-3'>\n                                                                                        <span class='position-absolute' style='top: 3px; left: 3px; font-size: 1.3em;'>\n                                                                                            {idx + 1}\n                                                                                        </span>\n                                                                                        <small>\n                                                                                            {isAdmin && <span class='position-absolute' style='top: 0px; right: -5px;'>\n                                                                                                {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-success' />}\n                                                                                            </span>}\n                                                                                            <span class='float-left'>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-out-alt text-muted' /> {util.formatDate(stage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-in-alt text-muted' /> {util.formatDate(inDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                            </span>\n                                                                                            <span class='float-right'>\n                                                                                                {/* {restTimeText}\n                                                                                                {restTimeTrackText} */}\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(stage.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(stage.rest) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(stage.duration - stage.rest) || 'n/a'}</nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(stage.avgDogs, 0) || 'n/a'}</nobr>\n                                                                                            </span>\n                                                                                        </small>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </>);\n                                                                        }\n                                                                        return (<>\n                                                                            <div class='bg-light border rounded-lg text-right position-relative px-3 mr-1 mb-1' style={`width: 300px; min-width: 300px;`}>\n                                                                                <small>\n                                                                                    {isAdmin && <span class='position-absolute' style='top: 2px; right: -5px;'>\n                                                                                        {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-sucess' />}\n                                                                                    </span>}\n\n                                                                                    <span class='float-left'>{idx + 1}</span>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                </small>\n                                                                            </div>\n                                                                        </>);\n                                                                    })}\n                                                                </div>}\n\n                                                            </td>}\n                                                            <td class='text-right position-relative pl-4'>\n                                                                {raceStatus(musher)}\n                                                                {musher.raceComment && <>\n                                                                    <div class='alert alert-warning text-left' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <Markdown markdown={mu.replaceImages(musher.raceComment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                                    </div>\n                                                                </>}\n                                                                {(isAdmin && currentResults.lastUpdated > lastAllowedChangeDate) && <>\n                                                                    <div class='alert alert-danger text-left d-none d-md-block' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <i class='fas fa-user-shield' /> Last changed: {util.formatDate(currentResults.lastUpdated, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                                    </div>\n                                                                </>}\n                                                                {completed >= 99 ? <span class='position-absolute' style='top: 10px; left: 0px;'><i class='fas fa-flag-checkered text-success' /></span> : ''}\n                                                                <small>\n                                                                    {displayDetails[musher.email] ? <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\n                                                                            <br /><nobr><i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(totals.firstEpoch)} - <i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(finishedDate)}</nobr>\n                                                                            {isAdmin && <>\n                                                                                <br />\n                                                                                <div class='text-danger'>\n                                                                                    {totals.firstGpxStartEpoch && <>\n                                                                                        <nobr>firstGpxStartEpoch: {util.isoDate(totals.firstGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                    {totals.lastGpxStartEpoch && <>\n                                                                                        <nobr>lastGpxStartEpoch: {util.isoDate(totals.lastGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                </div>\n                                                                            </>}\n                                                                        </> : <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br />\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                        </>}\n\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(currentResults.avgDogs, 0) || 'n/a'}</nobr> */}\n                                                                    </> : <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n                                                                        </> : <>\n                                                                            {isDone === 1 ? <>\n                                                                                <nobr class='font-weight-bold'><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br />\n                                                                            </> : <>\n                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr><br />\n                                                                            </>}\n                                                                        </>}\n                                                                    </>}\n\n                                                                    {/* raceDistance: {raceDistance}<br /> */}\n\n                                                                    {/* duration: {util.secToHms(duration)}<br />\n                                                                    normalizedDuration: {util.secToHms(normalizedDuration)}<br />\n                                                                    weightedNormalizedDuration: {util.secToHms(weightedNormalizedDuration)}<br /> */}\n\n                                                                    {/* totalKcalRelated: {totalKcalRelated}<br />\n                                                                    weightedTotalKcal: {weightedTotalKcal}<br />\n                                                                    flatTotalKcal: {flatTotalKcal}<br />\n                                                                    percentHarder: {percentHarder}<br /> */}\n\n                                                                    {/* loadIndex: {loadIndex}<br /> */}\n                                                                </small>\n                                                            </td>\n                                                        </tr>\n                                                    </>);\n                                                })}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                    <div class='text-center text-muted'>\n                                        <small>\n                                            {language === 'no' && <>\n                                                OBS! Ref reglene så er det ikke lov til å endre treningsøktene som er med i konkurransen etter at løpet er ferdig.<br />\n                                                Forsøk på dette vil resultere i automatisk deplassering på listene.\n                                            </>}\n                                            {language === 'en' && <>\n                                                IMPORTANT! According to the rules: It is NOT allowed to try alter the workouts related to the competition after the race has ended.<br />\n                                                Attempts will result in automatic deplacement on the resultlists.\n                                            </>}\n                                        </small>\n                                    </div>\n\n                                    {isAdmin && <>\n                                        <button\n                                            class='btn btn-danger btn-lg float-right m-4'\n                                            onClick={this.lockAllWorkoutsInRace}\n                                        >\n                                            Lock all workouts in this race\n                                        </button>\n                                        <xmp class='m-5'>{JSON.stringify(lockMessage, null, 4)}</xmp>\n                                    </>}\n\n                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                                        <a class='btn btn-lg btn-block btn-primary' href={`https://homerunrace.no/index#/race/${race.id}/results`}>All results</a>\n                                    </div>\n                                </>}\n                            </div>\n                        </>);\n                    })}\n                </div>\n\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <RaceLiveAddResult stores={this.props.stores} />\n                </Drawer>\n            </>}\n            {showDrawerCheckpoint && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerCheckpoint}>\n                    <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                </Drawer>\n            </>}\n            {showDrawerMusher && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerMusher}>\n                    <RaceLiveMusherResult stores={this.props.stores} bib={selectedMusherBib} onClickNav={this.selectMusher}  />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailResults;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Trackmap from '../../components/public/trackmap';\nimport Gauge from '../../components/gauge';\n\nimport DogScroller from '../../components/dog/scroller';\nimport ImageScroller from '../imageScroller';\n\nimport Overlay from '../../components/overlay/';\nimport Drawer from '../../components/drawer/';\nimport HeaderCustom from '../../components/header/custom';\nimport Loading from '../../components/loading/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\nimport LineGraph from '../../components/lineGraph';\nimport States from '../../components/states';\nimport PublicTeam from '../team/public';\nimport RaceTrackingMusherDetail from './raceTrackingMusherDetail';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nfunction PageTitle(title, classes = '', style = '') {\n    useEffect(() => {\n        document.title = `Homerun Race: ${title}`;\n    }, [title]);\n    return <span class={classes} style={style}>{title}</span>;\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\nconst initialState = {\n    isLoading: false,\n    email: '',\n    submenu: 'ads',\n    jwtToken: util.getJwtToken(),\n\n    reloadInSec: null,\n    reloadIsActive: false,\n\n    leaderboardMode: 'mushers',\n    filterByraceClass: '',\n    showLeaderBoard: true,\n    showNews: true,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\nconst REPLAY_SPEED = 1;\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    initComponent = () => {\n        this.setState({\n            reloadIsActive: true,\n        }, () => this.tickReloadTimeer());\n    }\n\n    tickReloadTimeer = () => {\n        const { reloadLastEpoch } = this.props;\n        const { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n            const now = Math.floor(new Date().getTime() / 1000);\n            const reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n            this.setState({ reloadInSec });\n            clearTimeout(this.updateTimer.tick);\n            this.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n        return false;\n    }\n\n    componentDidMount() {\n        this.initComponent();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    render() {\n        const { reloadInSec } = this.state;\n        const { radius = 13, fontSize = 11, classNames = '' } = this.props;\n        const reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n        return (<>\n            <span class={classNames}>\n                <Gauge key={`gauge-reload-page`}\n                    color='primary'\n                    radius={radius}\n                    showPercentText={false}\n                    percent={reloadPercent}\n                    showCenterText={true}\n                    centerText={reloadInSec}\n                    centerTextSize={fontSize}\n                    centerTextY={'55%'}\n                />\n            </span>\n        </>);\n    }\n}\n\n@observer\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { submenu = 'details' } = this.state;\n        const { isAdmin } = userStore;\n\n        const { waypoints } = raceStore;\n        const { raceClass = {}, race = {}, onMarkerClick = () => {} } = this.props;\n\n        return (<>\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em;'><Text id='races.gps-ranking'>GPS Ranking</Text>: {race.title} - {raceClass.title}</span>\n            </div>\n\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 60vh;'\n            >\n                {!waypoints || waypoints.length === 0 && <>\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-dog' /></div>\n                        <div class='w-100'>\n                            <h3><Text id='races.no-teams-found'>No teams found!</Text></h3>\n                            <Text id='races.loading-teams'>Loading teams...</Text>\n                        </div>\n                        <div class='spinner-border text-primary' style='width: 3rem; height: 3rem;' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>\n                </>}\n\n                <table class='table table-sm table-striped'>\n                    {waypoints && waypoints.map((musher, idx) => {\n                        const restPercent = util.format(musher.restTime / musher.raceTime * 100, 0);\n                        const shortname = mu.displayNameShort(musher);\n\n                        return (<>\n                            <tr onClick={() => onMarkerClick(musher)}>\n                                <td style='width: 15px;' class='text-center'>{musher.rank}</td>\n                                <td>\n                                    <div class='d-flex justify-content-between align-items-start w-100'>\n                                        {/* <div\n                                            class='rounded-circle imageRounded imageRoundedSmallIcon float-left text-center'\n                                            style={`\n                                                background-image: url(\"${musher.image}\");\n                                                background-size: cover;\n                                                border: 1px ${mu.getRankingColor(musher.rank || idx + 1)} solid;\n                                                width: 30px !important;\n                                                height: 30px;\n                                                padding-top: 3px;\n                                            `}\n                                        >\n                                            {musher.image ? '' : shortname}\n                                        </div> */}\n                                        <div class='flex-grow-1'>\n                                            <div class='float-right ml-2'>\n                                                <div class='text-center'>\n                                                    <Gauge key={`gauge-reload-page`}\n                                                        color={restPercent < 40 ? (restPercent < 30 ? 'danger' : 'warning') : 'success'}\n                                                        radius={30}\n                                                        showPercentText={false}\n                                                        percent={restPercent}\n                                                        showCenterText={true}\n                                                        centerText={`${restPercent}%`}\n                                                        centerTextSize={15}\n                                                        centerTextY={'55%'}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='float-right'>\n                                                {musher.finishTime < 9999999999 ? <>\n                                                    <i class='fas fa-flag-checkered text-success' />\n                                                </> : <>\n                                                    {musher.currentState === 'rest' ? <>\n                                                        <i class='fas fa-bed text-warning' />\n                                                    </> : <>\n                                                        <i class='fas fa-running text-primary' />\n                                                    </>}\n                                                </>}\n                                            </div>\n\n                                            <span class='text-white rounded-pill-left px-2 mr-2'\n                                                style={`background-color: ${mu.getRankingColor(musher.rank || idx + 1)};`}\n                                            >\n                                                {musher.bib}\n                                            </span>\n\n                                            {musher.flag}  {musher.title}\n                                            <div>\n                                                <small>\n                                                    {musher.finishTime < 9999999999 ? <>\n                                                        {musher.diffToFirstFinishTime > 0 ? <>\n                                                            <span class='text-muted'><i class='fas fa-arrow-up' /></span> {util.secToHms(musher.diffToFirstFinishTime)}\n                                                        </> : <>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.formatDate(util.parseInputDate(musher.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </>}\n                                                        <nobr>\n                                                            <i class='fas fa-running text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </> : <>\n                                                        {/* <span class='text-muted'><i class='fas fa-compass' /></span> {mu.windDirection(musher.bearing)} */}\n                                                        {/* {util.format(musher.totalDistanceOnTrack, 1)} km */}\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.format(musher.distanceToFinish, 1)} km\n                                                        </nobr>\n                                                        {musher.distanceToFinish !== musher.distanceToFirst && musher.distanceToFirst > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted font-weight-light ml-2'>1st:</span> {util.format(musher.distanceToFirst, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToFinish !== musher.distanceToForward && musher.distanceToForward > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-up' /></span> {util.format(musher.distanceToForward, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToBehind > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-down' /></span> {util.format(musher.distanceToBehind, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        <br />\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-tachometer-alt' /></span> {util.format((musher.currentAvgSpeed ? musher.currentAvgSpeed * 3.6 : musher.speed) || 0, 1)} km/h\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-running ml-2 text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </>}\n\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class='mt-1 container-fluid'>\n                                        <States stores={this.props.stores} states={musher.states} duration={musher.raceTime} key={`state-${musher.bib}`} height={'6px'} showText={false} />\n                                    </div>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </table>\n\n                {/* waypoints: {JSON.stringify(waypoints.slice(0, 5), null, 4)}<br /> */}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass MusherInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { wpData = {}, onMarkerClick = () => {} } = this.props;\n        const wp = raceStore.findWaypointByBib(wpData.bib);\n\n        const { isAdmin } = userStore;\n        const { user: currentUser = {} } = userStore;\n\n        const musher = (wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(wpData.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = mu.getRankingColor(wp.rank);\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        // const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(wpData.bib);\n\n        const restPercent = util.format(wp.restTime / wp.raceTime * 100, 0);\n        // const runPercent = 100 - restPercent;\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n\n        const locale = 'en-GB';\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const now = Math.floor(new Date().getTime() / 1000);\n\n        return (<>\n            {behind.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {inFront.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em; height: 16vh;'>&nbsp;</span>\n            </div>\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 55vh;'\n            >\n\n                <div class='w-100 position-absolute'\n                    style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n                />\n\n                <div class='d-flex position-relative'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                    >\n                        {!image && <div class='text-muted' style='font-size: 25px; padding-top: 5px;'>{shortname}</div>}\n                        <div\n                            class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: -20px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>}\n                        </div>\n                    </div>\n                    <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.8em;'>\n                        <div class='float-right' style='font-size: 1.2em;'>\n                            {wp.finishTime < 9999999999 ? <>\n                                <i class='fas fa-flag-checkered text-success' />\n                            </> : <>\n                                {wp.currentState === 'rest' ? <>\n                                    <i class='fas fa-bed text-warning' />\n                                </> : <>\n                                    <i class='fas fa-running text-primary' />\n                                </>}\n                            </>}\n                        </div>\n                        {/* {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>} */}\n\n                        <h3 class='mb-0'>\n                            {musher.flag} {musher.firstname} {musher.lastname}\n                        </h3>\n                        <h6 class='mb-0'>{musher.sportsClub || <>&nbsp;</>}</h6>\n                    </div>\n                </div>\n\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='details'\n                        >\n                            Details\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='team'\n                        >\n                            Team\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='dogs'\n                        >\n                            Dogs\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                >\n                    {submenu === 'details' && <>\n                        <RaceTrackingMusherDetail\n                            stores={this.props.stores}\n                            wp={wp}\n                            musher={musher}\n                        />\n                    </>}\n                    {submenu === 'team' && <>\n                        {team.public > 0 ? <>\n                            <h3>{team.name}</h3>\n                            <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                            <ImageScroller stores={this.props.stores} images={teamImages} />\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                                {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                            </div>\n                        </>}\n                    </>}\n                    {submenu === 'dogs' && <>\n                        {team.public > 0 ? <>\n                            {team.dogs && <div class='w-100 container-fluid'>\n                                <div class='row pt-2'>\n                                    <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                                </div>\n                            </div>}\n                            {showDog && <>\n                                <div class='d-flex mb-0 mt-3 position-relative'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3 pr-2'\n                                        style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                    >\n                                        <h5 class='mb-1'>\n                                            {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                            {hasBirthday && <>\n                                                <i class='fas fa-birthday-cake ml-3' />\n                                            </>}\n                                        </h5>\n                                        <div>\n                                            {daysUntilBirthday < 7 && <>\n                                                <span class='text-muted mr-2'>\n                                                    <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                                </span>\n                                            </>}\n                                            {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                            {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                            </>}\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            </div>\n                        </>}\n                    </>}\n\n                    {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                        <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                            Toggle admin info\n                        </button>\n                        {showAdminInfo && <>\n                            <small>\n                                <xmp>\n                                    musher: {JSON.stringify(musher, null, 4)}<br />\n                                    user: {JSON.stringify(user, null, 4)}<br />\n                                    team: {JSON.stringify(team, null, 4)}<br />\n                                    totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                    {/* {\n                                        \"firstDate\": \"2021-03-19 11:59\",\n                                        \"lastDate\": \"2021-03-20 17:13\",\n                                        \"firstEpoch\": 1616151540000,\n                                        \"lastEpoch\": 1616256780000,\n                                        \"now\": {\n                                            \"$numberDecimal\": \"1642675856939\"\n                                        },\n                                        \"totalTimeUsedSec\": 26524316,\n                                        \"totalWorkoutTimeUsedSec\": 130895,\n                                        \"lastDuration\": 25655,\n                                        \"team\": 84,\n                                        \"count\": 4,\n                                        \"distanceKm\": 301.5906237951766,\n                                        \"elevation\": 3610.019075719202,\n                                        \"duration\": 77343,\n                                        \"rest\": 1332,\n                                        \"speedAvg\": 8.294634979660305,\n                                        \"totalRest\": 54884,\n                                        \"loadIndex\": 1080.75,\n                                        \"totalKcalRelated\": 544.535560976128,\n                                        \"weightedTotalKcal\": 12303.171406247127,\n                                        \"flatTotalKcal\": 9424.70699359927,\n                                        \"firstGpxStartEpoch\": null,\n                                        \"lastGpxStartEpoch\": null\n                                    } */}\n\n                                </xmp>\n                            </small>\n                        </>}\n                    </div>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass TrackingMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            reloadLastEpoch: Math.floor(new Date().getTime() / 1000),\n            historyPointIndex: 0,\n            timerRunning: true,\n            replayHistory: false,\n            replaySpeed: REPLAY_SPEED,\n        };\n        this.updateTimer = {};\n    }\n\n    handleHistoryPointIndex = (e) => {\n        const historyIdx = parseInt(e.target.value, 10);\n        clearTimeout(this.updateTimer.reload);\n\n        // console.log({ historyIdx });\n        this.setState({\n            historyPointIndex: historyIdx,\n            timerRunning: false,\n        }, () => {\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex));\n        });\n    }\n\n    playHistory = () => {\n        clearTimeout(this.updateTimer.reload);\n        const { historyPointIndex, replaySpeed } = this.state;\n        const { raceStore } = this.props.stores;\n        const raceTrackerPointTimestamp = raceStore.getRaceTrackerTimestamp(historyPointIndex + 1);\n        // console.log('playHistory', { historyPointIndex });\n        const state = {\n            historyPointIndex: historyPointIndex + 1,\n            timerRunning: false,\n            playingHistory: true,\n        };\n        if (raceTrackerPointTimestamp) {\n            state.raceTrackerPointTimestamp = raceTrackerPointTimestamp\n        }\n        this.setState({\n            ...state,\n        }, () => {\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex + 1));\n        });\n\n        // Set replay timer\n        clearTimeout(this.updateTimer.history);\n        this.updateTimer.history = setTimeout(() => {\n            this.playHistory();\n        }, replaySpeed * 1000);\n    }\n\n    pauseHistory = () => {\n        clearTimeout(this.updateTimer.history);\n        this.setState({\n            playingHistory: false,\n        });\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs);\n\n        // Set reload timer\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                console.log('loadLiveRaceResults.reloading...');\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRace = async (props = this.props) => {\n        try {\n            this.setState({ isLoading: true });\n            const { raceStore, appState } = props.stores;\n            const { raceid, classid, filterByBibs, historySteps } = props;\n            await raceStore.load(raceid);\n            raceStore.getAllClassesSortedBy();\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const { selectedClassIds = [] } = appState;\n            const allClassIds = race?.classes.map(e => e.id);\n            let selectedClassId = classid || selectedClassIds[0];\n            if (allClassIds.indexOf(selectedClassId) === -1) {\n                selectedClassId = allClassIds[0];\n                appState.setSelectedClassId(selectedClassId);\n            }\n            if (classid) {\n                appState.toggleSelectedClassId(classid, true);\n            }\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\n            this.setState({ isLoading: false });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    setLeaderboardMode = (e) => {\n        const leaderboardMode = e.target.parentElement.dataset.mode || e.target.dataset.mode;\n        this.setState({ leaderboardMode })\n    }\n\n    chooseRaceClass = (e) => {\n        const filterByraceClass = e.target.value;\n        this.setState({ filterByraceClass })\n    }\n\n    toggleShowLeaderBoard = (hide) => {\n        const { showLeaderBoard } = this.state;\n        if (hide === true) {\n            this.setState({ showLeaderBoard: false });\n        } else {\n            this.setState({ showLeaderBoard: !showLeaderBoard });\n        }\n    }\n\n    toggleShowNews = (hide) => {\n        const { showNews } = this.state;\n        if (hide === true) {\n            this.setState({ showNews: false });\n        } else {\n            this.setState({ showNews: !showNews });\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.reload);\n        clearTimeout(this.updateTimer.history);\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    componentDidMount() {\n        this.loadRace();\n        try {\n            const { width, height } = getWindowDimensions();\n            if (width < 800) {\n                this.toggleShowLeaderBoard(true);\n                this.toggleShowNews(true);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid || this.props.showDrawerReplay !== nextProps.showDrawerReplay) {\n\t\t    this.loadRace(nextProps);\n        }\n\t}\n\n    closeAllDrawers = () => {\n        this.setState({\n            showResults: false,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    onMarkerClick = (wpData) => {\n        this.closeAllDrawers();\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onMusherClick = (wpData) => {\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onCpMarkerClick = (cpData) => {\n        if (!cpData || !cpData.id) {\n            return null;\n        }\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId: cpData.id,\n            showDrawerCheckpoint: true,\n            cpData,\n        });\n    }\n\n    toggleDrawerMusher = () => {\n        const { showDrawerMusher } = this.state;\n        this.setState({\n            showDrawerMusher: !showDrawerMusher,\n        });\n    }\n\n    toggleDrawerCheckpoint = () => {\n        const { showDrawerCheckpoint } = this.state;\n        this.setState({\n            showDrawerCheckpoint: !showDrawerCheckpoint,\n        });\n    }\n\n    toggleResults = () => {\n        const { showResults } = this.state;\n        this.closeAllDrawers();\n        this.setState({            \n            showResults: !showResults,\n        });\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    setReplaySpeed = (e) => {\n        const speed = e.target.closest('button').dataset.speed;\n        this.setState({\n            replaySpeed: parseFloat(speed),\n        });\n    }\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const {\n                showDrawerReplay,\n                historySteps,\n                filterByBibs,\n            } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n                selectedMusherBib: '',\n                showDrawerCheckpoint: false,\n                showDrawerMusher: false,\n                showDrawer: false,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleFocusOnMusher = (e) => {\n        try {\n            const musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n            const { appState, raceStore } = this.props.stores;\n            appState.toggleFocusOnMusher(musherId);\n\n            const { focusOnMushers = [], selectedClassIds = [] } = appState;\n            const classid = selectedClassIds[0]\n\n            const { race } = raceStore;\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === classid)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (race.liveRace > 0) {\n                raceStore.getRaceTrackerActiveTeams(null, focusOnMushers, bibs);\n            } else {\n                raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers, bibs);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleBib = () => {\n        try {\n            const { bib } = this.state;\n            const { appState, raceStore } = this.props.stores;\n            const musher = raceStore.getMusherByBibId(bib);\n            appState.toggleFocusOnMusher(musher.id);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    checkForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.toggleBib();\n        }\n    }\n\n    toggleReplayHistory = () => {\n        const { replayHistory } = this.state;\n        clearTimeout(this.updateTimer.reload);\n        this.setState({\n            showDrawer: false,\n            historyPointIndex: 0,\n            replayHistory: !replayHistory,\n            timerRunning: replayHistory,\n        }, async () => {\n            await this.loadRace();\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            const { maxPoints } = raceStore;\n            if (replayHistory) {\n                console.log('toggleReplayHistory: setting to maxPoints', maxPoints);\n                raceStore.updateWaypointPosition(Math.abs(maxPoints - 1));\n            } else {\n                console.log('toggleReplayHistory: setting to first points');\n                for (let i = 0, l = 10; i < l; i += 1) {\n                    raceStore.updateWaypointPosition(Math.abs(historyPointIndex + i));\n                }\n            }\n        });\n    }\n\n    toggleLines = () => {\n        const { showLines } = this.state;\n        this.setState({\n            showLines: !showLines,\n        });\n    }\n\n    render() {\n        const { historyPointIndex, timerRunning, playingHistory, replaySpeed, raceTrackerPointTimestamp, showLines,\n            allTeamIds, bibs,\n        } = this.state;\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const {\n            raceid,\n            path,\n            showHeader = true,\n            drawerClassNames,\n            drawerWidth,\n            showDrawerReplay,\n            largeMarkers,\n            isAnimatedMarkers,\n            linkBase = '/app-races/',\n        } = this.props;\n        const { focusOnMushers = [], infoOnMushers = [], selectedClassIds = [] } = appState;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { leaderboardMode, filterByraceClass, showLeaderBoard, showNews, reloadLastEpoch,\n            showDrawerMusher, showDrawerCheckpoint,\n            wpData = {},\n            cpData = {},\n            showResults,\n            showTeam, showDog,\n            submenu, replayHistory,\n            selectedCheckpointId,\n        } = this.state;\n\n        const { activeTeams, teamList, waypoints, geoJSONs, waypoints2, waypoints3, zoomToMarkers, classes, race, racetrackerData, maxPoints } = raceStore;\n\n        const musher = wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email);\n        const team = raceStore.getTeamById(musher.team);\n        const selectedClass = raceStore.getClassById(selectedClassIds[0]) || {};\n\n        let wpCheckpoints = [];\n        if (selectedClass.waypoints && selectedClass.waypoints.length > 0) {\n            wpCheckpoints = selectedClass.waypoints;\n        } else if (selectedClass.checkpoints && selectedClass.checkpoints.length > 0) {\n            wpCheckpoints = selectedClass.checkpoints\n                .slice()\n                .filter(cp => cp.position && cp.position[0])\n                .map(cp => ({\n                    id: cp.id,\n                    title: cp.name,\n                    lat: cp.position[0],\n                    lng: cp.position[1],\n                }));\n        }\n\n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={team.dogs} />\n            </Overlay>}\n\n\n            {showHeader && <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`${linkBase}${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            {!race.resultsHide && <a href={`${linkBase}${race.id}/results`}>\n                                <i class='fas fa-stopwatch' />\n                            </a>}\n                        </span>\n                    </div>\n                    <div>\n                        <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                    </div>\n                    {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <>\n                        <div class='d-flex align-items-center'>\n                            &nbsp;\n                        </div>\n                    </>}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>}\n\n            {!showTracking ? <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-hand-paper' /></div>\n                        <h3>Not allowed to view tracking</h3>\n                        {race.countryRegexpMessage}\n                    </div>\n                </div>\n            </> : <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    {race.id ? <>\n                        <Trackmap\n                            marginTop={MARGIN_TOP}\n                            stores={this.props.stores}\n                            raceid={raceid}\n                            waypoints={waypoints}\n                            geoJSONs={showLines ? geoJSONs : null}\n                            // waypoints2={waypoints2}\n                            // waypoints3={waypoints3}\n                            waypoints2={wpCheckpoints}\n\n                            zoomToMarkers={zoomToMarkers}\n                            fullscreenMap={true}\n                            onMarkerClick={this.onMarkerClick}\n                            onMarker2Click={this.onCpMarkerClick}\n                            showHeatmap={race.liveRace < 1}\n                            allTeamIds={allTeamIds}\n                            showTracks={race.liveRace >= 1}\n                            selectedClassIds={selectedClassIds}\n                            showDistanceMarkers={false}\n                            groupWaypoints={false}\n                            focusOnMushers={focusOnMushers}\n                            largeMarkers={largeMarkers}\n                            isAnimatedMarkers={isAnimatedMarkers}\n                            replaySpeed={replaySpeed * 1000}\n                            // key={`trackmap-${selectedClassIds.join('-')}`}\n                            // key={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                            // mapid={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                        />\n                    </> : <>\n                        <Loading stores={this.props.stores} />\n                    </>}\n\n\n                    {timerRunning && <div class='position-absolute' style='top: 125px; left: 5px; z-index: 9999; width: 30px; height: 30px;'>\n                        <ReloadTimer stores={this.props.stores} classNames='float-right ml-2' reloadLastEpoch={reloadLastEpoch} />\n                    </div>}\n\n                    {focusOnMushers && focusOnMushers.length > 0 && <>\n                        <div\n                            class='row mb-2'\n                            style='\n                                background-color: #1C1F4C;\n                                background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                background-size: cover !important;\n                                background-position: 0 0;\n                                border-radius: 10px;\n                            '\n                        >\n                            <div class='col-12 text-white' style='font-size: 1.3em;'>\n                                {focusOnMushers && focusOnMushers.map(musherId => {\n                                    const musher = raceStore.getMusherById(musherId);\n                                    return <>\n                                        <div>\n                                            <nobr>\n                                                <span class='mr-2' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-times text-warning' /> : <i class='far fa-star' />}</span>\n                                                <span class='text-right' style='width: 50px; display: inline-block;'>{musher.bib}</span> {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                            </nobr>\n                                        </div>\n                                    </>\n                                })}\n                            </div>\n                        </div>\n                    </>}\n\n                    {race.mapCredits && <>\n                        <div class='position-absolute' style='bottom: 30px; left: 7px; z-index: 9999; width: 100px; height: 40px;'>\n                            <Markdown markdown={mu.replaceImages(race.mapCredits, race.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </>}\n\n                    {/* <div class={`row`}>\n                        <div class='col-12 form-inline align-top d-flex justify-content-center'>\n                            <div class='form-group'>\n                                <input\n                                    class='form-control form-control-lg text-dark border-primary'\n                                    style='background-color: inherit;'\n                                    type='text'\n                                    onInput={linkstate(this, 'bib')}\n                                    onKeyDown={this.checkForEnter}\n                                />\n                                <button\n                                    type='button'\n                                    class='ml-2 btn btn-lg btn-primary'\n                                    onClick={this.toggleBib}\n                                >Search for Bib</button>\n                            </div>\n                        </div>\n                    </div> */}\n\n                    {(showDrawerReplay || replayHistory) && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleReplayHistory} classNames={drawerClassNames} width={drawerWidth}>\n\n                            {maxPoints > 0 ? <>\n                                <div class='d-flex justify-content-center mx-3'>\n                                    {playingHistory ? <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-warning' onClick={this.pauseHistory}><i class='fas fa-pause' /></button>\n                                        </div>\n                                    </> : <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-success' onClick={this.playHistory}><i class='fas fa-play' /></button>\n                                        </div>\n                                    </>}\n                                    <div class='pl-2 pt-2 flex-grow-1'>\n                                        <input type='range' class='custom-range w-100' min={0} max={maxPoints} value={historyPointIndex} onInput={this.handleHistoryPointIndex} />\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-left rounded-none ${replaySpeed === 1 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={1}\n                                        >\n                                            60x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.5 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.5}\n                                        >\n                                            120x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.25 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.25}\n                                        >\n                                            240x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block right rounded-none ${replaySpeed === 0.12 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.12}\n                                        >\n                                            480x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-right rounded-none ${replaySpeed === 0.05 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.05}\n                                        >\n                                            1000x\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='flex-grow-1 pt-0 font-weight-bolder text-center' style='font-size: 1.1em;'>\n                                        {raceTrackerPointTimestamp && <>\n                                            {util.formatDate(util.parseInputDate(raceTrackerPointTimestamp), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </>}\n                                        {isAdmin && <>\n                                            / {historyPointIndex}\n                                        </>}\n                                    </div>\n                                    {isAdmin && <>\n                                        <button class='btn btn-danger mt-2 mr-4 rounded-pill-both rounded-none' onClick={this.toggleLines}>\n                                            <i class='fas fa-wave-square' /> Show lines\n                                        </button>\n                                    </>}\n                                </div>\n                            </> : <>\n                                <div class='spinner-border text-primary' role='status'>\n                                    <span class='sr-only'>Loading...</span>\n                                </div>\n                            </>}\n                        </Drawer>\n                    </>}\n\n                    {showResults && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleResults} classNames={drawerClassNames} width={drawerWidth}>\n                            <Results\n                                stores={this.props.stores}\n                                raceClass={selectedClass}\n                                race={race}\n                                onMarkerClick={this.onMusherClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerMusher && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerMusher} classNames={drawerClassNames} width={drawerWidth}>\n                            <MusherInfo\n                                stores={this.props.stores}\n                                wpData={wpData}\n                                onMarkerClick={this.onMarkerClick}\n                                onTeamClick={this.onTeamClick}\n                                onUserClick={this.onUserClick}\n                                onDogClick={this.onDogClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerCheckpoint && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerCheckpoint}>\n                            <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                        </Drawer>\n                    </>}\n\n                </div>\n            </>}\n        </>);\n    }\n}\n\nexport default TrackingMap;\n"],"sourceRoot":""}