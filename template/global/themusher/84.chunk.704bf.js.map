{"version":3,"sources":["webpack:///./components/inbox/messages.js","webpack:///./components/form/images.js","webpack:///./components/inbox/scrollIntoView.js","webpack:///./routes/inbox/detail.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["initialState","likeMessage","InboxUser","observer","props","addLike","e","messageId","stopPropagation","preventDefault","target","closest","dataset","id","messageStore","stores","state","setState","setTimeout","render","this","message","messageUser","user","userStore","language","isMyMessage","uuidv4","fromUser","shortname","mu","displayNameShort","userImage","image","images","undefined","class","style","length","util","isArray","map","img","idx","loading","src","s3MediumLink","onClick","viewImage","data-id","data-idx","s3SmallLink","onDblclick","markdown","replaceImages","body","markdownOpts","getMarkdownOptions","likes","readDate","formatDistance","sentDate","Date","locale","Component","Images","handleAddImage","file","addToImages","updateField","object","field","value","skipTimer","push","files","uploadStatus","before","after","autoOpen","apiUrl","height","width","ScrollIntoView","container","componentDidMount","scrollIntoView","behavior","block","ref","c","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","InboxDetail","markAsRead","fromuser","unread","markAsReadTimer","to","sendMessage","sendButtonEnabled","showAddImage","resizeTextarea","inputRef","addImage","addImages","beforeImagesUploaded","afterImagesUploaded","handleImageErrored","onerror","backIndicate","marginLeft","absXDiff","back","history","goBack","loadMessages","isLoading","getNotifications","getUnReadMessages","loadConversation","componentWillMount","componentWillUnmount","appState","setSwipeRight","setSwipeRightIndicate","startY","startX","xUp","yUp","xDiff","yDiff","absYDiff","darkmode","conversationUser","messages","filteredMessages","filter","name","displayName","teamImage","teamName","teamUuidv4","place","country","href","for","onInput","linkState","onKeyUp","onFocus","type","disabled","onError","removeImage","data-name","DragNDropFileupload","dropRef","createRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","removeEventListener","position","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","Object","keys","key","isImage","match","result","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax","children"],"mappings":"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","file":"84.chunk.704bf.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    likeMessage: {},\n};\n\n@observer\nclass InboxUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    addLike = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const messageId = e.target.closest('.inboxBubble').dataset.id;\n\t\tconst { messageStore } = this.props.stores;\n\n        const { likeMessage } = this.state;\n        likeMessage[messageId] = true;\n        this.setState({ likeMessage });\n        setTimeout(() => {\n            const { likeMessage } = this.state;\n            delete likeMessage[messageId];\n            this.setState({ likeMessage });\n        }, 1200);\n\n\t\tawait messageStore.likeMessage({ messageId });\n        return true;\n    }\n\n\trender() {\n        const { likeMessage } = this.state;\n        const { message = {}, messageUser } = this.props;\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { language = 'en' } = user;\n        const isMyMessage = user.uuidv4 === message.fromUser;\n\n        const shortname = mu.displayNameShort(messageUser);\n        const userImage = messageUser.image || (messageUser.images ? messageUser.images[0] : undefined);\n        const images = message.images || [];\n\n\t\treturn (\n            <div class='position-relative'>\n                <div class={`d-flex ${isMyMessage ? 'justify-content-end' : 'justify-content-start'}`}>\n                    <div class='d-flex align-items-start flex-column overflow-auto' style='max-width: 80%;'>\n\n                            {images && images.length > 0 && <>\n                                <div class={`d-flex flex-column`} style={`${isMyMessage ? '' : 'margin-left: 29px;'}`}>\n                                    {util.isArray(images) && images.map((img, idx) => {\n                                        return (<>\n                                            <div\n                                                class={`px-0 overflow-hidden rounded-lg`}\n                                                style={`max-height: 50vh;`}\n                                            >\n                                                <img loading='lazy' class={`img-fluid border rounded-lg`} src={img.s3MediumLink} onClick={this.viewImage} data-id={message.uuidv4} data-idx={idx} />\n                                            </div>\n                                        </>);\n                                    })}\n                                </div>\n                            </>}\n\n                        <div class={`d-flex flex-row flex-nowrap position-relative ${isMyMessage ? 'align-self-end' : ''}`}>\n                            {!isMyMessage && <div \n                                class={`text-center text-muted border rounded-circle imageRounded imageRoundedThumb pt-0 mr-1`}\n                                style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important; line-height: 15px;`}\n                            >\n                                {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{shortname}</span>}\n                            </div>}\n\n                            <div class='d-flex flex-column'>\n                                <div\n                                    class={`inboxBubble py-2 px-3 rounded-lg position-relative ${isMyMessage ? 'bg-primary text-white' : 'bg-secondary text-white'} overflow-hidden`}\n                                    style='overflow: auto;'\n                                    data-id={message.uuidv4}\n                                    onDblclick={isMyMessage ? null : this.addLike}\n                                >\n                                    <Markdown markdown={mu.replaceImages(message.body, message.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                                    {likeMessage[message.uuidv4] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                        <i class='fas fa-heart likeStory' />\n                                    </span>}\n                                </div>\n\n                                <div class={`flex-fill position-relative ${isMyMessage ? 'align-self-end mr-2' : 'align-self-end mr-2'}`}>\n                                    {message.likes && message.likes.length > 0 && <>\n                                        <div\n                                            class={`position-absolute text-center`}\n                                            style={`line-height: 10px; bottom: 18px; right: ${isMyMessage ? '12px' : '0px'};`}\n                                        >\n                                            <i class='fas fa-thumbs-up text-warning' />\n                                        </div>\n                                    </>}\n                                    {(isMyMessage && message.readDate) && <>\n                                        <div \n                                            class={`position-absolute text-center text-muted border rounded-circle imageRounded imageRoundedIcon pt-0 bg-secondary`}\n                                            style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 1px !important; line-height: 11px; bottom: 18px; right: -8px;`}\n                                        >\n                                            {!userImage && <span class='font-weight-lighter text-white' style='font-size: 10px;'>{shortname}</span>}\n                                        </div>\n                                        {/* <small class='text-muted'><Text id='inbox.read'>Read</Text>: {util.formatDistance(message.readDate, new Date(), { locale: 'no-NB' })}</small> */}\n                                    </>}\n                                    <small class='text-muted ml-2'>\n                                        {util.formatDistance(message.sentDate, new Date(), { locale: 'no-NB' })}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default InboxUser;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\t}\n\n    render() {\n        return (\n            <div class='col-12 mb-5' ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport InboxMessages from '../../components/inbox/messages';\nimport ScrollIntoView from '../../components/inbox/scrollIntoView';\n\nimport Images from '../../components/form/images';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {};\n\n@observer\nclass InboxDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: {\n                body: '',\n                images: [],\n            },\n            sendButtonEnabled: true,\n            ...initialState,\n        };\n        this.inputRef = null;\n    }\n\n    async loadMessages() {\n        const { fromuser } = this.props;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { messageStore, userStore } = this.props.stores;\n        await userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\t\tawait messageStore.loadConversation({ to: fromuser });\n\t\tthis.setState({ isLoading: false });\n        this.markAsRead();\n\t}\n\n    markAsRead = () => {\n        const { fromuser } = this.props;\n        const { messageStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { unread } = messageStore;\n        if (unread > 0) {\n            this.markAsReadTimer = setTimeout(() => messageStore.markAsRead({ to: fromuser, user }), 2000);\n        }\n    }\n\n    sendMessage = async () => {\n        const { fromuser } = this.props;\n        const { message, sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n        const { messageStore } = this.props.stores;\n\t\tawait messageStore.sendMessage({ message, to: fromuser });\n        this.setState({\n            showAddImage: false,\n            message: {\n                body: '',\n                images: [],\n            },\n            sendButtonEnabled: true,\n        }, () => {\n            mu.resizeTextarea(this.inputRef);\n        });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { message } = this.state;\n        message.images.push(...value);\n        this.setState({ message });\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    componentWillMount() {\n\t\tthis.loadMessages();\n\t}\n\n    componentWillUnmount() {\n        const { appState } = this.props.stores;\n        appState.setSwipeRight();\n        appState.setSwipeRightIndicate();\n    }\n\n    componentDidMount() {\n        const { back = this.back, backIndicate = this.backIndicate } = this.props;\n        const { appState } = this.props.stores;\n        appState.setSwipeRight(() => {\n            appState.setSwipeRight();\n            back();\n        });\n        appState.setSwipeRightIndicate((e, { startY, startX, xUp, yUp, xDiff, yDiff, absXDiff, absYDiff }) => {\n            backIndicate(e, { startY, startX, xUp, yUp, xDiff, yDiff, absXDiff, absYDiff });\n        });\n    }\n\n    backIndicate = (e, { startY, startX, xUp, yUp, xDiff, yDiff, absXDiff, absYDiff }) => {\n        this.setState({ marginLeft: absXDiff });\n        // console.log('backIndicate', { startY, startX, xUp, yUp, xDiff, yDiff, absXDiff, absYDiff })\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n    render() {\n        const { message, showAddImage, marginLeft, sendButtonEnabled } = this.state;\n        const { fromuser } = this.props;\n\n        const { messageStore, appState } = this.props.stores;\n        const { darkmode } = appState;\n        const { conversationUser: user = {}, messages = [] } = messageStore;\n        const filteredMessages = messages.filter(e => fromuser === e.user || fromuser === e.fromUser);\n\n        const shortname = mu.displayNameShort(user);\n        const name = mu.displayName(user, true);\n        const userImage = user.image || (user.images ? user.images[0] : undefined) || user.teamImage;\n        const imageHeader = user.teamImageHeader;\n        const teamName = user.teamName;\n        const teamUuidv4 = user.teamUuidv4;\n\n        return (<>\n            {marginLeft > 0 && <div class='position-absolute h-100 w-25 d-flex align-items-center'>\n                <div class='text-muted'>\n                    <div class='display-4 align-content-center'>\n                        <i class='fas fa-angle-double-right' />\n                    </div>\n                    <Text id='inbox.go-back'>Go back</Text>\n                </div>\n            </div>}\n\n\t\t\t<div class={`container-fluid position-relative bg-${darkmode ? 'darkmode' : 'lightmode'}`} style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP}; margin-left: ${marginLeft}px; transition: .2s;`}>\n                <div class='row fixed-top bg-light' style={`margin-top: ${MARGIN_TOP};`}>\n                    <div\n                        class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mx-2'\n                        // style={`${imageHeader ? `background-image: url(\"${imageHeader.s3SmallLink}\"); background-size: cover;` : ''} background-position: 50% 50%;`}\n                    >\n                        <button onClick={this.back} class='p-0 btn btn-link float-left mr-3' style='font-size: 2.8em; line-height: 1.0em;'><i class='fas fa-angle-left' /></button>\n\n                        <div class='d-flex flex-row flex-nowrap position-relative' style='overflow: auto;'>\n                            <div \n                                class={`text-center border rounded-circle imageRounded imageRoundedSmall pt-0`}\n                                style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                            >\n                                {!userImage && <span class='font-weight-lighter' style='font-size: 20px;'>{shortname}</span>}\n                            </div>\n                            <div class='flex-grow-1 pl-3 pt-0'>\n                                <div class='text-overflow'>\n                                    <strong>{name}</strong>\n                                </div>\n                                <div class='text-overflow'>\n                                    {user.place ? `${user.place}, ` : ''} {user.country}\n                                </div>\n                                {teamName && <div class='text-overflow'>\n                                    <a href={`/teams/public/${teamUuidv4}`}>{teamName}</a>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row' style={`margin-top: 110px;`}>\n                    {filteredMessages && filteredMessages.map((message, idx) => <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <InboxMessages stores={this.props.stores} message={message} messageUser={user}  />\n                        </div>\n                        {filteredMessages.length - 1 === idx && <ScrollIntoView />}\n                    </>)}\n                    {!filteredMessages || filteredMessages.length === 0 && <>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3'>\n                            <div class='mb-5 py-3 text-center'>\n                                <div class='display-1 text-muted'>\n                                    <i class='far fa-comments' />\n                                </div>\n                                <h3>\n                                    <Text id='inbox.write-message'>Write the first message 😃</Text>\n                                </h3>\n                                <span class='text-muted'>\n                                    <Text id='inbox.write-message-help'>Use the message field at the bottom of the page.</Text><br />\n                                </span>\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                \n                <div class='fixed-bottom w-100 px-1 py-1 bg-light' style={`margin-bottom: 60px;`}>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0'>\n\n                        <div class='d-flex flex-row flex-nowrap position-relative' style='overflow: auto;'>\n                            <div class='flex-grow-1 pb-2'>\n                                <label class='sr-only' for='inboxSearch'><Text id='inbox.search'>Search</Text></label>\n\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            onInput={linkState(this, 'message.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={message.body}\n                                            ref={c => this.inputRef = c}\n                                        />\n                                    </Localizer>\n                                    <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n\n\n                            </div>\n                            <div class='align-self-end ml-1'>\n                                <button\n                                    type='button'\n                                    class='btn btn-primary mb-2'\n                                    onClick={this.sendMessage}\n                                    disabled={!sendButtonEnabled}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                        {showAddImage && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='container-fluid'>\n                                    <div class='row'>\n                                        {util.isArray(message.images) && message.images.map(img => (\n                                            <div class='col-3 p-1'>\n                                                <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                <button class='btn btn-sm btn-link'\n                                                    onClick={this.removeImage}\n                                                    data-name={img.name}\n                                                ><i class='fas fa-trash' /> Del</button>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                                <Images object={message} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default InboxDetail;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}