{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/team/publicFeed.js","webpack:///./components/user/updateSettings.js","webpack:///./components/races/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","subMenuMarginTop","isLoading","submenu","Home","observer","Component","constructor","props","super","chooseSubmenu","e","this","setState","target","parentElement","dataset","menu","addNavigation","viewmenu","appState","stores","setSwipeRight","setSwipeLeft","route","destroyLog","async","workoutStore","cordovaDestroyLog","state","userStore","messageStore","getFingerprint","getInfo","getNotifications","getUnReadMessages","componentDidMount","loadAll","componentWillUnmount","componentWillReceiveProps","nextProps","render","path","teamid","user","currentLocationGeocode","yrWeatherKeys","formatted_address","place","currentTeam","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","class","style","role","util","secToHms","format","href","id","yrWeather","join","data-menu","showAddComment","likeWorkout","idxSuggestion","idxAd","limit","offset","hasFollowSugguestions","hasAd","sessionid","Date","getTime","dataFields","TeamPublicFeed","setLoadMore","teamStore","loadTeamsPublicFeed","unsetLoadMore","insertTopRanked","publicTeamsFeed","topRankedWorkouts","topRankedRandomized","shuffleArray","feed","i","l","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","type","wrapperClassNames","contentClassNames","insertTeamConfirm","idxConfirm","insertTeamSuggestions","onTeamClick","preventDefault","stopPropagation","showTeam","hideTeam","onUserClick","onDogClick","dogid","dogs","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","renderContent","obj","idx","loadPublicFeed","sort","componentWillMount","clearInterval","cleanupMemory","darkmode","team","findPublicTeamByUuidv4","image","getImage","shortname","name","displayNameShort","displayName","back","public","uuidv4","length","data","dataValues","toggleSetting","field","settings","updateSetting","hideSettings","forceShow","summaryEmails","infoEmails","partnerEmails","onInput","checked","for","onClick","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","toggleRaces","toggleFeature","value","racesFrontpage","hideRaces","setToggleFeature","scrollRaces","scrollLeft","clientWidth","raceIdx","nearestInt","Math","round","diff","abs","Number","isInteger","raceStore","load","query","relevant","loadRace","newsStore","isAdmin","notifications","races","newsList","language","today","onScroll","map","race","status","startDate","endDate","signupStartDate","signupEndDate","onTouchstart","onTouchend","onTouchmove","liveRace","images","s3LargeLink","active","title","markdown","replaceImages","ingress","markdownOpts","classes","a","b","distance","currentClass","formatDate","locale","img"],"mappings":"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","file":"route-home.chunk.e6df7.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport YrWeather from '../../components/yrweather/';\nimport Races from '../../components/races/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, messageStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\tawait messageStore.getUnReadMessages();\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.addNavigation();\n\t\tthis.loadAll();\n\t}\n\n\t// Swipe navigation\n\taddNavigation = (props = this.props) => {\n        const { viewmenu } = props;\n        const { appState } = this.props.stores;\n\t\tif (viewmenu === 'wall') {\n\t\t\tappState.setSwipeRight();\n\t\t\tappState.setSwipeLeft(() => {\n\t\t\t\tappState.setSwipeLeft();\n\t\t\t\troute(`/home-workout`);\n\t\t\t});\n\t\t}\n\t\tif (viewmenu === 'workout') {\n\t\t\tappState.setSwipeLeft();\n\t\t\tappState.setSwipeRight(() => {\n\t\t\t\tappState.setSwipeRight();\n\t\t\t\troute(`/`);\n\t\t\t});\n\t\t}\n\t}\n\n\t// getState = async () => {\n\t// \tconst { workoutStore } = this.props.stores;\n\t// \tawait workoutStore.cordovaGetState();\n\t// \tawait workoutStore.cordovaProviderState();\n\t// \tawait workoutStore.cordovaIsPowerSaveMode();\n\t// \tawait workoutStore.cordovaGetLog();\n\t// }\n\n\tdestroyLog = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tworkoutStore.cordovaDestroyLog();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setSwipeRight();\n\t\tappState.setSwipeLeft();\n\t}\n\t// /Swipe navigation\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.viewmenu !== this.props.viewmenu) {\n            // this.addNavigation(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { viewmenu, path, teamid, scrollToTop } = this.props;\n\t\tconst { userStore, appState, workoutStore } = this.props.stores;\n\t\t// const { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode, apiServer } = appState;\n\t\tconst { isAdmin, user } = userStore;\n\t\tconst { currentLocationGeocode = {}, yrWeatherKeys = [] } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, cordovaAuthorizationStatus, powerSaveStatus,\n\t\t\tproviderState, log, isRunning, totalDistance, geoLocationState, bgGeo, currentSpeed, totalTime, workouts } = workoutStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\n{/* <xmp>bgGeo: {JSON.stringify(bgGeo, null, 4)}</xmp> */}\n\n{/* <button class='btn btn-success btn-block' onClick={this.getState}>Get State</button>\n<button class='btn btn-success btn-block' onClick={this.destroyLog}>Destroy log</button>\n<xmp>cordovaAuthorizationStatus: {JSON.stringify(cordovaAuthorizationStatus, null, 4)}</xmp>\n<xmp>cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams, null, 4)}</xmp>\n<xmp>geoLocationState: {JSON.stringify(geoLocationState, null, 4)}</xmp>\n<xmp>powerSaveStatus: {JSON.stringify(powerSaveStatus, null, 4)}</xmp>\n<xmp>providerState: {JSON.stringify(providerState, null, 4)}</xmp>\n<xmp>isRunning: {JSON.stringify(isRunning, null, 4)}</xmp>\n<xmp>totalDistance: {JSON.stringify(totalDistance, null, 4)}</xmp>\n<xmp>currentSpeed: {JSON.stringify(currentSpeed, null, 4)}</xmp>\n<xmp>totalTime: {JSON.stringify(totalTime, null, 4)}</xmp>\n<xmp>workoutStore.workouts: {JSON.stringify(workouts.length, null, 4)}</xmp> */}\n\n{/* {log && <>{JSON.stringify(log.split('\\n').map(e => `${e}\\n`), null, 4)}</>} */}\n\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{/* <xmp>{JSON.stringify(window.cordova, null, 4)}</xmp> */}\n\n\t\t\t\t<div class=''>\n\t\t\t\t\t{user.id && <YrWeather stores={this.props.stores} place={place} yrWeather={yrWeatherKeys.join(',')} />}\n\t\t\t\t</div>\n\n\t\t\t\t{user.id && <StoryAdd stores={this.props.stores} />}\n\n\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1'\n\t\t\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t\t\t>\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-left rounded-none ${viewmenu === 'wall' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='wall'\n\t\t\t\t\t\t\t\t\t\thref='/'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-comments' /> <Text id='home.wall'>Veggen</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-right rounded-none ${viewmenu === 'workout' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='workout'\n\t\t\t\t\t\t\t\t\t\thref='/home-workout'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-running' />  <Text id='home.feed'>Feed</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\thref='/home-totals'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='home.totals'>Totaler</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t{viewmenu === 'wall' && <>\n\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} path={path} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'workout' && <>\n\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} teamid={teamid} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'totals' && <>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} />\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport TeamConnectBoxes from './connect-boxes';\nimport TeamConnectConfirm from './connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from './fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from './publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 10,\n    offset: 0,\n    hasFollowSugguestions: false, \n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeamsPublicFeed({ props = this.props, limit, offset }) {\n\t\tconst { teamStore } = props.stores;\n        const { teamid } = props;\n\t\tawait teamStore.loadPublicFeed({ limit, offset, sort: '-createdDate', teamid });\n\t}\n\n    setLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {\n            const { teamid } = this.props;\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadTeamsPublicFeed({ limit, offset, teamid });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {});\n    }\n\n    async loadAll(props = this.props) {\n        const { limit } = this.state;\n        const { teamid } = props;\n\t\tawait this.loadTeamsPublicFeed({ props, limit, offset: 0, teamid });\n        // this.insertTopRanked();\n        // this.insertAds();\n        // this.insertTeamConfirm();\n        // this.insertTeamSuggestions();\n    }\n\n    insertTopRanked = () => {\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed, topRankedWorkouts } = teamStore;\n        const topRankedRandomized = util.shuffleArray(topRankedWorkouts);\n        const feed = [...publicTeamsFeed];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            const randomPlace = mu.randomInt(0, 7);\n            if (util.isObject(topRankedRandomized[i])) {\n                feed.splice(randomPlace, 0, topRankedRandomized[i]);\n            }\n        }\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { teamStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => teamStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { teamStore } = this.props.stores;\n        teamStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        teamStore.cleanupMemory();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n        this.setLoadMore();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.teamid !== this.props.teamid) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <TeamPublicFeedLine\n                stores={this.props.stores}\n                feed={obj}\n                idx={idx}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { showTeam, showDog, handleIntersection, sessionid, dogs } = this.state;\n        const { teamStore, appState } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const { path, darkmode } = appState;\n        const { teamid } = this.props;\n        const team = teamStore.findPublicTeamByUuidv4(teamid);\n        \n        const image = mu.getImage({ team });\n        let shortname;\n        let name;\n        let username;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n        }\n\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {team ? <>\n                    <div class='row pb-3 pt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                            <div class='row'>\n                                <h3>\n                                    <div class='d-flex position-relative'>\n                                        <div\n                                            class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                                        >\n                                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                                        </div>\n                                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                                            <h3 class='mb-1'>\n                                                {team.public ? <>\n                                                    <a href={`/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a>\n                                                </> : <>\n                                                    {name}\n                                                </>}\n                                            </h3>\n                                        </div>\n                                    </div>\n                                </h3>\n                            </div>\n                        </div>\n                    </div>\n                </> : <>\n                    <TeamConnectConfirm stores={this.props.stores} />\n                </>}\n\n                {(!publicTeamsFeed || publicTeamsFeed.length === 0) && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-chart-area' /></div>\n                            <h3><Text id='search.no-workouts-found'>No workouts found.</Text></h3>\n                            <Text id='teams.no-public-workouts-text'>Please follow more teams to see their workout activity on this page. This is a great way to get updates from all your favorite mushers.</Text>\n                        </div>\n                        <div class='text-center mt-3'>\n                            <a href='/teams/connect' class='btn btn-primary'>\n                                <i class='fas fa-users' /> <Text id='header.connect-team'>Follow teams</Text>\n                            </a>\n                        </div>\n                    </div>\n                </>}\n\n                <FastList\n                    data={publicTeamsFeed}\n                    wrapperClassNames={'row pb-4'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    dataValues={{ type: '10' }}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            raceIdx: 0,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {\n            relevant: 1,\n        };\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    toggleRaces = async () => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { toggleFeature = {} } = user;\n        const value = toggleFeature.racesFrontpage ? 0 : 1;\n        this.setState({ hideRaces: value });\n        await userStore.setToggleFeature({\n            field: 'toggleFeature.racesFrontpage',\n            value,\n        });\n    }\n\n    scrollRaces = (e) => {\n        // scrollHeight: 705\n        // scrollLeft: 564\n        // scrollTop: 0\n        // scrollWidth: 1692\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const step = clientWidth;\n        const raceIdx = scrollLeft / step;\n\n        const nearestInt = Math.round(raceIdx);\n        const diff = Math.abs(nearestInt - raceIdx);\n        // console.log({ e, step, raceIdx, scrollLeft, scrollWidth, clientWidth, nearestInt, diff });\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(raceIdx) || diff < 0.5) {\n            this.setState({\n                raceIdx: nearestInt,\n            });\n        }\n    }\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\t// componentWillReceiveProps(nextProps) {\n    //     if (this.props.)\n\t// \tthis.loadRace(nextProps);\n\t// }\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races = [] } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode } = appState;\n\t\tconst { showNews, hideRaces, raceIdx } = this.state;\n        const { toggleFeature = {}, language = 'en' } = user;\n\n        const today = new Date();\n\n        return (\n            <div class='row'>\n                {hideRaces || toggleFeature.racesFrontpage ? <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-1'>\n                        <div class='row'>\n                            <div class={`col-12 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative px-0`}>\n                                <div class='w-100 d-flex justify-content-center'>\n                                    <button class='btn btn-lg btn-block btn-link' onClick={this.toggleRaces}>\n                                        <i class='fas fa-flag-checkered' /> <Text id='races.show-races'>Show Races</Text> {races.length > 1 && <>- {races.length}</>}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </> : <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-3'>\n                        <div class='row'>\n\n                            <div class='w-100 position-relative'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap bg-light border-top border-bottom'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                    onScroll={this.scrollRaces}\n                                >\n                                    {races && races.map((race, idx) =>  {\n                                        let status = '';\n                                        if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                                            status = 'race';\n                                        } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                                            status = 'signup';\n                                        } else if (today > new Date(race.endDate)) {\n                                            status = 'done';\n                                        }\n                                        return (<>\n                                            <div\n                                                class={`col-${races.length === 1 ? '12' : '8 ml-4'} ${races.length === idx + 1 ? 'mr-5' : ''} mb-0 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}\n                                                style={`\n                                                    scroll-snap-align: center;\n                                                    flex-wrap: wrap;\n                                                    overflow-y: hidden;\n                                                `}\n                                                onTouchstart={(e) => { e.stopPropagation(); }}\n                                                onTouchend={(e) => { e.stopPropagation(); }}\n                                                onTouchmove={(e) => { e.stopPropagation(); }}\n                                            >\n                                                <div class='row d-flex align-items-center position-relative'>\n                                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                                        {status === 'signup' && !race.liveRace && <>\n                                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                                        </>}\n                                                        {status === 'race' && <>\n                                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                                        </>}\n                                                        {status === 'done' && <>\n                                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                                        </>}\n                                                    </h5>\n                                                    {(race.images && race.images[0]) && <div\n                                                        class={`w-100`}\n                                                        style={`background-image: url(\"${race.images[0].s3LargeLink}\"); background-size: cover; height: 100px; background-repeat: no-repeat; background-position: 50% 50%;`}\n                                                    />}\n                                                </div>\n                                                <div class='position-relative'>\n                                                    <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                                        {status === 'signup' && <>\n                                                            <div class='spinner-grow text-primary' role='status' />\n                                                        </>}\n                                                        {status === 'race' && <>\n                                                            <div class='spinner-grow text-danger' role='status' />\n                                                        </>}\n                                                        {status === 'done' && <>\n                                                            <span><i class='fas fa-check text-success' /></span>\n                                                        </>}\n                                                    </h5>\n                                                    <h5 class='pt-2'>\n                                                        {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                                        {race.title}\n                                                    </h5>\n                                                </div>\n                                                <div class='w-100'>\n                                                    <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\n                                                </div>\n                                                <div class='w-100'>\n                                                    {race.classes && <>\n                                                        <div class='mb-3'>\n                                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n\n                                                            <div class='w-100 position-relative'>\n                                                                <div\n                                                                    class='d-flex flex-row flex-nowrap'\n                                                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                                >\n                                                                    {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                                            {currentClass.title}\n                                                                            {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                                        </span>\n                                                                    </>)}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </>}\n                                                </div>\n                                                <div class='w-100 d-flex justify-content-end'>\n                                                    <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'>\n                                                        <Text id='races.read-more'>Les mer</Text>\n                                                        <i class='fas fa-angle-double-right ml-2' />\n                                                    </a>\n                                                </div>\n                                                <div class='w-100 d-flex justify-content-center'>\n                                                    <small class='text-muted'>\n                                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                                    </small>\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n                                </div>\n                            </div>\n\n                            {races && races.length > 1 && <>\n                                <div class='w-100 text-center'>\n                                    <small>\n                                        <small>\n                                            {races && races.map((img, idx) => <>\n                                                <i class={`${idx === raceIdx ? 'fas' : 'far'} fa-circle mr-1`} />\n                                            </>)}\n                                        </small>\n                                    </small>\n                                </div>\n                                <div\n                                    class='position-absolute text-white font-weight-lighter px-1 py-1 rounded-lg'\n                                    style='top: 10px; right: 10px; background-color: rgba(0, 0, 0, 0.3); line-height: 1.0em;'\n                                >\n                                    <small>{raceIdx + 1} / {races.length}</small>\n                                </div>\n                            </>}\n\n                            <div class={`col-12 mb-3 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}>\n                                <div class='w-100 d-flex justify-content-center'>\n                                    <button class='btn btn-link' onClick={this.toggleRaces}>\n                                        <i class='fas fa-angle-up' /> <Text id='races.hide'>Hide Races</Text>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default Races;\n"],"sourceRoot":""}