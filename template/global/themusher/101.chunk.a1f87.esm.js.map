{"version":3,"sources":["webpack:///./routes/users/editPassword.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","isCapsLock","passwordType","password","passwordConfirm","UserEdit","observer","Component","constructor","props","super","togglePassword","this","state","setState","updateCapsLockStatus","changePassword","async","userStore","stores","result","status","passwordChanged","passwordChangeFailed","back","history","goBack","updateTimer","getInfo","componentDidMount","loadUser","render","user","email","passwordScore","util","scorePassword","passwordScoreNormalized","normalizeBetween","passwordStrength","checkPassStrength","passwordsAreEqual","isOkToChangePassword","class","style","onClick","id","href","for","type","autoComplete","onInput","linkState","value","onKeypress","e","role","disabled"],"mappings":"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","file":"101.chunk.a1f87.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {\n    isCapsLock: false,\n    passwordType: 'password',\n    password: '',\n    passwordConfirm: '',\n};\n\n@observer\nclass UserEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    async loadUser() {\n\t\tconst { userStore } = this.props.stores;\n        userStore.getInfo();\n    }\n\n    togglePassword = () => {\n        let { passwordType } = this.state;\n        if (passwordType === 'password') {\n            passwordType = 'text';\n        } else {\n            passwordType = 'password';\n        }\n        this.setState({ passwordType });\n    }\n\n    updateCapsLockStatus = (isCapsLock) => {\n        this.setState({\n            isCapsLock,\n        });\n    }\n\n    changePassword = async () => {\n        const { password, passwordConfirm } = this.state;\n        const { userStore } = this.props.stores;\n        const result = await userStore.changePassword({ password, passwordConfirm });\n        if (result.status === 200) {\n            this.setState({\n                password: '',\n                passwordConfirm: '',\n                passwordChanged: true,\n                passwordChangeFailed: false,\n            });\n        } else {\n            this.setState({\n                passwordChanged: false,\n                passwordChangeFailed: true,\n            });\n\n        }\n\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadUser();\n    }\n\n\trender() {\n        const { password, passwordConfirm, passwordType, isCapsLock, passwordChanged, passwordChangeFailed } = this.state;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { email } = user;\n        const passwordScore = util.scorePassword(password);\n        const passwordScoreNormalized = util.normalizeBetween(passwordScore, 0, 80, 0, 100, 100);\n        const passwordStrength = util.checkPassStrength(password, ['bg-danger', 'bg-warning', 'bg-success', 'bg-success']);\n        const isValidPassword = passwordScoreNormalized > 30;\n        const passwordsAreEqual = password === passwordConfirm;\n        const isOkToChangePassword = passwordsAreEqual && isValidPassword;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='offset-0 col-12 offset-sm-2 col-sm-8 offset-lg-4 col-lg-4' style='padding-left: 35px;'>\n\n                        {passwordChanged ? <div>\n                            <h5><Text id='users.edit-password-changed'>Passord er endret</Text>: {email}</h5>\n                            <a href='/users/'><i class='fas fa-arrow-circle-left' /><Text id='users.back-to-profile'>Tilbake til profilen</Text></a>\n                        </div> : <div>\n                            <h5><Text id='users.edit-password'>Endre passord</Text>: {email}</h5>\n\n                            <div class='form-group'>\n                                <label for='passwordInput'><i class='fas fa-key' /> <Text id='login.password'>Passord</Text></label>\n                                <div class='input-group'>\n                                    <input type={passwordType}\n                                        class={`form-control`}\n                                        id='passwordInput'\n                                        autoComplete='new-password'\n                                        onInput={linkState(this, 'password')}\n                                        value={password}\n                                        onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                    />\n                                    <div class='input-group-append'>\n                                        <button class='btn btn-outline-secondary' type='button'\n                                            onClick={this.togglePassword}\n                                        >\n                                            <i class={`fas fa-eye${passwordType === 'text' ? '-slash' : ''}`} />\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='progress' style='height: 2px;'>\n                                    <div class={`progress-bar ${passwordStrength}`} role='progressbar' style={`width: ${passwordScoreNormalized}%;`} />\n                                </div>\n                                <div class='invalid-feedback' style={`${passwordScoreNormalized > 0 && passwordScoreNormalized < 30 ? 'display: block' : ''}`}>\n                                    <Text id='register.password-too-weak'>Passordet ditt er for svakt. Forsøk et annet passord eller legg til flere bokstaver.</Text>\n                                </div>\n                                <div class='valid-feedback text-warning' style={`${passwordScoreNormalized >= 30 && passwordScoreNormalized < 70 ? 'display: block' : ''}`}>\n                                    <Text id='register.password-weak'>Passordet ditt er svakt, men vis skal gjøre vårt beste for å passe på deg.</Text>\n                                </div>\n                                <div class='valid-feedback' style={`${passwordScoreNormalized >= 70 ? 'display: block' : ''}`}>\n                                    <Text id='register.password-ok'>Passordet ditt ser bra ut.</Text>\n                                </div>\n                            </div>\n                            {isCapsLock && <div class='alert alert-danger' role='alert'>\n                                <Text id='login.caps-lock-on'>CAPS LOCK er på!</Text>\n                            </div>}\n\n                            <div class='form-group'>\n                                <label for='passwordInput'><i class='fas fa-key' /> <Text id='login.password-confirm'>Confirm passord</Text></label>\n                                <div class='input-group'>\n                                    <input type={passwordType}\n                                        class={`form-control`}\n                                        id='passwordInput'\n                                        autoComplete='new-password'\n                                        onInput={linkState(this, 'passwordConfirm')}\n                                        value={passwordConfirm}\n                                        onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                    />\n                                    <div class='input-group-append'>\n                                        <button class='btn btn-outline-secondary' type='button'\n                                            onClick={this.togglePassword}\n                                        >\n                                            <i class={`fas fa-eye${passwordType === 'text' ? '-slash' : ''}`} />\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='valid-feedback' style={`${password && passwordsAreEqual ? 'display: block' : ''}`}>\n                                    <Text id='users.passwords-matches'>Passordene er like.</Text>\n                                </div>\n                            </div>\n                            \n                            <button class={`btn btn-${isOkToChangePassword ? '' : 'outline-'}success`}\n                                disabled={!isOkToChangePassword}\n                                onClick={this.changePassword}\n                            >\n                                <Text id='users.edit-password'>Endre passord</Text>\n                            </button>\n\n                        </div>}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UserEdit;\n"],"sourceRoot":""}