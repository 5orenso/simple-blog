{"version":3,"sources":["webpack:///./routes/workouts/index.js"],"names":["initialState","isLoading","Teams","observer","Component","toggleTeam","team","callback","this","props","workoutStore","stores","currentTeam","setCurrentTeam","undefined","util","isDefined","render","userStore","teams","class","map","id","style","onClick","name","Workouts","constructor","super","loadWorkouts","async","setState","loadWorkoutSummary","loadWorkoutPlans","year","currentMonth","Date","getMonth","currentYear","getYear","seasonStart","parseInt","workoutPlanStore","updateItem","resetGraphPlanWeekDistanceCurrent","load","query","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","prepareWeekGraphs","state","getWorkoutSummary","componentDidMount","componentWillReceiveProps","nextProps","month","appState","workoutPlan","darkmode","workouts","getLatests","workoutSummaryWeek","href","key","length","basehref","fields","total","workout"],"mappings":"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","file":"route-workouts.chunk.e257b.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutCalendar from '../../components/workout/calendar';\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Teams extends Component {\n    toggleTeam = (team) => {\n\t\tconst { callback } = this.props;\n        const { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tif (team === currentTeam) {\n\t\t\tworkoutStore.setCurrentTeam(undefined);\n\t\t} else {\n\t\t\tworkoutStore.setCurrentTeam(team);\n\t\t}\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n    render() {\n        const { userStore, workoutStore } = this.props.stores;\n        const { teams } = userStore;\n\t\tconst { currentTeam } = workoutStore;\n        return (\n\t\t\t<div class='container-fluid px-0'>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{teams && teams.map(team => (\n\t\t\t\t\t\t<div class='col-6 mb-2'>\n\t\t\t\t\t\t\t<div class={`border rounded rounded-pill px-3 py-2 ${currentTeam === team.id ? 'bg-success' : ''}`}\n\t\t\t\t\t\t\t\tstyle='line-height: 0.9em; cursor: pointer; pointer-events: inherit;'\n\t\t\t\t\t\t\t\tonClick={() => this.toggleTeam(team.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<i class='fas fa-users mr-2' />\n\t\t\t\t\t\t\t\t\t{team.name}\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n    }\n}\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\t// await workoutStore.load({ query: { team: currentTeam, year } });\n\t\tawait this.loadWorkoutSummary(props);\n\t\tawait this.loadWorkoutPlans(props);\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { year } = props;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 6 ? currentYear - 1 : currentYear), 10);\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tworkoutPlanStore.updateItem('workoutPlans', []);\n\t\tworkoutPlanStore.updateItem('workoutPlan', {});\n\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\t// loadDogs = async () => {\n\t// \tconst { dogStore } = this.props.stores;\n\t// \tconst { currentTeam } = dogStore;\n\t// \tawait dogStore.load({ query: { team: currentTeam }, addData: ['workoutSummary'] });\n\t// }\n\n\t// async loadTracks() {\n\t// \tconst { trackStore } = this.props.stores;\n\t// \tawait trackStore.load();\n\t// }\n\n\tasync loadWorkoutSummary(props = this.props) {\n\n\t\tconst { userStore, workoutStore } = props.stores;\n\t\tconst { year } = props;\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { month, year } = this.props;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { darkmode } = appState;\n\t\tconst workouts = workoutStore.getLatests();\n\t\tconst { workoutSummaryWeek = [] } = userStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style='margin-bottom: 100px; margin-top: 90px;'>\n\t\t\t\t<div class='row mb-4 fixed-top' style={`margin-top: 58px; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} year={year} key={`${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} team={currentTeam} basehref={`/workouts/`} month={month} year={year} key={`${workoutPlan.id}-${workoutPlans.length}`} />\n\t\t\t\t</div>\n\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workouts && workouts.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5><Text id='workout.index.last-workouts' fields={{ total: workouts.length }}>Nyeste treningsturer - {workouts.length} stk</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workouts && workouts.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\n\n\t\t\t\t{1 === 2 && <div class='row'>\n\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n\t\t\t\t\t\t\t<h5 class='mt-4'><Text id='workout.index.workout-overview'>Treningsoversikt</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* {JSON.stringify(workoutSummaryWeek)} */}\n\t\t\t\t\t\t{workoutSummaryWeek && workoutSummaryWeek.reverse().map(summary => (\n\t\t\t\t\t\t\t<WorkoutSummary stores={this.props.stores} summary={summary} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n"],"sourceRoot":""}