{"version":3,"sources":["webpack:///./components/register/index.js","webpack:///./components/error/index.js"],"names":["Login","observer","props","handleEmailInput","e","userStore","stores","email","target","value","setState","clearTimeout","checkEmailTimer","setTimeout","checkEmail","register","state","appState","language","registerUser","password","fingerprint","jwtToken","skipPubSub","getInfo","removeError","error","errorIcon","removeMessage","message","messageIcon","togglePassword","passwordType","updateCapsLockStatus","isCapsLock","login","routeLogin","route","forgotten","routeLoginForgot","changeLanguage","setLanguage","emailIsAvailable","componentDidMount","this","render","showLogo","emailMessage","isValidEmail","util","validateEmail","passwordScore","scorePassword","passwordScoreNormalized","normalizeBetween","passwordStrength","checkPassStrength","isValidPassword","isOkToRegister","class","src","height","icon","remove","type","id","onInput","onKeypress","placeholder","style","linkState","onClick","role","disabled","Component","Error","componentDidUpdate","removeTimer","componentWillUnmount","href","onclick","className"],"mappings":"qNAWMA,EADLC,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MASJC,iBAAmB,SAAOC,GAAP,oCACPC,EAAc,EAAKH,MAAMI,OAAzBD,UACFE,EAAQH,EAAEI,OAAOC,MAFR,OAGf,EAAKC,SAAS,CAAEH,UAChBI,aAAa,EAAKC,iBAClB,EAAKA,gBAAkBC,YAAW,kBAAMR,EAAUS,WAAWP,KAAQ,KALtD,QAVA,EAkBnBQ,SAAW,2DAMP,OANO,EACqB,EAAKC,MACzBX,GAFD,EAEyB,EAAKH,MAAMI,QAAnCD,UAFD,GAEYY,EAFZ,EAEYA,UACXC,SAGR,gBAAMb,EAAUc,aAAa,CAAEZ,MANxB,EACCA,MAK8Ba,SAN/B,EACQA,SAKiCC,YADdJ,EAA1BI,YACqDC,SAD3BL,EAAbK,SACkDC,WAFhD,EAAKrB,MAApBqB,WAE2EL,cAN5E,MAGY,KAHZ,KAMP,MAA8F,eAC9F,uBAAMb,EAAUmB,WAAhB,MAAyB,qDADqE,+BAxB/E,EA4BnBC,YAAc,WACV,EAAKf,SAAS,CAAEgB,MAAO,GAAIC,UAAW,MA7BvB,EAgCnBC,cAAgB,WACZ,EAAKlB,SAAS,CAAEmB,QAAS,GAAIC,YAAa,MAjC3B,EAoCnBC,eAAiB,WAAM,IACbC,EAAiB,EAAKhB,MAAtBgB,aAMN,EAAKtB,SAAS,CAAEsB,aAJZA,EADiB,aAAjBA,EACe,OAEA,cAzCJ,EA8CnBC,qBAAuB,SAACC,GACpB,EAAKxB,SAAS,CACVwB,gBAhDW,EAoDnBC,MAAQ,WAAM,MACa,EAAKnB,MAApBT,MADE,EAE2B,EAAKL,MAAlCkC,kBAFE,sBACM,GADN,KAIVC,gBAAMD,IAxDS,EA2DnBE,UAAY,WAAM,MACS,EAAKtB,MAApBT,MADM,EAEuC,EAAKL,MAAlDqC,wBAFM,gCACE,GADF,KAGdF,gBAAME,IA9DS,EAiEnBC,eAAiB,SAACpC,GAEC,EAAKF,MAAMI,OAAxBW,SACOwB,YAFIrC,EAAEI,OAAOC,QAhEtB,EAAKO,MAAQ,CACTkB,YAAY,EACZ3B,MAAO,EAAKL,MAAMK,MAClByB,aAAc,WACdU,kBAAkB,GANP,E,0HAuEnBC,kBAAA,WAAoB,WACRtC,EAAcuC,KAAK1C,MAAMI,OAAzBD,UACJuC,KAAK1C,MAAMK,QACXI,aAAaiC,KAAKhC,iBAClBgC,KAAKhC,gBAAkBC,YAAW,kBAAMR,EAAUS,WAAW,EAAKZ,MAAMK,SAAQ,O,EAIxFsC,OAAA,WAAS,aACiDD,KAAK5B,MAAnDkB,EADH,EACGA,WAAY3B,EADf,EACeA,MAAOa,EADtB,EACsBA,SAAUY,EADhC,EACgCA,aADhC,EAE2BY,KAAK1C,MAAMI,OAAzBD,EAFb,EAEaA,UAFb,EAGuBuC,KAAK1C,MAAzB4C,gBAHH,SAKGJ,EAA0CrC,EAA1CqC,iBAAkBK,EAAwB1C,EAAxB0C,aAAcZ,EAAU9B,EAAV8B,MAChCN,EAA2CM,EAA3CN,QAASC,EAAkCK,EAAlCL,YAAaJ,EAAqBS,EAArBT,MAAOC,EAAcQ,EAAdR,UAE/BqB,EAAeC,IAAKC,cAAc3C,GAClC4C,EAAgBF,IAAKG,cAAchC,GACnCiC,EAA0BJ,IAAKK,iBAAiBH,EAAe,EAAG,GAAI,EAAG,IAAK,KAC9EI,EAAmBN,IAAKO,kBAAkBpC,EAAU,CAAC,YAAa,aAAc,aAAc,eAC9FqC,EAAkBJ,EAA0B,GAC5CK,EAAiBV,GAAgBN,GAAoBe,EAI3D,OACI,mBAAKE,MAAM,mBACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,uFACNb,GAAY,mBACT,mBAAKa,MAAM,2CACK,mBACR,mBAAKC,IAAG,mDAAsDC,OAAO,WAUjF,YAAC,IAAD,CAAOhC,QAASH,EAAOoC,KAAMnC,EAAWoC,OAAQnB,KAAKnB,cACrD,YAAC,IAAD,CAASI,QAASA,EAASiC,KAAMhC,EAAaiC,OAAQnB,KAAKhB,gBAE3D,mBAAK+B,MAAM,cAEP,YAAC,IAAD,KACI,qBAAOK,KAAK,QACRL,MAAK,iCAAkCpD,EAASyC,GAAgBN,EAAmB,WAAa,aAAgB,IAChHuB,GAAG,aACHC,QAAStB,KAAKzC,iBACdM,MAAOF,EACP4D,WAAY,SAAC/D,GAAQ6C,IAAKf,WAAW9B,EAAG,EAAK6B,uBAC7CmC,YAAa,YAAC,IAAD,CAAMH,GAAG,kBAAT,aAGpB1D,GAASyC,GAAgBN,GAAoB,mBAAKiB,MAAM,iBAAiBU,MAAK,mBAC1EtB,GAEJxC,IAAUyC,GAAgB,mBAAKW,MAAM,mBAAmBU,MAAO,mBAC5D,YAAC,IAAD,CAAMJ,GAAG,4BAAT,2CAEH1D,GAASyC,IAAiBN,GAAoB,mBAAKiB,MAAM,mBAAmBU,MAAO,mBAC/EtB,IAIT,mBAAKY,MAAM,cAEP,mBAAKA,MAAM,eACP,YAAC,IAAD,KACI,qBAAOK,KAAMhC,EACT2B,MAAK,iCAAkCvC,EAAYqC,EAAkB,WAAa,aAAgB,IAClGQ,GAAG,gBACHC,QAASI,YAAU1B,KAAM,YACzBnC,MAAOW,EACP+C,WAAY,SAAC/D,GAAQ6C,IAAKf,WAAW9B,EAAG,EAAK6B,uBAC7CmC,YAAa,YAAC,IAAD,CAAMH,GAAG,qBAAT,cAGrB,mBAAKN,MAAM,sBACP,sBAAQA,MAAM,kBAAkBK,KAAK,SACjCO,QAAS3B,KAAKb,gBAEd,iBAAG4B,MAAK,cAAgC,SAAjB3B,EAA0B,SAAW,SAKxE,mBAAK2B,MAAM,WAAWU,MAAM,gBACxB,mBAAKV,MAAK,gBAAkBJ,EAAoBiB,KAAK,cAAcH,MAAK,UAAYhB,EAAZ,QAE5E,mBAAKM,MAAM,mBAAmBU,MAAUhB,EAA0B,GAAKA,EAA0B,GAAK,iBAAmB,IACrH,YAAC,IAAD,CAAMY,GAAG,8BAAT,yFAEJ,mBAAKN,MAAM,8BAA8BU,MAAUhB,GAA2B,IAAMA,EAA0B,GAAK,iBAAmB,IAClI,YAAC,IAAD,CAAMY,GAAG,0BAAT,+EAEJ,mBAAKN,MAAM,iBAAiBU,MAAUhB,GAA2B,GAAK,iBAAmB,IACrF,YAAC,IAAD,CAAMY,GAAG,wBAAT,gCAIP/B,GAAc,mBAAKyB,MAAM,qBAAqBa,KAAK,SAChD,YAAC,IAAD,CAAMP,GAAG,yBAAT,qBAGJ,sBAAQN,MAAK,mCAA4EK,KAAK,SAC1FO,QAAS3B,KAAK7B,SACd0D,UAAWf,GAEX,iBAAGC,MAAM,qBACT,YAAC,IAAD,CAAMM,GAAG,qBAAT,kBAGJ,qBAAON,MAAM,yCACT,sBAAQA,MAAM,oCACVY,QAAS3B,KAAKT,OAEf,YAAC,IAAD,CAAM8B,GAAG,8BAAT,0D,GAhMXS,e,EA2ML1E,a,+FChNT2E,EADL1E,Y,0LAEG2E,mBAAA,WAAqB,MACahC,KAAK1C,MAA3B6D,cADS,MACA,aADA,EAEjBpD,aAAaiC,KAAKiC,aAClBjC,KAAKiC,YAAchE,YAAW,kBAAMkD,MAPnB,M,EAUrBe,qBAAA,WACInE,aAAaiC,KAAKiC,c,EAGtBhC,OAAA,WAAS,MACwCD,KAAK1C,MAA1C2B,EADH,EACGA,QAASiC,EADZ,EACYA,KADZ,IACkBC,cADlB,MAC2B,aAD3B,EAGL,OAAKlC,EAID,mBAAK8B,MAAM,aACP,mBAAKA,MAAM,0BACP,mBAAKA,MAAK,UACN,iBAAGoB,KAAK,IAAIC,QAASjB,EAAQJ,MAAM,eAC/B,iBAAGsB,UAAU,kBAEhBnB,GAAQ,kBAAIH,MAAM,mBAAkB,iBAAGA,MAAOG,KAC9CjC,GAAW,wBAAOA,MAVxB,I,GAfC6C,e,EAiCLC","file":"41.chunk.cfb37.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport linkState from 'linkstate';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Error from '../error';\nimport Message from '../message';\n\n@observer\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCapsLock: false,\n            email: this.props.email,\n            passwordType: 'password',\n            emailIsAvailable: false,\n        };\n    }\n\n    handleEmailInput = async (e) => {\n        const { userStore } = this.props.stores;\n        const email = e.target.value;\n        this.setState({ email });\n        clearTimeout(this.checkEmailTimer);\n        this.checkEmailTimer = setTimeout(() => userStore.checkEmail(email), 1000);\n    }\n\n    register = async () => {\n        const { email, password } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { language = 'en' } = appState;\n        const { skipPubSub } = this.props;\n        const { fingerprint, jwtToken } = appState;\n        await userStore.registerUser({ email, password, fingerprint, jwtToken, skipPubSub, language });\n        await userStore.getInfo();\n    };\n\n    removeError = () => {\n        this.setState({ error: '', errorIcon: '' });\n    }\n\n    removeMessage = () => {\n        this.setState({ message: '', messageIcon: '' });\n    }\n\n    togglePassword = () => {\n        let { passwordType } = this.state;\n        if (passwordType === 'password') {\n            passwordType = 'text';\n        } else {\n            passwordType = 'password';\n        }\n        this.setState({ passwordType });\n    }\n\n    updateCapsLockStatus = (isCapsLock) => {\n        this.setState({\n            isCapsLock,\n        });\n    }\n\n    login = () => {\n        const { email = '' } = this.state;\n        const { routeLogin = `/${email}` } = this.props;\n\n        route(routeLogin);\n    }\n\n    forgotten = () => {\n        const { email = '' } = this.state;\n        const { routeLoginForgot = `/forgotten/${email}` } = this.props;\n        route(routeLoginForgot);\n    }\n\n    changeLanguage = (e) => {\n        const lang = e.target.value;\n\t\tconst { appState } = this.props.stores;\n        appState.setLanguage(lang);\n    }\n\n    componentDidMount() {\n        const { userStore } = this.props.stores;\n        if (this.props.email) {\n            clearTimeout(this.checkEmailTimer);\n            this.checkEmailTimer = setTimeout(() => userStore.checkEmail(this.props.email), 1000);\n        }\n    }\n\n    render() {\n        const { isCapsLock, email, password, passwordType } = this.state;\n        const { appState, userStore } = this.props.stores;\n        const { showLogo = true } = this.props;\n        const { language = 'en' } = appState;\n        const { emailIsAvailable, emailMessage, login } = userStore;\n        const { message, messageIcon, error, errorIcon } = login;\n\n        const isValidEmail = util.validateEmail(email);\n        const passwordScore = util.scorePassword(password);\n        const passwordScoreNormalized = util.normalizeBetween(passwordScore, 0, 80, 0, 100, 100);\n        const passwordStrength = util.checkPassStrength(password, ['bg-danger', 'bg-warning', 'bg-success', 'bg-success']);\n        const isValidPassword = passwordScoreNormalized > 30;\n        const isOkToRegister = isValidEmail && emailIsAvailable && isValidPassword;\n\n        const darkmode = true;\n\n        return (\n            <div class='container-fluid'>\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 pt-5'>\n                        {showLogo && <>\n                            <div class='d-flex justify-content-center mb-5 mt-5'>\n                                {darkmode ? <>\n                                    <img src={`https://themusher.app/assets/logo-qpaws-dark.png`} height='100' />\n                                </> : <>\n                                    <img src={`https://themusher.app/assets/logo-qpaws-light.png`} height='100' />\n                                </>}\n                            </div>\n                        </>}\n                        {/* <div class='d-flex justify-content-center'>\n                            <h5 class='mt-1 mb-5'><Text id='register.new-user'>Ny bruker</Text></h5>                        \n                        </div> */}\n\n                        <Error message={error} icon={errorIcon} remove={this.removeError} />\n                        <Message message={message} icon={messageIcon} remove={this.removeMessage}  />\n\n                        <div class='form-group'>\n                            {/* <label for='emailInput'><i class='far fa-envelope' /> <Text id='register.email'>E-post</Text></label> */}\n                            <Localizer>\n                                <input type='email'\n                                    class={`form-control form-control-lg ${email ? (isValidEmail && emailIsAvailable ? 'is-valid' : 'is-invalid') : ''}`}\n                                    id='emailInput'\n                                    onInput={this.handleEmailInput}\n                                    value={email}\n                                    onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                    placeholder={<Text id='register.email'>E-post</Text>}\n                                />\n                            </Localizer>\n                            {email && isValidEmail && emailIsAvailable && <div class='valid-feedback' style={`display: block;`}>\n                                {emailMessage}\n                            </div>}\n                            {email && !isValidEmail && <div class=\"invalid-feedback\" style={'display: block;'}>\n                                <Text id='register.email-not-valid'>Hmm, e-posten ser ikke helt riktig ut.</Text>\n                            </div>}\n                            {email && isValidEmail && !emailIsAvailable && <div class=\"invalid-feedback\" style={'display: block;'}>\n                                {emailMessage}\n                            </div>}\n                        </div>\n\n                        <div class='form-group'>\n                            {/* <label for='passwordInput'><i class='fas fa-key' /> <Text id='register.password'>Passord</Text></label> */}\n                            <div class='input-group'>\n                                <Localizer>\n                                    <input type={passwordType}\n                                        class={`form-control form-control-lg ${password ? (isValidPassword ? 'is-valid' : 'is-invalid') : ''}`}\n                                        id='passwordInput'\n                                        onInput={linkState(this, 'password')}\n                                        value={password}\n                                        onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                        placeholder={<Text id='register.password'>Passord</Text>}\n                                    />\n                                </Localizer>\n                                <div class='input-group-append'>\n                                    <button class='btn btn-primary' type='button'\n                                        onClick={this.togglePassword}\n                                    >\n                                        <i class={`fas fa-eye${passwordType === 'text' ? '-slash' : ''}`} />\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div class='progress' style='height: 2px;'>\n                                <div class={`progress-bar ${passwordStrength}`} role='progressbar' style={`width: ${passwordScoreNormalized}%;`} />\n                            </div>\n                            <div class='invalid-feedback' style={`${passwordScoreNormalized > 0 && passwordScoreNormalized < 30 ? 'display: block' : ''}`}>\n                                <Text id='register.password-too-weak'>Passordet ditt er for svakt. Forsøk et annet passord eller legg til flere bokstaver.</Text>\n                            </div>\n                            <div class='valid-feedback text-warning' style={`${passwordScoreNormalized >= 30 && passwordScoreNormalized < 70 ? 'display: block' : ''}`}>\n                                <Text id='register.password-weak'>Passordet ditt er svakt, men vis skal gjøre vårt beste for å passe på deg.</Text>\n                            </div>\n                            <div class='valid-feedback' style={`${passwordScoreNormalized >= 70 ? 'display: block' : ''}`}>\n                                <Text id='register.password-ok'>Passordet ditt ser bra ut.</Text>\n                            </div>\n                        </div>\n\n                        {isCapsLock && <div class='alert alert-danger' role='alert'>\n                            <Text id='register.caps-lock-on'>CAPS LOCK er på!</Text>\n                        </div>}\n\n                        <button class={`btn btn-lg btn-block ${isOkToRegister ? 'btn-primary' : 'btn-primary'}`} type='button'\n                            onClick={this.register}\n                            disabled={!isOkToRegister}\n                        >\n                            <i class='far fa-save mr-2' />\n                            <Text id='register.register'>Registrer meg</Text>\n                        </button>\n\n                        <small class='form-text text-muted mt-5 text-center'>\n                            <button class='btn btn-small btn-link text-white'\n                                onClick={this.login}\n                            >\n                               <Text id='register.i-have-an-account'>Jeg har visst konto likevel. Gå til login siden.</Text>\n                            </button>\n                        </small>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst ERROR_DISPLAY_MS = 10000;\n\n@observer\nclass Error extends Component {\n    componentDidUpdate() {\n        const { remove = () => {} } = this.props;\n        clearTimeout(this.removeTimer);\n        this.removeTimer = setTimeout(() => remove(), ERROR_DISPLAY_MS);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.removeTimer);\n    }\n\n    render() {\n        const { message, icon, remove = () => {} } = this.props;\n\n        if (!message) {\n            return '';\n        }\n        return (\n            <div class='container'>\n                <div class='alert alert-danger row'>\n                    <div class={`col-12`}>\n                        <a href='#' onclick={remove} class='float-right'>\n                            <i className='fas fa-times' />\n                        </a>\n                        {icon && <h1 class='float-left mr-3'><i class={icon} /></h1>}\n                        {message && <span>{message}</span>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Error;\n"],"sourceRoot":""}