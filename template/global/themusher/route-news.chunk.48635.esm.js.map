{"version":3,"sources":["webpack:///./components/news/index.js","webpack:///./components/news/commentReply.js","webpack:///./components/news/comments.js","webpack:///./routes/news/index.js","webpack:///./components/style.css","webpack:///./components/news/commentAdd.js"],"names":["initialState","showAddComment","News","observer","Component","constructor","props","super","likeNews","async","newsStore","stores","news","id","toggleAddComment","e","newsId","target","parentElement","dataset","this","state","setState","inputRef","focus","updateTimer","render","userStore","user","language","likes","comments","hasLikedNews","findIndex","class","style","images","s3SmallLink","href","active","mu","replaceImages","title","date","util","isoDate","tag","sort","markdown","ingress","markdownOpts","getMarkdownOptions","length","type","onClick","data-id","c","col","offset","compact","NewsCommentReply","commentNews","callback","commentId","comment","response","commentReplyNews","status","displayNameShort","firstname","ucfirst","lastname","email","userImage","image","undefined","for","placeholder","onInput","linkState","value","ref","showAllComments","showAllReplies","NewsComments","likeComment","likeNewsComment","likeReply","replyId","likeNewsCommentReply","replyComment","toggleComments","toggleReplies","currentUser","filteredComments","totalComments","diplayedComments","slice","Math","max","reverse","map","displayName","hasLikedComment","filteredReplises","totalReplies","diplayedReplies","max_comments","formatDistance","createdDate","Date","locale","reply","hasLikedReply","data-comment","fields","more","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","isLoading","NewsList","isAdmin","query","showall","load","addData","componentDidMount","loadNews","componentWillReceiveProps","nextProps","newsList","tags","t","count","n","module","exports","NewsAdd"],"mappings":"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","file":"route-news.chunk.48635.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport NewsComments from '../../components/news/comments';\nimport NewsAddComment from '../../components/news/commentAdd';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass News extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tlikeNews = async () => {\n\t\tconst { newsStore } = this.props.stores;\n        const { news } = this.props;\n\t\tconst response = await newsStore.likeNews({ id: news.id });\n\n        if (response.status === 200) {\n\t\t\t\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst newsId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[newsId]) {\n\t\t\t\tthis.inputRef[newsId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment } = this.state;\n        const { news = {} } = this.props;\n\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        const { likes = [], comments = [] } = news;\n\t\tconst hasLikedNews = news.likes && news.likes.findIndex(e => e.user === user.id) > -1;\n\n        return (\n            <>\n                <div class='w-100 mb-5'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-0 position-relative'>\n                            {/* {JSON.stringify(team, null, 4)} */}\n                            <div class={`text-center border rounded-circle imageRounded`} style={news.images && news.images[0] ? `background-image: url(\"${news.images[0].s3SmallLink}\");` : ''}>\n                                {!(news.images && news.images[0]) && <i class='fas fa-paragraph text-muted mt-3' style='font-size: 40px;' />}\n                            </div>\n                            <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                <a class='stretched-link' href={`/news/${news.id}`}>\n                                    <i class={`fas fa-eye${news.active ? ' text-success' : '-slash text-danger'} float-right`} />\n                                    <h5 class='mb-1' style='line-height: 1.0em;'>\n                                        {mu.replaceImages(news.title, news.images, language, false)}\n                                    </h5>\n                                </a>\n                                <div>\n                                    <small class='text-muted'>\n                                        {news.date && <>{util.isoDate(news.date)} - </>}{news.tag}\n                                        {news.sort &&<> - <i class='fas fa-sort-amount-down' /> {news.sort}</>}\n                                    </small>\n                                </div>\n                                <Markdown markdown={mu.replaceImages(news.ingress || '', news.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                            </div>\n                        </div>\n\n                        <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0'>\n                            {likes && likes.length > 0 && <small class='bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                            </small>}\n                            {comments && comments.length > 0 && <small class='float-right bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                <i class='fas fa-comment text-primary' /> {comments.length}\n                            </small>}\n                        </div>\n\n                        <div class='col-10 offset-2 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-1 mb-2'>\n                            <div class='row'>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class={`btn btn-sm btn-outline-${hasLikedNews ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedNews ? 'text-primary' : ''}`}\n                                        onClick={this.likeNews}\n                                        // disabled={hasLikedNews}\n                                    >\n                                        <i class={`${hasLikedNews ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> Like\n                                    </button>\n                                </div>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block'\n                                        data-id={news.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> Comment\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        {showAddComment && <NewsAddComment\n                            stores={this.props.stores}\n                            news={news}\n                            inputRef={c => this.inputRef[news.id] = c}\n                        />}\n                        <NewsComments stores={this.props.stores} news={news} col={10} offset={2} compact={true} />\n\n\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default News;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass NewsCommentReply extends Component {\n    commentNews = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { news } = this.props;\n\t\tconst { newsStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await newsStore.commentReplyNews({ id: news.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ news, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentNews}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NewsCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport NewsReplyComment from '../../components/news/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass NewsComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { news } = this.props;\n\t\tconst { newsStore } = this.props.stores;\n\t\tconst response = await newsStore.likeNewsComment({ id: news.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ news, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { news } = this.props;\n\t\tconst { newsStore } = this.props.stores;\n\t\tconst response = await newsStore.likeNewsCommentReply({ id: news.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ news, commentId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies } = this.state;\n\t\tconst { news, callback = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (news.comments) {\n            totalComments = news.comments.length;\n            if (showAllComments) {\n                filteredComments = news.comments;\n            } else {\n                // filteredComments = news.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = news.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n                {news && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded-lg'>\n                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                        {comment.comment}\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>{displayName}</h5>\n                                                        {reply.comment}\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <NewsReplyComment stores={this.props.stores} news={news}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default NewsComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport News from '../../components/news';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass NewsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadNews(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { newsStore, userStore } = props.stores;\n\t\tconst { isAdmin } = userStore;\n\t\tconst query = {\n\t\t\ttag: props.tag,\n\t\t};\n\t\tif (isAdmin) {\n\t\t\tquery.showall = 1;\n\t\t}\n\t\tawait newsStore.load({ query, addData: ['tags'] });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.tag !== this.props.tag) {\n\t\t\tthis.loadNews(nextProps);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { tag } = this.props;\n\t\tconst { newsStore, userStore } = this.props.stores;\n\t\tconst { newsList, tags } = newsStore;\n\t\tconst { isAdmin } = userStore;\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 mb-3'>\n\t\t\t\t\t\t{tags && tags.map(t => <>\n\t\t\t\t\t\t\t<a class={`badge badge-${tag === t.title ? 'primary': 'secondary'} mr-1`} href={`/news/tag/${t.title}`}>\n\t\t\t\t\t\t\t\t{t.title} <span class='font-weight-lighter'>({t.count})</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</>)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n\t\t\t\t\t\t\t<h5>{tag === 'news' ? <Text id='news.heading'>Siste nytt</Text> : <Text id='news.heading-howo'>Hvordan gjør man det?</Text>}</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{isAdmin && <a class='btn btn-sm btn-success float-right ml-2'\n\t\t\t\t\t\t\thref={`/news/edit/new`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='news.create'>Ny</Text>\n\t\t\t\t\t\t</a>}\n\n\t\t\t\t\t\t{newsList && newsList.map(n => <News stores={this.props.stores} news={n} />)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass NewsAdd extends Component {\n    commentNews = async () => {\n        const { callback = () => {} } = this.props;\n        const { news } = this.props;\n\t\tconst { newsStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await newsStore.commentNews({ id: news.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ news, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 d-flex mb-3 position-relative'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <input\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-primary mb-2'\n                                    onClick={this.commentNews}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NewsAdd;\n"],"sourceRoot":""}