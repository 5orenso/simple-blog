{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/util/scrollIntoView.js","webpack:///./components/workout/totals.js","webpack:///./components/imageSlider/index.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./components/workout/status.js","webpack:///./components/story/add.js","webpack:///./components/story/comments.js","webpack:///../node_modules/preact-pwa-install/src/util.js","webpack:///../node_modules/preact-pwa-install/src/index.js","webpack:///./components/install/index.js","webpack:///./components/team/publicFeedLine.js","webpack:///./components/team/publicFeed.js","webpack:///./components/story/publicStory.js","webpack:///./components/story/storyPoll.js","webpack:///./components/team/connect-boxes.js","webpack:///./components/user/invite.js","webpack:///./components/dog/scroller.js","webpack:///./components/user/updateSettings.js","webpack:///./components/ad/index.js","webpack:///./components/story/publicFeed.js","webpack:///./components/team/teams.js","webpack:///./components/races/index.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/yrweather/index.js","webpack:///./components/team/fastList.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","subMenuMarginTop","isLoading","submenu","Home","observer","Component","constructor","props","super","chooseSubmenu","e","this","setState","target","parentElement","dataset","menu","addNavigation","viewmenu","appState","stores","setSwipeRight","setSwipeLeft","route","destroyLog","async","workoutStore","cordovaDestroyLog","state","userStore","messageStore","getFingerprint","getInfo","getNotifications","getUnReadMessages","componentDidMount","loadAll","componentWillUnmount","componentWillReceiveProps","nextProps","render","path","teamid","user","currentLocationGeocode","yrWeatherKeys","currentTeam","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","class","style","role","util","secToHms","format","href","id","data-menu","ScrollIntoView","container","horizontal","vertical","behavior","inline","block","scrollIntoView","ref","c","WorkoutTotals","loadTeams","teamStore","currentMonth","Date","getMonth","currentYear","getFullYear","month","year","load","query","team","skipMusherWorkoutSummary","addData","currentSeason","currentSeasonSummary","prevSeason","prevSeasonSummary","seasonStart","parseInt","findWorkoutSummary","findWorkoutSummaryTotal","value","distanceKm","smallUnit","elevation","duration","speedAvg","touchStart","stopPropagation","startX","touches","pageX","touchEnd","undefined","sliding","touchMove","totalImages","scrollDistance","x","prevImage","nextImage","images","imageContainer","currentImage1","currentImage2","currentIdx","length","imageDots","Array","fill","map","y","nextImageContainer","nextIdx","nextImages","img","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","src","s3LargeLink","image1","image2","i","StoryAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentStory","callback","inputRefObject","story","storyStore","comment","showAddImage","response","status","body","resizeTextarea","addImage","addImages","push","handleImageErrored","image","onerror","setTimeout","inputRef","displayNameShort","userImage","displayName","s3SmallLink","for","type","placeholder","onInput","linkState","onKeyUp","onFocus","data-id","onClick","disabled","isArray","onError","removeImage","data-name","name","object","updateField","before","after","autoOpen","StoryCommentReply","commentId","commentReplyStory","initCall","WorkoutStatus","loadWorkoutPlans","workoutPlanStore","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","dog","getWorkoutSummary","workoutPlan","language","MONTHS","getMonths","findTeam","months","monthRange","lastPlanMonth","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","aria-valuenow","aria-valuemin","aria-valuemax","fields","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","insert","title","pinned","public","urlText","url","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","data","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","col","offset","isAdmin","firstname","ucfirst","lastname","email","teamId","darkmode","onChange","teams","selected","checked","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","closest","likeStoryComment","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","commentid","deleteCommentReplyStory","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","idx","translate","preventDefault","replyid","translatedText","key","translateCommentReply","translateComment","compact","currentUser","max_comments","filteredComments","totalComments","diplayedComments","comments","slice","Math","max","reverse","findPublicTeamByMembers","hasLikedComment","likes","findIndex","filteredReplises","totalReplies","diplayedReplies","imgs","toJS","imageIdx","currentImage","translation","getCommentTranslations","targetLang","data-comment","uuidv4","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","createdDate","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","getWindow","window","isStandalone","matchMedia","matches","navigator","standalone","dispatchToOnPrompt","CACHE","onPrompts","forEach","onPrompt","prompt","awaitInstallPrompt","installPromptListener","installPrompt","Promise","resolve","appInstalledListener","addEventListener","userChoice","then","choiceResult","outcome","success","removeEventListener","removeOnPrompt","func","reset","useInstaller","useState","setInstallPrompt","useEffect","cancel","installed","InstallButton","onclick","likeWorkout","idxSuggestion","idxAd","limit","hasFollowSugguestions","hasAd","sessionid","getTime","TeamPublicFeedLine","toggleDate","showDate","workoutId","addLikeToFeed","addCommentToFeed","workout","holdingStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","workoutsAddLikeToComment","workoutsAddLikeToCommentReply","workoutsAddCommentToWorkoutComment","workoutsAddCommentToWorkout","addLikeToWorkout","workoutsAddLikeToWorkout","toggleAddComment","shareLink","text","shareUrl","showWorkoutDetail","localName","console","log","feed","translatedTextName","field","translatedTextComment","containerRef","onTeamClick","onUserClick","onDogClick","hasShareApi","publicDogs","publicUser","findPublicTeam","findPublicUser","findTeamAmbition","ambition","ambitions","teamType","findTeamType","isTeamAdmin","members","some","m","getImage","priority","hasLikedWorkout","totalFollowers","followers","isYourTeam","indexOf","isFollowing","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","gpxInfo","shortname","username","userLink","settings","hideProfile","mapImage","yrWeather","views","getViews","statistics","adminData","getAdminData","translationName","getTranslation","feedName","feedComment","date","formatDate","hour12","hour","minute","dogs","track","sledWeight","temperature","formattedCounty","moonIllumination","phaseIcon","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","dblClick","likeRef","allDogs","avgGpsMovingSpeed","buttonOnly","data-url","data-title","rel","data-native","showAvatar","extraClass","dataFields","TeamPublicFeed","setLoadMore","loadTeamsPublicFeed","unsetLoadMore","insertTopRanked","publicTeamsFeed","topRankedWorkouts","topRankedRandomized","shuffleArray","l","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","idxConfirm","insertTeamSuggestions","showTeam","hideTeam","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","renderContent","obj","sort","componentWillMount","clearInterval","findPublicTeamByUuidv4","back","dataValues","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","saveField","publicFeedUpdate","storyType","saveStoryField","clearTimeout","updateTimer","doUpdateField","StoryTypeRegular","showStoryDetail","components","finalBody","getInlineComponents","offline","component","storyId","params","opts","content","StoryTypeAd","asUrl","currencty","StoryTypeArticle","StoryPublicFeed","likeIds","Object","keys","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","hashtag","reports","hasLikedStory","simple","classNames","StoryPoll","pollStory","line","lines","split","trim","replace","hasPolledStory","polls","totalPolls","maxPercent","percent","md5","voteDays","days","finishDate","addDays","isExpired","hasPolledLine","extended","data-line","requestSent","Teams","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","loadPublic","notfollowing","array","publicTeamsToFollow","place","Invite","inviteKennel","friendEmail","inviteSent","inviteNew","hideInvite","updateSetting","forceShow","DogScroller","scrollImages","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","sortByName","a","b","dogA","find","dogB","size","onScroll","dogId","d","className","showName","showPosition","toggleSetting","hideSettings","summaryEmails","infoEmails","partnerEmails","Ad","withText","subject","logClick","adStore","ads","apiServer","getApiServer","section","postalcode","page","setTime","loadAd","time","match","ad","native","reloadStories","loadStoriesPublicFeed","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","checkForNewStories","clearCheckForNewStories","publicFeed","topRankedStories","startPosition","now","parseInputDate","floor","endPosition","hasNewStories","toggleTeam","unsetTeamIfSelected","dogStore","setCurrentTeam","isDefined","showAllTeams","highlight","showAll","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Races","toggleRaces","toggleFeature","racesFrontpage","hideRaces","setToggleFeature","scrollRaces","raceIdx","raceStore","relevant","loadRace","newsStore","notifications","races","newsList","today","race","signupStartDate","signupEndDate","liveRace","active","ingress","classes","distance","currentClass","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","hasFollowRequests","reqUser","isDeleted","isConfirmed","publicTeam","data-user","data-follow","YrWeather","toggleyrWeather","showWeather","currentLocationInfo","coords","latitude","lat","longitude","lon","altitude","getWeatherUser","formatWeather","loadWeather","yrWeatherFormatted","captureEvents","getNestedValue","night","morning","day","evening","getTemperatureColor","getWindSpeedColor","w","isoTime","windDirection","FastListLine","removeIntersectionObserver","addIntersectionObserver","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","entries","isIntersecting","currentHeight","childNodes","offsetHeight","scrollHeight","display","minHeight","setupIntersectionObserver","IntersectionObserverEntry","prototype","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses"],"mappings":"iqBASA,MAAMA,EAAaC,IAAGC,WAAU,GAC1BC,EAAgBF,IAAGG,eAenBC,GAdsBJ,IAAGK,mBAcV,CACpBC,WAAW,EACXC,QAAS,iB,IAIJC,EADLC,Y,EAAD,cACmBC,YACfC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAkBtBE,cAAiBC,IAEhBC,KAAKC,SAAS,CAAEV,QADAQ,EAAEG,OAAOC,cAAcC,QAAQC,MAAQN,EAAEG,OAAOE,QAAQC,QAnBnD,KA6BtBC,cAAgB,CAACV,EAAQI,KAAKJ,SACvB,MAAM,SAAEW,GAAaX,GACf,SAAEY,GAAaR,KAAKJ,MAAMa,OACrB,SAAbF,IACHC,EAASE,gBACTF,EAASG,aAAa,KACrBH,EAASG,eACTC,gBAAO,oBAGQ,YAAbL,IACHC,EAASG,eACTH,EAASE,cAAc,KACtBF,EAASE,gBACTE,gBAAO,SA3CY,KAwDtBC,WAAaC,iBACZ,MAAM,aAAEC,GAAiB,EAAKnB,MAAMa,OACpCM,EAAaC,qBAxDPhB,KAAKiB,M,+VAAL,IACO7B,GAId,gBACC,MAAM,SAAEoB,EAAF,UAAYU,EAAZ,aAAuBC,GAAiBnB,KAAKJ,MAAMa,OACzDT,KAAKC,SAAS,CAAEX,WAAW,UACfkB,EAASY,uBACTF,EAAUG,gBAChBH,EAAUI,yBACVH,EAAaI,oBAEnBvB,KAAKC,SAAS,CAAEX,WAAW,IAQ5BkC,oBAECxB,KAAKyB,UAoCNC,uBACC,MAAM,SAAElB,GAAaR,KAAKJ,MAAMa,OAChCD,EAASE,gBACTF,EAASG,eAIVgB,0BAA0BC,IAO1BC,SACC,MACM,SAAEtB,EAAF,KAAYuB,EAAZ,OAAkBC,GAAwB/B,KAAKJ,OAC/C,UAAEsB,EAAF,SAAaV,EAAb,aAAuBO,GAAiBf,KAAKJ,MAAMa,QAGnD,KAAWuB,GAASd,GACpB,uBAAEe,EAAyB,GAA3B,cAA+BC,EAAgB,IAAOF,GAGtD,YAAEG,EAAF,4BAAeC,EAAf,UACeC,EADf,cAC0BC,EAD1B,aACkEC,EADlE,UACgFC,GAAwBzB,EAE9G,OACC,mBAAK0B,MAAM,kBAAkBC,MAAQ,kBAAiBxD,kBAA8BH,MAoBlFsD,GAAaD,GAA+B,mBAC5C,mBAAKK,MAAM,OACV,mBAAKA,MAAM,yFACV,kBAAIA,MAAM,iCAAV,WAEC,mBAAKA,MAAM,oBAAoBE,KAAK,YAErC,mBAAKF,MAAM,YACV,mBAAKA,MAAM,qCAAqCC,MAAM,qBAAqBE,IAAKC,SAASL,IACzF,mBAAKC,MAAM,qCAAqCC,MAAM,qBAAqBE,IAAKE,OAAsB,IAAfP,EAAoB,GAA3G,SACA,mBAAKE,MAAM,qCAAqCC,MAAM,qBAAqBE,IAAKE,OAAOR,EAAgB,IAAM,GAA7G,QAED,iBAAGG,MAAM,2BAA2BM,KAAK,sBAAqB,YAAC,IAAD,CAAMC,GAAG,2BAAT,sBAUhEhB,EAAKgB,IAAM,YAAC,IAAD,CAAUvC,OAAQT,KAAKJ,MAAMa,SAEzC,mBAAKgC,MAAM,uEACV,mBAAKA,MAAM,OACV,mBAAKA,MAAM,yBACV,mBACCA,MAAM,wCACNC,MAAM,kDAEN,mBAAKD,MAAM,iBACV,iBACCA,MAAQ,gDAA4D,SAAblC,EAAsB,cAAgB,oCAC7FmC,MAAM,6CACNO,YAAU,OACVF,KAAK,KAEL,iBAAGN,MAAM,oBANV,IAM+B,YAAC,IAAD,CAAMO,GAAG,aAAT,YAGhC,mBAAKP,MAAM,iBACV,iBACCA,MAAQ,iDAA6D,YAAblC,EAAyB,cAAgB,oCACjGmC,MAAM,6CACNO,YAAU,UACVF,KAAK,iBAEL,iBAAGN,MAAM,mBANV,KAM+B,YAAC,IAAD,CAAMO,GAAG,aAAT,cAmBtB,SAAbzC,GAAuB,mBACvB,YAAC,IAAD,CAAOE,OAAQT,KAAKJ,MAAMa,SAC1B,YAAC,IAAD,CAAiBA,OAAQT,KAAKJ,MAAMa,OAAQqB,KAAMA,KAErC,YAAbvB,GAA0B,mBAC1B,YAAC,IAAD,CAAgBE,OAAQT,KAAKJ,MAAMa,OAAQsB,OAAQA,KAEtC,WAAbxB,GAAyB,mBACzB,mBAAKkC,MAAM,2EACV,YAAC,IAAD,CAAOhC,OAAQT,KAAKJ,MAAMa,SAC1B,YAAC,IAAD,CAAeA,OAAQT,KAAKJ,MAAMa,OAAQ0B,YAAaA,IACvD,YAAC,IAAD,CAAe1B,OAAQT,KAAKJ,MAAMa,OAAQ0B,YAAaA,W,EAS9C3C,a,mcChOf,MAAMJ,EAAe,G,IAGf8D,EADLzD,Y,EAAD,cAC6BC,YACzBC,YAAYC,GACRC,MAAMD,GACNI,KAAKiB,M,+VAAL,IACO7B,GAEPY,KAAKmD,UAAY,KAGrB3B,oBACI,MAAM,WAAE4B,EAAF,SAAcC,EAAW,IAAOrD,KAAKJ,MACrCA,EAAQ,CACV0D,SAAU,UAEVF,IACAxD,EAAM2D,OAASH,GAEfC,IACAzD,EAAM4D,MAAQH,GAExBrD,KAAKmD,UAAUM,eAAe7D,GAG5BiC,SACI,OACI,mBAAK6B,IAAKC,GAAK3D,KAAKmD,UAAYQ,GAAhC,S,EAKGT,O,4KCtBTU,EADLnE,Y,EAAD,cAC4BC,YACxBC,YAAYC,GACRC,MAAMD,GACNI,KAAKiB,MAAQ,GAGjB,cAAcrB,EAAQI,KAAKJ,aACjBI,KAAK6D,UAAUjE,GAMzB,gBAAgBA,EAAQI,KAAKJ,OAC/B,MAAM,UAAEkE,GAAclE,EAAMa,OAEhBsD,GAAe,IAAIC,MAAOC,WAAa,EACvCC,GAAc,IAAIF,MAAOG,eAE/B,MAAEC,EAAQL,EAAV,KAAwBM,EAAOH,EAA/B,YAA4C/B,GAAgBvC,QAE5DkE,EAAUQ,KAAK,CAAEC,MAAO,CAAEC,KAAMrC,EAAasC,0BAA0B,EAAMJ,OAAMD,SAASM,QAAS,CAAC,oBAG7GlD,oBACCxB,KAAKyB,UAGHE,0BAA0BC,GAClBA,EAAUyC,OAASrE,KAAKJ,MAAMyE,MAAQzC,EAAUO,cAAgBnC,KAAKJ,MAAMuC,aAC3EnC,KAAKyB,QAAQG,GAIrBC,SACI,MAAM,UAAEiC,GAAc9D,KAAKJ,MAAMa,OAE3BsD,GAAe,IAAIC,MAAOC,WAAa,EACvCC,GAAc,IAAIF,MAAOG,eAC/B,MAAEC,EAAQL,EAAV,KAAwBM,EAAOH,EAA/B,YAA4C/B,EAAawC,cAAeC,EAAsBC,WAAYC,GAAsB9E,KAAKJ,MACrImF,EAAcC,SAASZ,EAAQ,EAAIC,EAAO,EAAIA,EAAM,IAG9CQ,EAAaC,IAAuB3C,EAAc2B,EAAUmB,mBAAmB9C,EAAa4C,EAAc,GAAKjB,EAAUoB,wBAAwBH,EAAc,KAAO,GACtKJ,EAAgBC,IAA0BzC,EAAc2B,EAAUmB,mBAAmB9C,EAAa4C,GAAejB,EAAUoB,wBAAwBH,KAAiB,GAE1K,OACI,mBAAKtC,MAAM,wBACP,mBAAKA,MAAM,uBACP,mBAAKA,MAAM,mBACP,qBAAOA,MAAM,cAAa,iBAAGA,MAAM,gBAAnC,IAAqDsC,EAArD,IAAmEA,EAAc,GACjF,sBACI,YAAC,IAAD,CAAUtE,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOR,EAAcS,YAAc,EAAGC,WAAW,MAG9F,mBAAK5C,MAAM,+BACP,qBAAOA,MAAM,cAAa,iBAAGA,MAAM,gBAAnC,IAAqDsC,EAAc,EAAnE,IAAuEA,GACvE,kBAAItC,MAAM,cACN,YAAC,IAAD,CAAUhC,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAON,EAAWO,YAAc,EAAGC,WAAW,OAI/F,mBAAK5C,MAAM,YACP,mBAAKA,MAAM,mBACP,qBAAOA,MAAM,cAAa,iBAAGA,MAAM,oBAAnC,IAAyDsC,EAAzD,IAAuEA,EAAc,GACrF,sBACI,YAAC,IAAD,CAAWtE,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOR,EAAcW,WAAa,EAAGD,WAAW,MAG9F,mBAAK5C,MAAM,+BACP,qBAAOA,MAAM,cAAa,iBAAGA,MAAM,oBAAnC,IAAyDsC,EAAc,EAAvE,IAA2EA,GAC3E,kBAAItC,MAAM,cACN,YAAC,IAAD,CAAWhC,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAON,EAAWS,WAAa,EAAGD,WAAW,OAI/F,mBAAK5C,MAAM,YACP,mBAAKA,MAAM,mBACP,qBAAOA,MAAM,cAAa,iBAAGA,MAAM,iBAAnC,IAAsDsC,EAAtD,IAAoEA,EAAc,GAClF,sBACKnC,IAAKC,SAAS8B,EAAcY,UAAY,KAGjD,mBAAK9C,MAAM,+BACP,qBAAOA,MAAM,cAAa,iBAAGA,MAAM,iBAAnC,IAAsDsC,EAAc,EAApE,IAAwEA,GACxE,kBAAItC,MAAM,cACLG,IAAKC,SAASgC,EAAWU,UAAY,MAIlD,mBAAK9C,MAAM,0BACP,mBAAKA,MAAM,mBACP,qBAAOA,MAAM,cAAa,iBAAGA,MAAM,0BAAnC,IAA+DsC,EAA/D,IAA6EA,EAAc,GAC3F,sBACI,YAAC,IAAD,CAAOtE,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOR,EAAca,UAAY,EAAGH,WAAW,MAGzF,mBAAK5C,MAAM,+BACP,qBAAOA,MAAM,cAAa,iBAAGA,MAAM,0BAAnC,IAA+DsC,EAAc,EAA7E,IAAiFA,GACjF,kBAAItC,MAAM,cACN,YAAC,IAAD,CAAOhC,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAON,EAAWW,UAAY,EAAGH,WAAW,Y,EAU3FzB,O,8ECzHdnE,Y,EAAD,cAC0BC,YACtBC,YAAYC,GACRC,MAAMD,GADS,KA6CnB6F,WAAc1F,IACVA,EAAE2F,kBACF1F,KAAKC,SAAS,CACV0F,OAAQ5F,EAAE6F,QAAQ,GAAGC,SAhDV,KAoDnBC,SAAY/F,IACRA,EAAE2F,kBACF1F,KAAKC,SAAS,CACV0F,YAAQI,EACRC,SAAS,KAxDE,KA4DnBC,UAAalG,IACTA,EAAE2F,kBAEF,MAAM,YAAEQ,GAAgBlG,KAAKiB,MAC7B,GAAIiF,EAAc,EAAG,CACjB,MAAM,OAAEP,EAAF,QAAUK,GAAYhG,KAAKiB,MAC3BkF,EAAiB,GACjBC,EAAIrG,EAAE6F,QAAQ,GAAGC,MAClBG,IACGI,EAAIT,EAASQ,GACbnG,KAAKC,SAAS,CAAE+F,SAAS,IACzBhG,KAAKqG,aACED,EAAIT,EAASQ,IACpBnG,KAAKC,SAAS,CAAE+F,SAAS,IACzBhG,KAAKsG,gBAxEjB,MAAM,OAAEC,EAAS,IAAO3G,EACxBI,KAAKiB,MAAQ,CACTuF,eAAgB,EAChBC,cAAeF,EAAO,IAAM,GAC5BG,cAAe,GACfC,WAAY,EACZT,YAAaK,EAAOK,QAAU,EAC9BC,UAAW,IAAIC,MAAMP,EAAOK,QAAU,GAAGG,KAAK,GAAGC,IAAI,CAACZ,EAAGa,IAAMb,EAAIa,KAI3EX,YAEI,MAAM,OAAEC,GAAWvG,KAAKJ,OAClB,YAAEsG,EAAF,WAAeS,EAAf,eAA2BH,GAAmBxG,KAAKiB,MACnDiG,EAAwC,IAAnBV,EAAuB,EAAI,EACtD,IAAIW,EAAUR,EAAa,EACvBQ,EAAUjB,EAAa,IACvBiB,EAAU,GAEdnH,KAAKC,SAAS,CACV,CAAE,eAAciH,GAAuBX,EAAOY,GAC9CR,WAAYQ,EACZX,eAAgBU,IAIxBb,YAEI,MAAM,OAAEE,GAAWvG,KAAKJ,OAClB,YAAEsG,EAAF,WAAeS,EAAf,eAA2BH,GAAmBxG,KAAKiB,MAEzD,IAAIkG,EAAUR,EAAa,EACvBQ,EAAU,IACVA,EAAUjB,EAAc,GAE5BlG,KAAKC,SAAS,CACV,CAAE,gBANwC,IAAnBuG,EAAuB,EAAI,IAMXD,EAAOY,GAC9CR,WAAYQ,EACZX,eAAmC,IAAnBA,EAAuB,EAAI,IAuCnD7E,0BAA0BC,GAEtB,GAAIA,EAAU2E,SAAWvG,KAAKJ,MAAM2G,OAAQ,CACxC,MAAQA,OAAQa,EAAa,IAAOxF,EACpC5B,KAAKC,SAAS,CACVuG,eAAgB,EAChBC,cAAeW,EAAWR,OAAS,EAAIQ,EAAW,GAAK,GACvDV,cAAe,GACfC,WAAY,EACZT,YAAakB,EAAWR,QAAU,EAClCC,UAAW,IAAIC,MAAMM,EAAWR,QAAU,GAAGG,KAAK,GAAGC,IAAI,CAACZ,EAAGa,IAAMb,EAAIa,OAKnFpF,SACI,MAAM,cAAE4E,EAAF,cAAiBC,EAAjB,eAAgCF,EAAhC,YAAgDN,EAAhD,UAA6DW,EAA7D,WAAwEF,GAAe3G,KAAKiB,MAC5FoG,EAAMrH,KAAM,QAAOwG,GACnBc,EAA8B,IAAnBd,EAAuBC,EAAgBC,EAClDa,EAAiBF,GAAOA,EAAIG,OAASH,EAAII,MAAQJ,EAAIG,OAAS,EAAI,EACxE,IAAIE,EACAC,EACJ,GAAIL,EAASM,WAAY,CACrB,MAAM,MAAEH,EAAF,OAASD,EAAT,YAAiBK,GAAgBP,EAASM,WAC5CC,EAAc,GAAKA,EAAc,GACjCH,EAAYD,EACZE,EAAWH,IAEXE,EAAYF,EACZG,EAAWF,GAGnB,MAAMK,EAAaR,EAASM,WAAaD,EAAWD,EAAYH,EAChE,OAAIrB,GAAe,EACR,GAIP,mBAAKzD,MAAM,SACP,mBAAKA,MAAM,yCACPC,MAAQ,uBAAsBoF,yDAC9BC,aAAc/H,KAAKyF,WACnBuC,WAAYhI,KAAK8F,SACjBmC,YAAajI,KAAKiG,WAEjBC,EAAc,GAAK,oBAAMzD,MAAM,oBAAoBC,MAAM,uCAAsC,yBAAQiE,EAAa,EAArB,IAAyBT,IACxHO,GAAiB,mBAAKhE,MAAM,oBAAoBC,OAA6B,IAAnB8D,EAAuB,cAAiB,eAA1C,sDACrD,mBAAK0B,QAAQ,OAAOC,IAAK1B,EAAc2B,YACnC3F,MAAM,yBACNiB,IAAKC,GAAK3D,KAAKqI,OAAS1E,KAG/B+C,GAAiB,mBAAKjE,MAAM,oBAAoBC,OAA6B,IAAnB8D,EAAuB,cAAiB,eAA1C,sDACrD,mBAAK0B,QAAQ,OAAOC,IAAKzB,EAAc0B,YACnC3F,MAAM,yBACNiB,IAAKC,GAAK3D,KAAKsI,OAAS3E,MAInCkD,EAAUD,OAAS,GAAK,mBAAKnE,MAAM,qBAAqBoE,EAAUG,IAAIuB,GAAK,oBAAM7F,MAAQ,UAAS6F,IAAM5B,EAAa,EAAI,UAAY,cAA1D,Y,+ICtItF6B,EADL/I,Y,EAAD,cACuBC,YAClBC,YAAYC,GAAO,MAChBC,MAAMD,GADU,YAapB6I,qBAAuB,KACnBzI,KAAKC,SAAS,CAAEyI,mBAAmB,KAdnB,KAiBpBC,oBAAsB,KAClB3I,KAAKC,SAAS,CAAEyI,mBAAmB,KAlBnB,KAqBpBE,aAAe9H,iBACX,MAAM,kBAAE4H,GAAsB,EAAKzH,MACnC,IAAKyH,EACD,OAAO,EAEX,MAAM,SAAEG,EAAW,SAAb,eAAuBC,EAAiB,IAAO,EAAKlJ,OACpD,MAAEmJ,GAAU,EAAKnJ,OACvB,WAAEoJ,GAAe,EAAKpJ,MAAMa,QACtB,QAAEwI,EAAF,aAAWC,GAAiB,EAAKjI,MACvC,EAAKhB,SAAS,CAAEyI,mBAAmB,IACzC,MAAMS,QAAiBH,EAAWJ,aAAa,CAAE5F,GAAI+F,EAAM/F,GAAIiG,YAC3DE,GAAgC,MAApBA,EAASC,SACf,EAAKnJ,SAAS,CACVgJ,QAAS,CACLI,KAAM,GACN9C,OAAQ,KAEb,KACCvH,IAAGsK,eAAeR,EAAeC,EAAM/F,KACnCkG,GACA,EAAKK,aAGbV,EAAS,CAAEE,QAAOI,cAEtB,EAAKlJ,SAAS,CAAEyI,mBAAmB,KA9CnB,KAiDpBc,UAAY,EAAGrE,YAEX,MAAM,QAAE8D,GAAYjJ,KAAKiB,MACzBgI,EAAQ1C,OAAOkD,QAAQtE,GACvBnF,KAAKC,SAAS,CAAEgJ,aArDA,KAwDpBM,SAAW,KACP,MAAM,aAAEL,GAAe,GAAUlJ,KAAKiB,MACtCjB,KAAKC,SAAS,CACViJ,cAAeA,KA3DH,KA+DpBQ,mBAAsB3J,IAClB,MAAM4J,EAAQ5J,EAAEG,OAChByJ,EAAMC,QAAU,KAChBC,WAAW,KACPF,EAAMxB,KAAQ,IAAG,IAAInE,MACtB,MAlEHhE,KAAKiB,MAAQ,CACTgI,QAAS,CACLI,KAAM,GACN9C,OAAQ,IAEZ2C,cAAc,EACdR,mBAAmB,GAEvB1I,KAAK8J,SAAW,GA6DpBjI,SACI,MAAM,SAAEiI,EAAF,MAAYf,GAAU/I,KAAKJ,OAC3B,QAAEqJ,EAAF,aAAWC,EAAX,kBAAyBR,GAAsB1I,KAAKiB,OACpD,UAAEC,GAAclB,KAAKJ,MAAMa,QAC3B,KAAEuB,EAAO,IAAOd,EAChB6I,EAAmB/K,IAAG+K,iBAAiB/H,GAEvCgI,GADchL,IAAGiL,YAAYjI,GACjBA,EAAK2H,QAAU3H,EAAKuE,OAASvE,EAAKuE,OAAO,QAAKR,IAEhE,OACI,uBACI,mBAAKtD,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAUsH,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,mCAENlI,EAAK2H,OAAS,oBAAMlH,MAAM,sBAAsBC,MAAM,oBAAoBqH,IAEhF,mBAAKtH,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU0H,IAAI,mBAAkB,YAAC,IAAD,CAAMnH,GAAG,oBAAT,cAC7C,mBAAKP,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACN2H,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMrH,GAAG,0BAAT,yBACbsH,QAASC,YAAUvK,KAAM,gBACzBwK,QAASxL,IAAGsK,eACZmB,QAASzL,IAAGsK,eACZ5G,MAAM,iBACNyC,MAAO8D,EAAQI,KACf3F,IAAKoG,KAIb,mBAAKrH,MAAM,oBAAoBC,MAAM,4CACjC,iBAAGD,MAAM,6BACLiI,UAAS3B,EAAM/F,GACf2H,QAAS3K,KAAKuJ,cAK9B,mBAAK9G,MAAM,uCACP,sBAAQ2H,KAAK,SAAS3H,MAAQ,WAAUiG,EAAoB,UAAY,mBAAoBkC,UAAWlC,EACnGiC,QAAS3K,KAAK4I,cACjB,iBAAGnG,MAAM,4BAMzByG,GAAgB,mBACb,mBAAKzG,MAAM,sBACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACNG,IAAKiI,QAAQ5B,EAAQ1C,SAAW0C,EAAQ1C,OAAOS,IAAIK,GAChD,mBAAK5E,MAAM,aACP,mBAAK0F,IAAKd,EAAI6C,YAAazH,MAAM,YAAYqI,QAAS9K,KAAK0J,qBAC3D,sBAAQjH,MAAM,sBACVkI,QAAS3K,KAAK+K,YACdC,YAAW3D,EAAI4D,MAClB,iBAAGxI,MAAM,iBAHV,IAG4B,YAAC,IAAD,CAAMO,GAAG,yBAAT,eAK5C,YAAC,IAAD,CAAQkI,OAAQjC,EAASkC,YAAanL,KAAKwJ,UAAW4B,OAAQpL,KAAKyI,qBAAsB4C,MAAOrL,KAAK2I,oBAAqB2C,UAAU,W,EAQ7I9C,Q,iKCvJT+C,EADL9L,Y,EAAD,cACgCC,YAC5BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAQnBgJ,aAAe9H,iBACX,MAAM,kBAAE4H,GAAsB,EAAKzH,MACnC,IAAKyH,EACD,OAAO,EAEX,MAAM,SAAEG,EAAW,SAAb,UAAuB2C,EAAvB,eAAkC1C,EAAiB,IAAO,EAAKlJ,OAC/D,MAAEmJ,GAAU,EAAKnJ,OACvB,WAAEoJ,GAAe,EAAKpJ,MAAMa,QACtB,QAAEwI,EAAU,IAAO,EAAKhI,MAC9B,EAAKhB,SAAS,CAAEyI,mBAAmB,IACzC,MAAMS,QAAiBH,EAAWyC,kBAAkB,CAAEzI,GAAI+F,EAAM/F,GAAIwI,YAAWvC,YAC3EE,GAAgC,MAApBA,EAASC,SACf,EAAKnJ,SAAS,CACVgJ,QAAS,IACV,KACCjK,IAAGsK,eAAeR,EAAe0C,MAErC3C,EAAS,CAAEE,QAAOI,WAAUqC,eAEhC,EAAKvL,SAAS,CAAEyI,mBAAmB,KAzBnC1I,KAAKiB,MAAQ,CACTyH,mBAAmB,GAEvB1I,KAAK8J,SAAW,GAyBpBtI,oBACI,MAAM,SAAEkK,EAAW,UAAa1L,KAAKJ,MACrC8L,IAGJ7J,SACI,MAAM,SAAEiI,GAAa9J,KAAKJ,OACpB,QAAEqJ,EAAF,kBAAWP,GAAsB1I,KAAKiB,OACtC,UAAEC,GAAclB,KAAKJ,MAAMa,QAC3B,KAAEuB,EAAO,IAAOd,EAChB6I,EAAmB/K,IAAG+K,iBAAiB/H,GAEvCgI,GADchL,IAAGiL,YAAYjI,GACjBA,EAAK2H,QAAU3H,EAAKuE,OAASvE,EAAKuE,OAAO,QAAKR,IAEhE,OACI,mBAAKtD,MAAM,SACP,mBAAKA,MAAM,uCACP,mBACIA,MAAQ,mEACRC,OAAUsH,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,mCAENF,GAAa,oBAAMvH,MAAM,sBAAsBC,MAAM,oBAAoBqH,IAE/E,mBAAKtH,MAAM,WAAWC,MAAM,uBAExB,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU0H,IAAI,mBAAkB,YAAC,IAAD,CAAMnH,GAAG,oBAAT,cAC7C,mBAAKP,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACN2H,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMrH,GAAG,0BAAT,yBACbsH,QAASC,YAAUvK,KAAM,WACzBwK,QAASxL,IAAGsK,eACZ5G,MAAM,iBACNyC,MAAO8D,EACPvF,IAAKoG,OAKrB,mBAAKrH,MAAM,uCACP,sBAAQ2H,KAAK,SAAS3H,MAAQ,WAAUiG,EAAoB,UAAY,mBAAoBkC,UAAWlC,EACnGiC,QAAS3K,KAAK4I,cACjB,iBAAGnG,MAAM,iC,EAW3B8I,O,+HCzFTI,EADLlM,Y,EAAD,cAC4BC,YACxBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAuBnBgM,iBAAmB9K,eAAOlB,EAAQ,EAAKA,OACzC,MAAM,iBAAEiM,GAAqBjM,EAAMa,OAE7BsD,GAAe,IAAIC,MAAOC,WAAa,EACjCC,GAAc,IAAIF,MAAOG,eAC/B,KAAEE,EAAOH,EAAT,MAAsBE,EAAQL,EAA9B,YAA4C5B,GAAgBvC,EAC5DmF,EAAcC,SAASX,IAASD,EAAQ,EAAIC,EAAO,EAAIA,GAAO,IAEpE,GAAIlC,EAAa,OACV0J,EAAiBvH,KAAK,CAAEC,MAAO,CACpCC,KAAMrC,EACN2J,WAAY/G,EACZgH,YAAa,KAEd,MAAM,aAAEC,GAAiBH,EACnBI,EAAqBD,EAAa,IAAM,GAC1CC,EAAmBjJ,UAChB6I,EAAiBvH,KAAK2H,EAAmBjJ,MAtC3ChD,KAAKiB,MAAQ,GAGjB,cAAcrB,EAAQI,KAAKJ,QAQ3B,gBAAgBA,EAAQI,KAAKJ,OAC/B,MAAM,UAAEkE,GAAclE,EAAMa,OAEhBsD,GAAe,IAAIC,MAAOC,WAAa,EACvCC,GAAc,IAAIF,MAAOG,eAE/B,MAAEC,EAAQL,EAAV,KAAwBM,EAAOH,EAA/B,YAA4C/B,GAAgBvC,QAC5DkE,EAAUQ,KAAK,CAAEC,MAAO,CAAEC,KAAMrC,EAAasC,0BAA0B,EAAMJ,OAAMD,SAASM,QAAS,CAAC,oBAyB1G,yBAAyB9E,EAAQI,KAAKJ,OAClC,MAAM,KAAEyE,EAAF,YAAQlC,EAAR,IAAqB+J,GAAQtM,GACnC,UAAEsB,GAActB,EAAMa,aAChBS,EAAUiL,kBAAkB,CAAE3H,KAAMrC,EAAakC,OAAM6H,QAGpE1K,oBACCxB,KAAKyB,UAGHE,0BAA0BC,GAClBA,EAAUyC,OAASrE,KAAKJ,MAAMyE,MAAQzC,EAAUO,cAAgBnC,KAAKJ,MAAMuC,aAC3EnC,KAAKyB,QAAQG,GAIrBC,SACF,MAAM,YAA6BM,GAAgBnC,KAAKJ,OAE5C,UAAEsB,EAAF,iBAAa2K,EAAb,UAA+B/H,GAAc9D,KAAKJ,MAAMa,QACxD,YAAE2L,GAAgBP,GAClB,KAAE7J,GAA6Bd,GAC/B,SAAEmL,EAAW,MAASrK,EAC5BsK,EAAStN,IAAGuN,UAAUF,GAEtB7H,EAAOV,EAAU0I,SAASrK,IAAgB,GAEpC4B,GAAe,IAAIC,MAAOC,WAAa,EACvCC,GAAc,IAAIF,MAAOG,eAEzB,KAAEE,EAAOH,EAAT,MAAsBE,EAAQL,GAAiB/D,KAAKJ,MAC1DmF,EAAcC,SAASZ,EAAQ,EAAIC,EAAO,EAAIA,EAAM,IAC9CoI,EAAS7J,IAAK8J,WAAc3H,EAAF,SAA0BA,EAAc,EAAhB,UACxD,IAAI4H,EAEJ,OACI,mBAAKlK,MAAM,wBACP,mBAAKA,MAAM,YACP,mBAAKA,MAAM,UACP,sBACI,oBAAMC,MAAM,kBAAkB0J,EAAYpJ,IAC1C,YAAC,IAAD,CAAMA,GAAG,wBAAT,yBAIZ,mBAAKP,MAAM,+BACNgK,GAAUA,EAAOzF,IAAK5C,IACnB,GAAIA,EAAMC,KAAOA,GAASD,EAAMC,OAASA,GAAQD,EAAMA,OAASA,EAC5D,MAAO,GAEX,MAAMwI,EAAYf,EAAiBgB,oBAAoBzI,EAAMC,KAAMD,EAAMA,MAAQ,GACjF,IAAKwI,EACD,MAAO,GAEXD,EAAgBC,EAChB,MACME,EADe5L,EAAU6L,wBAAwB3I,EAAMC,KAAMD,EAAMA,MAAQ,GAC5CwI,EAAY,IAC3CpF,EAASsF,EAAgB,IAAM,IAAMlK,IAAKE,OAAOgK,EAAe,GACtE,OACI,mBAAKrK,MAAM,qBASP,mBAAKA,MAAM,0BACP,mBAAKA,MAAQ,YAAWC,IAAM,yBAC1BA,MAAO,mCAEP,mBAAKD,MAAM,+CAA+CE,KAAK,cAC3DD,MAAQ,WAAU8E,mBAClBwF,gBAAexF,EAAQyF,gBAAc,IAAIC,gBAAc,OAEtDtK,IAAKE,OAAOgK,EAAe,GAJhC,OAQR,mBAAKrK,MAAM,cACN6J,EAAOlI,EAAMA,OADlB,IAC2BA,EAAMC,UAK3CsI,GAAiB,mBAAKlK,MAAM,sCAC1B,mBAAKA,MAAM,aACP,iBAAGA,MAAM,qBAEb,kBAAIA,MAAM,uBACN,YAAC,IAAD,CAAMO,GAAG,qCAAqCmK,OAAQ,CAAElC,KAAMzG,EAAKyG,OAAnE,wCAAiHzG,EAAKyG,KAAtH,MAEJ,iBAAGxI,MAAM,8BAA8BM,KAAK,kBAAiB,iBAAGN,MAAM,wBAAtE,IAA+F,YAAC,IAAD,CAAMO,GAAG,oBAAT,2B,EASxG2I,O,+dCnJf,MAAMvM,EAAe,CACjB8J,cAAc,EACdkE,gBAAgB,EAChBC,sBAAsB,EACtBC,gBAAgB,EAChB5E,mBAAmB,G,IAIjBF,EADL/I,Y,EAAD,cACuBC,YACnBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAwBnB6I,qBAAuB,KACnBzI,KAAKC,SAAS,CAAEyI,mBAAmB,KAzBpB,KA4BnBC,oBAAsB,KAClB3I,KAAKC,SAAS,CAAEyI,mBAAmB,KA7BpB,KAgCnB6E,SAAWzM,iBACP,MAAM,MAAEiI,EAAQ,GAAV,aAAcG,EAAd,kBAA4BR,GAAsB,EAAKzH,OACvD,SAAE4H,EAAW,SAAb,SAAuB2E,EAAW,GAAlC,QAAsCC,EAAtC,MAA+CC,EAAS,QAAO3E,EAAMvE,MAAW,EAAK5E,OAC3F,WAAEoJ,GAAe,EAAKpJ,MAAMa,OAE5B,IAAKiI,EACD,OAAO,EAGX,IAAKK,EAAMM,KACP,OAAO,EAEX,EAAKpJ,SAAS,CAAEyI,mBAAmB,IAEnC,IAAIW,EAAON,EAAMM,KACboE,IACApE,GAAS,OAAMoE,GAEfD,GAAYA,EAAS5G,OAAS,IAC9ByC,GAAS,OAAMmE,EAASxG,IAAI2G,GAAQ,IAAGA,GAAOC,KAAK,MAG7D,MAAMzE,QAAiBH,EAAW6E,OAAO,CAC/BzD,KAAMrB,EAAMqB,KACZ0D,MAAO/E,EAAM+E,MACbzE,OACA0E,OAAQhF,EAAMgF,OACdxH,OAAQwC,EAAMxC,OACdyH,OAAQjF,EAAMiF,OAAS,EAAI,EAC3BxJ,KAAMuE,EAAMvE,KACZyJ,QAASlF,EAAMkF,QACfC,IAAKnF,EAAMmF,IACXC,SAAUpF,EAAMoF,SAChBC,MAAOrF,EAAMqF,MACbC,KAAMtF,EAAMsF,KACZC,QAASvF,EAAMuF,QACfC,OAAQxF,EAAMwF,OACdC,UAAWzF,EAAMyF,UACjBC,QAAS1F,EAAM0F,QACff,UAENvE,GAAgC,MAApBA,EAASC,eACTJ,EAAW0F,eAAe,CAAEC,SAAUnB,IAC5C,EAAKvN,SAAS,CACV8I,MAAO,CACHqB,KAAM,EACN0D,MAAO,GACPzE,KAAM,GACN0E,OAAQ,KACRxH,OAAQ,GACRyH,OAAQ,EACRC,QAAS,GACTC,IAAK,GACLC,SAAU,GACVC,MAAO,KACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,KACXC,QAAS,OAEd,KACCzP,IAAGsK,eAAe,EAAKQ,SAAL,cACdZ,GACA,EAAKK,aAGbV,EAASM,EAASyF,OAEtB,EAAK3O,SAAS,CAAEyI,mBAAmB,KArGpB,KAwGnBc,UAAY,EAAGrE,YAEX,MAAM,MAAE4D,GAAU/I,KAAKiB,MACvB8H,EAAMxC,OAAOkD,QAAQtE,GACrBnF,KAAKC,SAAS,CAAE8I,WA5GD,KA+GnBQ,SAAW,KACP,MAAM,aAAEL,GAAiBlJ,KAAKiB,MAC9BjB,KAAKC,SAAS,CACViJ,cAAeA,KAlHJ,KAsHnB2F,iBAAmB,KACf,MAAM,qBAAExB,GAAyBrN,KAAKiB,MACtCjB,KAAKC,SAAS,CACVoN,sBAAuBA,KAzHZ,KA6HnByB,aAAe,KACX,MAAM,qBAAEzB,GAAyBrN,KAAKiB,MACtCjB,KAAKC,SAAS,CACVoN,sBAAuBA,KAhIZ,KAoInB0B,WAAa,KACT,MAAM,eAAEzB,GAAmBtN,KAAKiB,MAChCjB,KAAKC,SAAS,CACVqN,gBAAiBA,KAvIN,KA2InB0B,iBAAmB,KACf,MAAM,eAAE5B,GAAmBpN,KAAKiB,MAChCjB,KAAKC,SAAS,CACVmN,gBAAiBA,KA9IN,KAkJnB1D,mBAAsB3J,IAClB,MAAM4J,EAAQ5J,EAAEG,OAChByJ,EAAMC,QAAU,KAChBC,WAAW,KACPF,EAAMxB,KAAQ,IAAG,IAAInE,MACtB,MAvJY,KA0JnBiL,cAAgB,KACZ,MAAM,UAAE/N,GAAclB,KAAKJ,MAAMa,OAC3ByO,EAAchO,EAAUiO,kBAC9B,GAAIvM,IAAKiI,QAAQqE,IAAgBA,EAAYtI,OAAS,EAAG,CACrD,MAAM,MAAEmC,GAAU/I,KAAKiB,MACvB8H,EAAMvE,KAAO0K,EAAY,GAAGlM,GAC5BhD,KAAKC,SAAS,CAAE8I,YAhKL,KAoKnBqG,SAAYrP,IACRC,KAAKC,SAAS,CAAEoP,UAAU,IAC1BrQ,IAAGsK,eAAevJ,EAAEG,SAtKL,KAyKnBoP,YAAevP,KACXC,KAAKC,SAAS,CAAEoP,UAAU,KAxK1BrP,KAAKiB,M,+VAAL,EACI8H,MAAO,CACHqB,KAAM,EACN0D,MAAO,GACPzE,KAAM,GACN9C,OAAQ,GACRyH,OAAQ,EACRC,QAAS,GACTC,IAAK,GACLC,SAAU,GACVC,MAAO,EACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,GACXC,QAAS,KAEVrP,GAEPY,KAAK8J,SAAW,GAwJpBtI,oBACIxB,KAAKiP,gBAGTpN,SACI,MAAM,IAAE0N,EAAM,GAAR,OAAYC,EAAS,EAArB,SAAwBhC,EAAW,IAAOxN,KAAKJ,OAC/C,MAAEmJ,EAAQ,GAAV,aAAcG,EAAd,eAA4BkE,EAA5B,qBAA4CC,EAA5C,eAAkEC,EAAlE,kBAAkF5E,EAAlF,SAAqG2G,GAAarP,KAAKiB,OACvH,UAAEC,EAAF,SAAaV,GAAaR,KAAKJ,MAAMa,QACrC,KAAEuB,EAAO,GAAT,QAAayN,GAAYvO,EAEzB6I,EAAmB/H,EAAK0N,UAAa,GAAE9M,IAAK+M,QAAQ3N,EAAK0N,WAAW,KAAQ9M,IAAK+M,QAAQ3N,EAAK4N,UAAU,KAAW,GAAEhN,IAAK+M,QAAQ3N,EAAK6N,OAAS,IAAI,GAE1J,IAAI7F,EAAYhI,EAAK2H,QAAU3H,EAAKuE,OAASvE,EAAKuE,OAAO,QAAKR,GAC9D,GAAIgD,EAAMvE,KAAM,CACZ,MAAMsL,EAAS9K,SAAS+D,EAAMvE,KAAM,IAC9BA,EAAOtD,EAAUsL,SAASsD,GAAQ,GACxC9F,EAAYxF,EAAKmF,QAAUnF,EAAK+B,OAAS/B,EAAK+B,OAAO,QAAKR,GAE9D,MAAM,SAAEgK,GAAavP,EAErB,OACI,mBAAKiC,MAAM,cACP,mBAAKA,MAAM,OAEP,mBAAKA,MAAQ,OAAM8M,YAAcC,+EAAoFO,EAAW,QAAU,0BACtI,mBAAKtN,MAAM,uCACP,mBAAKA,MAAM,qBACP,mBACIA,MAAQ,iFACRC,OAAUsH,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,iCACRS,QAAS3K,KAAKgP,mBAEZhF,GAAa,oBAAMvH,MAAM,sBAAsBC,MAAM,oBAAoBqH,IAE/E,mBAAKtH,MAAM,oBAAoBC,MAAM,0BACjC,qBAAOD,MAAM,aAAaC,MAAM,qBAC5B,iBAAGD,MAAM,kCAAkCkI,QAAS3K,KAAKgP,sBAIrE,mBAAKvM,MAAM,gBAAgBC,MAAM,uBAC7B,mBAAKD,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU0H,IAAI,mBAAkB,YAAC,IAAD,CAAMnH,GAAG,cAAT,UAC7C,mBAAKP,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACN2H,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMrH,GAAG,oBAAT,uBACbsH,QAASC,YAAUvK,KAAM,cACzBwK,QAASxL,IAAGsK,eACZmB,QAASzK,KAAKoP,SACd1M,MAAM,iBACNyC,MAAO4D,EAAMM,KACb3F,IAAKC,GAAK3D,KAAK8J,SAAL,aAAgCnG,KAGjD0L,GAAY,mBAAK5M,MAAM,oBAAoBC,MAAM,+CAC9C,iBAAGD,MAAM,6BACLiI,UAAS3B,EAAM/F,GACf2H,QAAS3K,KAAKuJ,WAElB,iBAAG9G,MAAQ,UAA0B,IAAjBsG,EAAMiF,OAAe,eAAiB,6BACtDtD,UAAS3B,EAAM/F,GACf2H,QAAS3K,KAAK6O,mBAEjBY,GAAW,iBAAGhN,MAAQ,gCACnBiI,UAAS3B,EAAM/F,GACf2H,QAAS3K,KAAK+O,eAIzBvB,GAAYA,EAAS5G,OAAS,GAAK,mBAC/B4G,EAASxG,IAAI2G,GAAO,mBACjB,oBAAMlL,MAAM,mCACR,iBAAGM,KAAO,gBAAe4K,EAAOlL,MAAM,cAAtC,IAAqDkL,QAKrE,mBAAKlL,MAAM,+CACP,sBAAQ2H,KAAK,SAAS3H,MAAQ,WAAUiG,EAAoB,UAAY,mBAAoBkC,UAAWlC,EACnGiC,QAAS3K,KAAKuN,UACjB,iBAAG9K,MAAM,4BAK1B,uBACI,mBAAKA,MAAM,OACN2K,GAAkB,mBACf,mBAAK3K,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACNO,GAAG,OACHsH,QAASC,YAAUvK,KAAM,cACzBgQ,SAAUhQ,KAAKgP,kBAEf,sBAAQ7J,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMnC,GAAG,qBAAT,aAApB,OACCJ,IAAKiI,QAAQ7I,EAAKiO,QAAUjO,EAAKiO,MAAMjJ,IAAK8I,IACzC,MAAMtL,EAAOtD,EAAUsL,SAASsD,GAAQ,GACxC,OAAItL,GAAQA,EAAKwJ,OACL,sBAAQ7I,MAAOX,EAAKxB,GAAIkN,SAAUnH,EAAMvE,MAAQA,EAAKxB,GAAK,WAAa,IAAKwB,EAAKyG,MAEtF,MAGTjJ,EAAKiO,OAAS,mBACZ,sBAAQ9K,MAAM,IAAd,yBAOvBkI,GAAwB,mBACpBoC,GAAW,mBACR,mBAAKhN,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,qBAAO0H,IAAI,UAAX,kBAA0C,qBAAOnH,GAAG,SAASoH,KAAK,WAAWE,QAASC,YAAUvK,KAAM,gBAAiBmF,MAAO,EAAGgL,QAASpH,EAAMgF,OAAS,EAAI,QAM7K,mBAAKtL,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACNO,GAAG,OACHsH,QAASC,YAAUvK,KAAM,gBACzBmF,MAAO4D,EAAMiF,OACbgC,SAAUhQ,KAAK6O,kBAEf,sBAAQ1J,MAAO,EAAG+K,SAA0B,GAAhBnH,EAAMiF,OAAc,WAAa,IAA7D,MAAoE,YAAC,IAAD,CAAMhL,GAAG,8BAAT,sCACpE,sBAAQmC,MAAO,EAAG+K,SAA0B,GAAhBnH,EAAMiF,OAAc,WAAa,IAA7D,MAAoE,YAAC,IAAD,CAAMhL,GAAG,2BAAT,2CAMvFsK,GAAkB,mBACf,mBAAK7K,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,sBACIA,MAAM,iCACNO,GAAG,OACHsH,QAASC,YAAUvK,KAAM,cACzBmF,MAAO4D,EAAMqB,KACb4F,SAAUhQ,KAAK+O,YAEnB,sBAAQ5J,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMnC,GAAG,qBAAT,aAApB,OACI,sBAAQmC,MAAO,EAAG+K,SAAwB,GAAdnH,EAAMqB,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMpH,GAAG,sBAAT,WAClE,sBAAQmC,MAAO,EAAG+K,SAAwB,GAAdnH,EAAMqB,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMpH,GAAG,iBAAT,YAClE,sBAAQmC,MAAO,EAAG+K,SAAwB,GAAdnH,EAAMqB,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMpH,GAAG,sBAAT,kBAMrFkG,GAAgB,mBACb,mBAAKzG,MAAM,2BACP,mBAAKA,MAAM,mBACP,mBAAKA,MAAM,OACNG,IAAKiI,QAAQ9B,EAAMxC,SAAWwC,EAAMxC,OAAOS,IAAIK,GAC5C,mBAAK5E,MAAM,aACP,mBAAK0F,IAAKd,EAAI6C,YAAazH,MAAM,YAAYqI,QAAS9K,KAAK0J,qBAC3D,sBAAQjH,MAAM,sBACVkI,QAAS3K,KAAK+K,YACdC,YAAW3D,EAAI4D,MAClB,iBAAGxI,MAAM,iBAHV,YAQhB,YAAC,IAAD,CAAQyI,OAAQnC,EAAOoC,YAAanL,KAAKwJ,UAAW4B,OAAQpL,KAAKyI,qBAAsB4C,MAAOrL,KAAK2I,oBAAqB2C,UAAU,MAIzIvC,EAAMqB,KAAO,GAAK,mBACf,mBAAK3H,MAAM,eACP,yBAAO,YAAC,IAAD,CAAMO,GAAG,kBAAT,aACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,UACLX,QAASC,YAAUvK,KAAM,iBACzBmF,MAAO4D,EAAMkF,aAM7B,mBAAKxL,MAAM,eACP,yBAAO,YAAC,IAAD,CAAMO,GAAG,aAAT,QACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,MACLX,QAASC,YAAUvK,KAAM,aACzBmF,MAAO4D,EAAMmF,UAOlB,GAAdnF,EAAMqB,MAAa,mBAChB,mBAAK3H,MAAM,eACP,yBAAO,YAAC,IAAD,CAAMO,GAAG,cAAT,SACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,OACLX,QAASC,YAAUvK,KAAM,cACzBmF,MAAO4D,EAAMsF,UAM7B,mBAAK5L,MAAM,UACP,yBAAO,YAAC,IAAD,CAAMO,GAAG,gBAAT,WACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,SACLX,QAASC,YAAUvK,KAAM,gBACzBmF,MAAO4D,EAAMwF,YAM7B,mBAAK9L,MAAM,UACP,yBAAO,YAAC,IAAD,CAAMO,GAAG,iBAAT,YACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,UACLX,QAASC,YAAUvK,KAAM,iBACzBmF,MAAO4D,EAAMuF,aAM7B,mBAAK7L,MAAM,SACP,yBAAO,YAAC,IAAD,CAAMO,GAAG,kBAAT,aACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,WACLX,QAASC,YAAUvK,KAAM,kBACzBmF,MAAO4D,EAAMoF,cAM7B,mBAAK1L,MAAM,SACP,yBAAO,YAAC,IAAD,CAAMO,GAAG,eAAT,UACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,QACLX,QAASC,YAAUvK,KAAM,eACzBmF,MAAO4D,EAAMqF,qB,EAelD5F,Q,44BClef,MAAMpJ,EAAe,CACjBgR,eAAgB,GAChBC,iBAAiB,EACjBC,eAAgB,GAChBC,aAAc,GACdC,YAAa,GACbC,UAAW,GACXC,aAAc,I,IAMZC,EADLlR,Y,EAAD,cAC4BC,YACvBC,YAAYC,GAAO,MAChBC,MAAMD,GADU,YASpBgR,eAAiB9P,eAAOf,GACpB,MAAM,SAAE8I,EAAW,UAAa,EAAKjJ,MAC/B4L,EAAYzL,EAAEG,OAAO2Q,QAAQ,qBAAqBzQ,QAAQ4C,IAC1D,MAAE+F,GAAU,EAAKnJ,OACvB,WAAEoJ,GAAe,EAAKpJ,MAAMa,QAEtB,YAAE+P,GAAgB,EAAKvP,MAC7BuP,EAAYhF,IAAa,EACzB,EAAKvL,SAAS,CAAEuQ,gBAChB3G,WAAW,KACP,MAAM,YAAE2G,GAAgB,EAAKvP,aACtBuP,EAAYhF,GACnB,EAAKvL,SAAS,CAAEuQ,iBACjB,MAET,MAAMrH,QAAiBH,EAAW8H,iBAAiB,CAAE9N,GAAI+F,EAAM/F,GAAIwI,cAI7D,OAHFrC,GAAgC,MAApBA,EAASC,QACfP,EAAS,CAAEuB,KAAM,cAAerB,QAAOyC,YAAWrC,cAE/C,GA5BS,KA+BpBsH,UAAY3P,eAAOf,GACf,MAAM,SAAE8I,EAAW,UAAa,EAAKjJ,MAC/BmR,EAAUhR,EAAEG,OAAO2Q,QAAQ,mBAAmBzQ,QAAQ4C,GACtDwI,EAAYzL,EAAEG,OAAO2Q,QAAQ,mBAAmBzQ,QAAQ6I,SACxD,MAAEF,GAAU,EAAKnJ,OACvB,WAAEoJ,GAAe,EAAKpJ,MAAMa,QAEtB,UAAEgQ,GAAc,EAAKxP,MAC3BwP,EAAUM,IAAW,EACrB,EAAK9Q,SAAS,CAAEwQ,cAChB5G,WAAW,KACP,MAAM,UAAE4G,GAAc,EAAKxP,aACpBwP,EAAUM,GACjB,EAAK9Q,SAAS,CAAEwQ,eACjB,MAET,MAAMtH,QAAiBH,EAAWgI,sBAAsB,CAAEhO,GAAI+F,EAAM/F,GAAI+N,UAASvF,cACvErC,GAAgC,MAApBA,EAASC,QACrBP,EAAS,CAAEuB,KAAM,YAAarB,QAAOyC,YAAWuF,UAAS5H,cAjD7C,KAqDpB8H,aAAenQ,eAAOf,GAClB,MAAMyL,EAAYzL,EAAEG,OAAOC,cAAcC,QAAQ4C,IAAMjD,EAAEG,OAAOE,QAAQ4C,IAElE,eAAEoN,GAAmB,EAAKnP,MAChCmP,EAAe5E,IAAc4E,EAAe5E,GAClD,EAAKvL,SAAS,CACbmQ,kBACE,KACW,EAAKtG,SAAS0B,IACd,EAAK1B,SAAS0B,GAAW0F,WA9DjB,KAmEpBC,eAAiB,KACnB,MAAM,gBAAEd,GAAoBrQ,KAAKiB,MACjCjB,KAAKC,SAAS,CACboQ,iBAAkBA,KAtEG,KA0EpBe,cAAiBrR,IACb,MAAMyL,EAAYzL,EAAEG,OAAOC,cAAcC,QAAQ4C,IAAMjD,EAAEG,OAAOE,QAAQ4C,IACxE,eAAEsN,GAAmBtQ,KAAKiB,MAC1BqP,EAAe9E,IAAc8E,EAAe9E,GAClDxL,KAAKC,SAAS,CACbqQ,oBA/EqB,KAmFpBe,WAActR,IACV,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,KAAKzQ,SACrC,SAAEkR,EAAW,IAAOtR,KAAKiB,MACzBqQ,EAAStO,IAAOsO,EAAStO,GAC/BhD,KAAKC,SAAS,CACJsR,kBAAmB,GACnBC,SAAU,GACnBF,cA1FqB,KA8FpBG,WAAc1R,IACV,MAAM,GAAEiD,EAAIiG,QAASyI,GAAoB3R,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SACpE,SAAEoR,EAAW,IAAOxR,KAAKiB,MACzBuQ,EAASxO,IAAOwO,EAASxO,GAC/BhD,KAAKC,SAAS,CACJsR,kBAAmB,GAC5BC,WACSF,SAAU,GACVI,qBAtGY,KA0GpBC,oBAAuB5R,IACnB,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAC1C,kBAAEmR,EAAoB,IAAOvR,KAAKiB,MAClCsQ,EAAkBvO,IAAOuO,EAAkBvO,GACjDhD,KAAKC,SAAS,CACbsR,oBACSC,SAAU,GACVF,SAAU,MAjHE,KAqHpBM,cAAgB9Q,eAAOf,GACnB,MAAQiD,GAAIwI,GAAczL,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAC/C,MAAE2I,GAAU,EAAKnJ,OACjB,WAAEoJ,GAAe,EAAKpJ,MAAMa,aAC5BuI,EAAW6I,mBAAmB,CAAE7O,GAAI+F,EAAM/F,GAAIwI,cACpD,EAAKvL,SAAS,CACVyR,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,MA9HE,KAkIpBQ,mBAAqBhR,eAAOf,GACxB,MAAQiD,GAAI+N,EAASgB,UAAWvG,GAAczL,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SACnE,MAAE2I,GAAU,EAAKnJ,OACjB,WAAEoJ,GAAe,EAAKpJ,MAAMa,aAC5BuI,EAAWgJ,wBAAwB,CAAEhP,GAAI+F,EAAM/F,GAAIwI,YAAWuF,YACpE,EAAK9Q,SAAS,CACVyR,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,MA3IE,KAgJpBW,YAAcnR,eAAOf,GACjB,MAAQiD,GAAIwI,GAAczL,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAC7CsR,gBAAiBzI,GAAY,EAAKhI,OACpC,MAAE8H,GAAU,EAAKnJ,OACjB,WAAEoJ,GAAe,EAAKpJ,MAAMa,aAC5BuI,EAAWkJ,iBAAiB,CAAElP,GAAI+F,EAAM/F,GAAIwI,YAAWvC,YAC7D,EAAKhJ,SAAS,CACVyR,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,MA1JE,KA8JpBa,iBAAmBrR,eAAOf,GACtB,MAAQiD,GAAI+N,EAASgB,UAAWvG,GAAczL,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SACjEsR,gBAAiBzI,GAAY,EAAKhI,OACpC,MAAE8H,GAAU,EAAKnJ,OACjB,WAAEoJ,GAAe,EAAKpJ,MAAMa,aAC5BuI,EAAWoJ,sBAAsB,CAAEpP,GAAI+F,EAAM/F,GAAIwI,YAAWuF,UAAS9H,YAC3E,EAAKhJ,SAAS,CACVyR,gBAAiB,GAC1BH,kBAAmB,GACVC,SAAU,GACVF,SAAU,MAxKE,KA4KpBe,UAAatS,IACf,MAAM,GAAEiD,EAAF,IAAMsP,GAAQvS,EAAEG,OAAO2Q,QAAQ,OAAOzQ,SAChC,aAAEmQ,GAAiBvQ,KAAKiB,MAC9BsP,EAAavN,GAAMsP,EACnBtS,KAAKC,SAAS,CAAEsQ,kBAhLA,KAmLpBgC,UAAYzR,eAAOf,GACfA,EAAEyS,iBACFzS,EAAE2F,kBACF,MAAM,QAAE+M,EAAF,UAAWV,GAAchS,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SACpD,MAAE2I,GAAU,EAAKnJ,OACjB,UAAEsB,EAAF,WAAa8H,GAAe,EAAKpJ,MAAMa,QACvC,KAAEuB,GAASd,GACX,aAAEwP,EAAe,GAAjB,eAAqBgC,EAAiB,IAAO,EAAKzR,MAClD0R,EAAO,GAAEZ,IAAYU,EAAW,IAAGA,EAAW,KACpD/B,EAAaiC,GAAO,EAEhBD,EAAeC,GADfF,QAC4BzJ,EAAW4J,sBAAsB,CAAEb,YAAWU,UAAS1J,QAAO/G,eAE9DgH,EAAW6J,iBAAiB,CAAEd,YAAWhJ,QAAO/G,SAEhF,EAAK/B,SAAS,CAAEyQ,eAAcgC,oBAlMd,KAqMpBhC,aAAgB3Q,IACZ,MAAM,QAAE0S,EAAF,UAAWV,GAAchS,EAAEG,OAAO2Q,QAAQ,UAAUzQ,QAC1DL,EAAEyS,iBACFzS,EAAE2F,kBACF,MAAM,aAAEgL,EAAe,IAAO1Q,KAAKiB,MACnCyP,EAAc,GAAEqB,IAAYU,EAAW,IAAGA,EAAW,MAAQ,EAC7DzS,KAAKC,SAAS,CAAEyQ,kBAzMhB1Q,KAAKiB,MAAL,OACO7B,GADP,IAEIiR,gBAAiBzQ,EAAMyQ,kBAE3BrQ,KAAK8J,SAAW,GAwMpBjI,SACI,MAAM,eAAEuO,EAAF,gBAAkBC,EAAlB,eAAmCC,EAAnC,aAAmDC,EAAnD,SAAiEe,EAAW,GAA5E,SAAgFE,EAAW,GAA3F,kBACFD,EAAoB,GADlB,gBACsBG,EADtB,YACuClB,EADvC,aACoDE,EAAe,GADnE,eACuEgC,EAAiB,IAAO1S,KAAKiB,OAC1G,MAAE8H,EAAF,SAASF,EAAW,SAApB,SAA8B6C,EAAW,SAAzC,QAAmDoH,GAAU,GAAU9S,KAAKJ,OACtE,UAAEsB,EAAF,WAAa8H,GAAehJ,KAAKJ,MAAMa,QACrCuB,KAAM+Q,GAAyB7R,GACjC,SAAEmL,EAAW,MAAS0G,EAE5B,IAGIC,EAHAC,EAAmB,GACnBC,EAAgB,EAChBC,EAAmB,EAcvB,OAZIpK,EAAMqK,WACNF,EAAgBnK,EAAMqK,SAASxM,OAC3ByJ,EACA4C,EAAmBlK,EAAMqK,UAGzBJ,EAAeF,EAAU,EApOpB,EAqOLG,EAAmBlK,EAAMqK,SAASC,MAAMC,KAAKC,IAAIL,EAAgBF,EAAc,KAEnFG,EAAmBF,EAAiBrM,QAIpC,uBACKmC,GAASnG,IAAKiI,QAAQoI,IAAqBA,EAAiBO,UAAUxM,IAAKiC,IACxE,MAAM,KAAEjH,EAAO,IAAOiH,EAChBgH,EAAQjH,EAAWyK,wBAAwBzR,EAAKgB,IAChD+G,EAAmB/K,IAAG+K,iBAAiB/H,GACvCiI,EAAcjL,IAAGiL,YAAYjI,GAC7BgI,EAAYhI,EAAK2H,QAAU3H,EAAKuE,OAASvE,EAAKuE,OAAO,QAAKR,GAC1D2N,EAAkBzK,EAAQ0K,OAAS1K,EAAQ0K,MAAMC,UAAU7T,GAAKA,EAAEiC,OAAS+Q,EAAY/P,KAAO,EAEpG,IAAI6Q,EAAmB,GACnBC,EAAe,EACfC,EAAkB,EAClB9K,EAAQmK,WACRU,EAAe7K,EAAQmK,SAASxM,OAE5BiN,EADAvD,EAAerH,EAAQjG,IACJiG,EAAQmK,SAERnK,EAAQmK,SAASC,MAAM,EAAGL,GAEjDe,EAAkBF,EAAiBjN,QAGvC,MAAML,EAAS,GACf,GAAI0C,EAAQ1C,OAAQ,CAChB,MAAMyN,EAAOC,YAAKhL,EAAQ1C,QAC1BA,EAAOkD,QAAQuK,GAEnB,MAAME,EAAW3D,EAAatH,EAAQjG,IAAMuN,EAAatH,EAAQjG,IAAM,EACjEmR,EAAe5N,GAAUA,EAAO2N,GAAY3N,EAAO2N,GAAY,MAE/D,uBAAEjS,EAAyB,IAAOgH,EAElCmL,EAAcpL,EAAWqL,uBAAuB,CAClDtL,QACAgJ,UAAW9I,EAAQjG,GACnBsR,WAAYjI,KACVqG,EAAezJ,EAAQjG,IAC7B,IAAIqG,EAAO+K,GAAenL,EAAQA,QAKlC,OAJIyH,EAAazH,EAAQjG,MACrBqG,EAAOJ,EAAQA,SAIf,mBAAKxG,MAAM,OACP,mBAAKA,MAAM,iDACP,mBACIA,MAAQ,mEACRC,OAAUsH,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,mCAENlI,EAAK2H,OAAS,oBAAMlH,MAAM,sBAAsBC,MAAM,oBAAoBqH,IAEhF,mBAAKtH,MAAM,wBAAwBC,MAAM,uBACrC,mBAAKD,MAAM,qDAENsQ,EAAY/P,KAAOhB,EAAKgB,IAAM,mBAC3B,oBAAMP,MAAM,8CACR,iBAAGA,MAAM,oBAAoBkI,QAAS3K,KAAKqR,WAAY3G,UAASzB,EAAQjG,OAG/EsO,EAASrI,EAAQjG,KAAO,mBACrB,mBAAKP,MAAM,qEAAqEC,MAAM,wDAClF,sBAAQD,MAAM,mCAAmCkI,QAAS3K,KAAKyR,WAAY/G,UAASzB,EAAQjG,GAAIuR,eAActL,EAAQA,SAAS,iBAAGxG,MAAM,gBAAxI,SACA,uBACA,sBAAQA,MAAM,mCAAmCkI,QAAS3K,KAAK2R,oBAAqBjH,UAASzB,EAAQjG,IAAI,iBAAGP,MAAM,qBAAlH,aAIR,uBACI,oBAAMC,MAAM,sBACR,kBAAID,MAAM,wBAAwBC,MAAM,qBACnCV,EAAKwS,QAAUxS,EAAKwS,SAAWzB,EAAYyB,OAAS,mBACjD,iBAAGzR,KAAO,UAASf,EAAKwS,QAAWvK,IACjC,mBACDA,GAEJgG,GAASA,EAAMrJ,OAAS,GAAK,mBAC1B,oBAAMnE,MAAM,uCACPwN,EAAMwE,OAAO1U,GAAkB,IAAbA,EAAEiO,QAAcqF,MAAM,EAAG,GAAGrM,IAAI0N,GAAK,wBAClD,iBAAG3R,KAAO,iBAAgB2R,EAAEF,QAAWE,EAAEzJ,WAO1DuG,EAASvI,EAAQjG,IAAM,mBACpB,mBAAKP,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU0H,IAAI,mBAAkB,YAAC,IAAD,CAAMnH,GAAG,oBAAT,cAC7C,mBAAKP,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACN2H,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMrH,GAAG,0BAAT,yBACbsH,QAASC,YAAUvK,KAAM,mBACzBwK,QAASxL,IAAGsK,eACZmB,QAASzL,IAAGsK,eACZ5G,MAAM,iBACNyC,MAAOuM,OAKvB,mBAAKjP,MAAM,uCACP,sBAAQ2H,KAAK,SAAS3H,MAAM,uBACxBkI,QAAS3K,KAAKiS,YACdvH,UAASzB,EAAQjG,IACpB,iBAAGP,MAAM,2BAGhB,mBACF,YAAC,IAAD,CAAUkS,SAAU3V,IAAG4V,cAAcvL,EAAMJ,EAAQ1C,OAAQ8F,GAAWwI,aAAc7V,IAAG8V,wBAE1FvD,EAAkBtI,EAAQjG,KAAO,mBAAKP,MAAM,sBACzC,sBAAQA,MAAM,4BAA4BkI,QAAS3K,KAAK4R,cAAelH,UAASzB,EAAQjG,IAAI,iBAAGP,MAAM,qBAArG,WACA,sBAAQA,MAAM,gCAAgCkI,QAAS3K,KAAK2R,oBAAqBjH,UAASzB,EAAQjG,IAAI,iBAAGP,MAAM,wBAA/G,cAKZ,uBACI,mBAAKA,MAAM,6BACN0R,GAAgB,mBAAK1R,MAAM,kCACxB,mBACIA,MAAQ,+CACRC,MAAQ,oBACRqS,WAAY/U,KAAK4Q,eACjBlG,UAASzB,EAAQjG,IAEjB,mBAAKkF,QAAQ,OAAOzF,MAAQ,YAAYC,MAAM,oBAAoByF,IAAKgM,EAAa/L,eAEvFoI,EAAYvH,EAAQjG,KAAO,oBAAMP,MAAM,mDAAmDC,MAAM,+EAC7F,iBAAGD,MAAM,6BAGhB8D,GAAUA,EAAOK,OAAS,GAAK,mBAAKnE,MAAM,iCACtCG,IAAKiI,QAAQtE,IAAWA,EAAOS,IAAI,CAACK,EAAKiL,IAC9B,mBACJ,mBACI7P,MAAQ,2BACRC,MAAQ,wCAER,mBAAKwF,QAAQ,OAAOzF,MAAQ,mBAAmBC,MAAM,oBAAoByF,IAAKd,EAAI6C,YAAaS,QAAS3K,KAAKqS,UAAW3H,UAASzB,EAAQjG,GAAIgS,WAAU1C,WAQnL,yBACI,sBAAQ7P,MAAQ,8CAA4CiR,EAAkB,eAAiB,IAC3F/I,QAAS3K,KAAK4Q,eACdlG,UAASzB,EAAQjG,GACjB4H,SAAU8I,GAETA,EAAkB,YAAC,IAAD,CAAM1Q,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,QANxE,IASI,sBAAQP,MAAM,2BACVkI,QAAS3K,KAAKiR,aACdvG,UAASzB,EAAQjG,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAEHiG,EAAQoD,WAAaA,GAAY,wBAE5BqE,EAAazH,EAAQjG,KAAOoR,EAAc,mBACxC,sBACIhK,KAAK,SACL3H,MAAM,sBACNwS,iBAAgBhM,EAAQjG,GACxB2H,QAAS3K,KAAK0Q,cAEd,iBAAGjO,MAAM,eANb,KAM8B,YAAC,IAAD,CAAMO,GAAG,gCAAT,mBAE5B,mBACF,sBACIoH,KAAK,SACL3H,MAAM,sBACNkI,QAAS3K,KAAKuS,UACd0C,iBAAgBhM,EAAQjG,IAExB,iBAAGP,MAAM,eANb,IAM6B,YAAC,IAAD,CAAMO,GAAG,qBAAT,sBAjCzC,IAsCI,sBAAQP,MAAM,qCACTG,IAAKsS,eAAejM,EAAQkM,YAAa,IAAInR,KAAQ,CAAEoR,OAAQ,UAC/DnM,EAAQoM,aAAe,mBACpB,oBAAM5S,MAAM,0BAAZ,WAA8CG,IAAKsS,eAAejM,EAAQoM,YAAa,IAAIrR,KAAQ,CAAEoR,OAAQ,UAA7G,SAKfnM,EAAQ0K,OAAS1K,EAAQ0K,MAAM/M,OAAS,GAAK,qBAAOnE,MAAM,4DAA4DC,MAAM,8BACzH,iBAAGD,MAAM,kCADiC,IACGwG,EAAQ0K,MAAM/M,SAGnE,mBAAKnE,MAAM,wBACNwG,GAAWrG,IAAKiI,QAAQgJ,IAAqBA,EAAiB7M,IAAKsO,IAChE,MAAM,KAAEtT,EAAO,IAAOsT,EAChBrF,EAAQjH,EAAWyK,wBAAwBzR,EAAKgB,IAChD+G,EAAmB/K,IAAG+K,iBAAiB/H,GACvCiI,EAAcjL,IAAGiL,YAAYjI,GAC7BgI,EAAYhI,EAAK2H,QAAU3H,EAAKuE,OAASvE,EAAKuE,OAAO,QAAKR,GAC1DwP,EAAgBD,EAAM3B,OAAS2B,EAAM3B,MAAMC,UAAU7T,GAAKA,EAAEiC,OAAS+Q,EAAY/P,KAAO,GACxF,uBAAEf,EAAyB,IAAOqT,EAElCE,EAAmBxM,EAAWyM,4BAA4B,CAC5D1M,QACAgJ,UAAW9I,EAAQjG,GACnByP,QAAS6C,EAAMtS,GACfsR,WAAYjI,KACVqG,EAAgB,GAAEzJ,EAAQjG,MAAMsS,EAAMtS,MAC5C,IAAI0S,EAAYF,GAAoBF,EAAMrM,QAK1C,OAJIyH,EAAc,GAAEzH,EAAQjG,MAAMsS,EAAMtS,QACpC0S,EAAYJ,EAAMrM,SAIlB,mBAAKxG,MAAM,OACP,mBAAKA,MAAM,wCACP,mBACIA,MAAQ,mEACRC,OAAUsH,EAAa,0BAAyBA,EAAUE,yCAA2C,IAA7F,mCAENlI,EAAK2H,OAAS,oBAAMlH,MAAM,sBAAsBC,MAAM,oBAAoBqH,IAEhF,mBAAKtH,MAAM,wBAAwBC,MAAM,uBACrC,mBAAKD,MAAM,6CACVsQ,EAAY/P,KAAOhB,EAAKgB,IAAM,mBACvB,oBAAMP,MAAM,8CACR,iBAAGA,MAAM,oBAAoBkI,QAAS3K,KAAKqR,WAAY3G,UAAS4K,EAAMtS,OAG7EsO,EAASgE,EAAMtS,KAAO,mBACnB,mBAAKP,MAAM,qEAAqEC,MAAM,wDAClF,sBAAQD,MAAM,mCAAmCkI,QAAS3K,KAAKyR,WAAY/G,UAAS4K,EAAMtS,GAAIuR,eAAce,EAAMrM,SAAS,iBAAGxG,MAAM,gBAApI,SACA,uBACA,sBAAQA,MAAM,mCAAmCkI,QAAS3K,KAAK2R,oBAAqBjH,UAAS4K,EAAMtS,IAAI,iBAAGP,MAAM,qBAAhH,aAIR,oBAAMC,MAAM,sBACR,kBAAID,MAAM,wBAAwBC,MAAM,qBACnCuH,EACAgG,GAASA,EAAMrJ,OAAS,GAAK,mBAC1B,oBAAMnE,MAAM,uCACPwN,EAAMwE,OAAO1U,GAAkB,IAAbA,EAAEiO,QAAcqF,MAAM,EAAG,GAAGrM,IAAI0N,GAAK,wBAClD,iBAAG3R,KAAO,iBAAgB2R,EAAEF,OAAU/R,MAAM,QAA5C,IAAqDiS,EAAEzJ,WAOxEuG,EAAS8D,EAAMtS,IAAM,mBAClB,mBAAKP,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU0H,IAAI,mBAAkB,YAAC,IAAD,CAAMnH,GAAG,oBAAT,cAC7C,mBAAKP,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACN2H,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMrH,GAAG,0BAAT,yBACbsH,QAASC,YAAUvK,KAAM,mBACzBwK,QAASxL,IAAGsK,eACZmB,QAASzL,IAAGsK,eACZ5G,MAAM,iBACNyC,MAAOuM,OAKvB,mBAAKjP,MAAM,uCACP,sBAAQ2H,KAAK,SAAS3H,MAAM,uBACxBkI,QAAS3K,KAAKmS,iBACd8C,iBAAgBhM,EAAQjG,GACxB0H,UAAS4K,EAAMtS,IAClB,iBAAGP,MAAM,2BAGhB,mBACF,YAAC,IAAD,CAAUkS,SAAU3V,IAAG4V,cAAcc,EAAWJ,EAAM/O,OAAQ8F,GAAWwI,aAAc7V,IAAG8V,wBAE7FvD,EAAkB+D,EAAMtS,KAAO,mBAAKP,MAAM,sBACvC,sBAAQA,MAAM,4BAA4BkI,QAAS3K,KAAK8R,mBAAoBpH,UAAS4K,EAAMtS,GAAIiS,iBAAgBhM,EAAQjG,IAAI,iBAAGP,MAAM,qBAApI,WACA,sBAAQA,MAAM,gCAAgCkI,QAAS3K,KAAK2R,oBAAqBjH,UAAS4K,EAAMtS,IAAI,iBAAGP,MAAM,wBAA7G,cAKZ,yBACI,sBAAQA,MAAQ,4CAA0C8S,EAAgB,eAAiB,IACvF5K,QAAS3K,KAAKyQ,UACd8D,eAActL,EAAQjG,GACtB0H,UAAS4K,EAAMtS,GACf4H,SAAU2K,GAETA,EAAgB,YAAC,IAAD,CAAMvS,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,QAPtE,IAUI,sBAAQP,MAAM,2BACVkI,QAAS3K,KAAKiR,aACdvG,UAASzB,EAAQjG,IAEjB,YAAC,IAAD,CAAMA,GAAG,wBAAT,cAEHsS,EAAMjJ,WAAaA,GAAY,wBAE1BqE,EAAc,GAAEzH,EAAQjG,MAAMsS,EAAMtS,OAASwS,EAAmB,mBAC9D,sBACIpL,KAAK,SACL3H,MAAM,sBACNwS,iBAAgBhM,EAAQjG,GACxB2S,eAAcL,EAAMtS,GACpB2H,QAAS3K,KAAK0Q,cAEd,iBAAGjO,MAAM,eAPb,KAO8B,YAAC,IAAD,CAAMO,GAAG,gCAAT,mBAE5B,mBACF,sBACIoH,KAAK,SACL3H,MAAM,sBACNkI,QAAS3K,KAAKuS,UACd0C,iBAAgBhM,EAAQjG,GACxB2S,eAAcL,EAAMtS,IAEpB,iBAAGP,MAAM,eAPb,IAO6B,YAAC,IAAD,CAAMO,GAAG,qBAAT,sBApCzC,IAyCI,sBAAQP,MAAM,qCACTG,IAAKsS,eAAeI,EAAMH,YAAa,IAAInR,KAAQ,CAAEoR,OAAQ,UAC7DE,EAAMD,aAAe,mBAClB,oBAAM5S,MAAM,0BAAZ,WAA8CG,IAAKsS,eAAeI,EAAMD,YAAa,IAAIrR,KAAQ,CAAEoR,OAAQ,UAA3G,SAKfE,EAAM3B,OAAS,qBAAOlR,MAAM,4DAA4DC,MAAM,8BAC3F,iBAAGD,MAAM,kCADG,IACiC6S,EAAM3B,MAAM/M,YAM5EkN,EAAeC,EAAkB,GAAK,uBACnC,sBAAQtR,MAAM,2BACVkI,QAAS3K,KAAKoR,cACd1G,UAASzB,EAAQjG,IAEjB,YAAC,IAAD,CAAMA,GAAG,qBAAqBmK,OAAQ,CAAEyI,KAAM9B,EAAeC,IAA7D,OACSD,EAAeC,EADxB,4BAOX3D,EAAenH,EAAQjG,KAAO,mBAAKP,MAAM,iDACtC,YAAC,IAAD,CAAmBhC,OAAQT,KAAKJ,MAAMa,OAAQsI,MAAOA,EACjD2C,SAAUA,EACV7C,SAAUA,EACV2C,UAAWvC,EAAQjG,GACnB8G,SAAUnG,GAAK3D,KAAK8J,SAASb,EAAQjG,IAAMW,EAC3CmF,eAAgB9I,KAAK8J,SACrB6I,IAAM,sBAAqB1J,EAAQjG,SAMtDkQ,EAAgBC,EAAmB,GAAK,uBACrC,sBAAQ1Q,MAAM,2BACVkI,QAAS3K,KAAKmR,gBAEd,YAAC,IAAD,CAAMnO,GAAG,qBAAqBmK,OAAQ,CAAEyI,KAAM1C,EAAgBC,IAA9D,OACSD,EAAgBC,EADzB,2BAKP9C,GAAmB,uBAChB,sBAAQ5N,MAAM,2BACVkI,QAAS3K,KAAKmR,gBAEd,YAAC,IAAD,CAAMnO,GAAG,8BAAT,mC,EAQT2N,Q,iECpoBR,SAASkF,IACf,IACC,GAAIC,OAAQ,OAAOA,OAEpB,MAAO/V,GACN,QCNK,SAASgW,IACf,IAAID,EAASD,IACb,OAAKC,OAEEA,EAAOE,aAAcF,EAAOE,WAAW,8BAA8BC,UACjEH,EAAOI,YAA6C,IAAhCJ,EAAOI,UAAUC,cAH5B,EAkCrB,SAASC,IACRC,EAAMC,UAAUC,QAAQC,GAAYA,EAASH,EAAMI,SAoC7C,SAASC,EAAmBF,GAClC,IAAKH,EAAMM,sBAAuB,CACjC,IAAIb,EAASD,IACb,IAAKC,GAAUC,IAAgB,OAAO,KACtCM,EAAMM,sBAAwB5W,IAC7BA,EAAEyS,iBACF,IAAIoE,EAAgB7W,EACpBsW,EAAMI,OAAS,IAAO,IAAII,QAAQC,IACjCT,EAAMU,qBAAuB,KAC5BD,GAAQ,IAEThB,EAAOkB,iBAAiB,eAAgBX,EAAMU,sBAC9CH,EAAcH,SACdG,EAAcK,WAAWC,KAAKC,IACJ,aAAzBA,EAAaC,SAA0BN,GAAQ,OAE9CI,KAAKG,IACPT,EAAgB,KAChBP,EAAMU,sBAAwBjB,EAAOwB,oBAAoB,eAAgBjB,EAAMU,sBAC3EM,IACHhB,EAAMI,OAAS,KACfL,KAEMiB,IAERjB,KAEDN,EAAOkB,iBAAiB,sBAAuBX,EAAMM,uBAEtD,OAAIH,GACHH,EAAMC,UAAU7M,KAAK+M,GACrBH,EAAMI,QAAUD,EAASH,EAAMI,QACxB,KAAMc,OAzESC,EAyEMhB,OAxE7BH,EAAMC,UAAYD,EAAMC,UAAU7B,OAAO+B,GAAYA,IAAagB,IADnE,IAAwBA,IA2EhB,IAzFD,WACN,IAAI1B,EAASD,IACTQ,EAAMM,wBACTb,GAAUA,EAAOwB,qBAAuBxB,EAAOwB,oBAAoB,sBAAuBjB,EAAMM,uBAChGN,EAAMM,sBAAwB,MAE3BN,EAAMU,uBACTjB,GAAUA,EAAOwB,qBAAuBxB,EAAOwB,oBAAoB,eAAgBjB,EAAMU,sBACzFV,EAAMU,qBAAuB,MAE9BV,EAAMI,OAAS,KACfJ,EAAMC,UAAY,GA8ELmB,GA6DP,SAASC,IACf,MAAOvB,GAAcwB,YAAS5B,MACvBa,EAAegB,GAAoBD,YAAS,MASnD,OARAE,YAAU,IAAMnB,EAAmB,CAACD,EAAQqB,KAC3CF,EAAiB,CAAEnB,OAAQ,IAC1BA,IAASS,KAAKa,IACbA,GAAaD,IACNC,SAIF,CAAEhC,aAAcI,EAAYS,cAAeA,GAAiBA,EAAcH,QC1LpE,SAASuB,IACvB,MAAM,cAAEpB,EAAF,aAAiBb,GAAiB2B,IACxC,OAAOd,GACA,mBAAKnU,MAAM,eACP,iBAAGA,MAAM,kBAAkBM,KAAK,IAAIkV,QAASrB,GACzC,YAAC,IAAD,CAAM5T,GAAG,uBAAT,yBAGP+S,GAAgB,G,8DDOzB,MAAMM,EAAQ,CACbI,OAAQ,KACRE,sBAAuB,KACvBI,qBAAsB,KACtBT,UAAW,IA0KGoB,I,k/BE7Jf,MAAMtY,EAAe,CACpBgR,eAAgB,GAEb8H,YAAa,GACbC,cAAe,EACfC,MAAO,EACPC,MAAO,GACP7I,OAAQ,EACR8I,uBAAuB,EACvBC,OAAO,EACPC,WAAW,IAAIxU,MAAOyU,W,IAIpBC,EADLjZ,Y,EAAD,cACiCC,YAC7BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YASnB+Y,WAAc5Y,IACVA,EAAE2F,kBACF3F,EAAEyS,iBACF,MAAM,SAAEoG,GAAa5Y,KAAKiB,MAC1BjB,KAAKC,SAAS,CAAE2Y,UAAWA,KAbZ,KAgBtBV,YAAcpX,eAAOf,GACd,MAAM8Y,EAAY7T,SAASjF,EAAEG,OAAO2Q,QAAQ,mBAAmBzQ,QAAQ4C,GAAI,KAC3E,aAAEjC,GAAiB,EAAKnB,MAAMa,QAExB,YAAEyX,GAAgB,EAAKjX,MAC7BiX,EAAYW,IAAa,EACzB,EAAK5Y,SAAS,CAAEiY,gBAChBrO,WAAW,KACP,MAAM,YAAEqO,GAAgB,EAAKjX,aACtBiX,EAAYW,GACnB,EAAK5Y,SAAS,CAAEiY,iBACjB,MAET,MAAM/O,QAAiBpI,EAAamX,YAAY,CAAElV,GAAI6V,IAC5C1P,GAAgC,MAApBA,EAASC,QACrB,EAAK0P,cAAcD,EAAW1P,EAASyF,OA/B5B,KAmCnBmK,iBAAmB,EAAG3O,OAAM4O,UAAS7P,WAAUqC,YAAWuF,cAEtD,MAAM,aAAEkI,EAAe,QAAWjZ,KAAKJ,MACvC,GAAqB,SAAjBqZ,EAAyB,CACzB,MAAM,UAAEnV,GAAc9D,KAAKJ,MAAMa,OACjC,OAAQ2J,GACJ,IAAK,cACDtG,EAAUoV,iBAAiB,CAAElW,GAAIgW,EAAQhW,GAAI4L,KAAMzF,EAASyF,KAAMpD,cAClE,MACJ,IAAK,YACD1H,EAAUqV,sBAAsB,CAAEnW,GAAIgW,EAAQhW,GAAI4L,KAAMzF,EAASyF,KAAMpD,YAAWuF,YAClF,MAEJ,QACQvF,EACA1H,EAAUsV,2BAA2B,CAAEpW,GAAIgW,EAAQhW,GAAI4L,KAAMzF,EAASyF,KAAMpD,cAE5E1H,EAAUuV,oBAAoB,CAAErW,GAAIgW,EAAQhW,GAAI4L,KAAMzF,EAASyF,aAIxE,GAAqB,UAAjBqK,EAA0B,CACjC,MAAM,WAAEjQ,GAAehJ,KAAKJ,MAAMa,OAClC,OAAQ2J,GACJ,IAAK,cACDpB,EAAWsQ,yBAAyB,CAAEtW,GAAIgW,EAAQhW,GAAI4L,KAAMzF,EAASyF,KAAMpD,cAC3E,MACJ,IAAK,YACDxC,EAAWuQ,8BAA8B,CAAEvW,GAAIgW,EAAQhW,GAAI4L,KAAMzF,EAASyF,KAAMpD,YAAWuF,YAC3F,MAEJ,QACQvF,EACAxC,EAAWwQ,mCAAmC,CAAExW,GAAIgW,EAAQhW,GAAI4L,KAAMzF,EAASyF,KAAMpD,cAErFxC,EAAWyQ,4BAA4B,CAAEzW,GAAIgW,EAAQhW,GAAI4L,KAAMzF,EAASyF,UAtEzE,KA6EnBkK,cAAgB,CAAC9V,EAAI4L,KACjB,MAAM,aAAEqK,EAAe,QAAWjZ,KAAKJ,MACvC,GAAqB,SAAjBqZ,EAAyB,CACzB,MAAM,UAAEnV,GAAc9D,KAAKJ,MAAMa,OACjCqD,EAAU4V,iBAAiB,CAAE1W,KAAI4L,cAC9B,GAAqB,UAAjBqK,EAA0B,CACjC,MAAM,WAAEjQ,GAAehJ,KAAKJ,MAAMa,OAClCuI,EAAW2Q,yBAAyB,CAAE3W,KAAI4L,WApF/B,KAwFtBgL,iBAAoB7Z,IACnB,MAAM8Y,EAAY9Y,EAAEG,OAAO2Q,QAAQ,UAAUzQ,QAAQ4C,IAC/C,eAAEoN,GAAmBpQ,KAAKiB,MACtBmP,EAAeyI,UACRzI,EAAeyI,GAEtBzI,EAAeyI,IAAa,EAEtC7Y,KAAKC,SAAS,CACbmQ,kBACE,KACEpQ,KAAK8J,SAAS+O,IACjB7Y,KAAK8J,SAAS+O,GAAW3H,WApGN,KAyGnB2I,UAAa9Z,IACT,MAAM,IAAEmO,EAAF,MAAOJ,EAAP,KAAcgM,GAAS/Z,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAClD,SAAEI,GAAaR,KAAKJ,MAAMa,OAChCD,EAASuZ,SAAS,CAAE7L,MAAKJ,QAAOgM,UA5GjB,KA+GnBE,kBAAqBja,IACjB,GAA2B,MAAvBA,EAAEG,OAAO+Z,UACT,OAAO,EAEX,MAAM/Z,EAASH,EAAEG,OAAO2Q,QAAQ,kBAChC,GAAI3Q,EAAQ,CACR,MAAM,GAAE8C,GAAO9C,EAAOE,QAClB4C,IACJkX,QAAQC,IAAI,CAAEja,SAAQ8C,OAClBpC,gBAAO,oBAAmBoC,MAxHnB,KA6HnBuP,UAAYzR,eAAOf,GACfA,EAAEyS,iBACFzS,EAAE2F,kBACF,MAAM,KAAE0U,EAAO,IAAO,EAAKxa,OACrB,UAAEsB,EAAF,UAAa4C,GAAc,EAAKlE,MAAMa,QACtC,KAAEuB,GAASd,EACXmZ,QAA2BvW,EAAUyO,UAAU,CAAErH,OAAQkP,EAAMpY,OAAMsY,MAAO,SAClF,IAAIC,EACAH,EAAKnR,UACLsR,QAA8BzW,EAAUyO,UAAU,CAAErH,OAAQkP,EAAMpY,OAAMsY,MAAO,aAEnF,EAAKra,SAAS,CAAEyQ,aAAc,EAAG2J,qBAAoBE,2BAxItC,KA2InB7J,aAAgB3Q,IACZA,EAAEyS,iBACFzS,EAAE2F,kBACF1F,KAAKC,SAAS,CAAEyQ,aAAc,KA5I9B1Q,KAAKiB,MAAL,KACO7B,GAEPY,KAAK8J,SAAW,GAChB9J,KAAKwa,aAAe,KA2IxB3Y,SACI,MAAM,KAAEuY,EAAF,YAAaK,EAAc,SAA3B,YAAqCC,EAAc,SAAnD,WAA6DC,EAAa,SAA1E,aAAoF1B,EAAe,QAAWjZ,KAAKJ,OACnH,eAAEwQ,EAAF,SAAkBwI,EAAlB,YAA4BV,EAA5B,aAAyCxH,EAAzC,mBAAuD2J,EAAvD,sBAA2EE,GAA0Bva,KAAKiB,OAC1G,UAAE6C,EAAF,WAAakF,EAAb,UAAyB9H,EAAzB,SAAoCV,GAAaR,KAAKJ,MAAMa,QAC5D,KAAEuB,EAAF,QAAQyN,GAAYvO,GACpB,SAAEmL,EAAW,MAASrK,GACtB,YAAY4Y,GAAgBpa,GAE5B,WAAEqa,GAAe/W,EACvB,IAAIU,EAAO,GACPsW,EAAa,GACI,SAAjB7B,GACAzU,EAAOV,EAAUiX,eAAeX,EAAK5V,MACrCsW,EAAahX,EAAUkX,eAAeZ,EAAKpY,OAAS,IAC5B,UAAjBiX,IACPzU,EAAOwE,EAAW+R,eAAeX,EAAK5V,MACtCsW,EAAa9R,EAAWgS,eAAeZ,EAAKpY,OAAS,IAEpCd,EAAU+Z,iBAAiB,CAAEC,SAAU1W,EAAK2W,UAAW9O,aAA5E,MACM+O,EAAWla,EAAUma,aAAa,CAAEjR,KAAM5F,EAAK4F,KAAMiC,aAErDiP,KAAe9W,IAAQA,EAAK+W,UAAW/W,EAAK+W,QAAQC,KAAKC,GAAKA,IAAMzZ,EAAKgB,IAEzE2G,EAAQ3K,IAAG0c,SAAS,CAAE1Z,KAAM8Y,EAAYtW,OAAM0G,OAAQkP,EAAMuB,SAAU,UAEtE,MAAEhI,EAAF,SAASP,GAAagH,EACtBwB,EAAkBxB,EAAKzG,OAASyG,EAAKzG,MAAMC,UAAU7T,GAAKA,EAAEiC,OAASA,EAAKgB,KAAO,EACjF6Y,EAAiBrX,GAAQA,EAAKsX,UAAYtX,EAAKsX,UAAUlV,OAAS,EAElEmV,EAAavX,EAAK+W,SAAW/W,EAAK+W,QAAQS,QAAQha,EAAKgB,KAAO,EAC9DiZ,EAAczX,GAAQA,EAAKsX,WAAatX,EAAKsX,UAAUE,QAAQha,EAAKgB,KAAO,EAC3EkZ,EAAqB1X,EAAK2X,gBAAkB3X,EAAK2X,eAAevI,UAAU7T,GAAKA,EAAEiD,KAAOhB,EAAKgB,KAAO,EACpGoZ,EAAmBlb,EAAUmb,cAAc,CAAEC,UAAWlC,EAAKkC,UAAWjQ,aACxEkQ,EAAuBrb,EAAUmb,cAAc,CAAEC,UAAWlC,EAAKkC,UAAWhC,MAAO,UACzF,QAAEkC,GAAU,IAAOpC,EAGnB,IAAIqC,GACAxR,GACAyR,GACAC,GACA7B,IACA2B,GAAYzd,IAAG+K,iBAAiB+Q,GAChC7P,GAAOjM,IAAGiL,YAAY6Q,GACtB4B,GAAW1d,IAAGiL,YAAY6Q,GACtBA,EAAW8B,UAAY9B,EAAWtG,SAAWxS,EAAKwS,SAClDmI,GAAW7B,EAAW8B,SAASC,YAAc,KAAQ,UAAS/B,EAAWtG,SAIjF,MAAMjO,GAAS,GAOf,GANI6T,EAAK0C,UACLvW,GAAOkD,KAAP,OACO2Q,EAAK0C,UADZ,IAEI1S,KAAM,SAGVgQ,EAAK7T,OAAQ,CACb,MAAMyN,EAAOC,YAAKmG,EAAK7T,QACvBA,GAAOkD,QAAQuK,GAGnB,MAAM,uBAAE/R,GAAyB,GAA3B,UAA+B8a,GAAY,IAAO3C,EAClD4C,GAAQhe,IAAGie,SAAS7C,EAAK8C,YACzBC,GAAYne,IAAGoe,aAAahD,EAAK8C,YAEvC,IAAK1Y,IAASA,EAAKyG,KACf,MAAO,GAGX,MAAMoS,GAAkBre,IAAGse,eAAe,CACtCpS,OAAQkP,EACR9F,WAAYjI,EACZiO,MAAO,UACLD,EACN,IAAIkD,GAAWF,IAAmBjD,EAAKnP,KAMvC,IAAIuS,GALuBxe,IAAGse,eAAe,CACzCpS,OAAQkP,EACR9F,WAAYjI,EACZiO,MAAO,aACLC,GACkCH,EAAKnR,QAO7C,OALIyH,IACA6M,GAAWnD,EAAKnP,KAChBuS,GAAcpD,EAAKnR,SAGf,mBACJ,mBAAKxG,MAAM,4BACP,mBAAKA,MAAM,eACP,mBACIA,MAAQ,sFACRC,MAAOiH,EAAS,0BAAyBA,+BAAqC,KAC5EA,GAAS,iBAAGlH,MAAM,+BAA+BC,MAAM,uBAGjE,mBAAKD,MAAM,iCAAiCC,MAAM,uBAC9C,oBAAMD,MAAM,gDAAgD2Y,GAC5D,kBAAI3Y,MAAM,yBAAyBC,MAAM,uBACpC8B,EAAKwJ,OAAS,mBACX,iBAAGjL,KAAO,iBAAgByB,EAAKgQ,OAAU7J,QAAU5K,GAAM0a,EAAY1a,EAAGyE,EAAKgQ,QAAS/R,MAAM,kBAAkB+B,EAAKyG,OACjH,mBACDzG,EAAKyG,OAGd,mBAAKxI,MAAM,QACN2X,EAAKqD,MAAQ,qBAAOhb,MAAM,aAAakI,QAAS3K,KAAK2Y,YACjDC,EAAWhW,IAAK8a,WAAWtD,EAAKqD,KAAM,CAAErI,OAAQ,QAASuI,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAAejb,IAAKsS,eAAekF,EAAKqD,KAAM,IAAIzZ,KAAQ,CAAEoR,OAAQ,WAEzJ,IAAhBgF,EAAKpM,OAAe,mBACjB,qBAAOvL,MAAM,mBACT,iBAAGA,MAAM,0BAEX,mBACF,qBAAOA,MAAM,mBACT,iBAAGA,MAAM,iBADb,KACiCG,IAAKE,OAAO+Y,GAD7C,MAIHa,IAAY,mBACT,qBAAOja,MAAM,mBACRka,GAAW,mBACR,iBAAGla,MAAM,gBADD,IACkB,iBAAGM,KAAM4Z,IAAWD,KAC5C,mBACF,iBAAGja,MAAM,gBADP,IACyBia,MAIvC,qBAAOja,MAAM,cACR2X,EAAKkC,UAAY,GAAK,mBAAE,iBAAG7Z,MAAU8Z,EAAF,UAAb,IAAgDH,GAItEhC,EAAK0D,KAAO,GAAK,mBAAE,iBAAGrb,MAAM,oBAAX,IAAiC2X,EAAK0D,KAAKlX,QAC5DwT,EAAK2D,MAAQ,GAAK,mBAAE,iBAAGtb,MAAQ,0BAAyB2X,EAAK2D,MAAQ,EAAI,UAAY,mBAErF3D,EAAK4D,WAAa,GAAK,mBACpB,iBAAGvb,MAAM,uBADW,IACa,YAAC,IAAD,CAAQhC,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOiV,EAAK4D,cAE9D,IAArB5D,EAAK6D,aAAqB,mBACvB,iBAAGxb,MAAM,gCADc,IACmB,YAAC,IAAD,CAAahC,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOiV,EAAK6D,eAEjG7D,EAAK0D,MAAQ1D,EAAK0D,KAAKlX,OAAS,GAAK,mBAClC,iBAAGnE,MAAM,oBADyB,IACHG,IAAKE,OAAOsX,EAAK0D,KAAKlX,OAAQ,IAMhE3E,IAA0BA,GAAuBic,iBAAmB,mBACjE,iBAAGzb,MAAM,+BADwD,IACvBR,GAAuBic,iBAEpE9D,EAAK+D,kBAAoB/D,EAAK+D,iBAAiBC,WAAa,oBAAM3b,MAAM,oBAAoB2X,EAAK+D,iBAAiBC,aAI1H3O,GAAW,mBACRhN,MAAM,qEACNC,MAAM,mBAEN,qBAAOD,MAAM,mBAAb,QACCR,IAA0BA,GAAuBoc,mBAAqB,mBACnE,qBAAO5b,MAAM,cACT,iBAAGA,MAAM,0BADb,IACyCR,GAAuBoc,oBAGnEvD,EAAWwD,YAAc,mBACtB,oBAAM7b,MAAM,4DACP,CAAC,WAAY,eAAgB,SAASuE,IAAIjH,GAAK,mBAC5C,oBAAM0C,MAAM,mBACPqY,EAAWwD,WAAWve,QAKtCod,IAAa,mBAEV,qBAAO1a,MAAM,mBAAb,MACQ0a,GAAUoB,OAElB,qBAAO9b,MAAM,mBAAb,MACQ0a,GAAUqB,QADlB,IAC4B5b,IAAK6b,SAAStB,GAAUuB,eAAiB,mBAAE,iBAAGjc,MAAOzD,IAAG2f,iBAAiBxB,GAAUuB,kBAE/G,qBAAOjc,MAAM,mBAAb,MACQG,IAAKE,OAAOqa,GAAUyB,YAAc,IAAM,GADlD,KACwDhc,IAAK6b,SAAStB,GAAU0B,mBAAqB,mBAAE,iBAAGpc,MAAOzD,IAAG2f,iBAAiBxB,GAAU0B,sBAE9IzE,EAAK0E,mBAAqB1E,EAAK0E,kBAAkBC,kBAAoB,GAAK,qBAAOtc,MAAM,mBAAb,MACnEG,IAAKE,OAAOsX,EAAK0E,kBAAkBC,kBAAmB,IAE7D3E,EAAK4E,YAAc5E,EAAK4E,WAAWhY,IAAI2G,GAAO,mBAC3C,oBAAMlL,MAAM,4DAA4DkL,SA6B5F,mBAAKlL,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAehC,OAAQT,KAAKJ,MAAMa,OAAQ8F,OAAQA,GAAQvD,GAAIoX,EAAKpX,GAAIic,SAAUjf,KAAKkY,YAAagH,QAAShH,MAInHkC,EAAK0D,MAAQ1D,EAAK0D,KAAKlX,OAAS,GAAK,mBAAKnE,MAAM,6BAC7C,mBAAKA,MAAM,YACP,YAAC,IAAD,CAAahC,OAAQT,KAAKJ,MAAMa,OAAQqd,KAAM1D,EAAK0D,KAAMqB,QAAStE,EAAYF,WAAYA,MAIlG,mBAAKlY,MAAM,2DACN2X,EAAKhV,WAAa,GAAK,mBAAK3C,MAAM,oBAC/B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,gBAAhB,IAAiC,YAAC,IAAD,CAAMO,GAAG,6BAAT,cAErC,mBAAKP,MAAM,kCAAkCC,MAAM,qBAC/C,YAAC,IAAD,CAAUjC,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOiV,EAAKhV,eAGxDgV,EAAK9U,UAAY,GAAK,mBAAK7C,MAAM,oBAC9B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,oBAAhB,IAAqC,YAAC,IAAD,CAAMO,GAAG,2BAAT,gBAEzC,mBAAKP,MAAM,kCAAkCC,MAAM,qBAC/C,YAAC,IAAD,CAAWjC,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOiV,EAAK9U,cAGzD8U,EAAK7U,SAAW,GAAK,mBAAK9C,MAAM,oBAC7B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,iBAAhB,IAAkC,YAAC,IAAD,CAAMO,GAAG,6BAAT,cAEtC,mBAAKP,MAAM,kCAAkCC,MAAM,qBAC9CE,IAAKC,SAASuX,EAAK7U,UAAU,KAGrC6U,EAAK5U,SAAW,GAAK,mBAAK/C,MAAM,eAC7B,mBAAKA,MAAM,4BACP,yBAAO,iBAAGA,MAAM,0BAAhB,IAA2C,YAAC,IAAD,CAAMO,GAAG,8BAAT,eAE/C,mBAAKP,MAAM,kCAAkCC,MAAM,qBAC9C8Z,IAAWA,GAAQ4C,kBAAoB,EAAI,mBACxC,YAAC,IAAD,CAAO3e,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAmC,IAA5BqX,GAAQ4C,qBAC/C,mBACF,YAAC,IAAD,CAAO3e,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOiV,EAAK5U,eAM9D,mBAAK/C,MAAM,YACP,mBAAKO,GAAG,gBAAgBP,MAAM,mCAAmCC,MAAM,oBAAoBiI,QAAS3K,KAAKga,kBAAmBtP,UAAS0P,EAAK5F,QACtI,YAAC,IAAD,CAAUG,SAAU3V,IAAG4V,cAAc2I,GAAUnD,EAAK7T,OAAQ8F,GAAWwI,aAAc7V,IAAG8V,wBAE5F,mBAAKrS,MAAM,mBACP,YAAC,IAAD,CAAUkS,SAAU3V,IAAG4V,cAAc4I,GAAapD,EAAK7T,OAAQ8F,GAAWwI,aAAc7V,IAAG8V,wBAE9FsF,EAAK/N,WAAaA,GAAY,oBACzBqE,GAAgB2M,GAAkB,mBAChC,sBAAQjT,KAAK,SAAS3H,MAAM,iCAAiCkI,QAAS3K,KAAK0Q,cAAc,iBAAGjO,MAAM,eAAlG,KAAmH,YAAC,IAAD,CAAMO,GAAG,gCAAT,mBACjH,mBACF,sBAAQoH,KAAK,SAAS3H,MAAM,iCAAiCkI,QAAS3K,KAAKuS,WAAW,iBAAG9P,MAAM,eAA/F,IAA+G,YAAC,IAAD,CAAMO,GAAG,qBAAT,uBAK3H,mBAAKP,MAAM,QACP,YAAC,IAAD,CACIhC,OAAQT,KAAKJ,MAAMa,OACnBkT,MAAOA,EACPP,SAAUA,EACVhJ,KAAK,OACLqQ,YAAaA,EACbC,YAAaA,MAInBqB,IAAeE,IAAgBC,GAAsB,mBAAKzZ,MAAM,iBAC9D,YAAC,IAAD,CAAYhC,OAAQT,KAAKJ,MAAMa,OAAQ+D,KAAMA,EAAM6a,YAAY,KAGnE,uBACI,mBAAK5c,MAAM,OACP,mBAAKA,MAAM,mBACP,sBAAQ2H,KAAK,SAAS3H,MAAQ,yCAAwCmZ,EAAkB,UAAY,gCAAgCA,EAAkB,eAAiB,mBACnKlR,UAAS0P,EAAKpX,GACd2H,QAAS3K,KAAKkY,aAGd,iBAAGzV,OAAUmZ,EAAkB,mBAAqB,OAAzC,kBALf,IAKiF,YAAC,IAAD,CAAM5Y,GAAG,iBAAT,SAGrF,mBAAKP,MAAM,mBACP,sBAAQ2H,KAAK,SAAS3H,MAAM,kEACxBiI,UAAS0P,EAAKpX,GACd2H,QAAS3K,KAAK4Z,kBAEd,iBAAGnX,MAAM,mBAJb,IAIiC,YAAC,IAAD,CAAMO,GAAG,wBAAT,eAGpC4X,EAAc,mBACX,mBAAKnY,MAAM,mBACP,sBAAQA,MAAM,kEACVkI,QAAS3K,KAAK6Z,UACdyF,WAAW,uCAAsClF,EAAK5F,OACtD+K,aAAa,UAASnF,EAAKtM,OAE3B,iBAAGrL,MAAM,iBALb,IAK+B,YAAC,IAAD,CAAMO,GAAG,eAAT,UAGjC,mBACF,mBAAKP,MAAM,mBACP,iBAAGA,MAAM,kEACLM,KAAO,uCAAsCqX,EAAK5F,OAClDtU,OAAO,SACPsf,IAAI,aACJC,eAAA,GAEA,iBAAGhd,MAAM,iBANb,IAM+B,YAAC,IAAD,CAAMO,GAAG,eAAT,YAO9Cga,GAAQ,GAAK,mBACV,mBAAKva,MAAM,QACP,YAAC,IAAD,CACIhC,OAAQT,KAAKJ,MAAMa,OACnBuc,MAAOA,GACP9R,OAAQkP,EACRhQ,KAAK,OACLkR,YAAaA,EACb7L,QAASA,EACTgL,YAAaA,EACbC,YAAaA,MAKzB,mBAAKjY,MAAM,QACN2N,EAAegK,EAAKpX,KAAO,YAAC,IAAD,CACxBvC,OAAQT,KAAKJ,MAAMa,OACnBuY,QAASoB,EACTtQ,SAAUnG,GAAK3D,KAAK8J,SAASsQ,EAAKpX,IAAMW,EACxCmF,eAAgB9I,KAAK8J,SACrByF,IAAI,KACJC,OAAO,IACPkQ,YAAY,EACZC,WAAW,OACX9W,SAAU7I,KAAK+Y,mBAEnB,YAAC,IAAD,CACItY,OAAQT,KAAKJ,MAAMa,OACnBuY,QAASoB,EACT7K,IAAI,KACJC,OAAO,IACPsD,SAAS,EACTjK,SAAU7I,KAAK+Y,yB,EAOpBL,Q,skBCjjBf,MAAMtZ,EAAe,CACpBgR,eAAgB,GAEb8H,YAAa,GACbC,cAAe,EACfC,MAAO,EACPC,MAAO,GACP7I,OAAQ,EACR8I,uBAAuB,EACvBC,OAAO,EACPC,WAAW,IAAIxU,MAAOyU,WAGpBmH,EAAa,CAAC,KAAM,OAAQ,OAAQ,OAAQ,S,IAG5CC,EADLpgB,Y,EAAD,cAC6BC,YACzBC,YAAYC,GACRC,MAAMD,GADS,KAanBkgB,YAAc,KACV,MAAM,UAAEhc,GAAc9D,KAAKJ,MAAMa,OACjCqD,EAAUgc,YAAY,KAClB,MAAM,OAAE/d,GAAW/B,KAAKJ,MACxB,IAAI,MAAEyY,EAAF,OAAS7I,GAAWxP,KAAKiB,MAC7BuO,GAAU6I,EACVrY,KAAKC,SAAS,CAAEuP,WAChBxP,KAAK+f,oBAAoB,CAAE1H,QAAO7I,SAAQzN,cApB/B,KAwBnBie,cAAgB,KACZ,MAAM,UAAElc,GAAc9D,KAAKJ,MAAMa,OACjCqD,EAAUgc,YAAY,SA1BP,KAuCnBG,gBAAkB,KACd,MAAM,UAAEnc,GAAc9D,KAAKJ,MAAMa,QAC3B,gBAAEyf,EAAF,kBAAmBC,GAAsBrc,EACzCsc,EAAsBxd,IAAKyd,aAAaF,GACxC/F,EAAO,IAAI8F,GACjB,IAAK,IAAI3X,EAAI,EAAG+X,EAAI,EAAG/X,EAAI+X,EAAG/X,GAAK,EAAG,CAClC,MAAMgY,EAAcvhB,IAAGwhB,UAAU,EAAG,GAChC5d,IAAK6d,SAASL,EAAoB7X,KAClC6R,EAAKsG,OAAOH,EAAa,EAAGH,EAAoB7X,IAGxDzE,EAAU6c,iBAAiB,kBAAmBvG,IAlD/B,KAqDnBwG,UAAY,KACR,MAAM,MAAExI,GAAUpY,KAAKiB,OACjB,UAAE6C,GAAc9D,KAAKJ,MAAMa,QAC3B,gBAAEyf,GAAoBpc,EACtBsW,EAAO,IAAI8F,GACjB9F,EAAKsG,OAAOtI,EAAO,EAAG,CAAEhO,KAAM,KAAMyW,kBAAmB,GAAIC,kBAAmB,KAC9Ehd,EAAU6c,iBAAiB,kBAAmBvG,IA3D/B,KA8DnB2G,kBAAoB,KAChB,MAAM,WAAEC,GAAehhB,KAAKiB,OACtB,UAAE6C,GAAc9D,KAAKJ,MAAMa,QAC3B,gBAAEyf,GAAoBpc,EACtBsW,EAAO,IAAI8F,GACjB9F,EAAKsG,OAAOM,EAAY,EAAG,CAAE5W,KAAM,cAAeyW,kBAAmB,GAAIC,kBAAmB,KAC5Fhd,EAAU6c,iBAAiB,kBAAmBvG,IApE/B,KAuEnB6G,sBAAwB,KACpB,MAAM,cAAE9I,GAAkBnY,KAAKiB,OACzB,UAAE6C,GAAc9D,KAAKJ,MAAMa,QAC3B,gBAAEyf,GAAoBpc,EACtBsW,EAAO,IAAI8F,GACjB9F,EAAKsG,OAAOvI,EAAe,EAAG,CAAE/N,KAAM,kBAAmByW,kBAAmB,GAAIC,kBAAmB,KACnGhd,EAAU6c,iBAAiB,kBAAmBvG,IA7E/B,KAiFnBK,YAAc,CAAC1a,EAAGgC,KACdhC,EAAEyS,iBACFzS,EAAE2F,kBACF1F,KAAKC,SAAS,CACVihB,SAAUnf,KAEP,GAvFQ,KA0FnBof,SAAW,KACPnhB,KAAKC,SAAS,CACVihB,SAAU,QA5FC,KAgGnBxG,YAAe3a,IACXA,EAAEyS,iBACFzS,EAAE2F,mBACK,GAnGQ,KAsGnBiV,WAAa,CAAC5a,EAAGqhB,EAAOtD,KACpB/d,EAAEyS,iBACFzS,EAAE2F,kBACF1F,KAAKC,SAAS,CACVohB,QAASD,EACTtD,UAEG,GA7GQ,KAgHnBwD,QAAU,KACNthB,KAAKC,SAAS,CACVohB,QAAS,QAlHE,KAyHnBE,kBAAoB,KAChBvhB,KAAKC,SAAS,CACVuhB,mBAAoBxiB,IAAGyiB,+BAE3B,MAAM,UAAE3d,GAAc9D,KAAKJ,MAAMa,OACjCT,KAAK0hB,gBAAkBC,YAAY,IAAM7d,EAAU8d,eAAe5iB,IAAG6iB,kCAAmC,MA9HzF,KAyJnBC,cAAgB,EAAGC,MAAKzP,UACpB,MAAM,SAAE9R,GAAaR,KAAKJ,MAAMa,QAC1B,KAAEqB,GAAStB,EAEjB,MAAiB,OAAbuhB,EAAI3X,KACG,mBACH,YAAC,IAAD,CAAI3J,OAAQT,KAAKJ,MAAMa,OAAQqB,KAAMA,KAG5B,gBAAbigB,EAAI3X,KACG,mBACH,YAAC,IAAD,CAAoB3J,OAAQT,KAAKJ,MAAMa,UAG9B,oBAAbshB,EAAI3X,KACG,mBACH,YAAC,IAAD,CAAkB3J,OAAQT,KAAKJ,MAAMa,UAGrC,mBACJ,YAAC,IAAD,CACIA,OAAQT,KAAKJ,MAAMa,OACnB2Z,KAAM2H,EACNzP,IAAKA,EACLmI,YAAaza,KAAKya,YAClBC,YAAa1a,KAAK0a,YAClBC,WAAY3a,KAAK2a,eAjLzB3a,KAAKiB,M,+VAAL,IACO7B,GAIX,2BAA0B,MAAEQ,EAAQI,KAAKJ,MAAf,MAAsByY,EAAtB,OAA6B7I,IACzD,MAAM,UAAE1L,GAAclE,EAAMa,QAChB,OAAEsB,GAAWnC,QACnBkE,EAAU4K,eAAe,CAAE2J,QAAO7I,SAAQwS,KAAM,eAAgBjgB,WAmBpE,cAAcnC,EAAQI,KAAKJ,OACvB,MAAM,MAAEyY,GAAUrY,KAAKiB,OACjB,OAAEc,GAAWnC,QACnBI,KAAK+f,oBAAoB,CAAEngB,QAAOyY,QAAO7I,OAAQ,EAAGzN,WAiGxDkgB,qBACIjiB,KAAKuhB,oBAGT7f,uBACI1B,KAAKggB,gBACL,MAAM,UAAElc,GAAc9D,KAAKJ,MAAMa,OACjCqD,EAAU8d,eAAe5iB,IAAG6iB,kCAC5BK,cAAcliB,KAAK0hB,iBAI1BlgB,oBACOxB,KAAKyB,UACLzB,KAAK8f,cAGZne,0BAA0BC,GAEfA,EAAUG,SAAW/B,KAAKJ,MAAMmC,QAChC/B,KAAKyB,QAAQG,GAmCrBC,SACI,MAAM,SAAEqf,EAAF,QAAYG,EAAZ,mBAAqBG,EAArB,UAAyChJ,EAAzC,KAAoDsF,GAAS9d,KAAKiB,OAClE,UAAE6C,EAAF,SAAatD,GAAaR,KAAKJ,MAAMa,QACrC,gBAAEyf,GAAoBpc,GACtB,SAAQiM,GAAavP,GACrB,OAAEuB,GAAW/B,KAAKJ,MAClB4E,EAAOV,EAAUqe,uBAAuBpgB,GAExC4H,EAAQ3K,IAAG0c,SAAS,CAAElX,SAC5B,IAAIiY,EACAxR,EAQJ,OANIzG,GAAQA,EAAKyG,OACbwR,EAAYzd,IAAG+K,iBAAiBvF,GAChCyG,EAAOjM,IAAGiL,YAAYzF,IAIlB,mBACH0c,GAAY,YAAC,IAAD,KACT,YAAC,UAAD,CAAmBzgB,OAAQT,KAAKJ,MAAMa,OAAQsB,OAAQmf,EAAUjiB,UAAW,OAAQE,aAAc,OAAQijB,KAAMpiB,KAAKmhB,SAAUA,SAAUnhB,KAAKmhB,YAGhJE,GAAW,YAAC,IAAD,KACR,YAAC,UAAD,CAAiB5gB,OAAQT,KAAKJ,MAAMa,OAAQ2gB,MAAOC,EAASpiB,UAAW,OAAQE,aAAc,OAAQijB,KAAMpiB,KAAKshB,QAASxD,KAAMA,KAGnI,mBAAKrb,MAAM,SACN+B,EAAO,mBACJ,mBAAK/B,MAAM,iBACP,mBAAKA,MAAM,2EACP,mBAAKA,MAAM,OACP,sBACI,mBAAKA,MAAM,4BACP,mBACIA,MAAQ,mEACRC,MAAOiH,EAAS,0BAAyBA,+BAAqC,KAE5EA,GAAS,mBAAKlH,MAAM,aAAaC,MAAM,sCAAsC+Z,IAEnF,mBAAKha,MAAM,iCAAiCC,MAAM,uBAC9C,kBAAID,MAAM,QACL+B,EAAKwJ,OAAS,mBACX,iBAAGjL,KAAO,iBAAgByB,EAAKgQ,OAAU/R,MAAM,kBAAkBwI,IAC/D,mBACDA,WAS/B,mBACF,YAAC,IAAD,CAAoBxK,OAAQT,KAAKJ,MAAMa,YAGxCyf,GAA8C,IAA3BA,EAAgBtZ,SAAiB,mBACnD,mBAAKnE,MAAM,kEACP,mBAAKA,MAAM,0BACP,mBAAKA,MAAM,aAAY,iBAAGA,MAAM,uBAChC,sBAAI,YAAC,IAAD,CAAMO,GAAG,4BAAT,uBACJ,YAAC,IAAD,CAAMA,GAAG,iCAAT,4IAEJ,mBAAKP,MAAM,oBACP,iBAAGM,KAAK,iBAAiBN,MAAM,mBAC3B,iBAAGA,MAAM,iBADb,IAC+B,YAAC,IAAD,CAAMO,GAAG,uBAAT,oBAM3C,YAAC,IAAD,CACI4L,KAAMsR,EACNW,kBAAmB,WACnBC,kBAAoB,sGAAqG/Q,EAAW,QAAU,oBAC9I+R,cAAe9hB,KAAK8hB,cACpBlC,WAAYA,EACZyC,WAAY,CAAEjY,KAAM,MACpBoX,mBAAoBA,EACpBhJ,UAAWA,U,EAQhBqH,Q,6pBC9Rf,MAAMzgB,EAAe,CACpBgR,eAAgB,GAChBkS,gBAAiB,GACd/R,aAAc,GACdgS,UAAW,I,IAITC,EADL/iB,Y,EAAD,cAC8BC,YAC1BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAKnB6iB,UAAY3hB,eAAOf,GACf,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAClCsiB,UAAWrZ,GAAS,EAAKpI,OAC3B,WAAE+H,GAAe,EAAKpJ,MAAMa,QAC5B,SAAEoI,EAAW,MAAM,IAAS,EAAKjJ,YAEjCoJ,EAAW2Z,UAAU3d,SAAShC,EAAI,IAAK,OAAQqG,GAAM,GAC3DL,EAAW4Z,iBAAiB5d,SAAShC,EAAI,IAAK,OAAQqG,GACtD,EAAKpJ,SAAS,CACVyiB,UAAW,GACXG,UAAW,IAEfha,KAjBe,KAoBnBia,eAAiBhiB,eAAOf,GACpB,MAAM,MAAEgJ,GAAU,EAAKnJ,OACjB,GAAEoD,GAAO+F,GACT,MAAE5D,EAAF,KAAS8F,GAASlL,EAAEG,OAE1B6iB,aAAa,EAAKC,YAAY/X,IAC9B,EAAK+X,YAAY/X,GAAQpB,YAAW/I,iBAChC,EAAKmiB,cAAcjgB,EAAIiI,EAAM9F,KAC9B,MA1BHnF,KAAKgjB,YAAc,GA6BvB,oBAAoBhgB,EAAIiI,EAAM9F,GAC1B,MAAM,WAAE6D,GAAehJ,KAAKJ,MAAMa,aAC5BuI,EAAW2Z,UAAU3d,SAAShC,EAAI,IAAKiI,EAAM9F,GAAO,GAC1D6D,EAAW4Z,iBAAiB5d,SAAShC,EAAI,IAAKiI,EAAM9F,GAGxDtD,SACI,MAAM,UAAE6gB,EAAF,UAAaG,GAAc7iB,KAAKiB,OAChC,UAAEC,GAAclB,KAAKJ,MAAMa,QAC3B,QAAEgP,GAAYvO,GAEd,MAAE6H,GAAU/I,KAAKJ,MACvB,OAAQ,mBACJ,mBAAK6C,MAAM,uBACP,mBAAKA,MAAM,0BACP,qBAAOA,MAAM,UAAU0H,IAAI,mBAAkB,YAAC,IAAD,CAAMnH,GAAG,oBAAT,cAC7C,mBAAKP,MAAM,+CACP,YAAC,IAAD,KACI,wBACIA,MAAM,8BACN2H,KAAK,OACLC,YAAa,YAAC,IAAD,CAAMrH,GAAG,0BAAT,yBACbsH,QAASC,YAAUvK,KAAM,aAEzByK,QAASzL,IAAGsK,eACZ5G,MAAM,iBACNyC,MAAOud,GAAa3Z,EAAMM,SAKtC,mBAAK5G,MAAM,0BACNgN,GAAW,mBACR,mBAAKhN,MAAM,2BACP,mBAAKA,MAAM,cACP,yBACI,2CACA,qBACI2H,KAAK,WACLpH,GAAI+F,EAAM/F,GACViI,KAAK,SACLX,QAAStK,KAAK8iB,eACd3d,MAAO4D,EAAMgF,OAAS,EAAI,EAC1BoC,QAASpH,EAAMgF,OAAS,EAAI,QAO/C0B,GAAW,mBACR,yBAAO,YAAC,IAAD,CAAMzM,GAAG,cAAT,SACP,mBAAKP,MAAM,cACP,yBACI,sBACIA,MAAM,iCACNO,GAAI+F,EAAM/F,GACViI,KAAK,OACLX,QAAStK,KAAK8iB,eACd3d,MAAO0d,GAAa9Z,EAAMqB,MAE9B,sBAAQjF,MAAM,IAAd,MAAoB,YAAC,IAAD,CAAMnC,GAAG,qBAAT,aAApB,OACI,sBAAQmC,MAAO,EAAG+K,SAAwB,GAAdnH,EAAMqB,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMpH,GAAG,sBAAT,WAClE,sBAAQmC,MAAO,EAAG+K,SAAwB,GAAdnH,EAAMqB,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMpH,GAAG,iBAAT,YAClE,sBAAQmC,MAAO,EAAG+K,SAAwB,GAAdnH,EAAMqB,KAAY,WAAa,IAA3D,MAAkE,YAAC,IAAD,CAAMpH,GAAG,sBAAT,iBAMjF+F,EAAMqB,MAAQ,GAAK,mBAChB,yBAAO,YAAC,IAAD,CAAMpH,GAAG,kBAAT,aACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,UACLX,QAAStK,KAAK8iB,eACd3d,MAAO4D,EAAMkF,YAKzB,yBAAO,YAAC,IAAD,CAAMjL,GAAG,aAAT,QACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,MACLX,QAAStK,KAAK8iB,eACd3d,MAAO4D,EAAMmF,SAMb,IAAfnF,EAAMqB,MAAc,mBACjB,yBAAO,YAAC,IAAD,CAAMpH,GAAG,cAAT,SACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,OACLX,QAAStK,KAAK8iB,eACd3d,MAAO4D,EAAMsF,SAKzB,yBAAO,YAAC,IAAD,CAAMrL,GAAG,iBAAT,YACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,UACLX,QAAStK,KAAK8iB,eACd3d,MAAO4D,EAAMuF,YAKzB,yBAAO,YAAC,IAAD,CAAMtL,GAAG,gBAAT,WACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,SACLX,QAAStK,KAAK8iB,eACd3d,MAAO4D,EAAMwF,WAKzB,yBAAO,YAAC,IAAD,CAAMvL,GAAG,kBAAT,aACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,WACLX,QAAStK,KAAK8iB,eACd3d,MAAO4D,EAAMoF,aAKzB,yBAAO,YAAC,IAAD,CAAMnL,GAAG,eAAT,UACP,mBAAKP,MAAM,cACP,yBACI,qBACIA,MAAM,eACN2H,KAAK,OACLa,KAAK,QACLX,QAAStK,KAAK8iB,eACd3d,MAAO4D,EAAMqF,aAOrC,mBAAK3L,MAAM,uCACP,sBAAQ2H,KAAK,SAAS3H,MAAM,uBACxBkI,QAAS3K,KAAKyiB,UACd/X,UAAS3B,EAAM/F,IAClB,iBAAGP,MAAM,+B,EAQxBygB,EADLzjB,Y,EAAD,cAC+BC,YAC3BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAOnByS,UAAatS,IACf,MAAM,GAAEiD,EAAF,IAAMsP,GAAQvS,EAAEG,OAAO2Q,QAAQ,OAAOzQ,SAChC,aAAEmQ,GAAiBvQ,KAAKiB,MAC9BsP,EAAavN,GAAMsP,EACnBtS,KAAKC,SAAS,CAAEsQ,kBAXD,KAcnB4S,gBAAmBpjB,IACf,GAA2B,MAAvBA,EAAEG,OAAO+Z,UACT,OAAO,EAEX,MAAM,GAAEjX,GAAOjD,EAAEG,OAAO2Q,QAAQ,gBAAgBzQ,QAC5C4C,GACApC,gBAAO,YAAWoC,IApBP,KAwBnBuP,UAAYzR,eAAOf,GACfA,EAAEyS,iBACFzS,EAAE2F,kBACF,MAAM,MAAEqD,GAAU,EAAKnJ,OACjB,UAAEsB,EAAF,WAAa8H,GAAe,EAAKpJ,MAAMa,QACvC,KAAEuB,GAASd,EACXwR,QAAuB1J,EAAWuJ,UAAU,CAAExJ,QAAO/G,SAC3D,EAAK/B,SAAS,CAAEyQ,aAAc,EAAGgC,oBA/BlB,KAkCnBhC,aAAgB3Q,IACZA,EAAEyS,iBACFzS,EAAE2F,kBACF1F,KAAKC,SAAS,CAAEyQ,aAAc,KAnC9B1Q,KAAKiB,MAAQ,CACTsP,aAAc,IAqCtB1O,SACI,MAAM,aAAE0O,EAAF,aAAgBG,EAAhB,eAA8BgC,GAAmB1S,KAAKiB,OACtD,UAAEC,GAA0BlB,KAAKJ,MAAMa,QACvC,MAAEsI,EAAF,UAASwZ,EAAT,QAAoBrD,GAAYlf,KAAKJ,OACnCoC,KAAM+Q,GAAgB7R,GAC9B,SAAEmL,EAAW,MAAS0G,EAEhBxM,EAAS,GACf,GAAIwC,EAAMxC,OAAQ,CACd,MAAMyN,EAAOC,YAAKlL,EAAMxC,QACxBA,EAAOkD,QAAQuK,GAEnB,MAGMI,EAAcpV,IAAGse,eAAe,CAClCpS,OAAQnC,EACRuL,WAAYjI,EACZiO,MAAO,UACL5H,EACN,IAAIrJ,EAAO+K,GAAerL,EAAMM,KAC5BqH,IACArH,EAAON,EAAMM,MAEjB,MAAM,WAAE+Z,EAAa,GAAf,UAAmBC,GAAcrkB,IAAGskB,oBAAoBja,GAE9D,OAAQ,mBACJ,mBAAK5G,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAehC,OAAQT,KAAKJ,MAAMa,OAAQ8F,OAAQA,EAAQvD,GAAI+F,EAAM/F,GAAIic,SAAUsD,EAAWrD,QAASA,MAG9G,mBAAKzc,MAAM,YACP,mBAAKA,MAAM,kCAAkCC,MAAQ,IAAEqG,EAAMwa,QAAU,iCAAmC,KACtG,mBAAKvgB,GAAG,cAAc2H,QAAS3K,KAAKmjB,gBAAiBzY,UAAS3B,EAAM/F,IAChE,YAAC,IAAD,CAAU2R,SAAU3V,IAAG4V,cAAcyO,EAAWta,EAAMxC,OAAQ8F,GAAWwI,aAAc7V,IAAG8V,uBACzF/L,EAAMsD,WAAaA,GAAY,oBAC1BqE,GAAgB0D,EAAc,mBAC5B,sBAAQhK,KAAK,SAAS3H,MAAM,iCAAiCkI,QAAS3K,KAAK0Q,cAAc,iBAAGjO,MAAM,eAAlG,KAAmH,YAAC,IAAD,CAAMO,GAAG,gCAAT,mBACjH,mBACF,sBAAQoH,KAAK,SAAS3H,MAAM,iCAAiCkI,QAAS3K,KAAKuS,WAAW,iBAAG9P,MAAM,eAA/F,IAA+G,YAAC,IAAD,CAAMO,GAAG,qBAAT,uBAI1HogB,GAAcA,EAAWpc,IAAKwc,IAC3B,GAAuB,SAAnBA,EAAUvY,KACV,OAAO,YAAC,IAAD,CACHxK,OAAQT,KAAKJ,MAAMa,OACnBsI,MAAOA,EACP0a,QAAS1a,EAAM/F,GACf0gB,OAAQF,EAAUE,OAClBC,KAAMH,EAAUG,KAChBC,QAASJ,EAAUI,mB,EAW7CC,EADLpkB,Y,EAAD,cAC0BC,YACtBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAOnByS,UAAatS,IACf,MAAM,GAAEiD,EAAF,IAAMsP,GAAQvS,EAAEG,OAAO2Q,QAAQ,OAAOzQ,SAChC,aAAEmQ,GAAiBvQ,KAAKiB,MAC9BsP,EAAavN,GAAMsP,EACnBtS,KAAKC,SAAS,CAAEsQ,kBAXD,KAcnB4S,gBAAmBpjB,IACf,GAA2B,MAAvBA,EAAEG,OAAO+Z,UACT,OAAO,EAEX,MAAM,GAAEjX,GAAOjD,EAAEG,OAAO2Q,QAAQ,gBAAgBzQ,QAC5C4C,GACApC,gBAAO,YAAWoC,IApBP,KAwBnBuP,UAAYzR,eAAOf,GACfA,EAAEyS,iBACFzS,EAAE2F,kBACF,MAAM,MAAEqD,GAAU,EAAKnJ,OACjB,UAAEsB,EAAF,WAAa8H,GAAe,EAAKpJ,MAAMa,QACvC,KAAEuB,GAASd,EACjB,EAAKjB,SAAS,CAAEyQ,aAAc,UACxB1H,EAAWuJ,UAAU,CAAExJ,QAAO/G,UA/BrB,KAkCnB0O,aAAgB3Q,IACZA,EAAEyS,iBACFzS,EAAE2F,kBACF1F,KAAKC,SAAS,CAAEyQ,aAAc,KArCf,KAwCnB4M,eAAiB,KACb,MAAM,MAAEvU,GAAU/I,KAAKJ,OACjB,UAAEsB,GAA0BlB,KAAKJ,MAAMa,QAErCuB,KAAM+Q,GAAgB7R,GAC9B,SAAEmL,EAAW,MAAS0G,EACC/T,IAAGse,eAAe,CACrCpS,OAAQnC,EACRuL,WAAYjI,EACZiO,MAAO,UAGPta,KAAKC,SAAS,CAAEyQ,aAAc,KAlDlC1Q,KAAKiB,MAAQ,CACTsP,aAAc,IAqDtB0R,qBACIjiB,KAAKsd,iBAGTzb,SACI,MAAM,aAAE0O,EAAF,aAAgBG,GAAiB1Q,KAAKiB,OACtC,UAAEC,GAA0BlB,KAAKJ,MAAMa,QACvC,MAAEsI,EAAF,UAASwZ,EAAT,QAAoBrD,GAAYlf,KAAKJ,OACnCoC,KAAM+Q,GAAgB7R,GAC9B,SAAEmL,EAAW,MAAS0G,EAEhBxM,EAAS,GACf,GAAIwC,EAAMxC,OAAQ,CACd,MAAMyN,EAAOC,YAAKlL,EAAMxC,QACxBA,EAAOkD,QAAQuK,GAEnB,MAGMI,EAAcpV,IAAGse,eAAe,CAClCpS,OAAQnC,EACRuL,WAAYjI,EACZiO,MAAO,SAEX,IAAIjR,EAAO+K,GAAerL,EAAMM,KAKhC,OAJIqH,IACArH,EAAON,EAAMM,MAGT,mBACJ,mBAAK5G,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAehC,OAAQT,KAAKJ,MAAMa,OAAQ8F,OAAQA,EAAQvD,GAAI+F,EAAM/F,GAAIic,SAAUsD,EAAWrD,QAASA,MAI9G,mBAAKzc,MAAM,YACP,mBAAKA,MAAM,kCAAkCC,MAAQ,IAAEqG,EAAMwa,QAAU,iCAAmC,KAEtG,mBAAKvgB,GAAG,cAAc0H,UAAS3B,EAAM/F,IACjC,YAAC,IAAD,CAAU2R,SAAU3V,IAAG4V,cAAcvL,EAAMN,EAAMxC,OAAQ8F,GAAWwI,aAAc7V,IAAG8V,uBACpF/L,EAAMsD,WAAaA,GAAY,oBAC1BqE,GAAgB0D,EAAc,mBAC5B,sBAAQhK,KAAK,SAAS3H,MAAM,sBAAsBkI,QAAS3K,KAAK0Q,cAAc,iBAAGjO,MAAM,eAAvF,KAAwG,YAAC,IAAD,CAAMO,GAAG,gCAAT,mBACtG,mBACF,sBAAQoH,KAAK,SAAS3H,MAAM,sBAAsBkI,QAAS3K,KAAKuS,WAAW,iBAAG9P,MAAM,eAApF,IAAoG,YAAC,IAAD,CAAMO,GAAG,qBAAT,2BAKhH+F,EAAMmF,KAAOnF,EAAMsF,MAAQtF,EAAMqF,MAAQ,IAAM,mBAC/C,mBAAK3L,MAAM,wBAAwBC,MAAQ,IAAEqG,EAAMwa,QAAU,iCAAmC,KAC5F,mBAAK9gB,MAAM,OACNsG,EAAMmF,KAAO,mBACV,mBAAKzL,MAAM,mBAAmBC,MAAM,qBAChC,iBAAGK,KAAM/D,IAAG8kB,MAAM/a,EAAMmF,KAAMhO,OAAO,SAASsf,IAAI,cAC9C,iBAAG/c,MAAM,qBACRsG,EAAMkF,QAAU,mBACZlF,EAAMkF,SACL,mBACF,YAAC,IAAD,CAAMjL,GAAG,yBAAT,kBAKf+F,EAAMsF,MAAQ,mBACX,mBAAK5L,MAAM,gBAAgBC,MAAM,qBAC7B,wBACI,oBAAMD,MAAM,uBAAsB,YAAC,IAAD,CAAMO,GAAG,0BAAT,gBAAlC,KADJ,IACqG+F,EAAMsF,QAIlHtF,EAAMqF,MAAQ,GAAK,mBAChB,mBAAK3L,MAAM,iBAAiBC,MAAM,qBAC9B,wBACKqG,EAAMgb,WAAa,oBAAMthB,MAAM,uBAAuBsG,EAAMoF,UADjE,IACoFvL,IAAKE,OAAOiG,EAAMqF,MAAO,e,EAa3I4V,EADLvkB,Y,EAAD,cAC+BC,YAC3BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAOnByS,UAAatS,IACf,MAAM,GAAEiD,EAAF,IAAMsP,GAAQvS,EAAEG,OAAO2Q,QAAQ,OAAOzQ,SAChC,aAAEmQ,GAAiBvQ,KAAKiB,MAC9BsP,EAAavN,GAAMsP,EACnBtS,KAAKC,SAAS,CAAEsQ,kBAXD,KAcnB4S,gBAAmBpjB,IACf,GAA2B,MAAvBA,EAAEG,OAAO+Z,UACT,OAAO,EAEX,MAAM,GAAEjX,GAAOjD,EAAEG,OAAO2Q,QAAQ,gBAAgBzQ,QAC5C4C,GACApC,gBAAO,YAAWoC,IApBP,KAwBnBuP,UAAYzR,eAAOf,GACfA,EAAEyS,iBACFzS,EAAE2F,kBACF,MAAM,MAAEqD,GAAU,EAAKnJ,OACjB,UAAEsB,EAAF,WAAa8H,GAAe,EAAKpJ,MAAMa,QACvC,KAAEuB,GAASd,EACjB,EAAKjB,SAAS,CAAEyQ,aAAc,UACxB1H,EAAWuJ,UAAU,CAAExJ,QAAO/G,UA/BrB,KAkCnB0O,aAAgB3Q,IACZA,EAAEyS,iBACFzS,EAAE2F,kBACF1F,KAAKC,SAAS,CAAEyQ,aAAc,KArCf,KAwCnB4M,eAAiB,KACb,MAAM,MAAEvU,GAAU/I,KAAKJ,OACjB,UAAEsB,GAA0BlB,KAAKJ,MAAMa,QAErCuB,KAAM+Q,GAAgB7R,GAC9B,SAAEmL,EAAW,MAAS0G,EACC/T,IAAGse,eAAe,CACrCpS,OAAQnC,EACRuL,WAAYjI,EACZiO,MAAO,UAGPta,KAAKC,SAAS,CAAEyQ,aAAc,KAlDlC1Q,KAAKiB,MAAQ,CACTsP,aAAc,IAqDtB0R,qBACIjiB,KAAKsd,iBAGTzb,SACI,MAAM,aAAE0O,EAAF,aAAgBG,GAAiB1Q,KAAKiB,OACtC,UAAEC,GAA0BlB,KAAKJ,MAAMa,QACvC,MAAEsI,EAAF,UAASwZ,EAAT,QAAoBrD,GAAYlf,KAAKJ,OACnCoC,KAAM+Q,GAAgB7R,GAC9B,SAAEmL,EAAW,MAAS0G,EAEhBxM,EAAS,GACf,GAAIwC,EAAMxC,OAAQ,CACd,MAAMyN,EAAOC,YAAKlL,EAAMxC,QACxBA,EAAOkD,QAAQuK,GAEnB,MAGMI,EAAcpV,IAAGse,eAAe,CAClCpS,OAAQnC,EACRuL,WAAYjI,EACZiO,MAAO,SAEX,IAAIjR,EAAO+K,GAAerL,EAAMM,KAKhC,OAJIqH,IACArH,EAAON,EAAMM,MAGT,mBAEJ,mBAAK5G,MAAM,6BACP,mBAAKA,MAAM,OACP,YAAC,IAAD,CAAehC,OAAQT,KAAKJ,MAAMa,OAAQ8F,OAAQA,EAAQvD,GAAI+F,EAAM/F,GAAIic,SAAUsD,EAAWrD,QAASA,MAI9G,mBAAKzc,MAAM,YACP,mBAAKA,MAAM,kCAAkCC,MAAQ,IAAEqG,EAAMwa,QAAU,iCAAmC,KACtG,mBAAKvgB,GAAG,cAAc2H,QAAS3K,KAAKmjB,gBAAiBzY,UAAS3B,EAAM/F,IAChE,YAAC,IAAD,CAAU2R,SAAU3V,IAAG4V,cAAcvL,EAAMN,EAAMxC,OAAQ8F,GAAWwI,aAAc7V,IAAG8V,uBACpF/L,EAAMsD,WAAaA,GAAY,oBAC1BqE,GAAgB0D,EAAc,mBAC5B,sBAAQhK,KAAK,SAAS3H,MAAM,sBAAsBkI,QAAS3K,KAAK0Q,cAAc,iBAAGjO,MAAM,eAAvF,KAAwG,YAAC,IAAD,CAAMO,GAAG,gCAAT,mBACtG,mBACF,sBAAQoH,KAAK,SAAS3H,MAAM,sBAAsBkI,QAAS3K,KAAKuS,WAAW,iBAAG9P,MAAM,eAApF,IAAoG,YAAC,IAAD,CAAMO,GAAG,qBAAT,2BAKhH+F,EAAMmF,KAAOnF,EAAMsF,MAAQtF,EAAMqF,QAAU,mBAC3C,mBAAK3L,MAAM,wBAAwBC,MAAQ,IAAEqG,EAAMwa,QAAU,iCAAmC,KAC5F,mBAAK9gB,MAAM,OACNsG,EAAMmF,KAAO,mBACV,mBAAKzL,MAAM,mBAAmBC,MAAM,qBAChC,iBAAGK,KAAM/D,IAAG8kB,MAAM/a,EAAMmF,KAAMhO,OAAO,SAASsf,IAAI,cAC9C,iBAAG/c,MAAM,qBACRsG,EAAMkF,QAAU,mBACZlF,EAAMkF,SACL,mBACF,YAAC,IAAD,CAAMjL,GAAG,yBAAT,2B,EAgBtCihB,EADLxkB,Y,EAAD,cAC8BC,YAC1BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YASnB+Y,WAAc5Y,IACVA,EAAE2F,kBACF3F,EAAEyS,iBACF,MAAM,SAAEoG,GAAa5Y,KAAKiB,MAC1BjB,KAAKC,SAAS,CAAE2Y,UAAWA,KAbZ,KAgBtB2J,UAAYzhB,iBACL,MAAM,MAAEiI,GAAU,EAAKnJ,OACjB,GAAEoD,GAAO+F,EACT0a,EAAUzgB,GAChB,WAAEgG,GAAe,EAAKpJ,MAAMa,QAEtB,UAAE8hB,GAAc,EAAKthB,MAC3BshB,EAAUkB,IAAW,EACrB,MAAMS,EAAUC,OAAOC,KAAK7B,GAC5B,EAAKtiB,SAAS,CAAEsiB,YAAW2B,YAC3Bra,WAAW,KACP,MAAM,UAAE0Y,GAAc,EAAKthB,aACpBshB,EAAUkB,GACjB,MAAMS,EAAUC,OAAOC,KAAK7B,GAC5B,EAAKtiB,SAAS,CAAEsiB,YAAW2B,aAC5B,YAEclb,EAAWuZ,UAAU,CAAEvf,GAAIygB,KAjC7B,KAsCtB7J,iBAAoB7Z,IACnB,MAAM0jB,EAAU1jB,EAAEG,OAAO2Q,QAAQ,UAAUzQ,QAAQ4C,IAC7C,eAAEoN,GAAmBpQ,KAAKiB,MACtBmP,EAAeqT,UACRrT,EAAeqT,GAEtBrT,EAAeqT,IAAW,EAEpCzjB,KAAKC,SAAS,CACbmQ,kBACE,KACEpQ,KAAK8J,SAAS2Z,IACjBzjB,KAAK8J,SAAS2Z,GAASvS,WAlDJ,KAuDnBmT,oBAAsB,KAClBrkB,KAAKC,SAAS,CACnBmQ,eAAgB,MAzDI,KA6DtBkU,sBAAyBvkB,IACxB,MAAM0jB,EAAU1jB,EAAEG,OAAO2Q,QAAQ,UAAUzQ,QAAQ4C,IAC7C,gBAAEsf,GAAoBtiB,KAAKiB,MACvBqhB,EAAgBmB,UACTnB,EAAgBmB,GAEvBnB,EAAgBmB,IAAW,EAErCzjB,KAAKC,SAAS,CACbqiB,qBAtEoB,KA0EnBjQ,UAAatS,IACf,MAAM,GAAEiD,EAAF,IAAMsP,GAAQvS,EAAEG,OAAO2Q,QAAQ,OAAOzQ,SAChC,aAAEmQ,GAAiBvQ,KAAKiB,MAC9BsP,EAAavN,GAAMsP,EACnBtS,KAAKC,SAAS,CAAEsQ,kBA9ED,KAuFnBc,WAActR,IACV,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,KAAKzQ,SACrC,SAAEkR,EAAW,IAAOtR,KAAKiB,MACzBqQ,EAAStO,IAAOsO,EAAStO,GAC/BhD,KAAKC,SAAS,CACJskB,gBAAiB,GACjB/S,SAAU,GACnBF,cA9FoB,KAkGnBG,WAAc1R,IACV,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAC1C,SAAEoR,EAAW,IAAOxR,KAAKiB,MACzBuQ,EAASxO,IAAOwO,EAASxO,GAC/BhD,KAAKC,SAAS,CACJskB,gBAAiB,GAC1B/S,WACSF,SAAU,MAzGC,KA6GnBkT,kBAAqBzkB,IACjB,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAC1C,gBAAEmkB,EAAkB,IAAOvkB,KAAKiB,MAChCsjB,EAAgBvhB,IAAOuhB,EAAgBvhB,GAC7ChD,KAAKC,SAAS,CACbskB,kBACS/S,SAAU,GACVF,SAAU,MApHC,KAwHnBmT,YAAc3jB,eAAOf,GACjB,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SACpC,WAAE4I,GAAe,EAAKpJ,MAAMa,aAC5BuI,EAAWyb,YAAY,CAAEzhB,OAC/B,EAAK/C,SAAS,CACVuR,SAAU,GACVF,SAAU,MA9HC,KAkInBoT,iBAAmB5jB,eAAOf,GACtB,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SACpC,WAAE4I,GAAe,EAAKpJ,MAAMa,aAC5BuI,EAAW2b,eAAe,CAAE3hB,OAClC,EAAK/C,SAAS,CACVuR,SAAU,GACVF,SAAU,MAxIC,KA4InBsT,YAAc9jB,eAAOf,GACjB,MAAM,GAAEiD,GAAOjD,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SACpC,WAAE4I,GAAe,EAAKpJ,MAAMa,aAC5BuI,EAAW2Z,UAAU3d,SAAShC,EAAI,IAAK,UAAW,GAAG,GAC3DgG,EAAW4Z,iBAAiB5d,SAAShC,EAAI,IAAK,UAAW,GACzD,EAAK/C,SAAS,CACVyiB,UAAW,GACpB6B,gBAAiB,GACR/S,SAAU,GACVF,SAAU,MArJC,KAyJnBuT,SAAW,KACP7kB,KAAKC,SAAS,CACVyiB,UAAW,GACpB6B,gBAAiB,GACR/S,SAAU,GACVF,SAAU,MA9JC,KAkKnB6R,gBAAmBpjB,IACf,GAA2B,MAAvBA,EAAEG,OAAO+Z,UACT,OAAO,EAEX,MAAM,GAAEjX,GAAOjD,EAAEG,OAAO2Q,QAAQ,gBAAgBzQ,QAC5C4C,GACApC,gBAAO,YAAWoC,IAxKP,KA4KnB6W,UAAa9Z,IACT,MAAM,IAAEmO,EAAF,MAAOJ,EAAP,KAAcgM,GAAS/Z,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAClD,SAAEI,GAAaR,KAAKJ,MAAMa,OAChCD,EAASuZ,SAAS,CAAE7L,MAAKJ,QAAOgM,UA7KhC9Z,KAAKiB,M,+VAAL,IACO7B,GAEbY,KAAK8J,SAAW,GA4Ed,4BAA4BlK,EAAQI,KAAKJ,OACrC,MAAM,QAAEklB,GAAYllB,GACpB,WAAEoJ,GAAepJ,EAAMa,aACvBuI,EAAW0F,eAAe,CAAEoW,YA8GhCjjB,SACI,MAAM,eAAEuO,EAAF,SAAkBwI,EAAlB,SAA0CtH,EAAW,GAArD,SAAyDE,EAAW,GAApE,gBAAwE+S,EAAkB,GAA1F,gBAA8FjC,EAA9F,UAA+GC,EAA/G,QAA0H2B,GAAYlkB,KAAKiB,OAC3I,MAAE8H,EAAF,gBAASsH,EAAT,YAAqCoK,EAAc,SAAnD,YAA6DC,EAAc,UAAa1a,KAAKJ,OAC7F,UAAEsB,EAAF,WAAa8H,EAAb,SAAyBxI,GAAaR,KAAKJ,MAAMa,QAC/CuB,KAAM+Q,EAAc,GAAtB,QAA0BtD,GAAYvO,GACtC,YAAY0Z,GAAgBpa,EAE5BgE,EAAOwE,EAAW+R,eAAehS,EAAMvE,OAAS,GAChDxC,EAAOgH,EAAWgS,eAAejS,EAAM/G,OAAS,GAChD2H,EAAQ3K,IAAG0c,SAAS,CAAE1Z,OAAMwC,OAAMmX,SAAU,OAAQzQ,OAAQnC,IAE5DuS,KAAe9W,IAAQA,EAAK+W,UAAW/W,EAAK+W,QAAQC,KAAKC,GAAKA,IAAM1I,EAAY/P,IAEtF,IAAIyZ,EACAxR,EACAyR,EACAC,EACAnY,GAAQA,EAAKyG,MACbwR,EAAYzd,IAAG+K,iBAAiBvF,GAChCyG,EAAOjM,IAAGiL,YAAYzF,GACtBkY,EAAW1d,IAAGiL,YAAYjI,GACtBA,EAAK4a,UAAY7J,EAAYyB,SAAWxS,EAAKwS,SAC7CmI,EAAW3a,EAAK4a,SAASC,YAAc,KAAQ,UAAS7a,EAAKwS,SAE1DxS,GAAQA,EAAKgB,KACpByZ,EAAYzd,IAAG+K,iBAAiB/H,GAChCiJ,EAAOjM,IAAGiL,YAAYjI,IAE1B,MAAM,MAAE2R,EAAF,SAASP,EAAT,QAAmB2R,EAAU,IAAOhc,EACpCic,EAAgBjc,EAAM4K,OAAS5K,EAAM4K,MAAMC,UAAU7T,GAAKA,EAAEiC,OAAS+Q,EAAY/P,KAAO,EACxF6Y,EAAiBrX,EAAKsX,UAAYtX,EAAKsX,UAAUlV,OAAS,EAE1DmV,EAAavX,EAAK+W,SAAW/W,EAAK+W,QAAQS,QAAQjJ,EAAY/P,KAAO,EACrEiZ,EAAczX,EAAKsX,WAAatX,EAAKsX,UAAUE,QAAQjJ,EAAY/P,KAAO,EAC1EkZ,EAAqB1X,EAAK2X,gBAAkB3X,EAAK2X,eAAevI,UAAU7T,GAAKA,EAAEiD,KAAO+P,EAAY/P,KAAO,GAE3G,uBAAEf,EAAyB,GAA3B,UAA+B8a,EAAY,IAAOhU,EAClDiU,EAAQhe,IAAGie,SAASlU,EAAMmU,YAC1BC,EAAYne,IAAGoe,aAAarU,EAAMmU,YAExC,OAAQ,mBAaMzN,GAAYsD,EAAY/P,KAAOhB,EAAKgB,GAAO,mBACzC,oBAAMP,MAAM,8CACR,iBAAGA,MAAM,oBAAoBkI,QAAS3K,KAAKqR,WAAY3G,UAAS3B,EAAM/F,OAExE,oBACA+Y,IAAeE,IAAgBC,GAAsB1X,EAAKwJ,OAAS,GAAK,oBAAMvL,MAAM,eAClF,YAAC,IAAD,CAAYhC,OAAQT,KAAKJ,MAAMa,OAAQ+D,KAAMA,EAAM6a,YAAY,EAAM4F,QAAQ,EAAMC,WAAY,gCAGtG5T,EAASvI,EAAM/F,KAAO,mBACnB,mBAAKP,MAAM,qEAAqEC,MAAM,wDACjFqQ,EAAY/P,KAAOhB,EAAKgB,GAAK,mBAC1B,sBAAQP,MAAM,mCAAmCkI,QAAS3K,KAAKyR,WAAY/G,UAAS3B,EAAM/F,IAAI,iBAAGP,MAAM,gBAAvG,SACA,uBACA,sBAAQA,MAAM,+CAA+CkI,QAAS3K,KAAKwkB,kBAAmB9Z,UAAS3B,EAAM/F,IAAI,iBAAGP,MAAM,qBAA1H,YACE,mBACF,sBAAQA,MAAM,mCAAmCkI,QAAS3K,KAAKykB,YAAa/Z,UAAS3B,EAAM/F,IAAI,iBAAGP,MAAM,gBAAxG,WACCgN,GAAW,mBACR,uBACA,sBAAQhN,MAAM,+CAA+CkI,QAAS3K,KAAK0kB,iBAAkBha,UAAS3B,EAAM/F,IACxG,iBAAGP,MAAM,kBADb,yBAQhB,mBAAKA,MAAM,4BACP,mBACIA,MAAQ,sFACRC,MAAOiH,EAAS,0BAAyBA,+BAAqC,KAE5EA,GAAS,mBAAKlH,MAAM,aAAaC,MAAM,sCAAsC+Z,IAEnF,mBAAKha,MAAM,iCAAiCC,MAAM,uBAC9C,kBAAID,MAAM,yBAAyBC,MAAQ,wBAAsBqG,EAAMwa,QAAU,iCAAmC,KAC/G/e,EAAKwJ,OAAS,mBACX,iBAAGjL,KAAO,iBAAgByB,EAAKgQ,OAAU7J,QAAU5K,GAAM0a,EAAY1a,EAAGyE,EAAKgQ,QAAS/R,MAAM,kBAAkBwI,IAE5G,mBACDA,GAGJ8Q,IAAevX,EAAKwJ,QAAU,sBAAQ5D,KAAK,SAAS3H,MAAM,iCACvDiI,UAAS3B,EAAM/F,GACf2H,QAAS3K,KAAKskB,uBAEd,iBAAG7hB,MAAM,kCAIjB,mBAAKA,MAAM,OAAOC,MAAQ,IAAEqG,EAAMwa,QAAU,iCAAmC,KAC1Exa,EAAMgF,QAAU,mBACb,qBAAOtL,MAAM,mBACT,iBAAGA,MAAM,uBAGD,IAAfsG,EAAMqB,KAAa,mBAChB,qBAAO3H,MAAM,cAAa,YAAC,IAAD,CAAMO,GAAG,mBAAT,aAA1B,OACE,mBACD+F,EAAM0U,MAAQ,qBAAOhb,MAAM,aAAakI,QAAS3K,KAAK2Y,YAClDC,EAAWhW,IAAK8a,WAAW3U,EAAM0U,KAAM,CAAErI,OAAQ,QAASuI,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAAejb,IAAKsS,eAAenM,EAAM0U,KAAM,IAAIzZ,KAAQ,CAAEoR,OAAQ,YAG9J,IAAjBrM,EAAMiF,OAAe,mBAClB,qBAAOvL,MAAM,mBACT,iBAAGA,MAAM,0BAEX,mBACF,qBAAOA,MAAM,mBACT,iBAAGA,MAAM,iBADb,KACiCG,IAAKE,OAAO+Y,GAD7C,MAIHa,GAAY,mBACT,qBAAOja,MAAM,mBACRka,EAAW,mBACR,iBAAGla,MAAM,gBADD,IACkB,iBAAGM,KAAM4Z,GAAWD,IAC5C,mBACF,iBAAGja,MAAM,gBADP,IACyBia,KAItCza,GAA0BA,EAAuBic,iBAAmB,mBACjE,qBAAOzb,MAAM,mBACT,iBAAGA,MAAM,0BADb,IACyCR,EAAuBic,mBAIvEzO,GAAW,mBACRhN,MAAM,qEACNC,MAAM,mBAEN,qBAAOD,MAAM,mBAAb,QACCsiB,GAAWA,EAAQne,OAAS,GAAK,mBAC9B,qBAAOnE,MAAM,oBACT,iBAAGA,MAAM,gBADb,IAC+BsiB,EAAQne,SAG1C3E,GAA0BA,EAAuBoc,mBAAqB,mBACnE,qBAAO5b,MAAM,cACT,iBAAGA,MAAM,0BADb,IACyCR,EAAuBoc,oBAGnErc,EAAKsc,YAAc,mBAChB,oBAAM7b,MAAM,4DACP,CAAC,WAAY,eAAgB,SAASuE,IAAIjH,GAAK,mBAC5C,oBAAM0C,MAAM,mBACPT,EAAKsc,WAAWve,QAMhCod,GAAa,mBACV,qBAAO1a,MAAM,mBAAb,MACQ0a,EAAUoB,OAElB,qBAAO9b,MAAM,mBAAb,MACQ0a,EAAUqB,QADlB,IAC4B5b,IAAK6b,SAAStB,EAAUuB,eAAiB,mBAAE,iBAAGjc,MAAOzD,IAAG2f,iBAAiBxB,EAAUuB,kBAE/G,qBAAOjc,MAAM,mBAAb,MACQG,IAAKE,OAAOqa,EAAUyB,YAAc,IAAM,GADlD,KACwDhc,IAAK6b,SAAStB,EAAU0B,mBAAqB,mBAAE,iBAAGpc,MAAOzD,IAAG2f,iBAAiBxB,EAAU0B,sBAE9I9V,EAAM+V,mBAAqB/V,EAAM+V,kBAAkBC,kBAAoB,GAAK,qBAAOtc,MAAM,mBAAb,MACrEG,IAAKE,OAAOiG,EAAM+V,kBAAkBC,kBAAmB,IAE9DhW,EAAMiW,YAAcjW,EAAMiW,WAAWhY,IAAI2G,GAAO,mBAC7C,oBAAMlL,MAAM,4DAA4DkL,SAc5F,mBAAKlL,MAAM,YACP,mBAAKA,MAAM,kBAAkBC,MAAQ,IAAEqG,EAAMwa,QAAU,iCAAmC,KACrF/R,EAASzI,EAAM/F,KAAO,mBACnB,YAACwf,EAAD,CACI/hB,OAAQT,KAAKJ,MAAMa,OACnBsI,MAAOA,EACP4J,IAAM,cAAa5J,EAAM/F,GACzB6F,SAAU7I,KAAK6kB,YAGtBN,EAAgBxb,EAAM/F,KAAO,mBAAKP,MAAM,sBACrC,sBAAQA,MAAM,4BAA4BkI,QAAS3K,KAAK4kB,YAAala,UAAS3B,EAAM/F,IAAI,iBAAGP,MAAM,qBAAjG,WACA,sBAAQA,MAAM,gCAAgCkI,QAAS3K,KAAKwkB,kBAAmB9Z,UAAS3B,EAAM/F,IAAI,iBAAGP,MAAM,wBAA3G,gBAKTsG,EAAMqB,MAAsB,GAAdrB,EAAMqB,OAAc,YAAC8Y,EAAD,CAAkBziB,OAAQT,KAAKJ,MAAMa,OAAQsI,MAAOA,EAAO4J,IAAM,sBAAqB5J,EAAM/F,GAAMuf,UAAWviB,KAAKuiB,UAAWrD,QAASqD,EAAW6B,KAAMF,IAC7K,GAAdnb,EAAMqB,MAAa,YAACyZ,EAAD,CAAapjB,OAAQT,KAAKJ,MAAMa,OAAQsI,MAAOA,EAAO4J,IAAM,iBAAgB5J,EAAM/F,GAAMuf,UAAWviB,KAAKuiB,UAAWrD,QAASqD,EAAW6B,KAAMF,IAClJ,GAAdnb,EAAMqB,MAAa,YAAC4Z,EAAD,CAAkBvjB,OAAQT,KAAKJ,MAAMa,OAAQsI,MAAOA,EAAO4J,IAAM,sBAAqB5J,EAAM/F,GAAMuf,UAAWviB,KAAKuiB,UAAWrD,QAASqD,EAAW6B,KAAMF,IAE3K,mBAAKzhB,MAAM,uCACP,mBAAKA,MAAM,QACP,YAAC,IAAD,CACIhC,OAAQT,KAAKJ,MAAMa,OACnBkT,MAAOA,EACPP,SAAUA,EACVhJ,KAAK,QACLqQ,YAAaA,EACbC,YAAaA,KAGpBsC,EAAQ,GAAK,mBACV,uBACI,YAAC,IAAD,CACIvc,OAAQT,KAAKJ,MAAMa,OACnBuc,MAAOA,EACP9R,OAAQnC,EACRqB,KAAK,QACLkR,YAAaA,EACb7L,QAASA,EACTgL,YAAaA,EACbC,YAAaA,OAM5B4H,EAAgBvZ,EAAM/F,KAAO,mBAC1B,yBACI,mBAAKP,MAAM,mBAAmBE,KAAK,SAC/B,oBAAMF,MAAM,wBACR,iBAAGA,MAAM,2CAEb,qBACI,YAAC,IAAD,CAAMO,GAAG,sBAAT,yFAEJ,qBACI,YAAC,IAAD,CAAMA,GAAG,sBAAT,mHAEJ,qBACI,iBAAGD,KAAO,eAAcyB,EAAKxB,IAAM,YAAC,IAAD,CAAMA,GAAG,sBAAT,kBAMnD,uBACI,mBAAKP,MAAM,OACP,mBAAKA,MAAM,mBACP,sBACI2H,KAAK,SACL3H,MAAQ,qCAAoCuiB,EAAgB,UAAY,gCAAgCA,EAAgB,eAAiB,mBACzIta,UAAS3B,EAAM/F,GACf2H,QAAS3K,KAAKuiB,WAEd,iBAAG9f,OAAUuiB,EAAgB,mBAAqB,OAAvC,kBANf,IAMgFA,EAAgB,YAAC,IAAD,CAAMhiB,GAAG,sBAAT,SAA6C,YAAC,IAAD,CAAMA,GAAG,iBAAT,SAGjJ,mBAAKP,MAAM,mBACP,sBACI2H,KAAK,SACL3H,MAAM,kEACNiI,UAAS3B,EAAM/F,GACf2H,QAAS3K,KAAK4Z,kBAEd,iBAAGnX,MAAM,mBANb,IAMiC,YAAC,IAAD,CAAMO,GAAG,wBAAT,eAGpC4X,EAAc,mBACX,mBAAKnY,MAAM,mBACP,sBAAQA,MAAM,kEACVkI,QAAS3K,KAAK6Z,UACdyF,WAAW,qCAAoCvW,EAAMyL,OACrD+K,aAAa,UAASxW,EAAM+E,OAE5B,iBAAGrL,MAAM,iBALb,IAK+B,YAAC,IAAD,CAAMO,GAAG,eAAT,UAGjC,mBACF,mBAAKP,MAAM,mBACP,iBAAGA,MAAM,kEACLM,KAAO,qCAAoCgG,EAAMyL,OACjDtU,OAAO,SACPsf,IAAI,aACJC,eAAA,GAEA,iBAAGhd,MAAM,iBANb,IAM+B,YAAC,IAAD,CAAMO,GAAG,eAAT,YAQ/C,mBAAKP,MAAM,QACP,YAAC,IAAD,CACIhC,OAAQT,KAAKJ,MAAMa,OACnBsI,MAAOA,EACPwG,IAAI,KACJC,OAAO,IACPsD,SAAS,EACTzC,gBAAiBA,EACjB3E,SAAU1L,KAAKqkB,sBAElBjU,EAAerH,EAAM/F,KAAO,YAAC,IAAD,CACzBvC,OAAQT,KAAKJ,MAAMa,OACnBsI,MAAOA,EACPe,SAAUnG,GAAK3D,KAAK8J,SAASf,EAAM/F,IAAMW,EACzCmF,eAAgB9I,KAAK8J,SACrByF,IAAI,KACJC,OAAO,IACPmD,IAAM,iBAAgB5J,EAAM/F,W,EAWzCihB,Q,sLCznCTkB,EADL1lB,Y,EAAD,cACwBC,YACnBC,YAAYC,GAAO,MAChBC,MAAMD,GADU,YAMpBwlB,UAAYtkB,eAAOf,GACf,MAAM,QAAE0jB,GAAY,EAAK7jB,OACzB,WAAEoJ,GAAe,EAAKpJ,MAAMa,QACtB,KAAE4kB,GAAStlB,EAAEG,OAAOE,cACT4I,EAAWoc,UAAU,CAAEpiB,GAAIygB,EAAS4B,UARrDrlB,KAAKiB,MAAQ,GACbjB,KAAK8J,SAAW,GAUpBjI,SACI,MAAM,MAAEkH,EAAF,KAA0B4a,EAA1B,QAAgCC,GAAY5jB,KAAKJ,OACjD,UAAEsB,GAA0BlB,KAAKJ,MAAMa,QACrCuB,KAAM+Q,GAAgB7R,GAC9B,SAAEmL,EAAW,MAAS0G,EAEhBuS,EAAQ1B,EAAQ2B,MAAM,MAAMve,IAAIqe,GAAQA,EAAKG,OAAOC,QAAQ,UAAW,KACvEC,EAAiB3c,EAAM4c,OAAS5c,EAAM4c,MAAM/R,UAAU7T,GAAKA,EAAEiC,OAAS+Q,EAAY/P,KAAO,EACzF4iB,EAAa7c,EAAM4c,MAAQ5c,EAAM4c,MAAM/e,OAAS,EACtD,IAAIif,EAAa,EACjBP,EAAM/O,QAAS8O,IACX,MAAMS,EAAqG,KAA1F/c,EAAM4c,MAAQ5c,EAAM4c,MAAMlR,OAAO1U,GAAKA,EAAEslB,OAASrmB,IAAG+mB,IAAIV,IAAOze,OAASgf,EAAa,GAClGE,EAAUD,IACVA,EAAaC,KAGrB,MAAME,EAAWrC,EAAKsC,KAAOjhB,SAAS2e,EAAKsC,KAAM,IAAM,EAEjDC,EAAatjB,IAAKujB,QAAQpd,EAAM0U,KAAMuI,GACtCI,EAAYF,EAAa,IAAIliB,KAEnC,OAAQ,mBACJ,mBAAKvB,MAAM,cACN2jB,GAAaV,EAAiB,mBAC1BJ,GAASA,EAAMte,IAAKqe,IACjB,MAAMgB,EAAgBtd,EAAM4c,OAAS5c,EAAM4c,MAAM/R,UAAU7T,GAAKA,EAAEiC,OAAS+Q,EAAY/P,IAAMjD,EAAEslB,OAASrmB,IAAG+mB,IAAIV,KAAU,EAEnHS,GADiB/c,EAAM4c,MAAQ5c,EAAM4c,MAAMlR,OAAO1U,GAAKA,EAAEslB,OAASrmB,IAAG+mB,IAAIV,IAAOze,OAAS,GAC9Dgf,EAAa,IAC9C,OAAQ,mBACJ,mBAAKnjB,MAAQ,mCAAmCC,MAAM,oCAClD,oBAAMD,MAAM,oBAAoBC,MAAM,gBAAtC,IAAuDE,IAAKE,OAAOgjB,GAAW,EAAG,GAAjF,KACA,oBAAMrjB,MAAM,oBAAoBC,MAAM,eAAtC,IAAsD2jB,GAAiB,iBAAG5jB,MAAM,wBAAhF,IAA2G4iB,GAC3G,mBACI5iB,MAAQ,iBAAeojB,IAAeC,EAAU,aAAe,gBAC/DnjB,KAAK,cACLD,MAAQ,UAASojB,MACjB9Y,gBAAe8Y,EACf7Y,gBAAc,IACdC,gBAAc,YAM9B,mBAAKzK,MAAM,sDACP,uBAAMG,IAAKE,OAAO8iB,EAAY,GAA9B,IAAkD,IAAfA,EAAmB,YAAC,IAAD,CAAM5iB,GAAG,cAAT,QAAoC,YAAC,IAAD,CAAMA,GAAG,eAAT,UACzFojB,EAAY,mBACT,mBAAK3jB,MAAM,QAAX,KAAoB,YAAC,IAAD,CAAMO,GAAG,kBAAT,cAClB,mBACF,mBAAKP,MAAM,QAAX,KAAqBG,IAAKsS,eAAegR,EAAY,IAAIliB,KAAQ,GAAI,CAAEsiB,UAAU,IAAjF,IAA0F,YAAC,IAAD,CAAMtjB,GAAG,cAAT,YAGhG,mBACDsiB,GAASA,EAAMte,IAAKqe,GAAc,mBAC/B,sBAAQ5iB,MAAM,iDAAiDkI,QAAS3K,KAAKolB,UAAWmB,YAAWvnB,IAAG+mB,IAAIV,IAAQA,KAGtH,mBAAK5iB,MAAM,sDACP,uBAAMG,IAAKE,OAAO8iB,EAAY,GAA9B,IAAkD,IAAfA,EAAmB,YAAC,IAAD,CAAM5iB,GAAG,cAAT,QAAoC,YAAC,IAAD,CAAMA,GAAG,eAAT,UACzFojB,EAAY,mBACT,mBAAK3jB,MAAM,QAAX,KAAoB,YAAC,IAAD,CAAMO,GAAG,kBAAT,cAClB,mBACF,mBAAKP,MAAM,QAAX,KAAqBG,IAAKsS,eAAegR,EAAY,IAAIliB,KAAQ,GAAI,CAAEsiB,UAAU,IAAjF,IAA0F,YAAC,IAAD,CAAMtjB,GAAG,cAAT,kB,EASvGmiB,Q,ieCvFf,MAAM/lB,EAAe,CACpBonB,YAAa,I,IAIRC,EADLhnB,Y,EAAD,cACoBC,YAChBC,YAAYC,GACRC,MAAMD,GADS,KActB8mB,kBAAqB3mB,IACd,MAAM,UAAE+D,EAAF,UAAa5C,GAAclB,KAAKJ,MAAMa,QACtC,KAAEuB,GAASd,GACX,KAAEsD,GAASzE,EAAEG,OAAO2Q,QAAQ,UAAUzQ,QAC5C0D,EAAU6iB,cAAc3hB,SAASR,EAAM,IAAKxC,GAClD,MAAM,YAAEwkB,GAAgBxmB,KAAKiB,MAC7BulB,EAAYhiB,IAAQ,EACdxE,KAAKC,SAAS,CAAEumB,iBArBD,KAwBnBI,UAAapiB,IACT,MAAM,YAAEgiB,GAAgBxmB,KAAKiB,OACvB,UAAEC,GAAclB,KAAKJ,MAAMa,QAC3B,KAAEuB,GAASd,EACX6a,EAAavX,EAAK+W,SAAW/W,EAAK+W,QAAQ3H,UAAU7T,GAAKA,EAAEiD,KAAOhB,EAAKgB,KAAO,EAC9EiZ,EAAczX,EAAKsX,WAAatX,EAAKsX,UAAUE,QAAQha,EAAKgB,KAAO,EACnE6jB,EAAYriB,EAAKsiB,kBAAoBtiB,EAAKsiB,iBAAiB9K,QAAQha,EAAKgB,KAAO,EAC/EkZ,EAAqBsK,EAAYhiB,EAAKxB,KAAOwB,EAAK2X,gBAAkB3X,EAAK2X,eAAevI,UAAU7T,GAAKA,EAAEiD,KAAOhB,EAAKgB,KAAO,EAElI,OAAI+Y,EAEI,iBAAGtZ,MAAM,gBAGbwZ,EAEI,sBACIxZ,MAAQ,yDACRkI,QAAS3K,KAAK+mB,aACdnc,SAAS,OACToc,YAAWxiB,EAAKxB,IAEhB,iBAAGP,MAAM,qBACT,YAAC,IAAD,CAAMO,GAAG,8BAAT,WAIR6jB,EAEI,sBACIpkB,MAAQ,yDACRmI,SAAS,QAET,iBAAGnI,MAAM,2BACT,YAAC,IAAD,CAAMO,GAAG,4BAAT,aAIRkZ,EAEI,sBACIzZ,MAAQ,yDACRmI,SAAS,QAET,iBAAGnI,MAAM,+BACT,YAAC,IAAD,CAAMO,GAAG,+BAAT,0BAKR,sBACIP,MAAQ,uDACRkI,QAAS3K,KAAK0mB,kBACdM,YAAWxiB,EAAKxB,IAEhB,iBAAGP,MAAM,iCACT,YAAC,IAAD,CAAMO,GAAG,wBAAT,UA9ERhD,KAAKiB,M,+VAAL,IACO7B,GAId,kBACCY,KAAKC,SAAS,CAAEX,WAAW,IAC3B,MAAM,UAAEwE,GAAc9D,KAAKJ,MAAMa,aAC3BqD,EAAUmjB,WAAW,CAAE1iB,MAAO,CAAE2iB,aAAc,EAAGC,MAAO,GAAK9O,MAAO,KAC1ErY,KAAKC,SAAS,CAAEX,WAAW,IA0E5BkC,oBACCxB,KAAK6D,YAGNhC,SACC,MAAM,UAAEiC,EAAF,SAAatD,GAAaR,KAAKJ,MAAMa,QACrC,oBAAE2mB,GAAwBtjB,GACpB,SAAEiM,GAAavP,EAC3B,OAAK4mB,GAAsD,IAA/BA,EAAoBxgB,OAK/C,mBAAKnE,MAAM,qBACE,mBAAKA,MAAQ,sGAAqGsN,EAAW,QAAU,qBAClJ,mBAAKtN,MAAM,mBACV,mBAAKA,MAAM,OACV,mBAAKA,MAAM,UACV,sBAAI,YAAC,IAAD,CAAMO,GAAG,iCAAT,qBAAJ,OAGF,mBAAKP,MAAM,OACV,mBAAKA,MAAM,8BAA8BC,MAAM,mBAC7CE,IAAKiI,QAAQuc,IAAwBA,EAAoBpgB,IAAKxC,IAC9D,MAAMmF,EAAQnF,EAAKmF,OAASnF,EAAKmF,MAAMO,YAAc1F,EAAKmF,MAAQ,KAClE,OACC,mBAAKlH,MAAM,OAAOC,MAAM,iBACvB,mBACCD,MAAQ,gCACRC,MAAOiH,EAAS,0BAAyBA,EAAMO,sEAAwE,iCAErHP,GAAS,iBAAGlH,MAAM,+BAA+BC,MAAM,sBAE1D,yBACC,mBAAKD,MAAM,iBACV,0BAAS+B,EAAKyG,OAEf,mBAAKxI,MAAM,iBACT+B,EAAK6iB,MAAW7iB,EAAK6iB,MAAP,KAAmB,GADnC,IACwC7iB,EAAK8J,QAD7C,MAGA,mBAAK7L,MAAM,iBACV,qBAAOA,MAAM,cACX+B,GAAQA,EAAKsZ,MAAQ,oBAAMrb,MAAM,IAAG,iBAAGA,MAAM,eAAxB,IAAyC+B,EAAKsZ,KAAKlX,QACxEpC,GAAQA,EAAKsX,WAAa,oBAAMrZ,MAAM,QAAO,iBAAGA,MAAM,gBAA5B,IAA8C+B,EAAKsX,UAAUlV,WAI3F,uBACE5G,KAAK4mB,UAAUpiB,YAvClB,O,EAqDKiiB,O,wGC3JTa,EADL7nB,Y,EAAD,cACqBC,YAAU,gDAC3B6nB,aAAezmB,iBACX,MAAQ0mB,YAAa3X,GAAU,EAAK5O,OACpC,UAAEC,GAAc,EAAKtB,MAAMa,OACrB0I,QAAiBjI,EAAUqmB,aAAa,CAAE1X,UAChD,EAAK5P,SAAS,CACVkJ,WACAse,YAAY,KAPO,KAW3BC,UAAY,KACR1nB,KAAKC,SAAS,CACVwnB,YAAY,KAbO,KAiB3BE,WAAa7mB,iBACT,MAAM,UAAEI,GAAc,EAAKtB,MAAMa,aAC3BS,EAAU0mB,cAAc,CAAE,sBAAuB,IACvD,EAAK3nB,SAAS,CACV0nB,YAAY,KAIpB9lB,SACI,MAAM,WAAE4lB,EAAF,WAAcE,GAAe3nB,KAAKiB,OACxC,UAAEC,GAAclB,KAAKJ,MAAMa,QACrB,UAAEonB,GAAc7nB,KAAKJ,OACrB,KAAEoC,GAASd,GACX,SAAE0b,EAAW,IAAO5a,EAC1B,OAAK6lB,GAAajL,EAAS+K,YAAcA,EAC9B,GAEPF,EAEI,mBAAKhlB,MAAM,UACP,YAAC,IAAD,CAAMO,GAAG,uBAAT,iDACA,sBAAQoH,KAAK,SAAS3H,MAAM,2BAA2BkI,QAAS3K,KAAK0nB,WACjE,YAAC,IAAD,CAAM1kB,GAAG,qBAAT,oBAMZ,mBAAKP,MAAM,wBACP,sBAAI,YAAC,IAAD,CAAMO,GAAG,sBAAT,qCACJ,qBACI,YAAC,IAAD,CAAMA,GAAG,qBAAT,mIAEJ,uBACI,mBAAKP,MAAM,+BACP,mBAAKA,MAAM,YACP,qBAAOA,MAAM,UAAU0H,IAAI,mBAAkB,YAAC,IAAD,CAAMnH,GAAG,sBAAT,WAC7C,YAAC,IAAD,KACI,qBAAOoH,KAAK,OAAO3H,MAAM,oCAAoCO,GAAG,kBAC5DqH,YAAa,YAAC,IAAD,CAAMrH,GAAG,kCAAT,wBACbsH,QAASC,YAAUvK,KAAM,mBAIrC,mBAAKyC,MAAM,YACP,sBAAQ2H,KAAK,SAAS3H,MAAM,8BAA8BkI,QAAS3K,KAAKunB,cACpE,YAAC,IAAD,CAAMvkB,GAAG,qBAAT,wBAKd6kB,GAAa,sBAAQzd,KAAK,SAAS3H,MAAM,sCAAsCkI,QAAS3K,KAAK2nB,YAC3F,iBAAGllB,MAAM,qBADE,IACoB,YAAC,IAAD,CAAMO,GAAG,qBAAT,e,EAOpCskB,O,wGC3ETQ,EADLroB,Y,EAAD,cAC0BC,YACtBC,YAAYC,GACRC,MAAMD,GADS,KAOnBmoB,aAAgBhoB,IACZ,MAEM,WAAEioB,EAAF,YAA2BC,GAAgBloB,EAAEG,OAE7CgU,EAAW8T,EADCC,EAIZC,EAAa5U,KAAK6U,MAAMjU,GACxBkU,EAAO9U,KAAK+U,IAAIH,EAAahU,IAE/BoU,OAAOC,UAAUrU,IAAakU,EAAO,KACrCpoB,KAAKC,SAAS,CACViU,SAAUgU,KApBH,KAyBnBM,WAAa,CAACC,EAAGC,KACb,MAAM,QAAEvJ,EAAU,IAAOnf,KAAKJ,MACxB+oB,EAAOxJ,EAAQyJ,KAAK7oB,GAAKA,EAAEiD,KAAOylB,GAClCI,EAAO1J,EAAQyJ,KAAK7oB,GAAKA,EAAEiD,KAAO0lB,GACxC,OAAIC,GAAQE,GACJF,EAAK1d,KAAO4d,EAAK5d,KACV,GAGP,GAhCRjL,KAAKiB,MAAQ,CACTiT,SAAU,GAkClBrS,SACI,MACM,KAAEic,EAAF,QAAQqB,EAAU,GAAlB,KAAsB2J,EAAO,SAA7B,WAAuCnO,EAAa,UAAa3a,KAAKJ,MAE5E,OACI,mBAAK6C,MAAM,SACP,mBACIA,MAAM,2CACNC,MAAM,iDACNqmB,SAAU/oB,KAAK+nB,cAEdjK,GAAQA,EAAKkE,KAAKhiB,KAAKwoB,YAAYxhB,IAAKgiB,IACrC,MAAM9c,EAAMiT,EAAQyJ,KAAK7oB,GAAKA,EAAEiD,KAAOgmB,GACvC,OAAK9c,EAID,mBAAKzJ,MAAM,2CACP,mBACIA,MAAQ,qGACRC,MAAQ,gKAIRqF,aAAehI,IAAQA,EAAE2F,mBACzBsC,WAAajI,IAAQA,EAAE2F,mBACvBuC,YAAclI,IAAQA,EAAE2F,oBAExB,YAAC,IAAD,CACIjF,OAAQT,KAAKJ,MAAMa,OACnByL,IAAKA,EACL4R,KAAMqB,EAAQ1K,OAAOwU,GAAKnL,EAAK9B,QAAQiN,EAAEjmB,KAAO,GAAGgf,KAAK,CAACyG,EAAGC,IAAMD,EAAExd,KAAOyd,EAAEzd,KAAO,GAAK,GACzFie,UAAU,UACVC,UAAU,EACVC,cAAc,EACdN,KAAMA,EACNnO,WAAYA,MAtBjB,W,EAmCpBmN,O,kGCzFdroB,Y,EAAD,cAC2BC,YAAU,gDACjC2pB,cAAevoB,eAAOwZ,GAClB,MAAM,UAAEpZ,GAAc,EAAKtB,MAAMa,QACjC,KAAEuB,GAASd,GACX,SAAE0b,EAAW,IAAO5a,QACdd,EAAU0mB,cAAc,CAAE,CAAE,YAAWtN,GAA8B,IAApBsC,EAAStC,GAAe,EAAI,KALtD,KAQjCgP,aAAexoB,iBACX,MAAM,UAAEI,GAAc,EAAKtB,MAAMa,aAC3BS,EAAU0mB,cAAc,CAAE,wBAAyB,IACzD,EAAK3nB,SAAS,CACVqpB,cAAc,KAItBznB,SACI,MAAM,aAAEynB,GAAiBtpB,KAAKiB,OAC9B,UAAEC,GAAclB,KAAKJ,MAAMa,QACrB,UAAEonB,GAAc7nB,KAAKJ,OACrB,KAAEoC,GAASd,GACX,SAAE0b,EAAW,IAAO5a,EAC1B,OAAIsnB,GAAgB1M,EAAS0M,eAGxBzB,GAAajL,EAAS2M,eAAiB3M,EAAS4M,YAAc5M,EAAS6M,cAFjE,GAMR,mBAAKhnB,MAAM,iGACN,sBAAI,YAAC,IAAD,CAAMO,GAAG,kBAAT,yBAEF4Z,EAAS2M,eAAiB,mBAAK9mB,MAAM,YAClD,mBAAKA,MAAM,+BACV,YAAC,IAAD,CAAMO,GAAG,gCAAT,mBAED,mBAAKP,MAAM,SACV,mBAAKA,MAAM,gCACV,qBAAO2H,KAAK,WAAW3H,MAAM,uBAAuBO,GAAG,wBAAwBsH,QAAS,IAAMtK,KAAKqpB,cAAc,iBAAkBlZ,QAASyM,EAAS2M,gBACrJ,qBAAO9mB,MAAM,uBAAuB0H,IAAI,2BAEzC,qBAAO1H,MAAM,cAAa,YAAC,IAAD,CAAMO,GAAG,wCAAT,uCAI1B4Z,EAAS4M,YAAc,mBAAK/mB,MAAM,YACnC,mBAAKA,MAAM,+BACV,YAAC,IAAD,CAAMO,GAAG,6BAAT,SAED,mBAAKP,MAAM,SACV,mBAAKA,MAAM,gCACV,qBAAO2H,KAAK,WAAW3H,MAAM,uBAAuBO,GAAG,qBAAqBsH,QAAS,IAAMtK,KAAKqpB,cAAc,cAAelZ,QAASyM,EAAS4M,aAC/I,qBAAO/mB,MAAM,uBAAuB0H,IAAI,wBAEzC,qBAAO1H,MAAM,cAAa,YAAC,IAAD,CAAMO,GAAG,qCAAT,6BAI1B4Z,EAAS6M,eAAiB,mBAAKhnB,MAAM,YACtC,mBAAKA,MAAM,+BACV,YAAC,IAAD,CAAMO,GAAG,gCAAT,aAED,mBAAKP,MAAM,SACV,mBAAKA,MAAM,gCACV,qBAAO2H,KAAK,WAAW3H,MAAM,uBAAuBO,GAAG,wBAAwBsH,QAAS,IAAMtK,KAAKqpB,cAAc,iBAAkBlZ,QAASyM,EAAS6M,gBACrJ,qBAAOhnB,MAAM,uBAAuB0H,IAAI,2BAEzC,qBAAO1H,MAAM,cAAa,YAAC,IAAD,CAAMO,GAAG,wCAAT,gDAIhB,mBAAKP,MAAM,YACP,mBAAKA,MAAM,qBACP,yBACI,iBAAGM,KAAK,UACJ,iBAAGN,MAAM,qBADb,IACmC,YAAC,IAAD,CAAMO,GAAG,4BAAT,sDAM/C,mBAAKP,MAAM,YACP,mBAAKA,MAAM,gCACP,yBACI,sBAAQ2H,KAAK,SAAS3H,MAAM,2BAA2BkI,QAAS3K,KAAKspB,cACjE,iBAAG7mB,MAAM,qBADb,IACmC,YAAC,IAAD,CAAMO,GAAG,uBAAT,iC,qcCrF/D,MAAM5D,EAAe,CACpBgR,gBAAgB,G,IASXsZ,EANLC,YAAS,KAAM,CACZC,QAAS,YAAC,IAAD,CAAM5mB,GAAG,cAAT,sBACTqG,KAAM,YAAC,IAAD,CAAMrG,GAAG,WAAT,mE,GAGTvD,Y,EALD,cAMiBC,YACbC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAkDnBiqB,SAAW/oB,iBACP,MAAM,QAAEgpB,EAAF,UAAW5oB,GAAc,EAAKtB,MAAMa,QACpC,IAAEspB,EAAM,IAAOD,EACrB,IAAI9mB,EAAK+mB,EAAInjB,OAAS,EAAImjB,EAAI,GAAG/mB,GAAK,KACtC,MAAM,KAAEhB,EAAO,IAAOd,QAChB4oB,EAAQD,SAAS,CAAE7mB,KAAIhB,KAAMA,EAAKgB,MArDxChD,KAAKiB,M,+VAAL,IACO7B,GAEPY,KAAKgjB,YAAc,GACzBhjB,KAAK8J,SAAW,GACV9J,KAAKgqB,UAAYpnB,IAAKqnB,eAG7B,aAAarqB,EAAQI,KAAKJ,OACzBI,KAAKC,SAAS,CAAEX,WAAW,IAC3B,MAAM,QAAEwqB,EAAF,aAAW/oB,EAAX,UAAyBG,EAAzB,SAAoCV,GAAaR,KAAKJ,MAAMa,QACtD,QAAEypB,GAAYlqB,KAAKJ,OACjBkC,KAAMoM,EAAM,IAAO1N,GACrB,YAAE2B,GAAgBpB,GAClB,KAAEiB,GAASd,GACX,SAAEmL,EAAW,MAASrK,EAC5B,IACImZ,EACA/Q,EACA+f,EACA9C,EACA/Y,EALA9J,EAAO,GAMPrC,IACAqC,EAAOtD,EAAUsL,SAASrK,GAAa,GACnCqC,GAAQA,EAAKxB,KACbmY,EAAYja,EAAU+Z,iBAAiB,CAAEC,SAAU1W,EAAK2W,UAAW9O,aACnEjC,EAAOlJ,EAAUma,aAAa,CAAEjR,KAAM5F,EAAK4F,KAAMiC,aACjD8d,EAAa3lB,EAAK2lB,WAClB9C,EAAQ7iB,EAAK6iB,MACb/Y,EAAU9J,EAAK8J,UAKvB,IAAI8b,EAAOlc,EAAIuX,QAAQ,OAAQ,UAC/B2E,EAAOlc,EAAIuX,QAAQ,QAAS,iBAQ5BqE,EAAQxlB,KAAK,CAAEC,MAAO,CAAE6lB,OAAMF,aAC9BJ,EAAQO,UACdrqB,KAAKC,SAAS,CAAEX,WAAW,IAW5BkC,oBACCxB,KAAKsqB,SAGH3oB,0BAA0BC,GAElBA,EAAUE,OAAS9B,KAAKJ,MAAMkC,MAC9B9B,KAAKsqB,OAAO1oB,GAIpBC,SACI,MAAM,QAAEioB,EAAF,UAAW5oB,EAAX,SAAsBV,GAAaR,KAAKJ,MAAMa,QAC9C,QAAEmpB,EAAF,KAAWvgB,EAAX,QAAiB6gB,GAAYlqB,KAAKJ,OAClC,KAAEkC,GAAStB,GACX,KAAEwB,EAAO,IAAOd,GAChB,IAAE6oB,EAAM,GAAR,KAAYQ,GAA4BT,EAC9C,IAAK9nB,IAASA,EAAKgB,KAAO+mB,GAAsB,IAAfA,EAAInjB,OACjC,OAAI9E,EAAK0oB,MAAM,aACJ,mBACH,mBAAK/nB,MAAM,SACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,2EACP,mBAAKA,MAAM,8BACP,oBAAMA,MAAM,sCACR,iBAAGA,MAAM,uBAEb,sBAAI,YAAC,IAAD,CAAMO,GAAG,cAAT,0BACJ,uBAAK,YAAC,IAAD,CAAMA,GAAG,aAAT,2BACL,YAAC,IAAD,KACI,iBAAGD,KAAO,oCAAmC6mB,MAAY9nB,MAASooB,UAAgB7gB,IAAQnJ,OAAO,SAASsf,IAAI,cAC1G,iBAAG/c,MAAM,uBADb,IACqC,YAAC,IAAD,CAAMO,GAAG,eAAT,oCAS1D,oBAEX,MAAMynB,EAAKV,EAAI,GACf,OACI,mBACI,mBAAKtnB,MAAM,SACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,2EACP,uBACI,yBAAO,qBAAOA,MAAM,cAChB,YAAC,IAAD,CAAMO,GAAG,SAAT,WADG,IAEH,mBAAKmF,IAAM,GAAEnI,KAAKgqB,qBAAqBS,EAAGznB,gBAAgBhB,EAAKgB,WAAWunB,IAAQ7nB,MAAM,0CAG/F+nB,EAAGvqB,OAAS,mBACT,iBACIuC,MAAM,iBACNM,KAAO,GAAE0nB,EAAGvc,IACZhO,OAAQuqB,EAAGvqB,QAAU,SACrBsf,IAAI,sBACJ7U,QAAS3K,KAAK6pB,SACda,QAAM,GAELD,EAAGlkB,QAAUkkB,EAAGlkB,OAAO,IAAM,mBAC1B,mBAAK4B,IAAKsiB,EAAGlkB,OAAO,GAAG6B,YAAa3F,MAAM,4BAGhD,mBACF,iBACIA,MAAM,iBACNM,KAAO,GAAE0nB,EAAGvc,IACZvD,QAAS3K,KAAK6pB,UAEbY,EAAGlkB,QAAUkkB,EAAGlkB,OAAO,IAAM,mBAC1B,mBAAK4B,IAAKsiB,EAAGlkB,OAAO,GAAG6B,YAAa3F,MAAM,oC,MAYnEinB,Q,klBC3If,MAAM3qB,EAAaC,IAAGC,WAAU,GAE1BG,EAAe,CACjB8I,SAAS,EACTmQ,MAAO,GACP7I,OAAQ,EACRwR,WAAY,EACZ7I,cAAe,EACfC,MAAO,EACPI,WAAW,IAAIxU,MAAOyU,WAGpBmH,EAAa,CAAC,KAAM,OAAQ,OAAQ,OAAQ,S,IAS5CqE,EADLxkB,Y,EAAD,cAC8BC,YAC1BC,YAAYC,GAAO,MACfC,MAAMD,GADS,YA0BnB+qB,cAAgB7pB,iBACZ,MAAM,SAAEN,GAAa,EAAKZ,MAAMa,OAChC,IAAI,MAAE4X,EAAF,OAAS7I,GAAW,EAAKvO,MAC7BuO,EAAS,EACT,EAAKvP,SAAS,CAAEuP,iBACV,EAAKob,sBAAsB,CAAEhrB,MAAO,EAAKA,MAAOyY,QAAO7I,WAC7DhP,EAASqqB,yBAhCM,KAyCnBC,sBAAwB,CAAClrB,EAAQI,KAAKJ,SAClCI,KAAK+qB,wBAA0BpJ,YAAY,IAAM3hB,KAAKgrB,mBAAmB,CAAEprB,UAAU,MA1CtE,KA6CnBqrB,wBAA0B,KACtB/I,cAAcliB,KAAK+qB,0BA9CJ,KA0DnB9K,gBAAkB,KACd,MAAM,WAAEjX,GAAehJ,KAAKJ,MAAMa,QAC5B,WAAEyqB,EAAF,iBAAcC,GAAqBniB,EACnCoX,EAAsBxd,IAAKyd,aAAa8K,GACxC/Q,EAAO,IAAI8Q,GAIjB,IAAIE,EAAgB,EACpB,MAAMC,EAAM,IAAIrnB,KAChBoW,EAAK7D,QAAQ,CAACxW,EAAGuS,KACb,MAAMmL,EAAO7a,IAAK0oB,eAAevrB,EAAE0d,MAClBnK,KAAKiY,OAAOF,EAAI5S,UAAYgF,EAAKhF,WAAa,KAL9C,QAOb2S,EAAgB9Y,EAAM,KAG9B,MAAMkZ,EAAcpR,EAAKxT,OAEzB,GAAI4kB,EAAcJ,EAbG,EAa2B,CAC5C,IAAK,IAAI7iB,EAAI,EAAG+X,EAdC,EAciB/X,EAAI+X,EAAG/X,GAAK,EAAG,CAC7C,MAAMgY,EAAcvhB,IAAGwhB,UAAU4K,EAAeI,GAC5C5oB,IAAK6d,SAASL,EAAoB7X,KAClC6R,EAAKsG,OAAOH,EAAa,EAAGH,EAAoB7X,IAGxDS,EAAW2X,iBAAiB,aAAcvG,KApF/B,KAwFnBwG,UAAY,KACR,MAAM,MAAExI,GAAUpY,KAAKiB,OACjB,WAAE+H,GAAehJ,KAAKJ,MAAMa,QAC5B,WAAEyqB,GAAeliB,EACjBoR,EAAO,IAAI8Q,GACjB9Q,EAAKsG,OAAOtI,EAAO,EAAG,CAAEhO,KAAM,KAAMyW,kBAAmB,MAAOC,kBAAmB,WACjF9X,EAAW2X,iBAAiB,aAAcvG,IA9F3B,KAiGnB2G,kBAAoB,KAChB,MAAM,WAAEC,GAAehhB,KAAKiB,OACtB,WAAE+H,GAAehJ,KAAKJ,MAAMa,QAC5B,WAAEyqB,GAAeliB,EACjBoR,EAAO,IAAI8Q,GACjB9Q,EAAKsG,OAAOM,EAAY,EAAG,CAAE5W,KAAM,cAAeyW,kBAAmB,MAAOC,kBAAmB,WAC/F9X,EAAW2X,iBAAiB,aAAcvG,IAvG3B,KA0GnB6G,sBAAwB,KACpB,MAAM,cAAE9I,GAAkBnY,KAAKiB,OACzB,WAAE+H,GAAehJ,KAAKJ,MAAMa,QAC5B,WAAEyqB,GAAeliB,EACjBoR,EAAO,IAAI8Q,GACjB9Q,EAAKsG,OAAOvI,EAAe,EAAG,CAAE/N,KAAM,kBAAmByW,kBAAmB,MAAOC,kBAAmB,WACtG9X,EAAW2X,iBAAiB,aAAcvG,IAhH3B,KAmHnB0F,YAAc,KACV,MAAM,WAAE9W,GAAehJ,KAAKJ,MAAMa,OAClCuI,EAAW8W,YAAY,KACnB,IAAI,MAAEzH,EAAF,OAAS7I,GAAWxP,KAAKiB,MAC7BuO,GAAU6I,EACVrY,KAAKC,SAAS,CAAEuP,WAChBxP,KAAK4qB,sBAAsB,CAAEvS,QAAO7I,cAzHzB,KA6HnBwQ,cAAgB,KACZ,MAAM,WAAEhX,GAAehJ,KAAKJ,MAAMa,OAClCuI,EAAW8W,YAAY,SA/HR,KAoInBrF,YAAc,CAAC1a,EAAGgC,KACdhC,EAAEyS,iBACFzS,EAAE2F,kBACF1F,KAAKC,SAAS,CACVihB,SAAUnf,KAEP,GA1IQ,KA6InBof,SAAW,KACPnhB,KAAKC,SAAS,CACVihB,SAAU,QA/IC,KAmJnBxG,YAAe3a,IACXA,EAAEyS,iBACFzS,EAAE2F,mBACK,GAtJQ,KAyJnBiV,WAAa,CAAC5a,EAAGqhB,EAAOtD,KACpB/d,EAAEyS,iBACFzS,EAAE2F,kBACF1F,KAAKC,SAAS,CACVohB,QAASD,EACTtD,UAEG,GAhKQ,KAmKnBwD,QAAU,KACNthB,KAAKC,SAAS,CACVohB,QAAS,QArKE,KA2KnBE,kBAAoB,KAChBvhB,KAAKC,SAAS,CACVuhB,mBAAoBxiB,IAAGyiB,+BAE3B,MAAM,WAAEzY,GAAehJ,KAAKJ,MAAMa,OAClCT,KAAK0hB,gBAAkBC,YAAY,IAAM3Y,EAAW4Y,eAAe5iB,IAAG6iB,kCAAmC,MAhL1F,KA8MnBC,cAAgB,EAAGC,MAAKzP,UACpB,MAAM,SAAE9R,GAAaR,KAAKJ,MAAMa,QAC1B,KAAEqB,GAAStB,GACX,QAAEskB,GAAY9kB,KAAKJ,MAEzB,MAAiB,OAAbmiB,EAAI3X,KACG,mBACH,YAAC,IAAD,CAAI3J,OAAQT,KAAKJ,MAAMa,OAAQqB,KAAMA,KAG5B,gBAAbigB,EAAI3X,KACG,mBACH,YAAC,IAAD,CAAoB3J,OAAQT,KAAKJ,MAAMa,UAG9B,oBAAbshB,EAAI3X,KACG,mBACH,YAAC,IAAD,CAAkB3J,OAAQT,KAAKJ,MAAMa,UAG5B,YAAbshB,EAAI3X,KACI,mBACJ,YAAC,IAAD,CACI3J,OAAQT,KAAKJ,MAAMa,OACnB2Z,KAAM2H,EACNzP,IAAKA,EACLmI,YAAaza,KAAKya,YAClBC,YAAa1a,KAAK0a,YAClBC,WAAY3a,KAAK2a,WACjB1B,aAAc,WAIlB,mBACJ,YAAC,IAAD,CACIxY,OAAQT,KAAKJ,MAAMa,OACnBsI,MAAOgZ,EACP+C,QAASA,EACTnS,IAAM,gBAAeoP,EAAI/e,GACzByX,YAAaza,KAAKya,YAClBC,YAAa1a,KAAK0a,gBApP1B1a,KAAKiB,M,+VAAL,IACO7B,GAEbY,KAAK8J,SAAW,GAChB9J,KAAK0D,IAAM,GAGT,6BAA4B,MAAE9D,EAAQI,KAAKJ,MAAf,MAAsByY,EAAtB,OAA6B7I,IACrD,MAAM,QAAEsV,EAAF,SAAWnW,EAAX,OAAqB5M,GAAiBnC,GAC5C,WAAEoJ,GAAepJ,EAAMa,aAKvBuI,EAAW0F,eAAe,CAAEoW,UAASnW,WAAU5M,SAAQsW,QAAO7I,SAAQwS,UAJlEA,IAKCxS,IAEDxP,KAAKigB,kBAELjgB,KAAK+gB,qBAcb,0BAAyB,MAAEnhB,EAAQI,KAAKJ,QACpC,MAAM,QAAEklB,EAAF,SAAWnW,EAAX,OAAqB5M,GAAiBnC,GAC5C,WAAEoJ,GAAepJ,EAAMa,aACvBuI,EAAWgiB,mBAAmB,CAAElG,UAASnW,WAAU5M,WA6IvDkgB,qBACIjiB,KAAKuhB,oBAGZ/f,oBACO,MAAM,MAAE6W,GAAUrY,KAAKiB,MACvBjB,KAAK4qB,sBAAsB,CAAEvS,QAAO7I,OAAQ,IAC5CxP,KAAK8f,cACL9f,KAAK8qB,wBAGTppB,uBACI1B,KAAKggB,gBACL,MAAM,WAAEhX,GAAehJ,KAAKJ,MAAMa,OAClCuI,EAAW4Y,eAAe5iB,IAAG6iB,kCAC7BK,cAAcliB,KAAK0hB,iBAEnB1hB,KAAKirB,0BAGTtpB,0BAA0BC,GACtB,GAAIA,EAAUkjB,UAAY9kB,KAAKJ,MAAMklB,SAAWljB,EAAUE,OAAS9B,KAAKJ,MAAMkC,KAAM,CAChF,MAAM,MAAEuW,GAAUrY,KAAKiB,MACvBjB,KAAK4qB,sBAAsB,CAAEhrB,MAAOgC,EAAWyW,QAAO7I,OAAQ,KAiDtE3N,SACI,MAAM,QAAEqG,EAAF,mBAAWsZ,EAAX,UAA+BhJ,EAA/B,SAA0C0I,EAA1C,QAAoDG,GAAYrhB,KAAKiB,OACrE,WAAE+H,EAAF,SAAcxI,GAAaR,KAAKJ,MAAMa,QACtC,WAAEyqB,EAAF,cAA0BO,GAAkBziB,GAC5C,SAAE+G,GAAavP,EAErB,OAAQ,mBAkBH0gB,GAAY,YAAC,IAAD,KACT,YAAC,UAAD,CAAmBzgB,OAAQT,KAAKJ,MAAMa,OAAQsB,OAAQmf,EAAUjiB,UAAW,OAAQE,aAAc,OAAQijB,KAAMpiB,KAAKmhB,YAGvHE,GAAW,YAAC,IAAD,KACR,YAAC,UAAD,CAAiB5gB,OAAQT,KAAKJ,MAAMa,OAAQ2gB,MAAOC,EAASpiB,UAAW,OAAQE,aAAc,OAAQijB,KAAMpiB,KAAKshB,QAASxD,KAAMA,QAGnI,mBAAKrb,MAAM,SACNgpB,GAAiB,mBACd,mBACIhpB,MAAQ,oGACRC,MAAQ,eAAc3D,MAEtB,sBACI0D,MAAM,sCACNkI,QAAS3K,KAAK2qB,eAFlB,iBAQR,YAAC,IAAD,CACI/b,KAAMsc,EACNrK,kBAAmB,WACnBC,kBAAoB,sGAAqG/Q,EAAW,QAAU,oBAC9I+R,cAAe9hB,KAAK8hB,cACpBlC,WAAYA,EACZ4B,mBAAoBA,EACpBhJ,UAAWA,IAGdtQ,GAAW,mBAAKzF,MAAM,iCACnB,mBAAKA,MAAM,8BAA8BE,KAAK,UAC1C,oBAAMF,MAAM,WAAZ,sB,EAQTwhB,Q,kJClWTwC,EADLhnB,Y,EAAD,cACoBC,YAAU,mCAC1BgsB,WAAclnB,IAChB,MAAM,SAAEqE,EAAF,oBAAY8iB,GAAsB,GAAS3rB,KAAKJ,OAC1C,SAAEgsB,EAAF,aAAY7qB,GAAiBf,KAAKJ,MAAMa,QAC9C,YAAE0B,GAAgBypB,EACpBD,GAAuBnnB,IAASrC,GACnCypB,EAASC,oBAAe9lB,GACxBhF,EAAa8qB,oBAAe9lB,KAE5B6lB,EAASC,eAAernB,GACxBzD,EAAa8qB,eAAernB,IAEzB5B,IAAKkpB,UAAUjjB,IAClBA,KAb2B,KAiB1BkjB,aAAe,KACjB,MAAM,SAAEljB,GAAa7I,KAAKJ,OACd,SAAEgsB,EAAF,aAAY7qB,GAAiBf,KAAKJ,MAAMa,OACpDmrB,EAASC,oBAAe9lB,GACxBhF,EAAa8qB,oBAAe9lB,GACxBnD,IAAKkpB,UAAUjjB,IAClBA,KAUChH,SACI,MAAM,UAAEX,EAAF,SAAa0qB,GAAa5rB,KAAKJ,MAAMa,QACrC,MAAEwP,GAAU/O,GAClB,YAAEiB,GAAgBypB,GAClB,UAAEI,EAAF,QAAaC,GAAU,GAASjsB,KAAKJ,MACrC,OACL,mBAAK6C,MAAM,YACV,mBAAKA,MAAM,yBACV,mBACCA,MAAM,qDACNC,MAAM,kDAGLuN,GAASA,EAAMjJ,IAAI,CAACxC,EAAM8N,KAC1B,IAAI4S,EAQJ,OAPqB,IAAjBjV,EAAMrJ,OACTse,EAAa,oBACK,IAAR5S,EACV4S,EAAa,oBACH5S,EAAM,IAAMrC,EAAMrJ,SAC5Bse,EAAa,sBAGb,mBAAKziB,MAAM,yBAAyBkQ,IAAKnO,EAAKxB,IAC7C,sBACCP,MAAQ,6DACQyiB,4BACb/iB,IAAgBqC,EAAKxB,GAAK,cAAgB,oEAE7CN,MAAM,6CACNiI,QAAS,IAAM3K,KAAK0rB,WAAWlnB,EAAKxB,KAEpC,iBAAGP,MAAM,iBARV,IAQ6B+B,EAAKyG,KAEhC+gB,GAAaA,EAAUhQ,QAAQxX,EAAKxB,KAAO,GAAK,mBAC/Cb,IAAgBqC,EAAKxB,GAAK,mBAC1B,iBAAGP,MAAM,8BACJ,mBACL,mBAAKA,MAAM,wCAAwCE,KAAK,UACvD,oBAAMF,MAAM,WAAZ,eAED,iBAAGA,MAAM,qCAAqCC,MAAM,6BAU1DupB,GAAW,mBAAKxpB,MAAM,OACtB,mBAAKA,MAAM,kDACV,sBACCA,MAAQ,sDACRC,MAAM,6CACNiI,QAAS3K,KAAK+rB,cAEd,iBAAGtpB,MAAM,iBALV,IAK4B,YAAC,IAAD,CAAMO,GAAG,kBAAT,qB,EAUpByjB,Q,81BCvGf,MAAMyF,EAAmB,CACxBC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,OAAO,GAKFrtB,EAAe,CACpBE,WAAW,G,IAINotB,EADLjtB,Y,EAAD,cACoBC,YAChBC,YAAYC,GAAO,MACfC,MAAMD,GADS,YAkBnB+sB,YAAc7rB,iBAChB,MAAM,UAAEI,GAAc,EAAKtB,MAAMa,QACrB,KAAEuB,GAASd,GACX,cAAE0rB,EAAgB,IAAO5qB,EACzBmD,EAAQynB,EAAcC,eAAiB,EAAI,EACjD,EAAK5sB,SAAS,CAAE6sB,UAAW3nB,UACrBjE,EAAU6rB,iBAAiB,CAC7BzS,MAAO,+BACPnV,WA1BW,KA8BnB6nB,YAAejtB,IAMX,MAAM,WAAEioB,EAAF,YAA2BC,GAAgBloB,EAAEG,OAE7C+sB,EAAUjF,EADHC,EAGPC,EAAa5U,KAAK6U,MAAM8E,GACxB7E,EAAO9U,KAAK+U,IAAIH,EAAa+E,IAG/B3E,OAAOC,UAAU0E,IAAY7E,EAAO,KACpCpoB,KAAKC,SAAS,CACVgtB,QAAS/E,KA5CjBloB,KAAKiB,MAAL,OACO7B,GADP,IAEI6tB,QAAS,IAIjB,eAAertB,EAAQI,KAAKJ,OAC9BI,KAAKC,SAAS,CAAEX,WAAW,IAC3B,MAAM,UAAE4tB,GAActtB,EAAMa,aAItBysB,EAAU5oB,KAAK,CAAEC,MAHT,CACJ4oB,SAAU,KAGpBntB,KAAKC,SAAS,CAAEX,WAAW,IAoCzBkC,oBACFxB,KAAKotB,WAQHvrB,SACI,MAAM,SAAErB,EAAF,UAAYU,EAAZ,UAAuBgsB,EAAvB,UAAkCG,GAAcrtB,KAAKJ,MAAMa,QACjE,QAAYgP,EAAZ,KAAqBzN,EAArB,cAA2BsrB,EAAgB,IAAOpsB,GAClD,MAAEqsB,EAAQ,IAAOL,GACjB,SAAEM,GAAaH,GAEf,SAAEtd,GAAavP,GACf,UAAYssB,EAAZ,QAAuBG,GAAYjtB,KAAKiB,OAClC,cAAE2rB,EAAgB,GAAlB,SAAsBvgB,EAAW,MAASrK,EAE1CyrB,EAAQ,IAAIzpB,KAElB,OAAKupB,GAA0B,IAAjBA,EAAM3mB,OAKhB,mBAAKnE,MAAM,OACNqqB,GAAaF,EAAcC,eAAiB,mBACzC,mBAAKpqB,MAAM,uEACP,mBAAKA,MAAM,OACP,mBAAKA,MAAQ,aAAYsN,EAAW,QAAU,6CAC1C,mBAAKtN,MAAM,uCACP,sBAAQA,MAAM,gCAAgCkI,QAAS3K,KAAK2sB,aACxD,iBAAGlqB,MAAM,0BADb,IACwC,YAAC,IAAD,CAAMO,GAAG,oBAAT,cADxC,IACuFuqB,EAAM3mB,OAAS,GAAK,wBAAK2mB,EAAM3mB,cAMpI,mBACF,mBAAKnE,MAAM,uEACP,mBAAKA,MAAM,OAEP,mBAAKA,MAAM,2BACP,mBACIA,MAAM,gEACNC,MAAM,iDACNqmB,SAAU/oB,KAAKgtB,aAEdO,GAASA,EAAMvmB,IAAI,CAAC0mB,EAAMpb,KACvB,IAAIlJ,EAAS,GAQb,OAPIqkB,GAAS,IAAIzpB,KAAK0pB,EAAKlf,YAAcif,GAAS,IAAIzpB,KAAK0pB,EAAKjf,SAC5DrF,EAAS,OACFqkB,GAAS,IAAIzpB,KAAK0pB,EAAKC,kBAAoBF,GAAS,IAAIzpB,KAAK0pB,EAAKE,eACzExkB,EAAS,SACFqkB,EAAQ,IAAIzpB,KAAK0pB,EAAKjf,WAC7BrF,EAAS,QAEL,mBACJ,mBACI3G,MAAQ,OAAuB,IAAjB8qB,EAAM3mB,OAAe,KAAO,YAAY2mB,EAAM3mB,SAAW0L,EAAM,EAAI,OAAS,cAAcvC,EAAW,QAAU,uCAC7HrN,MAAQ,oRAKRqF,aAAehI,IAAQA,EAAE2F,mBACzBsC,WAAajI,IAAQA,EAAE2F,mBACvBuC,YAAclI,IAAQA,EAAE2F,oBAExB,mBAAKjD,MAAM,mDACP,kBAAIA,MAAM,oBAAoBC,MAAM,yBACpB,WAAX0G,IAAwBskB,EAAKG,UAAY,mBACtC,oBAAMprB,MAAM,gDAA+C,YAAC,IAAD,CAAMO,GAAG,qBAAT,oBAEnD,SAAXoG,GAAqB,mBAClB,oBAAM3G,MAAM,+CAA8C,YAAC,IAAD,CAAMO,GAAG,0BAAT,eAElD,SAAXoG,GAAqB,mBAClB,oBAAM3G,MAAM,gDAA+C,YAAC,IAAD,CAAMO,GAAG,uBAAT,oBAGjE0qB,EAAKnnB,QAAUmnB,EAAKnnB,OAAO,IAAO,mBAChC,mBACI9D,MAAQ,QACRC,MAAQ,0BAAyBgrB,EAAKnnB,OAAO,GAAG6B,oHAChDuC,QAAS,IAAM/J,MAAO,cAAa8sB,EAAK1qB,QAIpD,mBAAKP,MAAM,qBACP,kBAAIA,MAAM,oBAAoBC,MAAM,2BACpB,WAAX0G,GAAuB,mBACpB,mBAAK3G,MAAM,4BAA4BE,KAAK,YAEpC,SAAXyG,GAAqB,mBAClB,mBAAK3G,MAAM,2BAA2BE,KAAK,YAEnC,SAAXyG,GAAqB,mBAClB,wBAAM,iBAAG3G,MAAM,iCAGvB,kBAAIA,MAAM,QACLgN,GAAW,iBAAGhN,MAAQ,aAAYirB,EAAKI,OAAS,gBAAkB,qCACnE,iBAAG/qB,KAAO,cAAa2qB,EAAK1qB,IACvB0qB,EAAK5f,SAIlB,mBAAKrL,MAAM,SACP,YAAC,IAAD,CAAUkS,SAAU3V,IAAG4V,cAAc8Y,EAAKK,QAASL,EAAKnnB,OAAQ8F,GAAWwI,aAAcqX,KAE7F,mBAAKzpB,MAAM,SACNirB,EAAKM,SAAW,mBACb,mBAAKvrB,MAAM,QACP,qBAAOA,MAAM,4BAA2B,YAAC,IAAD,CAAMO,GAAG,iBAAT,WAAxC,MAAyF,uBAEzF,mBAAKP,MAAM,2BACP,mBACIA,MAAM,8BACNC,MAAM,kDAELgrB,EAAKM,QAAQhM,KAAK,CAACyG,EAAGC,IAAMD,EAAEwF,SAAWvF,EAAEuF,UAAUjnB,IAAIknB,GAAgB,mBACtE,oBAAMzrB,MAAM,uDACPyrB,EAAapgB,cAS1C,mBAAKrL,MAAM,wCACP,iBAAGM,KAAO,cAAa2qB,EAAK1qB,cAAeP,MAAM,mBAC7C,YAAC,IAAD,CAAMO,GAAG,kBAAT,YACA,iBAAGP,MAAM,4BAEb,iBAAGM,KAAO,cAAa2qB,EAAK1qB,GAAMP,MAAM,mBACpC,YAAC,IAAD,CAAMO,GAAG,mBAAT,WACA,iBAAGP,MAAM,qCAGjB,mBAAKA,MAAM,uCACP,qBAAOA,MAAM,cACT,YAAC,IAAD,CAAMO,GAAG,mBAAT,aADJ,KACkD0qB,EAAKlf,WAAa,mBAAG5L,IAAK8a,WAAWgQ,EAAKlf,UAAW,CAAE4G,OAAQ/I,KAC5GqhB,EAAKjf,SAAW,yBAAM7L,IAAK8a,WAAWgQ,EAAKjf,QAAS,CAAE2G,OAAQ/I,aAS1FkhB,GAASA,EAAM3mB,OAAS,GAAK,mBAC1B,mBAAKnE,MAAM,qBACP,yBACI,yBACK8qB,GAASA,EAAMvmB,IAAI,CAACK,EAAKiL,IAAQ,mBAC9B,iBAAG7P,OAAU6P,IAAQ2a,EAAU,MAAQ,OAA5B,yBAK3B,mBACIxqB,MAAM,wEACNC,MAAM,qFAEN,yBAAQuqB,EAAU,EAAlB,MAAwBM,EAAM3mB,UAItC,mBAAKnE,MAAQ,kBAAiBsN,EAAW,QAAU,wCAC/C,mBAAKtN,MAAM,uCACP,sBAAQA,MAAM,eAAekI,QAAS3K,KAAK2sB,aACvC,iBAAGlqB,MAAM,oBADb,IACkC,YAAC,IAAD,CAAMO,GAAG,cAAT,qBA1JnD,O,EAsKJ0pB,Q,gfC9Pf,MAAMttB,EAAe,CACpB+uB,UAAW,GACXC,QAAS,I,IAIJ3H,EADLhnB,Y,EAAD,cACoBC,YAChBC,YAAYC,GACRC,MAAMD,GADS,KAYnByuB,eAAkBtuB,IACd,MAAM,KAAEyE,EAAF,KAAQxC,EAAR,OAAcssB,GAAWvuB,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SACpD,UAAE0D,GAAc9D,KAAKJ,MAAMa,OACjCqD,EAAUyqB,qBAAqB,CAC3B/pB,KAAMQ,SAASR,EAAM,IACrBxC,KAAMgD,SAAShD,EAAM,MAEzB,MAAM,UAAEmsB,GAAcnuB,KAAKiB,MACjCktB,EAAW,GAAE3pB,KAAQxC,MAAU,EACzBhC,KAAKC,SAAS,CAAEkuB,cAEZG,GACAxqB,EAAU0qB,kBAAkBxsB,IAxBjB,KA4BnBysB,cAAiB1uB,IACb,MAAM,KAAEyE,EAAF,KAAQxC,GAASjC,EAAEG,OAAO2Q,QAAQ,UAAUzQ,SAC5C,UAAE0D,GAAc9D,KAAKJ,MAAMa,OACjCqD,EAAU4qB,oBAAoB,CAC1BlqB,KAAMQ,SAASR,EAAM,IACrBxC,KAAMgD,SAAShD,EAAM,MAEzB,MAAM,QAAEosB,GAAYpuB,KAAKiB,MAC/BmtB,EAAS,GAAE5pB,KAAQxC,MAAU,EACvBhC,KAAKC,SAAS,CAAEmuB,aAnChBpuB,KAAKiB,M,+VAAL,IACO7B,GAIX,kBACI,MAAM,UAAE0E,GAAc9D,KAAKJ,MAAMa,aAC3BqD,EAAUQ,KAAK,CAAEC,MAAO,GAAIG,QAAS,CAAC,oBA+BnDlD,oBACCxB,KAAK6D,YAGNhC,SACO,MAAM,QAAEusB,EAAU,GAAZ,UAAgBD,EAAY,IAAOnuB,KAAKiB,OAC9C,UAAE6C,EAAF,SAAatD,GAAaR,KAAKJ,MAAMa,QACrC,MAAEwP,EAAF,kBAAS0e,EAAT,eAA4BxS,EAAiB,IAAOrY,GAC9C,SAAEiM,GAAavP,EAC3B,OAAKmuB,EAKK,mBAAKlsB,MAAM,YACP,mBAAKA,MAAQ,sGAAqGsN,EAAW,QAAU,qBACnI,mBAAKtN,MAAM,mBACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,UACP,sBAAI,YAAC,IAAD,CAAMO,GAAG,uCAAT,0BAAJ,OAG1B,mBAAKP,MAAM,OACW,mBAAKA,MAAM,8BAA8BC,MAAM,mBAC1CE,IAAKiI,QAAQoF,IAAUA,EAAMjJ,IAAKxC,GAAS,mBACvCA,GAAQ5B,IAAKiI,QAAQrG,EAAK2X,iBAAmB3X,EAAK2X,eAAenV,IAAK4nB,IACnE,MAAMjlB,EAAQilB,EAAQjlB,OAASilB,EAAQjlB,MAAMO,YAAc0kB,EAAQjlB,MAAQ,KACrEklB,EAAYT,EAAS,GAAE5pB,EAAKxB,MAAM4rB,EAAQ5rB,MAC1C8rB,EAAcX,EAAW,GAAE3pB,EAAKxB,MAAM4rB,EAAQ5rB,MAC9C+rB,EAAa5S,EAAeyM,KAAK7oB,GAAKA,EAAEiC,KAAKgB,KAAO4rB,EAAQ5rB,IAClE,OACI,mBAAKP,MAAM,8BAA8BC,MAAM,iBAC3C,mBAAKD,MAAQ,2EAA2EC,MAAOiH,EAAS,0BAAyBA,EAAMO,iBAAmB,KACpJP,GAAS,mBAAKlH,MAAM,iCAAiCC,MAAM,sCAAsC1D,IAAG+K,iBAAiB6kB,KAE3H,yBACI,mBAAKnsB,MAAM,6BACP,0BAASzD,IAAGiL,YAAY2kB,IAAkB,wBAQ9C,mBAAKnsB,MAAM,6BACP,YAAC,IAAD,CAAMO,GAAG,iCAAT,+BAEJ,mBAAKP,MAAM,6BACP,0BAASzD,IAAGiL,YAAYzF,MAG9BsqB,GAAeD,EAAa,mBAC1B,mBAAKpsB,MAAM,eACNqsB,EAAc,mBAAKrsB,MAAM,gBACtB,YAAC,IAAD,CAAMO,GAAG,2BAAT,aADW,IACyC,iBAAGP,MAAM,kBACxD,mBAAKA,MAAM,eAChB,YAAC,IAAD,CAAMO,GAAG,yBAAT,WADK,IAC2C,iBAAGP,MAAM,wBAG/D,mBACF,uBACI,sBAAQA,MAAM,sDAAsDkI,QAAS3K,KAAKquB,eAAgBrH,YAAWxiB,EAAKxB,GAAIgsB,YAAWJ,EAAQ5rB,IACrI,YAAC,IAAD,CAAMA,GAAG,yBAAT,YAEH+rB,GAAcA,EAAW/gB,OAAS,GAAK,sBAAQvL,MAAM,8DAA8DkI,QAAS3K,KAAKquB,eAAgBrH,YAAWxiB,EAAKxB,GAAIgsB,YAAWJ,EAAQ5rB,GAAIisB,eAAa,GACtM,YAAC,IAAD,CAAMjsB,GAAG,oCAAT,0BAEJ,mBAAKP,MAAM,QACP,yBACI,sBAAQA,MAAM,8CAA8CC,MAAM,oBAAoBiI,QAAS3K,KAAKyuB,cAAezH,YAAWxiB,EAAKxB,GAAIgsB,YAAWJ,EAAQ5rB,IACtJ,YAAC,IAAD,CAAMA,GAAG,wBAAT,mBAY5C,uBAASP,MAAM,QACX,2BAAS,yBAAO,YAAC,IAAD,CAAMO,GAAG,6BAAT,yBAChB,qBACI,YAAC,IAAD,CAAMA,GAAG,0BAAT,wOA5EtB,O,EAsFKyjB,Q,4KC5ITyI,EADLzvB,Y,EAAD,cACwBC,YACpBC,YAAYC,GACRC,MAAMD,GADS,KAMnBuvB,gBAAkB,KACd,MAAM,YAAEC,GAAgBpvB,KAAKiB,MAC7BjB,KAAKC,SAAS,CACVmvB,aAAcA,KAPlBpvB,KAAKiB,MAAQ,GACnBjB,KAAK8J,SAAW,GAUd,oBACF,MAAM,UAAE5I,GAAclB,KAAKJ,MAAMa,OACjCT,KAAKC,SAAS,CAAEX,WAAW,IACrB,MAAM,KAAE0C,GAASd,EACvB,GAAIc,EAAKqtB,qBAAuBrtB,EAAKqtB,oBAAoBC,OAAQ,CAChE,MAAQC,SAAUC,EAAKC,UAAWC,EAA5B,SAAiCC,GAAa3tB,EAAKqtB,oBAAoBC,OAC7EpuB,EAAU0uB,eAAe,CAAEJ,MAAKE,MAAKC,aAC5BzuB,EAAU2uB,iBAIrBruB,oBACOxB,KAAK8vB,cAGTjuB,SACI,MAAM,YAAEutB,GAAgBpvB,KAAKiB,OACvB,MAAEomB,GAAUrnB,KAAKJ,OACjB,UAAEsB,GAAclB,KAAKJ,MAAMa,QAC3B,UAAEsc,EAAF,cAAa7a,EAAb,mBAA4B6tB,EAA5B,KAAgD/tB,GAASd,GACzD,uBAAEe,GAA2BD,EAEnC,OAAK+a,GAAcsK,EAGf+H,EAEI,mBAAK3sB,MAAM,uEACNR,GAA0BA,EAAuBoc,mBAAqB,sBAAKpc,EAAuBoc,mBACnG,mBAAK5b,MAAM,mBACPsF,aAAc/I,IAAGgxB,cACjBhoB,WAAYhJ,IAAGgxB,cACf/nB,YAAajJ,IAAGgxB,cAChBjH,SAAU/pB,IAAGgxB,eAEb,qBAAOvtB,MAAM,gCACT,yBACI,sBACI,kBAAIA,MAAM,eAAV,KACA,kBAAIA,MAAM,eAAc,YAAC,IAAD,CAAMO,GAAG,iBAAT,UACxB,kBAAIP,MAAM,eAAc,YAAC,IAAD,CAAMO,GAAG,mBAAT,YACxB,kBAAIP,MAAM,eAAc,YAAC,IAAD,CAAMO,GAAG,qBAAT,cACxB,kBAAIP,MAAM,eAAc,YAAC,IAAD,CAAMO,GAAG,mBAAT,YACxB,kBAAIP,MAAM,eAAc,YAAC,IAAD,CAAMO,GAAG,gBAAT,SACxB,kBAAIP,MAAM,eAAc,YAAC,IAAD,CAAMO,GAAG,oBAAT,aACxB,kBAAIP,MAAM,eAAc,YAAC,IAAD,CAAMO,GAAG,gBAAT,WAGhC,yBACKd,GAAiBA,EAAc8E,IAAIyW,GAAQ,mBACxC,sBACI,kBAAIhb,MAAM,eAAc,wBAAOgb,IAC/B,kBAAIhb,MAAM,eACN,wBACKG,IAAKqtB,eAAeF,EAAmBtS,GAAMyS,MAAO,qCAAuC,mBAAKxtB,MAAM,eAAeyF,IAAM,gBAAevF,IAAKqtB,eAAeF,EAAmBtS,GAAMyS,MAAO,8CAGvM,kBAAIztB,MAAM,eACN,wBACKG,IAAKqtB,eAAeF,EAAmBtS,GAAM0S,QAAS,qCAAuC,mBAAKztB,MAAM,eAAeyF,IAAM,gBAAevF,IAAKqtB,eAAeF,EAAmBtS,GAAM0S,QAAS,8CAG3M,kBAAI1tB,MAAM,eACN,wBACKG,IAAKqtB,eAAeF,EAAmBtS,GAAM2S,IAAK,qCAAuC,mBAAK1tB,MAAM,eAAeyF,IAAM,gBAAevF,IAAKqtB,eAAeF,EAAmBtS,GAAM2S,IAAK,8CAGnM,kBAAI3tB,MAAM,eACN,wBACKG,IAAKqtB,eAAeF,EAAmBtS,GAAM4S,QAAS,qCAAuC,mBAAK3tB,MAAM,eAAeyF,IAAM,gBAAevF,IAAKqtB,eAAeF,EAAmBtS,GAAM4S,QAAS,8CAG3M,kBAAI5tB,MAAM,eACN,wBACI,iBAAGA,MAAM,gDACT,oBAAMA,MAAOzD,IAAGsxB,oBAAoB1tB,IAAKqtB,eAAeF,EAAmBtS,GAAO,0BAC9E,YAAC,IAAD,CAAahd,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOvC,IAAKqtB,eAAeF,EAAmBtS,GAAO,2BAEjG,oBAAMhb,MAAM,uCAAZ,KACA,oBAAMA,MAAOzD,IAAGsxB,oBAAoB1tB,IAAKqtB,eAAeF,EAAmBtS,GAAO,0BAC9E,YAAC,IAAD,CAAahd,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOvC,IAAKqtB,eAAeF,EAAmBtS,GAAO,6BAIzG,kBAAIhb,MAAM,eACN,wBACKG,IAAKE,OAAOF,IAAKqtB,eAAeF,EAAmBtS,GAAO,wBAAyB,GADxF,IAC4F,oBAAMhb,MAAM,kCAAZ,QAGhG,kBAAIA,MAAM,eACN,wBACI,iBAAGA,MAAM,gCADb,IAC8C,oBAAMA,MAAOzD,IAAGuxB,kBAAkB3tB,IAAKqtB,eAAeF,EAAmBtS,GAAO,qBAAsB7a,IAAKE,OAAOF,IAAKqtB,eAAeF,EAAmBtS,GAAO,mBAAoB,IADlO,IAC6O,oBAAMhb,MAAM,kCAAZ,KAD7O,IACmS,oBAAMA,MAAOzD,IAAGuxB,kBAAkB3tB,IAAKqtB,eAAeF,EAAmBtS,GAAO,qBAAsB7a,IAAKE,OAAOF,IAAKqtB,eAAeF,EAAmBtS,GAAO,mBAAoB,IADvd,IACke,oBAAMhb,MAAM,kCAAZ,eAQ1f,sBAAQ2H,KAAK,SAAS3H,MAAM,mCAAmCkI,QAAS3K,KAAKmvB,iBACzE,iBAAG1sB,MAAM,wBADb,IACsC,YAAC,IAAD,CAAMO,GAAG,iBAAT,WAM9C,mBAAKP,MAAM,kEACNsa,GAAaA,EAAUnW,OAAS,GAAK,mBAAKnE,MAAM,wBAC7C,mBAAKA,MAAM,MAAMkI,QAAS3K,KAAKmvB,iBAC1BpS,GAAaA,EAAUnW,OAAS,GAAKmW,EAAU1J,MAAM,EAAG,GAAGrM,IAAIwpB,GAC5D,mBAAK/tB,MAAM,qBACP,wBACI,qBAAOA,MAAM,gCAAgCG,IAAK6tB,QAAQD,EAAEjG,OADhE,IAEI,mBAAKpiB,IAAM,gBAAevF,IAAKqtB,eAAeO,EAAG,0CAC7C/tB,MAAM,OACNC,MAAM,kBAETE,IAAKqtB,eAAeO,EAAG,6CAA+C,GAAK,qBAAO/tB,MAAM,QACpFG,IAAKqtB,eAAeO,EAAG,6CAA6C,oBAAM/tB,MAAM,kCAAZ,OAEzE,qBAAOA,MAAM,QACT,iBAAGA,MAAM,sCADb,IACoD,YAAC,IAAD,CAAahC,OAAQT,KAAKJ,MAAMa,OAAQ0E,MAAOvC,IAAKqtB,eAAeO,EAAG,sCAE1H,qBAAO/tB,MAAM,QACT,iBAAGA,MAAM,2BADb,IAC0CG,IAAKqtB,eAAeO,EAAG,8BAA8B,oBAAM/tB,MAAM,kCAAZ,OAD/F,IACuJ,oBAAMA,MAAM,kCAAkCzD,IAAG0xB,cAAc9tB,IAAKqtB,eAAeO,EAAG,2CAE1O,4BAvGpB,O,EAiHJtB,Q,6UC3JTyB,EADLlxB,Y,EAAD,cAC2BC,YACvBC,YAAYC,GACRC,MAAMD,GACNI,KAAKiB,MAAQ,GACbjB,KAAKwa,aAAe,KAGxB9Y,uBACI,MAAM,2BAAEkvB,GAA+B5wB,KAAKJ,MACxCgxB,GACAA,EAA2B5wB,KAAKwa,cAIxChZ,oBACI,MAAM,wBAAEqvB,GAA4B7wB,KAAKJ,MACrCixB,GACAA,EAAwB7wB,KAAKwa,cAIrC3Y,SACI,MAAM,kBACFgf,EAAoB,GADlB,kBAEFC,EAAoB,GAFlB,cAGFgB,EAHE,IAIFC,EAAM,GAJJ,IAKFzP,EALE,WAMFsN,EANE,WAOFyC,EAPE,UAQF7J,GACAxY,KAAKJ,MAEHkxB,EAAiB,GAMvB,OALItY,IACAsY,EAAetY,UAAYA,GAE/BoH,EAAWrJ,QAAQxW,GAAK+wB,EAAgB,QAAO/wB,GAAOgxB,UAAU1O,EAAWtiB,IAAMgiB,EAAIhiB,KAGjF,qBACI0C,MAAQ,GAAEoe,EACVnd,IAAKC,GAAK3D,KAAKwa,aAAe7W,EAC9BqR,WAAU1C,GACNwe,GAEJ,mBACIruB,MAAQ,GAAEqe,EACVpe,MAAQ,mBAEPof,EAAc,CACXC,MACAzP,c,EASlB0e,EADLvxB,Y,EAAD,cACuBC,YACnBC,YAAYC,GACRC,MAAMD,GADS,KAMnBqxB,2BAA6B,KACzBjxB,KAAKkxB,qBAAuB,MAPb,KAUnB1P,mBAAsB2P,IAClB,MAAM,mBAAE3P,GAAuBxhB,KAAKJ,MACD,mBAAxB4hB,GAEPA,EAAmB2P,GAKvBA,EAAQ5a,QAASxW,IACb,MAAM,eAAEqxB,GAAmBrxB,GACrB,OAAEyH,EAAS,GAAMzH,EAAEG,OAAOE,QAM1BixB,EAAgB/d,KAAKC,IAHPxT,EAAEG,OAAOoxB,WAAW,GAAGC,aACtBxxB,EAAEG,OAAOqxB,aACTxxB,EAAEG,OAAOsxB,cAI1BJ,GACArxB,EAAEG,OAAOoxB,WAAW,GAAG5uB,MAAM+uB,QAAS,QAYtC1xB,EAAEG,OAAOwC,MAAMgvB,WAAeL,EAAgB7pB,EAAS6pB,EAAgB7pB,GAA3C,MACrBzH,EAAEG,OAAOwC,MAAMgvB,YAEtB3xB,EAAEG,OAAOwC,MAAMgvB,WAAeL,EAAgB7pB,EAAS6pB,EAAgB7pB,GAA3C,KAC5BzH,EAAEG,OAAOoxB,WAAW,GAAG5uB,MAAM+uB,QAAS,WA/C/B,KAoDnBE,0BAA4B,KACxB,KAAM,yBAA0B7b,WAC1B,8BAA+BA,WAC/B,sBAAuBA,OAAO8b,0BAA0BC,WAC1D,OAAO,EAQX7xB,KAAKkxB,qBAAuB,IAAIY,qBAAqB9xB,KAAKwhB,mBAL1C,CACZuQ,KAAM,KACNC,WAAY,QACZC,UAAW,MA9DA,KAmEnBpB,wBAA2BntB,IACnB1D,KAAKkxB,sBAAwBxtB,GAC7B1D,KAAKkxB,qBAAqBgB,QAAQxuB,IArEvB,KAwEnBktB,2BAA8BltB,IACtB1D,KAAKkxB,sBAAwBxtB,GAC7B1D,KAAKkxB,qBAAqBiB,UAAUzuB,IAxExC1D,KAAKiB,MAAQ,GA4EjBghB,qBACIjiB,KAAK2xB,4BAGTjwB,uBACI1B,KAAKixB,6BAGTpvB,SACI,MAAM,KACF+M,EAAO,GADL,kBAEFiS,EAAoB,oBAFlB,kBAGFC,EAAqB,4GAHnB,cAIFgB,EAAiB/hB,KAAM,gDAJrB,WAKF6f,EAAa,GALX,WAMFyC,EAAa,IACbriB,KAAKJ,MAET,OACI,mBAAK6C,MAAM,SACNmM,GAAQA,EAAK6F,OAAO1U,GAAK6C,IAAK6d,SAAS1gB,IAAIiH,IAAI,CAAC+a,EAAKzP,KAClD,MAAM8f,EAAiBrQ,EAAIsQ,eAAe,qBAAuBtQ,EAAIlB,kBAAoBA,EACnFyR,EAAiBvQ,EAAIsQ,eAAe,qBAAuBtQ,EAAIjB,kBAAoBA,EACzF,OAAQ,mBACJ,YAAC6P,EAAD,CACIhe,IAAM,YAAWL,KAAOyP,EAAI/e,KAC5B+e,IAAKA,EACLzP,IAAKA,EACLue,wBAAyB7wB,KAAK6wB,wBAC9BD,2BAA4B5wB,KAAK4wB,2BACjC/P,kBAAmBuR,EACnBtR,kBAAmBwR,EACnBxQ,cAAeA,EACflC,WAAYA,EACZyC,WAAYA,Y,EASzB2O,Q","file":"route-home.chunk.f2b5b.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport YrWeather from '../../components/yrweather/';\nimport Races from '../../components/races/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore, messageStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\t\tawait messageStore.getUnReadMessages();\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.addNavigation();\n\t\tthis.loadAll();\n\t}\n\n\t// Swipe navigation\n\taddNavigation = (props = this.props) => {\n        const { viewmenu } = props;\n        const { appState } = this.props.stores;\n\t\tif (viewmenu === 'wall') {\n\t\t\tappState.setSwipeRight();\n\t\t\tappState.setSwipeLeft(() => {\n\t\t\t\tappState.setSwipeLeft();\n\t\t\t\troute(`/home-workout`);\n\t\t\t});\n\t\t}\n\t\tif (viewmenu === 'workout') {\n\t\t\tappState.setSwipeLeft();\n\t\t\tappState.setSwipeRight(() => {\n\t\t\t\tappState.setSwipeRight();\n\t\t\t\troute(`/`);\n\t\t\t});\n\t\t}\n\t}\n\n\t// getState = async () => {\n\t// \tconst { workoutStore } = this.props.stores;\n\t// \tawait workoutStore.cordovaGetState();\n\t// \tawait workoutStore.cordovaProviderState();\n\t// \tawait workoutStore.cordovaIsPowerSaveMode();\n\t// \tawait workoutStore.cordovaGetLog();\n\t// }\n\n\tdestroyLog = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tworkoutStore.cordovaDestroyLog();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setSwipeRight();\n\t\tappState.setSwipeLeft();\n\t}\n\t// /Swipe navigation\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.viewmenu !== this.props.viewmenu) {\n            // this.addNavigation(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { viewmenu, path, teamid, scrollToTop } = this.props;\n\t\tconst { userStore, appState, workoutStore } = this.props.stores;\n\t\t// const { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode, apiServer } = appState;\n\t\tconst { isAdmin, user } = userStore;\n\t\tconst { currentLocationGeocode = {}, yrWeatherKeys = [] } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, cordovaAuthorizationStatus, powerSaveStatus,\n\t\t\tproviderState, log, isRunning, totalDistance, geoLocationState, bgGeo, currentSpeed, totalTime, workouts } = workoutStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\n{/* <xmp>bgGeo: {JSON.stringify(bgGeo, null, 4)}</xmp> */}\n\n{/* <button class='btn btn-success btn-block' onClick={this.getState}>Get State</button>\n<button class='btn btn-success btn-block' onClick={this.destroyLog}>Destroy log</button>\n<xmp>cordovaAuthorizationStatus: {JSON.stringify(cordovaAuthorizationStatus, null, 4)}</xmp>\n<xmp>cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams, null, 4)}</xmp>\n<xmp>geoLocationState: {JSON.stringify(geoLocationState, null, 4)}</xmp>\n<xmp>powerSaveStatus: {JSON.stringify(powerSaveStatus, null, 4)}</xmp>\n<xmp>providerState: {JSON.stringify(providerState, null, 4)}</xmp>\n<xmp>isRunning: {JSON.stringify(isRunning, null, 4)}</xmp>\n<xmp>totalDistance: {JSON.stringify(totalDistance, null, 4)}</xmp>\n<xmp>currentSpeed: {JSON.stringify(currentSpeed, null, 4)}</xmp>\n<xmp>totalTime: {JSON.stringify(totalTime, null, 4)}</xmp>\n<xmp>workoutStore.workouts: {JSON.stringify(workouts.length, null, 4)}</xmp> */}\n\n{/* {log && <>{JSON.stringify(log.split('\\n').map(e => `${e}\\n`), null, 4)}</>} */}\n\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t{/* <xmp>{JSON.stringify(window.cordova, null, 4)}</xmp> */}\n\t\t\t\t{/* <div class=''>\n\t\t\t\t\t{user.id && <YrWeather stores={this.props.stores} place={place} yrWeather={yrWeatherKeys.join(',')} />}\n\t\t\t\t</div> */}\n\n\t\t\t\t{user.id && <StoryAdd stores={this.props.stores} />}\n\n\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1'\n\t\t\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t\t\t>\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-left rounded-none ${viewmenu === 'wall' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='wall'\n\t\t\t\t\t\t\t\t\t\thref='/'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-comments' /> <Text id='home.wall'>Veggen</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-right rounded-none ${viewmenu === 'workout' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='workout'\n\t\t\t\t\t\t\t\t\t\thref='/home-workout'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-running' />  <Text id='home.feed'>Feed</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\thref='/home-totals'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='home.totals'>Totaler</Text>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t{viewmenu === 'wall' && <>\n\t\t\t\t\t<Races stores={this.props.stores} />\n\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} path={path} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'workout' && <>\n\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} teamid={teamid} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'totals' && <>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} />\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass WorkoutTotals extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        await this.loadTeams(props);\n        // await Promise.all([\n        //     this.loadTeams(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n        const { teamStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear, currentTeam, currentSeason: currentSeasonSummary, prevSeason: prevSeasonSummary } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { workoutSummary } = teamStore;\n        const prevSeason = prevSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart - 1) : teamStore.findWorkoutSummaryTotal(seasonStart - 1)) || {});\n        const currentSeason = currentSeasonSummary || ((currentTeam ? teamStore.findWorkoutSummary(currentTeam, seasonStart) : teamStore.findWorkoutSummaryTotal(seasonStart)) || {});\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2 border-top'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Distance stores={this.props.stores} value={currentSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-road' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Distance stores={this.props.stores} value={prevSeason.distanceKm || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Elevation stores={this.props.stores} value={currentSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-mountain' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Elevation stores={this.props.stores} value={prevSeason.elevation || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            {util.secToHms(currentSeason.duration || 0)}\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-clock' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            {util.secToHms(prevSeason.duration || 0)}\n                        </h3>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom'>\n                    <div class='col text-center'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart}-{seasonStart + 1}</small>\n                        <h3>\n                            <Speed stores={this.props.stores} value={currentSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                    <div class='col text-center border-left'>\n                        <small class='text-muted'><i class='fas fa-tachometer-alt' /> {seasonStart - 1}-{seasonStart}</small>\n                        <h3 class='text-muted'>\n                            <Speed stores={this.props.stores} value={prevSeason.speedAvg || 0} smallUnit={true} />\n                        </h3>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutTotals;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        // await Promise.all([\n        //     this.loadTeams(props),\n        //     this.loadWorkoutPlans(props),\n        //     this.loadWorkoutSummary(props),\n        // ]);\n    }\n\n    async loadTeams(props = this.props) {\n\t\tconst { teamStore } = props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear, currentTeam } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { workoutPlanStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { year = currentYear, month = currentMonth, currentTeam } = props;\n\t\tconst seasonStart = parseInt(year || (month < 8 ? year - 1 : year), 10);\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t}\n\t\t}\n\t}\n\n    async loadWorkoutSummary(props = this.props) {\n        const { year, currentTeam, dog } = props;\n\t\tconst { userStore } = props.stores;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, dog });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n\t\tconst { currentSeason, prevSeason, currentTeam } = this.props;\n\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { workoutPlan } = workoutPlanStore;\n        const { user, workoutSummaryTeam } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst team = teamStore.findTeam(currentTeam) || {};\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { year = currentYear, month = currentMonth } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n        const months = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <span style='display: none;'>{workoutPlan.id}</span>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > year || (month.year === year && month.month >= month)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center text-muted mb-5'>\n                        <div class='display-1'>\n                            <i class='far fa-sad-tear' />\n                        </div>\n                        <h3 class='font-weight-lighter'>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                        <a class='btn btn-success btn-lg mt-3' href='/workouts/plan'><i class='fas fa-calendar-alt' /> <Text id='workout.plan.new'>New workoutplan</Text></a>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","/** Object.assign ponyfill (note: used by Rollup)\n *\t@private\n */\nexport function assign(obj) {\n\tfor (let i=1; i<arguments.length; i++) {\n\t\t// eslint-disable-next-line guard-for-in, prefer-rest-params\n\t\tfor (let p in arguments[i]) obj[p] = arguments[i][p];\n\t}\n\treturn obj;\n}\n\n\nexport function getWindow() {\n\ttry {\n\t\tif (window) return window;\n\t}\n\tcatch (e) {\n\t\treturn;\n\t}\n}\n\n","import { h, Component } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { assign, getWindow } from './util'; // eslint-disable-line no-unused-vars\n\n/**\n * Returns true if the application is running as an installed PWA.\n *\n * @example\n * let isStandalone = isStandAlone();\n *\n */\nexport function isStandalone() {\n\tlet window = getWindow();\n\tif (!window) return false;\n\n\treturn window.matchMedia && window.matchMedia('(display-mode: standalone)').matches && true ||\n            window.navigator && window.navigator.standalone === true || false;\n}\n\nconst CACHE = {\n\tprompt: null,\n\tinstallPromptListener: null,\n\tappInstalledListener: null,\n\tonPrompts: []\n};\n\n/**\n * Any window listeners and cached prompts that have been captured by awaitInstallPrompt() are removed.\n */\nexport function reset() {\n\tlet window = getWindow();\n\tif (CACHE.installPromptListener) {\n\t\twindow && window.removeEventListener && window.removeEventListener('beforeinstallprompt', CACHE.installPromptListener);\n\t\tCACHE.installPromptListener = null;\n\t}\n\tif (CACHE.appInstalledListener) {\n\t\twindow && window.removeEventListener && window.removeEventListener('appinstalled', CACHE.appInstalledListener);\n\t\tCACHE.appInstalledListener = null;\n\t}\n\tCACHE.prompt = null;\n\tCACHE.onPrompts = [];\n}\n\nfunction removeOnPrompt(func) {\n\tCACHE.onPrompts = CACHE.onPrompts.filter(onPrompt => onPrompt !== func);\n}\n\nfunction dispatchToOnPrompt() {\n\tCACHE.onPrompts.forEach(onPrompt => onPrompt(CACHE.prompt));\n}\n\n/**\n * This function allows you to listen to the browser for the install prompt\n * that allows you to install the application standalone.\n *\n * Different browsers have different criteria for when this prompt is made available.\n * Currently Chrome requires that  the user \"interact\" with the content on your domain\n * for at least 30 seconds.\n *\n * More info can be found here:\n * https://developers.google.com/web/fundamentals/app-install-banners/\n *\n * awaitInstallPrompt offers the following capabilities:\n * * Listen to the browser for an install prompt.\n * * Stop listening at any time.\n * * Trigger the prompt to request app installation.\n *\n * @param {Function} onPrompt (prompt, cancel) => {} A function that will be called when\n * the browser delivers a prompt that we can present. The first argument prompt is a function\n * you can call at any time the triggers the install process. cancel is another function\n * that allows you to stop listening for prompts.\n *\n * @returns {Function} An function that when called, will stop listening for incoming prompts from the browser.\n *\n * @example\n * let cancel = awaitInstallPrompt((prompt) => {\n *      prompt().then(\n *          success => console.log(\n *              success && 'Successfully installed app as PWA.'\n *                      || 'User abandoned install.'\n *          )\n *      )\n * })\n */\nexport function awaitInstallPrompt(onPrompt) {\n\tif (!CACHE.installPromptListener) {\n\t\tlet window = getWindow();\n\t\tif (!window || isStandalone()) return null;\n\t\tCACHE.installPromptListener = e => {\n\t\t\te.preventDefault();\n\t\t\tlet installPrompt = e;\n\t\t\tCACHE.prompt = () =>  new Promise(resolve => {\n\t\t\t\tCACHE.appInstalledListener = () => {\n\t\t\t\t\tresolve(true);\n\t\t\t\t};\n\t\t\t\twindow.addEventListener('appinstalled', CACHE.appInstalledListener);\n\t\t\t\tinstallPrompt.prompt();\n\t\t\t\tinstallPrompt.userChoice.then(choiceResult => {\n\t\t\t\t\tchoiceResult.outcome !== 'accepted' && resolve(false);\n\t\t\t\t});\n\t\t\t}).then(success => {\n\t\t\t\tinstallPrompt = null;\n\t\t\t\tCACHE.appInstalledListener && window.removeEventListener('appinstalled', CACHE.appInstalledListener);\n\t\t\t\tif (success) {\n\t\t\t\t\tCACHE.prompt = null;\n\t\t\t\t\tdispatchToOnPrompt();\n\t\t\t\t}\n\t\t\t\treturn success;\n\t\t\t});\n\t\t\tdispatchToOnPrompt();\n\t\t};\n\t\twindow.addEventListener('beforeinstallprompt', CACHE.installPromptListener);\n\t}\n\tif (onPrompt) {\n\t\tCACHE.onPrompts.push(onPrompt);\n\t\tCACHE.prompt && onPrompt(CACHE.prompt);\n\t\treturn () => removeOnPrompt(onPrompt);\n\t}\n\treturn () => reset();\n}\n\n/**\n * A Higher Order Component that implements the awaitInstallPrompt() lifecycle and provides\n * the wrapped component with only the meaning full artifacts as props:\n *\n * Props:\n * * isStandalone - true if the app is running in standalone mode.\n * * installPrompt - the prompt function that you call at any time.\n *\n * @example\n * export installer()(\n *      function({isStandalone, installPrompt}){\n *          return (\n *              isStandalone && <p>Running as Standalone</p> ||\n *              installPrompt && <a href=\"#\" onclick={installPrompt}>Install App</a>\n *          );\n *      }\n * );\n */\nexport function installer() {\n\treturn Child => {\n\t\tclass Installer extends Component {\n\n\t\t\tstatic getDerivedStateFromProps(props, state) {\n\t\t\t\treturn state.isStandalone === undefined && { isStandalone: isStandalone() };\n\t\t\t}\n\n\t\t\tcancel() {\n\t\t\t\tthis.setState({ prompt: null });\n\t\t\t\tthis.canceltoken && this.canceltoken();\n\t\t\t}\n        \n\t\t\tcomponentDidMount() {\n\t\t\t\tif (this.state.isStandalone === false) {\n\t\t\t\t\tthis.canceltoken = awaitInstallPrompt(prompt => {\n\t\t\t\t\t\tthis.setState({ prompt });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponentWillUnmount() {\n\t\t\t\tthis.cancel();\n\t\t\t}\n        \n\t\t\trender(props, { isStandalone, prompt }) {\n\t\t\t\treturn h(Child, { ...props, isStandalone, installPrompt: prompt } );\n\t\t\t}\n\t\t}\n\t\treturn Installer;\n\t};\n}\n\n/**\n * A Hook that implements the awaitInstallPrompt() lifecycle and returns\n * an object that contains the isStandalone and installPrompt props:\n *\n * @returns {Object}\n * * isStandalone - true if the app is running in standalone mode.\n * * installPrompt - the prompt function that you call at any time.\n */\nexport function useInstaller() {\n\tconst [standalone] = useState(isStandalone());\n\tconst [installPrompt, setInstallPrompt] = useState(null);\n\tuseEffect(() => awaitInstallPrompt((prompt, cancel) => {\n\t\tsetInstallPrompt({ prompt: () =>\n\t\t\tprompt().then(installed => {\n\t\t\t\tinstalled && cancel();\n\t\t\t\treturn installed;\n\t\t\t})\n\t\t});\n\t}));\n\treturn ({ isStandalone: standalone, installPrompt: installPrompt && installPrompt.prompt });\n}\n\nexport default useInstaller;\n","import { h } from 'preact';\nimport { useInstaller } from 'preact-pwa-install';\nimport { Text } from 'preact-i18n';\n\nexport default function InstallButton() {\n\tconst { installPrompt, isStandalone } = useInstaller();\n\treturn installPrompt && (\n        <div class='text-center'>\n            <a class='btn btn-success' href=\"#\" onclick={installPrompt}>\n                <Text id='install.install-app'>Install The Musher</Text>\n            </a>\n        </div>\n    ) || isStandalone && '';\n}\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport { route } from 'preact-router';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport Speed from '../data/speed';\nimport Elevation from '../data/elevation';\nimport Weight from '../data/weight';\nimport Distance from '../data/distance';\nimport Temperature from '../data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false,\n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    storyStore.workoutsAddLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    storyStore.workoutsAddLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        storyStore.workoutsAddCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        storyStore.workoutsAddCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            teamStore.addLikeToWorkout({ id, data });\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            storyStore.workoutsAddLikeToWorkout({ id, data });\n        }\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    showWorkoutDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const target = e.target.closest('#workoutDetail');\n        if (target) {\n            const { id } = target.dataset;\n            if (id) {\n            console.log({ target, id });\n                route(`/workouts/public/${id}`);\n            }\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { feed = {} } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedTextName = await teamStore.translate({ object: feed, user, field: 'name' });\n        let translatedTextComment;\n        if (feed.comment) {\n            translatedTextComment = await teamStore.translate({ object: feed, user, field: 'comment' });\n        }\n        this.setState({ showOriginal: 0, translatedTextName, translatedTextComment });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { feed, idx, onTeamClick = () => {}, onUserClick = () => {}, onDogClick = () => {}, holdingStore = 'team' } = this.props;\n        const { showAddComment, showDate, likeWorkout, showOriginal, translatedTextName, translatedTextComment } = this.state;\n        const { teamStore, storyStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { darkmode, hasShareApi } = appState;\n\n        const { publicDogs } = teamStore;\n        let team = {};\n        let publicUser = {};\n        if (holdingStore === 'team') {\n            team = teamStore.findPublicTeam(feed.team);\n            publicUser = teamStore.findPublicUser(feed.user) || {};\n        } else if (holdingStore === 'story') {\n            team = storyStore.findPublicTeam(feed.team);\n            publicUser = storyStore.findPublicUser(feed.user) || {};\n        }\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        const image = mu.getImage({ user: publicUser, team, object: feed, priority: 'user' });\n\n        const { likes, comments } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\t\tconst { gpxInfo = {} } = feed;\n\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (publicUser) {\n            shortname = mu.displayNameShort(publicUser);\n            name = mu.displayName(publicUser);\n            username = mu.displayName(publicUser);\n            if (publicUser.settings && publicUser.uuidv4 !== user.uuidv4) {\n                userLink = publicUser.settings.hideProfile ? null : `/inbox/${publicUser.uuidv4}`;\n            }\n        }\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        const translationName = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'name',\n        }) || translatedTextName;\n        let feedName = translationName || feed.name;\n        const translationComment = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'comment',\n        }) || translatedTextComment;\n        let feedComment = translationComment || feed.comment;\n\n        if (showOriginal) {\n            feedName = feed.name;\n            feedComment = feed.comment;\n        }\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                    <span class='badge badge-pill badge-secondary float-right'>{teamType}</span>\n                    <h5 class='mb-1 position-relative' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    <div class='mb-2'>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {feed.public === 1 ? <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-globe-europe' />\n                            </small>\n                        </> : <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                            </small>\n                        </>}\n                        {username && <>\n                            <small class='ml-2 text-muted'>\n                                {userLink ? <>\n                                    <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                </> : <>\n                                    <i class='fas fa-user' /> {username}\n                                </>}\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={feed.sledWeight} />\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> <Temperature stores={this.props.stores} value={feed.temperature} />\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                            {feed.moonIllumination && feed.moonIllumination.phaseIcon && <span class='float-right ml-2'>{feed.moonIllumination.phaseIcon}</span>}\n                        </small>\n                    </div>\n\n                    {isAdmin && <div\n                        class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                        style='overflow: auto;'\n                    >\n                        <small class='text-muted mr-2'>Adm:</small>\n                        {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {publicUser.deviceInfo && <>\n                            <span class='badge badge-secondary ml-1 float-right font-weight-light'>\n                                {['platform', 'manufacturer', 'model'].map(e => <>\n                                    <span class='ml-1 text-white'>\n                                        {publicUser.deviceInfo[e]}\n                                    </span>\n                                </>)}\n                            </span>\n                        </>}\n                        {adminData && <>\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                            </>)}\n                        </>}\n                    </div>}\n                </div>\n            </div>\n\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='d-flex justify-content-between bg-light rounded-lg px-2'>\n                {feed.distanceKm > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Distance stores={this.props.stores} value={feed.distanceKm} />\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Elevation stores={this.props.stores} value={feed.elevation} />\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {gpxInfo && gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                            <Speed stores={this.props.stores} value={gpxInfo.avgGpsMovingSpeed * 3.6} />\n                        </> : <>\n                            <Speed stores={this.props.stores} value={feed.speedAvg} />\n                        </>}\n                    </div>\n                </div>}\n            </div>\n\n            <div class='row mt-2'>\n                <div id='workoutDetail' class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;' onClick={this.showWorkoutDetail} data-id={feed.uuidv4}>\n                    <Markdown markdown={mu.replaceImages(feedName, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feedComment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                {feed.language !== language && <>\n                    {!showOriginal && translationName ? <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                    </> : <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                    </>}\n                </>}\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments\n                    stores={this.props.stores}\n                    likes={likes}\n                    comments={comments}\n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                                data-native\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport TeamConnectBoxes from './connect-boxes';\nimport TeamConnectConfirm from './connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from './fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from './publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 10,\n    offset: 0,\n    hasFollowSugguestions: false, \n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeamsPublicFeed({ props = this.props, limit, offset }) {\n\t\tconst { teamStore } = props.stores;\n        const { teamid } = props;\n\t\tawait teamStore.loadPublicFeed({ limit, offset, sort: '-createdDate', teamid });\n\t}\n\n    setLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {\n            const { teamid } = this.props;\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadTeamsPublicFeed({ limit, offset, teamid });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {});\n    }\n\n    async loadAll(props = this.props) {\n        const { limit } = this.state;\n        const { teamid } = props;\n\t\tawait this.loadTeamsPublicFeed({ props, limit, offset: 0, teamid });\n        // this.insertTopRanked();\n        // this.insertAds();\n        // this.insertTeamConfirm();\n        // this.insertTeamSuggestions();\n    }\n\n    insertTopRanked = () => {\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed, topRankedWorkouts } = teamStore;\n        const topRankedRandomized = util.shuffleArray(topRankedWorkouts);\n        const feed = [...publicTeamsFeed];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            const randomPlace = mu.randomInt(0, 7);\n            if (util.isObject(topRankedRandomized[i])) {\n                feed.splice(randomPlace, 0, topRankedRandomized[i]);\n            }\n        }\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { teamStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => teamStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { teamStore } = this.props.stores;\n        teamStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // teamStore.cleanupMemory();\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n        this.setLoadMore();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.teamid !== this.props.teamid) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <TeamPublicFeedLine\n                stores={this.props.stores}\n                feed={obj}\n                idx={idx}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { showTeam, showDog, handleIntersection, sessionid, dogs } = this.state;\n        const { teamStore, appState } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const { path, darkmode } = appState;\n        const { teamid } = this.props;\n        const team = teamStore.findPublicTeamByUuidv4(teamid);\n        \n        const image = mu.getImage({ team });\n        let shortname;\n        let name;\n        let username;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n        }\n\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {team ? <>\n                    <div class='row pb-3 pt-3'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n                            <div class='row'>\n                                <h3>\n                                    <div class='d-flex position-relative'>\n                                        <div\n                                            class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                                        >\n                                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                                        </div>\n                                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                                            <h3 class='mb-1'>\n                                                {team.public ? <>\n                                                    <a href={`/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a>\n                                                </> : <>\n                                                    {name}\n                                                </>}\n                                            </h3>\n                                        </div>\n                                    </div>\n                                </h3>\n                            </div>\n                        </div>\n                    </div>\n                </> : <>\n                    <TeamConnectConfirm stores={this.props.stores} />\n                </>}\n\n                {(!publicTeamsFeed || publicTeamsFeed.length === 0) && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-chart-area' /></div>\n                            <h3><Text id='search.no-workouts-found'>No workouts found.</Text></h3>\n                            <Text id='teams.no-public-workouts-text'>Please follow more teams to see their workout activity on this page. This is a great way to get updates from all your favorite mushers.</Text>\n                        </div>\n                        <div class='text-center mt-3'>\n                            <a href='/teams/connect' class='btn btn-primary'>\n                                <i class='fas fa-users' /> <Text id='header.connect-team'>Follow teams</Text>\n                            </a>\n                        </div>\n                    </div>\n                </>}\n\n                <FastList\n                    data={publicTeamsFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    dataValues={{ type: '10' }}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport StoryPoll from './storyPoll';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value);\n        }, 1000);\n    }\n\n    async doUpdateField(id, name, value) {\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), name, value);\n    }\n\n    render() {\n        const { storyBody, storyType } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        return (<>\n            <div class='d-flex bd-highlight'>\n                <div class='p-0 w-100 bd-highlight'>\n                    <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                    <div class='border rounded rounded-lg position-relative'>\n                        <Localizer>\n                            <textarea\n                                class='form-control-plaintext px-2'\n                                type='text'\n                                placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                onInput={linkState(this, 'storyBody')}\n                                // onKeyUp={mu.resizeTextarea}\n                                onFocus={mu.resizeTextarea}\n                                style='height: 2.3em;'\n                                value={storyBody || story.body}\n                            />\n                        </Localizer>\n                    </div>\n\n                    <div class='position-relative mt-3'>\n                        {isAdmin && <>\n                            <div class='col-12 text-center mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <label>Pinned to top:</label>\n                                        <input\n                                            type='checkbox'\n                                            id={story.id}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? 0 : 1}\n                                            checked={story.pinned ? 1 : 0}\n                                        />\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                    <button type='button' class='btn btn-primary mb-2'\n                        onClick={this.saveStory}\n                        data-id={story.id}\n                    ><i class='fas fa-paper-plane' /></button>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n        const { components = [], finalBody } = mu.getInlineComponents(body);\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(finalBody, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                    {components && components.map((component, idx) => {\n                        if (component.name === 'poll') {\n                            return <StoryPoll\n                                stores={this.props.stores}\n                                story={story}\n                                storyId={story.id}\n                                params={component.params}\n                                opts={component.opts}\n                                content={component.content}\n                            />;\n                        }\n                    })}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>\n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    <div class='row mt-2'>\n                        <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                            {showEdit[story.id] && <>\n                                <StoryEditInline\n                                    stores={this.props.stores}\n                                    story={story}\n                                    key={`story-edit-${story.id}`}\n                                    callback={this.doneEdit}\n                                />\n                            </>}\n                            {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                            </div>}\n                        </div>\n                    </div>\n\n                    {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                    {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='mr-2'>\n                            <LikesAndComments\n                                stores={this.props.stores}\n                                likes={likes}\n                                comments={comments}\n                                type='story'\n                                onTeamClick={onTeamClick}\n                                onUserClick={onUserClick}\n                            />\n                        </div>\n                        {views > 0 && <>\n                            <div>\n                                <Views\n                                    stores={this.props.stores}\n                                    views={views}\n                                    object={story}\n                                    type='story'\n                                    isTeamAdmin={isTeamAdmin}\n                                    isAdmin={isAdmin}\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                        </>}\n                    </div>\n\n                    {showTeamSetting[story.id] && <>\n                        <small>\n                            <div class='alert alert-info' role='alert'>\n                                <span class='display-4 float-left'>\n                                    <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                </span>\n                                <p>\n                                    <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                </p>\n                                <p>\n                                    <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                </p>\n                                <p>\n                                    <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                </p>\n                            </div>\n                        </small>\n                    </>}\n\n                    <div>\n                        <div class='row'>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                    data-id={story.id}\n                                    onClick={this.likeStory}\n                                >\n                                    <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                </button>\n                            </div>\n                            <div class='col text-center'>\n                                <button\n                                    type='button'\n                                    class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                    data-id={story.id}\n                                    onClick={this.toggleAddComment}\n                                >\n                                    <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                </button>\n                            </div>\n                            {hasShareApi ? <>\n                                <div class='col text-center'>\n                                    <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        onClick={this.shareLink}\n                                        data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        data-title={`title: ${story.title}`}\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </button>\n                                </div>\n                            </> : <>\n                                <div class='col text-center'>\n                                    <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                        data-native\n                                    >\n                                        <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                    </a>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n\n                    <div class='mt-2'>\n                        <StoryComments\n                            stores={this.props.stores}\n                            story={story}\n                            col='10'\n                            offset='2'\n                            compact={false}\n                            showAllComments={showAllComments}\n                            initCall={this.closeAllAddComments}\n                        />\n                        {showAddComment[story.id] && <StoryAddComment\n                            stores={this.props.stores}\n                            story={story}\n                            inputRef={c => this.inputRef[story.id] = c}\n                            inputRefObject={this.inputRef}\n                            col='10'\n                            offset='2'\n                            key={`story-comment-${story.id}`}\n                        />}\n                    </div>\n\n                {/* </div> */}\n\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryPoll extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {};\n        this.inputRef = {};\n    }\n\n    pollStory = async (e) => {\n        const { storyId } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { line } = e.target.dataset;\n\t\tconst response = await storyStore.pollStory({ id: storyId, line });\n\t}\n\n    render() {\n        const { story, storyId, params, opts, content } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const lines = content.split('\\n').map(line => line.trim().replace(/^\\-\\s*/g, ''));\n        const hasPolledStory = story.polls && story.polls.findIndex(e => e.user === currentUser.id) > -1;\n        const totalPolls = story.polls ? story.polls.length : 0;\n        let maxPercent = 0;\n        lines.forEach((line) => {\n            const percent = (story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length / totalPolls : 0) * 100;\n            if (percent > maxPercent) {\n                maxPercent = percent;\n            }\n        });\n        const voteDays = opts.days ? parseInt(opts.days, 10) : 7;\n\n        const finishDate = util.addDays(story.date, voteDays);\n        const isExpired = finishDate < new Date();\n\n        return (<>\n            <div class='w-100 my-4'>\n                {isExpired || hasPolledStory ? <>\n                    {lines && lines.map((line, idx) => {\n                        const hasPolledLine = story.polls && story.polls.findIndex(e => e.user === currentUser.id && e.line === mu.md5(line)) > -1;\n                        const totalLinePolls = story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length : 0;\n                        const percent = totalLinePolls / totalPolls * 100;\n                        return (<>\n                            <div class={`progress position-relative my-2 `} style='height: 1.5em; font-size: 1.3em;'>\n                                <span class='position-absolute' style='right: 10px;'> {util.format(percent || 0, 1)}%</span>\n                                <span class='position-absolute' style='left: 10px;'> {hasPolledLine && <i class='fas fa-check-circle' />} {line}</span>\n                                <div\n                                    class={`progress-bar ${maxPercent === percent ? 'bg-primary' : 'bg-secondary'}`}\n                                    role=\"progressbar\"\n                                    style={`width: ${percent}%;`}\n                                    aria-valuenow={percent}\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                />\n                            </div>\n                        </>);\n                    })}\n\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>{util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}</div>\n                        {isExpired ? <>\n                            <div class='ml-2'>- <Text id='story.finished'>Finished</Text></div>\n                        </> : <>\n                            <div class='ml-2'>- {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text></div>\n                        </>}\n                    </div>\n                </> : <>\n                    {lines && lines.map((line, idx) => <>\n                        <button class='btn btn-block btn-outline-primary rounded-pill' onClick={this.pollStory} data-line={mu.md5(line)}>{line}</button>\n                    </>)}\n\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>{util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}</div>\n                        {isExpired ? <>\n                            <div class='ml-2'>- <Text id='story.finished'>Finished</Text></div>\n                        </> : <>\n                            <div class='ml-2'>- {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text></div>\n                        </>}\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPoll;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass Invite extends Component {\n    inviteKennel = async () => {\n        const { friendEmail: email } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const response = await userStore.inviteKennel({ email });\n        this.setState({\n            response,\n            inviteSent: true,\n        });\n    }\n\n    inviteNew = () => {\n        this.setState({\n            inviteSent: false,\n        });\n    }\n\n    hideInvite = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideInvite': 1 });\n        this.setState({\n            hideInvite: true,\n        });\n    }\n\n    render() {\n        const { inviteSent, hideInvite } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (!forceShow && settings.hideInvite || hideInvite) {\n            return '';\n        }\n        if (inviteSent) {\n            return (\n                <div class='col-12'>\n                    <Text id='users.invite.thanks'>Takk for at du hjelper oss til å bli flere 😃</Text>\n                    <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.inviteNew}>\n                        <Text id='users.invite.more'>Invitere flere</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 pb-4 clearfix'>\n                <h5><Text id='users.invite.title'>Inviter ny kennel til The Musher</Text></h5>\n                <p>\n                    <Text id='users.invite.text'>Jeg håper du vil hjelpe oss til å bli flere. Appen vil bli lansert veldig snart og det er påtide å invitere inn flere brukere.</Text>\n                </p>\n                <div>\n                    <div class='form-row align-items-center'>\n                        <div class='col-auto'>\n                            <label class='sr-only' for='inlineFormInput'><Text id='users.invite.email'>E-post</Text></label>\n                            <Localizer>\n                                <input type='text' class='form-control form-control-sm mb-2' id='inlineFormInput'\n                                    placeholder={<Text id='users.invite.email-placeholder'>E-post til ny kennel</Text>}\n                                    onInput={linkState(this, 'friendEmail')}\n                                />\n                            </Localizer>\n                        </div>\n                        <div class='col-auto'>\n                            <button type='button' class='btn btn-sm btn-primary mb-2' onClick={this.inviteKennel}>\n                                <Text id='users.invite.send'>Send invitasjon</Text>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                {!forceShow && <button type='button' class='btn btn-sm btn-link mb-2 float-left' onClick={this.hideInvite}>\n                    <i class='fas fa-eye-slash' /> <Text id='users.invite.hide'>Skjul</Text>\n                </button>}\n            </div>\n        );\n    }\n}\n\nexport default Invite;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n// const fieldSorter = (fields) => (a, b) => fields.map(o => {\n//     let dir = 1;\n//     if (o[0] === '-') { dir = -1; o=o.substring(1); }\n//     return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n// }).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            // this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    // insertWorkouts = () => {\n    //     const { storyStore } = this.props.stores;\n    //     const { publicWorkouts, publicFeed } = storyStore;\n    //     if (publicWorkouts.length) {\n    //         const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n    //         storyStore.localUpdateField('publicFeed', finalArray);\n    //     }\n    // }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={dogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Teams extends Component {\n    toggleTeam = (team) => {\n\t\tconst { callback, unsetTeamIfSelected = true } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\t\tif (unsetTeamIfSelected && team === currentTeam) {\n\t\t\tdogStore.setCurrentTeam(undefined);\n\t\t\tworkoutStore.setCurrentTeam(undefined);\n\t\t} else {\n\t\t\tdogStore.setCurrentTeam(team);\n\t\t\tworkoutStore.setCurrentTeam(team);\n\t\t}\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n    showAllTeams = () => {\n\t\tconst { callback } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tdogStore.setCurrentTeam(undefined);\n\t\tworkoutStore.setCurrentTeam(undefined);\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// componentDidMount() {\n\t// \tif (this.container) {\n\t// \t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'center' });\n\t// \t}\n\t// }\n\n    render() {\n        const { userStore, dogStore } = this.props.stores;\n        const { teams } = userStore;\n\t\tconst { currentTeam } = dogStore;\n\t\tconst { highlight, showAll = true } = this.props;\n        return (\n\t\t\t<div class='row mt-2'>\n\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1 no-scrollbar'\n\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* <xmp><br /><br /><br /><br />{JSON.stringify(teams, null, 4)}</xmp> */}\n\t\t\t\t\t\t{teams && teams.map((team, idx) => {\n\t\t\t\t\t\t\tlet classNames;\n\t\t\t\t\t\t\tif (teams.length === 1) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-both';\n\t\t\t\t\t\t\t} else if (idx === 0) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-left';\n\t\t\t\t\t\t\t} else if (idx + 1 === teams.length) {\n\t\t\t\t\t\t\t\tclassNames = 'rounded-pill-right';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div class='col mb-0 px-0 clearfix' key={team.id}>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-sm btn-block \n\t\t\t\t\t\t\t\t\t\t\trounded-none ${classNames}\n\t\t\t\t\t\t\t\t\t\t\t${currentTeam === team.id ? 'btn-success' : 'btn-outline-success'}\n\t\t\t\t\t\t\t\t\t\t\ttext-nowrap clearfix`}\n\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggleTeam(team.id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-users' /> {team.name}\n\n\t\t\t\t\t\t\t\t\t\t{highlight && highlight.indexOf(team.id) > -1 && <>\n\t\t\t\t\t\t\t\t\t\t\t{currentTeam === team.id ? <>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check float-right' />\n\t\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-warning float-right' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t{/* {currentTeam === team.id && <ScrollIntoView horizontal={'center'} vertical={'end'} />} */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t{showAll && <div class='row'>\n\t\t\t\t\t\t<div class='col-12 mb-1 px-1 d-flex justify-content-center'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass={`btn btn-sm rounded-lg btn-link text-nowrap clearfix`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tonClick={this.showAllTeams}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-users' /> <Text id='teams.show-all'>Show all</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n    }\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            raceIdx: 0,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {\n            relevant: 1,\n        };\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    toggleRaces = async () => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { toggleFeature = {} } = user;\n        const value = toggleFeature.racesFrontpage ? 0 : 1;\n        this.setState({ hideRaces: value });\n        await userStore.setToggleFeature({\n            field: 'toggleFeature.racesFrontpage',\n            value,\n        });\n    }\n\n    scrollRaces = (e) => {\n        // scrollHeight: 705\n        // scrollLeft: 564\n        // scrollTop: 0\n        // scrollWidth: 1692\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const step = clientWidth;\n        const raceIdx = scrollLeft / step;\n\n        const nearestInt = Math.round(raceIdx);\n        const diff = Math.abs(nearestInt - raceIdx);\n        // console.log({ e, step, raceIdx, scrollLeft, scrollWidth, clientWidth, nearestInt, diff });\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(raceIdx) || diff < 0.5) {\n            this.setState({\n                raceIdx: nearestInt,\n            });\n        }\n    }\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\t// componentWillReceiveProps(nextProps) {\n    //     if (this.props.)\n\t// \tthis.loadRace(nextProps);\n\t// }\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races = [] } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode } = appState;\n\t\tconst { showNews, hideRaces, raceIdx } = this.state;\n        const { toggleFeature = {}, language = 'en' } = user;\n\n        const today = new Date();\n\n        if (!races || races.length === 0) {\n            return '';\n        }\n\n        return (\n            <div class='row'>\n                {hideRaces || toggleFeature.racesFrontpage ? <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-1'>\n                        <div class='row'>\n                            <div class={`col-12 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative px-0`}>\n                                <div class='w-100 d-flex justify-content-center'>\n                                    <button class='btn btn-lg btn-block btn-link' onClick={this.toggleRaces}>\n                                        <i class='fas fa-flag-checkered' /> <Text id='races.show-races'>Show Races</Text> {races.length > 1 && <>- {races.length}</>}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </> : <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-1'>\n                        <div class='row'>\n\n                            <div class='w-100 position-relative'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap bg-light border-top border-bottom'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                    onScroll={this.scrollRaces}\n                                >\n                                    {races && races.map((race, idx) =>  {\n                                        let status = '';\n                                        if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                                            status = 'race';\n                                        } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                                            status = 'signup';\n                                        } else if (today > new Date(race.endDate)) {\n                                            status = 'done';\n                                        }\n                                        return (<>\n                                            <div\n                                                class={`col-${races.length === 1 ? '12' : '8 ml-4'} ${races.length === idx + 1 ? 'mr-5' : ''} mb-0 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}\n                                                style={`\n                                                    scroll-snap-align: center;\n                                                    flex-wrap: wrap;\n                                                    overflow-y: hidden;\n                                                `}\n                                                onTouchstart={(e) => { e.stopPropagation(); }}\n                                                onTouchend={(e) => { e.stopPropagation(); }}\n                                                onTouchmove={(e) => { e.stopPropagation(); }}\n                                            >\n                                                <div class='row d-flex align-items-center position-relative'>\n                                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                                        {status === 'signup' && !race.liveRace && <>\n                                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                                        </>}\n                                                        {status === 'race' && <>\n                                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                                        </>}\n                                                        {status === 'done' && <>\n                                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                                        </>}\n                                                    </h5>\n                                                    {(race.images && race.images[0]) && <>\n                                                        <div\n                                                            class={`w-100`}\n                                                            style={`background-image: url(\"${race.images[0].s3LargeLink}\"); background-size: cover; height: 100px; background-repeat: no-repeat; background-position: 50% 50%;`}\n                                                            onClick={() => route(`/app-races/${race.id}`)}\n                                                        />\n                                                    </>}\n                                                </div>\n                                                <div class='position-relative'>\n                                                    <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                                        {status === 'signup' && <>\n                                                            <div class='spinner-grow text-primary' role='status' />\n                                                        </>}\n                                                        {status === 'race' && <>\n                                                            <div class='spinner-grow text-danger' role='status' />\n                                                        </>}\n                                                        {status === 'done' && <>\n                                                            <span><i class='fas fa-check text-success' /></span>\n                                                        </>}\n                                                    </h5>\n                                                    <h5 class='pt-2'>\n                                                        {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                                        <a href={`/app-races/${race.id}`}> \n                                                            {race.title}\n                                                        </a>\n                                                    </h5>\n                                                </div>\n                                                <div class='w-100'>\n                                                    <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\n                                                </div>\n                                                <div class='w-100'>\n                                                    {race.classes && <>\n                                                        <div class='mb-3'>\n                                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n\n                                                            <div class='w-100 position-relative'>\n                                                                <div\n                                                                    class='d-flex flex-row flex-nowrap'\n                                                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                                >\n                                                                    {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                                            {currentClass.title}\n                                                                            {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                                        </span>\n                                                                    </>)}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </>}\n                                                </div>\n                                                <div class='w-100 d-flex justify-content-between'>\n                                                    <a href={`/app-races/${race.id}/tracking`} class='btn btn-primary'>\n                                                        <Text id='races.tracking'>Tracking</Text>\n                                                        <i class='fas fa-map-marked ml-2' />\n                                                    </a>\n                                                    <a href={`/app-races/${race.id}`} class='btn btn-primary'>\n                                                        <Text id='races.read-more'>Les mer</Text>\n                                                        <i class='fas fa-angle-double-right ml-2' />\n                                                    </a>\n                                                </div>\n                                                <div class='w-100 d-flex justify-content-center'>\n                                                    <small class='text-muted'>\n                                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                                    </small>\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n                                </div>\n                            </div>\n\n                            {races && races.length > 1 && <>\n                                <div class='w-100 text-center'>\n                                    <small>\n                                        <small>\n                                            {races && races.map((img, idx) => <>\n                                                <i class={`${idx === raceIdx ? 'fas' : 'far'} fa-circle mr-1`} />\n                                            </>)}\n                                        </small>\n                                    </small>\n                                </div>\n                                <div\n                                    class='position-absolute text-white font-weight-lighter px-1 py-1 rounded-lg'\n                                    style='top: 10px; right: 10px; background-color: rgba(0, 0, 0, 0.3); line-height: 1.0em;'\n                                >\n                                    <small>{raceIdx + 1} / {races.length}</small>\n                                </div>\n                            </>}\n\n                            <div class={`col-12 mb-1 bg-${darkmode ? 'black' : 'white'} rounded-lg position-relative`}>\n                                <div class='w-100 d-flex justify-content-center'>\n                                    <button class='btn btn-link' onClick={this.toggleRaces}>\n                                        <i class='fas fa-angle-up' /> <Text id='races.hide'>Hide Races</Text>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default Races;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass YrWeather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\t\tthis.inputRef = {};\n    }\n\n    toggleyrWeather = () => {\n        const { showWeather } = this.state;\n        this.setState({\n            showWeather: !showWeather,\n        });\n    }\n\n    async loadWeather() {\n\t\tconst { userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        const { user } = userStore;\n\t\tif (user.currentLocationInfo && user.currentLocationInfo.coords) {\n\t\t\tconst { latitude: lat, longitude: lon, altitude } = user.currentLocationInfo.coords;\n\t\t\tuserStore.getWeatherUser({ lat, lon, altitude });\n            userStore.formatWeather();\n\t\t}\n    }\n\n\tcomponentDidMount() {\n        this.loadWeather();\n\t}\n\n    render() {\n        const { showWeather } = this.state;\n        const { place } = this.props;\n        const { userStore } = this.props.stores;\n        const { yrWeather, yrWeatherKeys, yrWeatherFormatted, user } = userStore;\n        const { currentLocationGeocode } = user;\n\n        if (!yrWeather || !place) {\n            return '';\n        }\n        if (showWeather) {\n            return (\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mb-4'>\n                    {currentLocationGeocode && currentLocationGeocode.formatted_address && <h5>{currentLocationGeocode.formatted_address}</h5>}\n                    <div class='table-responsive'\n                        onTouchstart={mu.captureEvents}\n                        onTouchend={mu.captureEvents}\n                        onTouchmove={mu.captureEvents}\n                        onScroll={mu.captureEvents}\n                    >\n                        <table class='table table-striped table-sm'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'>&nbsp;</th>\n                                    <th class='text-center'><Text id='weather.night'>Night</Text></th>\n                                    <th class='text-center'><Text id='weather.morning'>Morning</Text></th>\n                                    <th class='text-center'><Text id='weather.afternoon'>Afternoon</Text></th>\n                                    <th class='text-center'><Text id='weather.evening'>Evening</Text></th>\n                                    <th class='text-center'><Text id='weather.temp'>Temp</Text></th>\n                                    <th class='text-center'><Text id='weather.rainfall'>Rainfall</Text></th>\n                                    <th class='text-center'><Text id='weather.wind'>Wind</Text></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {yrWeatherKeys && yrWeatherKeys.map(date => <>\n                                    <tr>\n                                        <td class='text-center'><nobr>{date}</nobr></td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].night, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].morning, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].day, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code') && <img style='width: 40px;' src={`./assets/svg/${util.getNestedValue(yrWeatherFormatted[date].evening, 'next_6_hours.summary.symbol_code')}.svg`} />}\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-temperature-low text-muted ml-1 mr-2' />\n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_min')} />\n                                                </span> \n                                                <span class='text-muted font-weight-lighter mx-1'>-</span> \n                                                <span class={mu.getTemperatureColor(util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max'))}>\n                                                    <Temperature stores={this.props.stores} value={util.getNestedValue(yrWeatherFormatted[date], 'air_temperatures_max')} />\n                                                </span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                {util.format(util.getNestedValue(yrWeatherFormatted[date], 'precipitation_amount'), 1)} <span class='text-muted font-weight-lighter'>mm</span>\n                                            </nobr>\n                                        </td>\n                                        <td class='text-center'>\n                                            <nobr>\n                                                <i class='fas fa-wind text-muted ml-1' /> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_min'), 1)}</span> <span class='text-muted font-weight-lighter'>-</span> <span class={mu.getWindSpeedColor(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'))}>{util.format(util.getNestedValue(yrWeatherFormatted[date], 'wind_speeds_max'), 1)}</span> <span class='text-muted font-weight-lighter'>m/s</span>\n                                            </nobr>\n                                        </td>\n                                    </tr>\n                                </>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button type='button' class='btn btn-block btn-primary btn-sm' onClick={this.toggleyrWeather}>\n                        <i class='fas fa-times-circle' /> <Text id='weather.close'>Close</Text>\n                    </button>\n                </div>\n            );\n        }\n        return (\n            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                {yrWeather && yrWeather.length > 0 && <div class='container-fluid px-0'>\n                    <div class='row' onClick={this.toggleyrWeather}>\n                        {yrWeather && yrWeather.length > 0 && yrWeather.slice(0, 1).map(w => (\n                            <div class='col-12 text-right'>\n                                <nobr>\n                                    <small class='font-weight-light text-muted'>{util.isoTime(w.time)}</small>:\n                                    <img src={`./assets/svg/${util.getNestedValue(w, 'next_1_hours.summary.symbol_code')}.svg`}\n                                        class='ml-2'\n                                        style='height: 20px;'\n                                    />\n                                    {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount') > 0 && <small class='ml-2'>\n                                        {util.getNestedValue(w, 'next_1_hours.details.precipitation_amount')}<span class='text-muted font-weight-lighter'>mm</span>\n                                    </small>}\n                                    <small class='ml-2'>\n                                        <i class='fas fa-temperature-low text-muted' /> <Temperature stores={this.props.stores} value={util.getNestedValue(w, 'instant.details.air_temperature')} />\n                                    </small> \n                                    <small class='ml-2'>\n                                        <i class='fas fa-wind text-muted' /> {util.getNestedValue(w, 'instant.details.wind_speed')}<span class='text-muted font-weight-lighter'>m/s</span> <span class='text-muted font-weight-lighter'>{mu.windDirection(util.getNestedValue(w, 'instant.details.wind_from_direction'))}</span>\n                                    </small> \n                                </nobr><br />\n                            </div>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default YrWeather;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n"],"sourceRoot":""}