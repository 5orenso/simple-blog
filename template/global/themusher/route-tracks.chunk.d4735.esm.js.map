{"version":3,"sources":["webpack:///./components/garmin/index.js","webpack:///./components/data/distance.js","webpack:///./components/style.css","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/strava/index.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js","webpack:///./routes/tracks/index.js"],"names":["Garmin","observer","Component","toggleDate","e","stopPropagation","preventDefault","showDate","this","state","setState","ignoreGarminWorkout","async","id","target","parentElement","dataset","garminActivityDetailsStore","props","stores","ignoreWorkout","loadGarminActivities","importGarminWorkout","asTrack","workoutStore","currentTeam","importTrack","importWorkout","loadWorkouts","load","query","team","toggleDetail","showDetail","hideImported","componentDidMount","render","activities","forceShowDate","userStore","selectedTeam","findTeam","class","length","type","onClick","map","activity","summary","startDate","util","parseInputDate","startTimeInSeconds","style","deviceName","activityType","formatDate","locale","formatDistance","Date","value","distanceInMeters","totalElevationGainInMeters","averageSpeedInMetersPerSecond","secToHms","durationInSeconds","data-id","displayDistance","distance","format","Distance","smallUnit","user","settings","imperial","kmToMiles","module","exports","Temperature","celciusToFahrenheit","Weight","kgToPounds","Strava","ignoreStravaWorkout","stravaActivityStore","loadStravaActivities","importStravaWorkout","name","start_date","total_elevation_gain","average_speed","elapsed_time","Elevation","meterToFeet","Speed","kmtToMph","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","Tracks","constructor","super","trackStore","messageStore","getNotifications","getUnReadMessages","loadTracks","scrolledDown","searchText","appState","tracks","darkmode","stravaActivities","garminActivityDetails","href","fields","total","garmin","key","placeholder","onInput","linkState","filter","RegExp","test","track"],"mappings":"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","file":"route-tracks.chunk.d4735.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass Garmin extends Component {\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    ignoreGarminWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { garminActivityDetailsStore } = this.props.stores;\n\t\tawait garminActivityDetailsStore.ignoreWorkout(id);\n        this.loadGarminActivities();\n    }\n\n    importGarminWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { asTrack } = this.props;\n        const { garminActivityDetailsStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n        if (asTrack) {\n            await garminActivityDetailsStore.importTrack(id, currentTeam);\n        } else {\n            await garminActivityDetailsStore.importWorkout(id, currentTeam);\n        }\n        this.loadGarminActivities();\n        this.loadWorkouts();\n    }\n\n    async loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n    loadWorkouts = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait workoutStore.load({ query: { team: currentTeam } });\n\t}\n\n    toggleDetail = () => {\n        const { showDetail = false } = this.state;\n        this.setState({\n            showDetail: !showDetail,\n        });\n    }\n\n    componentDidMount() {\n\t\tthis.loadGarminActivities();\n\t}\n\n    render() {\n        const { showDate, showDetail = false } = this.state;\n        const { activities = [], showDate: forceShowDate, asTrack = false } = this.props;\n\t\tconst { userStore, workoutStore } = this.props.stores;\n        const { currentTeam } = workoutStore;\n        const { team } = userStore;\n\n        const selectedTeam = userStore.findTeam(currentTeam || team.id);\n\n        if (!showDetail) {\n            if (activities && activities.length > 0) {\n                return (<>\n                    <div class='col-12 mb-3'>\n                        <button type='button' class='btn btn-block btn-outline-info' onClick={this.toggleDetail}>\n                            <div class={`float-right ml-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url('./assets/garmin-connect.png');`} />\n                            <Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text> {activities.length}\n                        </button>\n                    </div>\n                </>);\n            }\n            return (<></>);\n        }\n\n        return (<>\n            <div class='col-12 mb-3'>\n                <div class='row'>\n                    {activities && activities.length > 0 && (\n                        <div\n                            class='col-12 border-top border-bottom pt-3 pb-3 my-2 bg-light'\n                        >\n                            <button type='button' class='float-right btn btn-sm btn-link' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='garmin.hide-list'>Hide list</Text>\n                            </button>\n                            <h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text> {activities.length}</h5>\n                            {activities && activities.map(activity => {\n                                const { summary = {} } = activity;\n                                const startDate = util.parseInputDate(summary.startTimeInSeconds);\n\n                                return (<>\n                                    {/* <td>{util.secToHms(activity.moving_time)}</td> */}\n                                    {/* <td>{util.secToHms(activity.elapsed_time)}</td> */}\n\n                                    {/* {\n                                        \"durationInSeconds\": 616,\n                                        \"startTimeInSeconds\": 1602065947,\n                                        \"startTimeOffsetInSeconds\": 7200,\n                                        \"activityType\": \"ROAD_BIKING\",\n                                        \"averageSpeedInMetersPerSecond\": 0.152,\n                                        \"averagePaceInMinutesPerKilometer\": 109.649124, \n                                        \"activeKilocalories\": 1, \n                                        \"deviceName\": \"edge1000\", \n                                        \"distanceInMeters\": 94.02, \n                                        \"maxPaceInMinutesPerKilometer\": 14.6455765, \n                                        \"maxSpeedInMetersPerSecond\": 1.138, \n                                        \"startingLatitudeInDegree\": 61.00674974732101, \n                                        \"startingLongitudeInDegree\": 9.975536987185478, \n                                        \"totalElevationLossInMeters\": 2\n                                    } */}\n\n                                    <div class='col-12 d-flex mb-4 position-relative'>\n                                        <div class={`text-center border rounded-circle imageRounded`} style={`background-image: url(\"./assets/garmin-connect.png\"); border-width: 3px !important;`}>\n                                            &nbsp;\n                                        </div>\n                                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                            <h5 class='my-0 mb-1' style='line-height: 1.0em;'>{summary.deviceName}</h5>\n                                            {summary.activityType}<br />\n                                            <small class='text-muted'>\n                                                {startDate && <small onClick={this.toggleDate}>\n                                                    {forceShowDate || showDate ? util.formatDate(startDate, { locale: 'no-NB' }) : util.formatDistance(startDate, new Date(), { locale: 'no-NB' })}\n                                                </small>}\n                                                <span class='text-muted'>\n                                                    <i class='fas fa-road ml-2' /> <Distance stores={this.props.stores} value={summary.distanceInMeters / 1000} />\n                                                    <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={summary.totalElevationGainInMeters} />\n                                                    <i class='fas fa-tachometer-alt ml-2' /> <Speed stores={this.props.stores} value={summary.averageSpeedInMetersPerSecond * 3.6} />\n                                                    <i class='fas fa-stopwatch ml-2' /> {util.secToHms(summary.durationInSeconds)}\n                                                </span>\n                                            </small>\n                                            <br />\n                                            <button class='btn btn-sm btn-block btn-primary' onClick={this.importGarminWorkout} data-id={activity.id}>\n                                                <i class='fas fa-file-import' /> {asTrack ? <Text id='garmin.import-track'>Import as track</Text> : <><Text id='garmin.import'>Import workout</Text> <i class='fas fa-arrow-right' /> {selectedTeam}</>} \n                                            </button>\n                                            <button class='btn btn-sm btn-link' onClick={this.ignoreGarminWorkout} data-id={activity.id}>\n                                                <i class='fas fa-trash-alt' /> <Text id='garmin.ignore'>Ignore workout</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n\n                            <button type='button' class='btn btn-block btn-primary mt-3' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='garmin.hide-list'>Hide list</Text>\n                            </button>\n                        </div>\n                    )}\n\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Garmin;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n@observer\nclass Strava extends Component {\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n    ignoreStravaWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { stravaActivityStore } = this.props.stores;\n\t\tawait stravaActivityStore.ignoreWorkout(id);\n        this.loadStravaActivities();\n    }\n\n    importStravaWorkout = async (e) => {\n        e.stopPropagation();\n        const id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { stravaActivityStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait stravaActivityStore.importWorkout(id, currentTeam);\n        this.loadStravaActivities();\n        this.loadWorkouts();\n    }\n\n    async loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n    loadWorkouts = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait workoutStore.load({ query: { team: currentTeam } });\n\t}\n\n    toggleDetail = () => {\n        const { showDetail = false } = this.state;\n        this.setState({\n            showDetail: !showDetail,\n        });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadStravaActivities();\n\t}\n\n    render() {\n        const { showDate, showDetail = false } = this.state;\n        const { activities, showDate: forceShowDate } = this.props;\n\t\tconst { userStore, workoutStore } = this.props.stores;\n        const { currentTeam } = workoutStore;\n        const { team } = userStore;\n\n        const selectedTeam = userStore.findTeam(currentTeam || team.id);\n\n         if (!showDetail) {\n            if (activities && activities.length > 0) {\n                return (<>\n                    <div class='col-12 mb-3'>\n                        <button type='button' class='btn btn-block btn-outline-info' onClick={this.toggleDetail}>\n                            <div class={`float-right ml-2 text-center border rounded-circle imageRounded imageRoundedIcon`} style={`background-image: url('./assets/strava-icon.png');`} />\n                            <Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text> {activities.length}\n                        </button>\n                    </div>\n                </>);\n            }\n            return (<></>);\n        }\n\n        return (<>\n            <div class='col-12 mb-3'>\n                <div class='row'>\n                    {activities && activities.length > 0 && (\n                        <div\n                            class='col-12 border-top border-bottom pt-3 pb-3 my-2 bg-light'\n                        >\n                            <button type='button' class='float-right btn btn-sm btn-link' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='strava.hide-list'>Hide list</Text>\n                            </button>\n                            <h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text> {activities.length}</h5>\n                            {activities && activities.map(activity => {\n                                const { summary = {} } = activity;\n                                const startDate = util.parseInputDate(summary.startTimeInSeconds);\n\n                                return (<>\n                                    {/* <td>{util.secToHms(activity.moving_time)}</td> */}\n                                    {/* <td>{util.secToHms(activity.elapsed_time)}</td> */}\n\n                                    <div class='col-12 d-flex mb-4 position-relative'>\n                                        <div class={`text-center border rounded-circle imageRounded`} style={`background-image: url(\"./assets/strava-icon.png\"); border-width: 3px !important;`}>\n                                            &nbsp;\n                                        </div>\n                                        <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                                            <h5 class='my-0 mb-1' style='line-height: 1.0em;'>{activity.name}</h5>\n                                            {activity.type}<br />\n                                            <small class='text-muted'>\n                                                {activity.start_date && <small onClick={this.toggleDate}>\n                                                    {forceShowDate || showDate ? util.formatDate(activity.start_date, { locale: 'no-NB' }) : util.formatDistance(activity.start_date, new Date(), { locale: 'no-NB' })}\n                                                </small>}\n                                                <span class='text-muted'>\n                                                    <i class='fas fa-road ml-2' /> <Distance stores={this.props.stores} value={activity.distance / 1000} />\n                                                    <i class='fas fa-mountain ml-2' /> <Elevation stores={this.props.stores} value={activity.total_elevation_gain} />\n                                                    <i class='fas fa-tachometer-alt ml-2' /> <Speed stores={this.props.stores} value={activity.average_speed * 3.6} />\n                                                    <i class='fas fa-stopwatch ml-2' /> {util.secToHms(activity.elapsed_time)}\n                                                </span>\n                                            </small>\n                                            <br />\n                                            <button class='btn btn-sm btn-block btn-primary' onClick={this.importStravaWorkout} data-id={activity.id}>\n                                                <i class='fas fa-file-import' /> <Text id='strava.import'>Import workout</Text> <i class='fas fa-arrow-right' /> {selectedTeam}\n                                            </button>\n                                            <button class='btn btn-sm btn-link' onClick={this.ignoreStravaWorkout} data-id={activity.id}>\n                                                <i class='fas fa-trash-alt' /> <Text id='strava.ignore'>Ignore workout</Text>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n\n                            <button type='button' class='btn btn-block btn-primary mt-3' onClick={this.toggleDetail}>\n                                <i class='fas fa-caret-up' /> <Text id='strava.hide-list'>Hide list</Text>\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default Strava;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Track from '../../components/track';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Tracks extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTracks() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { trackStore, userStore, messageStore } = this.props.stores;\n\t\tawait trackStore.load();\n\t\tawait userStore.getNotifications();\n        await messageStore.getUnReadMessages();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadTracks();\n\t\t// this.loadStravaActivities(),\n\t\tthis.loadGarminActivities();\n\t}\n\n\trender() {\n        const { scrolledDown } = this.props;\n\t\tconst { isLoading, searchText } = this.state;\n\t\tconst { trackStore, userStore, appState, workoutStore, stravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { tracks } = trackStore;\n\t\tconst { user } = userStore;\n\t\tconst { darkmode } = appState;\n\t\tconst { currentTeam } = workoutStore;\n\n\n\t\tconst { stravaActivities = [] } = stravaActivityStore;\n\t\tconst { garminActivityDetails = [] } = garminActivityDetailsStore;\n\n\t\tconst filterBySearch = e => searchText ? new RegExp(searchText, 'i').test(e.name) : true;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top pt-2' style={`margin-top: ${scrolledDown > 0 ? 0 : SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'}; transition: all 0.3s ease-in-out;`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/tracks/' class='text-primary stretched-link'><nobr><i class='fas fa-map-marked' /> <Text id='tracks.your-tracks'>Dine runder</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/tracks/public' class='text-secondary stretched-link'><nobr><i class='fas fa-map-marked' /> <Text id='tracks.public-tracks'>Offentlige runder</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n\t\t\t\t\t\t\t<h5><Text id='tracks.all-tracks' fields={{ total: tracks.length }}>Treningsrundene dine - {tracks.length} stk</Text></h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 clearfix mb-2'>\n\t\t\t\t\t\t\t<a class='btn btn-sm btn-primary float-right'\n\t\t\t\t\t\t\t\thref='/tracks/edit/new'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='tracks.add-new'>Legg til runde</Text>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{!isLoading && tracks && tracks.length === 0 && (\n\t\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-muted'>\n\t\t\t\t\t\t\t\t<div class='text-center mb-5'>\n\t\t\t\t\t\t\t\t\t<div class='display-1'>\n\t\t\t\t\t\t\t\t\t\t<i class='fas fa-map-marked' />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<Text id='tracks.no-tracks-yet'>Ingen runder er registrert ennå.</Text>\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p class='text-center'>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<Text id='tracks.no-tracks-info-1'>Du har mulighet til å laste opp GPX-filer fra rundene dine.</Text>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<Text id='tracks.no-tracks-info-2'>Det finnes mange apper som lar deg lage GPX-filer, men vi anbefaler</Text>:\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\tViewRanger for <a href='https://apps.apple.com/gb/app/viewranger-hike-ride-or-walk/id404581674'>iOS</a> and\n\t\t\t\t\t\t\t\t\t&nbsp;<a href='https://play.google.com/store/apps/details?id=com.augmentra.viewranger.android&hl=en'>Android</a>.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<Text id='tracks.howto-title'>Slik kommer du i gang</Text>:\n\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t<li><Text id='tracks.howto-1'>Trykk på knappen \"Legg til runde\" rett nedenfor.</Text></li>\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{user && user.garmin &&<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n\t\t\t\t\t\t<div class='row mt-3'>\n\t\t\t\t\t\t\t{/* {user && user.strava && <>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activities={stravaActivities} key={`strava-${currentTeam}-${stravaActivities.length}`} />\n\t\t\t\t\t\t\t</>} */}\n\t\t\t\t\t\t\t{user && user.garmin && <>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activities={garminActivityDetails} asTrack={true} key={`garmin-${currentTeam}-${garminActivityDetails.length}`} />\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n\t\t\t\t\t\t<div class='d-flex justify-content-center py-3'>\n\t\t\t\t\t\t\t<Localizer>\n\t\t\t\t\t\t\t\t<input class='form-control form-control mr-2' type='search' placeholder={<Text id='header.search-placeholder'>Søk etter det meste...</Text>}\n\t\t\t\t\t\t\t\t\tvalue={searchText}\n\t\t\t\t\t\t\t\t\tonInput={linkState(this, 'searchText')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Localizer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12'>\n\n\t\t\t\t\t\t{tracks && tracks.filter(filterBySearch).map(track => (\n\t\t\t\t\t\t\t<Track stores={this.props.stores} track={track} />\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tracks;\n"],"sourceRoot":""}