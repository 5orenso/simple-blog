{"version":3,"sources":["webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["kmToMiles","value","util","format","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","loadedTime","isLoading","submenu","workoutFilter","sessionid","Date","getTime","dataFields","Workouts","observer","props","loadWorkouts","currentMonth","currentYear","setState","userStore","stores","messageStore","currentTeam","workoutStore","getMonth","getFullYear","month","year","Promise","all","load","query","team","addData","loadWorkoutSummary","loadWorkoutPlans","getNotifications","getUnReadMessages","loadStravaActivities","loadGarminActivities","loadTeams","workoutPlanCurrent","workoutPlanStore","imperial","user","settings","seasonYear","workoutPlans","id","prepareWeekGraphs","updateKeyValue","resetGraphPlanWeekDistanceCurrent","chooseSubmenu","e","target","parentElement","dataset","menu","chooseDay","day","state","dd","mm","yyyy","w","date","d","getDate","m","y","parseInt","renderContent","obj","workout","showDate","wrapperClasses","wrapperClassesRow","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","this","teamStore","skipMusherWorkoutSummary","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummary","getWorkoutSummaryDay","daysBack","componentWillMount","componentWillUnmount","clearInterval","componentDidMount","appState","checkCordova","componentWillReceiveProps","nextProps","render","percentComplete","scrolledDown","workoutPlan","workoutSummaryWeekDay","language","MONTHS","getMonths","seasonStart","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","planMonth","sumWorkoutPlanMonth","summaryMonth","findWorkoutSummaryMonth","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","class","style","href","role","secToHms","callback","key","data-menu","onClick","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","smallUnit","url","section","basehref","showNavigation","showHeader","strava","activities","garmin","fields","name","data","wrapperClassNames","contentClassNames","dataValues","type","Component","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","monthRange","prevSeasonMonths","xTicksAll","weekRange","map","wo","partSize","xTicks","i","l","push","scope"],"mappings":"qcAiCA,SAASA,EAAUC,GACf,OAAOC,IAAKC,OAAO,QAAWF,EAAO,G,oSA5BnCG,EAAaC,IAAGC,WAAU,GAC1BC,EAAgBF,IAAGG,eACnBC,EAAsBJ,IAAGK,mBA6BzBC,EAAe,CACpBC,WAAY,EACZC,WAAW,EACXC,QAAS,SACTC,cAAe,kBAAM,GACrBC,WAAW,IAAIC,MAAOC,WAGjBC,EAAa,CAAC,KAAM,OAAQ,OAAQ,OAAQ,SAG5CC,EADLC,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMPC,aAAe,SAAOD,GAAP,gDASRE,EACMC,EAVE,MAcd,YAdc,IAAOH,MAAQ,EAAKA,OAClC,EAAKI,SAAS,CAAEb,WAAW,IACLc,GAFR,EAEoCL,EAAMM,QAAlCD,UAAWE,EAFnB,EAEmBA,aACzBC,GADAC,EAFM,EAENA,cACAD,YAMFN,GAAe,IAAIP,MAAOe,WAAa,EACjCP,GAAc,IAAIR,MAAOgB,cAVvB,KAWuCX,GAA7CY,MAXM,IAWgBC,KAG9B,gBAAMC,QAAQC,IAAI,CACjBN,EAAaO,KAAK,CAAEC,MAAO,CAAEC,KAAMV,EAAaK,UAfnC,MAWuBV,EAXvB,EAeyCS,WAfzC,MAWEV,EAXF,GAekDiB,QAAS,CAAC,cAAe,iBACxF,EAAKC,mBAAmBpB,GACxB,EAAKqB,iBAAiBrB,GACtBK,EAAUiB,mBACVf,EAAagB,oBACb,EAAKC,uBACL,EAAKC,uBACL,EAAKC,UAAU1B,MARhB,MASE,sBACF,EAAKI,SAAS,CACbd,YAAY,IAAIK,MAAOC,UACvBL,WAAW,IAHV,mCA9BmB,EA0DtB8B,iBAAmB,SAAOrB,GAAP,sDAuClB,EAAKI,SAAS,CAAEb,WAAW,IAvCT,QAGZW,EACMC,EAJM,kBA6BXwB,EATP,YApBkB,IAAO3B,MAAQ,EAAKA,OACtC,EAAKI,SAAS,CAAEb,WAAW,IAErBW,GAAe,IAAIP,MAAOe,WAAa,EACjCP,GAAc,IAAIR,MAAOgB,cAE7BE,OANU,UAMmCb,GAA7Ca,MAAOV,EANG,MAMUS,MAGpBgB,GATU,EASoC5B,EAAMM,QAApDsB,iBAKAC,QAdU,SASsBxB,UAGhCyB,KACMC,UAAW,GAbP,GAcVF,UAJArB,EAVU,EASQC,aAClBD,aAWP,gBAAMoB,EAAiBZ,KAAK,CAC3BC,MAAO,CACNC,KAAMV,EACNwB,iBAxBe,MAMkB9B,EANlB,GAOW,EAAIW,EAAO,EAAIA,GAmB1CM,QAAS,CAAC,WALX,KAME,eAGF,OADMQ,EADmBC,EAAjBK,aACgC,IAAM,IACvBC,GACtB,gBAAMN,EAAiBZ,KAAKW,EAAmBO,KAA/C,KAAkD,sBAClDN,EAAiBO,kBAAkB,CAAEtB,OAAMgB,aADO,mDAGlDD,EAAiBQ,eAAe,cAAe,IAC/CR,EAAiBQ,eAAe,eAAgB,IAChDR,EAAiBS,oCAHX,cANL,uEA3Be,iBA1DG,EAkHtBC,cAAgB,SAACC,GAEhB,EAAKnC,SAAS,CAAEZ,QADA+C,EAAEC,OAAOC,cAAcC,QAAQC,MAAQJ,EAAEC,OAAOE,QAAQC,QAnHnD,EAuHtBC,UAAY,YAA0B,IAAvBC,EAAuB,EAAvBA,IAAKjC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAAW,EACZ,EAAKiC,MAC9B,GAFqC,EAC7BC,KACGF,GAF0B,EACzBG,KACapC,GAFY,EACrBqC,OAC2BpC,EAC1C,OAAO,EAAKT,SAAS,CACpBX,cAAe,kBAAM,GACrBsD,GAAI,KACJC,GAAI,KACJC,KAAM,OAGR,EAAK7C,SAAS,CACb2C,GAAIF,EACJG,GAAIpC,EACJqC,KAAMpC,EACNpB,cAAe,SAACyD,GACf,IAAMC,EAAO,IAAIxD,KAAKuD,EAAEC,MAClBC,EAAID,EAAKE,UACTC,EAAIH,EAAKzC,WAAa,EACtB6C,EAAIJ,EAAKxC,cACf,OAAOyC,IAAMI,SAASX,EAAK,KAAOS,IAAME,SAAS5C,EAAO,KAAO2C,IAAMC,SAAS3C,EAAM,QA1IjE,EA+ItB4C,cAAgB,YAAkB,IAAfC,EAAe,EAAfA,IAKZ,OAAQ,mBACb,YAAC,IAAD,CACCpD,OAAQ,EAAKN,MAAMM,OACnBqD,QAASD,EACTE,UAAU,EACVC,eAAgB,QAChBC,kBAAmB,OA1JA,EAgKnBC,kBAAoB,WAChB,EAAK3D,SAAS,CACV4D,mBAAoBjF,IAAGkF,+BAFL,IAIdxD,EAAiB,EAAKT,MAAMM,OAA5BG,aACR,EAAKyD,gBAAkBC,aAAY,kBAAM1D,EAAa2D,eAAerF,IAAGsF,oCAAmC,MAnK3G,EAAKvB,M,+VAAL,IACOzD,GAHQ,E,0HAqChBqC,UAAN,SAAgB1B,GAAhB,2CAIOE,EACMC,EALb,MAQC,YARD,IAAgBH,MAAQsE,KAAKtE,OACpBuE,GADT,EACqCvE,EAAMM,QAAlCiE,UACA/D,EAFT,EACoBC,aACXD,YAEFN,GAAe,IAAIP,MAAOe,WAAa,EACjCP,GAAc,IAAIR,MAAOgB,cALtC,KAOsDX,GAA7CY,MAPT,IAO+BC,KAC9B,gBAAM0D,EAAUvD,KAAK,CAAEC,MAAO,CAAEC,KAAMV,EAAagE,0BAA0B,EAAM3D,UARpF,MAOsCV,EAPtC,EAQ0FS,WAR1F,MAOiBV,EAPjB,GAQmGiB,QAAS,CAAC,qBAA5G,MAAgI,sDARjI,a,EAWMK,qBAAN,iDACiC8C,KAAKtE,MAAMM,OAAnCmE,oBACYzD,KAAK,CAAEC,MAAO,CAAEyD,aAAc,KAFnD,kB,EAKMjD,qBAAN,iDACwC6C,KAAKtE,MAAMM,OAA1CqE,2BACmB3D,KAAK,CAAEC,MAAO,CAAEyD,aAAc,KAF1D,kB,EA+CMtD,mBAAN,SAAyBpB,GAAzB,2CAGOE,EACMC,EAJb,QAQO,YARP,IAAyBH,MAAQsE,KAAKtE,OAC7BK,GADT,EACqCL,EAAMM,QAAlCD,UAAWI,EADpB,EACoBA,aAEbP,GAAe,IAAIP,MAAOe,WAAa,EACjCP,GAAc,IAAIR,MAAOgB,cAJtC,KAKsDX,GAA7CY,MALT,IAK+BC,KAEtBL,EAAgBC,EAAhBD,YACF,gBAAMH,EAAUuE,kBAAkB,CAAE1D,KAAMV,EAAaK,UAR9D,MAKsCV,EALtC,EAQoES,WARpE,MAKiBV,EALjB,KAQO,MAAqE,eAG3E,uBAAMG,EAAUwE,qBAAqB,CAAEC,SAAU,IAAK5D,KAAMV,KAA5D,MAA0E,qDAHC,4BAR5E,a,EAoEAuE,mBAAA,WACOT,KAAKP,qB,EAGZiB,qBAAA,WAAuB,MAC0DV,KAAKtE,MAAMM,OADrE,EACRG,aACK2D,eAAerF,IAAGsF,kCAC/BY,cAAcX,KAAKJ,kB,EAI1BgB,kBAAA,WAAoB,IACXC,EAAab,KAAKtE,MAAMM,OAAxB6E,SACRb,KAAKrE,eAGLkF,EAASC,gB,EAGVC,0BAAA,SAA0BC,GAEfA,EAAU1E,QAAU0D,KAAKtE,MAAMY,OAC5B0E,EAAUzE,OAASyD,KAAKtE,MAAMa,MAC9ByE,EAAUpE,OAASoD,KAAKtE,MAAMkB,MACjCoD,KAAKrE,aAAaqF,I,EAI7BC,OAAA,WAAS,IA4BJC,EA3BUC,EAAiBnB,KAAKtE,MAAtByF,aADN,EAEkEnB,KAAKxB,MAAvEvD,EAFA,EAEAA,UAAWC,EAFX,EAEWA,QAASwE,EAFpB,EAEoBA,mBAAoBtE,EAFxC,EAEwCA,UAAWJ,EAFnD,EAEmDA,WAFnD,EAI6CgF,KAAKtE,MAAMM,OADxDD,EAHA,EAGAA,UAAW8E,EAHX,EAGWA,SAAU1E,EAHrB,EAGqBA,aAAcmB,EAHnC,EAGmCA,iBAC1C6C,EAJO,EAIPA,oBAAqBE,EAJd,EAIcA,2BACde,EAA8B9D,EAA9B8D,YAAazD,EAAiBL,EAAjBK,aAEbH,EAAqCzB,EAArCyB,KAPA,EAOqCzB,EAA/BsF,6BAPN,MAO8B,GAP9B,IAQyC7D,EAAnC8D,SARN,EAQyC9D,EAAlBC,gBARvB,MAQkC,GARlC,EASI8D,EAAS9G,IAAG+G,eAThB,MAQiB,KARjB,GAWF5F,GAAe,IAAIP,MAAOe,WAAa,EACjCP,GAAc,IAAIR,MAAOgB,cAZ7B,EAc6C2D,KAAKtE,MAdlD,IAcAY,aAdA,MAcQV,EAdR,MAcsBW,aAdtB,MAc6BV,EAd7B,EAeF4F,GAAcvC,SAAS5C,EAAQ,EAAIC,GAAO,EAAIA,GAAM,IAElDL,GAAgBC,EAAhBD,YACFwF,GAAoB3F,EAAU4F,SAASzF,IAAa,GAElD0F,GAAaf,EAAbe,SACAC,GAA6F1F,EAA7F0F,SAAUC,GAAmF3F,EAAnF2F,4BAA6BC,GAAsD5F,EAAtD4F,UAAWC,GAA2C7F,EAA3C6F,cAAeC,GAA4B9F,EAA5B8F,aAAcC,GAAc/F,EAAd+F,UAGjFC,GAAmBN,GAASO,OADRpC,KAAKxB,MAAvBrD,eAGFkH,GAAY/E,EAAiBgF,oBAAoBpD,SAAS3C,GAAM,IAAK2C,SAAS5C,EAAO,MAAQ,EAC7FiG,GAAexG,EAAUyG,wBAAwBtD,SAAS3C,GAAM,IAAK2C,SAAS5C,EAAO,MAAQ,EAE/F+F,KACHnB,EAAkBuB,KAAKC,MAAMH,GAAeF,GAAY,MAEzD,IAAMM,GAAkB5G,EAAUyG,wBAAwBtD,SAAS3C,GAAM,IAAK2C,SAAS5C,EAAO,IAAK,SAAS,IAAS,EAC/GsG,GAAuB7G,EAAUyG,wBAAwBtD,SAAS3C,GAAM,IAAK2C,SAAS5C,EAAO,IAAK,cAAc,IAAS,EACzHuG,GAAqB9G,EAAUyG,wBAAwBtD,SAAS3C,GAAM,IAAK2C,SAAS5C,EAAO,IAAK,YAAY,IAAS,EACrHwG,GAAqB/G,EAAUyG,wBAAwBtD,SAAS3C,GAAM,IAAK2C,SAAS5C,EAAO,IAAK,YAAY,IAAS,EAnCnH,IAoCoBP,EAAUyG,wBAAwBtD,SAAS3C,GAAM,IAAK2C,SAAS5C,EAAO,IAAK,aAAa,GAElF6D,EAA1B4C,0BAtCA,OAsCmB,GAtCnB,MAuC+B1C,EAA/B2C,8BAvCA,OAuCwB,GAvCxB,GAyCR,OACC,mBAAKC,MAAM,kBAAkBC,MAAK,kBAAoBvI,EAApB,iBAAkDH,EAAlD,KACjC,mBAAKyI,MAAM,gBAAgBC,MAAK,gBAAiB/B,EAAe,EAAI,EAAItG,GAAxC,wBAAkF+G,GAAW,UAAY,WAAzG,uCAC/B,mBAAKqB,MAAM,2DACV,iBAAGE,KAAK,aAAaF,MAAM,+BAA8B,wBAAM,iBAAGA,MAAM,sBAAf,IAAsC,YAAC,IAAD,CAAMrF,GAAG,2BAAT,eAEhG,mBAAKqF,MAAM,8BACV,iBAAGE,KAAK,iBAAiBF,MAAM,iCAAgC,wBAAM,iBAAGA,MAAM,gBAAf,IAAgC,YAAC,IAAD,CAAMrF,GAAG,sBAAT,YAEhG,mBAAKqF,MAAM,8BACV,iBAAGE,KAAK,iBAAiBF,MAAM,iCAAgC,wBAAM,iBAAGA,MAAM,wBAAf,IAAwC,YAAC,IAAD,CAAMrF,GAAG,sBAAT,YASxGmE,IAAaD,IAA+B,mBAC5C,mBAAKmB,MAAM,OACV,mBAAKA,MAAM,yFACV,kBAAIA,MAAM,iCAAV,WAEC,mBAAKA,MAAM,oBAAoBG,KAAK,YAErC,mBAAKH,MAAM,YACV,mBAAKA,MAAM,qCAAqCC,MAAM,qBAAqB5I,IAAK+I,SAASnB,KACzF,mBAAKe,MAAM,qCAAqCC,MAAM,qBACrD,YAAC,IAAD,CAAOlH,OAAQgE,KAAKtE,MAAMM,OAAQ3B,MAAsB,IAAf4H,MAE1C,mBAAKgB,MAAM,qCAAqCC,MAAM,qBACrD,YAAC,IAAD,CAAUlH,OAAQgE,KAAKtE,MAAMM,OAAQ3B,MAAO2H,GAAgB,QAG9D,iBAAGiB,MAAM,2BAA2BE,KAAK,sBAAqB,YAAC,IAAD,CAAMvF,GAAG,2BAAT,sBAOjE,mBAAKqF,MAAM,OACV,mBAAKA,MAAM,2EACV,YAAC,IAAD,CAAOjH,OAAQgE,KAAKtE,MAAMM,OAAQsH,SAAUtD,KAAKrE,aAAc4H,IAAG,SAAWrH,MAE9E,mBAAK+G,MAAM,uEACV,iBAAGA,MAAM,qCACRE,KAAK,sBAEL,iBAAGF,MAAM,gBAHV,IAG2B,YAAC,IAAD,CAAMrF,GAAG,6BAAT,0BAI5B,mBAAKqF,MAAM,kEACV,mBAAKA,MAAM,OACV,mBAAKA,MAAM,yBACc,mBACIA,MAAM,wCACNC,MAAM,kDAEjC,mBAAKD,MAAM,iBACV,sBACCA,MAAK,iDAA8D,WAAZ/H,EAAuB,cAAgB,uBAAzF,eACLgI,MAAM,6CACNM,YAAU,SACVC,QAASzD,KAAKhC,eACd,iBAAGiF,MAAM,0BALV,IAKqC,YAAC,IAAD,CAAMrF,GAAG,mBAAT,aAEtC,mBAAKqF,MAAM,iBACV,sBACCA,MAAK,+BAA4C,iBAAZ/H,EAA6B,cAAgB,uBAA7E,eACLgI,MAAM,6CACNM,YAAU,eACVC,QAASzD,KAAKhC,eACd,iBAAGiF,MAAM,0BALV,IAKqC,YAAC,IAAD,CAAMrF,GAAG,yBAAT,mBAEtC,mBAAKqF,MAAM,iBACV,sBACCA,MAAK,+BAA4C,aAAZ/H,EAAyB,cAAgB,uBAAzE,eACLgI,MAAM,6CACNM,YAAU,WACVC,QAASzD,KAAKhC,eACd,iBAAGiF,MAAM,sBALV,IAKiC,YAAC,IAAD,CAAMrF,GAAG,qBAAT,cAElC,mBAAKqF,MAAM,iBACV,sBACCA,MAAK,+BAA4C,UAAZ/H,EAAsB,cAAgB,uBAAtE,eACLgI,MAAM,6CACNM,YAAU,QACVC,QAASzD,KAAKhC,eACd,iBAAGiF,MAAM,iBALV,IAK4B,YAAC,IAAD,CAAMrF,GAAG,kBAAT,YAE7B,mBAAKqF,MAAM,iBACV,sBACCA,MAAK,+BAA4C,gBAAZ/H,EAA4B,cAAgB,uBAA5E,eACLgI,MAAM,6CACNM,YAAU,cACVC,QAASzD,KAAKhC,eACd,iBAAGiF,MAAM,wBALV,IAKmC,YAAC,IAAD,CAAMrF,GAAG,wBAAT,kBAEpC,mBAAKqF,MAAM,iBACV,sBACCA,MAAK,kDAA+D,aAAZ/H,EAAyB,cAAgB,uBAA5F,eACLgI,MAAM,6CACNM,YAAU,WACVC,QAASzD,KAAKhC,eACd,iBAAGiF,MAAM,wBALV,IAKmC,YAAC,IAAD,CAAMrF,GAAG,qBAAT,kBAO3B,WAAZ1C,GAAwB,mBACxB,YAAC,IAAD,CAAiBc,OAAQgE,KAAKtE,MAAMM,OAAQf,UAAWA,EACtDsB,KAAMA,GACND,MAAOA,EACPoH,kBAAmB1D,KAAK1B,UACxBiF,IAAG,mBAAqBhH,GAArB,IAA6BD,EAA7B,IAAsCJ,GAAtC,IAAqDlB,EAArD,IAAmEqG,EAAsBsC,OAC5FC,UAAuB,aAAZ1I,EAAyB,EAAI,EACxC2I,YAAyB,aAAZ3I,EAAyB,EAAI,EAC1C4I,gBAA6B,aAAZ5I,EAAyB,EAAI,IAE/C,mBAAK+H,MAAM,uEACV,mBAAKA,MAAM,OACV,mBAAKA,MAAM,qBACTZ,IAAa,GACb,YAAC,IAAD,CACCkB,IAAG,SAAWrC,EACd6C,OAAQ,GACRC,QAAS9C,EACT+C,OAAO,IACPC,MAAOzG,EAASF,SAAcnD,EAAUiI,IAAjC,MAAsDA,GAAtD,MACP8B,UAAW1G,EAASF,SAAcnD,EAAUmI,IAAjC,MAAyDA,GAAzD,QAEX,uBACF,qBAAOU,MAAM,cAAa,YAAC,IAAD,CAAMrF,GAAG,sBAAT,kBAE3B,mBAAKqF,MAAM,qBACV,sBAAI,oBAAMA,MAAM,kCAAiC,iBAAGA,MAAM,kBAC1D,sBACC,YAAC,IAAD,CAAUjH,OAAQgE,KAAKtE,MAAMM,OAAQ3B,MAAOuI,GAAsBwB,WAAW,KAE9E,qBAAOnB,MAAM,cACZ,YAAC,IAAD,CAAMrF,GAAG,6BAAT,cAGF,mBAAKqF,MAAM,qBACV,sBAAI,oBAAMA,MAAM,kCAAiC,iBAAGA,MAAM,iCAC1D,sBACC,YAAC,IAAD,CAAOjH,OAAQgE,KAAKtE,MAAMM,OAAQ3B,MAAOyI,GAAoBsB,WAAW,KAEzE,qBAAOnB,MAAM,cACZ,YAAC,IAAD,CAAMrF,GAAG,8BAAT,mBAGF,mBAAKqF,MAAM,sBACV,oBAAMA,MAAM,kCAAiC,iBAAGA,MAAM,mBAAtD,KADD,IACoFN,GACnF,oBAAMM,MAAM,kCAAiC,iBAAGA,MAAM,uBAFvD,IAEsF3I,IAAK+I,SAASR,OAItG,mBAAKI,MAAM,UACV,YAAC,IAAD,CAAIjH,OAAQgE,KAAKtE,MAAMM,OAAQqI,IAAKrE,KAAKtE,MAAM2I,IAAKC,QAASpJ,MAIlD,iBAAZA,GAA8B,mBAC9B,YAAC,IAAD,CAAiBc,OAAQgE,KAAKtE,MAAMM,OAAQf,UAAWA,EACtDsB,KAAMA,GACND,MAAOA,EACPoH,kBAAmB1D,KAAK1B,UACxBiF,IAAG,mBAAqBhH,GAArB,IAA6BD,EAA7B,IAAsCJ,GAAtC,IAAqDlB,EAArD,IAAmEqG,EAAsBsC,OAC5FC,UAAuB,aAAZ1I,EAAyB,EAAI,EACxC2I,YAAyB,aAAZ3I,EAAyB,EAAI,EAC1C4I,gBAA6B,aAAZ5I,EAAyB,EAAI,IAE/C,mBAAK+H,MAAM,6DACV,YAAC,IAAD,CACCjH,OAAQgE,KAAKtE,MAAMM,OACnBE,YAAaA,GACbK,KAAMA,GACND,MAAOA,IAER,YAAC,IAAD,CACCN,OAAQgE,KAAKtE,MAAMM,OACnBE,YAAaA,GACbK,KAAMA,GACND,MAAOA,KAGT,mBAAK2G,MAAM,UACV,YAAC,IAAD,CAAIjH,OAAQgE,KAAKtE,MAAMM,OAAQqI,IAAKrE,KAAKtE,MAAM2I,IAAKC,QAASpJ,MAIlD,aAAZA,GAA0B,mBAC1B,YAAC,IAAD,CAAiBc,OAAQgE,KAAKtE,MAAMM,OAAQf,UAAWA,EACtDsB,KAAMA,GACND,MAAOA,EACPoH,kBAAmB1D,KAAK1B,UACxBiF,IAAG,mBAAqBhH,GAArB,IAA6BD,EAA7B,IAAsCJ,GAAtC,IAAqDlB,EAArD,IAAmEqG,EAAsBsC,OAC5FC,UAAuB,aAAZ1I,EAAyB,EAAI,EACxC2I,YAAyB,aAAZ3I,EAAyB,EAAI,EAC1C4I,gBAA6B,aAAZ5I,EAAyB,EAAI,IAE/C,mBAAK+H,MAAM,6DACV,YAAC,IAAD,CACCjH,OAAQgE,KAAKtE,MAAMM,OACnBf,UAAWA,EACXsB,KAAMA,GACND,MAAOA,EACPiH,IAAG,SAAWnC,EAAYxD,GAAvB,IAA6BD,EAAagG,OAA1C,IAAoDlG,EAASF,YAGlE,mBAAK0F,MAAM,UACV,YAAC,IAAD,CAAIjH,OAAQgE,KAAKtE,MAAMM,OAAQqI,IAAKrE,KAAKtE,MAAM2I,IAAKC,QAASpJ,MAIlD,UAAZA,GAAuB,mBACvB,YAAC,IAAD,CAAiBc,OAAQgE,KAAKtE,MAAMM,OAAQf,UAAWA,EACtDsB,KAAMA,GACND,MAAOA,EACPoH,kBAAmB1D,KAAK1B,UACxBiF,IAAG,mBAAqBhH,GAArB,IAA6BD,EAA7B,IAAsCJ,GAAtC,IAAqDlB,EAArD,IAAmEqG,EAAsBsC,OAC5FC,UAAuB,aAAZ1I,EAAyB,EAAI,EACxC2I,YAAyB,aAAZ3I,EAAyB,EAAI,EAC1C4I,gBAA6B,aAAZ5I,EAAyB,EAAI,IAE/C,mBAAK+H,MAAM,6DACV,YAAC,IAAD,CACCjH,OAAQgE,KAAKtE,MAAMM,OACnBf,UAAWA,EACXsB,KAAMA,GACND,MAAOA,EACPiH,IAAG,SAAWnC,EAAYxD,GAAvB,IAA6BD,EAAagG,UAG/C,mBAAKV,MAAM,UACV,YAAC,IAAD,CAAIjH,OAAQgE,KAAKtE,MAAMM,OAAQqI,IAAKrE,KAAKtE,MAAM2I,IAAKC,QAASpJ,MAIlD,aAAZA,GAA0B,mBAC1B,YAAC,IAAD,CAAiBc,OAAQgE,KAAKtE,MAAMM,OAAQf,UAAWA,EACtDsB,KAAMA,GACND,MAAOA,EACPoH,kBAAmB1D,KAAK1B,UACxBiF,IAAG,mBAAqBhH,GAArB,IAA6BD,EAA7B,IAAsCJ,GAAtC,IAAqDlB,EAArD,IAAmEqG,EAAsBsC,OAC5FC,UAAuB,aAAZ1I,EAAyB,EAAI,EACxC2I,YAAyB,aAAZ3I,EAAyB,EAAI,EAC1C4I,gBAA6B,aAAZ5I,EAAyB,EAAI,IAE/C,mBAAK+H,MAAM,UACV,YAAC,IAAD,CAAIjH,OAAQgE,KAAKtE,MAAMM,OAAQqI,IAAKrE,KAAKtE,MAAM2I,IAAKC,QAASpJ,MAIlD,gBAAZA,GAA6B,mBAC7B,YAAC,IAAD,CAAcc,OAAQgE,KAAKtE,MAAMM,OAChCuI,SAAS,aACTjI,MAAOA,EACPC,KAAMA,GACNgH,KAAQnC,EAAYxD,IAAM6D,IAAvB,IAAsCvF,GAAtC,IAAqDI,EAArD,IAA8DC,GAA9D,IAAsEvB,EACzEwJ,gBAAgB,EAChBC,YAAY,EACZvI,YAAaA,KAEd,mBAAK+G,MAAM,UACV,YAAC,IAAD,CAAIjH,OAAQgE,KAAKtE,MAAMM,OAAQqI,IAAKrE,KAAKtE,MAAM2I,IAAKC,QAASpJ,OAMhE,mBAAK+H,MAAM,YACV,mBAAKA,MAAM,kEACV,mBAAKA,MAAM,OACTzF,GAAQA,EAAKkH,QAAU,mBACvB,YAAC,IAAD,CAAQ1I,OAAQgE,KAAKtE,MAAMM,OAAQ2I,WAAY5B,GAAkBQ,IAAG,UAAYrH,GAAZ,IAA2B6G,GAAiBY,UAEhHnG,GAAQA,EAAKoH,QAAU,mBACvB,YAAC,IAAD,CAAQ5I,OAAQgE,KAAKtE,MAAMM,OAAQ2I,WAAY3B,GAAuBO,IAAG,UAAYrH,GAAZ,IAA2B8G,GAAsBW,aAM9H,mBAAKV,MAAM,OACTd,IAAoBA,GAAiBwB,OAAS,GAAK,mBAAKV,MAAM,eAC9D,mBAAKA,MAAM,uEACV,sBACC,YAAC,IAAD,CAAMrF,GAAG,8BAA8BiH,OAAQ,CAAEX,MAAO/B,GAAiBwB,OAAQrH,MAAOiF,EAAOjF,EAAQ,GAAIC,UAA3G,iBACgBgF,EAAOjF,EAAQ,GAD/B,IACoCC,GADpC,MAC6C4F,GAAiBwB,OAD9D,QAGCjC,IAAqBA,GAAkBoD,MAAQ,uBAC/C,qBAAO7B,MAAM,uBAAb,IAAoC,YAAC,IAAD,CAAMrF,GAAG,6BAAT,eAApC,KAA8F8D,GAAkBoD,KAAhH,QAKH,YAAC,IAAD,CACCC,KAAM5C,GACN6C,kBAAmB,WACnBC,kBAAiB,uGAAwGrD,GAAW,QAAU,SAA7H,aACjBzC,cAAea,KAAKb,cACpB5D,WAAYA,EACZ2J,WAAY,CAAEC,KAAM,MACpBzF,mBAAoBA,EACpBtE,UAAWA,MAOXyG,IAAgC,IAApBA,GAAS8B,QAAgB,mBAAKV,MAAM,qCACjD,kBAAIA,MAAM,cAAa,iBAAGA,MAAM,oBAChC,kBAAIA,MAAM,kCACT,YAAC,IAAD,CAAMrF,GAAG,uBAAuBiH,OAAQ,CAAEvI,MAAOiF,EAAOjF,EAAQ,GAAIC,UAApE,0C,GA/iBgB6I,e,EAyjBR5J,a,4MCrlBT6J,EAPLC,aAAS,iBAAY,CAClBC,KAAM,YAAC,IAAD,CAAM3H,GAAG,uBACf4H,SAAU,YAAC,IAAD,CAAM5H,GAAG,2BACnB6H,OAAQ,YAAC,IAAD,CAAM7H,GAAG,yBACjB8H,KAAM,YAAC,IAAD,CAAM9H,GAAG,0B,GAElBnC,Y,kLAEGwF,OAAA,WAuBI,IAvBK,WACGlF,EAAciE,KAAKtE,MAAMM,OAAzBD,UAEFH,GAAe,IAAIP,MAAOe,WAAa,EACvCP,GAAc,IAAIR,MAAOgB,cAJ1B,EAM8E2D,KAAKtE,MANnF,IAMca,YANd,MAMqBV,EANrB,MAMkCS,MANlC,IAMwDmI,kBANxD,SAOLhD,EAAcvC,eAPT,MAM0CtD,EAN1C,GAO0B,EAAIW,EAAO,EAAIA,EAAM,IAP/C,EASYR,EAATyB,KACA8D,SACRC,EAAS9G,IAAG+G,eAXP,MAUc,KAVd,GAeCmE,EAAerL,IAAKsL,WAAcnE,EAAnB,SAA2CA,EAAc,EAAzD,UACfoE,EAAmBvL,IAAKsL,WAAcnE,EAAc,EAAjC,SAA+CA,EAA/C,UAGnBqE,EAFcxL,IAAKyL,UAAatE,EAAlB,SAA0CA,EAAc,EAAxD,UAEUuE,KAAI,SAAAC,GAAE,OAAIA,EAAGV,QAErCW,EAAWzD,KAAKC,MAAMoD,EAAUnC,QADxBmC,EAAUnC,OAAS,IAE3BwC,EAAS,GACNC,EAAI,EAAGC,EAAIP,EAAUnC,OAAQyC,EAAIC,EAAGD,GAAKF,EAC9CC,EAAOG,KAAKR,EAAUM,IAG1B,OACI,mBACK3B,GAAc,sBAAI,YAAC,IAAD,CAAM7G,GAAG,uBAAT,sBAAJ,IAA8D6D,EAA9D,MAA8EA,EAAc,GAC3G,mBAAKwB,MAAM,mBAGP,mBAAKA,MAAM,uBACP,qBAAOA,MAAM,kEACT,yBACI,sBACI,kBAAIA,MAAM,eAAc,YAAC,IAAD,CAAMrF,GAAG,wBAAT,WACvB+H,EAAaK,KAAI,SAAAhH,GAAC,OACf,kBAAIiE,MAAM,eAAc,iBAAGE,KAAI,mBAAqBnE,EAAE1C,MAAvB,IAAgC0C,EAAEzC,MAASgF,EAAOvC,EAAE1C,MAAQ,UAIvG,yBACI,sBACI,kBAAIiK,MAAM,MAAMrD,MAAM,oBAAmB,wBAAOzB,EAAc,EAArB,MAA2BA,IACnEoE,EAAiBG,KAAI,SAAAhH,GAElB,OACI,mBACI,kBAAIiE,MAAM,mBAEN,wBACI,YAAC,IAAD,CAAUjH,OAAQ,EAAKN,MAAMM,OAAQ3B,MAAO0B,EAAUyG,wBAAwBxD,EAAEzC,KAAMyC,EAAE1C,OAAQ8H,WAAW,KACxG,uBACP,wBACI,YAAC,IAAD,CAAWpI,OAAQ,EAAKN,MAAMM,OAAQ3B,MAAO0B,EAAUyG,wBAAwBxD,EAAEzC,KAAMyC,EAAE1C,MAAO,aAAc8H,WAAW,KACtH,6BAM3B,sBACI,kBAAImC,MAAM,MAAMrD,MAAM,oBAAmB,wBAAOzB,EAAP,MAAuBA,EAAc,IAC7EkE,EAAaK,KAAI,SAAAhH,GAEd,OACI,mBACI,kBAAIiE,MAAM,mBACN,wBACI,YAAC,IAAD,CAAUjH,OAAQ,EAAKN,MAAMM,OAAQ3B,MAAO0B,EAAUyG,wBAAwBxD,EAAEzC,KAAMyC,EAAE1C,OAAQ8H,WAAW,KACxG,uBACP,wBACI,YAAC,IAAD,CAAWpI,OAAQ,EAAKN,MAAMM,OAAQ3B,MAAO0B,EAAUyG,wBAAwBxD,EAAEzC,KAAMyC,EAAE1C,MAAO,aAAc8H,WAAW,KACtH,mC,GA5EhCgB,e,MA4FZC,Q","file":"route-workouts.chunk.9978d.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\n\nimport FastList from '../../components/team/fastList';\n\nfunction kmToMiles(value) {\n    return util.format(0.621371 * value, 1);\n}\n\nconst initialState = {\n\tloadedTime: 0,\n\tisLoading: false,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n\tsessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore, messageStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n        // await userStore.getInfo();\n\t\tawait Promise.all([\n\t\t\tworkoutStore.load({ query: { team: currentTeam, year, month }, addData: ['publicTeams', 'publicUsers'] }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tmessageStore.getUnReadMessages(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(props),\n\t\t]);\n\t\tthis.setState({\n\t\t\tloadedTime: new Date().getTime(),\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true, year, month }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\tconst { user } = userStore;\n        const { settings = {} } = user;\n\t\tconst { imperial } = settings;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({\n\t\t\t\tquery: {\n\t\t\t\t\tteam: currentTeam,\n\t\t\t\t\tseasonYear: seasonStart,\n\t\t\t\t},\n\t\t\t\taddData: ['tips'],\n\t\t\t});\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year, imperial });\n\t\t\t} else {\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlan', {});\n\t\t\t\tworkoutPlanStore.updateKeyValue('workoutPlans', []);\n\t\t\t\tworkoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\trenderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        return (<>\n\t\t\t<Workout\n\t\t\t\tstores={this.props.stores}\n\t\t\t\tworkout={obj}\n\t\t\t\tshowDate={true}\n\t\t\t\twrapperClasses={'w-100'}\n\t\t\t\twrapperClassesRow={''}\n\t\t\t/>\n        </>);\n    }\n\n\t// Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { workoutStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => workoutStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n\tcomponentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentWillUnmount() {\n        const { workoutStore, stravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n        workoutStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n    }\n\t// /Scroll views timer\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n        const { scrolledDown } = this.props;\n\t\tconst { isLoading, submenu, handleIntersection, sessionid, loadedTime } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user, workoutSummaryWeekDay = [] } = userStore;\n        const { language = 'en', settings = {} } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\t\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst { stravaActivities = [] } = stravaActivityStore;\n\t\tconst { garminActivityDetails = [] } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top' style={`margin-top: ${scrolledDown > 0 ? 0 : SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'}; transition: all 0.3s ease-in-out;`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* <xmp>\n\t\t\t\ttotalTime: {totalTime}<br />\n\t\t\t\tcordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams)}<br />\n\t\t\t\t</xmp> */}\n\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={currentSpeed * 3.6} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>\n\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistance / 1000} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-1'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-left rounded-none ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-none ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class='col px-0 pt-2'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block rounded-pill-right rounded-none ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={settings.imperial ? `${kmToMiles(planMonth)} mi` : `${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={settings.imperial ? `${kmToMiles(summaryMonth)} mi` : `${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Distance stores={this.props.stores} value={totalDistanceKmMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t<Speed stores={this.props.stores} value={totalSpeedavgMonth} smallUnit={true} />\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTotals\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<WorkoutStatus\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}-${settings.imperial}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${year}-${month}-${currentTeam}-${loadedTime}-${workoutSummaryWeekDay.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}-${loadedTime}`}\n\t\t\t\t\t\t\tshowNavigation={true}\n\t\t\t\t\t\t\tshowHeader={true}\n\t\t\t\t\t\t\tcurrentTeam={currentTeam}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row mt-3'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-4'>\t\t\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t{user && user.strava && <>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activities={stravaActivities} key={`strava-${currentTeam}-${stravaActivities.length}`} />\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t{user && user.garmin && <>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activities={garminActivityDetails} key={`garmin-${currentTeam}-${garminActivityDetails.length}`} />\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<FastList\n\t\t\t\t\t\t\tdata={workoutsFiltered}\n\t\t\t\t\t\t\twrapperClassNames={'row pb-4'}\n\t\t\t\t\t\t\tcontentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n\t\t\t\t\t\t\trenderContent={this.renderContent}\n\t\t\t\t\t\t\tdataFields={dataFields}\n\t\t\t\t\t\t\tdataValues={{ type: '11' }}\n\t\t\t\t\t\t\thandleIntersection={handleIntersection}\n\t\t\t\t\t\t\tsessionid={sessionid}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* {workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))} */}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n\n        const currentMonth = new Date().getMonth() + 1;\n        const currentYear = new Date().getFullYear();\n\n        const { isLoading, year = currentYear, month = currentMonth, showHeader = true } = this.props;\n\t\tconst seasonStart = parseInt(month < 8 ? year - 1 : year, 10);\n\n        const { user } = userStore;\n        const { language = 'en' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <div class='table-responsive-md'>\n                        <table class='table table-sm table-striped font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th class='text-center'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-center'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart - 1} - {seasonStart}</nobr></th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'><nobr>{seasonStart} - {seasonStart + 1}</nobr></th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right px-3'>\n                                                    <nobr>\n                                                        <Distance stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month)} smallUnit={true} />\n                                                    </nobr><br />\n                                                    <nobr>\n                                                        <Elevation stores={this.props.stores} value={userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')} smallUnit={true} />\n                                                    </nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}