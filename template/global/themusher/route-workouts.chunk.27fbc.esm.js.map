{"version":3,"sources":["webpack:///./components/workout/status.js","webpack:///./routes/workouts/index.js","webpack:///./components/workout/table.js"],"names":["WorkoutStatus","observer","Component","constructor","props","super","loadWorkoutPlans","async","year","currentTeam","workoutPlanStore","stores","currentMonth","Date","getMonth","currentYear","util","getYear","seasonStart","parseInt","load","query","team","seasonYear","seasonMonth","workoutPlans","workoutPlanCurrent","id","this","state","Promise","all","loadTeams","loadWorkoutSummary","teamStore","skipMusherWorkoutSummary","addData","userStore","getWorkoutSummary","componentDidMount","loadAll","componentWillReceiveProps","nextProps","render","user","language","MONTHS","mu","getMonths","months","monthRange","lastPlanMonth","class","map","month","planMonth","sumWorkoutPlanMonth","percCompleted","findWorkoutSummaryMonth","height","format","style","role","aria-valuenow","aria-valuemin","aria-valuemax","fields","name","MARGIN_TOP","marginTop","MARGIN_BOTTOM","marginBottom","SUB_MENU_MARGIN_TOP","subMenuMarginTop","initialState","isLoading","submenu","workoutFilter","Workouts","loadWorkouts","setState","workoutStore","getNotifications","loadStravaActivities","loadGarminActivities","prepareWeekGraphs","chooseSubmenu","e","target","parentElement","dataset","menu","chooseDay","day","dd","mm","yyyy","w","date","d","getDate","m","y","getFullYear","stravaActivityStore","hideImported","garminActivityDetailsStore","getWorkoutSummaryDay","daysBack","appState","checkCordova","workoutPlan","currentTeamObject","findTeam","darkmode","workouts","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","workoutsFiltered","filter","summaryMonth","percentComplete","Math","floor","totalCountMonth","totalDistanceKmMonth","totalDurationMonth","totalSpeedavgMonth","stravaActivities","garminActivityDetails","href","secToHms","callback","key","data-menu","onClick","chooseDayFunction","length","hideTable","hideSummary","skipLoadSummary","radius","percent","prefix","total","completed","basehref","showNavigation","showHeader","strava","act","activity","garmin","url","workout","WorkoutTable","withText","week","distance","ascend","plan","seasonMonths","prevSeasonMonths","xTicksAll","weekRange","wo","partSize","xTicks","i","l","push","scope"],"mappings":"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","file":"route-workouts.chunk.27fbc.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    async loadAll(props = this.props) {\n        await Promise.all([\n            this.loadTeams(props),\n            this.loadWorkoutPlans(props),\n            this.loadWorkoutSummary(props),\n        ]);\n    }\n\n    async loadTeams(props = this.props) {\n        const { currentTeam } = props;\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n    loadWorkoutPlans = async (props = this.props) => {\n\t\tconst { year, currentTeam } = props;\n\t\tconst { workoutPlanStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst seasonStart = parseInt(year || (currentMonth < 8 ? currentYear - 1 : currentYear), 10);\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t\tseasonMonth: 6,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t}\n\t\t}\n\t}\n\n    async loadWorkoutSummary(props = this.props) {\n        const { year, currentTeam } = props;\n\t\tconst { userStore } = props.stores;\n        await userStore.getWorkoutSummary({ team: currentTeam, year });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAll();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.year !== this.props.year || nextProps.currentTeam !== this.props.currentTeam) {\n            this.loadAll(nextProps);\n        }\n    }\n\n    render() {\n        const { currentTeam } = this.props;\n\t\tconst { currentSeason, prevSeason } = this.props;\n        const { userStore, workoutPlanStore, teamStore } = this.props.stores;\n        const { workoutPlan } = workoutPlanStore;\n        const { user, workoutSummaryTeam } = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n\t\tconst { team } = teamStore;\n\n        const { year } = this.props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n        const currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n        const months = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        let lastPlanMonth;\n\n        return (\n            <div class='container-fluid mb-2'>\n                <div class='row mt-2'>\n                    <div class='col-12'>\n                        <h5>\n                            <Text id='workout.totals.title'>Treningsplanstatus</Text>\n                        </h5>\n                    </div>\n                </div>\n                <div class='row mt-2 border-bottom pb-2'>\n                    {months && months.map((month) => {\n                        if (month.year > currentYear || (month.year === currentYear && month.month >= currentMonth)) {\n                            return '';\n                        }\n                        const planMonth = workoutPlanStore.sumWorkoutPlanMonth(month.year, month.month + 1);\n                        if (!planMonth) {\n                            return '';\n                        }\n                        lastPlanMonth = planMonth;\n                        const summaryMonth = userStore.findWorkoutSummaryMonth(month.year, month.month + 1);\n                        const percCompleted = summaryMonth / planMonth * 100;\n                        const height = percCompleted > 100 ? 100 : util.format(percCompleted, 0);\n                        return (\n                            <div class='col-3 text-center'>\n                                {/* <div class='w-100 mt-1'>\n                                    <small class='text-muted'>\n                                        {planMonth}km\n                                    </small>\n                                    <small class='text-info'>\n                                        {summaryMonth}km\n                                    </small>\n                                </div> */}\n                                <div class='px-auto w-100 clearfix'>\n                                    <div class={`progress ${style['progress-bar-vertical']}`}\n                                        style={' margin-left: calc(50% - 20px);'}\n                                    >\n                                        <div class='progress-bar progress-bar-striped bg-success' role='progressbar'\n                                            style={`height: ${height}%; width: 40px;`}\n                                            aria-valuenow={height} aria-valuemin='0' aria-valuemax='100'\n                                        >\n                                            {util.format(percCompleted, 0)}%\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class='w-100 mt-1'>\n                                    {MONTHS[month.month]} {month.year}\n                                </div>\n                            </div>\n                        );\n                    })}\n                    {!lastPlanMonth && <div class='col-12 text-center'>\n                        <h3>\n                            <Text id='workout.plan.no-workout-plan-found' fields={{ name: team.name }}>Ingen treningsplaner funnet for team {team.name}.</Text>\n                        </h3>\n                    </div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default WorkoutStatus;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport Workout from '../../components/workout';\nimport WorkoutSummary from '../../components/workout/summary';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport WorkoutGraph from '../../components/workout/graph';\nimport WorkoutTable from '../../components/workout/table';\nimport WorkoutCalendar from '../../components/workout/calendar';\nimport Teams from '../../components/team/teams';\nimport Gauge from '../../components/gauge';\nimport CalendarPlan from '../../components/workout/calendarPlan';\nimport Strava from '../../components/strava';\nimport Garmin from '../../components/garmin';\nimport Ad from '../../components/ad/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'totals',\n\tworkoutFilter: () => true,\n};\n\n@observer\nclass Workouts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tloadWorkouts = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { workoutStore, userStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// const currentMonth = new Date().getMonth() + 1;\n        // const { month = currentMonth, year = util.getYear(), team = currentTeam, dog = {} } = props;\n\n\t\t// const { year } = props;\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tawait Promise.all([\n\t\t\tworkoutStore.load({ query: { team: currentTeam, year, month } }),\n\t\t\tthis.loadWorkoutSummary(props),\n\t\t\tthis.loadWorkoutPlans(props),\n\t\t\tuserStore.getNotifications(),\n\t\t\tthis.loadStravaActivities(),\n\t\t\tthis.loadGarminActivities(),\n\t\t\tthis.loadTeams(),\n\t\t]);\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\tasync loadTeams(props = this.props) {\n\t\tconst { teamStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\t\tawait teamStore.load({ query: { team: currentTeam, skipMusherWorkoutSummary: true }, addData: ['workoutSummary'] });\n\t}\n\n\tasync loadStravaActivities() {\n\t\tconst { stravaActivityStore } = this.props.stores;\n\t\tstravaActivityStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tasync loadGarminActivities() {\n\t\tconst { garminActivityDetailsStore } = this.props.stores;\n\t\tgarminActivityDetailsStore.load({ query: { hideImported: 1 }});\n\t}\n\n\tloadWorkoutPlans = async (props = this.props) => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { year = currentYear, month = currentMonth } = props;\n\t\tconst seasonStart = (month < 8 ? year - 1 : year);\n\n\t\tconst { workoutPlanStore, workoutStore } = props.stores;\n\t\tconst { currentTeam } = workoutStore;\n\n\t\t// workoutPlanStore.updateItem('workoutPlans', []);\n\t\t// workoutPlanStore.updateItem('workoutPlan', {});\n\t\t// workoutPlanStore.resetGraphPlanWeekDistanceCurrent();\n\n\t\tif (currentTeam) {\n\t\t\tawait workoutPlanStore.load({ query: {\n\t\t\t\tteam: currentTeam,\n\t\t\t\tseasonYear: seasonStart,\n\t\t\t} });\n\t\t\tconst { workoutPlans } = workoutPlanStore;\n\t\t\tconst workoutPlanCurrent = workoutPlans[0] || {};\n\t\t\tif (workoutPlanCurrent.id) {\n\t\t\t\tawait workoutPlanStore.load(workoutPlanCurrent.id);\n\t\t\t\tworkoutPlanStore.prepareWeekGraphs({ year });\n\t\t\t}\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tasync loadWorkoutSummary(props = this.props) {\n\t\tconst { userStore, workoutStore } = props.stores;\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\t\tconst { month = currentMonth, year = currentYear } = props;\n\n\t\tconst { currentTeam } = workoutStore;\n        await userStore.getWorkoutSummary({ team: currentTeam, year, month });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year, team: currentTeam });\n\t\t// await userStore.getWorkoutSummaryDay({ month, year: year - 1, team: currentTeam });\n\t\tawait userStore.getWorkoutSummaryDay({ daysBack: 500, team: currentTeam });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tchooseDay = ({ day, month, year }) => {\n\t\tconst { dd, mm, yyyy } = this.state;\n\t\tif (dd === day && mm === month && yyyy === year) {\n\t\t\treturn this.setState({\n\t\t\t\tworkoutFilter: () => true,\n\t\t\t\tdd: null,\n\t\t\t\tmm: null,\n\t\t\t\tyyyy: null,\n\t\t\t});\n\t\t}\n\t\tthis.setState({\n\t\t\tdd: day,\n\t\t\tmm: month,\n\t\t\tyyyy: year,\n\t\t\tworkoutFilter: (w) => {\n\t\t\t\tconst date = new Date(w.date);\n\t\t\t\tconst d = date.getDate();\n\t\t\t\tconst m = date.getMonth() + 1;\n\t\t\t\tconst y = date.getFullYear();\n\t\t\t\treturn d === parseInt(day, 10) && m === parseInt(month, 10) && y === parseInt(year, 10);\n\t\t\t},\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { appState } = this.props.stores;\n\t\tthis.loadWorkouts();\n\t\t// this.loadDogs();\n\t\t// this.loadTracks();\n\t\tappState.checkCordova();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.month !== this.props.month\n            || nextProps.year !== this.props.year\n            || nextProps.team !== this.props.team) {\n            this.loadWorkouts(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { userStore, appState, workoutStore, workoutPlanStore,\n\t\t\tstravaActivityStore, garminActivityDetailsStore } = this.props.stores;\n\t\tconst { workoutPlan, workoutPlans } = workoutPlanStore;\n\n\t\tconst { user } = userStore;\n        const { language = 'no' } = user;\n        const MONTHS = mu.getMonths(language);\n\n\t\tconst currentMonth = new Date().getMonth() + 1;\n\t\tconst currentYear = util.getYear();\n\n\t\tconst { month = currentMonth, year = currentYear } = this.props;\n\t\tconst { currentTeam } = workoutStore;\n\t\tconst currentTeamObject = userStore.findTeam(currentTeam, true);\n\n\t\tconst { darkmode } = appState;\n\t\tconst { workouts, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\tconst { workoutFilter } = this.state;\n\t\tconst workoutsFiltered = workouts.filter(workoutFilter);\n\n\t\tconst planMonth = workoutPlanStore.sumWorkoutPlanMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tconst summaryMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10)) || 0;\n\t\tlet percentComplete;\n\t\tif (planMonth) {\n\t\t\tpercentComplete = Math.floor(summaryMonth / planMonth * 100);\n\t\t}\n\t\tconst totalCountMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'count', true) || 0;\n\t\tconst totalDistanceKmMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'distanceKm', true) || 0;\n\t\tconst totalDurationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'duration', true) || 0;\n\t\tconst totalSpeedavgMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'speedAvg', true) || 0;\n\t\tconst totalElevationMonth = userStore.findWorkoutSummaryMonth(parseInt(year, 10), parseInt(month, 10), 'elevation', true) || 0;\n\n\t\tconst seasonStart = parseInt(year || (currentMonth < 8 ? currentYear - 1 : currentYear), 10);\n\t\tconst { stravaActivities } = stravaActivityStore;\n\t\tconst { garminActivityDetails } = garminActivityDetailsStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t<div class='row fixed-top' style={`margin-top: ${SUB_MENU_MARGIN_TOP}; background-color: ${darkmode ? '#191d21' : '#f8f9fa'};`}>\n\t\t\t\t\t<div class='col text-center border-bottom border-primary subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/' class='text-primary stretched-link'><nobr><i class='fas fa-chart-line' /> <Text id='workout.index.dashboard'>Oversikt</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/list' class='text-secondary stretched-link'><nobr><i class='fas fa-list' /> <Text id='workout.index.list'>Liste</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col text-center subtopmenu'>\n\t\t\t\t\t\t<a href='/workouts/plan' class='text-secondary stretched-link'><nobr><i class='fas fa-calendar-alt' /> <Text id='workout.index.plan'>Plan</Text></nobr></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t\t{/* {JSON.stringify(cordovaActiveTrackingParams)}\n\t\t\t\t\t\t\t{JSON.stringify(isRunning)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} callback={this.loadWorkouts} key={`teams-${currentTeam}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t<a class='btn btn-primary btn-sm float-right'\n\t\t\t\t\t\t\thref='/workouts/edit/new'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class='fas fa-plus' /> <Text id='workout.index.add-workout'>Legg til treningstur</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 my-3'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.totals'>Totaler</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'seasontotals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='seasontotals'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-tachometer-alt' /> <Text id='workouts.seasontotals'>Season totals</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'analysis' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='analysis'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-chart-area' /> <Text id='workouts.analysis'>Analyser</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'table' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='table'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-table' /> <Text id='workouts.table'>Tabell</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'workoutplan' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='workoutplan'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.workoutplan'>Treningsplan</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${submenu === 'calendar' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tdata-menu='calendar'\n\t\t\t\t\t\t\t\t\tonClick={this.chooseSubmenu}\n\t\t\t\t\t\t\t\t><i class='fas fa-calendar-alt' /> <Text id='workouts.calendar'>Kalender</Text></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{submenu === 'totals' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-2'>\n\t\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t{planMonth >= 0 && (\n\t\t\t\t\t\t\t\t\t\t<Gauge \n\t\t\t\t\t\t\t\t\t\t\tkey={`gauge-${percentComplete}`}\n\t\t\t\t\t\t\t\t\t\t\tradius={55}\n\t\t\t\t\t\t\t\t\t\t\tpercent={percentComplete}\n\t\t\t\t\t\t\t\t\t\t\tprefix='%'\n\t\t\t\t\t\t\t\t\t\t\ttotal={`${planMonth} km`}\n\t\t\t\t\t\t\t\t\t\t\tcompleted={`${summaryMonth} km`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}<br />\n\t\t\t\t\t\t\t\t\t<small class='text-muted'><Text id='workout.index.plan'>Treningsplan</Text></small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-road' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalDistanceKmMonth, 0)} <small><small><small>km</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.distance'>Distanse</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center'>\n\t\t\t\t\t\t\t\t\t<h5><span class='text-muted font-weight-lighter'><i class='fas fa-tachometer-alt ml-3' /></span></h5>\n\t\t\t\t\t\t\t\t\t<h3>{util.format(totalSpeedavgMonth, 1)} <small><small><small>km/t</small></small></small></h3>\n\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t<Text id='workout.calendar.avg-speed'>Gj.snittsfart</Text>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-12 text-center'>\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-running' /> </span> {totalCountMonth}\n\n\t\t\t\t\t\t\t\t\t<span class='text-muted font-weight-lighter'><i class='fas fa-clock ml-3' /></span> {util.secToHms(totalDurationMonth)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'seasontotals' && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{submenu === 'analysis' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutGraph\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`graph-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'table' && <>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t\t<WorkoutTable\n\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\t\tkey={`table-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'calendar' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>}\n\n\t\t\t\t\t{submenu === 'workoutplan' && <>\n\t\t\t\t\t\t<WorkoutCalendar stores={this.props.stores} isLoading={isLoading}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tchooseDayFunction={this.chooseDay}\n\t\t\t\t\t\t\tkey={`calendar-header-${workoutPlan.id}-${workoutPlans.length}`}\n\t\t\t\t\t\t\thideTable={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\thideSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t\tskipLoadSummary={submenu === 'calendar' ? 0 : 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CalendarPlan stores={this.props.stores}\n\t\t\t\t\t\t\tbasehref='/workouts/'\n\t\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\t\tyear={year}\n\t\t\t\t\t\t\tkey={`${workoutPlan.id || seasonStart}-${currentTeam}-${month}-${year}`}\n\t\t\t\t\t\t\tshowNavigation={false}\n\t\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>}\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{user && user.strava && stravaActivities && stravaActivities.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.strava-workouts'>Strava workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{stravaActivities && stravaActivities.map(act =>\n\t\t\t\t\t\t\t\t<Strava stores={this.props.stores} activity={act} key={`strava-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{user && user.garmin && garminActivityDetails && garminActivityDetails.length > 0 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-top border-bottom pt-3 pb-3 my-2 overflow-auto'\n\t\t\t\t\t\t\tstyle='max-height: 30vh;'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h5><Text id='workout.index.garmin-workouts'>Garmin workouts / not imported</Text></h5>\n\t\t\t\t\t\t\t{garminActivityDetails && garminActivityDetails.map(act =>\n\t\t\t\t\t\t\t\t<Garmin stores={this.props.stores} activity={act} key={`garmin-${currentTeam}-${act.id}`} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<Ad stores={this.props.stores} url={this.props.url} />\n\n\t\t\t\t<div class='row'>\n\t\t\t\t\t{workoutsFiltered && workoutsFiltered.length > 0 && <div class='col-12 mb-4'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0 mt-4'>\t\t\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<Text id='workout.index.last-workouts' fields={{ total: workoutsFiltered.length, month: MONTHS[month - 1], year }}>\n\t\t\t\t\t\t\t\t\tTreningsturer {MONTHS[month - 1]} {year} - {workoutsFiltered.length} stk\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t{currentTeamObject && currentTeamObject.name && <div>\n\t\t\t\t\t\t\t\t\t<small class='font-weight-lighter'>(<Text id='workout.index.filtered-by'>Filtered by</Text>: {currentTeamObject.name})</small>\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{workoutsFiltered && workoutsFiltered.map(workout => (\n\t\t\t\t\t\t\t<Workout stores={this.props.stores} workout={workout} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{!workouts || workouts.length === 0 && <div class='col-12 mb-4 text-center pt-5 pb-5'>\n\t\t\t\t\t\t<h1 class='text-muted'><i class='fas fa-running' /></h1>\n\t\t\t\t\t\t<h5 class='text-muted font-weight-lighter'>\n\t\t\t\t\t\t\t<Text id='workouts.no-workouts' fields={{ month: MONTHS[month - 1], year }}>Ingen treningsturer registrert...</Text>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Workouts;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\n@withText((props) => ({\n    week: <Text id='workout.graph.week' />,\n    distance: <Text id='workout.graph.distance' />,\n    ascend: <Text id='workout.graph.ascend' />,\n    plan: <Text id='workout.graph.plan' />,\n}))\n@observer\nclass WorkoutTable extends Component {\n    render() {\n        const { userStore } = this.props.stores;\n        const { isLoading, year, month, showHeader = true } = this.props;\n        const {\n            user,\n\t\t} = userStore;\n        const { language = 'no' } = user;\n\t\tconst MONTHS = mu.getMonths(language);\n\n        const currentMonth = month || new Date().getMonth() + 1;\n\t\tconst currentYear = year || util.getYear();\n\t\tconst seasonStart = parseInt(currentMonth < 8 ? currentYear - 1 : currentYear, 10);\n\n        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(year, monthNum) || {};\n        const seasonMonths = util.monthRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n        const prevSeasonMonths = util.monthRange(`${seasonStart - 1}-08-01`, `${seasonStart}-07-31`);\n        const seasonWeeks = util.weekRange(`${seasonStart}-08-01`, `${seasonStart + 1}-07-31`);\n\n        const xTicksAll = seasonWeeks.map(wo => wo.week);\n        const parts = xTicksAll.length % 6;\n        const partSize = Math.floor(xTicksAll.length / parts);\n        const xTicks = [];\n        for (let i = 0, l = xTicksAll.length; i < l; i += partSize) {\n            xTicks.push(xTicksAll[i]);\n        }\n\n        return (\n            <>\n                {showHeader && <h5><Text id='workout.graph.title'>Treningsstatistikk</Text> {seasonStart} - {seasonStart + 1}</h5>}\n                <div class='w-100 mt-3 mb-4'>\n                    {/* <xmp>graphWorkoutSummaryWeekDistanceCurrent: {JSON.stringify(graphWorkoutSummaryWeekDistanceCurrent, null, 4)}</xmp>\n                    <xmp>graphWorkoutSummaryWeekDistancePrev: {JSON.stringify(graphWorkoutSummaryWeekDistancePrev, null, 4)}</xmp> */}\n                    <small class='mb-4'><small>\n                        <table class='table table-sm font-weigth-lighter border-bottom'>\n                            <thead>\n                                <tr>\n                                    <th style='padding: .15rem;'><Text id='workout.graph.season'>Sesong</Text></th>\n                                    {seasonMonths.map(m => (\n                                        <th class='text-right' style='padding: .15rem;'><a href={`/workouts/month/${m.month}/${m.year}`}>{MONTHS[m.month - 1]}</a></th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart - 1} - {seasonStart}</th>\n                                    {prevSeasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    {/* <nobr>{summaryMonth.distance}</nobr><br /> */}\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope='row' style='padding: .15rem;'>{seasonStart} - {seasonStart + 1}</th>\n                                    {seasonMonths.map(m => {\n                                        // const summaryMonth = workoutPlanStore.findWorkoutPlanSummaryMonth(m.year, m.month) || {};\n                                        return (\n                                            <>\n                                                <td class='text-right' style='padding: .15rem;'>\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month)}</nobr><br />\n                                                    <nobr>{userStore.findWorkoutSummaryMonth(m.year, m.month, 'elevation')}</nobr><br />\n                                                </td>\n                                            </>\n                                        );\n                                    })}\n                                    <td class='text-muted' style='padding: .15rem;'>\n                                        <nobr><i class='fas fa-road' /> km</nobr><br />\n                                        <nobr><i class='fas fa-mountain' /> m</nobr><br />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </small></small>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WorkoutTable;\n"],"sourceRoot":""}