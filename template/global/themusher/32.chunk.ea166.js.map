{"version":3,"sources":["webpack:///./routes/news/edit.js","webpack:///./components/form/files.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","isLoading","Input","observer","handleImageErrored","e","image","target","onerror","setTimeout","src","Date","removeImage","props","stores","newsStore","id","news","name","parentElement","dataset","removeMainImage","updateField","field","value","render","this","saved","type","rows","title","icon","help","onInput","class","for","images","map","img","s3SmallLink","onError","onClick","data-name","object","autoOpen","style","aria-describedby","data-id","data-field","Component","InputNew","updateObjectKeyValue","newNews","NewsEdit","elementtype","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","updateTimer","insertNewNews","insert","back","createNew","route","state","loadNews","setState","load","saveField","componentDidMount","userStore","isAdmin","onclick","Files","handleAddImage","file","files","uploadStatus","before","after","apiUrl","height","width","Images","addToImages","push","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","util","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","position","ref","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","c","Object","keys","key","isImage","match","result","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax","children"],"mappings":"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","file":"32.chunk.ea166.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n    \n    removeImage = async (e) => {\n        const { newsStore } = this.props.stores;\n        const { news } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        newsStore.removeImage({\n            id: news.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { news, field, updateField } = this.props;\n        updateField({ id: news.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, news, type = 'text', rows, field, title, icon, help, onInput, updateField } = this.props;\n        const value = news[field];\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {news.images && news.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={news} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={news} field={field} updateField={updateField} />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type={type} class={`form-control ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        rows={rows}\n                        data-id={news.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        return (\n            <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type={type} class={`form-control ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={news.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { newsStore } = this.props.stores;\n        // console.log('adStore.newAd', adStore.newAd);\n        newsStore.updateObjectKeyValue('newNews', field, value);\n    }\n\n    render() {\n        const { field, icon, title, help } = this.props;\n        const { newsStore } = this.props.stores;\n        const { newNews } = newsStore;\n        return (\n            <div class='form-group'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    onInput={this.onInput}\n                    value={newNews[field]}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass NewsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n\tasync loadNews(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { newsStore } = this.props.stores;\n\t\tawait newsStore.load(props.id);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { newsStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { news } = newsStore;\n        if (field === 'images') {\n            if (Array.isArray(news.images) && Array.isArray(value)) {\n                localObjectValue = [...news.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        newsStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { newsStore } = this.props.stores;\n        await newsStore.saveField(id, field, value);\n    }\n\n    insertNewNews = async () => {\n        const { newsStore } = this.props.stores;\n\t\tconst { newNews } = newsStore;\n\t\tnewsStore.insert({ ...newNews });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n    back = () => {\n        const { createNew } = this.props;\n        const { newsStore } = this.props.stores;\n\t\tconst { news } = newsStore;\n        if (createNew) {\n            route(`/news/`);\n        } else {\n            route(`/news/${news.id}`);\n        }\n    }\n\n\trender() {\n        const { createNew } = this.props;\n\t\tconst { newsStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n        if (!isAdmin) {\n            return '';\n        }\n\t\tconst { news, saved } = newsStore;\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <div class='d-flex justify-content-between mb-2'>\n                    <div>\n                        <button class='btn btn-link pl-0 fixed-top text-primary'\n                            style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                            onClick={this.back}>\n                            <i class='fas fa-arrow-circle-left' />\n                        </button>\n                    </div>\n                    <div>\n                        <h5 class='text-muted'>News and howto content</h5>\n                    </div>\n                    <div>\n                        &nbsp;\n                    </div>\n                </div>\n\n\t\t\t\t{createNew ? (\n                    <div class='row'>\n                        <div class='col-12'>\n                            <h5><Text id='news.add-new'>Lag nytt innhold</Text></h5>\n                            <InputNew stores={this.props.stores} field='title' icon='fas fa-heading'\n                                title={<Text id='news.title'>Tittel</Text>}\n                                help={<Text id='news.title-help'>Title of this news story</Text>} />\n                            <InputNew stores={this.props.stores} field='tag' icon='fas fa-eye'\n                                title={<Text id='news.tag'>Tag</Text>}\n                                help={<Text id='news.tag-help'>Tag of this news story</Text>}\n                                onInput={this.updateField} />\n                            <button\n                                type='button'\n                                class='btn btn-primary mb-2'\n                                onclick={this.insertNewNews}\n                            >Save news</button>\n                        </div>\n                    </div>\n                ) : (\n                    <div class='row'>\n                        <div class='col-12'>\n                            <Input saved={saved} news={news} field='title' icon='fas fa-heading'\n                                title={<Text id='news.title'>Title</Text>}\n                                help={<Text id='news.title-help'>Title of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='active' icon='fas fa-heading'\n                                title={<Text id='news.active'>Active</Text>}\n                                help={<Text id='news.active-help'>Is this active yet?</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='tag' icon='fas fa-heading'\n                                title={<Text id='news.tag'>Tag</Text>}\n                                help={<Text id='news.tag-help'>Tag of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='ingress' icon='fas fa-quote-right'\n                                type='textarea'\n                                title={<Text id='news.ingress'>Ingress</Text>}\n                                help={<Text id='news.ingress-help'>Ingress of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='body' icon='fas fa-quote-right'\n                                type='textarea' rows={20}\n                                title={<Text id='news.body'>Body</Text>}\n                                help={<Text id='news.body-help'>Body of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='image' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='news.photo'>Bilder</Text>} \n                                help={<Text id='news.photo-help'>Images for this news story.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n    \t\t\t\t\t</div>\n    \t\t\t\t</div>\n                )}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewsEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}