{"version":3,"sources":["webpack:///./routes/news/edit.js","webpack:///./components/form/files.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","isLoading","Input","observer","handleImageErrored","e","image","target","onerror","setTimeout","src","Date","removeImage","props","stores","newsStore","id","news","name","parentElement","dataset","removeMainImage","updateField","field","value","render","this","saved","type","rows","title","icon","help","onInput","max","min","step","maxValue","util","isoDate","undefined","class","for","images","map","img","s3SmallLink","onError","onClick","data-name","object","autoOpen","style","aria-describedby","data-id","data-field","Component","InputNew","updateObjectKeyValue","newNews","NewsEdit","elementtype","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","updateTimer","insertNewNews","result","insert","console","log","data","route","back","createNew","state","loadNews","setState","load","saveField","componentDidMount","userStore","isAdmin","onclick","Files","handleAddImage","file","files","uploadStatus","before","after","apiUrl","height","width"],"mappings":"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","file":"46.chunk.c66cd.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n    \n    removeImage = async (e) => {\n        const { newsStore } = this.props.stores;\n        const { news } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        newsStore.removeImage({\n            id: news.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { news, field, updateField } = this.props;\n        updateField({ id: news.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, news, type = 'text', rows, field, title, icon, help, onInput, updateField, max, min, step } = this.props;\n        let value = news[field];\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(news[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {news.images && news.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={news} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={news} field={field} updateField={updateField} />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type={type} class={`form-control ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        rows={rows}\n                        data-id={news.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        return (\n            <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type={type} class={`form-control ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    data-id={news.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { newsStore } = this.props.stores;\n        // console.log('adStore.newAd', adStore.newAd);\n        newsStore.updateObjectKeyValue('newNews', field, value);\n    }\n\n    render() {\n        const { field, icon, title, help } = this.props;\n        const { newsStore } = this.props.stores;\n        const { newNews } = newsStore;\n        return (\n            <div class='form-group'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    onInput={this.onInput}\n                    value={newNews[field]}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass NewsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n\tasync loadNews(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { newsStore } = this.props.stores;\n\t\tawait newsStore.load(props.id);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { newsStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { news } = newsStore;\n        if (field === 'images') {\n            if (Array.isArray(news.images) && Array.isArray(value)) {\n                localObjectValue = [...news.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        newsStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { newsStore } = this.props.stores;\n        await newsStore.saveField(id, field, value);\n    }\n\n    insertNewNews = async () => {\n        const { newsStore } = this.props.stores;\n\t\tconst { newNews } = newsStore;\n\t\tconst result = await newsStore.insert({ ...newNews });\n        console.log({ result });\n        const { data } = result;\n        if (data && data.id) {\n            route(`/news/edit/${data.id}`);\n        }\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n    back = () => {\n        const { createNew } = this.props;\n        const { newsStore } = this.props.stores;\n\t\tconst { news } = newsStore;\n        if (createNew) {\n            route(`/news/`);\n        } else {\n            route(`/news/${news.id}`);\n        }\n    }\n\n\trender() {\n        const { createNew } = this.props;\n\t\tconst { newsStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n        if (!isAdmin) {\n            return '';\n        }\n\t\tconst { news, saved } = newsStore;\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <div class='d-flex justify-content-between mb-2'>\n                    <div>\n                        <button class='btn btn-link pl-0 fixed-top text-primary'\n                            style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                            onClick={this.back}>\n                            <i class='fas fa-arrow-circle-left' />\n                        </button>\n                    </div>\n                    <div>\n                        <h5 class='text-muted'>News and howto content</h5>\n                    </div>\n                    <div>\n                        &nbsp;\n                    </div>\n                </div>\n\n\t\t\t\t{createNew ? (\n                    <div class='row'>\n                        <div class='col-12'>\n                            <h5><Text id='news.add-new'>Lag nytt innhold</Text></h5>\n                            <InputNew stores={this.props.stores} field='title' icon='fas fa-heading'\n                                title={<Text id='news.title'>Tittel</Text>}\n                                help={<Text id='news.title-help'>Title of this news story</Text>} />\n                            <InputNew stores={this.props.stores} field='tag' icon='fas fa-eye'\n                                title={<Text id='news.tag'>Tag</Text>}\n                                help={<Text id='news.tag-help'>Tag of this news story</Text>}\n                                onInput={this.updateField} />\n                            <button\n                                type='button'\n                                class='btn btn-primary mb-2'\n                                onclick={this.insertNewNews}\n                            >Save news</button>\n                        </div>\n                    </div>\n                ) : (\n                    <div class='row'>\n                        <div class='col-12'>\n                            <Input saved={saved} news={news} field='title' icon='fas fa-heading'\n                                title={<Text id='news.title'>Title</Text>}\n                                help={<Text id='news.title-help'>Title of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input stores={this.props.stores} saved={saved} news={news} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                title={<Text id='news.date'>Dato</Text>}\n                                help={<Text id='news.date-help'>Date for this news article. Format is: 'YYYY-MM-DD'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n\n                            <Input saved={saved} news={news} field='active' icon='fas fa-heading'\n                                title={<Text id='news.active'>Active</Text>}\n                                help={<Text id='news.active-help'>Is this active yet?</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='sort' icon='fas fa-sort-amount-down'\n                                title={<Text id='news.sort'>Sort order</Text>}\n                                help={<Text id='news.sort-help'>Highest number on top.</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='tag' icon='fas fa-heading'\n                                title={<Text id='news.tag'>Tag</Text>}\n                                help={<Text id='news.tag-help'>Tag of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='ingress' icon='fas fa-quote-right'\n                                type='textarea'\n                                title={<Text id='news.ingress'>Ingress</Text>}\n                                help={<Text id='news.ingress-help'>Ingress of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='body' icon='fas fa-quote-right'\n                                type='textarea' rows={20}\n                                title={<Text id='news.body'>Body</Text>}\n                                help={<Text id='news.body-help'>Body of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='image' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='news.photo'>Bilder</Text>} \n                                help={<Text id='news.photo-help'>Images for this news story.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n    \t\t\t\t\t</div>\n    \t\t\t\t</div>\n                )}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewsEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n"],"sourceRoot":""}