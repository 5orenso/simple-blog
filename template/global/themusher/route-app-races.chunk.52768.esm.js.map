{"version":3,"sources":["webpack:///./components/feedback/likesAndComments.js","webpack:///./components/workout/commentAdd.js","webpack:///./components/util/scrollIntoView.js","webpack:///./components/imageSlider/index.js","webpack:///./components/workout/commentReply.js","webpack:///./components/story/commentAdd.js","webpack:///./components/story/commentReply.js","webpack:///./lib/icons.js","webpack:///./components/form/links.js","webpack:///./components/data/distance.js","webpack:///./components/loading/index.js","webpack:///./routes/public/race/commentAdd.js","webpack:///./components/dog/editBaseInfo.js","webpack:///./components/map/style.css","webpack:///./components/story/add.js","webpack:///./components/story/comments.js","webpack:///./components/style.css","webpack:///./routes/app-races/tracking.js","webpack:///./components/public/trackmap.js","webpack:///./components/map/index.js","webpack:///./components/team/publicFeedLine.js","webpack:///./routes/app-races/notifications.js","webpack:///./components/form/achievements.js","webpack:///./components/races/liveAddResult.js","webpack:///./components/story/publicStory.js","webpack:///./components/story/storyPoll.js","webpack:///./routes/app-races/userImages.js","webpack:///./components/data/temperature.js","webpack:///./components/races/liveMusherResult.js","webpack:///./components/form/files.js","webpack:///./routes/app-races/news.js","webpack:///./routes/public/race/commentReply.js","webpack:///./components/data/weight.js","webpack:///./components/team/connect-boxes.js","webpack:///./routes/public/race/comments.js","webpack:///./components/dog/scroller.js","webpack:///./routes/public/race/raceText.js","webpack:///./components/races/liveResults.js","webpack:///./components/drawer/index.js","webpack:///./components/public/raceTrackingMusherDetail.js","webpack:///./components/gauge/style.css","webpack:///./components/ad/index.js","webpack:///./components/header/custom.js","webpack:///./components/story/publicFeed.js","webpack:///./components/races/musherInfoHeader.js","webpack:///./routes/app-races/signup.js","webpack:///./components/data/elevation.js","webpack:///./routes/app-races/mushers.js","webpack:///./components/data/speed.js","webpack:///./components/form/images.js","webpack:///./components/team/connect-confirm.js","webpack:///./components/workout/comments.js","webpack:///./routes/app-races/index.js","webpack:///./components/form/dragNdropFileupload.js","webpack:///./routes/app-races/classes.js","webpack:///./components/states/index.js","webpack:///./components/feedback/views.js","webpack:///./routes/app-races/results.js","webpack:///./components/gauge/index.js","webpack:///./components/team/fastList.js","webpack:///./components/races/liveCheckpointResult.js","webpack:///./components/public/raceTracking.js"],"names":["initialState","DisplayLikesAndComments","observer","Component","constructor","props","super","toggleLikes","showLikesList","this","state","setState","render","storyStore","teamStore","workoutStore","raceStore","stores","likes","comments","type","onTeamClick","onUserClick","class","length","style","onClick","slice","map","like","user","teams","publicTeam","findPublicUser","findPublicTeamByMembers","util","isArray","find","e","public","mu","getImage","team","priority","displayNameShort","name","displayName","href","uuidv4","title","id","fields","total","image","shortname","WorkoutAdd","beforeImagesUploaded","sendButtonEnabled","afterImagesUploaded","commentWorkout","async","callback","inputRefObject","workout","comment","showAddImage","response","status","body","images","resizeTextarea","addImage","addImages","value","push","handleImageErrored","target","onerror","setTimeout","src","Date","inputRef","col","offset","showAvatar","extraClass","userStore","firstname","ucfirst","lastname","email","userImage","undefined","s3SmallLink","for","placeholder","onInput","linkState","onKeyUp","onFocus","ref","data-id","disabled","img","onError","removeImage","data-name","object","updateField","before","after","autoOpen","ScrollIntoView","container","componentDidMount","horizontal","vertical","behavior","inline","block","scrollIntoView","c","touchStart","stopPropagation","startX","touches","pageX","touchEnd","sliding","touchMove","totalImages","scrollDistance","x","prevImage","nextImage","imageContainer","currentImage1","currentImage2","currentIdx","imageDots","Array","fill","y","nextImageContainer","nextIdx","componentWillReceiveProps","nextProps","nextImages","curImage","htmlImageRatio","height","width","imgHeight","imgWidth","dimensions","orientation","imageRatio","onTouchstart","onTouchend","onTouchmove","loading","s3LargeLink","image1","image2","i","WorkoutCommentReply","commentId","commentReplyWorkout","StoryAdd","commentStory","story","StoryCommentReply","commentReplyStory","initCall","ICONS","adit","Icon","iconUrl","iconSize","iconAnchor","airport","analyse","archaeological","architecture","arrow_up","arrow_up_double","atm","avatar","bag","bar","barracks","battlefield","beach","bicycle","boundary_stone","buddhism","building","burger","bus","bus_stop","cable_car","camera","camp_site","car","caravan_site","cartography","cash","castle","castle_defensive","cave_entrance","cemetery","chapel","christianism","cinema","cinema_alt","city","cityhall","clean","compass","compass_alt","construction","contour","court_house","crown","crucifix","data","database","dentist","dislike","download","drag_lift","drop","eye","facebook","fire","fishing","flag","forbidden","fort","fountain","fuel","fuel_alt","gallery","gear","github","go","golf","heart","helicopter","home","hospital","hostel","hotel","hotel_alt","ice_ring","information","internet","invisible","islamism","island","judaism","laptop","library","lighthouse","linkedin","lion","lock","magnifier","mall","mapkey","mapshakers","marina","marker","market_place","mine","monument","mountain","museum","music","nature","nocamera","nonsmoking","north","north_alt","north_alt_II","north_alt_III","oppositeway","parking","pharmacy","picnic_site","pitch","playground","playground_alt","police","post_office","pub","restaurant","rocks","ruins","saddle","sailboat","school","seal","shelter","sinkhole","skype","smartphone","smoking","sport_centre","spring","square","stadium","star","stop","stupa","supermarket","swimming_pool","telephone","theatre","ticket","toilet","tower","town","traffic_signal","train","tram","tram_stop","tree_cinofer","tree_leaf","triangle","underground","unesco","university","upload","viewpoint","viewtower","village","vineyard","volcano","water_tower","water_well","watermill","waterpark","waterwork","wayside_cross","wind_generator","windmill","zoo","Icons","icon","Object","keys","color","textColor","borderColor","iconWidth","iconHeight","randomPassword","hsl2Rgb","DivIcon","className","html","bib","speed","bearing","rank","iconAnchorX","iconAnchorY","imageCirlceRadius","lineHeight","fontSize","paddingTop","paddingBottom","largeMarkers","mapChecked","titlePrefix","dotColor","getRankingColor","mapIsDark","test","imageCircle","Achievements","handleAdd","field","url","removeLink","dogStore","closest","dataset","linkId","showFiles","links","file","isoDate","createdDate","aria-describedby","linkstate","displayDistance","distance","format","Distance","smallUnit","settings","imperial","kmToMiles","marginTop","marginBottom","Loading","goto","gotoTitle","routerName","role","native","RaceAdd","commentRace","race","marginTopBack","Input","retry","parseInt","dog","parentElement","removeFile","saved","datalist","min","max","step","help","refName","showImages","maxValue","files","formatBytes","size","data-field","rows","addToImages","list","el","Teams","toggleType","typeId","isNew","toJS","indexOf","removeTeam","addTeam","highlight","idx","isPrimary","isSecondary","hintTeam","Harnesses","harnesses","language","harness","colorNonstop","lang","Status","toggleStatus","statuses","removeStatus","addStatus","dogstatuses","Position","dogPositions","DogsEdit","insertDog","newDog","insert","resetDog","route","elementtype","fieldType","updateFieldValue","datatype","skipTimer","newValue","localObjectValue","achievements","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","chooseMother","dogId","motherDog","findDog","chipId","chooseFather","fatherDog","chooseSubmenu","submenu","menu","back","history","goBack","cleanupMemoryDetail","load","addData","createNew","saveField","loadDog","dogFemales","findDogsByGender","dogMales","hasBirthday","birth","daysUntilBirthday","Math","ceil","daysUntilNextBirthday","age","deceased","gender","data-menu","mother","d","father","module","exports","showTeamChange","showChangeVisibility","showChangeType","addStory","hashTags","postfix","topic","tag","join","pinned","urlText","currency","price","code","country","region","startDate","endDate","loadPublicFeed","hashtags","imageName","findIndex","splice","changeVisibility","changePinned","changeType","toggleTeamChange","setPublicTeam","publicTeams","findPublicTeams","setFocus","hasFocus","removeFocus","appState","isAdmin","teamId","findTeam","darkmode","onChange","selected","checked","showAddComment","showAllComments","showAllReplies","viewImageIdx","likeComment","likeReply","showOriginal","StoryComments","addLikeComment","likeStoryComment","replyId","likeStoryCommentReply","replyComment","focus","toggleComments","toggleReplies","toggleMenu","showMenu","showDeleteComment","showEdit","toggleEdit","commentEditText","toggleDeleteComment","deleteComment","deleteCommentStory","deleteCommentReply","commentid","deleteCommentReplyStory","saveComment","editCommentStory","saveCommentReply","editCommentReplyStory","viewImage","translate","preventDefault","replyid","translatedText","key","translateCommentReply","translateComment","compact","currentUser","max_comments","filteredComments","totalComments","diplayedComments","reverse","hasLikedComment","filteredReplises","totalReplies","diplayedReplies","imgs","imageIdx","currentImage","currentLocationGeocode","translation","getCommentTranslations","targetLang","data-comment","filter","t","markdown","replaceImages","markdownOpts","getMarkdownOptions","onDblclick","data-idx","data-commentid","formatDistance","locale","updatedDate","reply","hasLikedReply","replyTranslation","getCommentReplyTranslations","replyBody","data-replyid","more","MARGIN_TOP","subMenuMarginTop","isLoading","AppRaceDetailTracking","raceid","Trackmap","showHeatmap","allTeamIds","adminStore","trackStore","selectedClassIds","getPublicHeatmap","trackIds","getTrackIdsByClass","cleanupMemory","loadPublic","query","idin","loadTrack","waypoints","waypoints2","waypoints3","zoomToMarkers","fullscreenMap","onMarkerClick","onMarker2Click","onMarker3Click","showTracks","showDistanceMarkers","groupWaypoints","focusOnMushers","geoJSONs","isAnimatedMarkers","replaySpeed","tracks","publicHeatmap","heatmap","track","geojson","gpx","geoJSON","gpxInfo","minZoom","maxZoom","showTrackProfile","distanceMarkerSteps","showFullscreenControl","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","BaseLayer","Overlay","LayersControl","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","shadowUrl","App","mapRef","createRef","polyRef","handleViewportChanged","mapCenter","center","mapZoom","zoom","handleLocationFound","latlng","hasLocation","onEachFeature","feature","layer","popupContent","totalDistance","maxSpeed","avgSpeed","ascent","calculatedAscend","decent","calculatedDescend","secToHms","duration","bindPopup","handleClick","setLatlng","zoomToGeoJSON","bounds","getBounds","_northEast","fitBounds","err","console","log","markers","force","hasZoomedToMarkers","markerBounds","latLngBounds","forEach","extend","lat","lng","zoomToAllMarkers","zoomToFirst10Markers","zoomToFirst3Markers","zoomToFavoriteMarkers","overlayAdd","visibleLayers","overlayRemove","polylineOptions","rangeSteps","maxHslColor","mapColorMode","mapRangeMin","mapRangeMax","newRangeMin","newRangeMax","speeds","floor","range","colors","val","newMin","newMax","normalizeRange","colorValue","r","g","b","setMapRange","setMapColors","polylineOptionIdxFn","latLng","mapRange","altThresholds","meta","polylinetrackPointFactory","dataArray","climbs","item","trkpt","showSpeed","setMapColorMode","handleMarkerClick","opt","handleMarker2Click","handleMarker3Click","baseLayerChange","setMapChecked","whenReadyHandler","on","setMapRef","Windspeed","geoJSONStyle","weight","fillOpacity","fillColor","geoJSONStyleList","componentWillUnmount","mapId","skipGeojson","zoomToWaypoints","showSearch","showZoomControl","showLayersControl","showScaleControl","showRange","layersControlPosition","mapColors","tempGeoJson","asObject","startMarker","endMarker","distanceMarkers","distances","currentDistance","steps","captureAllEvents","onScroll","whenCreated","onViewportChanged","onLocationfound","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","Browser","mobile","tap","touchZoom","animate","easeLinearity","onOverlayadd","onOverlayremove","whenReady","position","attribution","subdomains","metric","gj","eventHandlers","add","positions","optionIdxFn","options","lineCap","opacity","smoothFactor","zoomAnimation","icons","get","wp","draggable","getDistanceMarker","getSmallMarker","click","zIndexOffset","getMarker","getRaceMarker","currentState","likeWorkout","idxSuggestion","idxAd","limit","hasFollowSugguestions","hasAd","sessionid","getTime","TeamPublicFeedLine","toggleDate","showDate","workoutId","addLikeToFeed","addCommentToFeed","holdingStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","workoutsAddLikeToComment","workoutsAddLikeToCommentReply","workoutsAddCommentToWorkoutComment","workoutsAddCommentToWorkout","addLikeToWorkout","workoutsAddLikeToWorkout","toggleAddComment","shareLink","text","shareUrl","showWorkoutDetail","localName","feed","translatedTextName","translatedTextComment","containerRef","onDogClick","hasShareApi","publicDogs","publicUser","findPublicTeam","teamPublicDogs","storyPublicDogs","findTeamAmbition","ambition","ambitions","teamType","findTeamType","isTeamAdmin","members","some","m","hasLikedWorkout","totalFollowers","followers","isYourTeam","isFollowing","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","username","userLink","hideProfile","mapImage","yrWeather","views","getViews","statistics","adminData","getAdminData","translationName","getTranslation","feedName","feedComment","date","formatDate","hour12","hour","minute","dogs","sledWeight","temperature","formattedCounty","moonIllumination","phaseIcon","formatted_address","deviceInfo","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","shadowTags","dblClick","likeRef","allDogs","distanceKm","elevation","speedAvg","avgGpsMovingSpeed","buttonOnly","data-url","data-title","rel","data-native","AppRaceDetailNotifications","subscribeNotificationTopic","notificationTopics","setNotificationTopic","description","removeAchievement","achievementId","fieldSorter","a","o","dir","substring","reduce","p","n","LastResults","lastResults","currentClass","selectedMusher","selectResult","res","currentCheckpoint","checkpoints","cp","checkpoint","requiredRestMin","direction","requiredRestMinutes","timeEqualization","timestamp","data-resultid","year","month","sortOrder","RaceLiveAddResult","addResult","classid","checkpointId","getClassById","selectedCheckpoint","result","showTimestamp","classId","newResult","editContestant","message","editResult","currentResult","resultid","selectedClassId","raceClassId","resultId","editClass","updateClassesResultLocal","contestants","results","sortContestantsByResult","selectedResult","sortedContestants","isCheckedIn","isCheckedOut","isScratched","prevCheckpoint","isCheckedInPrev","isCheckedOutPrev","isScratchedPrev","sort","getPreviousCheckpoint","lastResult","lastTimestamp","startTime","deleteResult","raceClassResultDelete","doneEditResult","selectCheckpoint","toggleTimestamp","lastCheckpoint","resIn","resOut","resScratched","data-classid","replace","data-direction","showTeamSetting","likeStory","StoryEditInline","saveStory","storyBody","publicFeedUpdate","storyType","saveStoryField","subfield","subvalue","textareaRef","opts","current","data-subfield","data-subvalue","StoryTypeRegular","showStoryDetail","setSelectedImage","selectedImageIdx","components","finalBody","getInlineComponents","offline","component","storyId","params","content","StoryTypeAd","componentWillMount","asUrl","currencty","StoryTypeArticle","StoryPublicFeed","likeIds","closeAllAddComments","toggleShowTeamSetting","showDeleteStory","toggleDeleteStory","reportStory","adminRemoveStory","adminHideStory","deleteStory","doneEdit","hashtag","reports","hasLikedStory","simple","classNames","StoryPoll","pollStory","line","toggleResult","viewResult","lines","trim","hasPolledStory","polls","totalPolls","maxPercent","percent","md5","voteDays","days","finishDate","addDays","isExpired","hasImageRegexp","RegExp","hasPolledLine","aria-valuenow","aria-valuemin","aria-valuemax","extended","data-line","AppRaceDetailUserImages","addRaceUserImage","newRaceUserImage","addUserImage","newUserImage","updateUserImageUpload","removeRaceUserImage","removeUserImage","userImageId","editRaceUserImage","raceUserImageId","editUserImage","element","scrollHeight","tags","Temperature","celciusToFahrenheit","RaceLiveMusherResult","onClickNav","selectedMusherIdx","getTeamById","lastResOut","lastResIn","totalTime","totalMovingTime","totalInCpTime","lastEstTimeOut","lastAvgSpeed","nextBib","prevBib","contestant","now","timeInCp","isStartLine","deltaSec","movingTime","hasBeenInCp","distanceFromPrev","percentRest","reqTotalRestInSec","estTimeOutClass","totalRestClass","estTimeOut","estRest","restInCpSoFar","addDeltaSec","day","isFinishLine","estTimeIn","movingTimeSoFar","distanceMeters","avgSpeedMs","estTimeToNext","estTimeToCpMinutes","estRestMinutes","Files","handleAddImage","uploadStatus","apiUrl","AppRaceDetailNews","addRaceArticle","newRaceArticle","addArticle","newArticle","editRaceArticle","raceArticleId","editArticle","removeRaceArticle","removeArticle","articleId","updateArticleUpload","RaceCommentReply","commentReplyRace","Weight","kgToPounds","requestSent","requestFollowTeam","followRequest","getButton","isBlocked","blockedFollowers","unFollowTeam","data-team","notfollowing","array","loadTeams","publicTeamsToFollow","place","RaceComments","likeRaceComment","likeRaceCommentReply","deleteCommentRace","deleteCommentReplyRace","editCommentRace","editCommentReplyRace","DogScroller","scrollImages","scrollLeft","clientWidth","nearestInt","round","diff","abs","Number","isInteger","sortByName","dogA","dogB","showName","showPosition","finalText","regex","Checkpoints","thClass","thStyle","selectedCheckpointId","widthCp","onClickCheckpoint","cpIdx","Contestants","onClickMusher","tdClass","tdStyle","progressStyle","progressbarStyle","finalContestants","co","coIdx","hasLeftCpPrev","bibIdxOutPrev","estTimeToCpMinutesPrev","hasScratchedPrev","data-bib","isoTime","checkpointResults","hasLeftCp","hasArrivedCp","hasScratched","bibIdxIn","bibIdxOut","percentInCp","nowEpoch","prevCpOutEpoch","timeUsedOnStage","percentDone","data-prevtimestamp","data-timeUsedOnStage","data-estTimeToCpMinutesPrev","data-nowEpoch","data-prevCpOutEpoch","cpId","output","colspan","RaceLiveResults","reloadLastEpoch","sortOrderResults","tableClass","Drawer","children","onCloseClick","captureEvents","RaceTrackingMusherDetail","musher","totalTrackLength","raceClass","getClassByBib","totals","getTotalsByTeamId","totalDistancePercent","fallback","totalDistanceOnTrack","restPercent","restTime","raceTime","xTicks","dataLeft","legendLeft","unitLeft","xTicksRange","partSize","l","parseInputDate","finishTime","diffToFirstFinishTime","radius","showPercentText","showCenterText","centerText","centerTextSize","centerTextY","states","distanceToBehind","distanceToForward","distanceToFirst","distanceToFinish","showXTicks","paddingLeft","yTicksLeftWidth","lineFromXzero","lineFromXmax","dataFillLeft","showYTicksLeft","yTicksLeftPostfix","avgWindowLeft","smoothLeft","rest","Ad","withText","subject","logClick","adStore","ads","apiServer","getApiServer","section","path","currentTeam","postalcode","page","setTime","loadAd","time","match","ad","HeaderCustom","idxConfirm","dataFields","reloadStories","loadStoriesPublicFeed","appContainerScrollTop","setCheckForNewStories","checkForNewStoriesTimer","setInterval","checkForNewStories","clearCheckForNewStories","clearInterval","insertTopRanked","publicFeed","topRankedStories","topRankedRandomized","shuffleArray","startPosition","endPosition","randomPlace","randomInt","isObject","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","insertTeamSuggestions","setLoadMore","unsetLoadMore","teamid","showTeam","hideTeam","dogid","showDog","hideDog","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","postScrollview","getIntersectionObserverHistory","renderContent","obj","hasNewStories","MusherInfoHeader","toggleAdminInfo","showAdminInfo","toggleInfo","showInfo","currentDog","findWaypointByBib","getMusherByBibId","getMusherByBibEmail","inFront","behind","findNearestMushers","headerImage","imageHeader","s3XXLargeLink","topImage1","teamImages","sportsClub","data-submenu","findHarness","JSON","stringify","removeMainImage","byMd5","DogLine","vaccineLogStatuses","vac","inKarens","vaccineAgens","durationEnd","karensDaysLeft","AppRaceDetailSignup","signupToRace","signup","addContestant","newContestant","cellphone","instagram","updateSignup","editSignup","contestantid","contestantId","localUpdateSignup","clearSignupValue","toggleDrawer","showDrawer","findDogsByTeam","signupClass","getRaceClassById","today","chosenDogChipIds","getAlphabet","letter","byNotChosen","signupStartDate","signupEndDate","liveRace","signuppayment","paidSignupfee","signupfee","data-contestantid","classes","rules","termsAndAgreement","declaration","declarationDate","chosenDog","Elevation","meterToFeet","byBib","aHas","AppRaceDetailMushers","toggleDisplayDetails","editUserDetails","adminToggleEditUser","getMusherById","getUserByEmail","toggleEditUserDetails","veterinaryToggleEditUser","toggleVeterinaryUserDetails","toggleAdminSendMessage","showAdminSendMessage","toggleAdminSendInboxMessage","showAdminSendInboxMessage","toggleAdminImport","showAdminImport","adminSignupEdit","adminSignupSetValue","sendEmail","raceId","to","raceclassid","emailResponse","resetEmail","sendInboxMessage","inboxMessage","inboxMessageResponse","resetInboxMessage","parseInput","parseInputTimer","doParseInput","String","headers","jsonData","firstLine","values","jsonObject","v","toLowerCase","addMultipleContestants","filterByClass","toggleSelectedClassId","clearSearchForBib","searchForBib","savePreCheck","chipid","preCheck","dogJournals","dogJournalStore","vetData","dogData","journalData","checkType","getNestedValue","journal","veterinary","displayDetails","raceCheck","isVeterinary","veterinaryUserDetails","filterByBib","selectedUser","selectedUserTeams","scope","hasVaccines","hasMandatoryCheck","mandatoryCheck","raceStatus","raceComment","gpxResultsApproved","alt","asFacebookLink","asInstagramLink","price1","priceSent","price2","price3","dogVaccines","vaccines","vaccineName","dogJournal","veterinaryFirstname","veterinaryLastname","diagnoseId","heartRate","bodyConditionScore","generalFindings","data-chipid","data-shortname","shortName","startOrder","data-value","address","postalplace","countryCode","birthdate","emails","dangerouslySetInnerHTML","__html","$str","data-to","data-raceclassid","data-class","oninput","Speed","kmtToMph","Images","confirmed","deleted","confirmRequest","follow","confirmFollowRequest","followRequestUser","deleteRequest","deleteFollowRequest","hasFollowRequests","reqUser","isDeleted","isConfirmed","data-user","data-follow","WorkoutComments","likeWorkoutComment","likeWorkoutCommentReply","MARGIN_TOP_BACK","MARGIN_BOTTOM","likeRace","resizeAllTextareas","textareaList","document","getElementsByTagName","addNavigation","updateKeyValue","getDogs","flat","getAllClassesSortedBy","loadPublicInteractions","loadRace","hasLikedRace","isLiveRace","showSignup","showTracking","countryRegexp","formattedCountry","resultsHide","veterinaryInfo","trailDescription","program","prices","ingress","cols","DragNDropFileupload","dropRef","handleDrag","handleDragIn","dragCounter","dataTransfer","items","drag","handleDragOut","handleDrop","readLocalFile","handleAddFiles","event","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","addEventListener","updateProgress","fileObj","uploadDone","open","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","readyState","parse","responseText","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","removeEventListener","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","multiple","onchange","isImage","AppRaceDetailClasses","getStateColor","getStateIcon","States","hideDetail","stateDetail","showStateDetail","nextStateDetail","nextState","avgspeed","statespeeds","stateSpeeds","point","start","end","normalizeBetween","prevStateDetail","prevIdx","prevState","showText","currentWidth","data-state","data-duration","data-distance","data-avgspeed","data-statespeeds","data-point","data-start","data-end","data-percent","toggleViews","showViewList","viewUsersArrays","entries","yearObject","week","weekObject","viewUsers","userId","contentIsNotLoaded","reloadInSec","reloadIsActive","ReloadTimer","initComponent","tickReloadTimeer","tick","reloadPercent","AppRaceDetailResults","loadLiveRaceResults","teamIds","bibs","historySteps","replayHistory","showDrawerReplay","classInfo","getRaceTrackerData","raceTrackerRace","getRaceTrackerActiveTeams","loadRaceResults","timerRunning","loadWorkoutSummary","getWorkoutSummaryActiveTeams","reload","RELOAD_INTERVAL_IN_SEC","lockAllWorkoutsInRace","lockMessage","filterByBibs","toggleReplayHistory","cleanupMemoryClass","selectedMusherBib","showDrawerCheckpoint","showDrawerMusher","toggleDrawerMusher","selectMusher","closeDrawerMusher","toggleDrawerCheckpoint","closeDrawerCheckpoint","loadTimes","allClassIds","setSelectedClassId","currentEmail","lastAllowedChangeDate","setHours","getHours","raceAdmins","isRaceAdmin","getPillClass","resultsUrl","resultsText","resultDanger","resultWarning","resultSuccess","totalMushers","totalFinished","currentStages","currentResults","completed","normalizedDuration","weightedNormalizedDuration","isDone","finishedDate","totalWorkoutTimeUsedSec","data-email","isLocked","stage","currentEpoch","inDate","setUTCSeconds","viewBox","svgElevation","avgDogs","lastUpdated","nonstop","totalRest","firstEpoch","firstGpxStartEpoch","lastGpxStartEpoch","mouseData","Gauge","svgRef","heightAdd","prefix","centerTextX","totalY","totalX","totalTextAnchor","completedY","completedX","completedTextAnchor","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","transform","textSize","textSizeSmall","xmlns","svg","preserveAspectRatio","gaugeBackground","cx","cy","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","transition","gaugeText","dominant-baseline","text-anchor","font-size","secondary","FastListLine","removeIntersectionObserver","addIntersectionObserver","dataValues","dataProperties","encodeURI","FastList","deleteIntersectionObserver","intersectionObserver","isIntersecting","currentHeight","childNodes","offsetHeight","display","minHeight","setupIntersectionObserver","window","IntersectionObserverEntry","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","wrapperClasses","hasOwnProperty","contentClasses","RaceLiveCheckpointResult","allResultsCp","lastResultsIn","lastResultsOut","lastResultsLegtimes","lastResultsScratched","prevCp","nextCp","prevResultsOut","nextResultsIn","topImage","onCLick","distanceToNext","hideResults","prevResOut","timeused","nextResIn","estTimeInNextCp","cpSortOrder","jwtToken","leaderboardMode","filterByraceClass","showLeaderBoard","showNews","Results","currentAvgSpeed","MusherInfo","wpData","TrackingMap","handleHistoryPointIndex","historyIdx","historyPointIndex","updateWaypointPosition","playHistory","raceTrackerPointTimestamp","getRaceTrackerTimestamp","playingHistory","pauseHistory","setLeaderboardMode","mode","chooseRaceClass","toggleShowLeaderBoard","hide","toggleShowNews","closeAllDrawers","showResults","onMusherClick","onCpMarkerClick","cpData","toggleResults","setReplaySpeed","toggleFocusOnMusher","musherId","musherid","toggleBib","checkForEnter","maxPoints","toggleLines","showLines","innerWidth","innerHeight","getWindowDimensions","showHeader","drawerClassNames","drawerWidth","linkBase","infoOnMushers","selectedClass","wpCheckpoints","data-musherid","mapCredits","data-speed","countryRegexpMessage"],"mappings":"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","file":"route-app-races.chunk.52768.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\nconst MAX_USERS_TO_DISPLAY = 1;\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleLikes = () => {\n        const { showLikesList } = this.state;\n        this.setState({\n            showLikesList: !showLikesList,\n        });\n    }\n\n    render() {\n        const { showLikesList } = this.state;\n        const { storyStore, teamStore, workoutStore, raceStore } = this.props.stores;\n        const { likes, comments, type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\t\treturn (<>\n            <div class='d-flex justify-content-between mb-2'>\n                {likes && likes.length > 0 && <>\n                    <div class='d-flex flex-row flex-nowrap position-relative mr-3' style='overflow: auto;'>\n                        <span\n                            class='text-muted mr-2'\n                            onClick={this.toggleLikes}\n                        >\n                            <i class='fas fa-thumbs-up text-primary' /> {likes.length}\n                        </span>\n                        {likes.slice(0, MAX_USERS_TO_DISPLAY).map((like) => {\n                            let user;\n                            let teams;\n                            if (type === 'story') {\n                                user = storyStore.findPublicUser(like.user);\n                                teams = storyStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'team') {\n                                user = teamStore.findPublicUser(like.user);\n                                teams = teamStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'workout') {\n                                user = workoutStore.findPublicUser(like.user);\n                                teams = workoutStore.findPublicTeamByMembers(like.user);\n                            } else if (type === 'race') {\n                                user = raceStore.findPublicUser(like.user);\n                                teams = raceStore.findPublicTeamByMembers(like.user);\n                            }\n                            let publicTeam;\n                            if (util.isArray(teams)) {\n                                publicTeam = teams.find(e => e.public === 1);\n                            }\n                            const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                            const shortname = mu.displayNameShort(user);\n                            const name = mu.displayName(user);\n                            return (<>\n                                <span class='font-weight-lighter'>\n                                    {publicTeam ? <>\n                                        <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                                            {name}\n                                        </a>\n                                    </> : <>\n                                        {name}\n                                    </>}\n                                </span>\n                            </>);\n                            // return (<>\n                            //     {publicTeam ? <>\n                            //         <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)}>\n                            //             <div\n                            //                 class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //                 style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                            //             >\n                            //                 {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //             </div>\n                            //         </a>\n                            //     </> : <>\n                            //         <div\n                            //             class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                            //             style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            //         >\n                            //             {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            //         </div>\n                            //     </>}\n                            // </>);\n                        })}\n                        {likes.length > MAX_USERS_TO_DISPLAY && <>\n                            <span class='text-muted font-weight-lighter ml-2' onClick={this.toggleLikes}>\n                                <Text id='likes-comments.and' fields={{ total: likes.length - MAX_USERS_TO_DISPLAY }}>and {likes.length - MAX_USERS_TO_DISPLAY} others.</Text>\n                            </span>\n                        </>}\n                    </div>\n                </>}\n\n                {comments && comments.length > 0 && <span class='float-right text-muted'>\n                    <i class='fas fa-comment text-primary' /> {comments.length}\n                </span>}\n            </div>\n            {showLikesList && <div class='mt-3 mb-3'>\n                {likes && likes.map((like) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(like.user);\n                        teams = storyStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(like.user);\n                        teams = teamStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(like.user);\n                        teams = workoutStore.findPublicTeamByMembers(like.user);\n                    } else if (type === 'race') {\n                        user = raceStore.findPublicUser(like.user);\n                        teams = raceStore.findPublicTeamByMembers(like.user);\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n    \n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentWorkout({ id: workout.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[workout.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ workout, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, col = 12, offset = 0, showAvatar = true, extraClass = '', workout } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class={`col-${col} offset-${offset} ${extraClass}`}>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    {showAvatar && <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>}\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={workout.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {comment.images && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' />  <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\n@observer\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        const { images = [] } = props;\n        this.state = {\n            imageContainer: 1,\n            currentImage1: images[0] || {},\n            currentImage2: {},\n            currentIdx: 0,\n            totalImages: images.length || 0,\n            imageDots: [...Array(images.length || 0).fill(1).map((x, y) => x + y)],\n        };\n    }\n\n    nextImage() {\n        // console.log('next');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx + 1;\n        if (nextIdx > totalImages -1) {\n            nextIdx = 0;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: nextImageContainer,\n        });\n    }\n\n    prevImage() {\n        // console.log('prev');\n        const { images } = this.props;\n        const { totalImages, currentIdx, imageContainer } = this.state;\n        const nextImageContainer = imageContainer === 1 ? 2 : 1;\n        let nextIdx = currentIdx - 1;\n        if (nextIdx < 0) {\n            nextIdx = totalImages - 1;\n        }\n        this.setState({\n            [`currentImage${nextImageContainer}`]: images[nextIdx],\n            currentIdx: nextIdx,\n            imageContainer: imageContainer === 1 ? 2 : 1,\n        });\n    }\n\n    touchStart = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: e.touches[0].pageX,\n        })\n    }\n\n    touchEnd = (e) => {\n        e.stopPropagation();\n        this.setState({\n            startX: undefined,\n            sliding: false,\n        })\n    }\n\n    touchMove = (e) => {\n        e.stopPropagation();\n        // e.preventDefault();\n        const { totalImages } = this.state;\n        if (totalImages > 1) {\n            const { startX, sliding } = this.state;\n            const scrollDistance = 50;\n            const x = e.touches[0].pageX;\n            if (!sliding) {\n                if (x > startX + scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.prevImage();\n                } else if (x < startX - scrollDistance) {\n                    this.setState({ sliding: true })\n                    this.nextImage();\n                }\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.images !== this.props.images) {\n            const { images: nextImages = [] } = nextProps;\n            this.setState({\n                imageContainer: 1,\n                currentImage1: nextImages.length > 0 ? nextImages[0] : {},\n                currentImage2: {},\n                currentIdx: 0,\n                totalImages: nextImages.length || 0,\n                imageDots: [...Array(nextImages.length || 0).fill(1).map((x, y) => x + y)],\n            });\n        }\n    }\n\n    render() {\n        const { currentImage1, currentImage2, imageContainer, totalImages, imageDots, currentIdx } = this.state;\n        const img = this[`image${imageContainer}`];\n        const curImage = imageContainer === 1 ? currentImage1 : currentImage2;\n        const htmlImageRatio = img && img.height ? img.width / img.height : 4 / 3;\n        let imgHeight;\n        let imgWidth;\n        if (curImage.dimensions) {\n            const { width, height, orientation } = curImage.dimensions;\n            if (orientation > 4 && orientation < 9) {\n                imgHeight = width;\n                imgWidth = height;\n            } else {\n                imgHeight = height;\n                imgWidth = width;\n            }\n        }\n        const imageRatio = curImage.dimensions ? imgWidth / imgHeight : htmlImageRatio;\n        if (totalImages <= 0) {\n            return '';\n        }\n\n        return (\n            <div class='w-100'>\n                <div class='border rounded position-relative w-100'\n                    style={`height: calc(85vw / ${imageRatio}); overflow: hidden; transition: all .3s ease-in-out;`}\n                    onTouchstart={this.touchStart}\n                    onTouchend={this.touchEnd}\n                    onTouchmove={this.touchMove}\n                >\n                    {totalImages > 1 && <span class='position-absolute' style='top:0px; right: 5px; z-index: 2000;'><small>{currentIdx + 1}/{totalImages}</small></span>}\n                    {currentImage1 && <div class='position-absolute' style={`${imageContainer === 1 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage1.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image1 = c}\n                        />\n                    </div>}\n                    {currentImage2 && <div class='position-absolute' style={`${imageContainer === 2 ? 'opacity: 1;' :  'opacity: 0;'} transition: all .3s ease-in-out; top: 0; left: 0;`}>\n                        <img loading='lazy' src={currentImage2.s3LargeLink}\n                            class='img-fluid align-middle'\n                            ref={c => this.image2 = c}\n                        />\n                    </div>}\n                </div>\n                {imageDots.length > 1 && <div class='w-100 text-center'>{imageDots.map(i => <span style={`color: ${i === currentIdx + 1 ? '#ffffff' : '#808080'};`}>&bull;</span>)}</div>}\n            </div>\n        );\n    }\n}\n\nexport default ImageSlider;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WorkoutCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentWorkout = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await workoutStore.commentReplyWorkout({ id: workout.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ workout, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentWorkout}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WorkoutCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentStory({ id: story.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[story.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ story, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, story } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={story.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryCommentReply extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    commentStory = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, commentId, inputRefObject = {} } = this.props;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { comment = '' } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await storyStore.commentReplyStory({ id: story.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            }, () => {\n                mu.resizeTextarea(inputRefObject[commentId]);\n            });\n            callback({ story, response, commentId });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    componentDidMount() {\n        const { initCall = () => {} } = this.props;\n        initCall();\n    }\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentStory}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryCommentReply;\n","import { DivIcon, Icon } from 'leaflet';\nimport util from 'preact-util';\n\nimport mu from './musher-util';\n\nconst ICONS = {\n\tadit: new Icon({ iconUrl: './assets/svg/adit.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tairport: new Icon({ iconUrl: './assets/svg/airport.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tanalyse: new Icon({ iconUrl: './assets/svg/analyse.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarchaeological: new Icon({ iconUrl: './assets/svg/archaeological.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarchitecture: new Icon({ iconUrl: './assets/svg/architecture.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarrow_up: new Icon({ iconUrl: './assets/svg/arrow_up.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tarrow_up_double: new Icon({ iconUrl: './assets/svg/arrow_up_double.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tatm: new Icon({ iconUrl: './assets/svg/atm.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tavatar: new Icon({ iconUrl: './assets/svg/avatar.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbag: new Icon({ iconUrl: './assets/svg/bag.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbar: new Icon({ iconUrl: './assets/svg/bar.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbarracks: new Icon({ iconUrl: './assets/svg/barracks.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbattlefield: new Icon({ iconUrl: './assets/svg/battlefield.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbeach: new Icon({ iconUrl: './assets/svg/beach.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbicycle: new Icon({ iconUrl: './assets/svg/bicycle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tboundary_stone: new Icon({ iconUrl: './assets/svg/boundary_stone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbuddhism: new Icon({ iconUrl: './assets/svg/buddhism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbuilding: new Icon({ iconUrl: './assets/svg/building.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tburger: new Icon({ iconUrl: './assets/svg/burger.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbus: new Icon({ iconUrl: './assets/svg/bus.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tbus_stop: new Icon({ iconUrl: './assets/svg/bus_stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcable_car: new Icon({ iconUrl: './assets/svg/cable_car.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcamera: new Icon({ iconUrl: './assets/svg/camera.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcamp_site: new Icon({ iconUrl: './assets/svg/camp_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcar: new Icon({ iconUrl: './assets/svg/car.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcaravan_site: new Icon({ iconUrl: './assets/svg/caravan_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcartography: new Icon({ iconUrl: './assets/svg/cartography.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcash: new Icon({ iconUrl: './assets/svg/cash.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcastle: new Icon({ iconUrl: './assets/svg/castle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcastle_defensive: new Icon({ iconUrl: './assets/svg/castle_defensive.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcave_entrance: new Icon({ iconUrl: './assets/svg/cave_entrance.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcemetery: new Icon({ iconUrl: './assets/svg/cemetery.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tchapel: new Icon({ iconUrl: './assets/svg/chapel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tchristianism: new Icon({ iconUrl: './assets/svg/christianism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcinema: new Icon({ iconUrl: './assets/svg/cinema.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcinema_alt: new Icon({ iconUrl: './assets/svg/cinema_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcity: new Icon({ iconUrl: './assets/svg/city.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcityhall: new Icon({ iconUrl: './assets/svg/cityhall.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tclean: new Icon({ iconUrl: './assets/svg/clean.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcompass: new Icon({ iconUrl: './assets/svg/compass.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcompass_alt: new Icon({ iconUrl: './assets/svg/compass_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tconstruction: new Icon({ iconUrl: './assets/svg/construction.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcontour: new Icon({ iconUrl: './assets/svg/contour.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcourt_house: new Icon({ iconUrl: './assets/svg/court_house.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcrown: new Icon({ iconUrl: './assets/svg/crown.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tcrucifix: new Icon({ iconUrl: './assets/svg/crucifix.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdata: new Icon({ iconUrl: './assets/svg/data.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdatabase: new Icon({ iconUrl: './assets/svg/database.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdentist: new Icon({ iconUrl: './assets/svg/dentist.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdisabled: new Icon({ iconUrl: './assets/svg/disabled.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdislike: new Icon({ iconUrl: './assets/svg/dislike.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdownload: new Icon({ iconUrl: './assets/svg/download.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdrag_lift: new Icon({ iconUrl: './assets/svg/drag_lift.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tdrop: new Icon({ iconUrl: './assets/svg/drop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\teye: new Icon({ iconUrl: './assets/svg/eye.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfacebook: new Icon({ iconUrl: './assets/svg/facebook.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfire: new Icon({ iconUrl: './assets/svg/fire.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfishing: new Icon({ iconUrl: './assets/svg/fishing.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tflag: new Icon({ iconUrl: './assets/svg/flag.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tforbidden: new Icon({ iconUrl: './assets/svg/forbidden.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfort: new Icon({ iconUrl: './assets/svg/fort.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfountain: new Icon({ iconUrl: './assets/svg/fountain.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfuel: new Icon({ iconUrl: './assets/svg/fuel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tfuel_alt: new Icon({ iconUrl: './assets/svg/fuel_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgallery: new Icon({ iconUrl: './assets/svg/gallery.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgear: new Icon({ iconUrl: './assets/svg/gear.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgithub: new Icon({ iconUrl: './assets/svg/github.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgo: new Icon({ iconUrl: './assets/svg/go.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tgolf: new Icon({ iconUrl: './assets/svg/golf.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\theart: new Icon({ iconUrl: './assets/svg/heart.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thelicopter: new Icon({ iconUrl: './assets/svg/helicopter.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thome: new Icon({ iconUrl: './assets/svg/home.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thospital: new Icon({ iconUrl: './assets/svg/hospital.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thostel: new Icon({ iconUrl: './assets/svg/hostel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thotel: new Icon({ iconUrl: './assets/svg/hotel.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\thotel_alt: new Icon({ iconUrl: './assets/svg/hotel_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tice_ring: new Icon({ iconUrl: './assets/svg/ice_ring.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinformation: new Icon({ iconUrl: './assets/svg/information.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinternet: new Icon({ iconUrl: './assets/svg/internet.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tinvisible: new Icon({ iconUrl: './assets/svg/invisible.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tislamism: new Icon({ iconUrl: './assets/svg/islamism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tisland: new Icon({ iconUrl: './assets/svg/island.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tjudaism: new Icon({ iconUrl: './assets/svg/judaism.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlaptop: new Icon({ iconUrl: './assets/svg/laptop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlibrary: new Icon({ iconUrl: './assets/svg/library.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlighthouse: new Icon({ iconUrl: './assets/svg/lighthouse.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlike: new Icon({ iconUrl: './assets/svg/like.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlinkedin: new Icon({ iconUrl: './assets/svg/linkedin.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlion: new Icon({ iconUrl: './assets/svg/lion.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tlock: new Icon({ iconUrl: './assets/svg/lock.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmagnifier: new Icon({ iconUrl: './assets/svg/magnifier.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmall: new Icon({ iconUrl: './assets/svg/mall.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmap: new Icon({ iconUrl: './assets/svg/map.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmapkey: new Icon({ iconUrl: './assets/svg/mapkey.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmapshakers: new Icon({ iconUrl: './assets/svg/mapshakers.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarina: new Icon({ iconUrl: './assets/svg/marina.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarker: new Icon({ iconUrl: './assets/svg/marker.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmarket_place: new Icon({ iconUrl: './assets/svg/market_place.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmine: new Icon({ iconUrl: './assets/svg/mine.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmonument: new Icon({ iconUrl: './assets/svg/monument.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmountain: new Icon({ iconUrl: './assets/svg/mountain.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmuseum: new Icon({ iconUrl: './assets/svg/museum.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tmusic: new Icon({ iconUrl: './assets/svg/music.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnature: new Icon({ iconUrl: './assets/svg/nature.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnocamera: new Icon({ iconUrl: './assets/svg/nocamera.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnonsmoking: new Icon({ iconUrl: './assets/svg/nonsmoking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth: new Icon({ iconUrl: './assets/svg/north.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt: new Icon({ iconUrl: './assets/svg/north_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt_II: new Icon({ iconUrl: './assets/svg/north_alt_II.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tnorth_alt_III: new Icon({ iconUrl: './assets/svg/north_alt_III.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\toppositeway: new Icon({ iconUrl: './assets/svg/oppositeway.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tparking: new Icon({ iconUrl: './assets/svg/parking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpharmacy: new Icon({ iconUrl: './assets/svg/pharmacy.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpicnic_site: new Icon({ iconUrl: './assets/svg/picnic_site.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpitch: new Icon({ iconUrl: './assets/svg/pitch.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tplayground: new Icon({ iconUrl: './assets/svg/playground.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tplayground_alt: new Icon({ iconUrl: './assets/svg/playground_alt.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpolice: new Icon({ iconUrl: './assets/svg/police.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpost_office: new Icon({ iconUrl: './assets/svg/post_office.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tpub: new Icon({ iconUrl: './assets/svg/pub.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\trestaurant: new Icon({ iconUrl: './assets/svg/restaurant.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\trocks: new Icon({ iconUrl: './assets/svg/rocks.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\truins: new Icon({ iconUrl: './assets/svg/ruins.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsaddle: new Icon({ iconUrl: './assets/svg/saddle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsailboat: new Icon({ iconUrl: './assets/svg/sailboat.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tschool: new Icon({ iconUrl: './assets/svg/school.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tseal: new Icon({ iconUrl: './assets/svg/seal.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tshelter: new Icon({ iconUrl: './assets/svg/shelter.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsinkhole: new Icon({ iconUrl: './assets/svg/sinkhole.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tskype: new Icon({ iconUrl: './assets/svg/skype.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsmartphone: new Icon({ iconUrl: './assets/svg/smartphone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsmoking: new Icon({ iconUrl: './assets/svg/smoking.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsport_centre: new Icon({ iconUrl: './assets/svg/sport_centre.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tspring: new Icon({ iconUrl: './assets/svg/spring.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsquare: new Icon({ iconUrl: './assets/svg/square.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstadium: new Icon({ iconUrl: './assets/svg/stadium.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstar: new Icon({ iconUrl: './assets/svg/star.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstop: new Icon({ iconUrl: './assets/svg/stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tstupa: new Icon({ iconUrl: './assets/svg/stupa.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tsupermarket: new Icon({ iconUrl: './assets/svg/supermarket.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tswimming_pool: new Icon({ iconUrl: './assets/svg/swimming_pool.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttelephone: new Icon({ iconUrl: './assets/svg/telephone.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttheatre: new Icon({ iconUrl: './assets/svg/theatre.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tticket: new Icon({ iconUrl: './assets/svg/ticket.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttoilet: new Icon({ iconUrl: './assets/svg/toilet.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttower: new Icon({ iconUrl: './assets/svg/tower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttown: new Icon({ iconUrl: './assets/svg/town.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttraffic_signal: new Icon({ iconUrl: './assets/svg/traffic_signal.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttrain: new Icon({ iconUrl: './assets/svg/train.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttram: new Icon({ iconUrl: './assets/svg/tram.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttram_stop: new Icon({ iconUrl: './assets/svg/tram_stop.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttree_cinofer: new Icon({ iconUrl: './assets/svg/tree_cinofer.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttree_leaf: new Icon({ iconUrl: './assets/svg/tree_leaf.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\ttriangle: new Icon({ iconUrl: './assets/svg/triangle.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tunderground: new Icon({ iconUrl: './assets/svg/underground.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tunesco: new Icon({ iconUrl: './assets/svg/unesco.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tuniversity: new Icon({ iconUrl: './assets/svg/university.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tupload: new Icon({ iconUrl: './assets/svg/upload.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tviewpoint: new Icon({ iconUrl: './assets/svg/viewpoint.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tviewtower: new Icon({ iconUrl: './assets/svg/viewtower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvillage: new Icon({ iconUrl: './assets/svg/village.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvineyard: new Icon({ iconUrl: './assets/svg/vineyard.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tvolcano: new Icon({ iconUrl: './assets/svg/volcano.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twater_tower: new Icon({ iconUrl: './assets/svg/water_tower.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twater_well: new Icon({ iconUrl: './assets/svg/water_well.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twatermill: new Icon({ iconUrl: './assets/svg/watermill.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twaterpark: new Icon({ iconUrl: './assets/svg/waterpark.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twaterwork: new Icon({ iconUrl: './assets/svg/waterwork.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twayside_cross: new Icon({ iconUrl: './assets/svg/wayside_cross.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twind_generator: new Icon({ iconUrl: './assets/svg/wind_generator.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\twindmill: new Icon({ iconUrl: './assets/svg/windmill.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n\tzoo: new Icon({ iconUrl: './assets/svg/zoo.svg', iconSize: [30, 30], iconAnchor: [10, 30] }),\n}\n\nclass Icons {\n    static get(icon) {\n        return ICONS[icon];\n    }\n\n    static list() {\n        return Object.keys(ICONS);\n    }\n\n\tstatic getDiv({ icon, title, body, color, textColor = '#333333', borderColor = 0, iconWidth = 150, iconHeight = 70 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight + 30],\n\t\t\ticonAnchor: [15, iconHeight + 30],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' style='width: ${iconWidth}px; height: ${iconHeight + 30}px; line-height: 1.1em;'>\n\t\t\t\t<style>\n\t\t\t\t\t#${id} .map-marker:after {\n\t\t\t\t\t\tborder-top-color: ${color};\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t\t<div class='map-marker text-white p-1' style='color: ${textColor}; background-color: ${color}; height: ${iconHeight}px;'>\n\t\t\t\t\t<nobr><strong>${title}</strong></nobr><br />\n\t\t\t\t\t<span class='font-weight-light'><nobr>${body}</nobr></span>\n\t\t\t\t</div>\n\t\t\t</div>`,\n\t\t});\n    }\n\n\tstatic getRaceMarker({\n\t\ticon,\n\t\tbib,\n\t\tspeed = '',\n\t\tbearing = '',\n\t\trank,\n\t\tflag = '',\n\t\timage,\n\t\ttitle,\n\t\tbody,\n\t\tcolor,\n\t\ttextColor = '#333333',\n\t\tborderColor = 0,\n\t\ticonWidth = 180,\n\t\ticonHeight = 15,\n\t\ticonAnchorX = 5,\n\t\ticonAnchorY = 5,\n\t\timageCirlceRadius = 10,\n\n\t\tlineHeight = '0.9em',\n\t\tfontSize = '0.9em',\n\t\tpaddingTop = '3px',\n\t\tpaddingBottom = '3px',\n\n\t\tlargeMarkers,\n\n\t\tmapChecked,\n\t\ttitlePrefix = '',\n\t}) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\n\t\tconst dotColor = mu.getRankingColor(rank);\n\t\tconst mapIsDark = /dark/i.test(mapChecked);\n\n\n\t\tlet imageCircle = image ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-circle imageRounded imageRoundedSmallIcon'\n\t\t\t\tstyle='background-image: url(\"${image}\"); background-size: cover; border: 1px ${dotColor} solid;'\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t` : '';\n\t\timageCircle = bib || rank ? `\n\t\t\t<div\n\t\t\t\tclass='px-0 text-center' style='background-color: ${dotColor ? dotColor : ''}'\n\t\t\t>\n\t\t\t\t${bib || rank}\n\t\t\t</div>\n\t\t` : imageCircle;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight],\n\t\t\ticonAnchor: [iconAnchorX, iconAnchorY],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: iconAnchorX > 100 ? `\n\t\t\t\t<div class='d-flex flex-nowrap overflow-hidden justify-content-end' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: ${lineHeight}; font-size: ${fontSize};'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='${mapIsDark ? 'text-white' : 'text-dark'} pl-3 pr-1 rounded-pill-left rounded-none ${mapIsDark ? 'bg-dark' : 'bg-white'} overflow-hidden'\n\t\t\t\t\t\tstyle='padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>\n\t\t\t\t\t\t\t${titlePrefix} <strong>${title}</strong> ${flag}\n\t\t\t\t\t\t</nobr>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-white font-weight-bolder ${largeMarkers ? 'pr-3 pl-2' : 'pr-2 pl-1'} rounded-pill-right rounded-none'\n\t\t\t\t\t\tstyle='background-color: ${dotColor ? dotColor : ''}; padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t${imageCircle}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='rounded rounded-circle ml-2 mt-1' style='width: ${imageCirlceRadius}px; height: ${imageCirlceRadius}px; background-color: ${dotColor};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\t\n\t\t\t` : `\n\t\t\t\t<div class='d-flex flex-nowrap overflow-hidden' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: ${lineHeight}; font-size: ${fontSize};'>\n\t\t\t\t\t<div class='rounded rounded-circle mr-2 mt-1' style='width: ${imageCirlceRadius}px; height: ${imageCirlceRadius}px; background-color: ${dotColor};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='text-white font-weight-bolder ${largeMarkers ? 'pl-3 pr-2' : 'pl-2 pr-1'} rounded-pill-left rounded-none'\n\t\t\t\t\t\tstyle='background-color: ${dotColor ? dotColor : ''}; padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t${imageCircle}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='${mapIsDark ? 'text-white' : 'text-dark'} pr-3 pl-1 rounded-pill-right rounded-none ${mapIsDark ? 'bg-dark' : 'bg-white'} overflow-hidden'\n\t\t\t\t\t\tstyle='padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>\n\t\t\t\t\t\t\t${flag} <strong>${title}</strong> ${titlePrefix}\n\t\t\t\t\t\t</nobr>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t});\n\t\t// ${speed ? `${util.format(speed, 1)} km/t` : ''} ${bearing ? mu.windDirection(bearing) : ''}\n    }\n\n\tstatic getDistanceMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [20, 20],\n\t\t\ticonAnchor: [10, 10],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' class='rounded-circle bg-primary text-white text-center' style='width: 20px; height: 20px;'>\n\t\t\t\t<strong>${title}</strong><br />\n\t\t\t\t<span class='font-weight-light'>${body}</span>\n\t\t\t</div>`,\n\t\t});\n    }\n\n\t// static getMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t// \tconst id = `img-${util.randomPassword()}`;\n\t// \treturn new DivIcon({\n\t// \t\ticonSize: [10, 10],\n\t// \t\ticonAnchor: [5, 5],\n\t// \t\tclassName: 'my-div-icon',\n\t// \t\thtml: `<div id='${id}' class='rounded-circle bg-primary text-white text-center' style='width: 10px; height: 10px;'>\n\t// \t\t\t<strong>${title}</strong><br />\n\t// \t\t\t<span class='font-weight-light'>${body}</span>\n\t// \t\t</div>`,\n\t// \t});\n    // }\n\tstatic getMarker({\n\t\ticon,\n\t\tbib,\n\t\trank,\n\t\tflag = '',\n\t\timage,\n\t\ttitle,\n\t\tbody,\n\t\tcolor = '#a0a0a0',\n\t\ttextColor = '#333333',\n\t\tborderColor = 0,\n\n\t\ticonWidth = 250,\n\t\ticonHeight = 20,\n\t\ticonAnchorX = 7,\n\t\ticonAnchorY = 7,\n\n\t\timageCirlceRadius = 10,\n\n\t\tlineHeight = '1.0em',\n\t\tfontSize = '1.0em',\n\t\tpaddingTop = '3px',\n\t\tpaddingBottom = '3px',\n\n\t\tmapChecked,\n\t}) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\tconst { r, g, b } = util.hsl2Rgb(color, 100, 60);\n\t\tconst { r: wr, g: wg, b: wb } = util.hsl2Rgb(100 - borderColor, 100, 50);\n\n\t\tconst dotColor = mu.getRankingColor(bib || rank) || '#808080';\n\t\tconst mapIsDark = /dark/i.test(mapChecked);\n\n\t\tlet imageCircle = image ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-circle imageRounded imageRoundedSmallIcon'\n\t\t\t\tstyle='background-image: url(\"${image}\"); background-size: cover; border: 1px ${dotColor} solid;'\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</div>\n\t\t` : '';\n\t\timageCircle = bib || rank ? `\n\t\t\t<div\n\t\t\t\tclass='rounded-pill-both px-1 text-center ${dotColor ? '' : 'bg-primary'}' style='background-color: ${dotColor ? dotColor : ''}'\n\t\t\t>\n\t\t\t\t${bib || rank}\n\t\t\t</div>\n\t\t` : imageCircle;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [iconWidth, iconHeight],\n\t\t\ticonAnchor: [iconAnchorX, iconAnchorY],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `\n\t\t\t\t<div class='d-flex flex-nowrap overflow-hidden' id='${id}' style='width: ${iconWidth}px; height: ${iconHeight}px; line-height: ${lineHeight}; font-size: ${fontSize};'>\n\t\t\t\t\t<div class='rounded rounded-circle mr-2 mt-1' style='width: ${imageCirlceRadius}px; height: ${imageCirlceRadius}px; background-color: ${dotColor};'>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='${mapIsDark ? 'text-white' : 'text-dark'} px-3 pl-1 rounded-pill-both rounded-none ${mapIsDark ? 'bg-info' : 'bg-info'} overflow-hidden'\n\t\t\t\t\t\tstyle='padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};'\n\t\t\t\t\t>\n\t\t\t\t\t\t<nobr>${flag} <strong>${title}</strong></nobr>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t});\n    }\n\n\n\tstatic getSmallMarker({ title = '', body = '', color, textColor = '#888', borderColor = 0 }) {\n\t\tconst id = `img-${util.randomPassword()}`;\n\t\treturn new DivIcon({\n\t\t\ticonSize: [6, 6],\n\t\t\ticonAnchor: [3, 3],\n\t\t\tclassName: 'my-div-icon',\n\t\t\thtml: `<div id='${id}' class='rounded-circle bg-success text-white text-center' style='width: 5px; height: 5px;'>\n\t\t\t\t<strong>${title}</strong><br />\n\t\t\t\t<span class='font-weight-light'>${body}</span>\n\t\t\t</div>`,\n\t\t});\n    }\n\n}\n\nexport default Icons;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                url: '',\n            }\n        });\n    };\n\n    removeLink = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeLink({\n            id: object.id,\n            name,\n            linkId: id,\n        });\n    }\n\n    render() {\n        const { showFiles = true, object = {} } = this.props;\n\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.links || object.links.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-link' /></div>\n                                        <h3><Text id='dogs.no-links-title'>No links for this dog!</Text></h3>\n                                        <Text id='dogs.no-links-text'>You can add links to this dog. Ie. Links to Facebook page, Instagram page, blogg, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.links && object.links.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeLink}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.link-add'>Add new link</Text></summary>\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.link-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.link-name-help'>Name of link</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.link-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.link-url-help'>URL of link</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.link-add'>Add link</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {};\n\n@observer\nclass Loading extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { goto, gotoTitle, routerName } = this.props;\n        return (\n            <div class='row h-100'>\n                <div class='col-12 text-center my-auto'>\n                    <div class='spinner-border text-primary' style='width: 8rem; height: 8rem;' role='status'>\n                        <span class='sr-only'><Text id='home.loading'>Loading...</Text></span>\n                    </div>\n                    <h3 class='mt-4'><Text id='home.loading'>Loading...</Text></h3>\n                    {goto && <>\n                        <a class='my-4 btn btn-primary btn-lg btn-block' native href={goto}>{gotoTitle} <i class='fas fa-angle-double-right ml-2' /></a>\n                        <small class='text-muted'>{routerName}</small>\n                    </>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../../../components/form/images';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceAdd extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            comment: {\n                body: '',\n                images: [],\n            },\n            showAddImage: false,\n            sendButtonEnabled: true,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    commentRace = async () => {\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { callback = () => {}, inputRefObject = {} } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment, showAddImage } = this.state;\n        this.setState({ sendButtonEnabled: false });\n\t\tconst response = await raceStore.commentRace({ id: race.id, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: {\n                    body: '',\n                    images: [],\n                },\n            }, () => {\n                mu.resizeTextarea(inputRefObject[race.id]);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback({ race, response });\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { comment } = this.state;\n        comment.images.push(...value);\n        this.setState({ comment });\n    }\n\n    addImage = () => {\n        const { showAddImage = false } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { inputRef, race } = this.props;\n        const { comment, showAddImage, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (<>\n            <div>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <div class='border rounded rounded-lg position-relative'>\n                                    <Localizer>\n                                        <textarea\n                                            class='form-control-plaintext px-2'\n                                            type='text'\n                                            placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                            onInput={linkState(this, 'comment.body')}\n                                            onKeyUp={mu.resizeTextarea}\n                                            onFocus={mu.resizeTextarea}\n                                            style='height: 2.3em;'\n                                            value={comment.body}\n                                            ref={inputRef}\n                                        />\n                                    </Localizer>\n\n                                    <div class='position-absolute' style='top: 8px; right: 10px; font-size: 1.2em;'>\n                                        <i class='fas fa-image pointerCursor'\n                                            data-id={race.id}\n                                            onClick={this.addImage}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                {showAddImage && <>\n                    <div class='col-12 text-center'>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {util.isArray(comment.images) && comment.images.map(img => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> <Text id='comments.remove-image'>Remove</Text></button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={comment} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default RaceAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom(false);\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Achievements from '../../components/form/achievements';\nimport Links from '../../components/form/links';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n\n        if (!image.dataset.retry) {\n            image.dataset.retry = 0;\n        }\n        image.dataset.retry = parseInt(image.dataset.retry, 10) + 1;\n        if (image.dataset.retry > 5) {\n            return false;\n        }\n\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeImage({\n            id: dog.id,\n            name: imageName,\n        });\n    }\n\n    removeFile = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = this.props;\n        const fileName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        dogStore.removeFile({\n            id: dog.id,\n            name: fileName,\n        });\n    }\n\n    render() {\n        const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField, refName, showImages = false, showFiles = true } = this.props;\n        let value = dog[field] || '';\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(dog[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!dog.files || dog.files.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-file' /></div>\n                                        <h3><Text id='dogs.no-files-title'>No files attached to this dog!</Text></h3>\n                                        <Text id='dogs.no-files-text'>You can upload files to this dog inside edit. These files can be of any type. Ie: Certificates, test, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {dog.files && dog.files.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.createdDate, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='font-weight-lighter mr-2'>{util.formatBytes(file.size, 1)}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeFile}\n                                            data-name={file.name}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                    <Files saved={saved} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type='text' class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        rows={10}\n                    />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'links') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Links saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (field === 'achievements') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Achievements saved={saved} stores={this.props.stores} object={dog} field={field} updateField={updateField} />\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    {showImages && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n                                {(!dog.images || dog.images.length === 0) && <>\n                                    <div class='text-center text-muted mb-3'>\n                                        <div class='display-1'><i class='fas fa-images' /></div>\n                                        <h3><Text id='dogs.no-images-title'>No images for this dog!</Text></h3>\n                                        <Text id='dogs.no-images-text'>You can add more images to this dog. Puppy pictures, workout pictures, lazy summer pictures, etc. All is a nice way to create a better profile for this dog.</Text>\n                                    </div>\n                                </>}\n                                {field === 'image' ? <>\n                                    {dog.image && dog.image.s3SmallLink && <div class='col-3 p-1'>\n                                        <img src={dog.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={dog.image.name}\n                                        ><i class='fas fa-trash' /> Remove</button>\n                                        <span class='badge badge-success'>Main</span>\n                                    </div>}\n                                </> : <>\n                                    {dog.images && dog.images.map(img => (\n                                        <div class='col-3 p-1'>\n                                            <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                            <button class='btn btn-sm btn-link'\n                                                onClick={this.removeImage}\n                                                data-name={img.name}\n                                            ><i class='fas fa-trash' /> Remove</button>\n                                        </div>\n                                    ))}\n                                </>}\n\n                            </div>\n                        </div>\n                    </>}\n\n                    {field === 'image' ? <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} addToImages={false} />\n                    </> : <>\n                        <Images saved={saved} object={dog} field={field} updateField={updateField} autoOpen={false} />\n                    </>}\n\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'datalist') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                    <input list={`list-${field}`} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                        // onInput={e => console.log(e)}\n                        // onChange={e => console.log(e)}\n                    />\n                    <datalist id={`list-${field}`}>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </datalist>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'select') {\n            return (\n                <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n\n                    <select type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        data-id={dog.id}\n                        data-field={field}\n                        onInput={onInput}\n                    >\n                        <option value=''>-- Velg kjønn --</option>\n                        {datalist.map(el => (\n                            <option value={el[0]}>{el[1]}</option>\n                        ))}\n                    </select>\n                    {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label> {refName}\n                <input type={type} class={`form-control ${saved[`${field}.${dog.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    value={value}\n                    data-id={dog.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${dog.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Teams extends Component {\n    toggleType(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        if (value === null) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.teams.indexOf(value) > -1) {\n            dogStore.removeTeam({ id: object.id, team: value });\n        } else if (object.team) {\n            dogStore.addTeam({ id: object.id, team: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { teams } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        const { highlight } = this.props;\n\n        return (\n            <div class={`form-group mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {teams && teams.map((team, idx) => {\n                                    const isPrimary = value === team.id;\n                                    const isSecondary = object && util.isArray(object.teams) && object.teams.indexOf(team.id) > -1;\n                                    return (\n                                        <div class='col mb-0 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleType(team.id)}\n                                            >\n                                                {object.hintTeam === team.id && <span class='float-right text-primary'><i class='fas fa-circle' /></span>}\n                                                <i class='fas fa-users mr-2' />\n                                                {team.name}\n\n                                                {highlight && highlight.indexOf(team.id) > -1 && <>\n                                                    {value === team.id ? <>\n                                                        <i class='fas fa-check float-right' />\n                                                    </> : <>\n                                                        <div class='spinner-grow text-warning float-right' role='status'>\n                                                            <span class='sr-only'>Loading...</span>\n                                                        </div>\n                                                        <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                                    </>}\n                                                </>}\n\n                                                <small>\n                                                    {isPrimary && <span class='badge badge-pill badge-primary'>Primary</span>}\n                                                    {isSecondary && <span class='badge badge-pill badge-secondary'>Secondary</span>}\n                                                </small>\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Harnesses extends Component {\n    toggleType(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { harnesses, user } = userStore;\n        const { language = 'en' } = user;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={icon} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {harnesses && harnesses.map((harness, idx) => (\n                                    <div class='col px-0 mb-2'\n                                        ref={value === harness.id ? c => this.container = c : null}\n                                    >\n                                        <div class={`border\n                                            rounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === harnesses.length ? 'rounded-pill-right': '')}\n                                            p-2 ${value === harness.id ? 'bg-success' : ''}`}\n                                            style={`border-bottom: 3px solid ${harness.colorNonstop} !important;`}\n                                            onClick={() => this.toggleType(harness.id)}\n                                        >\n                                            {harness.lang && harness.lang[language] ? harness.lang[language] : harness.name}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Status extends Component {\n    // toggleStatus(typeId) {\n    //     const { object, type, field, updateField, isNew } = this.props;\n    //     let value = toJS(object[field]);\n    //     if (value === typeId) {\n    //         value = 0;\n    //     } else {\n    //         value = typeId;\n    //     }\n    //     updateField({ id: object.id, field, value, type, isNew });\n    // }\n\n    toggleStatus(typeId) {\n        const { dogStore } = this.props.stores;\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = 0;\n        } else {\n            value = typeId;\n        }\n        if (value === 0) {\n            updateField({ id: object.id, field, value, type, isNew });\n        } else if (object.statuses.indexOf(value) > -1) {\n            dogStore.removeStatus({ id: object.id, status: value });\n        } else if (object.status) {\n            dogStore.addStatus({ id: object.id, status: value });\n        } else {\n            updateField({ id: object.id, field, value, type, isNew });\n        }\n    }\n\n    componentDidMount() {\n\t\tif (this.container) {\n\t\t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\t\t}\n\t}\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogstatuses, user } = userStore;\n        const { language } = user;\n\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        <div class='w-100 overflow-hidden'>\n                            <div\n                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                            >\n                                {dogstatuses && dogstatuses.map((status, idx) => {\n                                    const isPrimary = value === status.id;\n                                    const isSecondary = object && util.isArray(object.statuses) && object.statuses.indexOf(status.id) > -1;\n                                    return (\n                                        <div class='col mb-2 px-0'\n                                            ref={(isPrimary || isSecondary) ? c => this.container = c : null}\n                                        >\n                                            <button\n                                                class={`btn btn-block\n            \t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === dogstatuses.length ? 'rounded-pill-right': '')}\n                                                    btn${(isPrimary || isSecondary) ? '' : '-outline'}-${isSecondary ? 'info' : 'success'}\n                                                    text-nowrap overflow-hidden`}\n                                                style='text-overflow: ellipsis;'\n                                                onClick={() => this.toggleStatus(status.id)}\n                                            >\n                                                {language && status.lang && status.lang[language] ? status.lang[language] : status.name}\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass Position extends Component {\n    toggleStatus(typeId) {\n        const { object, type, field, updateField, isNew } = this.props;\n        let value = toJS(object[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: object.id, field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { dogPositions } = userStore;\n        const { saved, object, field, title, icon, help } = this.props;\n        const value = toJS(object[field]);\n        return (\n            <div class={`form-group  mb-4 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <div class='container-fluid px-0'>\n                    <div class='row'>\n                        {dogPositions && dogPositions.map(status => (\n                            <div class='offset-2 col-8 mb-2'>\n                                <div class={`border rounded rounded-pill px-3 py-1 bg-${value === status.id ? status.class || 'success' : ''}`}\n                                    onClick={() => this.toggleStatus(status.id)}\n                                    style='line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                >\n                                    <small>\n                                        {status.name}\n                                    </small>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dogs.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDog: {},\n            submenu: props.submenu || 'info',\n        };\n        this.updateTimer = {};\n    }\n\n    async loadDog(props = this.props) {\n        const { id } = props;\n\t\tconst { dogStore } = this.props.stores;\n        dogStore.cleanupMemoryDetail();\n        await dogStore.load(id, false, { addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n    }\n\n\tresetDog() {\n\t\tthis.setState({\n            newDog: {},\n            createNew: false,\n        });\n\t}\n\n\tinsertDog = async () => {\n\t\tconst { newDog } = this.state;\n\t\tconst { dogStore } = this.props.stores;\n\t\tawait dogStore.insert({ ...newDog });\n        this.resetDog();\n        route(`/dogs/`);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype, isNew } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype, isNew });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const { dogStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { dog } = dogStore;\n        if (field === 'images') {\n            if (Array.isArray(dog.images) && Array.isArray(value)) {\n                localObjectValue = [...dog.images, ...value];\n            }\n        }\n        if (field === 'files') {\n            if (Array.isArray(dog.files)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.files, ...value];\n                } else {\n                    localObjectValue = [...dog.files, value];\n                }\n            }\n        }\n        if (field === 'achievements') {\n            if (Array.isArray(dog.achievements)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.achievements, ...value];\n                } else {\n                    localObjectValue = [...dog.achievements, value];\n                }\n            }\n        }\n        if (field === 'links') {\n            if (Array.isArray(dog.links)) {\n                if (Array.isArray(value)) {\n                    localObjectValue = [...dog.links, ...value];\n                } else {\n                    localObjectValue = [...dog.links, value];\n                }\n            }\n        }\n\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n        if (isNew) {\n            dogStore.updateObjectKeyValue('newDog', field, value);\n        } else {\n            dogStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { dogStore } = this.props.stores;\n        await dogStore.saveField(id, field, value);\n    }\n\n    chooseMother = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const motherDog = dogStore.findDog(dogId);\n\n        if (motherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: motherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherName', value: motherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'motherChipId', value: motherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'mother', value: null, skipTimer: true });\n        }\n    }\n\n    chooseFather = (e) => {\n        const { dogStore } = this.props.stores;\n        const { dog } = dogStore;\n        const dogId = parseInt(e.target.value, 10);\n        const fatherDog = dogStore.findDog(dogId);\n\n        if (fatherDog) {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: fatherDog.id, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherName', value: fatherDog.name, skipTimer: true });\n            this.updateFieldValue({ id: dog.id, field: 'fatherChipId', value: fatherDog.chipId, skipTimer: true });\n        } else {\n            this.updateFieldValue({ id: dog.id, field: 'father', value: null, skipTimer: true });\n        }\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/edit/${dog.id}/${submenu}`);\n\t}\n\n    back = () => {\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}`);\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadDog();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.id !== this.props.id) {\n            this.loadDog(nextProps);\n        }\n    }\n\n\trender() {\n        const { createNew, newDog, submenu } = this.state;\n\t\tconst { dogStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\t\tconst { insertStatus, saved, dog } = dogStore;\n        const dogFemales = dogStore.findDogsByGender('female');\n        const dogMales = dogStore.findDogsByGender('male');\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const { name } = dog;\n\n\t\treturn (<>\n            <div class='d-flex position-relative'>\n                <div class={`text-center border rounded-circle imageRounded float-right`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\");` : ''}>\n                    {!dog.image && <i class='fas fa-dog text-muted mt-3' style='font-size: 40px;' />}\n                </div>\n                <div class='flex-grow-1 pl-3'>\n                    <h5>\n                        {name}\n                        {hasBirthday && <>\n                            <i class='fas fa-birthday-cake ml-3' />\n                        </>}\n                    </h5>\n                    <span>\n                        {daysUntilBirthday < 7 && <>\n                            <span class='text-muted mr-2'>\n                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                            </span>\n                        </>}\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                </div>\n            </div>\n\n            <div\n                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                style='overflow: auto; scroll-snap-type: x mandatory;'\n            >\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='info'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-info-circle' /> <Text id='dogs.info'>Info</Text></button>\n                    {submenu === 'info' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'status' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='status'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-thermometer' /> <Text id='dogs.status'>Status</Text></button>\n                    {submenu === 'status' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'pictures' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='pictures'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-images' /> <Text id='dogs.pictures'>Pictures</Text></button>\n                    {submenu === 'pictures' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='team'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-users' /> <Text id='dogs.team'>Team</Text></button>\n                    {submenu === 'team' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'relations' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='relations'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-project-diagram' /> <Text id='dogs.relations'>Relations</Text></button>\n                    {submenu === 'relations' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'achievements' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='achievements'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-clock' /> <Text id='dogs.achievements'>Achievements</Text></button>\n                    {submenu === 'achievements' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                {/* <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-none ${submenu === 'links' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='links'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-link' /> <Text id='dogs.links'>Links</Text></button>\n                    {submenu === 'links' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div> */}\n                <div class='col px-0 pt-2'>\n                    <button\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'advanced' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        data-menu='advanced'\n                        onClick={this.chooseSubmenu}\n                    ><i class='fas fa-cogs' /> <Text id='dogs.advanced'>Advanced</Text></button>\n                    {submenu === 'advanced' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                style='max-height: 50vh;'\n            >\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\n                    {submenu === 'info' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='name'\n                                title={<Text id='dogs.full-name'>Fullt navn</Text>}\n                                help={<Text id='dogs.full-name-help'>Fullt navn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='shortname'\n                                title={<Text id='dogs.short-name'>Kallenavn</Text>}\n                                help={<Text id='dogs.short-name-help'>Kallenavnet på hunden. Hva roper du på innkalling?</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='gender' type='select'\n                                datalist={[\n                                    ['male', <Text id='dogs.gender-male'>Male</Text>],\n                                    ['female', <Text id='dogs.gender-female'>Female</Text>]\n                                ]}\n                                title={<Text id='dogs.gender'>Kjønn</Text>}\n                                help={<Text id='dogs.gender-help'>Kjønn på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='chipId'\n                                title={<Text id='dogs.chip-id'>Chip ID</Text>}\n                                help={<Text id='dogs.chip-id-help'>Chip ID på hunden. Står ofte i vetrinærhåndbok eller passet.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='birth' type='date' min='2000-01-01' max='today'\n                                title={<Text id='dogs.birth'>Fødselsdato</Text>}\n                                help={<Text id='dogs.birth-help'>Fødselsdato på hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Harnesses stores={this.props.stores} saved={saved} object={dog} type='number' field='harness'\n                                title={<Text id='dogs.harness-size'>Selestørrelse</Text>}\n                                help={<Text id='dogs.harness-size-help'>Sele til hunden</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Input saved={saved} dog={dog} field='description' icon='fas fa-paragraph' type='textarea'\n                                title={<Text id='dogs.description'>Beskrivelse</Text>}\n                                help={<Text id='dogs.description-help'>Beskrivelse av hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n\n                            {/* <div class='mt-5 pt-5'>\n                                <Input saved={saved} dog={dog} field='deceased' type='date' min='2000-01-01' max='today'\n                                    title={<Text id='dogs.deceased'>Død</Text>}\n                                    help={<Text id='dogs.deceased-help'>Dødsdato for hunden.</Text>}\n                                    onInput={this.updateField}\n                                />\n                            </div> */}\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'status' && <>\n                        <Localizer>\n                            <Status stores={this.props.stores} saved={saved} object={dog} type='number' field='status'\n                                title={<Text id='dogs.status'>Status</Text>}\n                                help={<Text id='dogs.status-help'>Status til hunden</Text>}\n                                updateField={this.updateFieldValue} />\n                            <Input saved={saved} dog={dog} field='specialNeeds'\n                                title={<Text id='dogs.special-needs'>Spesielle behov</Text>}\n                                help={<Text id='dogs.special-needs-help'>Har hunden spesielle behov? Trenger ekstra mat, utstyr eller annet? Eks: \"Ekstra fett\", \"Husk ulveklobandasje\", etc.</Text>}\n                                onInput={this.updateField} />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'pictures' && <>\n                        <Localizer>\n                            {/* <Input saved={saved} dog={dog} field='imageOther' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.photo'>Bilde</Text>}\n                                help={<Text id='dogs.photo-help'>Bilder av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            /> */}\n                            <Input saved={saved} dog={dog} field='image' type='image' icon='fas fa-portrait'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.profile-photo'>Profilbilde</Text>}\n                                help={<Text id='dogs.profile-photo-help'>Profilbilde av hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                                showImages={true}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'team' && <>\n                        <Localizer>\n                            <Teams stores={this.props.stores} saved={saved} object={dog} type='number' field='team'\n                                title={<Text id='dogs.team'>Team</Text>}\n                                help={<Text id='dogs.team-help'>Team som hunden er på.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                            <Position stores={this.props.stores} saved={saved} object={dog} type='number' field='position'\n                                title={<Text id='dogs.position'>Plass i spannet</Text>}\n                                help={<Text id='dogs.position-help'>Foretrukket plass i spannet.</Text>}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'relations' && <>\n                        <h5 class='mt-5'><Text id='dogs.mother'>Mor</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.mother}\n                            onInput={this.chooseMother}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-mother'>Velg blant dine hunder</Text> --</option>\n                            {dogFemales && dogFemales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='motherName' type='text'\n                                title={<Text id='dogs.mother-name'>Navn på mor</Text>}\n                                help={<Text id='dogs.mother-name-help'>Navn på moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherChipId' type='text'\n                                title={<Text id='dogs.mother-chipid'>Chip ID på mor</Text>}\n                                help={<Text id='dogs.mother-chipid-help'>Chip ID til moren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='motherComment'\n                                title={<Text id='dogs.mother-comment'>Kommentar til mor</Text>}\n                                help={<Text id='dogs.mother-comment-help'>Kommentar til moren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n\n                        <h5 class='mt-5'><Text id='dogs.father'>Far</Text></h5>\n                        <select class='form-control' aria-describedby='fatherHelp'\n                            value={dog.father}\n                            onInput={this.chooseFather}\n                        >\n                            <option value=''>-- <Text id='dogs.choose-father'>Velg blant dine hunder</Text> --</option>\n                            {dogMales && dogMales.map(d => <option value={d.id}>{d.name} - {util.age(d.birth, d.deceased)}</option>)}\n                        </select>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='fatherName' type='text'\n                                title={<Text id='dogs.father-name'>Navn på far</Text>}\n                                help={<Text id='dogs.father-name-help'>Navn på faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherChipId' type='text'\n                                title={<Text id='dogs.father-chipid'>Chip ID på far</Text>}\n                                help={<Text id='dogs.father-chipid-help'>Chip ID til faren til denne hunden. Dersom hunden finnes blant dine hunder, så vil den bli koblet sammen.</Text>}\n                                onInput={this.updateField}\n                            />\n                            <Input saved={saved} dog={dog} field='fatherComment'\n                                title={<Text id='dogs.father-comment'>Kommentar til far</Text>}\n                                help={<Text id='dogs.father-comment-help'>Kommentar til faren til denne hunden.</Text>}\n                                onInput={this.updateField}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'links' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='links' type='text' icon='fas fa-link'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.links'>Linker</Text>}\n                                help={<Text id='dogs.links-help'>Linker til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'achievements' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='achievements' type='text' icon='fas fa-clock'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.achievements'>Bragder</Text>}\n                                help={<Text id='dogs.achievements-help'>Bragder til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                    {submenu === 'advanced' && <>\n                        <Localizer>\n                            <Input saved={saved} dog={dog} field='files' type='file' icon='fas fa-file'\n                                stores={this.props.stores}\n                                title={<Text id='dogs.files'>Files</Text>}\n                                help={<Text id='dogs.files-help'>Filer til denne hunden.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n                        </Localizer>\n                    </>}\n\n                </div>\n\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\nexport default DogsEdit;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointerCursor\":\"pointerCursor__2Gpay\",\"marker-cluster-custom\":\"marker-cluster-custom__1z-5y\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddImage: false,\n    showTeamChange: false,\n    showChangeVisibility: false,\n    showChangeType: false,\n    sendButtonEnabled: true,\n};\n\n@observer\nclass StoryAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            story: {\n                type: 1,\n                title: '',\n                body: '',\n                images: [],\n                public: 1,\n                urlText: '',\n                url: '',\n                currency: '',\n                price: 0,\n                code: '',\n                country: '',\n                region: '',\n                startDate: '',\n                endDate: '',\n            },\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    addStory = async () => {\n        const { story = {}, showAddImage, sendButtonEnabled } = this.state;\n        const { callback = () => {}, hashTags = [], postfix, topic = `team-${story.team}` } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        if (!sendButtonEnabled) {\n            return false;\n        }\n\n        if (!story.body) {\n            return false;\n        }\n        this.setState({ sendButtonEnabled: false });\n\n        let body = story.body;\n        if (postfix) {\n            body += `\\n\\n${postfix}`;\n        }\n        if (hashTags && hashTags.length > 0) {\n            body += `\\n\\n${hashTags.map(tag => `#${tag}`).join(' ')}`;\n        }\n\n\t\tconst response = await storyStore.insert({\n            type: story.type,\n            title: story.title,\n            body,\n            pinned: story.pinned,\n            images: story.images,\n            public: story.public ? 1 : 0,\n            team: story.team,\n            urlText: story.urlText,\n            url: story.url,\n            currency: story.currency,\n            price: story.price,\n            code: story.code,\n            country: story.country,\n            region: story.region,\n            startDate: story.startDate,\n            endDate: story.endDate,\n            topic,\n        });\n\t\tif (response && response.status === 201) {\n            await storyStore.loadPublicFeed({ hashtags: hashTags });\n            this.setState({\n                story: {\n                    type: 1,\n                    title: '',\n                    body: '',\n                    pinned: null,\n                    images: [],\n                    public: 1,\n                    urlText: '',\n                    url: '',\n                    currency: '',\n                    price: null,\n                    code: '',\n                    country: '',\n                    region: '',\n                    startDate: null,\n                    endDate: null,\n                },\n            }, () => {\n                mu.resizeTextarea(this.inputRef['newStoryBody']);\n                if (showAddImage) {\n                    this.addImage();\n                }\n            });\n            callback(response.data);\n\t\t}\n        this.setState({ sendButtonEnabled: true });\n\t}\n\n    addImages = ({ value }) => {\n        // updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        const { story } = this.state;\n        story.images.push(...value);\n        this.setState({ story });\n    }\n\n    removeImage = async (e) => {\n        const { story } = this.state;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        if (util.isArray(story.images)) {\n            const idx = story.images.findIndex(e => e.name === imageName);\n            if (idx > -1) {\n                story.images.splice(idx, 1);\n            }\n        }\n        this.setState({ story });\n    }\n\n    addImage = () => {\n        const { showAddImage } = this.state;\n        this.setState({\n            showAddImage: !showAddImage,\n        });\n    }\n\n    changeVisibility = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changePinned = () => {\n        const { showChangeVisibility } = this.state;\n        this.setState({\n            showChangeVisibility: !showChangeVisibility,\n        });\n    }\n\n    changeType = () => {\n        const { showChangeType } = this.state;\n        this.setState({\n            showChangeType: !showChangeType,\n        });\n    }\n\n    toggleTeamChange = () => {\n        const { showTeamChange } = this.state;\n        this.setState({\n            showTeamChange: !showTeamChange,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    setPublicTeam = () => {\n        const { userStore } = this.props.stores;\n        const publicTeams = userStore.findPublicTeams();\n        if (util.isArray(publicTeams) && publicTeams.length > 0) {\n            const { story } = this.state;\n            story.team = publicTeams[0].id;\n            this.setState({ story });\n        }\n    }\n\n    setFocus = (e) => {\n        this.setState({ hasFocus: true });\n        mu.resizeTextarea(e.target);\n    }\n\n    removeFocus = (e) => {\n        this.setState({ hasFocus: false });\n    }\n\n    componentDidMount() {\n        this.setPublicTeam();\n\t}\n\n    render() {\n        const { col = 12, offset = 0, hashTags = [] } = this.props;\n        const { story = {}, showAddImage, showTeamChange, showChangeVisibility, showChangeType, sendButtonEnabled, hasFocus } = this.state;\n        const { userStore, appState } = this.props.stores;\n        const { user = {}, isAdmin } = userStore;\n        // const team = userStore.findTeam(story.team || user.team, true) || {};\n        const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n        // const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n        let userImage = user.image || (user.images ? user.images[0] : undefined);\n        if (story.team) {\n            const teamId = parseInt(story.team, 10);\n            const team = userStore.findTeam(teamId, true);\n            userImage = team.image || (team.images ? team.images[0] : undefined);\n        }\n        const { darkmode } = appState;\n\n        return (\n            <div class='w-100 px-0'>\n                <div class='row'>\n\n                    <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 rounded rounded-lg pt-3 pb-1 bg-${darkmode ? 'black' : 'white'} shadow-sm mb-1`}>\n                        <div class='d-flex mb-0 position-relative w-100'>\n                            <div class='position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall pointerCursor`}\n                                    style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                                    onClick={this.toggleTeamChange}\n                                >\n                                    {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='position-absolute' style='top: 16px; right: 0px;'>\n                                    <small class='text-white' style='font-size: 1.5em;'>\n                                        <i class='fas fa-caret-down pointerCursor' onClick={this.toggleTeamChange} />\n                                    </small>\n                                </div>\n                            </div>\n                            <div class='col pl-3 pr-0' style='line-height: 1.2em;'>\n                                <div class='d-flex bd-highlight'>\n                                    <div class='p-0 w-100 bd-highlight'>\n                                        <label class='sr-only' for='inlineFormInput'><Text id='story.body'>Story</Text></label>\n                                        <div class='border rounded rounded-lg position-relative'>\n                                            <Localizer>\n                                                <textarea\n                                                    class='form-control-plaintext px-2'\n                                                    type='text'\n                                                    placeholder={<Text id='story.write-body'>Hva tenker du på?..</Text>}\n                                                    onInput={linkState(this, 'story.body')}\n                                                    onKeyUp={mu.resizeTextarea}\n                                                    onFocus={this.setFocus}\n                                                    style='height: 2.3em;'\n                                                    value={story.body}\n                                                    ref={c => this.inputRef['newStoryBody'] = c}\n                                                />\n                                            </Localizer>\n                                            {hasFocus && <div class='position-absolute' style='bottom: 8px; right: 10px; font-size: 1.2em;'>\n                                                <i class='fas fa-image pointerCursor'\n                                                    data-id={story.id}\n                                                    onClick={this.addImage}\n                                                />\n                                                <i class={`fas fa-${story.public === 1 ? 'globe-europe' : 'users'} pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeVisibility}\n                                                />\n                                                {isAdmin && <i class={`fas fa-cog pointerCursor ml-2`}\n                                                    data-id={story.id}\n                                                    onClick={this.changeType}\n                                                />}\n                                            </div>}\n                                        </div>\n                                        {hashTags && hashTags.length > 0 && <>\n                                            {hashTags.map(tag => <>\n                                                <span class='badge badge-secondary mr-2 my-1'>\n                                                    <a href={`/stories/tag/${tag}`} class='text-white'>#{tag}</a>\n                                                </span>\n                                            </>)}\n                                        </>}\n                                    </div>\n                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight pt-auto'>\n                                        <button type='button' class={`btn btn-${sendButtonEnabled ? 'primary' : 'secondary'} ml-1`} disabled={!sendButtonEnabled}\n                                            onClick={this.addStory}\n                                        ><i class='fas fa-paper-plane' /></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div class='row'>\n                                {showTeamChange && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.team')}\n                                                    onChange={this.toggleTeamChange}\n                                                >\n                                                    <option value=''>-- <Text id='story.team-choose'>Velg team</Text> --</option>\n                                                    {util.isArray(user.teams) && user.teams.map((teamId) => {\n                                                        const team = userStore.findTeam(teamId, true);\n                                                        if (team && team.public) {\n                                                            return (<option value={team.id} selected={story.team == team.id ? 'selected' : ''}>{team.name}</option>);\n                                                        }\n                                                        return '';\n                                                    })}\n                                                    \n                                                    {!user.teams && <>\n                                                        <option value=''>No public teams</option>\n                                                    </>}\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeVisibility && <>\n                                    {isAdmin && <>\n                                        <div class='col-12 text-center mt-2'>\n                                            <div class='form-group'>\n                                                <small>\n                                                    <label for='pinned'>Pinned to top:</label><input id='pinned' type='checkbox' onInput={linkState(this, 'story.pinned')} value={1} checked={story.pinned ? 1 : 0} />\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </>}\n\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.public')}\n                                                    value={story.public}\n                                                    onChange={this.changeVisibility}\n                                                >\n                                                    <option value={0} selected={story.public == 0 ? 'selected' : ''}>👥 <Text id='story.visibility-followers'>Kun synlig for de som følger deg.</Text></option>\n                                                    <option value={1} selected={story.public == 1 ? 'selected' : ''}>🌍 <Text id='story.visibility-public'>Synlig for alle som bruker appen.</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showChangeType && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='form-group'>\n                                            <small>                                            \n                                                <select\n                                                    class='custom-select custom-select-sm'\n                                                    id='team'\n                                                    onInput={linkState(this, 'story.type')}\n                                                    value={story.type}\n                                                    onChange={this.changeType}\n                                                >\n                                                <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                                    <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                                    <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                                    <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                                </select>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                                {showAddImage && <>\n                                    <div class='col-12 text-center mt-2'>\n                                        <div class='container-fluid'>\n                                            <div class='row'>\n                                                {util.isArray(story.images) && story.images.map(img => (\n                                                    <div class='col-3 p-1'>\n                                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                                        <button class='btn btn-sm btn-link'\n                                                            onClick={this.removeImage}\n                                                            data-name={img.name}\n                                                        ><i class='fas fa-trash' /> Del</button>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                        <Images object={story} updateField={this.addImages} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={true} />\n                                    </div>\n                                </>}\n\n                                {story.type > 1 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url-text'>URL text</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='urlText'\n                                                    onInput={linkState(this, 'story.urlText')}\n                                                    value={story.urlText}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.url'>URL</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='url'\n                                                    onInput={linkState(this, 'story.url')}\n                                                    value={story.url}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n\n                                {story.type == 2 && <>\n                                    <div class='col-12 mt-3'>\n                                        <label><Text id='story.code'>Code</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='code'\n                                                    onInput={linkState(this, 'story.code')}\n                                                    value={story.code}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.region'>Region</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='region'\n                                                    onInput={linkState(this, 'story.region')}\n                                                    value={story.region}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-12'>\n                                        <label><Text id='story.country'>Country</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='country'\n                                                    onInput={linkState(this, 'story.country')}\n                                                    value={story.country}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-4'>\n                                        <label><Text id='story.currency'>Currency</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='currency'\n                                                    onInput={linkState(this, 'story.currency')}\n                                                    value={story.currency}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n\n                                    <div class='col-8'>\n                                        <label><Text id='story.price'>Price</Text></label>\n                                        <div class='form-group'>\n                                            <small>\n                                                <input\n                                                    class='form-control'\n                                                    type='text'\n                                                    name='price'\n                                                    onInput={linkState(this, 'story.price')}\n                                                    value={story.price}\n                                                />\n                                            </small>\n                                        </div>\n                                    </div>\n                                </>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StoryAdd;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport StoryReplyComment from '../../components/story/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass StoryComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAllComments: props.showAllComments,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryComment({ id: story.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', story, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { story } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStoryCommentReply({ id: story.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', story, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentStory({ id: story.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.deleteCommentReplyStory({ id: story.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentStory({ id: story.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        await storyStore.editCommentReplyStory({ id: story.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await storyStore.translateCommentReply({ commentid, replyid, story, user });\n        } else {\n            translatedText[key] = await storyStore.translateComment({ commentid, story, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { story, callback = () => {}, initCall = () => {}, compact = false } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (story.comments) {\n            totalComments = story.comments.length;\n            if (showAllComments) {\n                filteredComments = story.comments;\n            } else {\n                // filteredComments = story.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = story.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {story && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = storyStore.getCommentTranslations({\n                        story,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = storyStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = storyStore.getCommentReplyTranslations({\n                                        story,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <StoryReplyComment stores={this.props.stores} story={story}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`story-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default StoryComments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__1mJGJ\",\"hoverElement\":\"hoverElement__axh3O\",\"hoverelementhide\":\"hoverelementhide__1k_qH\",\"progress-bar-vertical\":\"progress-bar-vertical__1B2sC\",\"progress-bar\":\"progress-bar__pnsVj\",\"dragged\":\"dragged__QXO46\",\"over\":\"over__1re3x\",\"list\":\"list__q_emZ\"};","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport RaceTracking from '../../components/public/raceTracking.js';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n    isLoading: false,\n};\n\n@observer\nclass AppRaceDetailTracking extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    back = () => {\n        // const { history } = this.props.stores;\n        // history.goBack();\n        const { raceid, path } = this.props;\n        route(`/app-races/${raceid}`);\n    }\n\n    render() {\n        const { userStore } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n\n        const { raceid } = this.props;\n\n        return (<>\n            <div class='container-fluid position-relative p-0' style={`margin-top: 0; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                <RaceTracking stores={this.props.stores} raceid={raceid} />\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailTracking;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Trackmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadTrack(props = this.props) {\n        const { showHeatmap, raceid, allTeamIds } = props;\n        const { adminStore, trackStore, raceStore, appState } = props.stores;\n        const { selectedClassIds = [] } = appState;\n\n\t\t// this.setState({ isLoading: true });\n        if (showHeatmap) {\n            await adminStore.getPublicHeatmap(raceid, allTeamIds);\n        }\n\n        // const classId = \n        const trackIds = raceStore.getTrackIdsByClass(selectedClassIds[0]);\n\n        if (trackIds && trackIds.length > 0) {\n            trackStore.cleanupMemory();\n            await trackStore.loadPublic({ query: { idin: trackIds } });\n        }\n\t\t// this.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadTrack();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.selectedClassIds !== nextProps.selectedClassIds) {\n            this.loadTrack(nextProps);\n        }\n\t}\n\n    render() {\n        const { trackStore, raceStore, appState, adminStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const {\n            waypoints, waypoints2, waypoints3, zoomToMarkers, mapid,\n            fullscreenMap,\n            onMarkerClick, onMarker2Click, onMarker3Click,\n            showHeatmap, showTracks,\n            showDistanceMarkers, groupWaypoints,\n            focusOnMushers, geoJSONs,\n            largeMarkers, isAnimatedMarkers, replaySpeed,\n        } = this.props;\n        const { tracks } = trackStore;\n        const { publicHeatmap: heatmap } = adminStore;\n        const track = tracks[0];\n        const trackIds = raceStore.getTrackIdsByClass();\n\n        // const heatmap = publicHeatmap.slice(0, 10);\n        // const heatmap = [[60.4433,8.8996,14],[61.384,9.1152,14],[60.42,8.9422,15]];\n\n        return (\n            <>\n                {/* heatmap: {`map-${mapid}`}<br /> */}\n                {/* {JSON.stringify(showTracks && track && track.gpx ? track.gpx.geoJSON : null)} */}\n                {/* {JSON.stringify(geoJSONs)} */}\n                <Map\n                    stores={this.props.stores}\n                    // mapId={mapid}\n                    heatmap={showHeatmap ? heatmap : null}\n                    track={track}\n                    geojson={showTracks && track && track.gpx ? track.gpx.geoJSON : null}\n                    gpxInfo={showTracks && track && (track.gpx || track.gpxInfo) ? (track.gpxInfo || track.gpx.gpxInfo) : null}\n                    minZoom={2}\n                    maxZoom={18}\n                    height={600}\n                    waypoints={waypoints}\n                    waypoints2={waypoints2}\n                    waypoints3={waypoints3}\n                    geoJSONs={geoJSONs}\n                    zoomToMarkers={zoomToMarkers}\n                    fullscreenMap={fullscreenMap}\n                    onMarkerClick={onMarkerClick}\n                    onMarker2Click={onMarker2Click}\n                    onMarker3Click={onMarker3Click}\n                    showTrackProfile={false}\n                    distanceMarkerSteps={'long'}\n                    showDistanceMarkers={showDistanceMarkers}\n                    groupWaypoints={groupWaypoints}\n                    focusOnMushers={focusOnMushers}\n                    showFullscreenControl={false}\n                    largeMarkers={largeMarkers}\n                    isAnimatedMarkers={isAnimatedMarkers}\n                    replaySpeed={replaySpeed}\n                    // key={`map-${mapid}-${util.getNestedValue(track, 'id')}-${trackIds.join('-')}-${selectedClassIds.join('-')}`}\n                    // key={`map-${util.getNestedValue(track, 'id')}`}\n                />\n            </>\n        );\n    }\n}\n\nexport default Trackmap;\n","import { h, Component, createRef, useEffect } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport Markdown from 'preact-markdown';\n\nimport ReactLeafletMultiOptionsPolyline from 'react-leaflet-multi-options-polyline';\n\nimport ReactLeafletDriftMarker from \"react-leaflet-drift-marker\"\n\nimport style from './style.css';\n\nimport mu from '../../lib/musher-util';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport {\n\tCircle,\n\tFeatureGroup,\n\tLayerGroup,\n\tLayersControl,\n\tMapContainer,\n\tMarker,\n\tPopup,\n\tRectangle,\n\tTileLayer,\n\tVideoOverlay,\n\tImageOverlay,\n\tGeoJSON,\n\tWMSTileLayer,\n    useLeaflet,\n\tScaleControl,\n\tPolyline,\n} from 'react-leaflet';\n\n// import HeatmapLayer from 'react-leaflet-heatmap-layer';\n\n// import MarkerClusterGroup from 'react-leaflet-markercluster';\n// import '../../../node_modules/react-leaflet-markercluster/dist/styles.min.css';\n\n// import FullscreenControl from 'react-leaflet-fullscreen';\n// import '../../../node_modules/react-leaflet-fullscreen/dist/styles.css';\n\n// import Control from 'react-leaflet-control';\n\nconst { BaseLayer, Overlay } = LayersControl;\n\nimport icons from '../../lib/icons';\nimport '../../../node_modules/leaflet/dist/leaflet.css';\n\nimport L from 'leaflet';\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('../../../node_modules/leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('../../../node_modules/leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('../../../node_modules/leaflet/dist/images/marker-shadow.png')\n});\n\nconst createClusterCustomIcon = function (cluster) {\n  return L.divIcon({\n    html: `<span>${cluster.getChildCount()}</span>`,\n    className: style['marker-cluster-custom'],\n    iconSize: L.point(40, 40, true),\n  });\n};\n\nfunction normalizeRange(val, min, max, newMin, newMax) {\n    return newMin + (val - min) * (newMax - newMin) / (max - min);\n}\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\nconst API_OPEN_WEATHERMAP_KEY = '75cd92317c98db6873031cd2d8de75c5';\nconst INCLINE_STEP = 1;\nconst MAX_HSL_COLOR = 230;\n\n@observer\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasLocation: false,\n\t\t\tvisibleLayers: {\n\t\t\t\tWindspeed: false,\n\t\t\t},\n\t\t\tmapCenter: [],\n\t\t\tmapZoom: 10,\n\t\t\trangeSteps: INCLINE_STEP,\n\t\t\tmaxHslColor: MAX_HSL_COLOR,\n\t\t\thasZoomedToMarkers: false,\n\t\t};\n\t\t// const { waypointStore } = this.props.stores;\n\t\t// waypointStore.load();\n\t}\n\n\tmapRef = createRef();\n\tpolyRef = createRef();\n\n\thandleViewportChanged = (e) => {\n\t\t// console.log('onViewportChanged', e);\n\t\tthis.setState({\n\t\t\tmapCenter: e.center,\n\t\t\tmapZoom: e.zoom,\n\t\t})\n\t}\n\n\thandleLocationFound = (e) => {\n\t\tif (e.latlng) {\n\t\t\tthis.setState({\n\t\t\t\thasLocation: true,\n\t\t\t\tlatlng: e.latlng,\n\t\t\t});\n\t\t}\n\t}\n\n\tgeoJSONStyle() {\n\t\treturn {\n\t\t\tcolor: '#0347A2',\n\t\t\tweight: 8,\n\t\t\tfillOpacity: 0.5,\n\t\t\tfillColor: '#0347A2',\n\t\t}\n\t}\n\n\tgeoJSONStyleList(idx) {\n\t\tconst color = mu.getRankingColor(idx + 1);\n\t\treturn {\n\t\t\tcolor,\n\t\t\tweight: 3,\n\t\t\tfillOpacity: 0.5,\n\t\t\tfillColor: color,\n\t\t}\n\t}\n\n\tonEachFeature = (feature, layer) => {\n\t\tconst { gpxInfo = {} } = this.props;\n\t\tconst popupContent = `<Popup>\n\t\t\t<h5>Details</h5>\n\t\t\t<ul>\n\t\t\t\t<li>Total distance: ${util.format(gpxInfo.totalDistance, 2)} km</li>\n\t\t\t\t<li>Max speed: ${util.format(gpxInfo.maxSpeed, 1)} km/t</li>\n\t\t\t\t<li>Avg speed: ${util.format(gpxInfo.avgSpeed, 1)} km/t</li>\n\t\t\t\t<li>Ascent: ${util.format(gpxInfo.ascent || gpxInfo.calculatedAscend, 0)} m</li>\n\t\t\t\t<li>Descent: ${util.format(gpxInfo.decent || gpxInfo.calculatedDescend, 0)} m</li>\n\t\t\t\t<li>Duration: ${util.secToHms(gpxInfo.duration)}</li>\n\t\t\t</ul>\n\t\t</Popup>`\n\t\tlayer.bindPopup(popupContent)\n\t}\n\n\thandleClick = (e) => {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setLatlng(e.latlng);\n\t\t// this.setState({ currentPos: e.latlng });\n\t}\n\n\tzoomToGeoJSON = (e) => {\n\t\t// console.log(e, this.mapRef);\n\t\ttry {\n\t\t\tif (e.target) {\n\t\t\t\tconst map = this.mapRef;  //get native Map instance\n\t\t\t\tlet bounds = e.target.getBounds();\n\t\t\t\tif (bounds && bounds._northEast) {\n\t\t\t\t\tthis.setState({ bounds });\n\t\t\t\t\tmap.fitBounds(bounds);\n\t\t\t\t}\n\t\t\t\t// const map = this.mapRef.leafletElement;  //get native Map instance\n\t\t\t\t// map.fitBounds(bounds);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t// if (this.geoJSONRef.leafletElement) {\n\t\t// console.log(e);\n\t\t// \tconst map = this.mapRef.leafletElement;  //get native Map instance\n\t\t// \tconst group = this.geoJSONRef.leafletElement; //get native featureGroup instance\n\t\t// \tmap.fitBounds(group.getBounds());\n\t\t// }\n\t}\n\n\tzoomToMarkers = (markers = [], force = false) => {\n\t\tconst { hasZoomedToMarkers } = this.state;\n\t\ttry {\n\t\t\t// console.log('zoomToMarkers', hasZoomedToMarkers, { markers });\n\t\t\tif ((force || !hasZoomedToMarkers) && markers.length && markers.length > 0) {\n\t\t\t\t// const map = this.mapRef.current.leafletElement;  //get native Map instance\n\t\t\t\tconst map = this.mapRef;  //get native Map instance\n\t\t\t\tconst markerBounds = L.latLngBounds([]);\n\t\t\t\tmarkers.forEach(marker => {\n\t// console.log({ marker });\n\t\t\t\t\tmarkerBounds.extend([marker.lat, marker.lng])\n\t\t\t\t});\n\t// console.log('map.fitBounds');\n\t\t\t\tmap.fitBounds(markerBounds);\n\t\t\t\tthis.setState({ hasZoomedToMarkers: true });\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tzoomToAllMarkers = () => {\n\t\tconst { waypoints = [] } = this.props;\n\t\tconst markers = waypoints;\n\t\tthis.zoomToMarkers(markers, true);\n\t}\n\n\tzoomToFirst10Markers = () => {\n\t\tconst { waypoints = [] } = this.props;\n\t\tconst markers = waypoints.slice(0, 10);\n\t\tthis.zoomToMarkers(markers, true);\n\t}\n\n\tzoomToFirst3Markers = () => {\n\t\tconst { waypoints = [] } = this.props;\n\t\tconst markers = waypoints.slice(0, 3);\n\t\tthis.zoomToMarkers(markers, true);\n\t}\n\t\n\tzoomToFavoriteMarkers = () => {\n\t\tconst { zoomToMarkers = [], waypoints = [] } = this.props;\n\t\tconst markers = zoomToMarkers.length > 0 ? zoomToMarkers : waypoints;\n\t\tthis.zoomToMarkers(markers, true);\n\t}\n\n\t// componentDidMount() {\n\t// }\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.zoomToMarkers !== nextProps.zoomToMarkers) {\n\t\t\t// console.log(nextProps.zoomToMarkers)\n\t\t\tthis.zoomToMarkers(nextProps.zoomToMarkers, true);\n        } else if (this.props.waypoints !== nextProps.waypoints) {\n\t\t\tthis.zoomToMarkers(nextProps.waypoints);\n\t\t}\n\n// \t\tconst { zoomToMarkers = [], waypoints = [] } = nextProps;\n// \t\tconst { zoomToMarkers: prevZoomToMarkers = [] } = this.props;\n// // console.log('componentWillReceiveProps', JSON.stringify(zoomToMarkers.length), JSON.stringify(prevZoomToMarkers.length));\n// \t\t// if (zoomToMarkers.length !== prevZoomToMarkers.length) {\n// \t\tconst markers = zoomToMarkers.length > 0 ? zoomToMarkers : waypoints;\n// \t\tthis.zoomToMarkers(markers);\n\t\t// }\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// try {\n\t\t// \tconst map = this.mapRef.current.leafletElement;  //get native Map instance\n\t\t// \tmap.remove()\n\t\t// } catch (err) {\n\t\t// \tconsole.log(err);\n\t\t// }\n\t}\n\n\toverlayAdd = (e) => {\n\t\t// console.log('overlayAdd', e);\n\t\tconst { name } = e;\n\t\tconst { visibleLayers } = this.state;\n\t\tvisibleLayers[name] = true;\n\t\tthis.setState({ visibleLayers });\n\t}\n\toverlayRemove = (e) => {\n\t\tconst { name } = e;\n\t\t// console.log('overlayRemove', e, name)\n\t\tconst { visibleLayers } = this.state;\n\t\tvisibleLayers[name] = false;\n\t\tthis.setState({ visibleLayers });\n\t}\n\n\tpolylineOptions = () => {\n\t\tconst { gpxInfo } = this.props;\n\t\tconst { rangeSteps } = this.state;\n\t\tlet { maxHslColor } = this.state;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapColorMode, mapRangeMin, mapRangeMax } = appState;\n\n\t\tlet newRangeMin = mapRangeMin;\n\t\tlet newRangeMax = mapRangeMax;\n\n\t\tif (mapColorMode === 'speed') {\n\t\t\tif (gpxInfo && gpxInfo.speeds && gpxInfo.speeds.length > 0) {\n\t\t\t\tnewRangeMin = Math.floor(Math.min(...gpxInfo.speeds.map(e => e * 3.6)));\n\t\t\t\tnewRangeMax = Math.ceil(Math.max(...gpxInfo.speeds.map(e => e * 3.6)));\n\t\t\t}\n\t\t}\n\n\t\tconst range = util.range(newRangeMin, newRangeMax, rangeSteps);\n\t\tconst colors = range.map((e) => {\n\t\t\tconst val = normalizeRange(e, newRangeMin, newRangeMax, 0, maxHslColor);\n\t\t\tlet colorValue;\n\t\t\tif (mapColorMode === 'speed') {\n\t\t\t\tcolorValue = maxHslColor - val;\n\t\t\t} else {\n\t\t\t\tcolorValue = maxHslColor - val;\n\t\t\t}\n\t\t\tconst { r, g, b } = util.hsl2Rgb(colorValue, 100, 45);\n\t\t\treturn { color: `rgb(${r}, ${g}, ${b})` };\n\t\t});\n\n\t\tappState.setMapRange(range, newRangeMin, newRangeMax);\n\t\tappState.setMapColors(colors);\n\t\treturn colors;\n\t}\n\n\tpolylineOptionIdxFn = (latLng) => {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapRange: altThresholds } = appState;\n\t\t// const altThresholds = util.range(MIN_INCLINE, MAX_INCLINE, INCLINE_STEP);\n\t\tfor (let i = 0; i < altThresholds.length; ++i) {\n\t\t\tif (latLng.meta <= altThresholds[i]) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn altThresholds.length;\n\t}\n\n\tpolylinetrackPointFactory = (data) => {\n\t\tconst { gpxInfo } = this.props;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { mapColorMode, mapRangeMin, mapRangeMax } = appState;\n\n\n\t\tlet dataArray = [];\n\t\tif (mapColorMode === 'speed' && gpxInfo.speeds && gpxInfo.speeds.length > 0) {\n\t\t\tdataArray = gpxInfo.speeds.map(e => e * 3.6);\n\t\t} else if (gpxInfo && gpxInfo.climbs) {\n\t\t\tdataArray = gpxInfo.climbs;\n\t\t}\n\n\t\tconst points = data.filter(e => e[0] && e[1] && e[2]).map((item, idx) => {\n\t\t\tconst trkpt = L.latLng(item[1], item[0], item[2]);\n\t\t\tif (dataArray && dataArray.length > 0) {\n\t\t\t\ttrkpt.meta = dataArray[idx] || 0;\n\t\t\t\tif (trkpt.meta > mapRangeMax) {\n\t\t\t\t\ttrkpt.meta = mapRangeMax;\n\t\t\t\t}\n\t\t\t\tif (trkpt.meta < mapRangeMin) {\n\t\t\t\t\ttrkpt.meta = mapRangeMin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrkpt.meta = 0;\n\t\t\t}\n\t\t\treturn trkpt;\n\t\t});\n\t\treturn points;\n\t}\n\n\tshowSpeed = () => {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setMapColorMode('speed');\n\t}\n\n\t// handleMarkerClick = ({ title, bib, email, e }) => {\n\thandleMarkerClick = (opt = {}) => {\n\t\tconst { onMarkerClick = ({ title, bib }) => console.log({ title, bib }) } = this.props;\n\t\ttry {\n\t\t\tonMarkerClick({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\thandleMarker2Click = (opt = {}) => {\n\t\tconst { onMarker2Click = (opt) => console.log(opt) } = this.props;\n\t\ttry {\n\t\t\tonMarker2Click({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\thandleMarker3Click = (opt = {}) => {\n\t\tconst { onMarker3Click = (opt) => console.log(opt) } = this.props;\n\t\ttry {\n\t\t\tonMarker3Click({ ...opt });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\tbaseLayerChange = (e) => {\n\t\tconst { name } = e;\n\t\tconsole.log('baseLayerChange event', e);\n\t\tconsole.log({ name });\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setMapChecked(name);\n\t}\n\n\twhenReadyHandler = (e) => {\n\t\t// console.log('whenReadyHandler', e);\n\t\tconst { target } = e;\n\t\ttarget.on('baselayerchange', this.baseLayerChange);\n\t\tthis.mapRef = e.target;\n\t}\n\n\tsetMapRef = (map) => {\n\t\t// console.log('setMapRef: ', map);\n\t\t// this.mapRef = map;\n\t}\n\n\trender() {\n\t\tconst { userStore, appState } = this.props.stores;\n\t\tconst { mapChecked } = appState;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n\t\tconst { visibleLayers, mapZoom, bounds = null } = this.state;\n\t\tconst {\n\t\t\twaypoints = [],\n\t\t\twaypoints2 = [],\n\t\t\twaypoints3 = [],\n\t\t\tgeoJSONs = [],\n\t\t\tzoomToMarkers = [],\n\t\t\tgeojson,\n\t\t\tgpxInfo,\n\t\t\tmapId = 1,\n\t\t\tcenter = [61.0779066, 9.800984],\n\t\t\tzoom = 5,\n\t\t\tminZoom = 4,\n\t\t\tmaxZoom = 18,\n\t\t\tdarkmode,\n\t\t\theight = 500,\n\t\t\theatmap = [],\n\t\t\tskipGeojson = false,\n\t\t\tzoomToWaypoints = false,\n\t\t\tfullscreenMap = false,\n\n\t\t\tshowSearch = true,\n\t\t\tshowZoomControl = true,\n\t\t\tshowLayersControl = true,\n\t\t\tshowFullscreenControl = true,\n\t\t\tshowScaleControl = true,\n\t\t\tshowRange = true,\n\t\t\tshowTrackProfile = true,\n\t\t\tdistanceMarkerSteps = 'normal',\n\t\t\tshowDistanceMarkers = true,\n\t\t\tgroupWaypoints = true,\n\n\t\t\tlargeMarkers,\n\t\t\tisAnimatedMarkers,\n\t\t\treplaySpeed = 1000,\n\n\t\t\tlayersControlPosition = 'topright',\n\t\t} = this.props;\n\t\tconst { mapColorMode, mapRange: range, mapColors: colors, mapRangeMin, mapRangeMax } = appState;\n\n\t\tconst tempGeoJson = toJS(geojson);\n\t\tconst track = util.asObject(tempGeoJson, 'features', 0, 'geometry', 'coordinates');\n\t\tconst hasWaypoints = zoomToMarkers.length > 0 || waypoints.length > 0;\n\t\tconst hasWaypoints2 = waypoints2.length > 0;\n\n\t\tlet startMarker;\n\t\tlet endMarker;\n\t\tconst distanceMarkers = [];\n\t\tif (track && track[0] && track[0][0]) {\n\t\t\tstartMarker = track[0][0] && track[0][0][0] ?  [track[0][0][1], track[0][0][0]] : [track[0][1], track[0][0]];\n\t\t\tendMarker = track[track.length - 1][0] && track[track.length - 1][0][0] ? [track[track.length - 1][0][1], track[track.length - 1][0][0]] : [track[track.length - 1][1], track[track.length - 1][0]];\n\t\t\tif (gpxInfo && gpxInfo.distances) {\n\t\t\t\tlet totalDistance = 0;\n\t\t\t\tlet currentDistance = 0;\n\t\t\t\tlet steps = 10;\n\t\t\t\tswitch (mapZoom) {\n\t\t\t\t\tcase 15:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 3 : 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 14:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 5 : 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 13:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 7 : 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 12:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 10 : 5;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 15 : 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 15 : 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 20 : 15;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 30 : 20;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 40 : 30;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 70 : 50;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 150 : 100;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tsteps = distanceMarkerSteps === 'long' ? 200 : 150;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// console.log({ mapZoom, steps });\n\t\t\t\tgpxInfo.distances.forEach((e, idx) => {\n\t\t\t\t\ttotalDistance += settings.imperial ? kmToMiles(e) : e;\n\t\t\t\t\tcurrentDistance += settings.imperial ? kmToMiles(e) : e;\n\t\t\t\t\tif (currentDistance >= steps) {\n\t\t\t\t\t\tcurrentDistance = 0;\n\t\t\t\t\t\tif (track[idx] && Array.isArray(track[idx])) {\n\t\t\t\t\t\t\tdistanceMarkers.push({\n\t\t\t\t\t\t\t\tlat: track[idx][1],\n\t\t\t\t\t\t\t\tlng: track[idx][0],\n\t\t\t\t\t\t\t\t// icon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\ttitle: Math.floor(totalDistance),\n\t\t\t\t\t\t\t\tbody: '',\n\t\t\t\t\t\t\t\t// color: wp.color,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n        // const mapChecked = darkmode ? 'OpenStreetMap.Dark' : 'OpenStreetMap.Mapnik';\n\t\tconst { isAdmin } = userStore;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div class={`${style.home} w-100 h-100 overflow-hidden position-relative`}\n\t\t\t\t\t// onTouchstart={mu.captureAllEvents}\n\t\t\t\t\t// onTouchend={mu.captureAllEvents}\n\t\t\t\t\tonTouchmove={mu.captureAllEvents}\n\t\t\t\t\tonScroll={mu.captureAllEvents}\n\t\t\t\t>\n\t\t\t\t\t<MapContainer\n\t\t\t\t\t\t// key={mapId}\n\t\t\t\t\t\tbounds={bounds}\n\t\t\t\t\t\t// ref={this.mapRef}\n\t\t\t\t\t\t// ref={(ref) => { this.mapRef = ref; }}\n\t\t\t\t\t\twhenCreated={this.setMapRef}\n\t\t\t\t\t\t// onLoad={(e) => console.log(e)}\n\t\t\t\t\t\tonViewportChanged={this.handleViewportChanged}\n\t\t\t\t\t\tminZoom={minZoom}\n\t\t\t\t\t\tmaxZoom={maxZoom}\n\t\t\t\t\t\t// maxBounds={MAX_BOUNDS}\n\t\t\t\t\t\tcenter={center}\n\t\t\t\t\t\t// onClick={this.handleClick}\n\t\t\t\t\t\tonLocationfound={this.handleLocationFound}\n\t\t\t\t\t\t// onLayeradd={(e) => console.log(e)}\n\t\t\t\t\t\t// onOverlayadd={(e) => console.log(e)}\n\t\t\t\t\t\t// ref={(r) => { this.mapRef = r; }}\n\t\t\t\t\t\tzoom={zoom}\n\t\t\t\t\t\tzoomControl={showZoomControl}\n\t\t\t\t\t\tdoubleClickZoom={true}\n\t\t\t\t\t\tscrollWheelZoom={true}\n\t\t\t\t\t\tdragging={fullscreenMap || !L.Browser.mobile}\n\t\t\t\t\t\t// tap={fullscreenMap || !L.Browser.mobile}\n\t\t\t\t\t\t// tap={!L.Browser.mobile}\n\t\t\t\t\t\ttap={!L.Browser.mobile}\n\t\t\t\t\t\ttouchZoom={L.Browser.mobile ? 'center' : false}\n\t\t\t\t\t\tanimate={true}\n\t\t\t\t\t\teaseLinearity={0.35}\n\t\t\t\t\t\tstyle={`width: 100%; min-height: ${height}px; height: 100%;`} className='h-100'\n\t\t\t\t\t\tonOverlayadd={this.overlayAdd}\n\t\t\t\t\t\tonOverlayremove={this.overlayRemove}\n\t\t\t\t\t\twhenReady={this.whenReadyHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showLayersControl && <LayersControl position={layersControlPosition}>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === 'OpenStreetMap.Mapnik'} name='OpenStreetMap.Mapnik'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\t\turl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === 'OpenStreetMap.Dark'}name='OpenStreetMap.Dark'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.'\n\t\t\t\t\t\t\t\t\turl='https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\n\t\t\t\t\t\t\t{/* {['matrikkel_bakgrunn', 'topo4', 'topo4graatone', 'europa', 'toporaster3', 'sjokartraster', 'norges_grunnkart',\n\t\t\t\t\t\t\t'norges_grunnkart_graatone', 'egk', 'terreng_norgeskart', 'havbunn_grunnkart', 'bakgrunnskart_forenklet'].map(layer => <>\t\t\t\t\t\t\t */}\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket topo4`} name={`Norway Kartverket topo4`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo4&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket topo4graatone`} name={`Norway Kartverket topo4graatone`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=topo4graatone&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t{/* <BaseLayer checked={mapChecked === `Norway Kartverket terreng_norgeskart`} name={`Norway Kartverket terreng_norgeskart`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=terreng_norgeskart&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket norges_grunnkart`} name={`Norway Kartverket norges_grunnkart`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=norges_grunnkart&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Norway Kartverket norges_grunnkart_graatone`} name={`Norway Kartverket norges_grunnkart_graatone`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['opencache', 'opencache2', 'opencache3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://kartverket.no\">Kartverket</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.statkart.no/gatekeeper/gk/gk.open_gmaps?layers=norges_grunnkart_graatone&zoom={z}&x={x}&y={y}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\n\t\t\t\t\t\t\t{/* <BaseLayer checked={mapChecked === `Google Satellite`} name={`Google Satellite`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Google Roadmap`} name={`Google Roadmap`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t<BaseLayer checked={mapChecked === `Google Satellite Text`} name={`Google Satellite Text`}>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tsubdomains={['mt0','mt1','mt2','mt3']}\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://google.com\">Google</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer>\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.BlackAndWhite'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\t\turl='https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Carto'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/attribution\">CARTO</a>'\n\t\t\t\t\t\t\t\t\turl='https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Hikemap'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; wmflabs Hike & Bike'\n\t\t\t\t\t\t\t\t\turl='https://tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/* <BaseLayer name='OpenStreetMap.Hiking'>\n\t\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, &copy; Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.'\n\t\t\t\t\t\t\t\t\turl=' http://{s}.tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseLayer> */}\n\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t<Overlay checked name='Layer group with circles'>\n\t\t\t\t\t\t\t\t<LayerGroup>\n\t\t\t\t\t\t\t\t\t<Circle center={center} fillColor='blue' radius={200} />\n\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\tcenter={center}\n\t\t\t\t\t\t\t\t\t\tfillColor='red'\n\t\t\t\t\t\t\t\t\t\tradius={100}\n\t\t\t\t\t\t\t\t\t\tstroke={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<LayerGroup>\n\t\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\t\tcenter={circle2}\n\t\t\t\t\t\t\t\t\t\t\tcolor='green'\n\t\t\t\t\t\t\t\t\t\t\tfillColor='green'\n\t\t\t\t\t\t\t\t\t\t\tradius={100}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</LayerGroup>\n\t\t\t\t\t\t\t\t</LayerGroup>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Feature group'>\n\t\t\t\t\t\t\t\t<FeatureGroup color='purple'>\n\t\t\t\t\t\t\t\t\t<Popup>Popup in FeatureGroup</Popup>\n\t\t\t\t\t\t\t\t\t<Circle center={circle2} radius={200} />\n\t\t\t\t\t\t\t\t\t<Rectangle bounds={rectangle} />\n\t\t\t\t\t\t\t\t</FeatureGroup>\n\t\t\t\t\t\t\t</Overlay> */}\n\n\t\t\t\t\t\t\t{/* <Overlay name='Geoportal.gov.pl'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\tlayers={'Raster'}\n\t\t\t\t\t\t\t\t\tformat={'image/png'}\n\t\t\t\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\t\t\t\turl='http://mapy.geoportal.gov.pl/wss/service/img/guest/ORTO/MapServer/WMSServer?'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Wildfire'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\tlayers={'GWIS'}\n\t\t\t\t\t\t\t\t\tformat={'image/png'}\n\t\t\t\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\t\t\t\turl={'https://ies-ows.jrc.ec.europa.eu/gwis?language=eng&'}\n\t\t\t\t\t\t\t\t\tattribution={'European Commission, Joint Research Centre'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay> */}\n\n\n\t\t\t\t\t\t\t<Overlay name='Windspeed'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'wind_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\t// url={`https://tile.openweathermap.org/map/{layer}/{z}/{x}/{y}.png?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/WND/{z}/{x}/{y}?use_norm=false&opacity=0.25&palette=0:0073FF; 2:00AAFF; 3:4BD0D6; 6:8DE7C7; 12:B0F720; 25:F3363B; 50:C60000&arrow_step=64&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t{/* <Overlay checked name='Windspeed2'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\top={'WND'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`http://maps.openweathermap.org/maps/2.0/weather/{op}/{z}/{x}/{y}?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay> */}\n\t\t\t\t\t\t\t<Overlay name='Temperature'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'temp_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\t// url={`https://tile.openweathermap.org/map/{layer}/{z}/{x}/{y}.png?appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/TA2/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Snow depth'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/SD0/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t<Overlay name='Precipitation'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/PA0/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>\n\t\t\t\t\t\t\t{isAdmin && <Overlay name='Atmospheric pressure'>\n\t\t\t\t\t\t\t\t<WMSTileLayer\n\t\t\t\t\t\t\t\t\t// layer={'precipitation_new'}\n\t\t\t\t\t\t\t\t\t// format={'image/png'}\n\t\t\t\t\t\t\t\t\t// transparent={true}\n\t\t\t\t\t\t\t\t\turl={`https://maps.openweathermap.org/maps/2.0/weather/APM/{z}/{x}/{y}?fill_bound=true&opacity=0.35&appid=${API_OPEN_WEATHERMAP_KEY}`}\n\t\t\t\t\t\t\t\t\tattribution={'Open weather maps'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Overlay>}\n\t\t\t\t\t\t</LayersControl>}\n\n\t\t\t\t\t\t{/* {showFullscreenControl && <FullscreenControl position='topright' />} */}\n\n\t\t\t\t\t\t{showScaleControl && <ScaleControl\n\t\t\t\t\t\t\tmetric={true}\n\t\t\t\t\t\t\timperial={false}\n\t\t\t\t\t\t/>}\n{/* \n\t\t\t\t\t\t{visibleLayers.Windspeed && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Wind speed, m/s</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0</div>\n\t\t\t\t\t\t\t\t\t\t<div>2</div>\n\t\t\t\t\t\t\t\t\t\t<div>3</div>\n\t\t\t\t\t\t\t\t\t\t<div>6</div>\n\t\t\t\t\t\t\t\t\t\t<div>12</div>\n\t\t\t\t\t\t\t\t\t\t<div>25</div>\n\t\t\t\t\t\t\t\t\t\t<div>50</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\t// background: rgba(0, 0, 0, 0) linear-gradient(to left, rgb(158, 128, 177), rgba(116, 76, 172, 0.9), rgb(164, 123, 170), rgba(170, 128, 177, 0.84), rgba(176, 128, 177, 0.71), rgba(170, 128, 177, 0.54), rgba(170, 128, 177, 0.44), rgba(255, 255, 0, 0)) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #0073FF,#00AAFF,#4BD0D6,#8DE7C7,#B0F720,#F0B800,#FB5515,#F3363B,#C60000) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers.Temperature && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Temperature, °C</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>-40</div><div>-20</div><div>0</div><div>20</div><div>40</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground-image: linear-gradient(to right, rgb(159, 85, 181) 0%, rgb(44, 106, 187) 8.75%, rgb(82, 139, 213) 12.5%, rgb(103, 163, 222) 18.75%, rgb(142, 202, 240) 25%, rgb(155, 213, 244) 31.25%, rgb(172, 225, 253) 37.5%, rgb(194, 234, 255) 43.75%, rgb(255, 255, 208) 50%, rgb(254, 248, 174) 56.25%, rgb(254, 232, 146) 62.5%, rgb(254, 226, 112) 68.75%, rgb(253, 212, 97) 75%, rgb(244, 168, 94) 82.5%, rgb(244, 129, 89) 87.5%, rgb(244, 104, 89) 93.75%, rgb(244, 76, 73) 100%);\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers.Precipitation && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Precipitation, mm/h</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0</div><div>0.5</div><div>1</div><div>2</div><div>4</div><div>6</div><div>7</div><div>10</div><div>12</div><div>14</div><div>16</div><div>24</div><div>32</div><div>60</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: rgba(0, 0, 0, 0) linear-gradient(to left, rgb(170, 43, 195), rgb(255, 0, 146), rgb(255, 0, 100), rgb(255, 0, 0), rgb(255, 91, 0), rgb(255, 150, 0), rgb(255, 205, 0), rgb(239, 248, 0), rgb(0, 70, 0), rgb(0, 90, 0), rgb(0, 160, 0), rgb(0, 211, 0), rgb(0, 250, 100), rgba(0, 0, 0, 0)) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers['Snow depth'] && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Snow depth (m)</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>0.05</div>\n\t\t\t\t\t\t\t\t\t\t<div>0.4</div>\n\t\t\t\t\t\t\t\t\t\t<div>0.8</div>\n\t\t\t\t\t\t\t\t\t\t<div>1.8</div>\n\t\t\t\t\t\t\t\t\t\t<div>15</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #EDEDED, #D9F0F4, #A5E5EF, #7DDEED, #35D2EA, #00CCE8, #706DCE, #514FCC, #3333CC, #1818CC, #C454B7, #C12CB0, #BF00A8, #85408C, #7F2389, #790087, #E80068) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>}\n\n\t\t\t\t\t\t{visibleLayers['Atmospheric pressure'] && <Control position='bottomright'>\n\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\tcolor: #48484a;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tpadding: 2pt 4pt;\n\t\t\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\t\tborder-radius: 4pt;\n\t\t\t\t\t\t\t\tbox-shadow: 0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\ttransition: box-shadow .1s ease-out,-webkit-box-shadow .1s ease-out;\n\t\t\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<div>Atmospheric pressure (hPa)</div>\n\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t\t<div style=\"width: 260px; display: flex; justify-content: space-between;\" class=\"scale-dividers\" >\n\t\t\t\t\t\t\t\t\t\t<div>940</div>\n\t\t\t\t\t\t\t\t\t\t<div>980</div>\n\t\t\t\t\t\t\t\t\t\t<div>1010</div>\n\t\t\t\t\t\t\t\t\t\t<div>1040</div>\n\t\t\t\t\t\t\t\t\t\t<div>1080</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style=\"\n\t\t\t\t\t\t\t\t\t\twidth: 260px;\n\t\t\t\t\t\t\t\t\t\theight: 5px;\n\t\t\t\t\t\t\t\t\t\tbackground: linear-gradient(to right, #0073FF,#00AAFF,#4BD0D6,#8DE7C7,#B0F720,#F0B800,#FB5515,#F3363B,#C60000) repeat scroll 0% 0%;\n\t\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Control>} */}\n\n\n\t\t\t\t\t\t{/* <ImageOverlay\n\t\t\t\t\t\t\turl='./assets/515-overlay-v2.png'\n\t\t\t\t\t\t\tbounds={[\n\t\t\t\t\t\t\t\t[52.056765505175235, 15.068457126617433],\n\t\t\t\t\t\t\t\t[52.04421634105194, 15.105557441711428],\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t{/* {heatmap && heatmap.length > 0 && <HeatmapLayer\n\t\t\t\t\t\t\tfitBoundsOnLoad={!hasWaypoints}\n\t\t\t\t\t\t\tfitBoundsOnUpdate={false}\n\t\t\t\t\t\t\tpoints={heatmap}\n\t\t\t\t\t\t\tlongitudeExtractor={m => m[1]}\n\t\t\t\t\t\t\tlatitudeExtractor={m => m[0]}\n\t\t\t\t\t\t\tintensityExtractor={m => parseFloat(m[2])}\n\t\t\t\t\t\t/>} */}\n\n\n\t\t\t\t\t\t{geoJSONs && geoJSONs.length > 0 && geoJSONs.map((gj, idx) => <GeoJSON\n\t\t\t\t\t\t\tdata={gj}\n\t\t\t\t\t\t\tstyle={() => this.geoJSONStyleList(idx)}\n\t\t\t\t\t\t/>)}\n\n\t\t\t\t\t\t{!skipGeojson && geojson && startMarker && <GeoJSON\n\t\t\t\t\t\t\tdata={geojson}\n\t\t\t\t\t\t\tstyle={this.geoJSONStyle}\n\t\t\t\t\t\t\tonEachFeature={this.onEachFeature}\n\t\t\t\t\t\t\teventHandlers={{\n\t\t\t\t\t\t\t\tadd: (e) => this.zoomToGeoJSON(e),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>}\n\n\t\t\t\t\t\t{showTrackProfile && <>\n\t\t\t\t\t\t\t{track && track.length > 0 && <ReactLeafletMultiOptionsPolyline\n\t\t\t\t\t\t\t\tref={this.polyRef}\n\t\t\t\t\t\t\t\tpositions={this.polylinetrackPointFactory(track)}\n\t\t\t\t\t\t\t\toptionIdxFn={this.polylineOptionIdxFn}\n\t\t\t\t\t\t\t\toptions={this.polylineOptions()}\n\t\t\t\t\t\t\t\tweight={4}\n\t\t\t\t\t\t\t\tlineCap='butt'\n\t\t\t\t\t\t\t\topacity={0.75}\n\t\t\t\t\t\t\t\tsmoothFactor={1}\n\t\t\t\t\t\t\t\tzoomAnimation={true}\n\t\t\t\t\t\t\t\tkey={`${mapColorMode}`}\n\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t{startMarker && <Marker position={startMarker} icon={icons.get('marker')}>\n\t\t\t\t\t\t\t<Popup>\n\t\t\t\t\t\t\t\tStart position: {util.format(startMarker[0], 4)}, {util.format(startMarker[1], 4)}\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t</Marker>}\n\t\t\t\t\t\t{endMarker && <Marker position={endMarker} icon={icons.get('flag')}>\n\t\t\t\t\t\t\t<Popup>\n\t\t\t\t\t\t\t\tEnd position: {util.format(endMarker[0], 4)}, {util.format(endMarker[1], 4)}\n\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t</Marker>}\n\n\t\t\t\t\t\t{showDistanceMarkers && distanceMarkers && distanceMarkers.length > 0 && <>\n\t\t\t\t\t\t\t{distanceMarkers.length > 0 && distanceMarkers.map(wp => (\n\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getDistanceMarker({\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: darkmode ? '#333' : '#333',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t\t<h5>{wp.title}</h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t\t</Popup>\n\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t\t{waypoints3.length > 0 && waypoints3.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\ticon={icons.getSmallMarker({\n\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\teventHandlers={{\n\t\t\t\t\t\t\t\t\tclick: (e) => this.handleMarker3Click({ ...wp, e }),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t// onClick={(e) => this.handleMarker3Click({ ...wp, e })}\n\t\t\t\t\t\t\t\tzIndexOffset={100 + idx}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t<h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t</Popup> */}\n\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{waypoints2.length > 0 && waypoints2.reverse().map((wp, idx) => (\n\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\ticon={icons.getMarker({\n\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\n\t\t\t\t\t\t\t\t\ticonWidth: largeMarkers ? 300 : 250,\n\t\t\t\t\t\t\t\t\ticonHeight: largeMarkers ? 30 : 20,\n\t\t\t\t\t\t\t\t\ticonAnchorX: largeMarkers ? 10 : 7,\n\t\t\t\t\t\t\t\t\ticonAnchorY: largeMarkers ? 10 : 7,\n\t\t\t\t\t\t\t\t\timageCirlceRadius: largeMarkers ? 20 : 14,\n\n\t\t\t\t\t\t\t\t\tlineHeight: largeMarkers ? '1.5em' : '1.1em',\n\t\t\t\t\t\t\t\t\tfontSize: largeMarkers ? '1.5em' : '1.1em',\n\t\t\t\t\t\t\t\t\tpaddingTop: largeMarkers ? '2px' : '3px',\n\t\t\t\t\t\t\t\t\tpaddingBottom: largeMarkers ? '2px' : '3px',\n\n\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t// onClick={(e) => this.handleMarker2Click({ ...wp, e })}\n\t\t\t\t\t\t\t\teventHandlers={{\n\t\t\t\t\t\t\t\t\tclick: (e) => this.handleMarker2Click({ ...wp, e }),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tzIndexOffset={200 + idx}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}>\n\t\t\t\t\t\t\t\t\t<h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} />\n\t\t\t\t\t\t\t\t</Popup> */}\n\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{waypoints.length > 0 && waypoints.reverse().map((wp, idx) => (<>\n\t\t\t\t\t\t\t{isAnimatedMarkers ? <>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ReactLeafletDriftMarker\n\t\t\t\t\t\t\t\t\tposition={{ lat: wp.lat, lng: wp.lng }}\n\t\t\t\t\t\t\t\t\tduration={replaySpeed}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getRaceMarker({\n\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\tspeed: wp.speed,\n\t\t\t\t\t\t\t\t\t\tbearing: wp.bearing,\n\t\t\t\t\t\t\t\t\t\trank: wp.rank,\n\t\t\t\t\t\t\t\t\t\temail: wp.email,\n\t\t\t\t\t\t\t\t\t\timage: wp.image,\n\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\n\t\t\t\t\t\t\t\t\t\ticonWidth: largeMarkers ? 300 : 170,\n\t\t\t\t\t\t\t\t\t\ticonHeight: largeMarkers ? 30 : 15,\n\t\t\t\t\t\t\t\t\t\ticonAnchorX: largeMarkers ? (idx % 2 === 0 ? 10 : 290) : (idx % 2 === 0 ? 7 : 163),\n\t\t\t\t\t\t\t\t\t\ticonAnchorY: largeMarkers ? 10 : 5,\n\t\t\t\t\t\t\t\t\t\timageCirlceRadius: largeMarkers ? 20 : 10,\n\n\t\t\t\t\t\t\t\t\t\tlineHeight: largeMarkers ? '1.5em' : '0.9em',\n\t\t\t\t\t\t\t\t\t\tfontSize: largeMarkers ? '1.5em' : '0.9em',\n\t\t\t\t\t\t\t\t\t\tpaddingTop: largeMarkers ? '1px' : '3px',\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: largeMarkers ? '2px' : '3px',\n\n\t\t\t\t\t\t\t\t\t\ttitlePrefix: wp.currentState === 'rest' ? '💤' : '',\n\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t\tlargeMarkers,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t// onClick={(e) => this.handleMarkerClick({ ...wp, e })}\n\t\t\t\t\t\t\t\t\teventHandlers={{\n\t\t\t\t\t\t\t\t\t\tclick: (e) => this.handleMarkerClick({ ...wp, e }),\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tzIndexOffset={300 + idx}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}> */}\n\t\t\t\t\t\t\t\t\t\t{/* <h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} /> */}\n\t\t\t\t\t\t\t\t\t{/* </Popup> */}\n\t\t\t\t\t\t\t\t</ReactLeafletDriftMarker>\n\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\tposition={[wp.lat, wp.lng]}\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\ticon={icons.getRaceMarker({\n\t\t\t\t\t\t\t\t\t\ticon: wp.icon || 'marker',\n\t\t\t\t\t\t\t\t\t\tbib: wp.bib,\n\t\t\t\t\t\t\t\t\t\tspeed: wp.speed,\n\t\t\t\t\t\t\t\t\t\tbearing: wp.bearing,\n\t\t\t\t\t\t\t\t\t\trank: wp.rank,\n\t\t\t\t\t\t\t\t\t\temail: wp.email,\n\t\t\t\t\t\t\t\t\t\timage: wp.image,\n\t\t\t\t\t\t\t\t\t\tflag: wp.flag,\n\t\t\t\t\t\t\t\t\t\ttitle: wp.title,\n\t\t\t\t\t\t\t\t\t\tbody: wp.body,\n\t\t\t\t\t\t\t\t\t\tcolor: wp.color,\n\t\t\t\t\t\t\t\t\t\ttextColor: wp.textColor,\n\n\t\t\t\t\t\t\t\t\t\ticonWidth: largeMarkers ? 300 : 170,\n\t\t\t\t\t\t\t\t\t\ticonHeight: largeMarkers ? 30 : 15,\n\t\t\t\t\t\t\t\t\t\ticonAnchorX: largeMarkers ? (idx % 2 === 0 ? 10 : 290) : (idx % 2 === 0 ? 7 : 163),\n\t\t\t\t\t\t\t\t\t\ticonAnchorY: largeMarkers ? 10 : 5,\n\t\t\t\t\t\t\t\t\t\timageCirlceRadius: largeMarkers ? 20 : 10,\n\n\t\t\t\t\t\t\t\t\t\tlineHeight: largeMarkers ? '1.5em' : '0.9em',\n\t\t\t\t\t\t\t\t\t\tfontSize: largeMarkers ? '1.5em' : '0.9em',\n\t\t\t\t\t\t\t\t\t\tpaddingTop: largeMarkers ? '1px' : '3px',\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: largeMarkers ? '2px' : '3px',\n\n\t\t\t\t\t\t\t\t\t\ttitlePrefix: wp.currentState === 'rest' ? '💤' : '',\n\t\t\t\t\t\t\t\t\t\tmapChecked,\n\t\t\t\t\t\t\t\t\t\tlargeMarkers,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t// onClick={(e) => this.handleMarkerClick({ ...wp, e })}\n\t\t\t\t\t\t\t\t\teventHandlers={{\n\t\t\t\t\t\t\t\t\t\tclick: (e) => this.handleMarkerClick({ ...wp, e }),\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tzIndexOffset={300 + idx}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/* <Popup position={[wp.lat, wp.lng]}> */}\n\t\t\t\t\t\t\t\t\t\t{/* <h5><Markdown markdown={wp.title} markdownOpts={MARKDOWN_OPTIONS} /></h5>\n\t\t\t\t\t\t\t\t\t\t<Markdown markdown={wp.body} markdownOpts={MARKDOWN_OPTIONS} /> */}\n\t\t\t\t\t\t\t\t\t{/* </Popup> */}\n\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</>))}\n\t\t\t\t\t</MapContainer>\n\n\t\t\t\t\t{/* {showSearch && <div class='position-absolute' style='bottom: 20px; right: 5px; z-index: 999999;'>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-info' onClick={this.zoomToAllMarkers}><i class='fas fa-search' /></button>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-success ml-1' onClick={this.zoomToFavoriteMarkers}><i class='fas fa-search-location' /></button>\n\t\t\t\t\t</div>} */}\n\t\t\t\t\t{waypoints.length > 0 && <div class='position-absolute' style='bottom: 65px; right: 5px; z-index: 999999;'>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-info text-overflow' style='width: 60px' onClick={this.zoomToAllMarkers}><nobr><i class='fas fa-crosshairs' /></nobr></button>\n\t\t\t\t\t</div>}\n\t\t\t\t\t{waypoints.length >= 3 && <div class='position-absolute' style='bottom: 105px; right: 5px; z-index: 999999;'>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-info text-overflow' style='width: 60px' onClick={this.zoomToFirst3Markers}><nobr><i class='fas fa-crosshairs' /> 3</nobr></button>\n\t\t\t\t\t</div>}\n\t\t\t\t\t{waypoints.length >= 10 && <div class='position-absolute' style='bottom: 145px; right: 5px; z-index: 999999;'>\n\t\t\t\t\t\t<button type='button' class='btn btn-sm btn-info text-overflow' style='width: 60px' onClick={this.zoomToFirst10Markers}><nobr><i class='fas fa-crosshairs' /> 10</nobr></button>\n\t\t\t\t\t</div>}\n\n\t\t\t\t</div>\n\t\t\t\t{showRange && range && range.length > 0 && <>\n\t\t\t\t\t<div class='mb-4'>\n\t\t\t\t\t\t<div class='float-right mt-1'>\n\t\t\t\t\t\t\t<div class='px-1 py-0 float-left' style='line-height: 0.8em;'>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t{util.format(mapRangeMin, 0)}<span class='text-muted'>{mapColorMode === 'speed' ? 'km/t' : '%'}</span>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{range && range.length > 0 && range.map((val, idx) => (\n\t\t\t\t\t\t\t\t<div class='float-left'>\n\t\t\t\t\t\t\t\t\t<div style={`background-color: ${colors[idx].color}; height: 13px; width: 10px;`} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<div class='px-1 py-0 float-left' style='line-height: 0.8em;'>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t{util.format(mapRangeMax, 0)}<span class='text-muted'>{mapColorMode === 'speed' ? 'km/t' : '%'}</span>\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div class='float-right mt-1 clearfix'>\n\t\t\t\t\t\t\t<button class='btn btn-link' onClick={this.showSpeed}>Show speed</button>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport { route } from 'preact-router';\n\nimport ImageScroller from '../imageScroller';\nimport DogScroller from '../dog/scroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport Speed from '../data/speed';\nimport Elevation from '../data/elevation';\nimport Weight from '../data/weight';\nimport Distance from '../data/distance';\nimport Temperature from '../data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false,\n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            switch (type) {\n                case 'likeComment':\n                    storyStore.workoutsAddLikeToComment({ id: workout.id, data: response.data, commentId });\n                    break;\n                case 'likeReply':\n                    storyStore.workoutsAddLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                    break;\n\n                default:\n                    if (commentId) {\n                        storyStore.workoutsAddCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                    } else {\n                        storyStore.workoutsAddCommentToWorkout({ id: workout.id, data: response.data });\n                    }\n                    break;\n            }\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { holdingStore = 'team' } = this.props;\n        if (holdingStore === 'team') {\n            const { teamStore } = this.props.stores;\n            teamStore.addLikeToWorkout({ id, data });\n        } else if (holdingStore === 'story') {\n            const { storyStore } = this.props.stores;\n            storyStore.workoutsAddLikeToWorkout({ id, data });\n        }\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    showWorkoutDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const target = e.target.closest('#workoutDetail');\n        if (target) {\n            const { id } = target.dataset;\n            if (id) {\n            console.log({ target, id });\n                route(`/workouts/public/${id}`);\n            }\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { feed = {} } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedTextName = await teamStore.translate({ object: feed, user, field: 'name' });\n        let translatedTextComment;\n        if (feed.comment) {\n            translatedTextComment = await teamStore.translate({ object: feed, user, field: 'comment' });\n        }\n        this.setState({ showOriginal: 0, translatedTextName, translatedTextComment });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    render() {\n        const { feed, idx, onTeamClick = () => {}, onUserClick = () => {}, onDogClick = () => {}, holdingStore = 'team' } = this.props;\n        const { showAddComment, showDate, likeWorkout, showOriginal, translatedTextName, translatedTextComment } = this.state;\n        const { teamStore, storyStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { darkmode, hasShareApi } = appState;\n        let publicDogs;\n\n        let team = {};\n        let publicUser = {};\n        if (holdingStore === 'team') {\n            team = teamStore.findPublicTeam(feed.team);\n            publicUser = teamStore.findPublicUser(feed.user) || {};\n            const { publicDogs: teamPublicDogs } = teamStore;\n            publicDogs = teamPublicDogs;\n        } else if (holdingStore === 'story') {\n            team = storyStore.findPublicTeam(feed.team);\n            publicUser = storyStore.findPublicUser(feed.user) || {};\n            const { publicDogs: storyPublicDogs } = storyStore;\n            publicDogs = storyPublicDogs;\n        }\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === user.id) : false;\n\n        const image = mu.getImage({ user: publicUser, team, object: feed, priority: 'user' });\n\n        const { likes, comments } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\t\tconst { gpxInfo = {} } = feed;\n\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (publicUser) {\n            shortname = mu.displayNameShort(publicUser);\n            name = mu.displayName(publicUser);\n            username = mu.displayName(publicUser);\n            if (publicUser.settings && publicUser.uuidv4 !== user.uuidv4) {\n                userLink = publicUser.settings.hideProfile ? null : `/inbox/${publicUser.uuidv4}`;\n            }\n        }\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        const translationName = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'name',\n        }) || translatedTextName;\n        let feedName = translationName || feed.name;\n        const translationComment = mu.getTranslation({\n            object: feed,\n            targetLang: language,\n            field: 'comment',\n        }) || translatedTextComment;\n        let feedComment = translationComment || feed.comment;\n\n        if (showOriginal) {\n            feedName = feed.name;\n            feedComment = feed.comment;\n        }\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                    <span class='badge badge-pill badge-secondary float-right'>{teamType}</span>\n                    <h5 class='mb-1 position-relative' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    <div class='mb-2'>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {feed.public === 1 ? <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-globe-europe' />\n                            </small>\n                        </> : <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                            </small>\n                        </>}\n                        {username && <>\n                            <small class='ml-2 text-muted'>\n                                {userLink ? <>\n                                    <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                </> : <>\n                                    <i class='fas fa-user' /> {username}\n                                </>}\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> <Weight stores={this.props.stores} value={feed.sledWeight} />\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> <Temperature stores={this.props.stores} value={feed.temperature} />\n                            </>}\n                            {feed.dogs && feed.dogs.length > 0 && <>\n                                <i class='fas fa-dog ml-2' /> {util.format(feed.dogs.length, 0)}\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                            {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                <i class='fas fa-map-marker-alt ml-2' /> {currentLocationGeocode.formattedCounty}\n                            </>}\n                            {feed.moonIllumination && feed.moonIllumination.phaseIcon && <span class='float-right ml-2'>{feed.moonIllumination.phaseIcon}</span>}\n                        </small>\n                    </div>\n\n                    {isAdmin && <div\n                        class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                        style='overflow: auto;'\n                    >\n                        <small class='text-muted mr-2'>Adm:</small>\n                        {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {publicUser.deviceInfo && <>\n                            <span class='badge badge-secondary ml-1 float-right font-weight-light'>\n                                {['platform', 'manufacturer', 'model'].map(e => <>\n                                    <span class='ml-1 text-white'>\n                                        {publicUser.deviceInfo[e]}\n                                    </span>\n                                </>)}\n                            </span>\n                        </>}\n                        {adminData && <>\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='ml-2 text-muted'>\n                                V: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                S: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                            {feed.shadowTags && feed.shadowTags.map(tag => <>\n                                <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                            </>)}\n                        </>}\n                    </div>}\n                </div>\n            </div>\n\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            {feed.dogs && feed.dogs.length > 0 && <div class='container-fluid px-0 mt-1'>\n                <div class='row pt-2'>\n                    <DogScroller stores={this.props.stores} dogs={feed.dogs} allDogs={publicDogs} onDogClick={onDogClick} />\n                </div>\n            </div>}\n\n            <div class='d-flex justify-content-between bg-light rounded-lg px-2'>\n                {feed.distanceKm > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Distance stores={this.props.stores} value={feed.distanceKm} />\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        <Elevation stores={this.props.stores} value={feed.elevation} />\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='mr-2 text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='text-center'>\n                    <div class='text-overflow text-muted'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {gpxInfo && gpxInfo.avgGpsMovingSpeed > 0 ? <>\n                            <Speed stores={this.props.stores} value={gpxInfo.avgGpsMovingSpeed * 3.6} />\n                        </> : <>\n                            <Speed stores={this.props.stores} value={feed.speedAvg} />\n                        </>}\n                    </div>\n                </div>}\n            </div>\n\n            <div class='row mt-2'>\n                <div id='workoutDetail' class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;' onClick={this.showWorkoutDetail} data-id={feed.uuidv4}>\n                    <Markdown markdown={mu.replaceImages(feedName, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feedComment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                {feed.language !== language && <>\n                    {!showOriginal && translationName ? <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                    </> : <>\n                        <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                    </>}\n                </>}\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments\n                    stores={this.props.stores}\n                    likes={likes}\n                    comments={comments}\n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                                data-native\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <>\n                <div class='mt-2'>\n                    <Views\n                        stores={this.props.stores}\n                        views={views}\n                        object={feed}\n                        type='team'\n                        isTeamAdmin={isTeamAdmin}\n                        isAdmin={isAdmin}\n                        onTeamClick={onTeamClick}\n                        onUserClick={onUserClick}\n                    />\n                </div>\n            </>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNotifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    subscribeNotificationTopic = async (field) => {\n\t\tconst { userStore } = this.props.stores;\n        const { user } = userStore;\n        const { notificationTopics = {} } = user;\n        const value = 1;\n        await userStore.setNotificationTopic({\n            field: `notificationTopics.${field}`,\n            value,\n        });\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n        const { notificationTopics = {} } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const topic = `race-${race.id}`;\n        if (notificationTopics && notificationTopics[topic]) {\n            return '';\n        }\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <button class='btn btn-block btn-info btn-lg' onClick={() => this.subscribeNotificationTopic(topic)}>\n                        <i class='fas fa-bell' /> <Text id='race.notifications'>Subscribe to race notifications</Text>\n                    </button>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailNotifications;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\n@observer\nclass Achievements extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n        };\n    }\n    \n    handleAdd = () => {\n        const { data } = this.state;\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: { ...data } });\n        this.setState({\n            data: {\n                name: '',\n                description: '',\n                url: '',\n            }\n        });\n    };\n\n\n    removeAchievement = async (e) => {\n        const { dogStore } = this.props.stores;\n        const { object } = this.props;\n        const { name, id } = e.target.closest('button').dataset;\n        dogStore.removeAchievement({\n            id: object.id,\n            name,\n            achievementId: id,\n        });\n    }\n\n    render() {\n        const { data } = this.state;\n        const { showFiles = true, object = {} } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12 mt-3'>\n                    {showFiles && <>\n                        <div class='container-fluid'>\n                            <div class='row'>\n\n                                {(!object.achievements || object.achievements.length === 0) && <>\n                                    <div class='text-center text-muted'>\n                                        <div class='display-1'><i class='fas fa-trophy' /></div>\n                                        <h3><Text id='dogs.no-achievements-title'>No achievements for this dog!</Text></h3>\n                                        <Text id='dogs.no-achievements-text'>You can add achievements to this dog. Ie. Memories, trips, tests, prices, races, etc.</Text>\n                                    </div>\n                                </>}\n\n                                {object.achievements && object.achievements.map(file => (\n                                    <div class='col-12 p-1'>\n                                        <span class='font-weight-lighter mr-2'>{util.isoDate(file.date, false, false, true)}</span>\n                                        <span class='mr-2'>{file.name}</span>\n                                        <span class='mr-2'>{file.url}</span>\n                                        <button class='btn btn-sm btn-link float-right p-0'\n                                            onClick={this.removeAchievement}\n                                            data-name={file.name}\n                                            data-id={file.id}\n                                        ><i class='fas fa-trash-alt' /> Del</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </>}\n                </div>\n                <div class='col-12 mt-3'>\n                    <details>\n                        <summary><Text id='dogs.achievement-add'>Add new achievement</Text></summary>\n\n                        <div class='form-group'>\n                            <label for='name'><Text id='dogs.achievement-name'>Name</Text></label>\n                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp' onInput={linkstate(this, 'data.name')} value={data.name} />\n                            <small id='nameHelp' class='form-text text-muted'><Text id='dogs.achievement-name-help'>Name of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='date'><Text id='dogs.achievement-date'>Date</Text></label>\n                            <input type='date' class='form-control' id='date' aria-describedby='dateHelp' onInput={linkstate(this, 'data.date')} value={data.date} />\n                            <small id='dateHelp' class='form-text text-muted'><Text id='dogs.achievement-date-help'>Date of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='description'><Text id='dogs.achievement-description'>Description</Text></label>\n                            <input type='text' class='form-control' id='description' aria-describedby='descriptionHelp' onInput={linkstate(this, 'data.description')} value={data.description} />\n                            <small id='descriptionHelp' class='form-text text-muted'><Text id='dogs.achievement-description-help'>Description of achievement</Text></small>\n                        </div>\n                        <div class='form-group'>\n                            <label for='url'><Text id='dogs.achievement-url'>Url</Text></label>\n                            <input type='text' class='form-control' id='url' aria-describedby='urlHelp' onInput={linkstate(this, 'data.url')} value={data.url} />\n                            <small id='urlHelp' class='form-text text-muted'><Text id='dogs.achievement-url-help'>URL of achievement</Text></small>\n                        </div>\n                        <button class='btn btn-success' onClick={this.handleAdd}>\n                            <Text id='dogs.achievement-add'>Add achievement</Text>\n                        </button>\n                    </details>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Achievements;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\nimport { toJS } from 'mobx';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass LastResults extends Component {\n    render() {\n        const { lastResults = [], currentClass = {}, selectedMusher = {}, selectResult = () => {} } = this.props;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n        return (<>\n\n            <table class='table table-striped'>\n                <thead>\n                    <tr>\n                        <th style='width: 10%'>Time</th>\n                        <th style='width: 5%'>Dir</th>\n                        <th style='width: 75%'>Checkpoint</th>\n                        <th style='width: 10%'>Dogs</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {lastResults && lastResults.length > 0 && lastResults.map(res => {\n                        const currentCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === res.checkpoint) : null;\n                        const requiredRestMin = res.direction === 'in' && currentCheckpoint.requiredRestMinutes ? (\n                            currentCheckpoint.timeEqualization ? selectedMusher.timeEqualization + currentCheckpoint.requiredRestMinutes : currentCheckpoint.requiredRestMinutes\n                        ) : null;\n                        const firstOutTime = new Date(new Date(res.timestamp).getTime() + requiredRestMin * 60000);\n                        return (<>\n                            <tr \n                                class='resultLine'\n                                data-resultid={res.id}\n                                onClick={selectResult}\n                            >\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-clock' /></span> {util.formatDate(res.timestamp, { locale: language, year: '2-digit', month: '2-digit', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                    </nobr>\n                                </td>\n                                <td>\n                                    {res.direction === 'in' && <>\n                                        <i class='fas fa-sign-in-alt mr-2 text-success' />\n                                    </>}\n                                    {res.direction === 'out' && <>\n                                        <i class='fas fa-sign-out-alt mr-2 text-info' />\n                                    </>}\n                                    {res.direction === 'scratched' && <>\n                                        <i class='fas fa-times mr-2 text-danger' />\n                                    </>}\n                                </td>\n                                <td>\n                                    <span class='text-muted'>{currentCheckpoint.sortOrder}:</span> {currentCheckpoint.name}\n                                    {/* {requiredRestMin && <>\n                                        <div>\n                                            {selectedMusher.timeEqualization ? <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} + {selectedMusher.timeEqualization} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </> : <>\n                                                <span class='text-muted ml-2'>Req rest:</span> {currentCheckpoint.requiredRestMinutes} min<br />\n                                                <span class='text-muted ml-2'>First out:</span> {util.formatDate(firstOutTime, { locale: language, year: '2-digit', month: 'short', hour12: false, hour: '2-digit', minute: '2-digit' })}<br />\n                                            </>}\n                                        </div>\n                                    </>} */}\n                                </td>\n                                <td>\n                                    <nobr>\n                                        <span class='text-muted'><i class='fas fa-dog ml-3' /></span> {res.dogs}<br />\n                                    </nobr>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </tbody>\n            </table>\n        </>);\n    }\n}\n\n@observer\nclass RaceLiveAddResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: {},\n            message: '',\n        };\n        this.updateTimer = {};\n    }\n\n    addResult = async (e) => {\n\t\tconst { raceStore, appState } = this.props.stores;\n        const { direction, classid } = e.target.closest('button').dataset;\n        const { checkpointId, selectedClassIds = [] } = appState;\n\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { result, showTimestamp } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        if (showTimestamp) {\n            result.timestamp = result.timestamp ? result.timestamp : new Date();\n        } else {\n            result.timestamp = new Date();\n        }\n\n        if (direction === 'scratched') {\n            await raceStore.addResult({\n                id: raceid,\n                classId: classid,\n                showTimestamp: false,\n                newResult: {\n                    direction: 'in',\n                    checkpoint: checkpointId,\n                    ...result,\n                }\n            });\n            await raceStore.editContestant({\n                id: raceid,\n                classId: classid,\n                bib: result.bib,\n                field: 'raceStatus',\n                value: 'DNF',\n            });\n        }\n\n\t\tawait raceStore.addResult({\n\t\t\tid: raceid,\n\t\t\tclassId: classid,\n            showTimestamp: false,\n\t\t\tnewResult: {\n                direction,\n                checkpoint: checkpointId,\n                ...result,\n\t\t\t}\n        });\n\n        // const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        // raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.setState({\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n            selectedMusher: null,\n            lastResults: null,\n            message: `Added ${result.bib} with ${result.dogs} dogs ${direction} ${direction === 'in' ? 'to' : 'of'} checkpoint ${selectedCheckpoint.name}.`,\n        });\n\n        clearTimeout(this.updateTimer.message);\n        this.updateTimer.message = setTimeout(async () => {\n\t\t\tthis.setState({\n                message: '',\n            });\n\t\t}, 3000);\n\t}\n\n    editResult = (e) => {\n        const { raceStore, appState } = this.props.stores;\n        const { currentResult } = this.state;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        // const resultIdx = lastResults.findIndex(e => e.id === resultid);\n        // if (resultIdx > -1) {\n        //     console.log({ resultIdx })\n        //     lastResults[resultIdx][field] = value;\n        //     this.setState({ lastResults });\n        // }\n        currentResult[field] = value;\n        this.setState({ currentResult });\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        \n        const data = {\n            raceClassId: classid,\n            resultId: resultid,\n\t\t\t[`raceClassResult${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n            await raceStore.editClass({\n                id: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.updateClassesResultLocal(classid, resultid, field, value);\n            const currentClass = raceStore.getClassById(selectedClassId);\n\n            const { checkpoints = [], contestants = [], results = [] } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\t\t}, 500);\n    }\n\n    updateField = (e) => {\n        const { raceStore, appState } = this.props.stores;\n\t\tconst { race } = raceStore;\n        const raceid = race.id;\n\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, resultid } = e.target.dataset;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const { result, selectedResult, showTimestamp } = this.state;\n        result[field] = value;\n        \n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        \n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        if (!selectedMusher) {\n            this.setState({\n                result,\n            });\n            return false;\n        }\n        let lastResults;\n        let isCheckedIn;\n        let isCheckedOut;\n        let isScratched;\n        let currentResult;\n        let prevCheckpoint;\n        let isCheckedInPrev;\n        let isCheckedOutPrev;\n        let isScratchedPrev;\n\n        if (currentClass) {\n            lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n            if (lastResults && lastResults.length > 0) {\n                isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n                isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n                isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n                prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n                if (prevCheckpoint) {\n                    isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n                    isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n                    isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n                }\n            }\n            currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === selectedResult)) : {};\n        }\n\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : null;\n        if (lastResult) {\n            const lastTimestamp = lastResults && lastResults[0] ? lastResults[0].timestamp : (selectedMusher && selectedMusher.startTime ? selectedMusher.startTime : currentClass.startDate);\n            if (showTimestamp) {\n                result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n            }\n            result.dogs = lastResult.dogs;\n        }\n        \n        this.setState({\n            result,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            prevCheckpoint,\n            currentResult,\n            lastResults,\n        });\n    }\n\n\n    deleteResult = async () => {\n        const { selectedResult } = this.state;\n        const { appState, raceStore } = this.props.stores;\n\n        const { race } = raceStore;\n        const raceid = race.id;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        const data = {\n\t\t\traceClassId: currentClass.id,\n            resultId: selectedResult,\n\t\t\traceClassResultDelete: 1,\n\t\t};\n        await raceStore.editClass({\n            id: raceid,\n            data,\n        });\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n\n        this.doneEditResult();\n    }\n\n    selectCheckpoint = (e) => {\n        const { showTimestamp, result } = this.state;\n        const checkpointId = e.target.closest('button').dataset.id;\n        const { appState, raceStore } = this.props.stores;\n        appState.selectCheckpoint(checkpointId);\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        const { sortedContestants = [] } = raceStore;\n        const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n\n        const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n\n        const prevCheckpoint = raceStore.getPreviousCheckpoint({ currentClass, checkpointId });\n        const isCheckedInPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'in');\n        const isCheckedOutPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'out');\n        const isScratchedPrev = lastResults.find(e => e.checkpoint === prevCheckpoint.id && e.direction === 'scratched');\n        \n        this.setState({\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            lastResults,\n        });\n\n    }\n\n    toggleTimestamp = () => {\n        const { showTimestamp, result } = this.state;\n\n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const selectedMusher = currentClass.contestants ? currentClass.contestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp'])).reverse().filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        let lastTimestamp;\n        if (lastResults && lastResults[0]) {\n            lastTimestamp = lastResults[0].timestamp;\n        } else if (selectedMusher.startTime) {\n            lastTimestamp = selectedMusher.startTime;\n        } else if (currentClass.startDate) {\n            lastTimestamp = currentClass.startDate;\n        } else {\n            lastTimestamp = new Date();\n        }\n        result.timestamp = util.isoDate(lastTimestamp, false, false, false);\n\n        this.setState({\n            showTimestamp: !showTimestamp,\n            result,\n        });\n    }\n\n    doneEditResult = () => {\n        const { raceStore, appState } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const { checkpointId } = appState;\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        this.setState({\n            selectedResult: '',\n            selectedCheckpoint,\n            currentResult: null,\n            result: {\n                bib: '',\n                dogs: '',\n                timestamp: '',\n            },\n        });\n    }\n\n    selectResult = (e) => {\n        const resultid = e.target.closest('.resultLine').dataset.resultid;\n        \n        const { appState, raceStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const currentResult = currentClass.results ? toJS(currentClass.results.slice().find(e => e.id === resultid)) : {};\n        \n        this.setState({\n            selectedResult: resultid,\n            currentResult,\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n        //     const { currentClass } = this.props;\n        //     const { raceStore } = this.props.stores;\n        //     const { checkpoints = [], contestants = [], results = [] } = currentClass;\n        //     raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n        // }\n\t}\n\n    componentDidMount() {\n        this.doneEditResult();\n\t}\n\n    render() {\n        const {\n            result,\n            showTimestamp,\n            message,\n            selectedCheckpoint,\n            selectedMusher,\n            isCheckedIn,\n            isCheckedOut,\n            isScratched,\n            isCheckedInPrev,\n            isCheckedOutPrev,\n            isScratchedPrev,\n            currentResult,\n            lastResults = [],\n        } = this.state;\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { checkpointId } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n        const lastResult = lastResults && lastResults[0] ? lastResults[0] : {};\n        let lastCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(cp => cp.id === lastResult.checkpoint) : null;\n        lastCheckpoint = lastCheckpoint ? lastCheckpoint : {};\n\n        // const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n\n        // const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(result.bib, 10)) : null;\n        // const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(result.bib, 10)) : null;\n        // const isCheckedIn = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'in');\n        // const isCheckedOut = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'out');\n        // const isScratched = lastResults.find(e => e.checkpoint === checkpointId && e.direction === 'scratched');\n        // const currentResult = currentClass.results ? currentClass.results.find(e => e.id === selectedResult) : {};\n\n        const { user = {} } = userStore;\n        const { language = 'en' } = user;\n\n        return (<>\n            <div class='mt-2 pb-5' style='height: 70vh;'>\n                <h3>Admin timing - {currentClass.title}</h3>\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n\n                        {currentClass.checkpoints && currentClass.checkpoints.map((currentCheckpoint, idx) => {\n                            let resIn = {};\n                            let resOut = {};\n                            let resScratched = {};\n                            if (lastResults && lastResults.length > 0) {\n                                resIn = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'in') || {};\n                                resOut = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'out') || {};\n                                resScratched = lastResults.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === currentCheckpoint.id && e.direction === 'scratched') || {};\n                            }\n                            \n                            return (<>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === currentClass.checkpoints.length - 1 && 'rounded-pill-right'} rounded-none ${checkpointId === currentCheckpoint.id ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.selectCheckpoint}\n                                        data-id={currentCheckpoint.id}\n                                    >\n                                        {currentCheckpoint.sortOrder}: {currentCheckpoint.name}\n                                        {resOut && resOut.id ? <i class='fas fa-check text-white ml-2' /> : ''}\n                                        {resIn && resIn.id && !resOut.id ? <i class='fas fa-map-marker-alt text-white ml-2' /> : ''}\n                                    </button>\n                                </div>\n                            </>);\n                        })}\n\n                    </div>\n                </div>\n                <div class='w-100 overflow-hidden'>\n                    {selectedCheckpoint && <>\n                        <h3>\n                            {selectedMusher && <><i class='fas fa-user text-muted' /> {selectedMusher.firstname} {selectedMusher.lastname}</>}\n                        </h3>\n\n                        {currentResult ? <>\n                            {['bib', 'dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={currentResult[field]}\n                                        onInput={this.editResult}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['timestamp'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                    <input type='datetime-local' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                        data-classid={currentClass.id}\n                                        data-resultid={currentResult.id}\n                                        data-field={field}\n                                        value={util.isoDate(currentResult[field], false, false, false)}\n                                        onInput={this.editResult}\n                                    />\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}>Hide timestamp</button>\n                                </div>\n                            </>)}\n\n                            <button class='btn btn-lg btn-danger float-left' onClick={this.deleteResult}>\n                                Delete\n                            </button>\n                            <button class='btn btn-lg btn-info float-right' onClick={this.doneEditResult}>\n                                Done\n                            </button>\n                        </> : <>\n\n                            {selectedCheckpoint.sortOrder > lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Previous checkpoint is not logged yet.\n                                </div>\n                            </>}\n\n                            {!isCheckedOutPrev && selectedCheckpoint.sortOrder === lastCheckpoint.sortOrder + 1 && <>\n                                <div class='p-3 mb-2 bg-danger text-white clearfix'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    Not checked out of prev.\n                                </div>\n                            </>}\n                            {/* {selectedCheckpoint.sortOrder} gt\n                            {lastCheckpoint.sortOrder}<br />\n                            isCheckedIn: {JSON.stringify(isCheckedIn, null, 4)}<br />\n                            isCheckedOut: {JSON.stringify(isCheckedOut, null, 4)}<br />\n                            isScratched: {JSON.stringify(isScratched, null, 4)}<br /> */}\n\n                            {/* bib: String,\n                            position: [],\n                            checkpointIn: String,\n                            checkpointOut: String,\n                            dogs: Number,\n                            timestamp: Date,\n                            addedByUser: Number, */}\n                            {['bib'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}>{field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={this.updateField}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {['dogs'].map(field => <>\n                                <div class='form-group'>\n                                    <label for={field}><i class='fas fa-dog' /> {field}</label>\n                                    <input type='text' class='form-control form-control-lg' id={field} aria-describedby={`${field}Help`}\n                                        onInput={linkstate(this, `result.${field}`)}\n                                        value={result[field]}\n                                    />\n                                </div>\n                            </>)}\n\n                            {showTimestamp ? <>\n                                {['timestamp'].map(field => <>\n                                    <div class='form-group'>\n                                        <label for={field}><i class='fas fa-stopwatch' /> {field}</label>\n                                        <input\n                                            type='datetime-local'\n                                            class='form-control'\n                                            id={field}\n                                            aria-describedby={`${field}Help`}\n                                            onInput={linkstate(this, `result.${field}`)}\n                                            value={util.isoDate(result[field], false, false, false).replace(/ /g, 'T')}\n                                            min={util.isoDate(lastResult.timestamp, false, false, false).replace(/ /g, 'T')}\n                                        />\n                                        <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Hide timestamp</button>\n                                    </div>\n                                </>)}\n                            </> : <>\n                                <div class='form-group'>\n                                    <button class='btn btn-link' onClick={this.toggleTimestamp}><i class='fas fa-stopwatch' /> Show timestamp</button>\n                                </div>\n                            </>}\n\n\n                            {isCheckedIn && isCheckedOut && <>\n                                <div class='alert alert-warning my-2 clearfix' role='alert'>\n                                    <span class='float-left' style='font-size: 2.0em;'><i class='fas fa-exclamation-triangle mr-3' /></span>\n                                    {selectedMusher && <>{selectedMusher.firstname} {selectedMusher.lastname}</>} Has checked in and out of this checkpoint!\n                                </div>\n                            </>}\n\n                            <div class='d-flex justify-content-between'>\n                                <div class='text-center'>\n                                    <h3><i class='fas fa-campground text-muted' /> {selectedCheckpoint.name}</h3>\n                                </div>\n                            </div>\n\n                            <div class='d-flex justify-content-between'>\n                                <button class='btn btn-lg btn-success float-left' onClick={this.addResult} data-direction='in' data-classid={currentClass.id} disabled={isCheckedIn ? 'disabled' : ''}>\n                                    CP In <i class='fas fa-sign-in-alt ml-2' />\n                                </button>\n                                <button class='btn btn-lg btn-info float-right' onClick={this.addResult} data-direction='out' data-classid={currentClass.id} disabled={isCheckedOut ? 'disabled' : ''}>\n                                    <i class='fas fa-sign-out-alt mr-2' /> CP Out\n                                </button>\n                            </div>\n                        </>}\n\n                    </>}\n                </div>\n                {message && <div class='alert alert-success mt-3 clearfix' role='alert'>\n                    {message}\n                </div>}\n\n                <div class='overflow-hidden mb-5 mt-3'>\n                    <LastResults\n                        stores={this.props.stores}\n                        lastResults={lastResults}\n                        currentClass={currentClass}\n                        selectedMusher={selectedMusher}\n                        selectResult={this.selectResult}\n                    />\n                </div>\n\n                <div class='d-flex justify-content-center mt-3 mb-5'>\n                    <button class='btn btn-sm btn-block btn-danger' onClick={this.addResult} data-direction='scratched' data-classid={currentClass.id} disabled={isScratched ? 'disabled' : ''}>\n                        Scratch <i class='fas fa-times ml-2' />\n                    </button>\n                </div>\n\n            </div>\n        </>);\n    }\n}\n\nexport default RaceLiveAddResult;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport ImageSlider from '../imageSlider';\nimport StoryComments from './comments';\nimport StoryAddComment from './commentAdd';\nimport Story from './publicStory';\nimport StoryPoll from './storyPoll';\nimport ImageScroller from '../imageScroller';\nimport LikesAndComments from '../feedback/likesAndComments';\nimport Views from '../feedback/views';\n\nimport PublicTeam from '../team/public';\n\nimport Images from '../form/images';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n\tshowTeamSetting: {},\n    viewImageIdx: {},\n    likeStory: {},\n};\n\n@observer\nclass StoryEditInline extends Component {\n    constructor(props) {\n        super(props);\n        this.updateTimer = {};\n        this.textareaRef = createRef();\n        this.state = {\n            sendButtonEnabled: true,\n            storyBody: props.story.body,\n        };\n    }\n\n    saveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyBody: body } = this.state;\n        const { storyStore } = this.props.stores;\n        const { callback = () => true } = this.props;\n        // saveField(id, field, value, updateMemory) {\n        await storyStore.saveField(parseInt(id, 10), 'body', body, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'body', body);\n        this.setState({\n            storyBody: '',\n            storyType: 0,\n\t\t});\n        callback();\n    }\n\n    saveStoryField = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const { value, name } = e.target;\n        const { subfield, subvalue } = e.target.dataset;\n        const { sendButtonEnabled } = this.state;\n        if (!sendButtonEnabled) {\n            return false;\n        }\n        const { storyStore } = this.props.stores;\n        storyStore.publicFeedUpdate(id, name, value);\n        clearTimeout(this.updateTimer[name]);\n        this.updateTimer[name] = setTimeout(async () => {\n            this.doUpdateField(id, name, value, {\n                query: {\n                    [subfield]: subvalue,\n                },\n            });\n        }, 1000);\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { story } = this.props;\n        const { storyStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        if (field === 'images') {\n            if (Array.isArray(story.images) && Array.isArray(value)) {\n                localObjectValue = [...story.images, ...value];\n            }\n        }\n    \n        storyStore.updateField(id, field, localObjectValue);\n        storyStore.publicFeedUpdate(id, field, localObjectValue);\n\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, name, value, opts = {}) {\n        this.setState({ sendButtonEnabled: false });\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), name, value, true, {\n            query: { ...opts.query },\n        });\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    beforeImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: false });\n    }\n\n    afterImagesUploaded = () => {\n        this.setState({ sendButtonEnabled: true });\n    }\n\n    removeImage = async (e) => {\n        const { storyStore } = this.props.stores;\n        const { story } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        storyStore.removeImage({\n            id: story.id,\n            name: imageName,\n        });\n    }\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    componentDidMount() {\n        this.textareaRef.current.focus();\n    }\n\n    render() {\n        const { storyBody, storyType, sendButtonEnabled } = this.state;\n        const { userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n\n        const { story } = this.props;\n        const { id } = story;\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <div class='col-12 text-center mt-2'>\n                        <div class='container-fluid'>\n                            <div class='row d-flex align-items-end'>\n                                {util.isArray(story.images) && story.images.map((img, idx) => (\n                                    <div class='col-3 p-1'>\n                                        <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                        <button class='btn btn-sm btn-link'\n                                            onClick={this.removeImage}\n                                            data-name={img.name}\n                                        ><i class='fas fa-trash' /> Del</button>\n                                        <small>\n                                            <input\n                                                class='form-control'\n                                                type='text'\n                                                name={`images.title`}\n                                                data-subfield={`name`}\n                                                data-subvalue={story.images[idx].name}\n                                                onInput={this.saveStoryField}\n                                                value={story.images[idx].title}\n                                            />\n                                        </small>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <Images object={story} updateField={this.updateFieldValue} before={this.beforeImagesUploaded} after={this.afterImagesUploaded} autoOpen={false} />\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <label><Text id='story.content'>Content</Text></label>\n                        <div class='border rounded rounded-lg position-relative'>\n                            <Localizer>\n                                <textarea\n                                    class='form-control-plaintext px-2'\n                                    type='text'\n                                    placeholder={<Text id='story.add-content'>Add your text here...</Text>}\n                                    onInput={linkState(this, 'storyBody')}\n                                    // onKeyUp={mu.resizeTextarea}\n                                    onFocus={mu.resizeTextarea}\n                                    style='height: 2.3em;'\n                                    value={storyBody || story.body}\n                                    ref={this.textareaRef}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        {isAdmin && <>\n                            <div class='col-12 mt-2'>\n                                <div class='form-group'>\n                                    <small>\n                                        <input\n                                            type='checkbox'\n                                            id={`pinned-${story.id}`}\n                                            name='pinned'\n                                            onInput={this.saveStoryField}\n                                            value={story.pinned ? '' : util.isoDate()}\n                                            checked={story.pinned ? 'checked' : ''}\n                                            />\n                                        <label class='ml-2' for={`pinned-${story.id}`}>Pinned to top.</label>\n                                    </small>\n                                </div>\n                            </div>\n                        </>}\n\n                        {isAdmin && <>\n                            <label><Text id='story.type'>Type</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <select\n                                        class='custom-select custom-select-sm'\n                                        id={story.id}\n                                        name='type'\n                                        onInput={this.saveStoryField}\n                                        value={storyType || story.type}\n                                    >\n                                    <option value=''>-- <Text id='story.type-choose'>Velg type</Text> --</option>\n                                        <option value={1} selected={story.type == 1 ? 'selected' : ''}>✍️ <Text id='story.type-regular'>Vanlig</Text></option>\n                                        <option value={2} selected={story.type == 2 ? 'selected' : ''}>🚀 <Text id='story.type-ad'>Annonse</Text></option>\n                                        <option value={3} selected={story.type == 3 ? 'selected' : ''}>📄 <Text id='story.type-article'>Artikkel</Text></option>\n                                    </select>\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type >= 2 && <>\n                            <label><Text id='story.url-text'>URL text</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='urlText'\n                                        onInput={this.saveStoryField}\n                                        value={story.urlText}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.url'>URL</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='url'\n                                        onInput={this.saveStoryField}\n                                        value={story.url}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n\n                        {story.type === 2 && <>\n                            <label><Text id='story.code'>Code</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='code'\n                                        onInput={this.saveStoryField}\n                                        value={story.code}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.country'>Country</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='country'\n                                        onInput={this.saveStoryField}\n                                        value={story.country}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.region'>Region</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='region'\n                                        onInput={this.saveStoryField}\n                                        value={story.region}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.currency'>Currency</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='currency'\n                                        onInput={this.saveStoryField}\n                                        value={story.currency}\n                                    />\n                                </small>\n                            </div>\n\n                            <label><Text id='story.price'>Price</Text></label>\n                            <div class='form-group'>\n                                <small>\n                                    <input\n                                        class='form-control'\n                                        type='text'\n                                        name='price'\n                                        onInput={this.saveStoryField}\n                                        value={story.price}\n                                    />\n                                </small>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n                <div class='row'>\n                    <div class='col-12 mt-2'>\n                        <button type='button' class={`btn btn-block btn-${sendButtonEnabled ? 'primary' : 'secondary'} mb-2`} disabled={!sendButtonEnabled}\n                            onClick={this.saveStory}\n                            data-id={story.id}\n                        ><i class='fas fa-paper-plane' /> <Text id='story.edit-save'>Save changes</Text></button>\n                    </div>\n                </div>\n            </div>\n        </>)\n    }\n}\n\n@observer\nclass StoryTypeRegular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const translatedText = await storyStore.translate({ story, user });\n        this.setState({ showOriginal: 0, translatedText });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    setSelectedImage = (imageIdx) => {\n        this.setState({ selectedImageIdx: imageIdx });\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal, translatedText, selectedImageIdx = 0 } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        }) || translatedText;\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n        const { components = [], finalBody = '' } = mu.getInlineComponents(body || '');\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} callback={this.setSelectedImage} />\n                </div>\n            </div>\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(finalBody, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link text-muted' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                    {components && components.map((component, idx) => {\n                        if (component.name === 'poll') {\n                            return <StoryPoll\n                                stores={this.props.stores}\n                                story={story}\n                                storyId={story.id}\n                                params={component.params}\n                                opts={component.opts}\n                                content={component.content}\n                                selectedImageIdx={selectedImageIdx}\n                            />;\n                        }\n                    })}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeAd extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    {/* <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}> */}\n                    <div id='storyDetail' data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price > 0) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                            {story.code && <>\n                                <div class='col text-left' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        <span class='font-weight-lighter'><Text id='story.ad-campaign-code'>Kampanjekode</Text>:</span> {story.code}\n                                    </nobr>\n                                </div>\n                            </>}\n                            {story.price > 0 && <>\n                                <div class='col text-right' style='font-size: 1.2em;'>\n                                    <nobr>\n                                        {story.currencty && <span class='font-weight-lighter'>{story.currency}</span>} {util.format(story.price, 2)}\n                                    </nobr>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass StoryTypeArticle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageIdx: {},\n        };\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        this.setState({ showOriginal: 0 });\n        await storyStore.translate({ story, user });\n    }\n\n    showOriginal = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ showOriginal: 1 });\n    }\n\n    getTranslation = () => {\n        const { story } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user } = userStore;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n        const translatedText = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        if (translatedText) {\n            this.setState({ showOriginal: 0 });\n        }\n    }\n\n    componentWillMount() {\n        this.getTranslation();\n    }\n\n    render() {\n        const { viewImageIdx, showOriginal } = this.state;\n        const { userStore, storyStore } = this.props.stores;\n        const { story, likeStory, likeRef } = this.props;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const images = [];\n        if (story.images) {\n            const imgs = toJS(story.images);\n            images.push(...imgs);\n        }\n        const imageIdx = viewImageIdx[story.id] ? viewImageIdx[story.id] : 0;\n        const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n        const translation = mu.getTranslation({\n            object: story,\n            targetLang: language,\n            field: 'body',\n        });\n        let body = translation || story.body;\n        if (showOriginal) {\n            body = story.body;\n        }\n\n        return (<>\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={story.id} dblClick={likeStory} likeRef={likeRef} />\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 overflow-hidden' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                    <div id='storyDetail' onClick={this.showStoryDetail} data-id={story.id}>\n                        <Markdown markdown={mu.replaceImages(body, story.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        {story.language !== language && <>\n                            {!showOriginal && translation ? <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.showOriginal}><i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text></button>\n                            </> : <>\n                                <button type='button' class='btn btn-sm btn-link' onClick={this.translate}><i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text></button>\n                            </>}\n                        </>}\n                    </div>\n                </div>\n                {!!(story.url || story.code || story.price) && <>\n                    <div class='clearfix col-12  py-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                        <div class='row'>\n                            {story.url && <>\n                                <div class='col-12 text-left' style='font-size: 1.0em;'>\n                                    <a href={mu.asUrl(story.url)} target='_blank' rel='noreferrer'>\n                                        <i class='fas fa-link mr-2' />\n                                        {story.urlText ? <>\n                                            {story.urlText}\n                                        </> : <>\n                                            <Text id='story.ad-url-readmore'>Les mer...</Text>\n                                        </>}\n                                    </a>\n                                </div>\n                            </>}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            {/* Flere artikler fra:... */}\n        </>);\n    }\n}\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n        // this.ref = createRef();\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeStory = async (e) => {\n        const { story } = this.props;\n        const { id } = story;\n        const storyId = id;\n\t\tconst { storyStore } = this.props.stores;\n\n        const { likeStory } = this.state;\n        likeStory[storyId] = true;\n        const likeIds = Object.keys(likeStory);\n        this.setState({ likeStory, likeIds });\n        setTimeout(() => {\n            const { likeStory } = this.state;\n            delete likeStory[storyId];\n            const likeIds = Object.keys(likeStory);\n            this.setState({ likeStory, likeIds });\n        }, 1200);\n\n\t\tconst response = await storyStore.likeStory({ id: storyId });\n        if (response && response.status === 200) {\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[storyId]) {\n            delete showAddComment[storyId];\n        } else {\n            showAddComment[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[storyId]) {\n\t\t\t\tthis.inputRef[storyId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    closeAllAddComments = () => {\n        this.setState({\n\t\t\tshowAddComment: {},\n\t\t});\n    }\n\n\ttoggleShowTeamSetting = (e) => {\n\t\tconst storyId = e.target.closest('button').dataset.id;\n\t\tconst { showTeamSetting } = this.state;\n        if (showTeamSetting[storyId]) {\n            delete showTeamSetting[storyId];\n        } else {\n            showTeamSetting[storyId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowTeamSetting,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    async loadStoriesPublicFeed(props = this.props) {\n        const { hashtag } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.loadPublicFeed({ hashtag });\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteStory: {},\n\t\t\tshowEdit,\n            showMenu: {},\n\t\t});\n\t}\n\n    toggleDeleteStory = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteStory = {} } = this.state;\n        showDeleteStory[id] = !showDeleteStory[id];\n\t\tthis.setState({\n\t\t\tshowDeleteStory,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    reportStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.reportStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    adminRemoveStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.adminHideStory({ id });\n        this.setState({\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteStory = async (e) => {\n        const { id } = e.target.closest('button').dataset;\n        const { storyStore } = this.props.stores;\n        await storyStore.saveField(parseInt(id, 10), 'offline', 1, true);\n        storyStore.publicFeedUpdate(parseInt(id, 10), 'offline', 1);\n        this.setState({\n            storyBody: '',\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    doneEdit = () => {\n        this.setState({\n\t\t\tshowDeleteStory: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    showStoryDetail = (e) => {\n        if (e.target.localName === 'a') {\n            return false;\n        }\n        const { id } = e.target.closest('#storyDetail').dataset;\n        if (id) {\n            route(`/stories/${id}`);\n        }\n    }\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    // IntersectionObserver\n    // componentDidMount() {\n    //     const { addIntersectionObserver } = this.props;\n    //     if (addIntersectionObserver) {\n    //         addIntersectionObserver(this.ref);\n    //     }\n    // }\n\n    // componentWillUnmount() {\n    //     const { removeIntersectionObserver } = this.props;\n    //     if (removeIntersectionObserver) {\n    //         removeIntersectionObserver(this.ref);\n    //     }\n    // }\n    // /IntersectionObserver\n\n    render() {\n        const { showAddComment, showDate, viewImageIdx, showMenu = {}, showEdit = {}, showDeleteStory = {}, showTeamSetting, likeStory, likeIds } = this.state;\n        const { story, showAllComments, sessionid, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { userStore, storyStore, appState } = this.props.stores;\n        const { user: currentUser = {}, isAdmin } = userStore;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = storyStore.findPublicTeam(story.team) || {};\n        const user = storyStore.findPublicUser(story.user) || {};\n        const image = mu.getImage({ user, team, priority: 'user', object: story });\n\n        const isTeamAdmin = (team && team.members) ? team.members.some(m => m === currentUser.id) : false;\n\n        let shortname;\n        let name;\n        let username;\n        let userLink;\n        if (team && team.name) {\n            shortname = mu.displayNameShort(team);\n            name = mu.displayName(team);\n            username = mu.displayName(user);\n            if (user.settings && currentUser.uuidv4 !== user.uuidv4) {\n                userLink = user.settings.hideProfile ? null : `/inbox/${user.uuidv4}`;\n            }\n        } else if (user && user.id) {\n            shortname = mu.displayNameShort(user);\n            name = mu.displayName(user);\n        }\n        const { likes, comments, reports = [] } = story;\n        const hasLikedStory = story.likes && story.likes.findIndex(e => e.user === currentUser.id) > -1;\n        const totalFollowers = team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = story;\n        const views = mu.getViews(story.statistics);\n        const adminData = mu.getAdminData(story.statistics);\n\n        return (<>\n            {/* <div\n                class='row pt-3 pb-3 bg-light'\n                style={`${story.offline ? 'opacity: 0.4;' : ''}`}\n                ref={c => this.ref = c}\n                data-id={story.id}\n                data-type={'story'}\n                data-user={story.user}\n                data-team={story.team}\n                data-title={story.title}\n                data-sessionid={sessionid}\n            >\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}> */}\n                    {(isAdmin || (currentUser.id === user.id)) ? <>\n                        <span class='float-right font-weight-lighter text-muted'>\n                            <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={story.id} />\n                        </span>\n                    </> : <>\n                        {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>}\n                    </>}\n                    {showMenu[story.id] && <>\n                        <div class='position-absolute bg-light p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                            {currentUser.id === user.id ? <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={story.id}><i class='fas fa-edit' /> Edit</button>\n                                <hr />\n                                <button class='btn btn-link btn-block text-left text-danger' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                            </> : <>\n                                <button class='btn btn-link btn-block text-left' onClick={this.reportStory} data-id={story.id}><i class='fas fa-flag' /> Report</button>\n                                {isAdmin && <>\n                                    <hr />\n                                    <button class='btn btn-link btn-block text-left text-danger' onClick={this.adminRemoveStory} data-id={story.id}>\n                                        <i class='fas fa-eraser' /> Remove from feed\n                                    </button>\n                                </>}\n                            </>}\n                        </div>\n                    </>}\n\n                    <div class='d-flex position-relative'>\n                        <div\n                            class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                            style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                        >\n                            {!image && <div class='text-muted' style='font-size: 20px; padding-top: 3px;'>{shortname}</div>}\n                        </div>\n                        <div class='flex-grow-1 pl-3 text-overflow' style='line-height: 1.2em;'>\n                            <h5 class='mb-1 position-relative' style={`line-height: 1.0em; ${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {team.public ? <>\n                                    <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{name}</a>\n                                    {/* <a href={`/stories/teams/public/${team.uuidv4}`} class='stretched-link'>{name}</a> */}\n                                </> : <>\n                                    {name}\n                                </>}\n\n                                {isYourTeam && !team.public && <button type='button' class='btn btn-sm btn-link text-muted'\n                                    data-id={story.id}\n                                    onClick={this.toggleShowTeamSetting}\n                                >\n                                    <i class='fas fa-exclamation-triangle' />\n                                </button>}\n\n                            </h5>\n                            <div class='mb-2' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {story.pinned && <>\n                                    <small class='text-muted mr-2'>\n                                        <i class='fas fa-thumbtack' />\n                                    </small>\n                                </>}\n                                {story.type === 2 ? <>\n                                    <small class='text-muted'><Text id='story.sponsored'>Sponsored</Text> -</small>\n                                </> : <>\n                                    {story.date && <small class='text-muted' onClick={this.toggleDate}>\n                                        {showDate ? util.formatDate(story.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(story.date, new Date(), { locale: 'no-NB' })}\n                                    </small>}\n                                </>}\n                                {story.public === 1 ? <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-globe-europe' />\n                                    </small>\n                                </> : <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                                    </small>\n                                </>}\n                                {username && <>\n                                    <small class='ml-2 text-muted'>\n                                        {userLink ? <>\n                                            <i class='fas fa-user' /> <a href={userLink}>{username}</a>\n                                        </> : <>\n                                            <i class='fas fa-user' /> {username}\n                                        </>}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formattedCounty && <>\n                                    <small class='ml-2 text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formattedCounty}\n                                    </small>\n                                </>}\n                            </div>\n                            {isAdmin && <div\n                                class='d-flex flex-row flex-nowrap bg-light border-top border-bottom py-2'\n                                style='overflow: auto;'\n                            >\n                                <small class='text-muted mr-2'>Adm:</small>\n                                {reports && reports.length > 0 && <>\n                                    <small class='text-danger mr-2'>\n                                        <i class='fas fa-flag' /> {reports.length}\n                                    </small>\n                                </>}\n                                {currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                    <small class='text-muted'>\n                                        <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                    </small>\n                                </>}\n                                {user.deviceInfo && <>\n                                    <span class='badge badge-secondary ml-2 float-right font-weight-light'>\n                                        {['platform', 'manufacturer', 'model'].map(e => <>\n                                            <span class='ml-2 text-white'>\n                                                {user.deviceInfo[e]}\n                                            </span>\n                                        </>)}\n                                    </span>\n                                </>}\n\n                                {adminData && <>\n                                    <small class='ml-2 text-muted'>\n                                        V: {adminData.count}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        R: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                                    </small>\n                                    <small class='ml-2 text-muted'>\n                                        D: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                                    </small>\n                                    {story.statisticsCurrent && story.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                        S: {util.format(story.statisticsCurrent.totalInteractions, 0)}\n                                    </small>}\n                                    {story.shadowTags && story.shadowTags.map(tag => <>\n                                        <span class='badge badge-secondary ml-2 float-right font-weight-light'>{tag}</span>\n                                    </>)}\n                                </>}\n                                {/* {story.tags && <>\n                                    {util.isArray(story.tags) && story.tags.map(tag => <>\n                                        <small class='ml-2 text-muted'>\n                                            {tag}\n                                        </small>\n                                    </>)}\n                                </>} */}\n                            </div>}\n                        </div>\n                    </div>\n\n                    {showEdit[story.id] || showDeleteStory[story.id] ? <>\n                        <div class='row mt-2'>\n                            <div class='clearfix col-12' style={`${story.offline ? 'text-decoration: line-through;' : ''}`}>\n                                {showEdit[story.id] && <>\n                                    <StoryEditInline\n                                        stores={this.props.stores}\n                                        story={story}\n                                        key={`story-edit-${story.id}`}\n                                        callback={this.doneEdit}\n                                    />\n                                </>}\n                                {showDeleteStory[story.id] && <div class='clearfix mt-3 mb-3'>\n                                    <button class='btn btn-danger float-left' onClick={this.deleteStory} data-id={story.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteStory} data-id={story.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                </div>}\n                            </div>\n                        </div>\n                    </> : <>\n\n                        {(!story.type || story.type == 1) && <StoryTypeRegular stores={this.props.stores} story={story} key={`story-regular-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 2 && <StoryTypeAd stores={this.props.stores} story={story} key={`story-ad-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n                        {story.type == 3 && <StoryTypeArticle stores={this.props.stores} story={story} key={`story-article-view-${story.id}`} likeStory={this.likeStory} likeRef={likeStory} keys={likeIds} />}\n\n                        <div class='d-flex justify-content-between mt-2'>\n                            <div class='mr-2'>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='story'\n                                    onTeamClick={onTeamClick}\n                                    onUserClick={onUserClick}\n                                />\n                            </div>\n                            {views > 0 && <>\n                                <div>\n                                    <Views\n                                        stores={this.props.stores}\n                                        views={views}\n                                        object={story}\n                                        type='story'\n                                        isTeamAdmin={isTeamAdmin}\n                                        isAdmin={isAdmin}\n                                        onTeamClick={onTeamClick}\n                                        onUserClick={onUserClick}\n                                    />\n                                </div>\n                            </>}\n                        </div>\n\n                        {showTeamSetting[story.id] && <>\n                            <small>\n                                <div class='alert alert-info' role='alert'>\n                                    <span class='display-4 float-left'>\n                                        <i class='fas fa-exclamation-triangle mr-3 mb-3' />\n                                    </span>\n                                    <p>\n                                        <Text id='story.alert-text-1'>Your team is not visible and it's not possible to request friendship with your team.</Text>\n                                    </p>\n                                    <p>\n                                        <Text id='story.alert-text-2'>If you want to make your team visible so other can request to follow your team, you can find the setting here:</Text>\n                                    </p>\n                                    <p>\n                                        <a href={`/teams/edit/${team.id}`}><Text id='story.alert-text-3'>Edit team</Text></a>\n                                    </p>\n                                </div>\n                            </small>\n                        </>}\n\n                        <div>\n                            <div class='row'>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class={`storyImage btn btn-sm btn-outline-${hasLikedStory ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedStory ? 'text-primary' : ''} text-overflow`}\n                                        data-id={story.id}\n                                        onClick={this.likeStory}\n                                    >\n                                        <i class={`${hasLikedStory ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedStory ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col text-center'>\n                                    <button\n                                        type='button'\n                                        class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                        data-id={story.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                                    </button>\n                                </div>\n                                {hasShareApi ? <>\n                                    <div class='col text-center'>\n                                        <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                            onClick={this.shareLink}\n                                            data-url={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            data-title={`title: ${story.title}`}\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </button>\n                                    </div>\n                                </> : <>\n                                    <div class='col text-center'>\n                                        <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                            href={`https://themusher.app/share/story/${story.uuidv4}`}\n                                            target='_blank'\n                                            rel='noreferrer'\n                                            data-native\n                                        >\n                                            <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                                        </a>\n                                    </div>\n                                </>}\n\n                            </div>\n                        </div>\n\n                        <div class='mt-2'>\n                            <StoryComments\n                                stores={this.props.stores}\n                                story={story}\n                                col='10'\n                                offset='2'\n                                compact={false}\n                                showAllComments={showAllComments}\n                                initCall={this.closeAllAddComments}\n                            />\n                            {showAddComment[story.id] && <StoryAddComment\n                                stores={this.props.stores}\n                                story={story}\n                                inputRef={c => this.inputRef[story.id] = c}\n                                inputRefObject={this.inputRef}\n                                col='10'\n                                offset='2'\n                                key={`story-comment-${story.id}`}\n                            />}\n                        </div>\n                    </>}\n                {/* </div> */}\n            {/* </div> */}\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass StoryPoll extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {};\n        this.inputRef = {};\n    }\n\n    pollStory = async (e) => {\n        const { storyId } = this.props;\n\t\tconst { storyStore } = this.props.stores;\n        const { line } = e.target.dataset;\n\t\tconst response = await storyStore.pollStory({ id: storyId, line });\n\t}\n\n    toggleResult = () => {\n        const { viewResult } = this.state;\n        this.setState({ viewResult: !viewResult });\n    }\n\n    render() {\n        const { viewResult } = this.state;\n        const { story, storyId, params, opts, content, selectedImageIdx } = this.props;\n        const { userStore, storyStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n\t\tconst { language = 'en' } = currentUser;\n\n        const lines = content.split('\\n').map(line => line.trim().replace(/^\\-\\s*/g, ''));\n        const hasPolledStory = story.polls && story.polls.findIndex(e => e.user === currentUser.id) > -1;\n        const totalPolls = story.polls ? story.polls.length : 0;\n        let maxPercent = 0;\n        lines.forEach((line) => {\n            const percent = (story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length / totalPolls : 0) * 100;\n            if (percent > maxPercent) {\n                maxPercent = percent;\n            }\n        });\n        const voteDays = opts.days ? parseInt(opts.days, 10) : 7;\n\n        const finishDate = util.addDays(story.date, voteDays);\n        const isExpired = finishDate < new Date();\n        const hasImageRegexp = new RegExp(/{{img\\./i);\n\n        return (<>\n            <div class='w-100 my-4 storyPoll'>\n                {isExpired || hasPolledStory || viewResult ? <>\n                    {lines && lines.map((line, idx) => {\n                        const hasPolledLine = story.polls && story.polls.findIndex(e => e.user === currentUser.id && e.line === mu.md5(line)) > -1;\n                        const totalLinePolls = story.polls ? story.polls.filter(e => e.line === mu.md5(line)).length : 0;\n                        const percent = totalLinePolls / totalPolls * 100;\n                        return (<>\n                            <div class={`progress position-relative my-2 `} style='height: 1.5em; font-size: 1.3em;'>\n                                <span class='position-absolute' style='right: 10px;'> {util.format(percent || 0, 1)}%</span>\n                                <span class='position-absolute' style='left: 10px;'>\n                                    <Markdown markdown={mu.replaceImages(`${line} ${hasPolledLine && `<i class='fas fa-check-circle' />`}`, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                                </span>\n                                <div\n                                    class={`progress-bar ${maxPercent === percent ? 'bg-primary' : 'bg-secondary'}`}\n                                    role=\"progressbar\"\n                                    style={`width: ${percent}%;`}\n                                    aria-valuenow={percent}\n                                    aria-valuemin=\"0\"\n                                    aria-valuemax=\"100\"\n                                />\n                            </div>\n                        </>);\n                    })}\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>{util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}</div>\n                        {isExpired ? <>\n                            <div class='ml-2'>- <Text id='story.finished'>Finished</Text></div>\n                        </> : <>\n                            <div class='ml-2'>- {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text></div>\n                            {!hasPolledStory && <div class='ml-2' onClick={this.toggleResult}>- <Text id='story.view-vote'>View vote</Text></div>}\n                        </>}\n                    </div>\n                </> : <>\n                    {lines && lines.map((line, idx) => <>\n                        <button class={`btn btn-block ${hasImageRegexp.test(line) && idx === selectedImageIdx ? 'btn-outline-success' : 'btn-outline-primary'} rounded-pill`} onClick={this.pollStory} data-line={mu.md5(line)}>\n                            {hasImageRegexp.test(line) && idx === selectedImageIdx && <span class='float-right'><i class='fas fa-eye' /></span>}\n                            <Markdown markdown={mu.replaceImages(line, story.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n                        </button>\n                    </>)}\n\n                    <div class='w-100 mt-3 text-muted d-flex justify-content-start'>\n                        <div>{util.format(totalPolls, 0)} {totalPolls === 1 ? <Text id='story.poll'>vote</Text> : <Text id='story.polls'>votes</Text>}</div>\n                        {isExpired ? <>\n                            <div class='ml-2'>- <Text id='story.finished'>Finished</Text></div>\n                        </> : <>\n                            <div class='ml-2'>- {util.formatDistance(finishDate, new Date(), {}, { extended: true })} <Text id='story.left'>left</Text></div>\n                        </>}\n                        <div class='ml-2' onClick={this.toggleResult}>- <Text id='story.view-results'>View results</Text></div>\n                    </div>\n                </>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPoll;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailUserImages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceUserImage: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\taddRaceUserImage = async () => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceUserImage } = this.state;\n\t\tawait raceStore.addUserImage({ id: raceid, newUserImage: newRaceUserImage });\n\t\tthis.setState({\n\t\t\tnewRaceUserImage: {},\n\t\t});\n\t}\n\n\tupdateUserImageUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceUserImage } = this.state;\n\t\tnewRaceUserImage[field] = value;\n\t\tthis.setState({ newRaceUserImage });\n\t}\n\n\tremoveRaceUserImage = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeUserImage({\n\t\t\tid: raceid,\n\t\t\tuserImageId: id,\n\t\t});\n\t}\n\n\teditRaceUserImage = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceUserImageId: id,\n\t\t\t[`raceUserImage${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editUserImage({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceUserImage = {} } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const tags = ['photos'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: Images](/app-races/${race.id}/userImages)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.user-images'>User images</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.userImages && race.userImages.reverse().map(currentUserImage => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                {isAdmin && <>\n                                    <button class='btn btn-danger position-absolute' style='top:5px; right: 5px;' data-id={currentUserImage.id} onClick={this.removeRaceUserImage}>\n                                        <i class='fas fa-times' />\n                                    </button>\n                                </>}\n\n                                <div class='clearfix'>\n                                    <img src={currentUserImage.image.s3LargeLink} class='img-fluid rounded-lg mb-2' />\n                                </div>\n                                <div class='clearfix'>\n                                    <h5 class='mb-0'>{currentUserImage.title}</h5>\n                                    <small class='text-muted'> {util.formatDate(currentUserImage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentUserImage.body, currentUserImage.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin UserImage Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group '>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentUserImage.id}\n                                                        data-field={field}\n                                                        value={currentUserImage[field]}\n                                                        onInput={this.editRaceUserImage}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                        {isAdmin && <>\n                            <div class='col-12 border rounded-lg m-2 p-3 bg-light'>\n                                <h5>Add new user image</h5>\n                                <div class='row'>\n                                    <div class='col'>\n                                        {newRaceUserImage && newRaceUserImage.image && <img src={newRaceUserImage.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n                                        {['title'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                        {['body'].map(field => <>\n                                            <div class='form-group'>\n                                                <label for={field}>{field}</label>\n                                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                    onInput={linkstate(this, `newRaceUserImage.${field}`)}\n                                                    onKeyUp={this.resizeTextarea}\n                                                    style='height: 3em;'\n                                                    value={newRaceUserImage[field]}\n                                                />\n                                            </div>\t\t\t\t\t\t\t\t\t\t\n                                        </>)}\n                                    </div>\n                                </div>\n                                <Images saved={{}} object={{}} field={'image'} updateField={this.updateUserImageUpload} autoOpen={false} />\n                                <button class='btn btn-info' onClick={this.addRaceUserImage}>Add race user image</button>\n                            </div>\n                        </>}\n                    </div>\n                </div>\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailUserImages;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport MusherInfoHeader from '../races/musherInfoHeader';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveMusherResult extends Component {\n    render() {\n        const { bib, onClickNav = () => {} } = this.props;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n        const { checkpointId } = appState;\n        const { sortedContestants = [] } = raceStore;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId) || {};\n\n        const { checkpoints = [], contestants = [], results = [] } = currentClass;\n\n        const selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === checkpointId) : null;\n        let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(bib, 10)) : null;\n        selectedMusher = selectedMusher ? selectedMusher : {};\n        const selectedMusherIdx = sortedContestants ? sortedContestants.findIndex(e => e.bib === parseInt(bib, 10)) : null;\n        const lastResults = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['-timestamp', '-direction'])).filter(e => parseInt(e.bib, 10) === parseInt(bib, 10)) : null;\n\n        const team = raceStore.getTeamById(selectedMusher.team);\n        const user = team.members ? team.members.find(m => m.email === selectedMusher.email) : {};\n        const image = mu.getImage({ user, team, priority: 'user' });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(selectedMusher);\n\n        let lastResOut;\n        let lastResIn;\n        let totalDistance = 0;\n        let totalTime = 0;\n        let totalMovingTime = 0;\n        let totalInCpTime = 0;\n        let lastEstTimeOut = currentClass.startDate;\n        let lastAvgSpeed = 0;\n\n        const nextBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx + 1] ? sortedContestants[selectedMusherIdx + 1].bib : null;\n        const prevBib = selectedMusherIdx > -1 && sortedContestants[selectedMusherIdx - 1] ? sortedContestants[selectedMusherIdx - 1].bib : null;\n\n        const locale = 'en-GB';\n\n        return (<>\n            {nextBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextBib)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevBib && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevBib)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <MusherInfoHeader\n                stores={this.props.stores}\n                contestant={selectedMusher}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n                onDogClick={this.onDogClick}\n                onClickNav={onClickNav}\n                rank={selectedMusherIdx + 1}\n            >\n                {/* {\n                    \"id\": \"305e720b-12bc-4be3-8244-47a2529c1a26\",\n                    \"user\": 679,\n                    \"Løp\": \"Finnmarksløpet 1200\",\n                    \"bib\": 32,\n                    \"firstname\": \"Thomas\",\n                    \"lastname\": \"Wærner\",\n                    \"cellphone\": \"48176051\",\n                    \"email\": \"thomas.waerner@icloud.com\",\n                    \"country\": \"NO\",\n                    \"flag\": \"🇳🇴\",\n                    \"team\": 2278,\n                    \"startTime\": \"2019-03-08T18:32:00.000Z\",\n                    \"maxStartTime\": 1552071480000,\n                    \"startEpoch\": 1552069920000,\n                    \"timeEqualization\": 26,\n                    \"cpId\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                    \"cpDirection\": \"out\",\n                    \"cpDogs\": 13,\n                    \"cpTimestamp\": \"2019-03-13T00:08:00.000Z\",\n                    \"cpSortOrder\": 8\n                } */}\n                {/* [\n                    {\n                        \"position\": [],\n                        \"id\": \"d9f3d1b6-55e0-4185-b051-e96f1d4eaead\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"out\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-13T00:08:00.000Z\"\n                    },\n                    {\n                        \"position\": [],\n                        \"id\": \"1503b852-3a61-4b91-8323-5e4f862c4399\",\n                        \"bib\": 32,\n                        \"checkpoint\": \"f5834534-4398-49f5-a4ee-ad5c978afa07\",\n                        \"direction\": \"in\",\n                        \"dogs\": 13,\n                        \"timestamp\": \"2019-03-12T19:49:00.000Z\"\n                    }, */}\n                    {/* {\n                        \"position\":[],\n                        \"polygon\":[],\n                        \"id\":\"fa914e06-c56c-4b5b-9719-2dc6ee12c05d\",\n                        \"name\":\"Jergul\",\n                        \"distanceFromStart\":101,\n                        \"sortOrder\":3,\n                        \"distanceFromPrev\":101,\n                        \"estTimeToCpMinutes\":484\n                    } */}\n\n                    {/* <h3>RaceLiveMusherResult</h3> */}\n                    {/* <h5>{bib} {selectedMusher.lastname}</h5> */}\n                    {/* <xmp>{JSON.stringify(team.imageHeader, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(user, null, 4)}</xmp> */}\n                    {/* <xmp>{JSON.stringify(image, null, 4)}</xmp> */}\n                <div class='table-responsive'>\n                    <table class='table table-striped table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Checkpoint</th>\n                                <th class='text-center'>In</th>\n                                <th class='text-center'>Out</th>\n                                <th class='text-center'>Moving time</th>\n                                <th class='text-center'>Avg speed</th>\n                                <th class='text-center'>Total moving time</th>\n                                <th class='text-center'>Rest</th>\n                                <th class='text-center'>Total rest</th>\n                                <th class='text-center'>% rest</th>\n                                <th class='text-center'>Distance</th>\n                                <th class='text-center'>Total distance</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {checkpoints && checkpoints.map((cp, cpIdx) => {\n                                const now = Math.floor(new Date().getTime() / 1000, 10);\n                                const resIn = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'in') || {};\n                                const resOut = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'out') || {};\n                                const resScratched = results.slice().find(e => parseInt(e.bib, 10) == selectedMusher.bib && e.checkpoint === cp.id && e.direction === 'scratched') || {};\n                                let timeInCp = 0;\n                                if (!cp.isStartLine && resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                    timeInCp = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                }\n                                let movingTime = 0;\n                                if (lastResOut && resIn && lastResOut.timestamp && resIn.timestamp) {\n                                    movingTime = mu.deltaSec(lastResOut.timestamp, resIn.timestamp);\n                                }\n\n                                let hasBeenInCp = false;\n                                let avgSpeed = 0;\n                                if (resIn && resIn.timestamp) {\n                                    hasBeenInCp = true;\n                                    avgSpeed = cp.distanceFromPrev / (movingTime / 3600);\n                                }\n                                totalDistance += cp.distanceFromPrev ? parseInt(cp.distanceFromPrev, 10) : 0;\n                                totalMovingTime += movingTime ? movingTime : 0;\n                                totalInCpTime += timeInCp ? timeInCp : 0;\n                                totalTime += (movingTime ? movingTime : 0) + (timeInCp ? timeInCp : 0);\n                                const percentRest = totalTime ? totalInCpTime / totalTime * 100 : 0;\n                                const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n                                let line;\n                                let estTimeOutClass = 'text-muted font-weight-lighter';\n                                let totalRestClass = 'text-info';\n                                if (hasBeenInCp) {\n                                    let estTimeOut;\n                                    let estRest;\n                                    let restInCpSoFar;\n                                    // if (cp.isStartLine) {\n                                    //     estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                    //     estRest = 0;\n                                    if (!resOut || !resOut.timestamp) {\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.timeEqualization) {\n                                            if (currentClass.requiredRestMinutes && totalInCpTime < reqTotalRestInSec) {\n                                                estRest = reqTotalRestInSec - totalInCpTime + selectedMusher.timeEqualization * 60;\n                                                estTimeOutClass = 'text-warning font-weight-bold';\n                                            }\n                                            if (!estRest && cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                                estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                            }\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = 180 * 60;\n                                        }\n                                        if (cp.isStartLine) {\n                                            estTimeOut = mu.addDeltaSec(selectedMusher.startTime || currentClass.startDate, 0);\n                                        } else {\n                                            estTimeOut = mu.addDeltaSec(resIn.timestamp, estRest);\n                                            restInCpSoFar = mu.deltaSec(resIn.timestamp, now);\n                                        }\n                                        lastEstTimeOut = estTimeOut;\n\n                                        if (reqTotalRestInSec) {\n                                            if ((totalInCpTime + restInCpSoFar) > (reqTotalRestInSec + (selectedMusher.timeEqualization * 60))) {\n                                                totalRestClass = 'text-success';\n                                            } else {\n                                                totalRestClass = 'text-danger';\n                                            }\n                                        }\n                                    }\n\n                                    line = (<>\n                                        <tr>\n                                            <td><nobr>{cp.name}</nobr></td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resIn.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resIn.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    {resIn.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resIn.dogs}</>}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resOut.timestamp && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(resOut.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(resOut.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        {resOut.dogs > 0 && <><i class='fas fa-dog text-muted ml-2' /> {resOut.dogs}</>}\n                                                    </nobr>}\n                                                    {!resScratched.timestamp && estTimeOut && <nobr class={`${estTimeOutClass}`}>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </>}\n                                                {resScratched.timestamp && <nobr class='text-danger'>\n                                                    <i class='fas fa-times' />\n                                                    <span class='text-muted mr-1'>{mu.formatDate(resScratched.timestamp, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(resScratched.timestamp, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(movingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.secToHms(totalMovingTime, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine || cp.isStartLine ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!resOut || !resOut.timestamp ? <>\n                                                            <nobr class='text-info'>\n                                                                {util.secToHms(restInCpSoFar, true)}\n                                                            </nobr>\n                                                        </> : <>\n                                                            {!cp.isStartLine && <>\n                                                                {estRest > 0 ? <>\n                                                                    <nobr class='text-muted font-weight-lighter'>\n                                                                        {util.secToHms(estRest, true)}\n                                                                    </nobr>\n                                                                </> : <>\n                                                                    <nobr>\n                                                                        {util.secToHms(timeInCp, true)}\n                                                                    </nobr>\n                                                                </>}\n                                                            </>}\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isFinishLine ? <>\n                                                    <nobr>\n                                                        {util.secToHms(totalInCpTime, true)}\n                                                    </nobr>\n                                                </> : <>\n                                                    {resScratched.timestamp ? <>\n                                                        &nbsp;\n                                                    </> : <>\n                                                        {!cp.isStartLine && <>\n                                                            <nobr>\n                                                                {restInCpSoFar ? <>\n                                                                    <span class={totalRestClass}>\n                                                                        {util.secToHms(totalInCpTime + restInCpSoFar, true)}\n                                                                    </span> <span class='text-muted font-weight-lighter'>/ {util.secToHms(reqTotalRestInSec + (selectedMusher.timeEqualization * 60), true)}</span>\n                                                                </> : <>\n                                                                    {util.secToHms(totalInCpTime, true)}\n                                                                </>}\n                                                            </nobr>\n                                                        </>}\n                                                    </>}\n                                                </>}\n                                                {/* {cp.timeEqualization && <>\n                                                    <br />\n                                                    {currentClass.requiredRestMinutes}\n                                                </>} */}\n                                            </td>\n                                            <td class='text-center'>\n                                                {cp.isStartLine || resScratched.timestamp ? <>\n                                                    &nbsp;\n                                                </> : <>\n                                                    {percentRest > 0 && <nobr>\n                                                        {util.format(percentRest || 0, 0)} <span class='text-muted font-weight-lighter'>%</span>\n                                                    </nobr>}\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {totalDistance} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                        </tr>\n                                    </>);\n                                    if (resOut && resOut.timestamp) {\n                                        lastEstTimeOut = resOut.timestamp;\n                                        lastAvgSpeed = avgSpeed;\n                                    }\n                                } else {\n                                    let estTimeIn;\n                                    let estTimeOut;\n                                    let estRest;\n                                    let movingTimeSoFar;\n                                    const distanceMeters = cp.distanceFromPrev * 1000;\n                                    const avgSpeedMs = lastAvgSpeed / 3.6;\n                                    let estTimeToNext = lastAvgSpeed ? (distanceMeters / avgSpeedMs / 60) : (cp.estTimeToCpMinutes || 0);\n                                    if (cp.isStartLine) {\n                                        estTimeIn = selectedMusher.startTime || currentClass.startDate;\n                                        estRest = 0;\n                                    } else if (lastEstTimeOut) {\n                                        estTimeIn = mu.addDeltaSec(lastEstTimeOut, estTimeToNext * 60);\n                                        // requiredRestMinutes: Number,\n                                        // estTimeToCpMinutes: Number,\n                                        // timeEqualization: Number,\n                                        if (cp.isStartLine) {\n                                            estRest = 0;\n                                        } else if (cp.requiredRestMinutes && cp.timeEqualization && selectedMusher.timeEqualization) {\n                                            estRest = cp.requiredRestMinutes * 60 + selectedMusher.timeEqualization * 60;\n                                        } else if (cp.requiredRestMinutes > 0) {\n                                            estRest = cp.requiredRestMinutes * 60;\n                                        } else {\n                                            estRest = (cp.estRestMinutes || 180) * 60;\n                                        }\n                                        estTimeOut = mu.addDeltaSec(estTimeIn, estRest);\n                                        lastEstTimeOut = estTimeOut;\n                                    }\n                                    if (lastResOut && lastResOut.timestamp) {\n                                        movingTimeSoFar = mu.deltaSec(lastResOut.timestamp, now);\n                                    }\n\n                                    avgSpeed = lastAvgSpeed || cp.distanceFromPrev / (estTimeToNext * 60 / 3600);\n                                    line = (\n                                        <tr>\n                                            <td>{cp.name}</td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info font-weight-light'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        est:\n                                                        <span class='text-muted mr-1 ml-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && estTimeIn && <nobr>\n                                                        <span class='text-muted mr-1'>{mu.formatDate(estTimeIn, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                        {mu.formatDate(estTimeIn, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isFinishLine && estTimeOut && <nobr>\n                                                    <span class='text-muted mr-1'>{mu.formatDate(estTimeOut, { locale, day: 'numeric', month: 'numeric' })}</span>\n                                                    {mu.formatDate(estTimeOut, { locale, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>\n                                                    {!cp.isStartLine && <nobr>\n                                                        {util.secToHms(cp.estTimeToCpMinutes * 60, true)}\n                                                    </nobr>}\n                                                </td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && <nobr>\n                                                    {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                </nobr>}\n                                            </td>\n                                            {lastResOut && lastResOut.timestamp ? <>\n                                                <td class='text-center text-info'>\n                                                    <nobr>\n                                                        {util.secToHms(movingTimeSoFar + totalMovingTime, true)}\n                                                    </nobr>\n                                                </td>\n                                            </> : <>\n                                                <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            </>}\n                                            <td class='text-center text-muted font-weight-lighter'>\n                                                {!cp.isStartLine && !cp.isFinishLine && <nobr>\n                                                    {util.secToHms(estRest, true)}\n                                                </nobr>}\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center'>\n                                                <nobr>\n                                                    {cp.distanceFromPrev || 0} <span class='text-muted font-weight-lighter'>km</span>\n                                                </nobr>\n                                            </td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                            <td class='text-center text-muted font-weight-lighter'>&nbsp;</td>\n                                        </tr>\n                                    );\n                                }\n                                lastResOut = resOut;\n                                lastResIn = resIn;\n                                return line;\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n\n                {/* <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(currentClass, null, 4)}</xmp> */}\n                {/* <xmp>{JSON.stringify(lastResults, null, 4)}</xmp> */}\n            </MusherInfoHeader>\n        </>);\n    }\n}\n\nexport default RaceLiveMusherResult;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Images from '../../components/form/images';\n\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailNews extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRaceArticle: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    addRaceArticle = async () => {\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tconst { newRaceArticle } = this.state;\n\t\tawait raceStore.addArticle({ id: raceid, newArticle: newRaceArticle });\n\t\tthis.setState({\n\t\t\tnewRaceArticle: {},\n\t\t});\n\t}\n\n    editRaceArticle = async (e) => {\n\t\tconst { id, field } = e.target.dataset;\n\t\tconst { value } = e.target;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst data = {\n\t\t\traceArticleId: id,\n\t\t\t[`raceArticle${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[`${raceid}-${id}-${field}`]);\n\t\tthis.updateTimer[`${raceid}-${id}-${field}`] = setTimeout(async () => {\n\t\t\traceStore.editArticle({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 1500);\n\n\t\tthis.resizeTextarea(e.target);\n\t}\n\n    removeRaceArticle = async (e) => {\n\t\tconst id = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n\t\tawait raceStore.removeArticle({\n\t\t\tid: raceid,\n\t\t\tarticleId: id,\n\t\t});\n\t}\n\n    updateArticleUpload = ({ field, value }) => {\n\t\t// updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n\t\tconst { newRaceArticle } = this.state;\n\t\tnewRaceArticle[field] = value;\n\t\tthis.setState({ newRaceArticle });\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    render() {\n        const { newRaceArticle } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        const tags = ['news'];\n        if (race.tag) {\n            race.tag.split(',').forEach(tag => {\n                tags.push(tag.trim());\n            })\n        }\n\n        return (<>\n            {user.id && <StoryAdd stores={this.props.stores} hashTags={tags} postfix={`[🔗 ${race.title}: News](/app-races/${race.id}/news)`} topic={`race-${race.id}`} />}\n\n            <StoryPublicFeed stores={this.props.stores} hashtags={tags} />\n\n            {/* <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.news'>Nyheter</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.articles && race.articles.reverse().map(currentArticle => <>\n                            <div class='col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4 p-3 position-relative mb-3'>\n                                <h5 class='mb-0'>{mu.replaceImages(currentArticle.title, race.images, language, false)}</h5>\n                                <small class='text-muted'> {util.formatDate(currentArticle.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</small><br />\n                                {currentArticle.image && <img src={currentArticle.image.s3LargeLink} class='float-right w-50 rounded-lg ml-2' />}\n                                <div class='font-weight-bold'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n                                <div class='clearfix'>\n                                    <Markdown markdown={mu.replaceImages(currentArticle.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>\n\n                                {isAdmin && <>\n                                    <div class='border-top border-bottom mb-5'>\n                                        <details>\n                                            <summary>Admin edit</summary>\n                                            <h5 class='border-bottom'>Admin News Edit</h5>\n                                            {['title'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <input type='text' class='form-control font-weight-bold' id={field} aria-describedby={`${field}Help`}\n                                                        style='font-size: 1.5em;'\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                    />\n                                                </div>\n                                            </>)}\n                                            {['ingress', 'body'].map(field => <>\n                                                <div class='form-group'>\n                                                    <label for={field}>{field}</label>\n                                                    <textarea type='textarea' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                                        data-id={currentArticle.id}\n                                                        data-field={field}\n                                                        value={currentArticle[field]}\n                                                        onInput={this.editRaceArticle}\n                                                        style='height: 3em;'\n                                                    />\n                                                </div>\n                                            </>)}\n                                        </details>\n                                    </div>\n                                </>}\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n                {isAdmin && <>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                        <h5>Add new article</h5>\n                        {newRaceArticle && newRaceArticle.image && <img src={newRaceArticle.image.s3LargeLink} class='float-right w-50'  onError={this.handleImageErrored} />}\n\n                        {['title'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <input type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        {['ingress', 'body'].map(field => <>\n                            <div class='form-group'>\n                                <label for={field}>{field}</label>\n                                <textarea type='text' class='form-control' id={field} aria-describedby={`${field}Help`}\n                                    onInput={linkstate(this, `newRaceArticle.${field}`)}\n                                    onKeyUp={this.resizeTextarea}\n                                    style='height: 3em;'\n                                    value={newRaceArticle[field]}\n                                />\n                            </div>\t\t\t\t\t\t\t\t\t\t\n                        </>)}\n                        <Images saved={{}} object={{}} field={'image'} updateField={this.updateArticleUpload} autoOpen={false} />\n                        <button class='btn btn-info' onClick={this.addRaceArticle}>Add race article</button>\n                    </div>\n                </>}\n            </div> */}\n        </>);\n    }\n}\n\nexport default AppRaceDetailNews;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport mu from '../../../lib/musher-util';\n\n@observer\nclass RaceCommentReply extends Component {\n    commentRace = async () => {\n        const { callback = () => {}, commentId } = this.props;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n        const { comment = '' } = this.state;\n\t\tconst response = await raceStore.commentReplyRace({ id: race.id, commentId, comment });\n\t\tif (response && response.status === 200) {\n            this.setState({\n                comment: '',\n            });\n            callback({ race, response });\n\t\t}\n\t}\n\n    render() {\n        const { inputRef } = this.props;\n        const { comment } = this.state;\n        const { userStore } = this.props.stores;\n        const { user = {} } = userStore;\n        const displayNameShort = mu.displayNameShort(user);\n        const displayName = mu.displayName(user);\n        const userImage = user.image || (user.images ? user.images[0] : undefined);\n\n        return (\n            <div class='w-100'>\n                <div class='d-flex mb-0 position-relative w-100'>\n                    <div \n                        class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                        style={`${userImage ? `background-image: url('${userImage.s3SmallLink}'); background-size: cover;` : ''} border-width: 3px !important;`}\n                    >\n                        {!userImage && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                    </div>\n                    <div class='col pl-3' style='line-height: 1.2em;'>\n\n                        <div class='d-flex bd-highlight'>\n                            <div class='p-0 w-100 bd-highlight'>\n                                <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                <Localizer>\n                                    <textarea\n                                        class='form-control rounded-lg'\n                                        type='text'\n                                        placeholder={<Text id='comments.write-reply'>Write a reply...</Text>}\n                                        onInput={linkState(this, 'comment')}\n                                        onKeyUp={mu.resizeTextarea}\n                                        onFocus={mu.resizeTextarea}\n                                        style='height: 2.3em;'\n                                        value={comment}\n                                        ref={inputRef}\n                                    />\n                                </Localizer>\n                            </div>\n                            <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                <button type='button' class='btn btn-sm btn-primary mb-2'\n                                    onClick={this.commentRace}\n                                ><i class='fas fa-paper-plane' /></button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RaceCommentReply;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\trequestSent: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadTeams() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { teamStore } = this.props.stores;\n\t\tawait teamStore.loadPublic({ query: { notfollowing: 1, array: 1 }, limit: 15 });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\trequestFollowTeam = (e) => {\n        const { teamStore, userStore } = this.props.stores;\n        const { user } = userStore;\n        const { team } = e.target.closest('button').dataset;\n        teamStore.followRequest(parseInt(team, 10), user);\n\t\tconst { requestSent } = this.state;\n\t\trequestSent[team] = true;\n        this.setState({ requestSent });\n    }\n\n    getButton = (team) => {\n        const { requestSent } = this.state;\n        const { userStore } = this.props.stores;\n        const { user } = userStore;\n        const isYourTeam = team.members && team.members.findIndex(e => e.id === user.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(user.id) > -1;\n        const isBlocked = team.blockedFollowers && team.blockedFollowers.indexOf(user.id) > -1;\n        const hasRequestedFollow = requestSent[team.id] || team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n\n        if (isYourTeam) {\n            return (\n                <i class='fas fa-home' />\n            );\n        }\n        if (isFollowing) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    onClick={this.unFollowTeam}\n                    disabled='true'\n                    data-team={team.id}\n                >\n                    <i class='fas fa-link mr-2' />\n                    <Text id='teams.connect.is-following'>Følger</Text>\n                </button>\n            );\n        }\n        if (isBlocked) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hand-paper mr-2' />\n                    <Text id='teams.connect.is-blocked'>Blokkert</Text>\n                </button>\n            );\n        }\n        if (hasRequestedFollow) {\n            return (\n                <button\n                    class={`btn btn-sm btn-block btn-outline-secondary float-right`}\n                    disabled='true'\n                >\n                    <i class='fas fa-hourglass-half mr-2' />\n                    <Text id='teams.connect.has-requested'>Venter på godkjenning</Text>\n                </button>\n            );\n        }\n        return (\n            <button\n                class={`btn btn-sm btn-block btn-outline-success float-right`}\n                onClick={this.requestFollowTeam}\n                data-team={team.id}\n            >\n                <i class='far fa-hand-point-right mr-2' />\n                <Text id='teams.connect.follow'>Følg</Text>\n            </button>\n        );\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { publicTeamsToFollow } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!publicTeamsToFollow || publicTeamsToFollow.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n\t\t\t<div class='row pb-1 bg-light'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n\t\t\t\t\t<div class='container-fluid'>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-12'>\n\t\t\t\t\t\t\t\t<h5><Text id='teams.connect.teams-to-follow'>Team du kan følge</Text>:</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n\t\t\t\t\t\t\t\t{util.isArray(publicTeamsToFollow) && publicTeamsToFollow.map((team) => {\n\t\t\t\t\t\t\t\t\tconst image = team.image && team.image.s3SmallLink ? team.image : null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class='mr-2' style='width: 110px;'>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclass={`text-center border rounded-lg`}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover; width: 110px; height: 100px;` : 'width: 110px; height: 100px;'}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{!image && <i class='fas fa-users text-muted mt-3' style='font-size: 40px;' />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{team.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.place ? `${team.place}, ` : ''} {team.country} &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class='text-overflow'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small class='text-muted'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.dogs && <span class=''><i class='fas fa-dog' /> {team.dogs.length}</span>} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team && team.followers && <span class='ml-2'><i class='fas fa-user' /> {team.followers.length}</span>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.getButton(team)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\nimport linkState from 'linkstate';\n\nimport RaceReplyComment from './commentReply';\n\nimport mu from '../../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n    likeComment: {},\n    likeReply: {},\n    showOriginal: {},\n};\n\nconst MAX_COMMENTS = 2;\n\n@observer\nclass RaceComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    addLikeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.closest('.commentContainer').dataset.id;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeComment } = this.state;\n        likeComment[commentId] = true;\n        this.setState({ likeComment });\n        setTimeout(() => {\n            const { likeComment } = this.state;\n            delete likeComment[commentId];\n            this.setState({ likeComment });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceComment({ id: race.id, commentId });\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', race, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n        const replyId = e.target.closest('.replyContainer').dataset.id;\n        const commentId = e.target.closest('.replyContainer').dataset.comment;\n        const { race } = this.props;\n\t\tconst { raceStore } = this.props.stores;\n\n        const { likeReply } = this.state;\n        likeReply[replyId] = true;\n        this.setState({ likeReply });\n        setTimeout(() => {\n            const { likeReply } = this.state;\n            delete likeReply[replyId];\n            this.setState({ likeReply });\n        }, 1200);\n\n\t\tconst response = await raceStore.likeRaceCommentReply({ id: race.id, replyId, commentId });\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', race, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    toggleMenu = (e) => {\n        const { id } = e.target.closest('i').dataset;\n\t\tconst { showMenu = {} } = this.state;\n        showMenu[id] = !showMenu[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n            showEdit: {},\n\t\t\tshowMenu,\n\t\t});\n\t}\n\n    toggleEdit = (e) => {\n        const { id, comment: commentEditText } = e.target.closest('button').dataset;\n\t\tconst { showEdit = {} } = this.state;\n        showEdit[id] = !showEdit[id];\n\t\tthis.setState({\n            showDeleteComment: {},\n\t\t\tshowEdit,\n            showMenu: {},\n            commentEditText,\n\t\t});\n\t}\n\n    toggleDeleteComment = (e) => {\n        const { id } = e.target.closest('button').dataset;\n\t\tconst { showDeleteComment = {} } = this.state;\n        showDeleteComment[id] = !showDeleteComment[id];\n\t\tthis.setState({\n\t\t\tshowDeleteComment,\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\t}\n\n    deleteComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentRace({ id: race.id, commentId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    deleteCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.deleteCommentReplyRace({ id: race.id, commentId, replyId });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n\n    }\n\n    saveComment = async (e) => {\n        const { id: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentRace({ id: race.id, commentId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    saveCommentReply = async (e) => {\n        const { id: replyId, commentid: commentId } = e.target.closest('button').dataset;\n        const { commentEditText: comment } = this.state;\n        const { race } = this.props;\n        const { raceStore } = this.props.stores;\n        await raceStore.editCommentReplyRace({ id: race.id, commentId, replyId, comment });\n        this.setState({\n            commentEditText: '',\n\t\t\tshowDeleteComment: {},\n            showEdit: {},\n            showMenu: {},\n\t\t});\n    }\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { race } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await raceStore.translateCommentReply({ commentid, replyid, race, user });\n        } else {\n            translatedText[key] = await raceStore.translateComment({ commentid, race, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showMenu = {}, showEdit = {},\n            showDeleteComment = {}, commentEditText, likeComment, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { race, callback = () => {}, initCall = () => {}, col = 12, offset = 0, compact = false  } = this.props;\n        const { userStore, raceStore } = this.props.stores;\n        const { user: currentUser } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (race.comments) {\n            totalComments = race.comments.length;\n            if (showAllComments) {\n                filteredComments = race.comments;\n            } else {\n                // filteredComments = race.comments.slice(0, MAX_COMMENTS);\n                const max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = race.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n\n        return (\n            <div class={`col-${col} offset-${offset} col-sm-8 col-lg-6 offset-sm-2 offset-lg-3`}>\n                {race && util.isArray(filteredComments) && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                    const translation = raceStore.getCommentTranslations({\n                        race,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg position-relative'>\n\n                                        {currentUser.id === user.id && <>\n                                            <span class='float-right font-weight-lighter text-muted'>\n                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={comment.id} />\n                                            </span>\n                                        </>}\n                                        {showMenu[comment.id] && <>\n                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={comment.id} data-comment={comment.comment}><i class='fas fa-edit' /> Edit</button>\n                                                <hr />\n                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                            </div>\n                                        </>}\n\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                    {user.uuidv4 && user.uuidv4 !== currentUser.uuidv4 ? <>\n                                                        <a href={`/inbox/${user.uuidv4}`}>{displayName}</a>\n                                                    </> : <>\n                                                        {displayName}\n                                                    </>}\n                                                    {teams && teams.length > 0 && <>\n                                                        <span class='font-weight-lighter text-muted ml-1'>\n                                                            {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                - <a href={`/teams/public/${t.uuidv4}`}>{t.name}</a>\n                                                            </>)}\n                                                        </span>\n                                                    </>}\n                                                </h5>\n\n\n                                                {showEdit[comment.id] ? <>\n                                                    <div class='d-flex bd-highlight'>\n                                                        <div class='p-0 w-100 bd-highlight'>\n                                                            <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                            <div class='border rounded rounded-lg position-relative'>\n                                                                <Localizer>\n                                                                    <textarea\n                                                                        class='form-control-plaintext px-2'\n                                                                        type='text'\n                                                                        placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                        onInput={linkState(this, 'commentEditText')}\n                                                                        onKeyUp={mu.resizeTextarea}\n                                                                        onFocus={mu.resizeTextarea}\n                                                                        style='height: 2.3em;'\n                                                                        value={commentEditText}\n                                                                    />\n                                                                </Localizer>\n                                                           </div>\n                                                        </div>\n                                                        <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                            <button type='button' class='btn btn-primary mb-2'\n                                                                onClick={this.saveComment}\n                                                                data-id={comment.id}\n                                                            ><i class='fas fa-paper-plane' /></button>\n                                                        </div>\n                                                    </div>\n                                                </> : <>\n                                                    <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                </>}\n                                                {showDeleteComment[comment.id] && <div class='clearfix mt-3 mb-3'>\n                                                    <button class='btn btn-danger float-left' onClick={this.deleteComment} data-id={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                    <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={comment.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                </div>}\n\n                                            </span>\n                                        </div>\n                                        <div>\n                                            <div class='container-fluid px-3 mt-1'>\n                                                {currentImage && <div class='clearfix row position-relative'>\n                                                    <div\n                                                        class={`commentContainer col-12 px-0 overflow-hidden`}\n                                                        style={`max-height: 60vh;`}\n                                                        onDblclick={this.addLikeComment}\n                                                        data-id={comment.id}\n                                                    >\n                                                        <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                    </div>\n                                                    {likeComment[comment.id] && <span class='likeHeart position-absolute text-white display-1' style='top: calc(50% - 50px); left: calc(50% - 50px); width: 100px; height: 100px;'>\n                                                        <i class='fas fa-heart likeStory' />\n                                                    </span>}\n                                                </div>}\n                                                {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                    {util.isArray(images) && images.map((img, idx) => {\n                                                        return (<>\n                                                            <div\n                                                                class={`col px-0 overflow-hidden`}\n                                                                style={`max-height: 100px; min-width: 100px;`}\n                                                            >\n                                                                <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                            </div>\n                                                        </>);\n                                                    })}\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`commentContainer btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.addLikeComment}\n                                            data-id={comment.id}\n                                            disabled={hasLikedComment}\n                                        >\n                                            {hasLikedComment ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-10 offset-2 mb-2'>\n                                {comment && util.isArray(filteredReplises) && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = raceStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = mu.displayNameShort(user);\n                                    const displayName = mu.displayName(user);\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n                                    const { currentLocationGeocode = {} } = reply;\n\n                                    const replyTranslation = raceStore.getCommentReplyTranslations({\n                                        race,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div\n                                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg position-relative'>\n                                                    {currentUser.id === user.id && <>\n                                                            <span class='float-right font-weight-lighter text-muted'>\n                                                                <i class='fas fa-ellipsis-h' onClick={this.toggleMenu} data-id={reply.id} />\n                                                            </span>\n                                                        </>}\n                                                        {showMenu[reply.id] && <>\n                                                            <div class='position-absolute bg-white p-2 border rounded rounded-lg shadow-sm' style='top: 30px; right: 10px; width: 60%; z-index: 999999;'>\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleEdit} data-id={reply.id} data-comment={reply.comment}><i class='fas fa-edit' /> Edit</button>\n                                                                <hr />\n                                                                <button class='btn btn-link btn-block text-left' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                            </div>\n                                                        </>}\n\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-2' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                                {teams && teams.length > 0 && <>\n                                                                    <span class='font-weight-lighter text-muted ml-2'>\n                                                                        {teams.filter(e => e.public === 1).slice(0, 1).map(t => <>\n                                                                            - <a href={`/teams/public/${t.uuidv4}`} class='mr-2'> {t.name}</a>\n                                                                        </>)}\n                                                                    </span>\n                                                                </>}\n                                                            </h5>\n\n\n                                                            {showEdit[reply.id] ? <>\n                                                                <div class='d-flex bd-highlight'>\n                                                                    <div class='p-0 w-100 bd-highlight'>\n                                                                        <label class='sr-only' for='inlineFormInput'><Text id='comments.comment'>Kommentar</Text></label>\n                                                                        <div class='border rounded rounded-lg position-relative'>\n                                                                            <Localizer>\n                                                                                <textarea\n                                                                                    class='form-control-plaintext px-2'\n                                                                                    type='text'\n                                                                                    placeholder={<Text id='comments.write-comment'>Skriv en kommentar...</Text>}\n                                                                                    onInput={linkState(this, 'commentEditText')}\n                                                                                    onKeyUp={mu.resizeTextarea}\n                                                                                    onFocus={mu.resizeTextarea}\n                                                                                    style='height: 2.3em;'\n                                                                                    value={commentEditText}\n                                                                                />\n                                                                            </Localizer>\n                                                                    </div>\n                                                                    </div>\n                                                                    <div class='p-0 pl-2 flex-shrink-1 bd-highlight'>\n                                                                        <button type='button' class='btn btn-primary mb-2'\n                                                                            onClick={this.saveCommentReply}\n                                                                            data-commentid={comment.id}\n                                                                            data-id={reply.id}\n                                                                        ><i class='fas fa-paper-plane' /></button>\n                                                                    </div>\n                                                                </div>\n                                                            </> : <>\n                                                                <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                            </>}\n                                                            {showDeleteComment[reply.id] && <div class='clearfix mt-3 mb-3'>\n                                                                <button class='btn btn-danger float-left' onClick={this.deleteCommentReply} data-id={reply.id} data-commentid={comment.id}><i class='fas fa-trash-alt' /> Delete</button>\n                                                                <button class='btn btn-secondary float-right' onClick={this.toggleDeleteComment} data-id={reply.id}><i class='fas fa-times-circle' /> Cancel</button>\n                                                            </div>}\n\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`replyContainer btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                            disabled={hasLikedReply}\n                                                        >\n                                                            {hasLikedReply ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                            {reply.updatedDate && <>\n                                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(reply.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                                            </>}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <RaceReplyComment stores={this.props.stores} race={race}\n                                    initCall={initCall}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                    key={`race-commentreply-${comment.id}`}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default RaceComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {\n};\n\n@observer\nclass RaceText extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n\t\tconst { appState } = this.props.stores;\n\t\tconst { text } = this.props;\n\t\tconst { darkmode, language = 'en' } = appState;\n\n        let finalText = text;\n\n        const regex = new RegExp(`/<${language}>(.*?)<\\/${language}>/`);\n        const parsedText = text.replace(regex, '$1');\n        if (parsedText) {\n            finalText = text;\n        }\n\n\t\treturn (\n\t\t\t<>\n                {finalText}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RaceText;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n};\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass Checkpoints extends Component {\n    render() {\n        const { checkpoints, thClass, thStyle, selectedCheckpointId, width, widthCp, onClickCheckpoint = () => {}, dotColor } = this.props;\n        return (<>\n            {checkpoints && checkpoints.map((cp, cpIdx) => <>\n                {cpIdx > 0 && <th class={thClass} style={thStyle}>\n                    <div class='' style={`width: ${width}px;`}>\n                        &nbsp;\n                    </div>\n                </th>}\n                <th class={thClass} style={thStyle}>\n                    <div\n                        class={`checkpoint position-relative ${selectedCheckpointId === cp.id ? 'text-primary' : ''}`}\n                        style={`width: ${widthCp}px; font-size: 1.1em;`}\n                        onClick={onClickCheckpoint}\n                        data-id={cp.id}\n                    >\n                        <i class='fas fa-campground' />\n\n                        <div\n                            class={`rounded-pill-both px-1 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: 0px; right: -20px; font-size: 0.6em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {cp.sortOrder && cp.sortOrder !== 'n/a' && <>{cp.sortOrder}</>}\n                        </div>\n\n                    </div>\n                </th>\n            </>)}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantLineCheckpoint extends Component {\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n@observer\nclass Contestants extends Component {\n    render() {\n        const {\n            currentClass,\n            contestants,\n            limit,\n            onClickMusher,\n            tdClass,\n            tdStyle,\n            progressStyle,\n            progressbarStyle,\n        } = this.props;\n\n        const { checkpoints = [], results = [] } = currentClass;\n        const finalContestants = contestants && limit ? contestants.slice(0, limit) : contestants;\n\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n\n        const reqTotalRestInSec = currentClass.requiredRestMinutes * 60;\n        const now = Math.floor(new Date().getTime() / 1000, 10);\n\n        return (<>\n            {finalContestants && finalContestants.map((co, coIdx) => {\n                let cpIdx = 0;\n                let hasLeftCpPrev;\n                let bibIdxOutPrev;\n                let estTimeToCpMinutesPrev;\n                let hasScratchedPrev;\n                let totalInCpTime = 0;\n\n                let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(co.bib, 10)) : null;\n                selectedMusher = selectedMusher ? selectedMusher : {};\n\n                return(<>\n                    <tr class='musher' onClick={onClickMusher} data-bib={co.bib}>\n                        <td class={tdClass} style={tdStyle}>\n                            {co.startTime ? util.isoTime(co.startTime) : ''}\n                        </td>\n\n                        {checkpoints && checkpoints.map((cp, idx) => {\n                            const checkpointResults = results.slice().filter(e => e.checkpoint === cp.id).sort(fieldSorter(['timestamp']));\n                            const res = checkpointResults.filter(e => parseInt(e.bib, 10) == co.bib);\n                            const hasLeftCp = res.find(e => e.direction === 'out');\n                            const hasArrivedCp = res.find(e => e.direction === 'in');\n                            const hasScratched = res.find(e => e.direction === 'scratched');\n\n                            const allResultsIn = checkpointResults.filter(e => (e.direction === 'in' || e.direction === 'scratched'));\n                            const bibIdxIn = allResultsIn.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            const allResultsOut = checkpointResults.filter(e => e.direction === 'out');\n                            const bibIdxOut = allResultsOut.findIndex(e => parseInt(e.bib, 10) == co.bib);\n\n                            let timeInCp = 0;\n                            let percentInCp;\n                            if (!cp.isStartLine && hasArrivedCp && hasLeftCp && hasArrivedCp.timestamp && hasLeftCp.timestamp) {\n                                timeInCp = mu.deltaSec(hasArrivedCp.timestamp, hasLeftCp.timestamp);\n                            }\n                            totalInCpTime += timeInCp ? timeInCp : 0;\n\n                            if (!hasLeftCp && hasArrivedCp && !cp.isStartLine) {\n                                if (cp.timeEqualization && reqTotalRestInSec) {\n                                    const restInCpSoFar = mu.deltaSec(hasArrivedCp.timestamp, now);\n                                    // console.log({ reqTotalRestInSec, totalInCpTime, restInCpSoFar })\n                                    percentInCp = (totalInCpTime + restInCpSoFar) / reqTotalRestInSec * 100;\n                                    percentInCp = percentInCp > 100 ? 100 : percentInCp;\n                                    // console.log({ percentInCp })\n                                }\n                            }\n\n                            if (hasScratchedPrev) {\n                                return '';\n                            }\n\n                            if (bibIdxIn === -1)  {\n                                if (hasLeftCpPrev) {\n                                    const nowEpoch = Math.floor(new Date().getTime() / 1000);\n                                    const prevCpOutEpoch = Math.floor(new Date(hasLeftCpPrev.timestamp).getTime() / 1000);\n                                    const timeUsedOnStage = Math.floor((nowEpoch - prevCpOutEpoch) / 60);\n                                    // let percentDone = timeUsedOnStage / estTimeToCpMinutesPrev * 100;\n                                    let percentDone = timeUsedOnStage / cp.estTimeToCpMinutes * 100;\n                                    percentDone = percentDone > 95 ? 95 : percentDone;\n                                    const line = (<>\n                                        <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                            <div class='progress' style={`${progressStyle}`}>\n                                                <div\n                                                    class={`progress-bar progress-bar-striped`}\n                                                    role='progressbar'\n                                                    style={`width: ${percentDone}%; ${progressbarStyle}`}\n                                                    aria-valuenow={percentDone}\n                                                    aria-valuemin='0'\n                                                    aria-valuemax='100'\n                                                    data-prevtimestamp={hasLeftCpPrev.timestamp}\n                                                    data-timeUsedOnStage={timeUsedOnStage}\n                                                    data-estTimeToCpMinutesPrev={estTimeToCpMinutesPrev}\n                                                    data-nowEpoch={nowEpoch}\n                                                    data-prevCpOutEpoch={prevCpOutEpoch}\n                                                >{bibIdxOutPrev + 1 > 0 ? bibIdxOutPrev + 1 : ''}</div>\n                                            </div>\n\n                                            {/* estTimeToCpMinutesPrev: {estTimeToCpMinutesPrev}\n                                            timeUsedOnStage: {timeUsedOnStage}\n                                            percentDone: {percentDone} */}\n                                            {co.cpId && res.length > 0 && <>\n                                                {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                                {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                            </>}\n                                        </td>\n                                    </>);\n                                    bibIdxOutPrev = bibIdxOut;\n                                    hasLeftCpPrev = hasLeftCp;\n                                    estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n                                    return line;\n                                }\n                                return '';\n                            }\n                            cpIdx = idx;\n                            bibIdxOutPrev = bibIdxOut;\n                            hasLeftCpPrev = hasLeftCp;\n                            estTimeToCpMinutesPrev = cp.estTimeToCpMinutes;\n\n                            const output = (<>\n                                {(hasArrivedCp || hasScratched) && idx > 0 && <>\n                                    <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                        <div class='progress' style={`${progressStyle}`}>\n                                            <div\n                                                class={`progress-bar`}\n                                                role='progressbar'\n                                                style={`width: 100%; ${progressbarStyle}`}\n                                                aria-valuenow='100'\n                                                aria-valuemin='0'\n                                                aria-valuemax='100'\n                                            />\n                                        </div>\n                                        {co.cpId && res.length > 0 && <>\n                                            {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                            {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                        </>}\n                                    </td>\n                                </>}\n                                <td class={`text-center align-middle px-0 pr-1 ${tdClass}`} style={tdStyle}>\n                                    <div class='progress' style={`${progressStyle}`}>\n                                        <div\n                                            class={`progress-bar ${percentInCp > 0 ? 'progress-bar-striped' : ''} ${hasScratched ? 'bg-danger' : 'bg-success'}`}\n                                            role='progressbar'\n                                            style={`width: ${percentInCp || 100}%; ${progressbarStyle}`}\n                                            aria-valuenow={percentInCp}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        >{hasScratched ? <i class='fas fa-times' /> : <>{bibIdxIn + 1 > 0 ? bibIdxIn + 1 : ''}</>}</div>\n                                    </div>\n                                    {co.cpId && res.length > 0 && <>\n                                        {/* <xmp>{JSON.stringify(co, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(res, null, 4)}</xmp><br /> */}\n                                        {/* <xmp>{JSON.stringify(allResults, null, 4)}</xmp><br /> */}\n                                    </>}\n                                </td>\n                            </>);\n\n                            hasScratchedPrev = hasScratched;\n                            return output;\n                        })}\n                        <td colspan={checkpoints.length * 2 - cpIdx} class={tdClass} style={tdStyle}>\n                            <div class='d-flex flex-nowrap'>\n                                <div\n                                    class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                    style={`background-color: ${mu.getRankingColor(coIdx + 1)}; width: 45px;`}\n                                >\n                                    {co.bib}\n                                </div>\n                                <div>\n                                    <nobr>\n                                        {co.flag} {co.lastname}\n                                    </nobr>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </>);\n            })}\n        </>);\n    }\n}\n\n// @observer\n// class ContestantCheckpoint extends Component {\n\n//     render() {\n\n//         return (<>\n\n//         </>);\n//     }\n// }\n\n\n@observer\nclass RaceLiveResults extends Component {\n    componentWillReceiveProps(nextProps) {\n        if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n            const { currentClass } = this.props;\n            const { raceStore } = this.props.stores;\n            const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n            raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n        }\n\t}\n\n    componentDidMount() {\n        const { currentClass } = this.props;\n        const { raceStore } = this.props.stores;\n        const { checkpoints = [], contestants = [], results = [], sortOrderResults, startDate } = currentClass;\n        raceStore.sortContestantsByResult({ contestants, results, checkpoints, sortOrderResults, startDate });\n\t}\n\n    render() {\n        const widthCp = 20;\n        const width = 40;\n\t\tconst {\n            race,\n            currentClass,\n            onClickMusher = () => {},\n            onClickCheckpoint = () => {},\n            selectedCheckpointId,\n            limit = 100,\n            tableClass = 'table-striped table-sm',\n            thClass,\n            thStyle,\n            tdClass,\n            tdStyle,\n            progressStyle = 'height: 20px;',\n            progressbarStyle,\n        } = this.props;\n        const { checkpoints = [], sortOrderResults } = currentClass;\n        const { raceStore } = this.props.stores;\n        const { sortedContestants = [] } = raceStore;\n        const dotColor = '#808080';\n\n\t\treturn (<>\n            <div class='table-responsive'>\n                <table class={`table ${tableClass}`}>\n                    <thead>\n                        <tr>\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${width}px;`}>\n                                    <i class='fas fa-flag' />\n                                </div>\n                            </th>\n\n                            <Checkpoints stores={this.props.stores}\n                                checkpoints={checkpoints}\n                                thClass={thClass}\n                                thStyle={thStyle}\n                                selectedCheckpointId={selectedCheckpointId}\n                                width={width}\n                                widthCp={widthCp}\n                                onClickCheckpoint={onClickCheckpoint}\n                                dotColor={dotColor}\n                            />\n\n                            <th class={thClass} style={thStyle}>\n                                <div class='' style={`width: ${widthCp}px;`}>\n                                    <i class='fas fa-flag-checkered' />\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <Contestants\n                            stores={this.props.stores}\n                            currentClass={currentClass}\n                            contestants={sortedContestants}\n                            limit={limit}\n                            onClickMusher={onClickMusher}\n                            tdClass={tdClass}\n                            tdStyle={tdStyle}\n                            progressStyle={progressStyle}\n                            progressbarStyle={progressbarStyle}\n                        />\n                    </tbody>\n                </table>\n            </div>\n\t\t</>);\n\t}\n}\n\nexport default RaceLiveResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\n@observer\nclass Drawer extends Component {\n\n    render() {\n        const { appState } = this.props.stores;\n        const { darkmode } = appState;\n        const { children, onCloseClick = () => {}, classNames = 'fixed-bottom', width = '100vw' } = this.props;\n        return (\n            <div\n                class={`${classNames} ${darkmode ? 'bg-darkmode' : 'bg-lightmode'} border rounded rounded-lg pt-4 pb-3 px-2`}\n                style={`\n                    bottom: 0;\n                    left: 0;\n                    width: ${width};\n                    max-height: 80vh;\n                    min-height: 10vh;\n                    overflow: auto;\n                    z-index: 999999;\n                    border-radius: 20px 20px 0 0 !important;\n                    border-top-width: 5px !important;\n                    box-shadow: 0px 0 5px rgba(0, 0, 0, 0.8);\n                `}\n                onTouchmove={mu.captureEvents}\n                onScroll={mu.captureEvents}\n            >\n                <button\n                    class='btn btn-warning btn-sm float-right'\n                    onClick={onCloseClick}\n                >\n                    <i class='fas fa-times' />\n                </button>\n                {children}\n            </div>\n        );\n    }\n}\n\nexport default Drawer;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Trackmap from '../../components/public/trackmap';\nimport Gauge from '../../components/gauge';\n\nimport DogScroller from '../../components/dog/scroller';\nimport ImageScroller from '../imageScroller';\n\nimport Overlay from '../../components/overlay/';\nimport Drawer from '../../components/drawer/';\nimport HeaderCustom from '../../components/header/custom';\nimport Loading from '../../components/loading/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\nimport LineGraph from '../../components/lineGraph';\nimport States from '../../components/states';\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass RaceTrackingMusherDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        const { wp, musher } = this.props;\n        const { raceStore, userStore } = this.props.stores;\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const raceClass = raceStore.getClassByBib(wp.bib);\n\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n\n        const { isAdmin } = userStore;\n        const { user: currentUser = {} } = userStore;\n\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const restPercent = util.format(wp.restTime / wp.raceTime * 100, 0);\n        const runPercent = 100 - restPercent;\n\n        const locale = 'en-GB';\n        const xTicks = [];\n        const dataLeft = [];\n        const legendLeft = [];\n        const unitLeft = [];\n        if (wp && wp.speeds && wp.speeds.length > 0) {\n            const xTicksRange = util.range(wp.speeds[0].timestamp, wp.speeds[wp.speeds.length - 1].timestamp, 600);\n            const partSize = Math.ceil(xTicksRange.length / 5);\n            const parts = Math.floor(xTicksRange.length / partSize);\n            // if (showDebug) {\n                // console.log({ xTicksRange, parts, partSize });\n            // }\n            for (let i = 0, l = xTicksRange.length; i < l; i += partSize) {\n                xTicks.push(\n                    mu.formatDate(util.parseInputDate(xTicksRange[i]), { locale, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })\n                );\n            }\n            xTicks.push(\n                mu.formatDate(util.parseInputDate(xTicksRange[xTicksRange.length - 1]), { locale, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })\n            );\n            // const smoothed = mu.smoothArray(elevations, 5);\n            const data = wp.speeds.map((speed) => ({\n                x: speed.timestamp,\n                y: speed.speed * 3.6,\n            }));\n            dataLeft.push(data);\n            legendLeft.push('Avg speed');\n            unitLeft.push('km/t');\n        }\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n        // console.log({ xTicks });\n\n        const now = Math.floor(new Date().getTime() / 1000);\n\n        return (<>\n            <div class='d-flex justify-content-between'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-list' /> Ranking\n                        </small>\n                    </div>\n                    <div class='text-center' style='font-size: 2.0em;'>\n                        {wp.rank}\n                    </div>\n                </div>\n                {wp.finishTime < 9999999999 ? <>\n                    {wp.diffToFirstFinishTime > 0 ? <>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Diff to 1st\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 2.0em;'>\n                                {util.secToHms(wp.diffToFirstFinishTime)}\n                            </div>\n                        </div>\n                    </> : <>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Start time\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 1.5em;'>\n                                {util.formatDate(util.parseInputDate(musher.startTime || raceClass.startDate || wp.startTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Finish time\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 1.5em;'>\n                                {util.formatDate(util.parseInputDate(wp.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                    </>}\n                </> : <>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-tachometer-alt' /> Current speed\n                            </small>\n                        </div>\n                        <div class='text-center' style='font-size: 2.0em;'>\n                            {util.format(wp.speed || 0, 1)} <span class='text-muted' style='font-size: 0.5em;'>km/h</span>\n                        </div>\n                    </div>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-stopwatch' /> Last update\n                            </small>\n                        </div>\n                        <div class='text-center' style='font-size: 2.0em;'>\n                            {util.secToHms(now - wp.timestamp)}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            <div class='d-flex justify-content-between mt-2'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-road' /> Total distance\n                        </small>\n                    </div>\n                    <div class='text-center mt-2'>\n                        <Gauge key={`gauge-reload-page`}\n                            color='primary'\n                            radius={40}\n                            showPercentText={false}\n                            percent={totalDistancePercent}\n                            showCenterText={true}\n                            centerText={`${totalDistancePercent}%`}\n                            centerTextSize={18}\n                            centerTextY={'55%'}\n                        />\n                    </div>\n                    <div class='text-center'>\n                        <small>\n                            {util.format(wp.totalDistanceOnTrack, 1)} / {util.format(totalTrackLength, 1)} <span class='text-muted'>km</span><br />\n                            <i class='fas fa-clock ml-2 text-muted' /> {util.secToHms(wp.raceTime)}\n                        </small>\n\n                    </div>\n                </div>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-bed' /> Rest\n                        </small>\n                    </div>\n                    <div class='text-center mt-2'>\n                        <Gauge key={`gauge-reload-page`}\n                            color={restPercent < 40 ? (restPercent < 30 ? 'danger' : 'warning') : 'success'}\n                            radius={40}\n                            showPercentText={false}\n                            percent={restPercent}\n                            showCenterText={true}\n                            centerText={`${restPercent}%`}\n                            centerTextSize={18}\n                            centerTextY={'55%'}\n                        />\n                    </div>\n                    <div class='text-center'>\n                        <small>\n                            {restPercent} <span class='text-muted'>%</span><br />\n                            <i class='fas fa-clock ml-2 text-muted' /> {util.secToHms(wp.restTime)}\n                        </small>\n                    </div>\n                </div>\n                {/* <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                    <div>\n                        <small class='text-muted'>\n                            Current speed\n                        </small>\n                    </div>\n                    <div class='text-center' style='font-size: 2.0em;'>\n                        {util.format(wp.speed || 0, 1)} <span class='text-muted' style='font-size: 0.5em;'>km/h</span>\n                    </div>\n                </div> */}\n            </div>\n\n            <div class='d-flex justify-content-between mt-2'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle w-100'>\n                    <States stores={this.props.stores} states={wp.states} duration={wp.raceTime} key={`state-${wp.bib}`} />\n                </div>\n            </div>\n\n            {wp.finishTime < 9999999999 ? <>\n                {wp.diffToFirstFinishTime > 0 ? <>\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Start time\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 1.5em;'>\n                                {util.formatDate(util.parseInputDate(musher.startTime || raceClass.startDate || wp.startTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Finish time\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 1.5em;'>\n                                {util.formatDate(util.parseInputDate(wp.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                    </div>\n                </> : <></>}\n            </> : <>\n                <div class='d-flex justify-content-between mt-2'>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-arrow-down' /> Behind\n                            </small>\n                        </div>\n                        <div class='text-center'>\n                            {util.format(wp.distanceToBehind, 1)} <span class='text-muted'>km</span>\n                        </div>\n                    </div>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                Team\n                            </small>\n                        </div>\n                        <div class='text-center'>\n                            <i class='fas fa-dog' />\n                        </div>\n                    </div>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-arrow-up' /> In front\n                            </small>\n                        </div>\n                        <div class='text-center'>\n                            {util.format(wp.distanceToForward, 1)} <span class='text-muted'>km</span>\n                        </div>\n                    </div>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-arrow-up' /> To first\n                            </small>\n                        </div>\n                        <div class='text-center'>\n                            {util.format(wp.distanceToFirst, 1)} <span class='text-muted'>km</span>\n                        </div>\n                    </div>\n                </div>\n                <div class='d-flex justify-content-between mt-2'>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-flag-checkered' /> Finish\n                            </small>\n                        </div>\n                        <div class='text-center' style='font-size: 2.0em;'>\n                            {util.format(wp.distanceToFinish, 1)} <span class='text-muted' style='font-size: 0.5em;'>km</span>\n                        </div>\n                    </div>\n                </div>\n            </>}\n\n            <div class='d-flex justify-content-between mt-2'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-clock' /> Racetime\n                        </small>\n                    </div>\n                    <div class='text-center' style='font-size: 2.0em;'>\n                        {util.secToHms(wp.raceTime)}\n                    </div>\n                </div>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-bed' /> Resttime\n                        </small>\n                    </div>\n                    <div class='text-center' style='font-size: 2.0em;'>\n                        {util.secToHms(wp.restTime)}\n                    </div>\n                </div>\n            </div>\n\n\n            <div class='d-flex justify-content-between mt-2'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle w-100'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-tachometer-alt' /> Speed plot\n                        </small>\n                    </div>\n                    <div class='w-100 mt-2 overflow-auto'>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={1000}\n                            height={200}\n                            showXTicks={1}\n                            // xTicksVal={val => `${val}`}\n                            xTicks={xTicks}\n                            paddingTop={30}\n                            paddingLeft={50}\n                            yTicksLeftWidth={'50px'}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            // yMaxLeft={25}\n                            dataLeft={dataLeft}\n                            legendLeft={legendLeft}\n                            dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={' km/t'}\n                            unitLeft={unitLeft}\n                            avgWindowLeft={[0, 0]}\n                            smoothLeft={[0, 0]}\n\n                            // dataRight={dataRight}\n                            // legendRight={legendRight}\n                            // // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                            // // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                            // showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                            // yTicksRightPostfix={'km/t'}\n                            // unitRight={unitRight}\n                            // avgWindowRight={[0, 0, 0]}\n                            // smoothRight={[1, 1, 1]}\n\n                            // marker={week}\n                        />\n                        {/* {JSON.stringify(wp.speeds, null, 4)} */}\n                    </div>\n                </div>\n            </div>\n\n\n            {/* distanceToFinish: {JSON.stringify(wp.distanceToFinish, null, 4)}<br />\n            distanceToFirst: {JSON.stringify(wp.distanceToFirst, null, 4)}<br />\n            distanceToForward: {JSON.stringify(wp.distanceToForward, null, 4)}<br />\n            distanceToBehind: {JSON.stringify(wp.distanceToBehind, null, 4)}<br />\n            speed: {JSON.stringify(wp.speed, null, 4)}<br />\n            bearing: {JSON.stringify(wp.bearing, null, 4)}<br />\n            finishTime: {util.isoDate(wp.finishTime)}<br /> */}\n\n            {/*\n                \"lat\": 62.53911889158189,\n                \"lng\": 11.38222829438746,\n                \"icon\": null,\n                \"image\": \"https://themusher.app/220x/the-musher-90bc4d13-1204-49db-9a09-9e4d84775b00.jpeg\",\n                \"bib\": 3,\n                \"rank\": 1,\n                \"flag\": \"🇳🇴\",\n                \"title\": \"Wærner\",\n                \"body\": \"-0,0 km/t, -0,0 km\",\n                \"color\": \"#FA0007\",\n                \"totalDistanceOnTrack\": 619.146473819473,\n                \"bearing\": 0,\n                \"finishTime\": 1644169451\n            */}\n\n\n            {totals && totals.distanceKm && <>\n                <div class='table-responsive-lg'>\n                    <table class='table table-borderless'>\n                        <tbody>\n                            <tr>\n                                <td style='width: 5%;'><i class='fas fa-dog' /></td>\n                                <td style='width: 60%'><Text id='races.dogs'>Dogs</Text></td>\n                                <td style='width: 5%;'>&nbsp;</td>\n                                <td class='text-right' style='width: 30%;'>{team.dogs.length}</td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-road' /></td>\n                                <td><Text id='races.distance'>Distance</Text></td>\n                                <td>&nbsp;</td>\n                                <td class='text-right'><nobr>{totals.distanceKm ? `${util.format(totals.distanceKm, 1)} km` : 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-mountain' /></td>\n                                <td><Text id='races.ascend'>Ascending</Text></td>\n                                <td>&nbsp;</td>\n                                <td class='text-right'><nobr>{totals.elevation ? `${util.format(totals.elevation, 0)} m` : 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-stopwatch' /></td>\n                                <td><Text id='races.race-time'>Racetime</Text></td>\n                                <td><i class='fas fa-clock' /></td>\n                                <td class='text-right'><nobr>{util.secToHms(totals.duration) || 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-bed' /></td>\n                                <td><Text id='races.rest-time'>Rest</Text></td>\n                                <td><i class='fas fa-clock' /></td>\n                                <td class='text-right'><nobr>{util.secToHms(totals.rest) || 'n/a'}</nobr></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </>}\n        \n        </>);\n    }\n}\n\nexport default RaceTrackingMusherDetail;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@withText(() => ({\n    subject: <Text id='ad.subject'>Annonseforespørsel</Text>,\n    body: <Text id='ad.body'>Hei, Jeg ønsker å vite mer om annonsering i appen The Musher.</Text>,\n}))\n\n@observer\nclass Ad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n        this.apiServer = util.getApiServer();\n    }\n\n\tasync loadAd(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adStore, workoutStore, userStore, appState } = this.props.stores;\n        const { section } = this.props;\n        const { path: url = '' } = appState;\n        const { currentTeam } = workoutStore;\n        const { user } = userStore;\n        const { language = 'en' } = user;\n        let team = {};\n        let ambitions;\n        let type;\n        let postalcode;\n        let place;\n        let country;\n        if (currentTeam) {\n            team = userStore.findTeam(currentTeam, true);\n            if (team && team.id) {\n                ambitions = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n                type = userStore.findTeamType({ type: team.type, language });\n                postalcode = team.postalcode;\n                place = team.place;\n                country = team.country;\n            }\n        }\n        // console.log({ currentTeam, team, ambitions,  type, postalcode, place, country });\n        // const { url = '' } = this.props;\n        let page = url.replace(/\\d+$/, 'detail');\n        page = url.replace(/\\/\\d+/, '/detail');\n\n        // props: { \"url\": \"/\" }\n        // props: { \"url\": \"/workouts/\" }\n        // props: { \"url\": \"/workouts/4708\" }\n        // props: { \"url\": \"/dogs\" }\n        // props: { \"url\": \"/dogs/10\" }\n\n\t\tawait adStore.load({ query: { page, section }});\n        adStore.setTime();\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    logClick = async () => {\n        const { adStore, userStore } = this.props.stores;\n        const { ads = [] } = adStore;\n        let id = ads.length > 0 ? ads[0].id : null;\n        const { user = {} } = userStore;\n        await adStore.logClick({ id, user: user.id });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadAd();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.path !== this.props.path) {\n            this.loadAd(nextProps);\n        }\n    }\n\n    render() {\n        const { adStore, userStore, appState } = this.props.stores;\n        const { subject, body, section } = this.props;\n        const { path } = appState;\n        const { user = {} } = userStore;\n        const { ads = [], time, adViews, adClicks } = adStore;\n        if (!user || !user.id || !ads || ads.length === 0) {\n            if (path.match(/\\/(home)/i)) {\n                return <>\n                    <div class='w-100'>\n                        <div class='row'>\n                            <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                                <div class='border rounded-lg p-4 my-3'>\n                                    <span class='float-right display-4 text-warning'>\n                                        <i class='far fa-smile-wink' />\n                                    </span>\n                                    <h5><Text id='ad.heading'>Vil du annonsere her?</Text></h5>\n                                    <div><Text id='ad.teaser'>Det er super enkelt :)</Text></div>\n                                    <Localizer>\n                                        <a href={`mailto:post@themusher.no?subject=${subject}: ${path}: ${section}&body=${body}`} target='_blank' rel='noreferrer'>\n                                            <i class='fas fa-paper-plane' /> <Text id='ad.linktext'>Ta kontakt med The Musher</Text>\n                                        </a>\n                                    </Localizer>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>;\n            }\n            return <></>;\n        }\n        const ad = ads[0];\n        return (\n            <>\n                <div class='w-100'>\n                    <div class='row'>\n                        <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative'>\n                            <div>\n                                <small><small class='text-muted'>\n                                    <Text id='ad.ad'>Annonse</Text>:\n                                    <img src={`${this.apiServer}/api/ads/${ad.id}/view?user=${user.id}&time=${time}`} style='width: 1; height: 1; opacity: 0.1;' />\n                                </small></small>\n                            </div>\n                            {ad.target ? <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    target={ad.target || '_blank'}\n                                    rel='noopener noreferrer'\n                                    onClick={this.logClick}\n                                    native\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>                            \n                            </> : <>\n                                <a\n                                    class='stretched-link'\n                                    href={`${ad.url}`}\n                                    onClick={this.logClick}\n                                >\n                                    {ad.images && ad.images[0] && <>\n                                        <img src={ad.images[0].s3LargeLink} class='img-fluid rounded-lg' />\n                                    </>}\n                                </a>\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Ad;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\n@observer\nclass HeaderCustom extends Component {\n    render() {\n        const { children, height = '65px' } = this.props;\n        return (\n            <nav\n\t\t\t\tclass={`navbar navbar-themed bg-light fixed-top py-0`}\n\t\t\t\tstyle={`height: ${height};`}\n\t\t\t>\n\n                {children}\n\n            </nav>\n        );\n    }\n}\n\nexport default HeaderCustom;\n","import { h, Component, createRef } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport Story from './publicStory';\n\nimport TeamConnectBoxes from '../team/connect-boxes';\nimport TeamConnectConfirm from '../team/connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from '../team/fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\n\nimport TeamPublicFeedLine from '../team/publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\n\nconst initialState = {\n    loading: false,\n    limit: 10,\n    offset: 0,\n    idxConfirm: 0,\n    idxSuggestion: 1,\n    idxAd: 5,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n// const fieldSorter = (fields) => (a, b) => fields.map(o => {\n//     let dir = 1;\n//     if (o[0] === '-') { dir = -1; o=o.substring(1); }\n//     return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n// }).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass StoryPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.inputRef = {};\n\t\tthis.ref = {};\n    }\n\n    async loadStoriesPublicFeed({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n        let sort;\n        // if (path.match(/\\/home-wall/)) {\n        //     sort = 'statistics.ranking';\n        // }\n\t\tawait storyStore.loadPublicFeed({ hashtag, hashtags, teamid, limit, offset, sort });\n        if (!offset) {\n            // this.insertWorkouts();\n            this.insertTopRanked();\n            // this.insertAds();\n            this.insertTeamConfirm();\n            // this.insertTeamSuggestions();\n        }\n\t}\n\n    reloadStories = async () => {\n        const { appState } = this.props.stores;\n        let { limit, offset } = this.state;\n        offset = 0;\n        this.setState({ offset });\n        await this.loadStoriesPublicFeed({ props: this.props, limit, offset })\n        appState.appContainerScrollTop();\n    }\n\n    async checkForNewStories({ props = this.props, limit, offset }) {\n        const { hashtag, hashtags, teamid, path } = props;\n\t\tconst { storyStore } = props.stores;\n\t\tawait storyStore.checkForNewStories({ hashtag, hashtags, teamid });\n    }\n\n    setCheckForNewStories = (props = this.props) => {\n        this.checkForNewStoriesTimer = setInterval(() => this.checkForNewStories({ props }), 60 * 1000);\n    }\n\n    clearCheckForNewStories = () => {\n        clearInterval(this.checkForNewStoriesTimer);\n    }\n\n    // insertWorkouts = () => {\n    //     const { storyStore } = this.props.stores;\n    //     const { publicWorkouts, publicFeed } = storyStore;\n    //     if (publicWorkouts.length) {\n    //         const finalArray = publicFeed.concat(publicWorkouts).sort(fieldSorter(['-date']));\n    //         storyStore.localUpdateField('publicFeed', finalArray);\n    //     }\n    // }\n\n    insertTopRanked = () => {\n        const { storyStore } = this.props.stores;\n        const { publicFeed, topRankedStories } = storyStore;\n        const topRankedRandomized = util.shuffleArray(topRankedStories);\n        const feed = [...publicFeed];\n\n        const totalInserts = 3;\n        const pinToTopDiff = 86400;\n        let startPosition = 0;\n        const now = new Date();\n        feed.forEach((e, idx) => {\n            const date = util.parseInputDate(e.date);\n            const deltaSec = Math.floor((now.getTime() - date.getTime()) / 1000);\n            if (deltaSec < pinToTopDiff) {\n                startPosition = idx + 1;\n            }\n        });\n        const endPosition = feed.length;\n\n        if (endPosition > startPosition + totalInserts) {\n            for (let i = 0, l = totalInserts; i < l; i += 1) {\n                const randomPlace = mu.randomInt(startPosition, endPosition);\n                if (util.isObject(topRankedRandomized[i])) {\n                    feed.splice(randomPlace, 0, topRankedRandomized[i]);\n                }\n            }\n            storyStore.localUpdateField('publicFeed', feed);\n        }\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { storyStore } = this.props.stores;\n        const { publicFeed } = storyStore;\n        const feed = [...publicFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: 'row', contentClassNames: 'col-12' });\n        storyStore.localUpdateField('publicFeed', feed);\n    }\n\n    setLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadStoriesPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { storyStore } = this.props.stores;\n        storyStore.setLoadMore(() => {});\n    }\n\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { storyStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => storyStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n\tcomponentDidMount() {\n        const { limit } = this.state;\n        this.loadStoriesPublicFeed({ limit, offset: 0 });\n        this.setLoadMore();\n        this.setCheckForNewStories()\n\t}\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { storyStore } = this.props.stores;\n        storyStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n        // storyStore.cleanupMemory();\n        this.clearCheckForNewStories();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.hashtag !== this.props.hashtag || nextProps.path !== this.props.path) {\n            const { limit } = this.state;\n            this.loadStoriesPublicFeed({ props: nextProps, limit, offset: 0 });\n        }\n    }\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n        const { hashtag } = this.props;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'workout') {\n            return (<>\n                <TeamPublicFeedLine\n                    stores={this.props.stores}\n                    feed={obj}\n                    idx={idx}\n                    onTeamClick={this.onTeamClick}\n                    onUserClick={this.onUserClick}\n                    onDogClick={this.onDogClick}\n                    holdingStore={'story'}\n                />\n            </>);\n        }\n        return (<>\n            <Story\n                stores={this.props.stores}\n                story={obj}\n                hashtag={hashtag}\n                key={`story-detail-${obj.id}`}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { loading, handleIntersection, sessionid, showTeam, showDog } = this.state;\n        const { storyStore, appState } = this.props.stores;\n        const { publicFeed, publicTags, hasNewStories, publicDogs } = storyStore;\n        const { darkmode } = appState;\n\n        return (<>\n            {/* <div class='row bg-light pt-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative`}>\n                    <div class='bg-light d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                        {util.isArray(publicTags) && publicTags.length > 0 && publicTags.slice(0, 20).map((tag) => {\n                            const tagLinkReady = tag.tag.replace(/^#/, '');\n                            return (<>\n                                <span class='badge badge-pill badge-secondary mr-2 mb-1'>\n                                    <a href={`/stories/tag/${tagLinkReady}`} class='text-white'>\n                                        {tag.tag}\n                                    </a>\n                                </span>\n                            </>);\n                        })}\n                    </div>\n                </div>\n            </div> */}\n\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={publicDogs} />\n            </Overlay>}\n\n            <div class='w-100'>\n                {hasNewStories && <>\n                    <div\n                        class={`col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 d-flex justify-content-center fixed-top`}\n                        style={`margin-top: ${MARGIN_TOP};`}\n                    >\n                        <button\n                            class='btn btn-sm btn-primary rounded-pill'\n                            onClick={this.reloadStories}\n                        >\n                            New stories\n                        </button>\n                    </div>\n                </>}\n                <FastList\n                    data={publicFeed}\n                    wrapperClassNames={'row pb-1'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n                {loading && <div class='d-flex justify-content-center'>\n                    <div class='spinner-border text-primary' role='status'>\n                        <span class='sr-only'>Loading...</span>\n                    </div>\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default StoryPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport DogScroller from '../dog/scroller';\nimport ImageScroller from '../imageScroller';\nimport RaceTrackingMusherDetail from '../public/raceTrackingMusherDetail';\n\n@observer\nclass MusherInfoHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { contestant = {}, onMarkerClick = () => {}, children, rank } = this.props;\n        const wp = raceStore.findWaypointByBib(contestant.bib);\n\n        const { isAdmin } = userStore;\n        const musher = (contestant.bib ? raceStore.getMusherByBibId(contestant.bib) : raceStore.getMusherByBibEmail(contestant.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(contestant.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        let image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = contestant.color;\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(contestant.bib);\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n            />\n\n            <div class='d-flex position-relative' style='margin-top: 17vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; font-size: 1.2em; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {/* {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>} */}\n                        {rank && <>{rank}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-0' style='line-height: 1.2em;'>\n                    <h5 class='mb-0'>\n                        <div class='d-flex flex-nowrap'>\n                            <div\n                                class='text-white font-weight-bold pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                style={`background-color: ${mu.getRankingColor(rank)}; width: 55px;`}\n                            >\n                                {musher.bib}\n                            </div>\n                            <div>\n                                <nobr>\n                                    {musher.flag} {musher.firstname} {musher.lastname}\n                                </nobr>\n                            </div>\n                        </div>\n                    </h5>\n                    <span class='mb-0' style='margin-left: 93px;'>{musher.sportsClub || team.name || <>&nbsp;</>}</span>\n                </div>\n            </div>\n\n            <div class='d-flex justify-content-center mb-3'>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='details'\n                    >\n                        Details\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'gpsdata' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='gpsdata'\n                    >\n                        GPS Data\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='team'\n                    >\n                        Team\n                    </button>\n                </div>\n                <div class='col px-0 pt-2'>\n                    <button\n                        type='button'\n                        class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                        style='text-overflow: ellipsis; overflow: hidden;'\n                        onClick={this.chooseSubmenu}\n                        data-submenu='dogs'\n                    >\n                        Dogs\n                    </button>\n                </div>\n            </div>\n\n            <div\n                class='w-100 overflow-auto position-relative'\n                // style='max-height: 60vh;'\n            >\n                {submenu === 'details' && <>\n                    {children}\n                </>}\n\n                {submenu === 'gpsdata' && <>\n                    <RaceTrackingMusherDetail\n                        stores={this.props.stores}\n                        wp={wp}\n                        musher={musher}\n                    />\n                </>}\n\n                {submenu === 'team' && <>\n                    {team.public > 0 ? <>\n                        <h3>{team.name}</h3>\n                        <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        <ImageScroller stores={this.props.stores} images={teamImages} />\n\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                        </div>\n                    </>}\n                </>}\n\n                {submenu === 'dogs' && <>\n                    {team.public > 0 ? <>\n                        {team.dogs && <div class='w-100 container-fluid'>\n                            <div class='row pt-2'>\n                                <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                            </div>\n                        </div>}\n                        {showDog && <>                    \n                            <div class='d-flex mb-0 mt-3 position-relative'>\n                                <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pr-2'\n                                    style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                >\n                                    <h5 class='mb-1'>\n                                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                        {hasBirthday && <>\n                                            <i class='fas fa-birthday-cake ml-3' />\n                                        </>}\n                                    </h5>\n                                    <div>\n                                        {daysUntilBirthday < 7 && <>\n                                            <span class='text-muted mr-2'>\n                                                <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                            </span>\n                                        </>}                                \n                                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                        </>}\n                    </> : <>\n                        <div class='text-center text-muted'>\n                            <div class='display-1'><i class='fas fa-dog' /></div>\n                            <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                            <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                        </div>\n                    </>}\n                </>}\n\n                {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                    <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                        Toggle admin info\n                    </button>\n                    {showAdminInfo && <>\n                        <small>\n                            <xmp>\n                                musher: {JSON.stringify(musher, null, 4)}<br />\n                                user: {JSON.stringify(user, null, 4)}<br />\n                                team: {JSON.stringify(team, null, 4)}<br />\n                                totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                {/* {\n                                    \"firstDate\": \"2021-03-19 11:59\",\n                                    \"lastDate\": \"2021-03-20 17:13\",\n                                    \"firstEpoch\": 1616151540000,\n                                    \"lastEpoch\": 1616256780000,\n                                    \"now\": {\n                                        \"$numberDecimal\": \"1642675856939\"\n                                    },\n                                    \"totalTimeUsedSec\": 26524316,\n                                    \"totalWorkoutTimeUsedSec\": 130895,\n                                    \"lastDuration\": 25655,\n                                    \"team\": 84,\n                                    \"count\": 4,\n                                    \"distanceKm\": 301.5906237951766,\n                                    \"elevation\": 3610.019075719202,\n                                    \"duration\": 77343,\n                                    \"rest\": 1332,\n                                    \"speedAvg\": 8.294634979660305,\n                                    \"totalRest\": 54884,\n                                    \"loadIndex\": 1080.75,\n                                    \"totalKcalRelated\": 544.535560976128,\n                                    \"weightedTotalKcal\": 12303.171406247127,\n                                    \"flatTotalKcal\": 9424.70699359927,\n                                    \"firstGpxStartEpoch\": null,\n                                    \"lastGpxStartEpoch\": null\n                                } */}\n\n                            </xmp>\n                        </small>\n                    </>}\n                </div>}\n                <div class='d-flex position-absolute' style='right: 10px; bottom: 10px;'>\n                    {inFront.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-left' />\n                    </a>}\n                    {behind.bib && <a class='text-primary mx-2' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.3em;'>\n                        <i class='fas fa-angle-right' />\n                    </a>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default MusherInfoHeader;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\nimport Drawer from '../../components/drawer/';\nimport DogsEditBaseInfo from '../../components/dog/editBaseInfo';\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n\n    removeImage = async (e) => {\n        const { userStore } = this.props.stores;\n        const { user } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        userStore.removeImage({\n            id: user.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { user, field, updateField } = this.props;\n        updateField({ id: user.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, user, type = 'text', field, title, icon, help, onInput, updateField } = this.props;\n        const value = user[field];\n        const byMd5 = e => user.image ? e.md5 !== user.image.md5 : true;\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {user.image && user.image.s3SmallLink && <div class='col-3 p-1'>\n                                <img src={user.image.s3SmallLink} class='img-fluid border rounded-lg' onError={this.handleImageErrored} />\n                                <button class='btn btn-sm btn-link'\n                                    onClick={this.removeMainImage}\n                                    data-name={user.image.name}\n                                ><i class='fas fa-trash' /> Del</button>\n                                <span class='badge badge-success'>Main</span>\n                            </div>}\n                            {user.images && user.images.filter(byMd5).map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={user} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={user} field={field} updateField={updateField} />\n                    {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        return (\n            <div class={`form-group ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control ${saved[`${field}.${user.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    data-id={user.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${user.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='users.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass DogLine extends Component {\n    render() {\n        const { dog, children, onDogClick = () => {} } = this.props;\n\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { vaccineLogStatuses } = userStore;\n\n        return(\n            <div\n                class='d-flex mb-0 position-relative mb-3 dogInfo'\n                data-id={dog.id}\n            >\n                <div>\n                    <div class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''}>\n                        {/* {!dog.image && <i class='fas fa-dog mt-3' style='font-size: 40px;' />} */}\n                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 pr-2' onClick={onDogClick}>\n                    {children}\n                    <span class='float-right'>\n                        {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                    </span>\n                    <h6 class='mb-1' style='line-height: 1.0em;'>\n                        {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                    </h6>\n                    {dog.chipId ? <>\n                        <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                    </> : <>\n                        <div class='alert alert-danger' role='alert'>\n                            <Text id='races.missing-chipid'>Missing chid id</Text>\n                        </div>\n                    </>}\n\n                    <div>\n                        {vaccineLogStatuses && vaccineLogStatuses.filter(e => e.chipId === dog.chipId).map((vac) => {\n                            return (\n                                <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'} mr-2 mb-1`}>\n                                    {vac.vaccineAgens.name}\n                                    <span class='font-weight-lighter ml-2 d-none d-sm-block'>\n                                        <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                        {vac.inKarens && <>\n                                            <br />\n                                            (karens: {util.format(vac.karensDaysLeft, 0)} days left)\n                                        </>}\n                                    </span>\n                                </span>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submenu: 'info',\n            showDrawer: false,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const value = e.target.value;\n        this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { userStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { user } = userStore;\n        if (field === 'images') {\n            if (Array.isArray(user.images) && Array.isArray(value)) {\n                localObjectValue = [...user.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        userStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { userStore } = this.props.stores;\n        await userStore.saveField(id, field, value);\n    }\n\n\tsignupToRace = async () => {\n\t\tconst { raceStore, userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { signup } = raceStore;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\tteam: user.team,\n\t\t\t\tfirstname: user.firstname,\n\t\t\t\tlastname: user.lastname,\n\t\t\t\tsportsClub: user.sportsClub,\n\t\t\t\temail: user.email,\n\t\t\t\tcellphone: user.cellphone,\n\t\t\t\tfacebook: user.facebook,\n\t\t\t\tinstagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    updateSignup = (e) => {\n        const key = e.target.id;\n        const value = e.target.value;\n        const { raceStore } = this.props.stores;\n        raceStore.updateObjectKeyValue('signup', key, value);\n    }\n\n    editSignup = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n            raceStore.localUpdateSignup(field, value);\n            if (field === 'team') {\n                await raceStore.loadTeams(value, true);\n            }\n\t\t}, 500);\n    }\n\n    clearSignupValue = async (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = 'null';\n        const { classid, contestantid } = e.target.dataset;\n        raceStore.updateObjectKeyValue('signup', field, value);\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n        raceStore.editClass({\n            id: raceid,\n            data,\n        });\n        raceStore.localUpdateSignup(field, value);\n        if (field === 'team') {\n            await raceStore.loadTeams(value, true);\n        }\n    }\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        this.setState({\n            showDrawer: !showDrawer,\n        });\n    }\n\n    onDogClick = (e) => {\n        const { id } = e.target.closest('.dogInfo').dataset;\n        console.log('onDogClick', id);\n        const { userStore, raceStore } = this.props.stores;\n        const { signup } = raceStore;\n        const dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        const currentDog = dogs.find(e => e.id == id);\n        this.setState({\n            showDrawer: true,\n            currentDog,\n        });\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n    render() {\n        const { submenu, showDrawer, currentDog } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, saved } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n        const { signup } = raceStore;\n\n        let signupClass = {};\n        let dogs = [];\n        if (signup.class) {\n            signupClass = raceStore.getRaceClassById(signup.class);\n        }\n        if (signup.team) {\n            dogs = userStore.findDogsByTeam(parseInt(signup.team, 10));\n        }\n        const { vaccineLogStatuses } = userStore;\n\t\tconst today = new Date();\n\n        const chosenDogChipIds = mu.getAlphabet(signupClass.dogs).filter(letter => signup[`dog${letter}`]).map(letter => signup[`dog${letter}`]);\n        const byNotChosen = e => chosenDogChipIds.indexOf(e.chipId) === -1;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.signup'>Påmelding</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    {today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate) ? <>\n                        <span class='font-weight-lighter'><Text id='races.signed-in-as'>Logget inn som</Text>:</span> {user.email}<br /><br />\n                        {signup.id ? <>\n                            <div class='font-weight-bold mb-4'>\n                                <i class='fas fa-check text-success' /> <Text id='races.signed-up'>Din bruker er påmeldt!</Text><br />\n                                {/* <xmp>{JSON.stringify(signup, null, 4)}</xmp> */}\n                            </div>\n\n                            {!race.liveRace && race.signuppayment && <>\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-2 col-form-label text-right font-weight-lighter'><Text id='races.signup'>Påmelding</Text></label>\n                                    <div class='col-10'>\n                                        {signup.paidSignupfee ? <div class='py-2'>\n                                            <Text id='races.paid'>Betalt</Text>: {util.formatDate(signup.paidSignupfee)}\n                                            <i class='fas fa-check text-success ml-3' />\n                                        </div> : <>\n                                            <div class='alert alert-danger mb-1' role='alert'>\n                                                <h5>\n                                                    <span class='font-weight-lighter'><Text id='races.payment-info'>Betaling påmelding</Text>:</span><br />\n                                                    <Markdown markdown={mu.replaceImages(race.signuppayment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                    {signupClass.signupfee || race.signupfee} NOK\n                                                </h5>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n\n\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'info' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='info'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='race.info'>Info</Text></button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'chiplist' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='chiplist'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-ol' /> <Text id='race.chiplist'>Chiplist</Text></button>\n                                    </div>\n                                    {/* <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='team'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-dog' /> <Text id='race.team'>Team</Text></button>\n                                    </div> */}\n                                </div>\n                            </div>\n\n                            {submenu === 'info' && <>\n                                <div class='form-group row my-5'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>\n                                        <Text id='races.team'>Team</Text>\n                                    </label>\n                                    <div class='col-9'>\n                                        <select class='form-control form-control-lg' id='team' aria-describedby='teamHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.team}\n                                        >\n                                            <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                            {teams.map(team =>\n                                                <option value={team.id}>{team.name}</option>\n                                            )}\n                                        </select>\n                                        {signup.team ? <>\n                                            {/* <div class='alert alert-success' role='alert'>\n                                                A simple success alert—check it out!\n                                            </div> */}\n                                        </> : <>\n                                            <div class='alert alert-danger clearfix' role='alert'>\n                                                <span class='display-4 float-left mr-3'>\n                                                    <i class='fas fa-exclamation-triangle' />\n                                                </span>\n                                                <Text id='races.choose-race-team' fields={{ title: race.title }}>Please choose race team for {race.title}</Text>\n                                            </div>\n                                        </>}\n                                        {/* <details>\n                                            <summary>\n                                                <i class='fas fa-info-circle' /> <Text id='races.team-about'>About teams</Text>\n                                            </summary>\n                                            <Text id='races.team-help'>\n                                                <ol>\n                                                    <li>Create a team for your race dogs.</li>\n                                                    <li>Add the dogs you want to use for this race.</li>\n                                                    <li>Choose the team for this race.</li>\n                                                </ol>\n                                            </Text>\n                                        </details> */}\n                                    </div>\n                                </div>\n\n                                <div class='form-group row my-2'>\n                                    <label for='cellphone' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='cellphone'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.cellphone}\n                                                placeholder={<Text id='races.cellphone-help'>Hva er mobilnummer ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                {signup.name && <div class='form-group row my-2'>\n                                    <label for='name' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.name'>Navn</Text></label>\n                                    <div class='col-9'>\n                                        {signup.name}\n                                    </div>\n                                </div>}\n                                <div class='form-group row my-2'>\n                                    <label for='firstname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.firstname'>Fornavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='firstname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.firstname}\n                                                placeholder={<Text id='races.firstname-help'>Hva er fornavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='lastname' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.lastname'>Etternavn</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='lastname'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.lastname}\n                                                placeholder={<Text id='races.lastname-help'>Hva er etternavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='sportsClub' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='sportsClub'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.sportsClub}\n                                                placeholder={<Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='facebook' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.facebook'>Facebook</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='facebook'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.facebook}\n                                                placeholder={<Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='instagram' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.instagram'>Instagram</Text></label>\n                                    <div class='col-9'>\n                                        <Localizer>\n                                            <input type='text' class='form-control' id='instagram'\n                                                data-classid={signup.class}\n                                                data-contestantid={signup.id}\n                                                onInput={this.editSignup}\n                                                value={signup.instagram}\n                                                placeholder={<Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text>}\n                                            />\n                                        </Localizer>\n                                    </div>\n                                </div>\n                                <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'><Text id='races.class'>Klasse</Text></label>\n                                    <div class='col-9'>\n                                        <select class='form-control' id='class' aria-describedby='classHelp'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            value={signup.class}\n                                            disabled\n                                        >\n                                            <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <option value={currentClass.id}>\n                                                    {currentClass.title}{!race.liveRace && <>\n                                                        - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK\n                                                    </>}\n                                                </option>\n                                            </>)}\n                                        </select>\n                                    </div>\n                                </div>\n                                {race.rules && <div class='form-group row my-2'>\n                                    <label for='team' class='col-3 col-form-label text-right font-weight-lighter'>&nbsp;</label>\n                                    <div class='col-9 pl-5'>\n                                        <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                            data-classid={signup.class}\n                                            data-contestantid={signup.id}\n                                            onInput={this.editSignup}\n                                            checked={signup.termsAndAgreement}\n                                            value={1}\n                                        />\n                                        <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                    </div>\n                                </div>}\n                                {race.declaration && <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top'>\n                                        <h5><Text id='races.declaration'>Declaration</Text></h5>\n                                    </div>\n                                    <details class='col-12'>\n                                        {signup.declaration ? <>\n                                            <summary>\n                                                <Text id='races.see-declaration'>See declaration</Text> (<span class='text-muted font-weight-light'><Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}</span>)\n                                            </summary>\n                                        </> : <>\n                                            <summary>\n                                                <h5 class='btn btn-primary'><Text id='races.see-declaration'>See declaration</Text></h5>\n                                            </summary>\n                                        </>}\n\n                                        <Markdown markdown={mu.replaceImages(race.declaration, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n\n                                        {signup.declaration ? <>\n                                            <i>\n                                                <Text id='races.declaration-signed'>Declaration signed</Text>: {util.isoDate(signup.declarationDate)}\n                                            </i>\n                                        </> : <>\n                                            <div class='pl-5'>\n                                                <input type='checkbox' class='form-check-input' id='declaration'\n                                                    data-classid={signup.class}\n                                                    data-contestantid={signup.id}\n                                                    onInput={this.editSignup}\n                                                    checked={signup.declaration}\n                                                    value={1}\n                                                />\n                                                <label class='form-check-label' for='declaration'><Text id='races.declaration-accept'>I hereby sign the declaration for the race!</Text></label>\n                                            </div>\n                                        </>}\n                                    </details>\n                                </div>}\n\n                                <Input saved={saved} user={user} field='image' icon='fas fa-camera' type='image'\n                                    stores={this.props.stores}\n                                    title={<Text id='users.photos'>Bilder</Text>}\n                                    help={<Text id='users.photos-help'>Bilder av deg.</Text>}\n                                    onInput={this.updateField} updateField={this.updateFieldValue} />\n\n                            </>}\n\n                            {submenu === 'chiplist' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 text-center border-top pt-3'>\n                                        <h5><Text id='races.chiplist'>Chiplist</Text></h5>\n                                    </div>\n\n                                    {signupClass && signupClass.dogs && mu.getAlphabet(signupClass.dogs, ['R1', 'R2']).map(letter => {\n                                        const chosenDog = dogs && dogs.length > 0 ? dogs.find(e => e.chipId === signup[`dog${letter}`]) : null;\n                                        return (<>\n                                            <div class='col-12 center border-top pt-3 d-flex'>\n                                                <div class='display-4' style='width: 50px;'>\n                                                    {letter}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pr-2'>\n                                                    {chosenDog ? <>\n                                                        <DogLine stores={this.props.stores} dog={chosenDog} onDogClick={this.onDogClick}>\n                                                            <button\n                                                                class='btn btn-danger float-right ml-2'\n                                                                onClick={this.clearSignupValue}\n                                                                id={`dog${letter}`}\n                                                                data-classid={signup.class}\n                                                                data-contestantid={signup.id}\n                                                            >\n                                                                <i class='fas fa-times' />\n                                                            </button>\n                                                        </DogLine>\n                                                    </> : <>                                                \n                                                        <select class='form-control p-0'\n                                                            id={`dog${letter}`}\n                                                            data-classid={signup.class}\n                                                            data-contestantid={signup.id}\n                                                            onInput={this.editSignup}\n                                                        >\n                                                            <option value=''>-- Choose dog for this position --</option>\n                                                            {dogs.filter(byNotChosen).map(dog => <>\n                                                                <option value={dog.chipId} selected={dog.chipId === signup[`dog${letter}`] ? 'selected' : ''}>\n                                                                    {dog.shortname || dog.name} - {dog.birth && <>{util.age(dog.birth, dog.deceased)}</>} {dog.gender === 'female' ? '♀️' : '♂️'}\n                                                                </option>\n                                                            </>)}\n                                                        </select>\n                                                    </>}\n                                                </div>\n                                            </div>\n                                        </>);\n                                    })}\n\n                                </div>\n                            </>}\n\n                            {submenu === 'team' && <>\n                                <div class='form-group row my-4'>\n                                    <div class='col-12 border-top pt-3'>\n                                        {dogs && dogs.length > 0 ? <>\n                                            {dogs.map(dog => <>\n                                                <DogLine stores={this.props.stores} dog={dog} />\n                                            </>)}\n                                        </> : <>\n                                            <div class='text-center text-muted'>\n                                                <div class='display-1'>\n                                                    <i class='fas fa-dog' />\n                                                </div>\n                                                <h3 class='font-weight-lighter'>\n                                                    <Text id='race.add-dogs'>Add a team to your race signup to see the dogs.</Text>\n                                                </h3>\n                                            </div>\n                                        </>}\n                                    </div>\n                                </div>\n                            </>}\n                        </> : <>\n\n                            {race.liveRace ? <>\n                                Signup is done at the race normal web pages.\n                            </> : <>\n                                <div class='form-group'>\n                                    <label for='cellphone'><Text id='races.cellphone'>Mobil</Text></label>\n                                    <input type='text' class='form-control' id='cellphone' aria-describedby='cellphoneHelp'\n                                        placeholder={user.cellphone}\n                                        onInput={this.updateSignup}\n                                        value={signup.cellphone}\n                                    />\n                                    <small id='cellphoneHelp' class='form-text text-muted'><Text id='races.cellphone-help'>'Hva er mobilnummer ditt?'</Text></small>\n                                </div>\n\n                                {signup.name && <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='name'><Text id='races.name'>Name</Text></label>\n                                            <input type='text' class='form-control' id='name' aria-describedby='nameHelp'\n                                                placeholder={user.name}\n                                                onInput={this.updateSignup}\n                                                value={signup.name}\n                                            />\n                                            <small id='nameHelp' class='form-text text-muted'><Text id='races.name-help'>Hva er navnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>}\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='firstname'><Text id='races.firstname'>Fornavn</Text></label>\n                                            <input type='text' class='form-control' id='firstname' aria-describedby='firstnameHelp'\n                                                placeholder={user.firstname}\n                                                onInput={this.updateSignup}\n                                                value={signup.firstname}\n                                            />\n                                            <small id='firstnameHelp' class='form-text text-muted'><Text id='races.firstname-help'>Hva er fornavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='lastname'><Text id='races.lastname'>Etternavn</Text></label>\n                                            <input type='text' class='form-control' id='lastname' aria-describedby='lastnameHelp'\n                                                placeholder={user.lastname}\n                                                onInput={this.updateSignup}\n                                                value={signup.lastname}\n                                            />\n                                            <small id='lastnameHelp' class='form-text text-muted'><Text id='races.lastname-help'>Hva er etternavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='sportsClub'><Text id='races.sportsclub'>Klubb</Text></label>\n                                    <input type='text' class='form-control' id='sportsClub' aria-describedby='sportsClubHelp'\n                                        placeholder={user.sportsClub}\n                                        onInput={this.updateSignup}\n                                        value={signup.sportsClub}\n                                    />\n                                    <small id='sportsClubHelp' class='form-text text-muted'><Text id='races.sportsClub-help'>Hvilken klubb tilhører du?</Text></small>\n                                </div>\n\n                                <div class='row'>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='facebook'><Text id='races.facebook'>Facebook</Text></label>\n                                            <input type='text' class='form-control' id='facebook' aria-describedby='facebookHelp'\n                                                placeholder={user.facebook}\n                                                onInput={this.updateSignup}\n                                                value={signup.facebook}\n                                            />\n                                            <small id='facebookHelp' class='form-text text-muted'><Text id='races.facebook-help'>Hva er Facebook brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                    <div class='col'>\n                                        <div class='form-group'>\n                                            <label for='instagram'><Text id='races.instagram'>Instagram</Text></label>\n                                            <input type='text' class='form-control' id='instagram' aria-describedby='instagramHelp'\n                                                placeholder={user.instagram}\n                                                onInput={this.updateSignup}\n                                                value={signup.instagram}\n                                            />\n                                            <small id='instagramHelp' class='form-text text-muted'><Text id='races.instagram-help'>Hva er Instagram brukernavnet ditt?</Text></small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='team'><Text id='races.team'>Team</Text></label>\n                                    <select class='form-control' id='team' aria-describedby='teamHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.team}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-team'>Velg team</Text> --</option>\n                                        {teams.map(team =>\n                                            <option value={team.id}>{team.name}</option>\n                                        )}\n                                    </select>\n                                    <small id='teamHelp' class='form-text text-muted'><Text id='races.choose-team-help'>Velg fra dine team</Text></small>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label for='class'><Text id='races.class'>Klasse</Text></label>\n                                    <select class='form-control' id='class' aria-describedby='classHelp'\n                                        onInput={this.updateSignup}\n                                        value={signup.class}\n                                    >\n                                        <option value=''>-- <Text id='races.choose-class'>Velg klasse</Text> --</option>\n                                        {race.classes && race.classes.map(currentClass => <>\n                                            <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                        </>)}\n                                    </select>\n                                    <small id='classHelp' class='form-text text-muted'><Text id='races.choose-class-help'>Velg ønsket klasse.</Text></small>\n                                </div>\n\n                                <div class='form-group form-check'>\n                                    <input type='checkbox' class='form-check-input' id='termsAndAgreement'\n                                        onInput={this.updateSignup}\n                                        checked={signup.termsAndAgreement}\n                                        value={true}\n                                    />\n                                    <label class='form-check-label' for='termsAndAgreement'><Text id='races.agreement-accept'>Jeg har lest og godtar reglene for løpet.</Text></label>\n                                </div>\n                                <button type='button' class='btn btn-primary' onClick={this.signupToRace}><Text id='races.do-signup'>Meld meg på</Text></button>\n                            </>}\n\n                        </>}\n\n                    </> : <>\n                        {today < new Date(race.signupStartDate) ? <>\n                            <h5 class='mt-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-not-open-yet'>Påmeldingen har ikke åpnet ennå!</Text>\n                            </h5>\n                            <p class='mt-4'>\n                                <Text id='races.signup-opening'>Påmeldingen åpner</Text>:<br />\n                                <span class='display-4'>{util.formatDate(race.signupStartDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</span>\n                            </p>\n                        </> : <>\n                            <h5 class='mt-4 mb-4'>\n                                <i class='fas fa-exclamation-circle' /> <Text id='races.signup-closed'>Påmeldingen er stengt!</Text>\n\n                                {/* {JSON.stringify(signup, null, 4)} */}\n                            </h5>\n                        </>}\n                    </>}\n                </div>\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <DogsEditBaseInfo\n                        stores={this.props.stores}\n                        id={currentDog.id}\n                    />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport ImageScroller from '../../components/imageScroller';\n\nfunction nl2br($str) {\n\tif (typeof $str === 'string') {\n\t\treturn $str.replace(/[\\n]/g, '<br>');\n\t}\n\treturn $str;\n}\n\nfunction byBib(a, b) {\n    const aHas = typeof a.bib !== 'undefined';\n    const bHas = typeof b.bib !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.bib - b.bib) || 0;\n}\n\n@observer\nclass AppRaceDetailMushers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayDetails: {},\n            editUserDetails: {},\n            showAdminSendMessage: {},\n            showAdminImport: {},\n            message: {},\n            inboxMessage: {},\n            submenu: 'chiplists',\n            preCheck: {},\n            raceCheck: {},\n            dogJournals: {},\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n        this.parseInputTimer = null;\n    }\n\n    toggleDisplayDetails = (e) => {\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { editUserDetails } = appState;\n\t\tif (!editUserDetails[id]) {\n\t\t\tappState.toggleDisplayDetails(id)\n\t\t}\n\t}\n\n    adminToggleEditUser = async (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState, raceStore, adminStore } = this.props.stores;\n        const { editUserDetails } = appState;\n\n        if (!editUserDetails[id]) {\n            const musher = raceStore.getMusherById(id);\n            await adminStore.getUserByEmail(musher.email);\n            // console.log({ musher, user, teams });\n        }\n\t\tappState.toggleEditUserDetails(id)\n\t}\n\n    veterinaryToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst id = e.target.closest('tr').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleVeterinaryUserDetails(id, true)\n\t}\n\n    toggleAdminSendMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendMessage } = this.state;\n\t\tshowAdminSendMessage[classId] = !showAdminSendMessage[classId];\n\t\tthis.setState({ showAdminSendMessage });\n\t}\n\n    toggleAdminSendInboxMessage = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminSendInboxMessage = {} } = this.state;\n\t\tshowAdminSendInboxMessage[classId] = !showAdminSendInboxMessage[classId];\n\t\tthis.setState({ showAdminSendInboxMessage });\n\t}\n\n    toggleAdminImport = (e) => {\n\t\tconst classId = e.target.closest('button').dataset.class;\n\t\tconst { showAdminImport } = this.state;\n\t\tshowAdminImport[classId] = !showAdminImport[classId];\n\t\tthis.setState({ showAdminImport });\n\t}\n\n    adminSignupEdit = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n    adminSignupSetValue = (e) => {\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        const { raceStore } = this.props.stores;\n        const { field, value, classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 5);\n    }\n\n\tsendEmail = async (e) => {\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst to = e.target.closest('button').dataset.to;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { appState } = this.props.stores;\n\t\tconst { message } = this.state;\n\t\tconst { subject, body } = message;\n\t\tconst emailResponse = await appState.sendEmail({\n\t\t\tto,\n\t\t\tsubject,\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ emailResponse });\n\t}\n\n\tresetEmail = () => {\n\t\tthis.setState({\n\t\t\temailResponse: null,\n\t\t\tmessage: {\n\t\t\t\tsubject: '',\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    sendInboxMessage = async (e) => {\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceId = race.id;\n\t\tconst raceClassId = e.target.closest('button').dataset.raceclassid;\n\t\tconst { inboxMessage } = this.state;\n\t\tconst { body } = inboxMessage;\n\t\tconst inboxMessageResponse = await raceStore.sendInboxMessage({\n\t\t\tbody,\n\t\t\traceId,\n\t\t\traceClassId,\n\t\t});\n\t\tthis.setState({ inboxMessageResponse });\n\t}\n\n    resetInboxMessage = () => {\n\t\tthis.setState({\n\t\t\tinboxMessage: {\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t});\n\t}\n\n    signupToRace = async ({ signup }) => {\n\t\tconst { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n\n\t\tawait raceStore.addContestant({\n\t\t\tid: raceid,\n\t\t\tclassId: signup.class,\n\t\t\tnewContestant: {\n\t\t\t\t// team: user.team,\n\t\t\t\t// firstname: user.firstname,\n\t\t\t\t// lastname: user.lastname,\n\t\t\t\t// sportsClub: user.sportsClub,\n\t\t\t\t// email: user.email,\n\t\t\t\t// cellphone: user.cellphone,\n\t\t\t\t// facebook: user.facebook,\n\t\t\t\t// instagram: user.instagram,\n\t\t\t\t ...signup\n\t\t\t}\n        });\n\t}\n\n    parseInput = async (data, classId) => {\n        clearTimeout(this.parseInputTimer);\n        this.parseInputTimer = setTimeout(() => this.doParseInput(data, classId), 500);\n    }\n\n    doParseInput = async (data, classId) => {\n        const lines = String(data).split('\\n');\n        let headers = [];\n        const jsonData = [];\n\n        // Get headers\n        const firstLine = lines[0];\n        if (firstLine.match(/\\t/)) {\n            headers = firstLine.split('\\t');\n        } else if (firstLine.match(/;/)) {\n            headers = firstLine.split(';');\n        } else {\n            headers = firstLine.split(',');\n        }\n\n        // Map data to headernames\n        for (let i = 1, l = lines.length; i < l; i += 1) {\n            const line = lines[i];\n            let values;\n            if (line.match(/\\t/)) {\n                values = line.split('\\t');\n            } else if (line.match(/;/)) {\n                values = line.split(';');\n            } else {\n                values = line.split(',');\n            }\n            const jsonObject = {};\n            values.forEach((v, idx) => {\n                let val = v;\n                if (headers[idx] === 'email') {\n                    val = v.toLowerCase();\n                }\n                jsonObject[headers[idx]] = val;\n            });\n            jsonData.push(jsonObject);\n        }\n\n        const { raceStore } = this.props.stores;\n        const { race = {} } = this.props;\n        const raceid = race.id;\n        raceStore.addMultipleContestants({ id: raceid, classId, contestants: jsonData });\n        return true;\n    }\n\n    chooseSubmenu = (e) => {\n        e.stopPropagation();\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\n        // const { dogStore } = this.props.stores;\n        // const { dog } = dogStore;\n        // route(`/dogs/${dog.id}/${submenu}`);\n\t}\n\n\tfilterByClass = (e) => {\n\t\tconst selectedClassId = e.target.closest('button').dataset.id;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleSelectedClassId(selectedClassId, true);\n\t}\n\n    clearSearchForBib = () => {\n        this.setState({ searchForBib: '' });\n    }\n\n    savePreCheck = async (e) => {\n        const { id, chipid, name, shortname, team } = e.target.closest('button').dataset;\n        const { preCheck, dogJournals } = this.state;\n        const { dogJournalStore, userStore } = this.props.stores;\n\t\tconst { user = {} } = userStore;\n\n        const vetData = {\n            id: user.id,\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email,\n            image: user.image,\n        };\n\n        const dogData = {\n            id,\n            chipId: chipid,\n            name,\n            shortname,\n            team,\n        };\n\n        const preCheckOject = util.getNestedValue(preCheck, id) || {};\n        const journalData = {\n            checkType: 'preCheck',\n            ...preCheckOject,\n        };\n\n        const data = [{\n            dog: { ...dogData },\n            journal: { ...journalData },\n            veterinary: { ...vetData },\n        }];\n\n        if (!dogJournals[chipid]){\n            dogJournals[chipid] = [];\n        }\n        dogJournals[chipid].push({\n            date: new Date(),\n            ...dogData,\n            ...journalData,\n            ...vetData,\n        });\n\n        await dogJournalStore.insert({ data });\n        delete preCheck[id];\n        this.setState({ preCheck });\n    }\n\n    render() {\n        const {\n            showAdminSendMessage = {}, showAdminSendInboxMessage = {}, showAdminImport = {},\n            message = {}, inboxMessage = {},\n            inboxMessageResponse, emailResponse, submenu, searchForBib,\n            preCheck = {},\n            raceCheck = {},\n            dogJournals = {},\n        } = this.state;\n\t\tconst { userStore, raceStore, appState, adminStore } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, isVeterinary } = userStore;\n        const { language = 'en' } = user;\n        const { displayDetails, editUserDetails, veterinaryUserDetails, selectedClassIds = [] } = appState;\n\n\t\tconst { race = {} } = this.props;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const filterByBib = (c) => {\n\t\t\tif (searchForBib) {\n                const regex = new RegExp(`${searchForBib.replace(/[^a-zA-Z 0-9æøåÆØÅ]/, '')}`, 'i');\n\t\t\t\treturn (regex.test(c.bib) || regex.test(c.firstname) || regex.test(c.lastname));\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { user: selectedUser = {}, teams: selectedUserTeams } = adminStore;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='races.mushers'>Deltakere</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\n                    <div class='w-100 overflow-hidden'>\n                        <div\n                            class='d-flex flex-row flex-nowrap pb-2 px-1'\n                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                        >\n                            {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                                <div class='col px-0 pt-2'>\n                                    <button\n                                        type='button'\n                                        class={`btn btn-block ${idx === 0 && 'rounded-pill-left'} ${idx === race.classes.length - 1 && 'rounded-pill-right'} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                        onClick={this.filterByClass}\n                                        data-id={currentClass.id}\n                                    >\n                                        {currentClass.title}\n                                    </button>\n                                </div>\n                            </>)}\n                        </div>\n                    </div>\n\n                    <div class='row mb-3'>\n                        <div class='col-6 offset-3'>\n                            <div class='input-group'>\n                                <input class='form-control form-control-lg' type='text' placeholder='Search for bib' value={searchForBib} onInput={linkstate(this, 'searchForBib')} />\n                                {searchForBib && <div class='input-group-append'>\n                                    <div class='input-group-text' onClick={this.clearSearchForBib}>x</div>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n\n                    {race.classes && race.classes.filter(filterByClassId).sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                        {isAdmin && <span class='float-right'>\n                            Total app users: {currentClass.contestants && currentClass.contestants.filter(musher => (musher.user || musher.team)).length}\n                        </span>}\n                        <h5>{currentClass.title} {currentClass.startDate && <>\n                            : <span class='font-weight-lighter'>\n                                {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </span>\n                        </>}</h5>\n\n                        {isAdmin && <>\n                            <a class='mx-2' href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a> -\n                            <a class='mx-2' href={`/tv/top5/${race.id}/${currentClass.id}`}>TV Top 5</a> -\n                            <a class='mx-2' href={`/tv/top3/${race.id}/${currentClass.id}`}>TV Top 3</a> -\n\n                            <a class='mx-2' href={`/tv/top10progress/${race.id}/${currentClass.id}`}>TV Top Progress 10</a> -\n                            <a class='mx-2' href={`/tv/top5progress/${race.id}/${currentClass.id}`}>TV Top Progress 5</a> -\n                            <a class='mx-2' href={`/tv/top3progress/${race.id}/${currentClass.id}`}>TV Top Progress 3</a> -\n\n                            <a class='mx-2' href={`/tv/team/${race.id}/1`}>TV One team</a> -\n                            <a class='mx-2' href={`/tv/tracking/${race.id}/${currentClass.id}`}>TV tracking</a> -\n                            <a class='mx-2' href={`/tv/freetext`}>TV free text</a> -\n\n                            <a class='mx-2' href={`/embed/top10/${race.id}/${currentClass.id}`}>Embed top10</a> -\n                            <a class='mx-2' href={`/embed/tracking/${race.id}/${currentClass.id}`}>Embed tracking</a> -\n                            <a class='mx-2' href={`/embed/chiplist/${race.id}/${currentClass.id}`}>Embed chiplist</a> -\n                            <a class='mx-2' href={`/embed/agreement/${race.id}/${currentClass.id}`}>Embed agreement</a> -\n                        </>}\n\n                        <div class='table-responsive'>\n                            <table class='table table-sm table-striped'>\n                                <thead>\n                                    <tr>\n                                        <th scope='col'>#</th>\n                                        <th scope='col' style='min-width: 90%;'><Text id='races.name'>Navn</Text></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {currentClass.contestants && currentClass.contestants.filter(filterByBib).sort(byBib).map((musher, idx) => {\n                                        const currentTeam = raceStore.getTeamById(musher.team);\n                                        const hasVaccines = raceStore.hasVaccines(currentTeam);\n                                        const hasMandatoryCheck = musher.mandatoryCheck;\n\n                                        return (<>\n                                            <tr onClick={this.toggleDisplayDetails} data-id={musher.id}>\n                                                <th scope='row'>\n                                                    {musher.bib ? <>\n                                                        {musher.bib}\n                                                    </> : <>\n                                                        <span class='font-weight-lighter text-muted'>{idx + 1}</span>\n                                                    </>}\n                                                </th>\n                                                <td\n                                                    class={`${displayDetails[musher.id] ? 'font-weight-bold' : ''}`}\n                                                    style={`${displayDetails[musher.id] || veterinaryUserDetails[musher.id] ? '' : 'line-height: 0.8em;'}`}\n                                                >\n                                                    {isVeterinary && <>\n                                                        {musher.team ? <>\n                                                            <button class='btn btn-primary btn-sm float-right ml-4' onClick={this.veterinaryToggleEditUser}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-4 disabled' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-user-md' />\n                                                            </button>\n                                                        </>}\n                                                        {hasVaccines ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-syringe' />\n                                                            </button>\n                                                        </>}\n                                                        {hasMandatoryCheck ? <>\n                                                            <button class='btn btn-success btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </> : <>\n                                                            <button class='btn btn-outline-secondary btn-sm float-right ml-1' onClick={e => e.stopPropagation()}>\n                                                                <i class='fas fa-stethoscope' />\n                                                            </button>\n                                                        </>}\n                                                    </>}\n                                                    {isAdmin && <>\n                                                        <button class='btn btn-outline-warning btn-sm float-right ml-1' onClick={this.adminToggleEditUser}>\n                                                            <i class='fas fa-user-edit' />\n                                                        </button>\n                                                        {musher.paidSignupfee && <>\n                                                            <span class='float-right'>\n                                                                <i class='fas fa-check text-success' /><br />\n                                                            </span>\n                                                        </>}\n                                                        <small class='float-right'>\n                                                            {musher.raceStatus && <><span class='text-muted'>raceStatus:</span><br /> {musher.raceStatus}<br /></>}\n                                                            {musher.raceComment && <><span class='text-muted'>raceComment:</span><br /> {musher.raceComment}<br /></>}\n                                                            {musher.gpxResultsApproved && <><span class='text-muted'>gpxResultsApproved:</span><br /> {musher.gpxResultsApproved}<br /></>}\n                                                        </small>\n                                                    </>}\n                                                    {(isAdmin || isVeterinary) && race.liveRace > 0 && race.declaration && <>\n                                                        <span class='float-right text-success mr-2' style='font-size: 1.2em;'>\n                                                            {(musher.user || musher.team) && <i class='fas fa-mobile-alt ml-2' />}\n                                                            {musher.declaration && <i class='fas fa-handshake ml-2' alt={util.isoDate(musher.declarationDate)} />}\n\n                                                        </span>\n                                                    </>}\n                                                    {displayDetails[musher.id] ? <>\n                                                        {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                        {musher.firstname ? <>\n                                                            {musher.firstname} {musher.lastname}<br />\n                                                        </> : <>\n                                                            {musher.name}\n                                                        </>}\n                                                        <span class='text-muted'>{currentTeam.name}</span><br />\n                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                        {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}<br />\n\n                                                        {isAdmin && <>\n                                                            {musher.bib && <><i class='fas fa-tshirt ml-2' /> {musher.bib}</>}\n                                                            {musher.startTime && <><i class='fas fa-clock ml-2' /> {util.isoDate(musher.startTime)}</>}\n                                                        </>}\n\n                                                        {musher.price1 && <div class='font-weight-lighter'>\n                                                            <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </div>}\n                                                        {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                        {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                    </> : <>\n                                                        {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                            <i class='fas fa-trophy' />\n                                                            {musher.priceSent && <>\n                                                                <i class='fas fa-check text-success' />\n                                                            </>}\n                                                        </span>}\n                                                        <nobr>\n                                                            {musher.flag && <span class='mr-2'>{musher.flag}</span>}\n                                                            {musher.firstname ? <>\n                                                                {musher.firstname} {musher.lastname}<br />\n                                                            </> : <>\n                                                                {musher.name}\n                                                            </>}\n                                                            <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                        </nobr>\n                                                    </>}\n\n\n                                                    {/* <xmp>{JSON.stringify(currentTeam, null, 4)}</xmp> */}\n                                                    {isVeterinary && veterinaryUserDetails[musher.id] && <>\n                                                        <ScrollIntoView horizontal={'end'} vertical={'center'} />\n                                                        <div class='w-100 overflow-hidden' style='max-width: 100%;'>\n                                                            <div\n                                                                class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                                                style='overflow: auto; scroll-snap-type: x mandatory;'\n                                                            >\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-left rounded-none ${submenu === 'chiplists' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='chiplists'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-user-md' /> <Text id='racevet.chiplists'>Vaccines</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-none ${submenu === 'precheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='precheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-stethoscope' /> <Text id='racevet.precheck'>PreCheck</Text></button>\n                                                                </div>\n                                                                <div class='col px-0 pt-2'>\n                                                                    <button\n                                                                        class={`btn btn-sm btn-block rounded-pill-right rounded-none ${submenu === 'racecheck' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                                                        style='text-overflow: ellipsis; overflow: hidden;'\n                                                                        data-menu='racecheck'\n                                                                        onClick={this.chooseSubmenu}\n                                                                    ><i class='fas fa-flag-checkered' /> <Text id='racevet.racecheck'>RaceCheck</Text></button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        {submenu === 'chiplists' && <>\n                                                            <h5 class='mt-4 border-bottom'>Chiplist & Vaccines</h5>\n                                                            <div class='container-fluid'>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogVaccines;\n                                                                    if (currentTeam && currentTeam.vaccines) {\n                                                                        dogVaccines = currentTeam.vaccines.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId}\n                                                                                </div>\n                                                                            {/* <xmp>{JSON.stringify(dogVaccines, null, 4)}</xmp> */}\n                                                                                {dogVaccines && dogVaccines.map((vac) => {\n                                                                                    return (\n                                                                                        <div class='col-4 px-1 overflow-hidden'>\n                                                                                            <span class={`badge badge-${vac.inKarens ? 'warning' : 'success'}`}>\n                                                                                                <span class='font-weight-lighter'>\n                                                                                                    <i class='fas fa-calendar-check' /> {util.isoDate(vac.vaccineAgens.durationEnd, false, false, true)}\n                                                                                                    {vac.inKarens && <>\n                                                                                                        <br />\n                                                                                                        (<Text id='dogs.vaccine-karens'>karens</Text>: {util.format(vac.karensDaysLeft, 0)} <Text id='dogs.vaccine-karens-days-left'>days left</Text>)\n                                                                                                    </>}\n                                                                                                </span>\n                                                                                            </span>\n\n                                                                                            <div class='text-overflow'>\n                                                                                                <small class='font-weight-light'>\n                                                                                                    {vac.vaccineAgens.name}<br />\n                                                                                                    <nobr>{vac.vaccineName}</nobr><br />\n                                                                                                    {/* {util.isoDate(vac.date, false, false, true)}<br /> */}\n                                                                                                    {/* <span class='font-weight-lighter'>\n                                                                                                        <Text id='dogs.vaccine-veterinary'>Veterinær</Text>:\n                                                                                                    </span> {vac.veterinaryFirstname} {vac.veterinaryLastname} &lt;{vac.veterinaryEmail}&gt;<br /> */}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    );\n                                                                                })}\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'precheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Precheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    let dogJournal;\n                                                                    if (currentTeam && currentTeam.journal) {\n                                                                        dogJournal = currentTeam.journal.filter(v => v.chipId === dog.chipId);\n                                                                    }\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-12'>\n                                                                                    {dogJournal && dogJournal.length > 0 && dogJournal.map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                    {dogJournals[dog.chipId] && dogJournals[dog.chipId].length > 0 && dogJournals[dog.chipId].map(journal => <>\n                                                                                        <div class='row border-bottom'>\n                                                                                            {/* {JSON.stringify(journal, null, 4)} */}\n                                                                                            <div class='col-12 text-muted'>\n                                                                                                <small>\n                                                                                                    <span class='float-right'>{journal.checkType && <>{journal.checkType}</>}</span>\n                                                                                                    {util.isoDate(journal.date)} by {journal.veterinaryFirstname} {journal.veterinaryLastname}\n                                                                                                </small>\n                                                                                            </div>\n                                                                                            <div class='col-12 d-flex justify-content-between'>\n                                                                                                {journal.diagnoseId > 0 && <span class='mx-1'><span class='text-muted'>ID:</span> {journal.diagnoseId}</span>}\n                                                                                                {journal.heartRate > 0 && <span class='mx-1'><span class='text-muted'>HR:</span> {journal.heartRate}</span>}\n                                                                                                {journal.weight > 0&& <span class='mx-1'><i class='fas fa-balance-scale text-muted' /> {journal.weight} <span class='text-muted'>kg</span></span>}\n                                                                                                {journal.bodyConditionScore > 0 && <span class='mx-1'><span class='text-muted'>BCS:</span> {journal.bodyConditionScore}</span>}\n                                                                                            </div>\n                                                                                            <div class='col-12'>\n                                                                                                {journal.generalFindings && <span class='mr-1'><span class='text-muted'>Other:</span> {journal.generalFindings}</span>}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </>)}\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='diagnoseId'>Diagnostic</label>\n                                                                                        <select class=\"form-control\" id=\"diagnoseId\" onInput={linkstate(this, `preCheck.${dog.id}.diagnoseId`)} value={util.getNestedValue(preCheck, `${dog.id}.diagnoseId`)}>\n                                                                                            <option value=''>-- Please choose --</option>\n                                                                                            <option value='100'>No findings</option>\n                                                                                        </select>\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' onInput={linkstate(this, `preCheck.${dog.id}.weight`)} value={util.getNestedValue(preCheck, `${dog.id}.weight`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='heartRate'>Heart Rate</label>\n                                                                                        <input type='text' class='form-control' id='heartRate' onInput={linkstate(this, `preCheck.${dog.id}.heartRate`)} value={util.getNestedValue(preCheck, `${dog.id}.heartRate`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='bodyConditionScore'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bodyConditionScore' onInput={linkstate(this, `preCheck.${dog.id}.bodyConditionScore`)} value={util.getNestedValue(preCheck, `${dog.id}.bodyConditionScore`)} />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100 mb-0' for='generalFindings'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='generalFindings' onInput={linkstate(this, `preCheck.${dog.id}.generalFindings`)} value={util.getNestedValue(preCheck, `${dog.id}.generalFindings`)} />\n                                                                                    </small>\n                                                                                    <small id='generalFindingsHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <button\n                                                                                        class='btn btn-outline-success'\n                                                                                        onClick={this.savePreCheck}\n                                                                                        data-id={dog.id}\n                                                                                        data-chipid={dog.chipId}\n                                                                                        data-team={currentTeam.id}\n                                                                                        data-name={dog.name}\n                                                                                        data-shortname={dog.shortName}\n                                                                                    > Save Pre Check</button>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n\n                                                        {submenu === 'racecheck' && <>\n                                                            <h5 class='mt-4 border-bottom'>Racecheck</h5>\n                                                            <div class='row'>\n                                                                {currentTeam && currentTeam.dogs ? currentTeam.dogs.map(dog => {\n                                                                    return (<>\n                                                                        <div class='col-12 d-flex my-3'>\n                                                                            <div class='mx-0 mr-1 px-0 position-relative pt-1'>\n                                                                                <div\n                                                                                    class={`text-center border rounded-circle imageRounded imageRoundedMedium text-muted pt-2`}\n                                                                                    style={`${dog.image ? `background-image: url(\"${dog.image.s3SmallLink}\"); background-size: cover;` : ''} border-width: 2px !important;`}\n                                                                                >\n                                                                                    {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                                                                </div>\n                                                                                <small>\n                                                                                    <span class='float-left text-overflow' style={`width: 70px;`}>{dog.name}</span><br />\n                                                                                </small>\n                                                                                {(dog.birth || dog.gender) && <small>\n                                                                                    <small class='font-weight-normal float-right position-absolute text-white bg-info p-1 rounded' style='top: 0px; right: 0px; line-height: 0.8em;'>\n                                                                                        {dog.birth && <span class='mr-1 text-white'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                                                        {dog.gender && <>{dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}</>}\n                                                                                    </small>\n                                                                                </small>}\n                                                                            </div>\n                                                                            <div class='flex-grow-1 row'>\n                                                                                <div class='col-12 font-weight-bold'>\n                                                                                    <i class='fas fa-microchip text-muted' /> {dog.chipId.slice(-5)}\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='weight'>Weight</label>\n                                                                                        <input type='number' class='form-control' id='weight' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group overflow-hidden'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='hrHeartLungs'>HR/Heart/Lungs</label>\n                                                                                        <input type='text' class='form-control' id='hrHeartLungs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-4 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='bcs'>BCS</label>\n                                                                                        <input type='number' class='form-control' id='bcs' />\n                                                                                    </small>\n                                                                                </div>\n                                                                                <div class='col-12 form-group'>\n                                                                                    <small>\n                                                                                        <label class='text-overflow w-100' for='general'>General findings</label>\n                                                                                        <input type='text' class='form-control' id='general' />\n                                                                                    </small>\n                                                                                    <small id='generalHelp' class='form-text text-muted'>Teeth, mucus membranes, general condition, other findings.</small>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </>);\n                                                                }) : <>\n                                                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 px-0'>\n                                                                        <div class='text-center text-muted'>\n                                                                            <div class='display-1'><i class='fas fa-dog' /></div>\n                                                                            <h3><Text id='teams.no-dogs-title'>No dogs for this team!</Text></h3>\n                                                                        </div>\n                                                                    </div>\n                                                                </>}\n                                                            </div>\n                                                        </>}\n                                                    </>}\n\n                                                    {(isAdmin && editUserDetails[musher.id]) && <>\n                                                        <h5>Admin edit:</h5>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label class='col-4 col-form-label text-right'>Email</label>\n                                                            <div class='col-8'>\n                                                                {musher.email}\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='bib' class='col-4 col-form-label text-right'>bib</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='bib'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.bib}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startTime' class='col-4 col-form-label text-right'>startTime</label>\n                                                            <div class='col-8'>\n                                                                <input type='datetime-local' class='form-control' id='startTime'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startTime ? util.isoDate(musher.startTime, false, false, false) : util.isoDate(currentClass.startDate, false, false, false)}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>team</label>\n                                                            <div class='col-8'>\n                                                                {selectedUserTeams ? <>\n                                                                    <select class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    >\n                                                                        <option value=''>-- Choose race team --</option>\n                                                                        {selectedUserTeams && selectedUserTeams.map(t => <>\n                                                                            <option value={t.id}>{t.name} {t.dogs ? `(${t.dogs.length})` : ''}</option>\n                                                                        </>)}\n                                                                    </select>\n                                                                </> : <>                                                                \n                                                                    <input type='number' class='form-control' id='team'\n                                                                        data-classid={currentClass.id}\n                                                                        data-contestantid={musher.id}\n                                                                        onInput={this.adminSignupEdit}\n                                                                        value={musher.team}\n                                                                    />\n                                                                </>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='user' class='col-4 col-form-label text-right'>user</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='user'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.user}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Race status</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='raceStatus'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceStatus}\n                                                                >\n                                                                    <option value=''>-- Choose race status --</option>\n                                                                    <option value='OK'>OK - Everything ok</option>\n                                                                    <option value='DNS'>DNS - Did Not Start</option>\n                                                                    <option value='DNF'>DNF - Did Not Finish</option>\n                                                                    <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                    <option value='DQ'>DQ - Disqualified</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='raceComment' class='col-4 col-form-label text-right'>Race comment</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='raceComment'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.raceComment}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='gpxResultsApproved' class='col-4 col-form-label text-right'>GPX Results approved (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='gpxResultsApproved'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='paidSignupfee' class='col-4 col-form-label text-right'>paidSignupfee (date)</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='paidSignupfee'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.paidSignupfee ? util.isoDate(musher.paidSignupfee, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='startOrder' class='col-4 col-form-label text-right'>startOrder</label>\n                                                            <div class='col-8'>\n                                                                <input type='number' class='form-control' id='startOrder'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.startOrder}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='cellphone' class='col-4 col-form-label text-right'>Mobil</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='cellphone'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.cellphone}\n                                                                />\n                                                                {selectedUser && selectedUser.cellphone && <small id='cellphoneHelp' class='form-text text-muted'\n                                                                    data-field='cellphone'\n                                                                    data-value={selectedUser.cellphone}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.cellphone || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='name' class='col-4 col-form-label text-right'>Navn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='name'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.name}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='firstname' class='col-4 col-form-label text-right'>Fornavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='firstname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.firstname}\n                                                                />\n                                                                {selectedUser && selectedUser.firstname && <small id='firstnameHelp' class='form-text text-muted'\n                                                                    data-field='firstname'\n                                                                    data-value={selectedUser.firstname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.firstname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='lastname' class='col-4 col-form-label text-right'>Etternavn</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='lastname'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.lastname}\n                                                                />\n                                                                {selectedUser && selectedUser.lastname && <small id='lastnameHelp' class='form-text text-muted'\n                                                                    data-field='lastname'\n                                                                    data-value={selectedUser.lastname}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.lastname || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='address' class='col-4 col-form-label text-right'>Adresse</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='address'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.address}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalcode' class='col-4 col-form-label text-right'>Postalcode</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalcode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalcode}\n                                                                />\n                                                                {selectedUser && selectedUser.postalcode && <small id='postalcodeHelp' class='form-text text-muted'\n                                                                    data-field='postalcode'\n                                                                    data-value={selectedUser.postalcode}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalcode || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='postalplace' class='col-4 col-form-label text-right'>Postalplace</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='postalplace'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.postalplace}\n                                                                />\n                                                                {selectedUser && selectedUser.postalplace && <small id='postalplaceHelp' class='form-text text-muted'\n                                                                    data-field='postalplace'\n                                                                    data-value={selectedUser.postalplace}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.postalplace || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='flag' class='col-4 col-form-label text-right'>flag (emoji)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='flag'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.flag}\n                                                                />\n                                                                {selectedUser && selectedUser.flag && <small id='flagHelp' class='form-text text-muted'\n                                                                    data-field='flag'\n                                                                    data-value={selectedUser.flag}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.flag || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='countryCode' class='col-4 col-form-label text-right'>countryCode (iso)</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='countryCode'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.countryCode}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='birthdate' class='col-4 col-form-label text-right'>birthdate</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='birthdate'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.birthdate ? util.isoDate(musher.birthdate, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='sportsClub' class='col-4 col-form-label text-right'>Klubb</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='sportsClub'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.sportsClub}\n                                                                />\n                                                                {selectedUser && selectedUser.sportsClub && <small id='sportsClubHelp' class='form-text text-muted'\n                                                                    data-field='sportsClub'\n                                                                    data-value={selectedUser.sportsClub}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.sportsClub || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='status' class='col-4 col-form-label text-right'>Status</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='status'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.status}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='facebook' class='col-4 col-form-label text-right'>Facebook</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='facebook'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.facebook}\n                                                                />\n                                                                {selectedUser && selectedUser.facebook && <small id='facebookHelp' class='form-text text-muted'\n                                                                    data-field='facebook'\n                                                                    data-value={selectedUser.facebook}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.facebook || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='instagram' class='col-4 col-form-label text-right'>Instagram</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='instagram'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.instagram}\n                                                                />\n                                                                {selectedUser && selectedUser.instagram && <small id='instagramHelp' class='form-text text-muted'\n                                                                    data-field='instagram'\n                                                                    data-value={selectedUser.instagram}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onClick={this.adminSignupSetValue}\n                                                                >\n                                                                    {selectedUser.instagram || ''}\n                                                                </small>}\n                                                            </div>\n                                                        </div>\n                                                        {/* <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Team</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='team' aria-describedby='teamHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.team}\n                                                                >\n                                                                    <option value=''>-- Velg team --</option>\n                                                                    {teams.map(team =>\n                                                                        <option value={team.id}>{team.name}</option>\n                                                                    )}\n                                                                </select>\n                                                            </div>\n                                                        </div> */}\n                                                        <div class='form-group row my-0'>\n                                                            <label for='team' class='col-4 col-form-label text-right'>Klasse</label>\n                                                            <div class='col-8'>\n                                                                <select class='form-control' id='class' aria-describedby='classHelp'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.class}\n                                                                >\n                                                                    <option value=''>-- Choose race class --</option>\n                                                                    {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                                        <option value={currentClass.id}>{currentClass.title} - {currentClass.distance} km - Påmelding: {currentClass.signupfee || race.signupfee} NOK</option>\n                                                                    </>)}\n                                                                </select>\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price1' class='col-4 col-form-label text-right'>Price 1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price1}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price2' class='col-4 col-form-label text-right'>Price 2</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price2'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price2}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='price3' class='col-4 col-form-label text-right'>Price 3</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='price3'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.price3}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='priceSent' class='col-4 col-form-label text-right'>Price sent</label>\n                                                            <div class='col-8'>\n                                                                <input type='date' class='form-control' id='priceSent'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-0'>\n                                                            <label for='topImage1' class='col-4 col-form-label text-right'>topImage1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='topImage1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.topImage1}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div class='form-group row my-0'>\n                                                            <label for='image1' class='col-4 col-form-label text-right'>image1</label>\n                                                            <div class='col-8'>\n                                                                <input type='text' class='form-control' id='image1'\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                    onInput={this.adminSignupEdit}\n                                                                    value={musher.image1}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div class='form-group row my-5'>\n                                                            <div class='col-8'>\n                                                                <button type='button' class='btn btn-danger float-right'\n                                                                    id='deleteUser'\n                                                                    value='1'\n                                                                    onClick={this.adminSignupEdit}\n                                                                    data-classid={currentClass.id}\n                                                                    data-contestantid={musher.id}\n                                                                >\n                                                                    Delete user from this class\n                                                                </button>\n                                                            </div>\n                                                        </div>\n\n                                                    </>}\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n\n                        {isAdmin && <>\n                            {showAdminSendMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Email to all mushers in {currentClass.title}</h5>\n                                            <div class='overflow-auto p-5' style='max-height: 30vh;'>\n                                                <small>\n                                                    {currentClass.emails && currentClass.emails.map((email) => <div class='border rounded-lg p-3 mb-3'>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Date:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {util.formatDate(email.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                To:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.to.map(e => <span class='badge badge-info px-2 py-1 mr-2'>{e}</span>)}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row bg-light'>\n                                                            <div class='col-3 text-right'>\n                                                                Subject:\n                                                            </div>\n                                                            <div class='col-9'>\n                                                                {email.subject}\n                                                            </div>\n                                                        </div>\n                                                        <div class='row mt-2'>\n                                                            <div class='col-3 text-right'>\n                                                                Body:\n                                                            </div>\n                                                            <div class='col-9'\n                                                                dangerouslySetInnerHTML={{ __html: nl2br(email.body) }}\n                                                            />\n                                                        </div>\n                                                    </div>)}\n                                                </small>\n                                            </div>\n\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>To</label>\n                                                <div class='col-10'>\n                                                    {currentClass.contestants && currentClass.contestants.map((musher) => <>\n                                                        <span class='badge badge-info px-2 py-1 mr-2'>{musher.firstname} {musher.lastname} ({musher.email})</span>\n                                                    </>)}\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='subject' class='col-2 col-form-label text-right font-weight-lighter'>Subject</label>\n                                                <div class='col-10'>\n                                                    <input type='text' class='form-control' id='subject'\n                                                        onInput={linkstate(this, 'message.subject')}\n                                                        value={message.subject}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'message.body')}\n                                                        value={message.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {message.body && <Markdown markdown={message.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            {emailResponse && <>\n                                                <div class={`alert alert-${emailResponse && emailResponse.status >= 300 ? 'danger' : 'success'}`} role='alert'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(emailResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                            <button class='btn btn-success float-right'\n                                                type='button'\n                                                data-to={currentClass.contestants && currentClass.contestants.map(musher => musher.email)}\n                                                data-raceclassid={currentClass.id}\n                                                onClick={this.sendEmail}\n                                            >\n                                                <i class='fas fa-paper-plane' /> Send email to all mushers\n                                            </button>\n                                            <button class='btn btn-danger float-right mr-2'\n                                                type='button'\n                                                onClick={this.resetEmail}\n                                            >\n                                                <i class='fas fa-times' /> Reset email\n                                            </button>\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Hide email form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendMessage} data-class={currentClass.id}>Send email to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Send inbox message to all in this class</button>\n                                </div>\n                                <div class='col-12 text-center'>\n                                    <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminImport} data-class={currentClass.id}>Toggle import form</button>\n                                </div>\n                            </>}\n\n                            {showAdminSendInboxMessage[currentClass.id] ? <>\n                                <div class='container'>\n                                    <div class='row'>\n                                        <div class='col-12'>\n                                            <h5>Inbox Message to all mushers in {currentClass.title}</h5>\n                                            <div class='form-group row'>\n                                                <label for='body' class='col-2 col-form-label text-right font-weight-lighter'>Inbox message</label>\n                                                <div class='col-10'>\n                                                    <textarea type='text' class='form-control' id='body'\n                                                        rows='10'\n                                                        onInput={linkstate(this, 'inboxMessage.body')}\n                                                        value={inboxMessage.body}\n                                                    />\n                                                </div>\n                                                <div class='col-5 contain-images'>\n                                                    {inboxMessage.body && <Markdown markdown={inboxMessage.body} markdownOpts={mu.getMarkdownOptions()} />}\n                                                </div>\n                                            </div>\n\n                                            <div class='clearfix'>\n                                                <button class='btn btn-success float-right'\n                                                    type='button'\n                                                    data-raceclassid={currentClass.id}\n                                                    onClick={this.sendInboxMessage}\n                                                >\n                                                    <i class='fas fa-paper-plane' /> Send inbox message to all mushers\n                                                </button>\n                                                <button class='btn btn-danger float-right mr-2'\n                                                    type='button'\n                                                    onClick={this.resetInboxMessage}\n                                                >\n                                                    <i class='fas fa-times' /> Reset inbox message\n                                                </button>\n                                            </div>\n\n                                            {inboxMessageResponse && <>\n                                                <div class={`alert alert-${inboxMessageResponse && inboxMessageResponse.status >= 300 ? 'danger' : 'success'}`} role='alert' style='max-height: 20vh;'>\n                                                    <small>\n                                                        <xmp>{JSON.stringify(inboxMessageResponse, null, 4)}</xmp>\n                                                    </small>\n                                                </div>\n                                            </>}\n\n                                        </div>\n                                        <div class='col-12 text-center'>\n                                            <button class='btn btn-sm btn-link' type='button' onClick={this.toggleAdminSendInboxMessage} data-class={currentClass.id}>Hide inboxmessage form</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </> : <>\n\n                            </>}\n\n                            {isAdmin && showAdminImport[currentClass.id] && <>\n                                <div class='form-group'>\n                                    <label for='importUsers'><Text id='races.paste-users'>Paste your user data here to import users</Text>:</label>\n                                    <textarea\n                                        class='form-control'\n                                        id='importUsers'\n                                        rows='20'\n                                        oninput={e => this.parseInput(e.target.value, currentClass.id)}\n                                    />\n                                </div>\n                            </>}\n\n                        </>}\n                    </>)}\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailMushers;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nimport PublicTeam from '../../components/team/public';\n\nconst initialState = {\n\tconfirmed: {},\n\tdeleted: {},\n};\n\n@observer\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeams() {\n        const { teamStore } = this.props.stores;\n        await teamStore.load({ query: {}, addData: ['followRequests'] });\n    }\n\n    confirmRequest = (e) => {\n        const { team, user, follow } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.confirmFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { confirmed } = this.state;\n\t\tconfirmed[`${team}-${user}`] = true;\n        this.setState({ confirmed });\n\n        if (follow) {\n            teamStore.followRequestUser(user);\n        }\n    }\n\n    deleteRequest = (e) => {\n        const { team, user } = e.target.closest('button').dataset;\n        const { teamStore } = this.props.stores;\n        teamStore.deleteFollowRequest({\n            team: parseInt(team, 10),\n            user: parseInt(user, 10),\n        });\n        const { deleted } = this.state;\n\t\tdeleted[`${team}-${user}`] = true;\n        this.setState({ deleted });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeams();\n\t}\n\n\trender() {\n        const { deleted = {}, confirmed = {} } = this.state;\n\t\tconst { teamStore, appState } = this.props.stores;\n\t\tconst { teams, hasFollowRequests, followRequests = [] } = teamStore;\n        const { darkmode } = appState;\n\t\tif (!hasFollowRequests) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn (\n            <div class='row pb-1'>\n                <div class={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}>\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='teams.connect.teams-follow-requests'>Forespørsel om å følge</Text>:</h5>\n                            </div>\n                        </div>\n\t\t\t\t\t\t<div class='row'>\n                            <div class='d-flex flex-row flex-nowrap' style='overflow: auto;'>\n                                {util.isArray(teams) && teams.map((team) => <>\n                                    {team && util.isArray(team.followRequests) && team.followRequests.map((reqUser) => {\n                                        const image = reqUser.image && reqUser.image.s3SmallLink ? reqUser.image : null;\n                                        const isDeleted = deleted[`${team.id}-${reqUser.id}`];\n                                        const isConfirmed = confirmed[`${team.id}-${reqUser.id}`];\n                                        const publicTeam = followRequests.find(e => e.user.id === reqUser.id);\n                                        return (\n                                            <div class='mr-2 py-2 border rounded-lg' style='width: 150px;'>\n                                                <div class={`text-center border rounded-circle imageRounded imageRoundedSmall mx-auto`} style={image ? `background-image: url(\"${image.s3SmallLink}\");` : ''}>\n                                                    {!image && <div class='text-muted font-weight-lighter' style='font-size: 20px; padding-top: 5px;'>{mu.displayNameShort(reqUser)}</div>}\n                                                </div>\n                                                <small>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(reqUser)}</strong><br />\n                                                        {/* {publicTeam && publicTeam.public > 0 ? <>\n                                                            <a href={`/teams/public/${publicTeam.uuidv4}`}>{publicTeam.name}</a>\n                                                        </> : <>\n                                                            {publicTeam ? <>{publicTeam.name}</> : ''}<br />\n                                                            <span class='text-muted'>(<Text id='teams.not-public'>Not public</Text>)</span>\n                                                        </>} */}\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <Text id='teams.connect.wants-to-follow'>wants to follow your team:</Text>\n                                                    </div>\n                                                    <div class='text-overflow text-center'>\n                                                        <strong>{mu.displayName(team)}</strong>\n                                                    </div>\n                                                </small>\n                                                {(isConfirmed || isDeleted) ? <>\n                                                    <div class='text-center'>\n                                                        {isConfirmed ? <div class='text-success'>\n                                                            <Text id='teams.connect.confirmed'>Confirmed</Text> <i class='fas fa-check' />\n                                                        </div> : <div class='text-danger'>\n                                                            <Text id='teams.connect.deleted'>Deleted</Text> <i class='fas fa-trash-alt' />\n                                                        </div>}\n                                                    </div>\n                                                </> : <>                                    \n                                                    <div>\n                                                        <button class='btn btn-sm btn-block btn-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id}>\n                                                            <Text id='teams.connect.confirm'>Confirm</Text>\n                                                        </button>\n                                                        {publicTeam && publicTeam.public > 0 && <button class='btn btn-sm btn-block btn-outline-success text-overflow mt-1' onClick={this.confirmRequest} data-team={team.id} data-user={reqUser.id} data-follow={true}>\n                                                            <Text id='teams.connect.confirm-and-follow'>Confirm & follow back</Text>\n                                                        </button>}\n                                                        <div class='mt-3'>\n                                                            <small>\n                                                                <button class='btn btn-sm btn-block btn-link text-overflow' style='font-size: 1.0em;' onClick={this.deleteRequest} data-team={team.id} data-user={reqUser.id}>\n                                                                    <Text id='teams.connect.delete'>Del</Text>\n                                                                </button>\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </>}\n                                            </div>\n                                        );\n                                    })}\n                                </>)}\n                            </div>\n                        </div>\n                        <details class='mt-3'>\n                            <summary><small><Text id='teams.connect.how-summary'>How does this work?</Text></small></summary>\n                            <p>\n                                <Text id='teams.connect.how-text'>What can followers see when I grant them access to follow? The answer is very little. They can see main details of the workouts you share and name of the dogs. That's all. Try to follow a team and check out the workout tab.</Text>\n                            </p>\n                        </details>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Teams;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport WorkoutReplyComment from '../../components/workout/commentReply';\n\nimport style from '../style.css';\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n    showAddComment: {},\n    showAllComments: false,\n    showAllReplies: {},\n    viewImageIdx: {},\n};\n\nconst MAX_COMMENTS = 1;\n\n@observer\nclass WorkoutComments extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n    }\n\n    likeComment = async (e) => {\n        const { callback = () => {} } = this.props;\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutComment({ id: workout.id, commentId });\n\n\t\tif (response && response.status === 200) {\n            callback({ type: 'likeComment', workout, commentId, response });\n\t\t}\n        return true;\n    }\n\n    likeReply = async (e) => {\n        const { callback = () => {} } = this.props;\n\n        const replyId = e.target.parentElement.dataset.id || e.target.dataset.id;\n        const commentId = e.target.parentElement.dataset.comment || e.target.dataset.comment;\n\n        const { workout } = this.props;\n\t\tconst { workoutStore } = this.props.stores;\n\t\tconst response = await workoutStore.likeWorkoutCommentReply({ id: workout.id, replyId, commentId });\n\n        if (response && response.status === 200) {\n            callback({ type: 'likeReply', workout, commentId, replyId, response });\n\t\t}\n    }\n\n    replyComment = async (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\n        const { showAddComment } = this.state;\n        showAddComment[commentId] = !showAddComment[commentId];\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n            if (this.inputRef[commentId]) {\n                this.inputRef[commentId].focus();\n            }\n\t\t});\n    }\n\n    toggleComments = () => {\n\t\tconst { showAllComments } = this.state;\n\t\tthis.setState({\n\t\t\tshowAllComments: !showAllComments,\n\t\t});\n\t}\n\n    toggleReplies = (e) => {\n        const commentId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAllReplies } = this.state;\n        showAllReplies[commentId] = !showAllReplies[commentId];\n\t\tthis.setState({\n\t\t\tshowAllReplies,\n\t\t});\n\t}\n\n    viewImage = (e) => {\n\t\tconst { id, idx } = e.target.closest('img').dataset;\n        const { viewImageIdx } = this.state;\n        viewImageIdx[id] = idx;\n        this.setState({ viewImageIdx });\n    }\n\n    translate = async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        const { workout } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user } = userStore;\n        const { showOriginal = {}, translatedText = {} } = this.state;\n        const key = `${commentid}${replyid ? `-${replyid}`: ''}`;\n        showOriginal[key] = 0;\n        if (replyid) {\n            translatedText[key] = await teamStore.translateCommentReply({ commentid, replyid, object: workout, user });\n        } else {\n            translatedText[key] = await teamStore.translateComment({ commentid, object: workout, user });\n        }\n        this.setState({ showOriginal, translatedText });\n    }\n\n    showOriginal = (e) => {\n        const { replyid, commentid } = e.target.closest('button').dataset;\n        e.preventDefault();\n        e.stopPropagation();\n        const { showOriginal = {} } = this.state;\n        showOriginal[`${commentid}${replyid ? `-${replyid}`: ''}`] = 1;\n        this.setState({ showOriginal });\n    }\n\n    render() {\n        const { showAddComment, showAllComments, showAllReplies, viewImageIdx, showOriginal = {}, translatedText = {} } = this.state;\n\t\tconst { workout, callback = () => {}, col = 12, offset = 0, compact = false } = this.props;\n        const { userStore, teamStore } = this.props.stores;\n        const { user: currentUser, isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        let filteredComments = [];\n        let totalComments = 0;\n        let diplayedComments = 0;\n        let max_comments;\n        if (workout.comments) {\n            totalComments = workout.comments.length;\n            if (showAllComments) {\n                filteredComments = workout.comments;\n            } else {\n                // filteredComments = workout.comments.slice(0, MAX_COMMENTS);\n                max_comments = compact ? 0 : MAX_COMMENTS;\n                filteredComments = workout.comments.slice(Math.max(totalComments - max_comments, 0));\n            }\n            diplayedComments = filteredComments.length;\n        }\n\n        return (\n            <div>\n                {/* {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0 mb-2'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>} */}\n                {workout && filteredComments && filteredComments.reverse().map((comment) => {\n                    const { user = {} } = comment;\n                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                    const displayNameShort = mu.displayNameShort(user);\n                    const displayName = mu.displayName(user);\n                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                    const hasLikedComment = comment.likes && comment.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                    let filteredReplises = [];\n                    let totalReplies = 0;\n                    let diplayedReplies = 0;\n                    if (comment.comments) {\n                        totalReplies = comment.comments.length;\n                        if (showAllReplies[comment.id]) {\n                            filteredReplises = comment.comments;\n                        } else {\n                            filteredReplises = comment.comments.slice(0, max_comments);\n                        }\n                        diplayedReplies = filteredReplises.length;\n                    }\n\n                    const images = [];\n                    if (comment.images) {\n                        const imgs = toJS(comment.images);\n                        images.push(...imgs);\n                    }\n                    const imageIdx = viewImageIdx[comment.id] ? viewImageIdx[comment.id] : 0;\n                    const currentImage = images && images[imageIdx] ? images[imageIdx] : null;\n\n                    const { currentLocationGeocode = {} } = comment;\n\n                   const translation = teamStore.getCommentTranslations({\n                        object: workout,\n                        commentid: comment.id,\n                        targetLang: language,\n                    }) || translatedText[comment.id];\n                    let body = translation || comment.comment;\n                    if (showOriginal[comment.id]) {\n                        body = comment.comment;\n                    }\n\n                    return (\n                        <div class='row'>\n                            <div class='col-12 d-flex mb-2 position-relative'>\n                                <div \n                                    class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                >\n                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                </div>\n                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                    <div class='bg-light p-2 rounded rounded-lg'>\n                                        <div>\n                                            <span style='font-size: 0.95em;'>\n                                                <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                    {displayName}\n                                                </h5>\n\n                                                {teams && teams.length > 0 && <div class='mb-2'>\n                                                    <small class='font-weight-lighter text-muted'>\n                                                        {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                            <a href={`/teams/public/${t.uuidv4}`} class='mr-2'><i class='fas fa-users text-muted' /> {t.name}</a>\n                                                        </>)}\n                                                    </small>\n                                                </div>}\n\n                                                <Markdown markdown={mu.replaceImages(body, comment.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                            </span>\n                                        </div>\n                                        <div class='container-fluid px-3 mt-1'>\n                                            {currentImage && <div class='clearfix row'>\n                                                <div\n                                                    class={`col-12 px-0 overflow-hidden`}\n                                                    style={`max-height: 30vh;`}                                                    \n                                                >\n                                                    <img loading='lazy' class={`img-fluid`} style='min-width: 100px;' src={currentImage.s3LargeLink} />\n                                                </div>\n                                            </div>}\n                                            {images && images.length > 1 && <div class='clearfix d-flex flex-wrap row'>\n                                                {images.map((img, idx) => {\n                                                    return (<>\n                                                        <div\n                                                            class={`col px-0 overflow-hidden`}\n                                                            style={`max-height: 100px; min-width: 100px;`}\n                                                        >\n                                                            <img loading='lazy' class={`img-fluid border`} style='min-width: 100px;' src={img.s3SmallLink} onClick={this.viewImage} data-id={comment.id} data-idx={idx} />\n                                                        </div>\n                                                    </>);\n                                                })}\n                                            </div>}\n                                        </div>\n                                    </div>\n                                    <small>\n                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedComment ? 'text-primary' : ''}`}\n                                            onClick={this.likeComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.like'>Lik</Text>\n                                        </button>\n                                        -\n                                        <button class='btn btn-sm btn-link py-0'\n                                            onClick={this.replyComment}\n                                            data-id={comment.id}\n                                        >\n                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                        </button>\n                                        {comment.language !== language && <>\n                                            -\n                                            {!showOriginal[comment.id] && translation ? <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    data-commentid={comment.id}\n                                                    onClick={this.showOriginal}\n                                                >\n                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                </button>\n                                            </> : <>\n                                                <button\n                                                    type='button'\n                                                    class='btn btn-sm btn-link'\n                                                    onClick={this.translate}\n                                                    data-commentid={comment.id}\n                                                >\n                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                </button>\n                                            </>}\n                                        </>}\n                                        -\n                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                            {util.formatDistance(comment.createdDate, new Date(), { locale: 'no-NB' })}\n                                            {comment.updatedDate && <>\n                                                <span class='font-weight-light ml-2'>(Edited {util.formatDistance(comment.updatedDate, new Date(), { locale: 'no-NB' })})</span>\n                                            </>}\n                                        </button>\n                                        {isAdmin && currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                                            <span class='ml-2 text-muted'>\n                                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                                            </span>\n                                        </>}\n                                    </small>\n                                </div>\n                                {comment.likes && comment.likes.length > 0 && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                    <i class='fas fa-thumbs-up text-primary' /> {comment.likes.length}\n                                </small>}\n                            </div>\n                            <div class='col-11 offset-1 mb-2'>\n\n                                {comment && filteredReplises && filteredReplises.map((reply) => {\n                                    const { user = {} } = reply;\n                                    const teams = teamStore.findPublicTeamByMembers(user.id);\n                                    const displayNameShort = user.firstname ? `${util.ucfirst(user.firstname, true)}${util.ucfirst(user.lastname, true)}` : `${util.ucfirst(user.email || '', true)}`;\n                                    const displayName = user.firstname ? `${user.firstname} ${user.lastname}` : `${user.email}`;\n                                    const userImage = user.image || (user.images ? user.images[0] : undefined);\n                                    const hasLikedReply = reply.likes && reply.likes.findIndex(e => e.user === currentUser.id) > -1;\n\n                                    const replyTranslation = teamStore.getCommentReplyTranslations({\n                                        object: workout,\n                                        commentid: comment.id,\n                                        replyid: reply.id,\n                                        targetLang: language,\n                                    }) || translatedText[`${comment.id}-${reply.id}`];\n                                    let replyBody = replyTranslation || reply.comment;\n                                    if (showOriginal[`${comment.id}-${reply.id}`]) {\n                                        replyBody = reply.comment;\n                                    }\n\n                                    return (\n                                        <div class='row'>\n                                            <div class='col-12 d-flex mb-2 position-relative'>\n                                                <div \n                                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                                    style={`${userImage ? `background-image: url(\"${userImage.s3SmallLink}\"); background-size: cover;` : ''} border-width: 3px !important;`}\n                                                >\n                                                    {!user.image && <span class='font-weight-lighter' style='font-size: 15px;'>{displayNameShort}</span>}\n                                                </div>\n                                                <div class='flex-grow-1 pl-3 pt-0' style='line-height: 1.2em;'>\n                                                    <div class='bg-light p-2 rounded-lg'>\n                                                        <span style='font-size: 0.95em;'>\n                                                            <h5 class='font-weight-bold mb-0' style='font-size: 1.0em;'>\n                                                                {displayName}\n                                                            </h5>\n\n                                                            {teams && teams.length > 0 && <div class='mb-2'>\n                                                                <small class='font-weight-lighter text-muted'>\n                                                                    {teams.filter(e => e.public === 1).slice(0, 2).map(t => <>\n                                                                        <a href={`/teams/public/${t.uuidv4}`} class='mr-2'>\n                                                                            <i class='fas fa-users text-muted' /> {t.name}\n                                                                        </a>\n                                                                    </>)}\n                                                                </small>\n                                                            </div>}\n\n                                                            <Markdown markdown={mu.replaceImages(replyBody, reply.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                        </span>\n                                                    </div>\n                                                    <small>\n                                                        <button class={`btn btn-sm btn-link py-0 ${hasLikedReply ? 'text-primary' : ''}`}\n                                                            onClick={this.likeReply}\n                                                            data-comment={comment.id}\n                                                            data-id={reply.id}\n                                                        >\n                                                            <Text id='comments.like'>Lik</Text>\n                                                        </button>\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0'\n                                                            onClick={this.replyComment}\n                                                            data-id={comment.id}\n                                                        >\n                                                            <Text id='comments.comment-add'>Kommentar</Text>\n                                                        </button>\n                                                        {reply.language !== language && <>\n                                                            -\n                                                            {!showOriginal[`${comment.id}-${reply.id}`] && replyTranslation ? <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                    onClick={this.showOriginal}\n                                                                >\n                                                                    <i class='fas fa-cog' />  <Text id='home.translate-show-original'>Show original</Text>\n                                                                </button>\n                                                            </> : <>\n                                                                <button\n                                                                    type='button'\n                                                                    class='btn btn-sm btn-link'\n                                                                    onClick={this.translate}\n                                                                    data-commentid={comment.id}\n                                                                    data-replyid={reply.id}\n                                                                >\n                                                                    <i class='fas fa-cog' /> <Text id='home.translate-to'>See translation</Text>\n                                                                </button>\n                                                            </>}\n                                                        </>}\n                                                        -\n                                                        <button class='btn btn-sm btn-link py-0 disabled'>\n                                                            {util.formatDistance(reply.createdDate, new Date(), { locale: 'no-NB' })}\n                                                        </button>\n                                                    </small>\n                                                </div>\n                                                {reply.likes && <small class='position-absolute bg-light shadow-sm rounded-lg py-0 px-1' style='bottom: 20px; right: 15px;'>\n                                                    <i class='fas fa-thumbs-up text-primary' /> {reply.likes.length}\n                                                </small>}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                {totalReplies - diplayedReplies > 0 && <div>\n                                    <button class='btn btn-sm btn-link py-0'\n                                        onClick={this.toggleReplies}\n                                        data-id={comment.id}\n                                    >\n                                        <Text id='comments.show-more' fields={{ more: totalReplies - diplayedReplies }}>\n                                            Vis {totalReplies - diplayedReplies} flere kommentarer...\n                                        </Text>\n                                    </button>\n                                </div>}\n\n                            </div>\n                            {showAddComment[comment.id] && <div class='col-11 offset-1 d-flex mb-2 position-relative'>\n                                <WorkoutReplyComment stores={this.props.stores} workout={workout}\n                                    callback={callback}\n                                    commentId={comment.id}\n                                    inputRef={c => this.inputRef[comment.id] = c}\n                                    inputRefObject={this.inputRef}\n                                />\n                            </div>}\n                        </div>\n                    );\n                })}\n                {totalComments - diplayedComments > 0 && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.show-more' fields={{ more: totalComments - diplayedComments }}>\n                            Vis {totalComments - diplayedComments} flere kommentarer...\n                        </Text>\n                    </button>\n                </div>}\n                {showAllComments && <div>\n                    <button class='btn btn-sm btn-link py-0'\n                        onClick={this.toggleComments}\n                    >\n                        <Text id='comments.hide-all-comments'>Skjul alle kommentarene.</Text>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default WorkoutComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport RaceComments from '../public/race/comments';\nimport RaceAddComment from '../public/race/commentAdd';\nimport RaceText from '../public/race/raceText';\nimport Images from '../../components/form/images';\nimport LikesAndComments from '../../components/feedback/likesAndComments';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\nimport RaceResults from './results';\nimport RaceNews from './news';\nimport RaceSignup from './signup';\nimport RaceClasses from './classes';\nimport RaceMushers from './mushers';\nimport RaceUserImages from './userImages';\nimport RaceTracking from './tracking';\nimport RaceNotifications from './notifications';\n\nimport Ad from '../../components/ad/';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n    showAdminSendMessage: {},\n\tnewRaceArticle: {},\n\tnewRaceUserImage: {},\n\tmessage: {\n\t\tsubject: '',\n\t\tbody: '',\n\t},\n};\n\n@observer\nclass AppRaceDetailSignup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            showAdminSendMessage: {},\n            newRaceArticle: {},\n            newRaceUserImage: {},\n            message: {\n                subject: '',\n                body: '',\n            },\n            submenu: props.submenu || 'about',\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n\tasync loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore, userStore } = props.stores;\n\t\tconst { user = {} } = userStore;\n\t\tconst { raceid } = props;\n\t\tawait raceStore.load(raceid);\n\t\tthis.setState({ isLoading: false });\n\n\t\tlet signup = {};\n\t\tconst { race } = raceStore;\n\t\tif (race.classes && user && user.email) {\n\t\t\tfor (let i = 0, l = race.classes.length; i < l; i += 1) {\n\t\t\t\tconst currentClass = race.classes[i];\n\t\t\t\tif (currentClass.contestants) {\n\t\t\t\t\tconst idx = currentClass.contestants.findIndex(e => e.email === user.email);\n\t\t\t\t\tif (idx > -1) {\n\t\t\t\t\t\tsignup = { ...currentClass.contestants[idx], class: currentClass.id };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\traceStore.updateKeyValue('signup', signup);\n        if (signup.user) {\n            await userStore.getDogs({ id: signup.user });\n        }\n\n\t\tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n            return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t\t}).flat();\n\t\tif (allTeamIds.length > 0 && raceid) {\n\t\t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t\t}\n\t\traceStore.getAllClassesSortedBy();\n\n\t\tawait raceStore.loadPublicInteractions(raceid);\n\t}\n\n    likeRace = async () => {\n\t\tconst { raceStore } = this.props.stores;\n\t\tconst { race } = raceStore;\n\t\tconst response = await raceStore.likeRace({ id: race.id });\n\n        if (response && response.status === 200) {\n\t\t\t// this.loadRaceDetail({ race });\n\t\t}\n\t}\n\n\ttoggleAddComment = (e) => {\n\t\tconst raceId = e.target.parentElement.dataset.id || e.target.dataset.id;\n\t\tconst { showAddComment } = this.state;\n\t\tthis.setState({\n\t\t\tshowAddComment: !showAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[raceId]) {\n\t\t\t\tthis.inputRef[raceId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n        const { raceid } = this.props;\n        route(`/app-races/${raceid}/${submenu}`);\n\t}\n\n    resizeTextarea = (el) => {\n\t\tlet element = el;\n\t\tif (element.target) {\n\t\t\telement = el.target;\n\t\t}\n\t\tconst { scrollHeight } = element;\n\t\telement.style.height = `${scrollHeight}px`;\n\t}\n\n\tresizeAllTextareas = () => {\n\t\tconst textareaList = document.getElementsByTagName('textarea');\n\t\tfor(let i = 0, l = textareaList.length; i < l; i += 1){\n\t\t\tconst textarea = textareaList[i];\n\t\t\tthis.resizeTextarea(textarea);\n\t\t}\n\t}\n\n    addNavigation = (props) => {\n        // console.log({ props });\n        this.setState({ submenu: props.submenu });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n        this.resizeAllTextareas();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.raceid !== this.props.raceid) {\n            this.loadRace(nextProps);\n        }\n        // console.log('componentWillReceiveProps', nextProps.submenu, this.props.submenu);\n        if (nextProps.submenu !== this.props.submenu) {\n            this.addNavigation(nextProps);\n        }\n\t}\n\n    back = () => {\n        route(`/`);\n    }\n\n\trender() {\n        const { submenu } = this.state;\n        const { showAdminSendMessage, message, emailResponse } = this.state;\n        const { showAddComment, newRaceArticle, newRaceUserImage } = this.state;\n\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, isVeterinary } = userStore;\n\n        const { language = 'en' } = user;\n\n\t\tconst { raceid, subsection } = this.props;\n\t\tconst { race, signup, zoomToMarkers } = raceStore;\n        const { darkmode, displayDetails, editUserDetails } = appState;\n\n\t\tconst { likes = [], comments = [] } = race;\n\t\tconst hasLikedRace = race.likes && race.likes.findIndex(e => e.user === user.id) > -1;\n\n        const today = new Date();\n        let status = '';\n        if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n            status = 'race';\n        } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n            status = 'signup';\n        }\n        const isLiveRace = race.liveRace === 1;\n        const showSignup = isLiveRace ? !!signup.email : true;\n\n        if (submenu === 'tracking') {\n            return (\n                <RaceTracking stores={this.props.stores} raceid={raceid} />\n            );\n        }\n        if (submenu === 'results') {\n            return (\n                <RaceResults stores={this.props.stores} raceid={raceid} />\n            );\n        }\n        \n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n                <div class='row m-0'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-1 mb-2 p-0'>\n                        <div class='row d-flex align-items-center position-relative'>\n                            <h3 class='position-absolute' style='top: 3px; right: 5px;'>\n                                {status === 'signup' && !isLiveRace && <>\n                                    <span\n                                        class='badge badge-primary badge-lg border border-white ml-2'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <Text id='races.signup-open'>Påmelding åpen</Text>\n                                    </span>\n                                </>}\n                                {status === 'race' && <>\n                                    <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                </>}\n                                {status === 'done' && <>\n                                    <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                </>}\n                            </h3>\n                            {(race.images && race.images[0]) ? <img src={race.images[0].s3LargeLink} class='img-fluid' /> : ''}\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        {isAdmin && <>\n                            <a class='btn btn-primary float-right' href={`https://homerunrace.no/index#/race/${race.id}/edit`}>Edit</a>\n                        </>}\n                        <h3>{race.title}</h3>\n                        <div>\n                            {race.startDate && <><Text id='races.periode'>Periode</Text>: {util.formatDate(race.startDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n                            {race.endDate && <> - {util.formatDate(race.endDate, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}</>}\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='row'>\n                            <div class='w-100 overflow-hidden'>\n                                <div\n                                    class='d-flex flex-row flex-nowrap pb-2 px-1'\n                                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                                >\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'about' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='about'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-info-circle' /> <Text id='race.about'>About</Text></button>\n                                        {submenu === 'about' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    {showSignup && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'signup' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='signup'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-user-edit' /> <Text id='race.signup'>Sign up</Text></button>\n                                        {submenu === 'signup' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {!race.resultsHide && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'results' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='results'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-ol' /> <Text id='race.results'>Results</Text></button>\n                                        {submenu === 'results' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {showTracking && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'tracking' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='tracking'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='race.tracking'>Tracking</Text></button>\n                                        {submenu === 'tracking' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {(isAdmin || isVeterinary) && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'mushers' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='mushers'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-users' /> <Text id='races.mushers'>Mushers</Text></button>\n                                        {submenu === 'mushers' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.rules && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'rules' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='rules'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-gavel' /> <Text id='race.rules'>Rules</Text></button>\n                                        {submenu === 'rules' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.veterinaryInfo && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'veterinary' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='veterinary'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-stethoscope' /> <Text id='race.veterinary'>Veterinary info</Text></button>\n                                        {submenu === 'veterinary' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.checkpoints && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'checkpoints' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='checkpoints'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-marker-alt' /> <Text id='race.checkpoints'>Checkpoints</Text></button>\n                                        {submenu === 'checkpoints' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.trailDescription && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'track' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='track'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-map-signs' /> <Text id='race.track-description'>Track description</Text></button>\n                                        {submenu === 'track' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.program && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'program' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='program'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-list-alt' /> <Text id='race.program'>Program</Text></button>\n                                        {submenu === 'program' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {race.prices && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'prices' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='prices'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-award' /> <Text id='race.prices'>Premier</Text></button>\n                                        {submenu === 'prices' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    {!isLiveRace && <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'classes' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='classes'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-folder-open' /> <Text id='race.classes'>Classes</Text></button>\n                                        {submenu === 'classes' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>}\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-none ${submenu === 'news' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='news'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-rss' /> <Text id='race.news'>News</Text></button>\n                                        {submenu === 'news' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'userImages' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            data-menu='userImages'\n                                            onClick={this.chooseSubmenu}\n                                        ><i class='fas fa-images' /> <Text id='race.user-images'>User images</Text></button>\n                                        {submenu === 'userImages' && <ScrollIntoView horizontal={'center'} vertical={'end'} />}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class='row'>\n                    <div class='col-12'>\n                        <Ad stores={this.props.stores} url={this.props.url} section={submenu} />\n                    </div>\n                </div>\n\n                {submenu === 'about' && <>\n                    <RaceNotifications stores={this.props.stores} race={race} />\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.about'>Om løpet</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <p class='clearfix'>\n                                <strong>\n                                    <Markdown markdown={mu.replaceImages(race.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </strong>\n                            </p>\n\n                            {status === 'signup' && <>\n                                {isLiveRace ? <>                                \n                                    <button\n                                        class='btn btn-block btn-success mb-3'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <i class='fas fa-user-edit' /> {race.declaration && <><Text id='race.declaration'>Declaration</Text> &</>} <Text id='race.chiplist'>Chiplist</Text>\n                                    </button>\n                                </> : <>                                \n                                    <button\n                                        class='btn btn-block btn-success mb-3'\n                                        data-menu='signup'\n                                        onClick={this.chooseSubmenu}\n                                    >\n                                        <i class='fas fa-user-edit' /> <Text id='race.signup'>Sign up</Text>\n                                    </button>\n                                </>}\n                            </>}\n\n                            <Markdown markdown={mu.replaceImages(race.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            {race.tag && race.tag.split(',').map(tag => <>\n                                <span class='badge badge-pill badge-primary py-1 ml-2'>\n                                    <a class='text-white' href={`https://www.facebook.com/hashtag/${tag}`} target='_blank' rel='noreferrer' native>\n                                        <i class='fab fa-facebook' /> #{tag}\n                                    </a>\n                                </span>\n                                <span class='badge badge-pill badge-primary py-1 ml-2'>\n                                    <a class='text-white' href={`https://www.instagram.com/explore/tags/${tag}`} target='_blank' rel='noreferrer' native>\n                                        <i class='fab fa-instagram' /> #{tag}\n                                    </a>\n                                </span>\n                            </>)}\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'results' && <>\n                    <RaceNotifications stores={this.props.stores} race={race} />\n                    <RaceResults stores={this.props.stores} raceid={raceid} />\n                </>}\n                {submenu === 'tracking' && <>\n                    <RaceTracking stores={this.props.stores} raceid={raceid} />\n                </>}\n                {submenu === 'news' && <>\n                    <RaceNews stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'userImages' && <>\n                    <RaceUserImages stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'rules' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.rules'>Regler</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.rules, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'veterinary' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.veterinary'>Veterinærinfo</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.veterinaryInfo, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'checkpoints' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.checkpoints'>Sjekkpunkter</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.checkpoints, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'track' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.track-description'>Løypebeskrivelse</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.trailDescription, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'program' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.program'>Program</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.program, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'prices' && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <h2 class='mb-0'><Text id='race.prices'>Premier</Text></h2>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                            <Markdown markdown={mu.replaceImages(race.prices, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </div>\n                </>}\n                {submenu === 'mushers' && <>\n                    <RaceMushers stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'classes' && <>\n                    <RaceClasses stores={this.props.stores} race={race} />\n                </>}\n                {submenu === 'signup' && <>\n                    <RaceSignup stores={this.props.stores} race={race} />\n                </>}\n\n                {['about'].indexOf(submenu) > -1 && <>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                            <div class=''>\n                                <LikesAndComments\n                                    stores={this.props.stores}\n                                    likes={likes}\n                                    comments={comments}\n                                    type='race'\n                                    // onTeamClick={onTeamClick}\n                                    // onUserClick={onUserClick}\n                                />\n                            </div>\n                        </div>\n\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            <div class='row'>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class={`btn btn-outline-${hasLikedRace ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedRace ? 'text-primary' : ''}`}\n                                        onClick={this.likeRace}\n                                        // disabled={hasLikedRace}\n                                    >\n                                        <i class={`${hasLikedRace ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> {hasLikedRace ? <Text id='comments.has-liked'>Liked</Text> : <Text id='comments.like'>Lik</Text>}\n                                    </button>\n                                </div>\n                                <div class='col-6 text-center'>\n                                    <button type='button' class='btn btn-outline-secondary btn-lg btn-block'\n                                        data-id={race.id}\n                                        onClick={this.toggleAddComment}\n                                    >\n                                        <i class='fas fa-comment' /> <Text id='comments.comment-add'>Comment</Text>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 mb-3'>\n                            {showAddComment && user.email && <RaceAddComment\n                                stores={this.props.stores}\n                                race={race}\n                                // callback={this.loadRaceDetail}\n                                inputRef={c => this.inputRef[race.id] = c}\n                                inputRefObject={this.inputRef}\n                            />}\n                        </div>\n                        <div class='col-12 mt-2'>\n                            <RaceComments\n                                stores={this.props.stores}\n                                race={race}\n                                cols='12'\n                                // callback={this.loadRaceDetail}\n                            />\n                        </div>\n                    </div>\n                </>}\n            </div>\n\t\t);\n\t}\n}\n\nexport default AppRaceDetailSignup;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass AppRaceDetailClasses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    render() {\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n\t\tconst { race = {} } = this.props;\n\n        return (<>\n            <div class='row'>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.classes'>Klasser</Text></h2>\n                </div>\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                    <div class='row'>\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                            <div class='col-12 col-sm-6 col-lg-4 mb-4'>\n                                <div class='border rounded rounded-lg p-3'>\n                                    <h5>{currentClass.title}</h5>\n\n                                    {isAdmin && <>\n                                        <a href={`/tv/top10/${race.id}/${currentClass.id}`}>TV Top 10</a><br />\n                                        <a href={`/tv/team/${race.id}/1`}>TV One team</a><br />\n                                    </>}\n\n                                    <small>\n                                        {currentClass.startDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.startdate'>Start</Text>:</span> {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                        {currentClass.endDate && <div>\n                                            <span class='font-weight-lighter'><Text id='race.enddate'>End</Text>:</span> {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </div>}\n                                    </small>\n\n                                    <div><span class='font-weight-lighter'><Text id='race.distance'>Distanse</Text>:</span> {currentClass.distance} km</div>\n                                    <div><span class='font-weight-lighter'><Text id='race.signup'>Påmelding</Text>:</span> {currentClass.signupfee || race.signupfee} NOK</div>\n                                    <p class='clearfix'>\n                                        <Markdown markdown={mu.replaceImages(currentClass.ingress, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </p>\n                                    <small>\n                                        <Markdown markdown={mu.replaceImages(currentClass.body, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </small>\n                                    {currentClass.rules && <>\n                                        <h5><Text id='race.rules'>Regler</Text></h5>\n                                        <Markdown markdown={mu.replaceImages(currentClass.rules, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                    </>}\n                                </div>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default AppRaceDetailClasses;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nfunction getStateColor(state) {\n\tswitch (state) {\n\t\tcase 'running':\n\t\t\treturn 'primary';\n\t\tcase 'rest':\n\t\t\treturn 'warning';\n\t\tcase 'restTrail':\n\t\t\treturn 'danger';\n\t}\n}\n\nfunction getStateIcon(state) {\n\tswitch (state) {\n\t\tcase 'running':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'rest':\n\t\t\treturn 'fas fa-male';\n\t\tcase 'restTrail':\n\t\t\treturn 'fas fa-bed';\n\t}\n}\n\n@observer\nclass States extends Component {\n    hideDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n\t\t\tstateDetail: {\n\t\t\t\tstate: '',\n                idx: 0,\n\t\t\t},\n\t\t});\n    }\n\n\tshowStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\t\tconst data = e.target.closest('div').dataset;\n\t\tthis.setState({\n\t\t\tstateDetail: {\n\t\t\t\t...data,\n\t\t\t},\n\t\t});\n\t}\n\n    nextStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { states, duration } = this.props;\n        const { stateDetail = {} } = this.state;\n        const currentIdx = parseInt(stateDetail.idx, 10);\n        const nextIdx = currentIdx + 1;\n        const nextState = states[nextIdx];\n        if (nextState) {\n            this.setState({\n                stateDetail: {\n                    idx: nextIdx,\n                    state: nextState.state,\n                    duration: nextState.duration,\n                    distance: nextState.distance,\n                    avgspeed: nextState.avgSpeed,\n                    statespeeds: nextState.stateSpeeds,\n                    point: nextState.point,\n                    start: nextState.start,\n                    end: nextState.end,\n                    percent: util.normalizeBetween(nextState.duration, 0, duration, 0, 100),\n                },\n            });\n        }\n    }\n\n   prevStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { states, duration } = this.props;\n        const { stateDetail = {} } = this.state;\n        const currentIdx = parseInt(stateDetail.idx, 10);\n        const prevIdx = currentIdx - 1;\n        const prevState = states[prevIdx];\n        if (prevState) {\n            this.setState({\n                stateDetail: {\n                    idx: prevIdx,\n                    state: prevState.state,\n                    duration: prevState.duration,\n                    distance: prevState.distance,\n                    avgspeed: prevState.avgSpeed,\n                    statespeeds: prevState.stateSpeeds,\n                    point: prevState.point,\n                    start: prevState.start,\n                    end: prevState.end,\n                    percent: util.normalizeBetween(prevState.duration, 0, duration, 0, 100),\n                },\n            });\n        }\n    }\n\n    render() {\n        const { states, duration, height = '20px', showText = true } = this.props;\n        const { stateDetail = {} } = this.state;\n        const locale = 'en-GB';\n\n        return (<>\n            <div class='row'>\n                {states && <div class='col-12 px-0'>\n                    <div class='progress' style={`height: ${(stateDetail && stateDetail.idx) ? '20px' : height};`}>\n                        {states.map((state, idx) => {\n                            const value = Math.ceil(util.normalizeBetween(state.duration, 0, duration, 0, 100));\n                            let currentWidth = value;\n                            if (stateDetail && stateDetail.idx == idx) {\n                                currentWidth = value < 10 ? 10 : value;\n                            }\n                            return (<>\n                                <div\n                                    class={`progress-bar bg-${getStateColor(state.state)}`}\n                                    role='progressbar'\n                                    style={`width: ${currentWidth}%`}\n                                    aria-valuenow={value}\n                                    aria-valuemin='0'\n                                    aria-valuemax='100'\n                                    data-idx={idx}\n                                    data-state={state.state}\n                                    data-duration={state.duration}\n                                    data-distance={state.distance}\n                                    data-avgspeed={state.avgSpeed}\n                                    data-statespeeds={state.stateSpeeds}\n                                    data-point={state.point}\n                                    data-start={state.start}\n                                    data-end={state.end}\n                                    data-percent={util.normalizeBetween(state.duration, 0, duration, 0, 100)}\n                                    onClick={this.showStateDetail}\n                                >\n                                    {showText ? <>\n                                        <nobr>\n                                            {value > 10 && <>\n                                                {state.state === 'rest' ? <>\n                                                    {util.secToHms(state.duration, true)}\n                                                </> : <>\n                                                    {util.format(state.distance / 1000, 0)}km\n                                                </>}\n                                            </>}\n                                            {(stateDetail && stateDetail.idx == idx) ? <i class={`fas fa-hand-point-down text-${state.state === 'rest' ? 'dark' : 'warning'} mx-2`} /> : ''}\n                                        </nobr>\n                                    </> : <>\n                                        {(stateDetail && stateDetail.idx == idx) ? <i class={`fas fa-hand-point-down text-${state.state === 'rest' ? 'dark' : 'warning'} mx-2`} /> : ''}\n                                    </>}\n                                </div>\n                            </>);\n                        })}\n                    </div>\n                    {stateDetail && stateDetail.state && <>\n                        <div class='card position-relative'>\n                            <span class='position-absolute' style='top: 0px; right: 5px;'>\n                                <small class='text-muted'>\n                                    <i class={getStateIcon(stateDetail.state)} /> {util.format(stateDetail.percent, 1)}%\n                                </small>\n                            </span>\n                            <div class='card-body'>\n                                {stateDetail.state === 'rest' ? <>\n                                    <div class='card-text row'>\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.duration'>Vargihet</Text>\n                                            </small>\n                                            <h6>\n                                                {util.secToHms(stateDetail.duration, true)}\n                                            </h6>\n                                        </div>\n                                        {stateDetail.point && <div class='col-8 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fa-map-marked ml-2' /> <Text id='workouts.position'>Position</Text>\n                                            </small>\n                                            <h6>\n                                                {stateDetail.point}\n                                            </h6>\n                                        </div>}\n                                    </div>\n                                    <div class='card-text row'>\n                                        {stateDetail.start && <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.starttime'>Start</Text>\n                                            </small>\n                                            <h6>\n                                                {mu.formatDate(util.parseInputDate(stateDetail.start), { locale, hour12: false, day: 'numeric', month: 'numeric', hour: '2-digit', minute: '2-digit' })}\n                                            </h6>\n                                        </div>}\n                                        {stateDetail.end && <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.endtime'>End</Text>\n                                            </small>\n                                            <h6>\n                                                {mu.formatDate(util.parseInputDate(stateDetail.end), { locale, hour12: false, day: 'numeric', month: 'numeric', hour: '2-digit', minute: '2-digit' })}\n                                            </h6>\n                                        </div>}\n                                    </div>\n                                </> : <>\n                                    <div class='card-text row'>\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-road ml-2' /> <Text id='workouts.distance'>Distanse</Text>\n                                            </small>\n                                            <h6>\n                                                <Distance stores={this.props.stores} value={stateDetail.distance / 1000} />\n                                            </h6>\n                                        </div>\n\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.duration'>Vargihet</Text>\n                                            </small>\n                                            <h6>\n                                                {util.secToHms(stateDetail.duration, true)}\n                                            </h6>\n                                        </div>\n\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-tachometer-alt ml-2' /> <Text id='workouts.avgspeed'>Gj.fart</Text>\n                                            </small>\n                                            <h6>\n                                                <Speed stores={this.props.stores} value={stateDetail.distance / stateDetail.duration * 3.6} />\n                                            </h6>\n                                        </div>\n                                    </div>\n                                    <div class='card-text row'>\n                                        {stateDetail.start && <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.starttime'>Start</Text>\n                                            </small>\n                                            <h6>\n                                                {mu.formatDate(util.parseInputDate(stateDetail.start), { locale, hour12: false, day: 'numeric', month: 'numeric', hour: '2-digit', minute: '2-digit' })}\n                                            </h6>\n                                        </div>}\n                                        {stateDetail.end && <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.endtime'>End</Text>\n                                            </small>\n                                            <h6>\n                                                {mu.formatDate(util.parseInputDate(stateDetail.end), { locale, hour12: false, day: 'numeric', month: 'numeric', hour: '2-digit', minute: '2-digit' })}\n                                            </h6>\n                                        </div>}\n                                    </div>\n                                </>}\n                            </div>\n                            <div class='float-right'>\n\n                            <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.hideDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-times' />\n                            </button>\n\n                            {stateDetail.idx < states.length - 1 && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.nextStateDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-angle-right' />\n                            </button>}\n                            {stateDetail.idx > 0 && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.prevStateDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-angle-left' />\n                            </button>}\n\n                            </div>\n                        </div>\n                    </>}\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default States;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {};\n\n@observer\nclass DisplayLikesAndComments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    toggleViews = () => {\n        const { showViewList } = this.state;\n        const { isTeamAdmin, isAdmin } = this.props;\n        if (isTeamAdmin || isAdmin) {\n            this.setState({\n                showViewList: !showViewList,\n            });\n        }\n    }\n\n    render() {\n        const { showViewList } = this.state;\n        const { storyStore, teamStore, workoutStore } = this.props.stores;\n        const { views, object, isTeamAdmin, isAdmin,\n            type = 'story', onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n\n        const viewUsersArrays = [];\n        Object.entries(object.statistics).forEach(([year, yearObject]) => {\n            // console.log({ year, yearObject });\n            Object.entries(yearObject).forEach(([week, weekObject]) => {\n                // console.log({ week, weekObject });\n                if (weekObject.viewUsers) {\n                    viewUsersArrays.push(weekObject.viewUsers);\n                }\n            });\n        });\n        const viewUsers = viewUsersArrays.flat().slice(0, 50);\n\n\t\treturn (<>\n            <div class='d-flex justify-content-end mb-2'>\n                <span class='ml-2 text-muted font-weight-lighter'\n                    onClick={this.toggleViews}\n                >\n                    {views} <Text id='story.views'>views</Text>\n                </span>\n            </div>\n            {showViewList && <div class='mt-3 mb-3'>\n                {viewUsers && viewUsers.map((userId) => {\n                    let user;\n                    let teams;\n                    if (type === 'story') {\n                        user = storyStore.findPublicUser(userId);\n                        teams = storyStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'team') {\n                        user = teamStore.findPublicUser(userId);\n                        teams = teamStore.findPublicTeamByMembers(userId);\n                    } else if (type === 'workout') {\n                        user = workoutStore.findPublicUser(userId);\n                        teams = workoutStore.findPublicTeamByMembers(userId);\n                    }\n                    if (!user) {\n                        return '';\n                    }\n                    let publicTeam;\n                    if (util.isArray(teams)) {\n                        publicTeam = teams.find(e => e.public === 1);\n                    }\n                    const image = mu.getImage({ user, team: publicTeam, priority: 'user' });\n                    const shortname = mu.displayNameShort(user);\n                    const name = mu.displayName(user, true);\n                    return (<div class='d-flex flex-row position-relative font-weight-light mb-1'>\n                        {publicTeam ? <>\n                            <a href={`/teams/public/${publicTeam.uuidv4}`} title={publicTeam.name} onClick={(e) => onTeamClick(e, publicTeam.uuidv4)} class='stretched-link'>\n                                <div\n                                    class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                    style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}`}\n                                >\n                                    {!image && <div class='' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                                </div>\n                            </a>\n                            <div class='ml-2 '>\n                                {name} <span class='font-weight-lighter'>- {publicTeam.name}</span>\n                            </div>\n                        </> : <>\n                            <div\n                                class={`text-center border rounded-circle imageRounded imageRoundedThumb`}\n                                style={`${image ? `background-image: url(\"${image}\"); background-size: cover;` : ''} opacity: 0.5;`}\n                            >\n                                {!image && <div class='text-muted' style='font-size: 12px; padding-top: 3px;'>{shortname}</div>}\n                            </div>\n                            <div class='ml-2'>\n                                {name}\n                            </div>\n                        </>}\n                    </div>);\n                })}\n                {views > viewUsers.length && <>\n                    <small class='text-muted'>\n                        <Text id='story.limited-to'>Limited to max 50 users.</Text>\n                    </small>\n                </>}\n            </div>}\n\t\t</>);\n\t}\n}\n\nexport default DisplayLikesAndComments;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\nimport Drawer from '../../components/drawer/';\nimport Gauge from '../../components/gauge';\nimport DogScroller from '../../components/dog/scroller';\nimport HeaderCustom from '../../components/header/custom';\n\nimport RaceLiveResults from '../../components/races/liveResults';\nimport MusherInfoHeader from '../../components/races/musherInfoHeader';\nimport RaceLiveAddResult from '../../components/races/liveAddResult';\nimport RaceLiveMusherResult from '../../components/races/liveMusherResult';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n        const { reloadLastEpoch } = this.props;\n\t\tconst { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass AppRaceDetailResults extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDrawer: false,\n            timerRunning: true,\n        };\n\t\tthis.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs, true);\n\n        // Set reload timer\n        // if (timerRunning) {\n        //     clearTimeout(this.updateTimer.reload);\n        //     this.updateTimer.reload = setTimeout(() => {\n        //         console.log('loadLiveRaceResults.reloading...');\n        //         const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n        //         this.setState({ reloadLastEpoch });\n        //         // this.loadRace(props);\n        //         this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n        //     }, RELOAD_INTERVAL_IN_SEC * 1000);\n        // }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n\tasync loadRace(props = this.props) {\n        const { loadTimes = 0 } = this.state;\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore, appState } = props.stores;\n\t\tconst { raceid, classid, filterByBibs, historySteps } = props;\n        await raceStore.load(raceid);\n        raceStore.getAllClassesSortedBy();\n        \n        const { race } = raceStore;\n        const { focusOnMushers } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const allClassIds = race?.classes.map(e => e.id);\n        let selectedClassId = selectedClassIds[0];\n        if (allClassIds.indexOf(selectedClassId) === -1) {\n            selectedClassId = allClassIds[0];\n            appState.setSelectedClassId(selectedClassId);\n        }\n        if (classid) {\n            appState.toggleSelectedClassId(classid, true);\n        }\n\t\tconst allTeamIds = race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n            })\n            .flat();\n\n        const bibs = filterByBibs ? filterByBibs : race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n            })\n            .flat();\n\n        if (allTeamIds.length > 0) {\n            await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n        }\n\n        if (race.liveRace > 0) {\n            await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(async () => {\n            \tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n            \tthis.setState({ reloadLastEpoch });\n            \tthis.loadRace();\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        } else {\n            await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n        }\n\n        // if (allTeamIds.length > 0 && raceid) {\n        //     if (!race.liveRace) {\n        //         await raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n        //         raceStore.getWorkoutSummaryActiveTeams();\n        //     }\n        //     if (loadTimes === 0) {\n        //         await raceStore.loadTeams(allTeamIds.join(','));\n        //     }\n\t\t// }\n\n\t\t// // Set reload timer\n\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\tcontentIsNotLoaded: false,\n            loadTimes: loadTimes + 1,\n\t\t});\n\t}\n\n\ttoggleDisplayDetails = (e) => {\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleDisplayDetails(email)\n\t}\n\n\tadminToggleEditUser = (e) => {\n\t\te.stopPropagation();\n\t\tconst email = e.target.closest('tr').dataset.email;\n\t\tconst { appState } = this.props.stores;\n\t\tappState.toggleEditUserDetails(email)\n\t}\n\n\tadminSignupEdit = (e) => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n        const field = e.target.id;\n        const value = e.target.value;\n        const { classid, contestantid } = e.target.dataset;\n\n        // console.log({ raceid, field, value, classid });\n        // const { raceStore } = this.props.stores;\n        // raceStore.updateObjectKeyValue('signup', key, value);\n\n        const data = {\n\t\t\traceClassId: classid,\n            contestantId: contestantid,\n\t\t\t[`raceClassContestant${util.ucfirst(field)}`]: value,\n\t\t};\n\t\tclearTimeout(this.updateTimer[field]);\n\t\tthis.updateTimer[field] = setTimeout(async () => {\n\t\t\traceStore.editClass({\n\t\t\t\tid: raceid,\n\t\t\t\tdata,\n\t\t\t});\n\t\t}, 500);\n\t}\n\n\tlockAllWorkoutsInRace = async () => {\n\t\tconst { raceid } = this.props;\n        const { raceStore } = this.props.stores;\n\t\tconst lockMessage = await raceStore.lockAllWorkoutsInRace({ id: raceid });\n\t\tthis.setState({ lockMessage });\n\t}\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const {\n                showDrawerReplay,\n                historySteps,\n                filterByBibs,\n            } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n                selectedMusherBib: '',\n                showDrawerCheckpoint: false,\n                showDrawerMusher: false,\n                showDrawer: false,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\t// filterByClass = (e) => {\n\t// \tconst selectedClassId = e.target.closest('button').dataset.id;\n\t// \tconst { appState } = this.props.stores;\n\t// \tappState.toggleSelectedClassId(selectedClassId, true);\n    //     this.closeDrawerMusher();\n    //     this.closeDrawerCheckpoint();\n\t// }\n\n    toggleDrawer = () => {\n        const { showDrawer } = this.state;\n        // if (!showDrawer) {\n        //     // Stop reload when we are updating results.\n        //     clearTimeout(this.updateTimer.reload);\n        // } else {\n        //     this.loadRace();\n        // }\n        this.setState({\n            showDrawer: !showDrawer,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerMusher = (e) => {\n\t\tconst selectedMusherBib = e.target.closest('.musher').dataset.bib;\n        const { showDrawerMusher } = this.state;\n        this.selectMusher(selectedMusherBib);\n    }\n\n    selectMusher = (selectedMusherBib) => {\n        this.setState({\n            selectedMusherBib,\n            showDrawerMusher: true,\n            showDrawerCheckpoint: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerMusher = () => {\n        this.setState({\n            selectedMusherBib: '',\n            showDrawerMusher: false,\n        });\n    }\n\n    toggleDrawerCheckpoint = (e) => {\n\t\tconst selectedCheckpointId = e.target.closest('.checkpoint').dataset.id;\n        const { showDrawerCheckpoint } = this.state;\n        this.selectCheckpoint(selectedCheckpointId)\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    closeDrawerCheckpoint = () => {\n        this.setState({\n            selectedCheckpointId: '',\n            showDrawerCheckpoint: false,\n        });\n    }\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage, showDrawer, reloadLastEpoch, selectedMusherBib, selectedCheckpointId, showDrawerCheckpoint, showDrawerMusher, loadTimes } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n\t\tconst { user = {}, teams = [], isAdmin, currentEmail } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], checkpointId } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n\t\tconst filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const isLiveRace = race.liveRace === 1;\n        const raceAdmins = race && race.raceAdmins ? race.raceAdmins.split(',') : [];\n        const isRaceAdmin = isAdmin || raceAdmins.indexOf(currentEmail) > -1;\n        // const isRaceAdmin = raceAdmins.indexOf(currentEmail);\n\n        return (<>\n            <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`/app-races/${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        {/* <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span> */}\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            <a href={`/app-races/${race.id}/tracking`}>\n                                <i class='fas fa-map-marked' />\n                            </a>\n                        </span>\n                    </div>\n                    <div>\n                        <a href={`/app-races/${race.id}`}>\n                            <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                        </a>\n                    </div>\n                    {/* {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <> */}\n                        <div class='d-flex align-items-center'>\n                            {isRaceAdmin && <>\n                                <button class='btn btn-lg btn-block btn-success my-3' onClick={this.toggleDrawer}>\n                                    <i class='fas fa-clock' />\n                                </button>\n                            </>}\n                        </div>\n                    {/* </>} */}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>\n\n            {/* <div\n                class='container-fluid position-relative p-0 w-100 h-100'\n                style={`margin-top: ${MARGIN_TOP};`}\n            > */}\n            <div class='container-fluid position-relative p-0 overflow-auto bg-light' style={`margin-top: ${MARGIN_TOP}; height: calc(100vh - ${MARGIN_TOP}); z-index: 9999;`}>\n                {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n                    <h2 class='mb-0'><Text id='race.results'>Results</Text></h2>\n                </div> */}\n                <div class='col-12'>\n                    <ReloadTimer stores={this.props.stores} reloadLastEpoch={reloadLastEpoch} />\n\n                    {isLiveRace ? <>\n\n                    </> : <>\n                        {user.email && <div class='alert alert-primary' role='alert'>\n                            {language === 'no' && <>\n                                Resultatene hentes direkte fra treningsøktene i QPaws appen.<br />\n                                <strong>For at treningsøktene skal bli registrert må øktene:</strong>\n                                <ul>\n                                    <li>Ha riktig dato som er innenfor løpsperioden.</li>\n                                    <li>Være markert som 'Konkurranse'.</li>\n                                    <li>Være registrert på teamet som er påmeldt.</li>\n                                </ul>\n                            </>}\n                            {language === 'en' && <>\n                                The results are imported directly from the workouts inside QPaws app.<br />\n                                <strong>To make sure your workouts are registered check the following:</strong>\n                                <ul>\n                                    <li>Use the correct date on your workout. Has to be inside the race period.</li>\n                                    <li>Mark the workout as 'Race'.</li>\n                                    <li>Workout has to be on the same team as you signed up with.</li>\n                                </ul>\n                            </>}\n                        </div>}\n                    </>}\n\n                    {race.resultsUrl && <div class='p-3 my-2 bg-light'>\n                        <a href={race.resultsUrl} target='_blank' rel='noreferrer' native>\n                            {race.resultsText ? race.resultsText : <><Text id='races.results-here'>Se resultater her</Text> </>} <i class='fas fa-chevron-circle-right' />\n                        </a>\n                    </div>}\n\n                    {(contentIsNotLoaded || !classes || classes.length === 0) && <div class='d-flex justify-content-center my-5 py-5'>\n                        <div class='spinner-border text-primary' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>}\n                </div>\n\n                <div class='col-12'>\n                    {race.classes && race.classes.filter(filterByClassId).map(currentClass => {\n                        return (<>\n                            <div class='mt-2 mb-5'>\n                                {race.resultDanger && <div class='alert alert-danger' role='alert'>\n                                    <div class='spinner-grow text-danger float-left' role='status'>\n                                        <span class='sr-only'>Loading...</span>\n                                    </div>\n                                    <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultDanger, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultWarning && <div class='alert alert-warning' role='alert'>\n                                    <i class='fas fa-exclamation float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultWarning, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n                                {race.resultSuccess && <div class='alert alert-success' role='alert'>\n                                    <i class='fas fa-check float-left mr-4' style='font-size: 2.0em;' />\n                                    <Markdown markdown={mu.replaceImages(race.resultSuccess, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                </div>}\n\n                                {/* <h5>\n                                    {currentClass.title} {currentClass.startDate && <>\n                                        : <span class='font-weight-lighter'>\n                                            {util.formatDate(currentClass.startDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })} - {util.formatDate(currentClass.endDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </span>\n                                    </>}\n                                </h5> */}\n\n\n                                {race.liveRace ? <>\n                                    {!showDrawer && <>\n                                        <RaceLiveResults\n                                            stores={this.props.stores}\n                                            race={race}\n                                            currentClass={currentClass}\n                                            reloadLastEpoch={reloadLastEpoch}\n                                            key={`raceclass-${currentClass.id}`}\n                                            onClickMusher={this.toggleDrawerMusher}\n                                            onClickCheckpoint={this.toggleDrawerCheckpoint}\n                                            selectedCheckpointId={selectedCheckpointId}\n                                        />\n                                    </>}\n                                </> : <>\n\n                                    <span class='float-right'>\n                                        <span class='text-muted'><Text id='races.mushers'>Mushers</Text>: {currentClass.totalMushers || 0}</span>\n                                        <span class='text-muted ml-4'><Text id='races.finished-mushers'>Finished mushers</Text>: {currentClass.totalFinished || 0} </span>\n                                    </span>\n\n                                    <div class='table-responsive-md'>\n                                        <table class='table table-sm table-striped'>\n                                            <thead>\n                                                <tr>\n                                                    <th scope='col'>#</th>\n                                                    <th scope='col' style='min-width: 200px;'><Text id='races.name'>Navn</Text></th>\n                                                    {isAdmin && <>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Cellphone</th>\n                                                        <th class='d-none d-lg-table-cell' scope='col'><i class='fas fa-user-shield' /> Email</th>\n                                                    </>}\n                                                    {isAdmin && <th scope='col' class='d-none d-lg-table-cell' style='min-width: 400px;'><Text id='races.stages'>Etapper</Text></th>}\n                                                    <th scope='col'><Text id='races.result'>Resultat</Text></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.map((contestant, idx) => {\n                                                    const { musher, currentTeam, currentStages, currentResults, completed, duration,\n                                                        normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                                        flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                                        finishedDate, totalWorkoutTimeUsedSec,\n                                                    } = contestant;\n\n                                                    const totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n                                                    return (<>\n                                                        <tr onClick={this.toggleDisplayDetails} data-email={musher.email}>\n                                                            <th scope='row'>\n                                                                {idx + 1}\n                                                                {isAdmin && currentResults && <>\n                                                                    <br />{currentResults.isLocked ? <i class='fas fa-lock text-danger mr-2' /> : <i class='fas fa-lock-open text-success mr-2' />}\n                                                                </>}\n                                                            </th>\n                                                            <td\n                                                                class={`${displayDetails[musher.email] ? 'font-weight-bold' : ''}`}\n                                                                style={`${displayDetails[musher.email] ? '' : 'line-height: 0.8em;'}`}\n                                                            >\n                                                                {displayDetails[musher.email] ? <>\n                                                                    {musher.firstname} {musher.lastname}<br />\n                                                                    <span class='text-muted'>{currentTeam.name}</span><br />\n                                                                    <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    {musher.facebook && <a class='mr-2' href={mu.asFacebookLink(musher.facebook)} native target='_blank' rel='noreferrer'><i class='fab fa-facebook' /></a>}\n                                                                    {musher.instagram && <a class='mr-2' href={mu.asInstagramLink(musher.instagram)} native target='_blank' rel='noreferrer'><i class='fab fa-instagram' /></a>}\n                                                                    {musher.price1 && <div class='font-weight-lighter'>\n                                                                        <i class='fas fa-trophy text-warning' /> {musher.price1}\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </div>}\n                                                                    {musher.price2 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price2}</div>}\n                                                                    {musher.price3 && <div class='font-weight-lighter'><i class='fas fa-trophy text-warning' /> {musher.price3}</div>}\n\n                                                                </> : <>\n                                                                    {musher.price1 && <span class='float-right text-warning' style='font-size: 1.2em;'>\n                                                                        <i class='fas fa-trophy' />\n                                                                        {musher.priceSent && <>\n                                                                            <i class='fas fa-check text-success' />\n                                                                        </>}\n                                                                    </span>}\n                                                                    <nobr>\n                                                                        {musher.firstname} {musher.lastname}<br />\n                                                                        <small class='text-muted'>{musher.sportsClub}</small><br />\n                                                                    </nobr>\n                                                                </>}\n\n                                                            </td>\n\n                                                            {isAdmin && <>\n                                                                <td class='d-none d-lg-table-cell'>{musher.cellphone}</td>\n                                                                <td class='d-none d-lg-table-cell'>{musher.email}</td>\n                                                            </>}\n\n                                                            {isAdmin && <td class='d-none d-lg-table-cell'>\n                                                                {isAdmin && <>\n                                                                    <button class='btn btn-primary btn-sm float-right' onClick={this.adminToggleEditUser}><i class='fas fa-user-edit' /></button>\n                                                                </>}\n\n                                                                {(isAdmin && editUserDetails[musher.email]) && <>\n                                                                    <h5>Admin edit:</h5>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Email</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label class='col-sm-2 col-form-label text-right'>Cellphone</label>\n                                                                        <div class='col-sm-10'>\n                                                                            {musher.cellphone}\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='team' class='col-sm-2 col-form-label text-right'>Race status</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <select class='form-control-plaintext' id='raceStatus'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceStatus}\n                                                                            >\n                                                                                <option value=''>-- Choose race status --</option>\n                                                                                <option value='OK'>OK - Everything ok</option>\n                                                                                <option value='DNS'>DNS - Did Not Start</option>\n                                                                                <option value='DNF'>DNF - Did Not Finish</option>\n                                                                                <option value='DNQ'>DNQ - Did not qualify</option>\n                                                                                <option value='DQ'>DQ - Disqualified</option>\n                                                                                <option value='DC'>DC - Data changed by user</option>\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='raceComment' class='col-sm-2 col-form-label text-right'>Race comment</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='raceComment'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.raceComment}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='gpxResultsApproved' class='col-sm-2 col-form-label text-right'>GPX Results approved (date)</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='gpxResultsApproved'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.gpxResultsApproved ? util.isoDate(musher.gpxResultsApproved, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price1' class='col-sm-2 col-form-label text-right'>Price 1</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price1'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price1}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price2' class='col-sm-2 col-form-label text-right'>Price 2</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price2'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price2}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='price3' class='col-sm-2 col-form-label text-right'>Price 3</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='text' class='form-control-plaintext' id='price3'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.price3}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div class='form-group row my-0'>\n                                                                        <label for='priceSent' class='col-sm-2 col-form-label text-right'>Price sent</label>\n                                                                        <div class='col-sm-10'>\n                                                                            <input type='date' class='form-control-plaintext' id='priceSent'\n                                                                                data-classid={musher.class}\n                                                                                data-contestantid={musher.id}\n                                                                                onInput={this.adminSignupEdit}\n                                                                                value={musher.priceSent ? util.isoDate(musher.priceSent, false, false, true) : null}\n                                                                            />\n                                                                        </div>\n                                                                    </div>\n\n                                                                </>}\n\n                                                                {isAdmin && <div class='d-flex flex-wrap'>\n                                                                    {currentStages && currentStages.map((stage, idx) => {\n                                                                        const percent = stage.distanceKm / currentClass.distance * 100;\n                                                                        const width = percent > 100 ? 100 : parseInt(percent, 10);\n                                                                        const currentEpoch = Math.floor(new Date(stage.date).getTime() / 1000);\n                                                                        const inDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\n                                                                        inDate.setUTCSeconds(currentEpoch + parseInt(stage.duration, 10));\n                                                                        const images = stage.images.flat();\n                                                                        if (displayDetails[musher.email]) {\n                                                                            return (<>\n                                                                                <div class='bg-light border rounded-lg  text-right position-relative mr-1 mb-1' style={`width: 350px; min-width: 320px;`}>\n                                                                                    <svg viewBox='0 0 300 100' class='position-absolute' style='width: 100%; height: 95%; bottom: 0px; left: 0px; z-index: 0;'>\n                                                                                        <path d={`${stage.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n                                                                                    </svg>\n                                                                                    <div class='position-relative px-3'>\n                                                                                        <span class='position-absolute' style='top: 3px; left: 3px; font-size: 1.3em;'>\n                                                                                            {idx + 1}\n                                                                                        </span>\n                                                                                        <small>\n                                                                                            {isAdmin && <span class='position-absolute' style='top: 0px; right: -5px;'>\n                                                                                                {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-success' />}\n                                                                                            </span>}\n                                                                                            <span class='float-left'>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-out-alt text-muted' /> {util.formatDate(stage.date, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-sign-in-alt text-muted' /> {util.formatDate(inDate, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}</nobr>\n                                                                                            </span>\n                                                                                            <span class='float-right'>\n                                                                                                {/* {restTimeText}\n                                                                                                {restTimeTrackText} */}\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(stage.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(stage.rest) || 'n/a'}</nobr>\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(stage.duration - stage.rest) || 'n/a'}</nobr><br />\n\n                                                                                                <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(stage.avgDogs, 0) || 'n/a'}</nobr>\n                                                                                            </span>\n                                                                                        </small>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </>);\n                                                                        }\n                                                                        return (<>\n                                                                            <div class='bg-light border rounded-lg text-right position-relative px-3 mr-1 mb-1' style={`width: 300px; min-width: 300px;`}>\n                                                                                <small>\n                                                                                    {isAdmin && <span class='position-absolute' style='top: 2px; right: -5px;'>\n                                                                                        {stage.isLocked ? <i class='fas fa-lock text-danger' /> : <i class='fas fa-lock-open text-sucess' />}\n                                                                                    </span>}\n\n                                                                                    <span class='float-left'>{idx + 1}</span>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(stage.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(stage.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr>\n                                                                                    <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(stage.duration) || 'n/a'}</nobr>\n                                                                                </small>\n                                                                            </div>\n                                                                        </>);\n                                                                    })}\n                                                                </div>}\n\n                                                            </td>}\n                                                            <td class='text-right position-relative pl-4'>\n                                                                {raceStatus(musher)}\n                                                                {musher.raceComment && <>\n                                                                    <div class='alert alert-warning text-left' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <Markdown markdown={mu.replaceImages(musher.raceComment, race.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                                                                    </div>\n                                                                </>}\n                                                                {(isAdmin && currentResults.lastUpdated > lastAllowedChangeDate) && <>\n                                                                    <div class='alert alert-danger text-left d-none d-md-block' role='alert'>\n                                                                        <i class='fas fa-exclamation-triangle float-left mr-4' style='font-size: 2.0em;' />\n                                                                        <i class='fas fa-user-shield' /> Last changed: {util.formatDate(currentResults.lastUpdated, { locale: language, hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                                    </div>\n                                                                </>}\n                                                                {completed >= 99 ? <span class='position-absolute' style='top: 10px; left: 0px;'><i class='fas fa-flag-checkered text-success' /></span> : ''}\n                                                                <small>\n                                                                    {displayDetails[musher.email] ? <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n\n                                                                            <br /><nobr><i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(totals.firstEpoch)} - <i style='width: 20px;' class='fas fa-calendar text-muted' /> {util.isoDate(finishedDate)}</nobr>\n                                                                            {isAdmin && <>\n                                                                                <br />\n                                                                                <div class='text-danger'>\n                                                                                    {totals.firstGpxStartEpoch && <>\n                                                                                        <nobr>firstGpxStartEpoch: {util.isoDate(totals.firstGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                    {totals.lastGpxStartEpoch && <>\n                                                                                        <nobr>lastGpxStartEpoch: {util.isoDate(totals.lastGpxStartEpoch)}</nobr><br />\n                                                                                    </>}\n                                                                                </div>\n                                                                            </>}\n                                                                        </> : <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br />\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                            {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>}\n                                                                        </>}\n\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-dog text-muted' /> {util.format(currentResults.avgDogs, 0) || 'n/a'}</nobr> */}\n                                                                    </> : <>\n                                                                        <nobr><i style='width: 20px;' class='fas fa-road text-muted' /> {util.format(currentResults.distanceKm, 1) || 'n/a'} <span class='font-weight-lighter'>km</span></nobr>\n                                                                        {/* <nobr><i style='width: 20px;' class='fas fa-tachometer-alt text-muted' /> {util.format(currentResults.speedAvg, 1) || 'n/a'} <span class='font-weight-lighter'>km/t</span></nobr> */}\n                                                                        <nobr><i style='width: 20px;' class='fas fa-mountain text-muted' /> {util.format(currentResults.elevation, 0) || 'n/a'} <span class='font-weight-lighter'>m</span></nobr>\n\n                                                                        <div class='progress mb-1' style='height: 3px;'>\n                                                                            <div class={`progress-bar ${completed >= 99 ? 'bg-success' : ''}`}\n                                                                                role='progressbar'\n                                                                                style={`width: ${completed}%`}\n                                                                                aria-valuenow={`${completed}`}\n                                                                                aria-valuemin='0'\n                                                                                aria-valuemax='100'\n                                                                            />\n                                                                        </div>\n\n                                                                        {race.nonstop ? <>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                                            <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr>\n                                                                        </> : <>\n                                                                            {isDone === 1 ? <>\n                                                                                <nobr class='font-weight-bold'><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br />\n                                                                            </> : <>\n                                                                                <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr><br />\n                                                                            </>}\n                                                                        </>}\n                                                                    </>}\n\n                                                                    {/* raceDistance: {raceDistance}<br /> */}\n\n                                                                    {/* duration: {util.secToHms(duration)}<br />\n                                                                    normalizedDuration: {util.secToHms(normalizedDuration)}<br />\n                                                                    weightedNormalizedDuration: {util.secToHms(weightedNormalizedDuration)}<br /> */}\n\n                                                                    {/* totalKcalRelated: {totalKcalRelated}<br />\n                                                                    weightedTotalKcal: {weightedTotalKcal}<br />\n                                                                    flatTotalKcal: {flatTotalKcal}<br />\n                                                                    percentHarder: {percentHarder}<br /> */}\n\n                                                                    {/* loadIndex: {loadIndex}<br /> */}\n                                                                </small>\n                                                            </td>\n                                                        </tr>\n                                                    </>);\n                                                })}\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                    <div class='text-center text-muted'>\n                                        <small>\n                                            {language === 'no' && <>\n                                                OBS! Ref reglene så er det ikke lov til å endre treningsøktene som er med i konkurransen etter at løpet er ferdig.<br />\n                                                Forsøk på dette vil resultere i automatisk deplassering på listene.\n                                            </>}\n                                            {language === 'en' && <>\n                                                IMPORTANT! According to the rules: It is NOT allowed to try alter the workouts related to the competition after the race has ended.<br />\n                                                Attempts will result in automatic deplacement on the resultlists.\n                                            </>}\n                                        </small>\n                                    </div>\n\n                                    {isAdmin && <>\n                                        <button\n                                            class='btn btn-danger btn-lg float-right m-4'\n                                            onClick={this.lockAllWorkoutsInRace}\n                                        >\n                                            Lock all workouts in this race\n                                        </button>\n                                        <xmp class='m-5'>{JSON.stringify(lockMessage, null, 4)}</xmp>\n                                    </>}\n\n                                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n                                        <a class='btn btn-lg btn-block btn-primary' href={`https://homerunrace.no/index#/race/${race.id}/results`}>All results</a>\n                                    </div>\n                                </>}\n                            </div>\n                        </>);\n                    })}\n                </div>\n\n            </div>\n            {showDrawer && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawer}>\n                    <RaceLiveAddResult stores={this.props.stores} />\n                </Drawer>\n            </>}\n            {showDrawerCheckpoint && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerCheckpoint}>\n                    <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                </Drawer>\n            </>}\n            {showDrawerMusher && <>\n                <Drawer stores={this.props.stores} onCloseClick={this.closeDrawerMusher}>\n                    <RaceLiveMusherResult stores={this.props.stores} bib={selectedMusherBib} onClickNav={this.selectMusher}  />\n                </Drawer>\n            </>}\n        </>);\n    }\n}\n\nexport default AppRaceDetailResults;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const {\n            radius = 50,\n            heightAdd = 0,\n            color = 'success',\n\n            showPercentText = true,\n            percent = 0,\n            prefix = '',\n\n            showCenterText= false,\n            centerText,\n            centerTextSize,\n            centerTextX,\n            centerTextY,\n\n            total = '',\n            totalY = '90%',\n            totalX = '50%',\n            totalTextAnchor = 'middle',\n                        \n            completed = '',\n            completedY = '65%',\n            completedX = '50%',\n            completedTextAnchor = 'middle',\n        } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = centerTextSize || radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2 + heightAdd}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    {showPercentText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>}\n\n                    {showCenterText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{centerText}</text>}\n\n                    {completed && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={completedX}\n                        y={completedY}\n                        dominant-baseline='middle'\n                        text-anchor={completedTextAnchor}\n                        font-size={textSizeSmall}\n                    >{completed}</text>}\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x={totalX}\n                        y={totalY}\n                        dominant-baseline='middle'\n                        text-anchor={totalTextAnchor}\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\n\n// TODO: Do we need mobx? What is mobx doing here?  \n\n@observer\nclass FastListLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.containerRef = null;\n    }\n\n    componentWillUnmount() {\n        const { removeIntersectionObserver } = this.props;\n        if (removeIntersectionObserver) {\n            removeIntersectionObserver(this.containerRef);\n        }\n    }\n\n    componentDidMount() {\n        const { addIntersectionObserver } = this.props;\n        if (addIntersectionObserver) {\n            addIntersectionObserver(this.containerRef);\n        }\n    }\n\n    render() {\n        const {\n            wrapperClassNames = '',\n            contentClassNames = '',\n            renderContent,\n            obj = {},\n            idx,\n            dataFields,\n            dataValues,\n            sessionid,\n        } = this.props;\n\n        const dataProperties = {};\n        if (sessionid) {\n            dataProperties.sessionid = sessionid;\n        }\n        dataFields.forEach(e => dataProperties[`data-${e}`] = encodeURI(dataValues[e] || obj[e]));\n\n        return (\n            <div\n                class={`${wrapperClassNames}`}\n                ref={c => this.containerRef = c}\n                data-idx={idx}\n                {...dataProperties}\n            >\n                <div\n                    class={`${contentClassNames}`}\n                    style={`display: block;`}\n                >\n                    {renderContent({\n                        obj,\n                        idx,\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n@observer\nclass FastList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // IntersectionObserver\n    deleteIntersectionObserver = () => {\n        this.intersectionObserver = null;\n    }\n\n    handleIntersection = (entries) => {\n        const { handleIntersection } = this.props;\n        if (typeof(handleIntersection) === 'function') {\n            // console.log('handleIntersection');\n            handleIntersection(entries);\n        }\n        // console.log({ entries });\n        // TODO: Make it possible to run defined functions for entries.\n        // mu.intersectionObserverCallback(entries);\n        entries.forEach((e) => {\n            const { isIntersecting } = e;\n            const { height = 0 } = e.target.dataset;\n            // const childHeight = e.target.childNodes[0].getBoundingClientRect().height;\n            // const targetHeight = e.target.getBoundingClientRect().height;\n            const childHeight = e.target.childNodes[0].offsetHeight;\n            const targetHeight = e.target.offsetHeight;\n            const scrollHeight = e.target.scrollHeight;\n            const currentHeight = Math.max(childHeight, targetHeight, scrollHeight);\n            // console.log({ isIntersecting, height, childHeight, targetHeight, scrollHeight, currentHeight }, e.target);\n\n            if (isIntersecting) {\n                e.target.childNodes[0].style.display=`block`;\n                // TODO: Should be set after image is loaded.\n                // const height = e.target.childNodes[0].clientHeight > e.target.clientHeight ? e.target.childNodes[0].clientHeight : e.target.clientHeight;\n                // console.log(e.target);\n                // console.log('e.target.childNodes[0].offsetHeight:', e.target.childNodes[0].offsetHeight);\n                // console.log('e.target.childNodes[0].scrollHeight:', e.target.childNodes[0].scrollHeight);\n                // console.log('e.target.childNodes[0].clientHeight:', e.target.childNodes[0].clientHeight);\n                // console.log('e.target.offsetHeight:', e.target.offsetHeight);\n                // console.log('e.target.scrollHeight:', e.target.scrollHeight);\n                // console.log('e.target.clientHeight:', e.target.clientHeight);\n                // console.log('height:', height);\n                // e.target.style.height=`${height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n            } else if (e.target.style.minHeight) {\n                // e.target.style.height = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.style.minHeight = `${currentHeight > height ? currentHeight : height}px`;\n                e.target.childNodes[0].style.display=`none`;\n            }\n        });\n    }\n\n    setupIntersectionObserver = () => {\n        if (!('IntersectionObserver' in window) ||\n            !('IntersectionObserverEntry' in window) ||\n            !('intersectionRatio' in window.IntersectionObserverEntry.prototype)) {\n            return false;\n        }\n\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0.1,\n        };\n        this.intersectionObserver = new IntersectionObserver(this.handleIntersection, options);\n    }\n\n    addIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.observe(ref);\n        }\n    }\n    removeIntersectionObserver = (ref) => {\n        if (this.intersectionObserver && ref) {\n            this.intersectionObserver.unobserve(ref);\n        }\n    }\n\n    componentWillMount() {\n        this.setupIntersectionObserver();\n    }\n\n    componentWillUnmount() {\n        this.deleteIntersectionObserver();\n    }\n\n    render() {\n        const {\n            data = [],\n            wrapperClassNames = 'row pb-4 bg-light',\n            contentClassNames = `col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mb-0 position-relative rounded rounded-lg py-3 shadow-sm`,\n            renderContent = (e) => <>Missing render function!</>,\n            dataFields = [],\n            dataValues = {},\n        } = this.props;\n        \n        return (\n            <div class='w-100'>\n                {data && data.filter(e => util.isObject(e)).map((obj, idx) => {\n                    const wrapperClasses = obj.hasOwnProperty('wrapperClassNames') ? obj.wrapperClassNames : wrapperClassNames;\n                    const contentClasses = obj.hasOwnProperty('contentClassNames') ? obj.contentClassNames : contentClassNames;\n                    return (<>\n                        <FastListLine\n                            key={`fastline-${idx}-${obj.id}`}\n                            obj={obj}\n                            idx={idx}\n                            addIntersectionObserver={this.addIntersectionObserver}\n                            removeIntersectionObserver={this.removeIntersectionObserver}\n                            wrapperClassNames={wrapperClasses}\n                            contentClassNames={contentClasses}\n                            renderContent={renderContent}\n                            dataFields={dataFields}\n                            dataValues={dataValues}\n                        />\n                    </>);\n                })}\n            </div>\n        );\n    };\n}\n\nexport default FastList;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveCheckpointResult extends Component {\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    toggleInfo = (e) => {\n        const { showInfo } = this.state;\n\t\tthis.setState({ showInfo: !showInfo });\n\t}\n\n    render() {\n        const { id, onClickNav = () => {} } = this.props;\n        const { submenu = 'detailsIn', showInfo } = this.state;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        let selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === id) : null;\n        selectedCheckpoint = selectedCheckpoint ? selectedCheckpoint : {};\n        const { sortedContestants = [] } = raceStore;\n\n        const allResultsCp = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp', '-direction'])).filter(e => e.checkpoint === id) : null;\n\n        const lastResultsIn = allResultsCp ? allResultsCp.filter(e => e.direction === 'in') : null;\n        const lastResultsOut = allResultsCp ? allResultsCp.filter(e => e.direction === 'out') : null;\n        const lastResultsLegtimes = allResultsCp ? allResultsCp.slice().sort(fieldSorter(['legTime', 'timestamp'])).filter(e => e.direction === 'in') : null;\n\n        const lastResultsScratched = allResultsCp ? allResultsCp.filter(e => e.direction === 'scratched') : null;\n\n        const prevCp = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.sortOrder === selectedCheckpoint.sortOrder - 1) : null;\n        const nextCp = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.sortOrder === selectedCheckpoint.sortOrder + 1) : null;\n        const prevResultsOut = currentClass.results && prevCp ? currentClass.results.slice().filter(e => e.checkpoint === prevCp.id && e.direction === 'out') : null;\n        const nextResultsIn = currentClass.results && nextCp ? currentClass.results.slice().filter(e => e.checkpoint === nextCp.id && e.direction === 'in') : null;\n\n        const image = selectedCheckpoint.image;\n        const topImage = selectedCheckpoint.topImage;\n        const shortname = mu.displayNameShort(selectedCheckpoint);\n        const dotColor = ''; // mu.getRankingColor(selectedCheckpoint.sortOrder);\n\n        const defaultImage = './assets/checkpoint.png';\n        const headerImage = topImage ? topImage : defaultImage;\n\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage}\");` : ''}`}\n            />\n\n            {nextCp && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextCp.id)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevCp && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevCp.id)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex position-relative' style='margin-top: 16vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {selectedCheckpoint.sortOrder && selectedCheckpoint.sortOrder !== 'n/a' && <>{selectedCheckpoint.sortOrder}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.2em;'>\n                    <h3 class='mb-2'>\n                        {selectedCheckpoint.name}\n                    </h3>\n                    <div>\n                        {selectedCheckpoint.cellphone && <><span class='text-muted'><i class='fas fa-phone' /></span> <a href={`tel:${selectedCheckpoint.cellphone}`}>{selectedCheckpoint.cellphone}</a></>}\n                        {selectedCheckpoint.email && <><a class='ml-3' href={`mailto:${selectedCheckpoint.email}`}><i class='fas fa-envelope' /></a></>}\n                        {selectedCheckpoint.facebook && <><a class='ml-3' href={`${mu.asFacebookLink(selectedCheckpoint.facebook)}`}><i class='fab fa-facebook' /></a></>}\n                        {selectedCheckpoint.instagram && <><a class='ml-3' href={`${mu.asInstagramLink(selectedCheckpoint.instagram)}`}><i class='fab fa-instagram' /></a></>}\n                        {selectedCheckpoint.description && <><a class='ml-3 text-primary' onCLick={this.toggleInfo}><i class='fas fa-info-circle' /></a></>}\n                    </div>\n                </div>\n            </div>\n            {showInfo && selectedCheckpoint.description && <div>\n                <Markdown markdown={mu.replaceImages(selectedCheckpoint.description, selectedCheckpoint.images)} markdownOpts={mu.getMarkdownOptions()} />\n            </div>}\n            <div class=''>\n                <div class=''>\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-flag' /> Start\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {util.format(selectedCheckpoint.totalDistance || 0, 0)} <span class='text-muted'>km</span>\n                            </div>\n                        </div>\n                        {!selectedCheckpoint.isStartLine && <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-arrow-down' /> Prev\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.format(selectedCheckpoint.distanceFromPrev || 0, 0)} <span class='text-muted'>km</span></nobr>\n                            </div>\n                        </div>}\n                        {/* <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-campground' /> CP\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {selectedCheckpoint.name}\n                            </div>\n                        </div> */}\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-arrow-up' /> Next\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {util.format(selectedCheckpoint.distanceToNext || 0, 0)} <span class='text-muted'>km</span>\n                            </div>\n                        </div>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-flag-checkered' /> Finish\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.format(selectedCheckpoint.distanceToFinish || 0, 0)} <span class='text-muted'>km</span></nobr>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='d-flex justify-content-between mt-2'>\n                        {selectedCheckpoint.requiredRestMinutes && <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-bed' /> Mandatory rest\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.secToHms(selectedCheckpoint.requiredRestMinutes * 60, true)}</nobr>\n                                {selectedCheckpoint.timeEqualization && <>\n                                    <span class='text-muted ml-2'>+</span> <i class='fas fa-user-clock' /> Time Equalization\n                                </>}\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n            </div>\n\n\n            {selectedCheckpoint.hideResults ? <></> : <>\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'detailsIn' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='detailsIn'\n                        >\n                            Details in\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'detailsOut' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='detailsOut'\n                        >\n                            Detail out\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'legTimes' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='legTimes'\n                        >\n                            Leg times\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                    style='max-height: 60vh;'\n                >\n                    {/* {\n                        \"position\": [],\n                        \"id\": \"2e8f57cb-4bc0-4f5f-b41c-783944be9b8a\",\n                        \"bib\": 30,\n                        \"checkpoint\": \"e1f8e66f-1629-4ea6-b155-fa8fb3b377ab\",\n                        \"direction\": \"out\",\n                        \"dogs\": 10,\n                        \"timestamp\": \"2019-03-12T05:50:00.000Z\"\n                    }, */}\n\n                    <div class='table-responsive-lg'>\n                        <table class='table table-striped table-sm'>\n                            {submenu === 'detailsIn' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs in</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsIn && lastResultsIn.map((res, idx) => {\n                                    const bib = parseInt(res.bib, 10);\n                                    let selectedMusher = bib ? raceStore.getMusherByBibId(bib) : null;\n                                    // const team = raceStore.getTeamById(musher.team);\n                                    // let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n\n                                    selectedMusher = selectedMusher ? selectedMusher : {};\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let restTime;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                        restTime = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                    }\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>{res.dogs}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                            {submenu === 'detailsOut' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Rest in cp</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs out</th>\n                                        <th>Next CP</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsOut && lastResultsOut.map((res, idx) => {\n                                    const bib = parseInt(res.bib, 10);\n                                    let selectedMusher = bib ? raceStore.getMusherByBibId(bib) : null;\n                                    selectedMusher = selectedMusher ? selectedMusher : {};\n\n                                    // let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    // selectedMusher = selectedMusher ? selectedMusher : {};\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const nextResIn = nextResultsIn && nextResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let restTime;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                        restTime = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                    }\n\n                                    let estTimeInNextCp;\n                                    let estTimeToNext = selectedCheckpoint.estTimeToCpMinutes || 0;\n                                    if (estTimeToNext && selectedMusher.cpSortOrder === selectedCheckpoint.sortOrder) {\n                                        estTimeInNextCp = mu.addDeltaSec(resOut.timestamp, estTimeToNext * 60);\n                                    }\n\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && restTime && <>\n                                                    <nobr>\n                                                        {util.secToHms(restTime, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut.dogs}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isFinishLine && nextResIn ? <>\n                                                    <nobr>\n                                                        {mu.formatDate(nextResIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </> : <>\n                                                    {estTimeInNextCp && <>\n                                                        <nobr class='text-muted'>\n                                                            {mu.formatDate(estTimeInNextCp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </nobr>\n                                                    </>}\n                                                </>}\n                                            </td>                                    \n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                            {submenu === 'legTimes' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs in</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsLegtimes && lastResultsLegtimes.map((res, idx) => {\n                                    const bib = parseInt(res.bib, 10);\n                                    let selectedMusher = bib ? raceStore.getMusherByBibId(bib) : null;\n                                    selectedMusher = selectedMusher ? selectedMusher : {};                                    \n                                    // const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>{res.dogs}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                        </table>\n                    </div>\n                </div>\n            \n            </>}\n\n\n\n            {/* <h3>RaceLiveCheckpointResult</h3> */}\n            {/* <h5>{id} {selectedCheckpoint.name}</h5> */}\n            {/* <xmp>{JSON.stringify(selectedCheckpoint, null, 4)}</xmp> */}\n            {/* <xmp>{JSON.stringify(selectedCheckpoint, null, 4)}</xmp> */}\n            {/* <xmp>{JSON.stringify(lastResultsIn, null, 4)}</xmp> */}\n        </>);\n    }\n}\n\nexport default RaceLiveCheckpointResult;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Trackmap from '../../components/public/trackmap';\nimport Gauge from '../../components/gauge';\n\nimport DogScroller from '../../components/dog/scroller';\nimport ImageScroller from '../imageScroller';\n\nimport Overlay from '../../components/overlay/';\nimport Drawer from '../../components/drawer/';\nimport HeaderCustom from '../../components/header/custom';\nimport Loading from '../../components/loading/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\nimport LineGraph from '../../components/lineGraph';\nimport States from '../../components/states';\nimport PublicTeam from '../team/public';\nimport RaceTrackingMusherDetail from './raceTrackingMusherDetail';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true, false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nfunction PageTitle(title, classes = '', style = '') {\n    useEffect(() => {\n        document.title = `Homerun Race: ${title}`;\n    }, [title]);\n    return <span class={classes} style={style}>{title}</span>;\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\nconst initialState = {\n    isLoading: false,\n    email: '',\n    submenu: 'ads',\n    jwtToken: util.getJwtToken(),\n\n    reloadInSec: null,\n    reloadIsActive: false,\n\n    leaderboardMode: 'mushers',\n    filterByraceClass: '',\n    showLeaderBoard: true,\n    showNews: true,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\nconst REPLAY_SPEED = 1;\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    initComponent = () => {\n        this.setState({\n            reloadIsActive: true,\n        }, () => this.tickReloadTimeer());\n    }\n\n    tickReloadTimeer = () => {\n        const { reloadLastEpoch } = this.props;\n        const { reloadIsActive } = this.state;\n        if (reloadIsActive) {\n            const now = Math.floor(new Date().getTime() / 1000);\n            const reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n            this.setState({ reloadInSec });\n            clearTimeout(this.updateTimer.tick);\n            this.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n        return false;\n    }\n\n    componentDidMount() {\n        this.initComponent();\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    render() {\n        const { reloadInSec } = this.state;\n        const { radius = 13, fontSize = 11, classNames = '' } = this.props;\n        const reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n        return (<>\n            <span class={classNames}>\n                <Gauge key={`gauge-reload-page`}\n                    color='primary'\n                    radius={radius}\n                    showPercentText={false}\n                    percent={reloadPercent}\n                    showCenterText={true}\n                    centerText={reloadInSec}\n                    centerTextSize={fontSize}\n                    centerTextY={'55%'}\n                />\n            </span>\n        </>);\n    }\n}\n\n@observer\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { submenu = 'details' } = this.state;\n        const { isAdmin } = userStore;\n\n        const { waypoints } = raceStore;\n        const { raceClass = {}, race = {}, onMarkerClick = () => {} } = this.props;\n\n        return (<>\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em;'><Text id='races.gps-ranking'>GPS Ranking</Text>: {race.title} - {raceClass.title}</span>\n            </div>\n\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 60vh;'\n            >\n                {!waypoints || waypoints.length === 0 && <>\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-dog' /></div>\n                        <div class='w-100'>\n                            <h3><Text id='races.no-teams-found'>No teams found!</Text></h3>\n                            <Text id='races.loading-teams'>Loading teams...</Text>\n                        </div>\n                        <div class='spinner-border text-primary' style='width: 3rem; height: 3rem;' role='status'>\n                            <span class='sr-only'>Loading...</span>\n                        </div>\n                    </div>\n                </>}\n\n                <table class='table table-sm table-striped'>\n                    {waypoints && waypoints.map((musher, idx) => {\n                        const restPercent = util.format(musher.restTime / musher.raceTime * 100, 0);\n                        const shortname = mu.displayNameShort(musher);\n\n                        return (<>\n                            <tr onClick={() => onMarkerClick(musher)}>\n                                <td style='width: 15px;' class='text-center'>{musher.rank}</td>\n                                <td>\n                                    <div class='d-flex justify-content-between align-items-start w-100'>\n                                        {/* <div\n                                            class='rounded-circle imageRounded imageRoundedSmallIcon float-left text-center'\n                                            style={`\n                                                background-image: url(\"${musher.image}\");\n                                                background-size: cover;\n                                                border: 1px ${mu.getRankingColor(musher.rank || idx + 1)} solid;\n                                                width: 30px !important;\n                                                height: 30px;\n                                                padding-top: 3px;\n                                            `}\n                                        >\n                                            {musher.image ? '' : shortname}\n                                        </div> */}\n                                        <div class='flex-grow-1'>\n                                            <div class='float-right ml-2'>\n                                                <div class='text-center'>\n                                                    <Gauge key={`gauge-reload-page`}\n                                                        color={restPercent < 40 ? (restPercent < 30 ? 'danger' : 'warning') : 'success'}\n                                                        radius={30}\n                                                        showPercentText={false}\n                                                        percent={restPercent}\n                                                        showCenterText={true}\n                                                        centerText={`${restPercent}%`}\n                                                        centerTextSize={15}\n                                                        centerTextY={'55%'}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div class='float-right'>\n                                                {musher.finishTime < 9999999999 ? <>\n                                                    <i class='fas fa-flag-checkered text-success' />\n                                                </> : <>\n                                                    {musher.currentState === 'rest' ? <>\n                                                        <i class='fas fa-bed text-warning' />\n                                                    </> : <>\n                                                        <i class='fas fa-running text-primary' />\n                                                    </>}\n                                                </>}\n                                            </div>\n\n                                            <span class='text-white rounded-pill-left px-2 mr-2'\n                                                style={`background-color: ${mu.getRankingColor(musher.rank || idx + 1)};`}\n                                            >\n                                                {musher.bib}\n                                            </span>\n\n                                            {musher.flag}  {musher.title}\n                                            <div>\n                                                <small>\n                                                    {musher.finishTime < 9999999999 ? <>\n                                                        {musher.diffToFirstFinishTime > 0 ? <>\n                                                            <span class='text-muted'><i class='fas fa-arrow-up' /></span> {util.secToHms(musher.diffToFirstFinishTime)}\n                                                        </> : <>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.formatDate(util.parseInputDate(musher.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </>}\n                                                        <nobr>\n                                                            <i class='fas fa-running text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </> : <>\n                                                        {/* <span class='text-muted'><i class='fas fa-compass' /></span> {mu.windDirection(musher.bearing)} */}\n                                                        {/* {util.format(musher.totalDistanceOnTrack, 1)} km */}\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-flag-checkered' /></span> {util.format(musher.distanceToFinish, 1)} km\n                                                        </nobr>\n                                                        {musher.distanceToFinish !== musher.distanceToFirst && musher.distanceToFirst > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted font-weight-light ml-2'>1st:</span> {util.format(musher.distanceToFirst, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToFinish !== musher.distanceToForward && musher.distanceToForward > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-up' /></span> {util.format(musher.distanceToForward, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        {musher.distanceToBehind > 0 && <>\n                                                            <nobr>\n                                                                <span class='text-muted ml-2'><i class='fas fa-arrow-down' /></span> {util.format(musher.distanceToBehind, 1)} km\n                                                            </nobr>\n                                                        </>}\n                                                        <br />\n                                                        <nobr>\n                                                            <span class='text-muted'><i class='fas fa-tachometer-alt' /></span> {util.format((musher.currentAvgSpeed ? musher.currentAvgSpeed * 3.6 : musher.speed) || 0, 1)} km/h\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-running ml-2 text-muted' /> {util.secToHms(musher.raceTime)}\n                                                        </nobr>\n                                                        <nobr>\n                                                            <i class='fas fa-bed ml-2 text-muted' /> {util.format(musher.restTime / musher.raceTime * 100, 0)}%\n                                                        </nobr>\n                                                    </>}\n\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class='mt-1 container-fluid'>\n                                        <States stores={this.props.stores} states={musher.states} duration={musher.raceTime} key={`state-${musher.bib}`} height={'6px'} showText={false} />\n                                    </div>\n                                </td>\n                            </tr>\n                        </>);\n                    })}\n                </table>\n\n                {/* waypoints: {JSON.stringify(waypoints.slice(0, 5), null, 4)}<br /> */}\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass MusherInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    toggleAdminInfo = (e) => {\n        e.stopPropagation();\n        const { showAdminInfo } = this.state;\n        this.setState({\n            showAdminInfo: !showAdminInfo,\n        });\n    }\n\n    toggleInfo = (e) => {\n        e.stopPropagation();\n        const { showInfo } = this.state;\n        this.setState({\n            showInfo: !showInfo,\n        });\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const currentDog = dogs.find(e => e.uuidv4 === dogid);\n        this.setState({\n            currentDog,\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    render() {\n        const { raceStore, userStore } = this.props.stores;\n        const { showAdminInfo, showInfo, submenu = 'details', showDog, currentDog: dog = {} } = this.state;\n\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const { wpData = {}, onMarkerClick = () => {} } = this.props;\n        const wp = raceStore.findWaypointByBib(wpData.bib);\n\n        const { isAdmin } = userStore;\n        const { user: currentUser = {} } = userStore;\n\n        const musher = (wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email)) || {};\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n        const raceClass = raceStore.getClassByBib(wpData.bib);\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const dotColor = mu.getRankingColor(wp.rank);\n\n        const hasBirthday = mu.hasBirthday(dog.birth);\n        const daysUntilBirthday = dog.birth ? Math.ceil(mu.daysUntilNextBirthday(dog.birth)) : 365;\n\n        // const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const { inFront, behind } = raceStore.findNearestMushers(wpData.bib);\n\n        const restPercent = util.format(wp.restTime / wp.raceTime * 100, 0);\n        // const runPercent = 100 - restPercent;\n\n        const defaultImage = {\n            s3XXLargeLink: musher.topImage1 || './assets/homerun-race-logo.png',\n        };\n        const headerImage = team && team.imageHeader && team.imageHeader.s3XXLargeLink ? team.imageHeader : defaultImage;\n\n        const teamImages = team && team.images ? [...team.images] : [];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            if (musher[`image${i}`]) {\n                teamImages.push(\n                    {\n                        s3SmallLink: musher[`image${i}`],\n                        s3LargeLink: musher[`image${i}`],\n                    }\n                );\n            }\n        }\n\n        const locale = 'en-GB';\n\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n\n        const now = Math.floor(new Date().getTime() / 1000);\n\n        return (<>\n            {behind.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(behind)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {inFront.bib && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={() => onMarkerClick(inFront)} style='line-height: 1.0em; font-size: 2.0em;'>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex justify-content-center align-items-center mb-2'>\n                <span style='font-size: 1.3em; height: 16vh;'>&nbsp;</span>\n            </div>\n            <div\n                class='w-100 overflow-auto'\n                style='max-height: 55vh;'\n            >\n\n                <div class='w-100 position-absolute'\n                    style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 30%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage.s3XXLargeLink}\");` : ''}`}\n                />\n\n                <div class='d-flex position-relative'>\n                    <div\n                        class={`position-relative text-center border rounded-circle imageRounded imageRoundedMedium`}\n                        style={image ? `background-image: url(\"${image}\"); background-size: cover;` : ''}\n                    >\n                        {!image && <div class='text-muted' style='font-size: 25px; padding-top: 5px;'>{shortname}</div>}\n                        <div\n                            class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                            style={`bottom: -20px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                        >\n                            {musher.bib && musher.bib !== 'n/a' && <>{musher.bib}</>}\n                        </div>\n                    </div>\n                    <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.8em;'>\n                        <div class='float-right' style='font-size: 1.2em;'>\n                            {wp.finishTime < 9999999999 ? <>\n                                <i class='fas fa-flag-checkered text-success' />\n                            </> : <>\n                                {wp.currentState === 'rest' ? <>\n                                    <i class='fas fa-bed text-warning' />\n                                </> : <>\n                                    <i class='fas fa-running text-primary' />\n                                </>}\n                            </>}\n                        </div>\n                        {/* {!isYourTeam && !isFollowing && !hasRequestedFollow && team.public > 0 && <span class='float-right'>\n                            <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} simple={true} classNames={'btn btn-link text-primary'} />\n                        </span>} */}\n\n                        <h3 class='mb-0'>\n                            {musher.flag} {musher.firstname} {musher.lastname}\n                        </h3>\n                        <h6 class='mb-0'>{musher.sportsClub || <>&nbsp;</>}</h6>\n                    </div>\n                </div>\n\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'details' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='details'\n                        >\n                            Details\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'team' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='team'\n                        >\n                            Team\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'dogs' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='dogs'\n                        >\n                            Dogs\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                >\n                    {submenu === 'details' && <>\n                        <RaceTrackingMusherDetail\n                            stores={this.props.stores}\n                            wp={wp}\n                            musher={musher}\n                        />\n                    </>}\n                    {submenu === 'team' && <>\n                        {team.public > 0 ? <>\n                            <h3>{team.name}</h3>\n                            <Markdown markdown={mu.replaceImages(team.description, team.images)} markdownOpts={mu.getMarkdownOptions()} />\n                            <ImageScroller stores={this.props.stores} images={teamImages} />\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                                {teamImages && <div class='my-3'><ImageScroller stores={this.props.stores} images={teamImages} /></div>}\n                            </div>\n                        </>}\n                    </>}\n                    {submenu === 'dogs' && <>\n                        {team.public > 0 ? <>\n                            {team.dogs && <div class='w-100 container-fluid'>\n                                <div class='row pt-2'>\n                                    <DogScroller stores={this.props.stores} dogs={team.dogs.map(d => d.id)} allDogs={team.dogs} onDogClick={this.onDogClick} />\n                                </div>\n                            </div>}\n                            {showDog && <>\n                                <div class='d-flex mb-0 mt-3 position-relative'>\n                                    <div class={`text-center border rounded-circle imageRounded imageRoundedLarge text-muted pt-2`} style={dog.image ? `background-image: url(\"${dog.image.s3LargeLink}\"); background-size: cover;` : ''}>\n                                        {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                                    </div>\n                                    <div class='flex-grow-1 pl-3 pr-2'\n                                        style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 1.2em;`}\n                                    >\n                                        <h5 class='mb-1'>\n                                            {dog.shortname || dog.name} {dog.shortname && dog.shortname !== '' && <> - <span class='font-weight-lighter'>{dog.name}</span></>}\n                                            {hasBirthday && <>\n                                                <i class='fas fa-birthday-cake ml-3' />\n                                            </>}\n                                        </h5>\n                                        <div>\n                                            {daysUntilBirthday < 7 && <>\n                                                <span class='text-muted mr-2'>\n                                                    <i class='fas fa-birthday-cake' /> in {daysUntilBirthday} days\n                                                </span>\n                                            </>}\n                                            {dog.birth && <span class='mr-2'>{util.age(dog.birth, dog.deceased)}</span>}\n                                            {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <xmp>dog: {JSON.stringify(dog, null, 4)}</xmp> */}\n                            </>}\n                        </> : <>\n                            <div class='text-center text-muted'>\n                                <div class='display-1'><i class='fas fa-dog' /></div>\n                                <h3><Text id='teams.no-public-team'>No public team!</Text></h3>\n                                <Text id='teams.no-public-team'>This team is not publicly visible.</Text>\n                            </div>\n                        </>}\n                    </>}\n\n                    {isAdmin && <div style='max-height: 200px; max-width: 70vw; overflow: auto;'>\n                        <button class='btn btn-link btn-block' onClick={this.toggleAdminInfo}>\n                            Toggle admin info\n                        </button>\n                        {showAdminInfo && <>\n                            <small>\n                                <xmp>\n                                    musher: {JSON.stringify(musher, null, 4)}<br />\n                                    user: {JSON.stringify(user, null, 4)}<br />\n                                    team: {JSON.stringify(team, null, 4)}<br />\n                                    totals: {JSON.stringify(totals, null, 4)}<br />\n\n                                    {/* {\n                                        \"firstDate\": \"2021-03-19 11:59\",\n                                        \"lastDate\": \"2021-03-20 17:13\",\n                                        \"firstEpoch\": 1616151540000,\n                                        \"lastEpoch\": 1616256780000,\n                                        \"now\": {\n                                            \"$numberDecimal\": \"1642675856939\"\n                                        },\n                                        \"totalTimeUsedSec\": 26524316,\n                                        \"totalWorkoutTimeUsedSec\": 130895,\n                                        \"lastDuration\": 25655,\n                                        \"team\": 84,\n                                        \"count\": 4,\n                                        \"distanceKm\": 301.5906237951766,\n                                        \"elevation\": 3610.019075719202,\n                                        \"duration\": 77343,\n                                        \"rest\": 1332,\n                                        \"speedAvg\": 8.294634979660305,\n                                        \"totalRest\": 54884,\n                                        \"loadIndex\": 1080.75,\n                                        \"totalKcalRelated\": 544.535560976128,\n                                        \"weightedTotalKcal\": 12303.171406247127,\n                                        \"flatTotalKcal\": 9424.70699359927,\n                                        \"firstGpxStartEpoch\": null,\n                                        \"lastGpxStartEpoch\": null\n                                    } */}\n\n                                </xmp>\n                            </small>\n                        </>}\n                    </div>}\n                </div>\n            </div>\n        </>);\n    }\n}\n\n@observer\nclass TrackingMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n            reloadLastEpoch: Math.floor(new Date().getTime() / 1000),\n            historyPointIndex: 0,\n            timerRunning: true,\n            replayHistory: false,\n            replaySpeed: REPLAY_SPEED,\n        };\n        this.updateTimer = {};\n    }\n\n    handleHistoryPointIndex = (e) => {\n        const historyIdx = parseInt(e.target.value, 10);\n        clearTimeout(this.updateTimer.reload);\n\n        // console.log({ historyIdx });\n        this.setState({\n            historyPointIndex: historyIdx,\n            timerRunning: false,\n        }, () => {\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex));\n        });\n    }\n\n    playHistory = () => {\n        clearTimeout(this.updateTimer.reload);\n        const { historyPointIndex, replaySpeed } = this.state;\n        const { raceStore } = this.props.stores;\n        const raceTrackerPointTimestamp = raceStore.getRaceTrackerTimestamp(historyPointIndex + 1);\n        // console.log('playHistory', { historyPointIndex });\n        const state = {\n            historyPointIndex: historyPointIndex + 1,\n            timerRunning: false,\n            playingHistory: true,\n        };\n        if (raceTrackerPointTimestamp) {\n            state.raceTrackerPointTimestamp = raceTrackerPointTimestamp\n        }\n        this.setState({\n            ...state,\n        }, () => {\n            raceStore.updateWaypointPosition(Math.abs(historyPointIndex + 1));\n        });\n\n        // Set replay timer\n        clearTimeout(this.updateTimer.history);\n        this.updateTimer.history = setTimeout(() => {\n            this.playHistory();\n        }, replaySpeed * 1000);\n    }\n\n    pauseHistory = () => {\n        clearTimeout(this.updateTimer.history);\n        this.setState({\n            playingHistory: false,\n        });\n    }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid, historySteps }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            historySteps,\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs);\n\n        // Set reload timer\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                console.log('loadLiveRaceResults.reloading...');\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid, historySteps });\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n        const { timerRunning } = this.state;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadRaceResults(this.props, teamIds, focusOnMushers);\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n    loadRace = async (props = this.props) => {\n        try {\n            this.setState({ isLoading: true });\n            const { raceStore, appState } = props.stores;\n            const { raceid, classid, filterByBibs, historySteps } = props;\n            await raceStore.load(raceid);\n            raceStore.getAllClassesSortedBy();\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const { selectedClassIds = [] } = appState;\n            const allClassIds = race?.classes.map(e => e.id);\n            let selectedClassId = classid || selectedClassIds[0];\n            if (allClassIds.indexOf(selectedClassId) === -1) {\n                selectedClassId = allClassIds[0];\n                appState.setSelectedClassId(selectedClassId);\n            }\n            if (classid) {\n                appState.toggleSelectedClassId(classid, true);\n            }\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\n            this.setState({ isLoading: false });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    setLeaderboardMode = (e) => {\n        const leaderboardMode = e.target.parentElement.dataset.mode || e.target.dataset.mode;\n        this.setState({ leaderboardMode })\n    }\n\n    chooseRaceClass = (e) => {\n        const filterByraceClass = e.target.value;\n        this.setState({ filterByraceClass })\n    }\n\n    toggleShowLeaderBoard = (hide) => {\n        const { showLeaderBoard } = this.state;\n        if (hide === true) {\n            this.setState({ showLeaderBoard: false });\n        } else {\n            this.setState({ showLeaderBoard: !showLeaderBoard });\n        }\n    }\n\n    toggleShowNews = (hide) => {\n        const { showNews } = this.state;\n        if (hide === true) {\n            this.setState({ showNews: false });\n        } else {\n            this.setState({ showNews: !showNews });\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.updateTimer.reload);\n        clearTimeout(this.updateTimer.history);\n        clearTimeout(this.updateTimer.tick);\n    }\n\n    componentDidMount() {\n        this.loadRace();\n        try {\n            const { width, height } = getWindowDimensions();\n            if (width < 800) {\n                this.toggleShowLeaderBoard(true);\n                this.toggleShowNews(true);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid || this.props.showDrawerReplay !== nextProps.showDrawerReplay) {\n\t\t    this.loadRace(nextProps);\n        }\n\t}\n\n    closeAllDrawers = () => {\n        this.setState({\n            showResults: false,\n            showDrawerCheckpoint: false,\n            showDrawerMusher: false,\n        });\n    }\n\n    onMarkerClick = (wpData) => {\n        this.closeAllDrawers();\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onMusherClick = (wpData) => {\n        this.setState({\n            showDrawerMusher: true,\n            wpData,\n        });\n    }\n\n    onCpMarkerClick = (cpData) => {\n        if (!cpData || !cpData.id) {\n            return null;\n        }\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId: cpData.id,\n            showDrawerCheckpoint: true,\n            cpData,\n        });\n    }\n\n    toggleDrawerMusher = () => {\n        const { showDrawerMusher } = this.state;\n        this.setState({\n            showDrawerMusher: !showDrawerMusher,\n        });\n    }\n\n    toggleDrawerCheckpoint = () => {\n        const { showDrawerCheckpoint } = this.state;\n        this.setState({\n            showDrawerCheckpoint: !showDrawerCheckpoint,\n        });\n    }\n\n    toggleResults = () => {\n        const { showResults } = this.state;\n        this.closeAllDrawers();\n        this.setState({            \n            showResults: !showResults,\n        });\n    }\n\n    selectCheckpoint = (selectedCheckpointId) => {\n        this.closeAllDrawers();\n        this.setState({\n            selectedCheckpointId,\n            showDrawerCheckpoint: true,\n            showDrawerMusher: false,\n            showDrawer: false,\n        });\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    onDogClick = (e, dogid, dogs) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showDog: dogid,\n            dogs,\n        });\n        return false;\n    }\n\n    hideDog = () => {\n        this.setState({\n            showDog: null,\n        });\n    }\n\n    // /Overlay functions\n\n    setReplaySpeed = (e) => {\n        const speed = e.target.closest('button').dataset.speed;\n        this.setState({\n            replaySpeed: parseFloat(speed),\n        });\n    }\n\n\tfilterByClass = async (e) => {\n        try {\n            const selectedClassId = e.target.closest('button').dataset.id;\n\n            const {\n                showDrawerReplay,\n                historySteps,\n                filterByBibs,\n            } = this.props;\n            const { replayHistory } = this.state;\n            if (replayHistory || showDrawerReplay) {\n                this.toggleReplayHistory();\n            }\n\n            const { appState, raceStore } = this.props.stores;\n            raceStore.cleanupMemoryClass();\n            appState.toggleSelectedClassId(selectedClassId, true);\n\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = filterByBibs ? filterByBibs : race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            this.setState({\n                allTeamIds,\n                bibs,\n                selectedMusherBib: '',\n                showDrawerCheckpoint: false,\n                showDrawerMusher: false,\n                showDrawer: false,\n            });\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','), false, true, true);\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId, historySteps });\n\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleFocusOnMusher = (e) => {\n        try {\n            const musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n            const { appState, raceStore } = this.props.stores;\n            appState.toggleFocusOnMusher(musherId);\n\n            const { focusOnMushers = [], selectedClassIds = [] } = appState;\n            const classid = selectedClassIds[0]\n\n            const { race } = raceStore;\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === classid)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (race.liveRace > 0) {\n                raceStore.getRaceTrackerActiveTeams(null, focusOnMushers, bibs);\n            } else {\n                raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers, bibs);\n            }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n    toggleBib = () => {\n        try {\n            const { bib } = this.state;\n            const { appState, raceStore } = this.props.stores;\n            const musher = raceStore.getMusherByBibId(bib);\n            appState.toggleFocusOnMusher(musher.id);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    checkForEnter = (e) => {\n        if (e.key === 'Enter') {\n            this.toggleBib();\n        }\n    }\n\n    toggleReplayHistory = () => {\n        const { replayHistory } = this.state;\n        clearTimeout(this.updateTimer.reload);\n        this.setState({\n            showDrawer: false,\n            historyPointIndex: 0,\n            replayHistory: !replayHistory,\n            timerRunning: replayHistory,\n        }, async () => {\n            await this.loadRace();\n            const { historyPointIndex } = this.state;\n            const { raceStore } = this.props.stores;\n            const { maxPoints } = raceStore;\n            if (replayHistory) {\n                console.log('toggleReplayHistory: setting to maxPoints', maxPoints);\n                raceStore.updateWaypointPosition(Math.abs(maxPoints - 1));\n            } else {\n                console.log('toggleReplayHistory: setting to first points');\n                for (let i = 0, l = 10; i < l; i += 1) {\n                    raceStore.updateWaypointPosition(Math.abs(historyPointIndex + i));\n                }\n            }\n        });\n    }\n\n    toggleLines = () => {\n        const { showLines } = this.state;\n        this.setState({\n            showLines: !showLines,\n        });\n    }\n\n    render() {\n        const { historyPointIndex, timerRunning, playingHistory, replaySpeed, raceTrackerPointTimestamp, showLines,\n            allTeamIds, bibs,\n        } = this.state;\n        const { userStore, raceStore, appState } = this.props.stores;\n        const { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const {\n            raceid,\n            path,\n            showHeader = true,\n            drawerClassNames,\n            drawerWidth,\n            showDrawerReplay,\n            largeMarkers,\n            isAnimatedMarkers,\n            linkBase = '/app-races/',\n        } = this.props;\n        const { focusOnMushers = [], infoOnMushers = [], selectedClassIds = [] } = appState;\n\n        const filterByClassId = (c) => {\n\t\t\tif (selectedClassIds.length > 0) {\n\t\t\t\treturn selectedClassIds.indexOf(c.id) > -1;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n        const { leaderboardMode, filterByraceClass, showLeaderBoard, showNews, reloadLastEpoch,\n            showDrawerMusher, showDrawerCheckpoint,\n            wpData = {},\n            cpData = {},\n            showResults,\n            showTeam, showDog,\n            submenu, replayHistory,\n            selectedCheckpointId,\n        } = this.state;\n\n        const { activeTeams, teamList, waypoints, geoJSONs, waypoints2, waypoints3, zoomToMarkers, classes, race, racetrackerData, maxPoints } = raceStore;\n\n        const musher = wpData.bib ? raceStore.getMusherByBibId(wpData.bib) : raceStore.getMusherByBibEmail(wpData.email);\n        const team = raceStore.getTeamById(musher.team);\n        const selectedClass = raceStore.getClassById(selectedClassIds[0]) || {};\n\n        let wpCheckpoints = [];\n        if (selectedClass.waypoints && selectedClass.waypoints.length > 0) {\n            wpCheckpoints = selectedClass.waypoints;\n        } else if (selectedClass.checkpoints && selectedClass.checkpoints.length > 0) {\n            wpCheckpoints = selectedClass.checkpoints\n                .slice()\n                .filter(cp => cp.position && cp.position[0])\n                .map(cp => ({\n                    id: cp.id,\n                    title: cp.name,\n                    lat: cp.position[0],\n                    lng: cp.position[1],\n                }));\n        }\n\n        let showTracking = true;\n        if (race.countryRegexp) {\n            if (user && user.currentLocationGeocode) {\n                const regexp = new RegExp(race.countryRegexp, 'i');\n                if (regexp.test(user.currentLocationGeocode.formattedCountry)) {\n                    showTracking = false;\n                }\n            }\n        }\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} hideTeam={this.hideTeam} />\n            </Overlay>}\n            {showDog && <Overlay>\n                <DogPublicDetail stores={this.props.stores} dogid={showDog} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideDog} dogs={team.dogs} />\n            </Overlay>}\n\n\n            {showHeader && <HeaderCustom height={MARGIN_TOP}>\n                <div class='d-flex justify-content-between align-items-center w-100'>\n                    <div class='d-flex align-items-center'>\n                        <span class='' style='font-size: 2.3em;'>\n                            <a href={`${linkBase}${race.id}`}>\n                                <i class='fas fa-angle-left' />\n                            </a>\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' onClick={this.toggleResults}>\n                            <i class='fas fa-list-ol' />\n                        </span>\n                        <span class='ml-4 text-primary' style='font-size: 1.4em;' >\n                            {!race.resultsHide && <a href={`${linkBase}${race.id}/results`}>\n                                <i class='fas fa-stopwatch' />\n                            </a>}\n                        </span>\n                    </div>\n                    <div>\n                        <span class='font-weight-normal text-white' style='font-size: 1.2em;'>{race.title}</span>\n                    </div>\n                    {race.liveRace > 0 ? <>\n                        <div class='d-flex align-items-center text-primary' onClick={this.toggleReplayHistory}>\n                            <span class=''>Replay</span>\n                            <span class='ml-2' style='font-size: 1.4em;'>\n                                <i class='fas fa-play' />\n                            </span>\n                        </div>\n                    </> : <>\n                        <div class='d-flex align-items-center'>\n                            &nbsp;\n                        </div>\n                    </>}\n                </div>\n\n                <div class='w-100 overflow-hidden'>\n                    <div\n                        class='d-flex flex-row flex-nowrap pb-2 px-1'\n                        style='overflow: auto; scroll-snap-type: x mandatory;'\n                    >\n                        {race.classes && race.classes.map((currentClass, idx) => <>\n                            <div class='col px-0 pt-0'>\n                                <button\n                                    type='button'\n                                    class={`btn btn-block ${mu.getPillClass(race.classes.length, idx)} rounded-none ${selectedClassIds.indexOf(currentClass.id) > -1 ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={this.filterByClass}\n                                    data-id={currentClass.id}\n                                >\n                                    {currentClass.title}\n                                </button>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </HeaderCustom>}\n\n            {!showTracking ? <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    <div class='text-center text-muted'>\n                        <div class='display-1'><i class='fas fa-hand-paper' /></div>\n                        <h3>Not allowed to view tracking</h3>\n                        {race.countryRegexpMessage}\n                    </div>\n                </div>\n            </> : <>\n                <div\n                    class='container-fluid position-relative p-0 w-100 h-100'\n                    style={`margin-top: ${showHeader ? MARGIN_TOP : 0};`}\n                >\n                    {race.id ? <>\n                        <Trackmap\n                            marginTop={MARGIN_TOP}\n                            stores={this.props.stores}\n                            raceid={raceid}\n                            waypoints={waypoints}\n                            geoJSONs={showLines ? geoJSONs : null}\n                            // waypoints2={waypoints2}\n                            // waypoints3={waypoints3}\n                            waypoints2={wpCheckpoints}\n\n                            zoomToMarkers={zoomToMarkers}\n                            fullscreenMap={true}\n                            onMarkerClick={this.onMarkerClick}\n                            onMarker2Click={this.onCpMarkerClick}\n                            showHeatmap={race.liveRace < 1}\n                            allTeamIds={allTeamIds}\n                            showTracks={race.liveRace >= 1}\n                            selectedClassIds={selectedClassIds}\n                            showDistanceMarkers={false}\n                            groupWaypoints={false}\n                            focusOnMushers={focusOnMushers}\n                            largeMarkers={largeMarkers}\n                            isAnimatedMarkers={isAnimatedMarkers}\n                            replaySpeed={replaySpeed * 1000}\n                            // key={`trackmap-${selectedClassIds.join('-')}`}\n                            // key={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                            // mapid={`heatmap-${racetrackerData.map(e => e.bib).join('-')}`}\n                        />\n                    </> : <>\n                        <Loading stores={this.props.stores} />\n                    </>}\n\n\n                    {timerRunning && <div class='position-absolute' style='top: 125px; left: 5px; z-index: 9999; width: 30px; height: 30px;'>\n                        <ReloadTimer stores={this.props.stores} classNames='float-right ml-2' reloadLastEpoch={reloadLastEpoch} />\n                    </div>}\n\n                    {focusOnMushers && focusOnMushers.length > 0 && <>\n                        <div\n                            class='row mb-2'\n                            style='\n                                background-color: #1C1F4C;\n                                background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                background-size: cover !important;\n                                background-position: 0 0;\n                                border-radius: 10px;\n                            '\n                        >\n                            <div class='col-12 text-white' style='font-size: 1.3em;'>\n                                {focusOnMushers && focusOnMushers.map(musherId => {\n                                    const musher = raceStore.getMusherById(musherId);\n                                    return <>\n                                        <div>\n                                            <nobr>\n                                                <span class='mr-2' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-times text-warning' /> : <i class='far fa-star' />}</span>\n                                                <span class='text-right' style='width: 50px; display: inline-block;'>{musher.bib}</span> {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                            </nobr>\n                                        </div>\n                                    </>\n                                })}\n                            </div>\n                        </div>\n                    </>}\n\n                    {race.mapCredits && <>\n                        <div class='position-absolute' style='bottom: 30px; left: 7px; z-index: 9999; width: 100px; height: 40px;'>\n                            <Markdown markdown={mu.replaceImages(race.mapCredits, race.images)} markdownOpts={mu.getMarkdownOptions()} />\n                        </div>\n                    </>}\n\n                    {/* <div class={`row`}>\n                        <div class='col-12 form-inline align-top d-flex justify-content-center'>\n                            <div class='form-group'>\n                                <input\n                                    class='form-control form-control-lg text-dark border-primary'\n                                    style='background-color: inherit;'\n                                    type='text'\n                                    onInput={linkstate(this, 'bib')}\n                                    onKeyDown={this.checkForEnter}\n                                />\n                                <button\n                                    type='button'\n                                    class='ml-2 btn btn-lg btn-primary'\n                                    onClick={this.toggleBib}\n                                >Search for Bib</button>\n                            </div>\n                        </div>\n                    </div> */}\n\n                    {(showDrawerReplay || replayHistory) && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleReplayHistory} classNames={drawerClassNames} width={drawerWidth}>\n\n                            {maxPoints > 0 ? <>\n                                <div class='d-flex justify-content-center mx-3'>\n                                    {playingHistory ? <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-warning' onClick={this.pauseHistory}><i class='fas fa-pause' /></button>\n                                        </div>\n                                    </> : <>\n                                        <div class='pl-1'>\n                                            <button class='btn btn-success' onClick={this.playHistory}><i class='fas fa-play' /></button>\n                                        </div>\n                                    </>}\n                                    <div class='pl-2 pt-2 flex-grow-1'>\n                                        <input type='range' class='custom-range w-100' min={0} max={maxPoints} value={historyPointIndex} onInput={this.handleHistoryPointIndex} />\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-left rounded-none ${replaySpeed === 1 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={1}\n                                        >\n                                            60x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.5 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.5}\n                                        >\n                                            120x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-none ${replaySpeed === 0.25 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.25}\n                                        >\n                                            240x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block right rounded-none ${replaySpeed === 0.12 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.12}\n                                        >\n                                            480x\n                                        </button>\n                                    </div>\n                                    <div class='col px-0 pt-2'>\n                                        <button\n                                            type='button'\n                                            class={`btn btn-block rounded-pill-right rounded-none ${replaySpeed === 0.05 ? 'btn-secondary' : 'btn-outline-secondary'} text-nowrap`}\n                                            style='text-overflow: ellipsis; overflow: hidden;'\n                                            onClick={this.setReplaySpeed}\n                                            data-speed={0.05}\n                                        >\n                                            1000x\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='d-flex justify-content-center'>\n                                    <div class='flex-grow-1 pt-0 font-weight-bolder text-center' style='font-size: 1.1em;'>\n                                        {raceTrackerPointTimestamp && <>\n                                            {util.formatDate(util.parseInputDate(raceTrackerPointTimestamp), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                        </>}\n                                        {isAdmin && <>\n                                            / {historyPointIndex}\n                                        </>}\n                                    </div>\n                                    {isAdmin && <>\n                                        <button class='btn btn-danger mt-2 mr-4 rounded-pill-both rounded-none' onClick={this.toggleLines}>\n                                            <i class='fas fa-wave-square' /> Show lines\n                                        </button>\n                                    </>}\n                                </div>\n                            </> : <>\n                                <div class='spinner-border text-primary' role='status'>\n                                    <span class='sr-only'>Loading...</span>\n                                </div>\n                            </>}\n                        </Drawer>\n                    </>}\n\n                    {showResults && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleResults} classNames={drawerClassNames} width={drawerWidth}>\n                            <Results\n                                stores={this.props.stores}\n                                raceClass={selectedClass}\n                                race={race}\n                                onMarkerClick={this.onMusherClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerMusher && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerMusher} classNames={drawerClassNames} width={drawerWidth}>\n                            <MusherInfo\n                                stores={this.props.stores}\n                                wpData={wpData}\n                                onMarkerClick={this.onMarkerClick}\n                                onTeamClick={this.onTeamClick}\n                                onUserClick={this.onUserClick}\n                                onDogClick={this.onDogClick}\n                            />\n                        </Drawer>\n                    </>}\n\n                    {showDrawerCheckpoint && <>\n                        <Drawer stores={this.props.stores} onCloseClick={this.toggleDrawerCheckpoint}>\n                            <RaceLiveCheckpointResult stores={this.props.stores} id={selectedCheckpointId} onClickNav={this.selectCheckpoint} />\n                        </Drawer>\n                    </>}\n\n                </div>\n            </>}\n        </>);\n    }\n}\n\nexport default TrackingMap;\n"],"sourceRoot":""}