{"version":3,"sources":["webpack:///./components/dog/dogs.js"],"names":["placeholder","id","name","getPlaceholder","newPlaceholder","unique","Date","getTime","util","randomPassword","List","render","isDraggingOver","this","props","provided","snapshot","innerRef","children","className","class","droppableProps","ref","style","borderStyle","width","Component","Dog","removeThisPlaceholder","removePlaceholder","idx","list","isDragging","draggableStyle","dog","draggableProps","dragHandleProps","userSelect","background","maxWidth","height","onClick","image","s3ThumbLink","ucfirst","shortname","initialState","filterby","get","Dogs","observer","toggleDog","e","dogId","value","action","target","closest","dataset","parseInt","object","type","elementtype","field","updateField","isNew","showPositions","toJS","indexOf","splice","push","skipTimer","singleValue","setState","filterText","dndDogs","findAllDogsInTeams","stores","dogStore","dogs","currentTeam","selectedTeams","teams","currentTeamId","filter","team","some","r","map","addAllDogsInTeam","allDogsInTeam","dogFilter","allDogs","defaultDogsRight","n","Math","ceil","length","defaultDogsLeft","dogsLeft","find","a","dogsRight","idxLeft","findIndex","idxRight","dogPositionUpdated","updateDogPositions","addPlaceholderLeft","state","addPlaceholderRight","clearAllDogs","resetDogPositions","toggleSearchField","showSearchField","getList","onDragEnd","result","source","destination","droppableId","items","startIndex","endIndex","Array","from","reorder","index","droppableSource","droppableDestination","sourceClone","destClone","move","datatype","clearDogPositions","changeFilter","set","loadDog","getFilteredDogs","match","RegExp","getNestedValue","filteredDogs","load","query","deceased","addData","componentWillReceiveProps","nextProps","componentDidMount","userStore","user","language","saved","title","icon","help","teamNames","findTeam","for","onInput","linkState","selected","fields","total","isArray","dogStatus","findDogstatus","status","dogPosition","findDogposition","position","dogHistoryStatuses","findHistoryStatuses","data-id","format","findHarness","harness","birth","age","gender","specialNeeds","v","isoDate","endDate","key","draggableId"],"mappings":"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","file":"3.chunk.66e66.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport linkState from 'linkstate';\nimport { route } from 'preact-router';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst placeholder = {\n    id: 0,\n    name: 'empty',\n};\n\nconst getPlaceholder = () => {\n    const newPlaceholder = { ...placeholder };\n    newPlaceholder.unique= `${new Date().getTime()}-${util.randomPassword()}`;\n    return newPlaceholder;\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    // padding: grid * 2,\n    // margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"#808080\" : \"\",\n    maxWidth: 92,\n    height: 100,\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    borderStyle: isDraggingOver ? \"dashed\" : \"\",\n    // background: isDraggingOver ? \"#a0a0a0\" : \"\",\n    // padding: grid,\n    width: 110,\n});\n\nclass List extends Component {\n  render() {\n    const { provided, snapshot, innerRef, children, className } = this.props;\n    return (\n        <div class={`h-100 border ${className}`} {...provided.droppableProps} ref={innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n        >\n            {children}\n        </div>\n    );\n  }\n}\n\n\nclass Dog extends Component {\n    removeThisPlaceholder = () => {\n        const { removePlaceholder = () => {}, idx, list } = this.props;\n        removePlaceholder({ idx, list });\n    }\n\n    render() {\n        const { provided, snapshot, innerRef, dog } = this.props;\n        return (\n            <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={innerRef}\n                class='mx-2 my-2 p-2'\n                style={getItemStyle(\n                    snapshot.isDragging,\n                    provided.draggableProps.style\n                )}\n            >\n                {dog.id === 0 ? (\n                    <>\n                        <div>\n                            <div class={`text-center border rounded-circle imageRounded text-muted pt-2`}>\n                                <span class='font-weight-lighter' style='font-size: 35px;'>&nbsp;</span>\n                            </div>\n                            <div class='text-center'>\n                                <button class='btn btn-sm btn-link float-right p-0' onClick={this.removeThisPlaceholder}>\n                                    <i class='fas fa-trash-alt' />\n                                </button>\n                                &nbsp;\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div>\n                            <div class={`text-center border rounded-circle imageRounded text-muted pt-2`} style={`${dog.image ? `background-image: url(\"${dog.image.s3ThumbLink}\");` : ''}`}>\n                                {/* {!dog.image && <i class='fas fa-dog' style='font-size: 20px;' />} */}\n                                {!dog.image && <span class='font-weight-lighter' style='font-size: 35px;'>{util.ucfirst(dog.name, true)}</span>}\n                            </div>\n                            <div class='text-center'>\n                                <small>\n                                    {dog.shortname || dog.name}<br />\n                                </small>\n\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\n\nconst initialState = {\n    filterby: util.get('dogs-filter'),\n};\n\n@observer\nclass Dogs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dogsLeft: [],\n            dogsRight: [],\n            ...initialState,\n        };\n    }\n\n    toggleDog = async (e) => {\n        const { id } = e.target.closest('#dogContainer').dataset;\n        const dogId = parseInt(id, 10);\n        const { object, type, elementtype, field, updateField, isNew, showPositions } = this.props;\n        const value = toJS(object[field]) || [];\n        const idx = value.indexOf(dogId);\n        let action;\n        if (idx > -1) {\n            value.splice(idx, 1);\n            action = 'remove';\n        } else {\n            value.push(dogId);\n            action = 'add';\n        }\n        await updateField({ id: object.id, field, value, type, elementtype, isNew, skipTimer: true, singleValue: dogId });\n        this.setState({\n            filterText: '',\n        });\n        if (showPositions) {\n            this.dndDogs({ dogId, action });\n        }\n    }\n\n    findAllDogsInTeams = () => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object, currentTeam = {} } = this.props;\n        const selectedTeams = toJS(object.teams || []);\n        const currentTeamId = currentTeam.id;\n        const filter = (e) => {\n            if (e.team === currentTeamId || (e.teams && e.teams.indexOf(currentTeamId) > -1)) {\n                return true;\n            }\n            if (selectedTeams.indexOf(e.team) > -1) {\n                return true;\n            }\n            if (e.teams) {\n                return e.teams.some(r => selectedTeams.indexOf(r) >= 0);\n            }\n            return false;\n        };\n        const allDogsInTeam = dogs.filter(filter).map(e => e.id);\n        return allDogsInTeam;\n    }\n\n    addAllDogsInTeam = async () => {\n        const { object, type, elementtype, field, updateField, isNew } = this.props;\n        const allDogsInTeam = this.findAllDogsInTeams();\n        await updateField({ id: object.id, field, value: allDogsInTeam, type, elementtype, isNew, skipTimer: true });\n    }\n\n    // toggleFilter = () => {\n    //     const { showAll } = this.state;\n    //     this.setState({\n    //         showAll: showAll ? 0 : 1,\n    //     });\n    //     this.loadDog();\n    // }\n\n    // toggleSelectedFilter = () => {\n    //     const { showOnlySelected } = this.state;\n    //     this.setState({\n    //         showOnlySelected: showOnlySelected ? 0 : 1,\n    //     });\n    // }\n\n    dndDogs = ({ dogId, action }) => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object } = this.props;\n        const dogFilter = object.dogs ? (e) => object.dogs.indexOf(e.id) > -1 : () => false;\n        const allDogs = toJS(dogs);\n        const filterLeft = (dogId) => dogId === 0 || (allDogs.find(a => a.id === dogId) && object.dogsRight.indexOf(dogId) === -1);\n        const filterRight = (dogId) => dogId === 0 || (allDogs.find(a => a.id === dogId) && object.dogsLeft.indexOf(dogId) === -1);\n\n        const defaultDogsRight = allDogs.filter(dogFilter);\n        const n = Math.ceil(defaultDogsRight.length / 2);\n        const defaultDogsLeft = defaultDogsRight.splice(0, n);\n\n        let dogsLeft = [];\n        if (object.dogsLeft && object.dogsLeft.length > 0) {\n            dogsLeft = object.dogsLeft.filter(filterLeft)\n                .map((dogId) => {\n                    const dog = allDogs.find(e => e.id === dogId) || getPlaceholder();\n                    // console.log('dogId', dogId, dog);\n                    return dog;\n                });\n        }\n\n        let dogsRight = [];\n        if (object.dogsRight && object.dogsRight.length > 0) {\n            dogsRight = object.dogsRight.filter(filterRight)\n                .map((dogId) => {\n                    const dog = allDogs.find(e => e.id === dogId) || getPlaceholder();\n                    // console.log('dogId', dogId, dog);\n                    return dog;\n                });\n        }\n\n\n        if (action === 'add') {\n            const dog = dogs.find(e => e.id === dogId);\n            if (dog) {\n                if (dogsLeft.length > dogsRight.length) {\n                    dogsRight.push(dog);\n                } else {\n                    dogsLeft.push(dog);\n                }\n            }\n        }\n        if (action === 'remove') {\n            const idxLeft = dogsLeft.findIndex(e => e.id === dogId);\n            if (idxLeft > -1) {\n                dogsLeft.splice(idxLeft, 1);\n            }\n            const idxRight = dogsRight.findIndex(e => e.id === dogId);\n            if (idxRight > -1) {\n                dogsRight.splice(idxRight, 1);\n            }\n        }\n        // I owe Mariska Kleintjens a beer for this one: \n        if (dogsLeft.length === 0 && dogsRight.length === 0) {\n            dogsLeft = defaultDogsLeft;\n            dogsRight = defaultDogsRight;\n        }\n        if (action) {\n            this.setState({\n                dogsLeft,\n                dogsRight,\n                dogPositionUpdated: true,\n            }, () => this.updateDogPositions());\n            \n        } else {\n            this.setState({\n                dogsLeft,\n                dogsRight,\n            });\n        }\n    }\n\n    addPlaceholderLeft = () => {\n        const { dogsLeft = [] } = this.state;\n        dogsLeft.push(getPlaceholder());\n        this.setState({\n            dogsLeft,\n            dogPositionUpdated: true,\n        });\n    }\n\n    addPlaceholderRight = () => {\n        const { dogsRight = [] } = this.state;\n        dogsRight.push(getPlaceholder());\n        this.setState({\n            dogsRight,\n            dogPositionUpdated: true,\n        });\n    }\n\n    removePlaceholder = ({ idx, list }) => {\n        if (list === 'dogsLeft') {\n            const { dogsLeft = [] } = this.state;\n            dogsLeft.splice(idx, 1);\n            this.setState({\n                dogsLeft,\n                dogPositionUpdated: true,\n            });\n        }\n        if (list === 'dogsRight') {\n            const { dogsRight = [] } = this.state;\n            dogsRight.splice(idx, 1);\n            this.setState({\n                dogsRight,\n                dogPositionUpdated: true,\n            });\n        }\n    }\n\n    async loadDog(props = this.props) {\n        const { showPositions } = this.props;\n\t\tconst { dogStore } = props.stores;\n        await dogStore.load({ query: { deceased: 0 }, addData: ['team', 'user', 'workoutSummary', 'vaccineStatuses', 'historyStatuses', 'vaccineLogStatuses', 'allDogs'] });\n\n        if (showPositions) {\n            this.dndDogs({});\n        }\n        this.getFilteredDogs();\n    }\n\n    clearAllDogs = async () => {\n        const { object, type, elementtype, field, updateField, isNew } = this.props;\n        await updateField({ id: object.id, field, value: [], type, elementtype, isNew, skipTimer: true });\n        this.resetDogPositions();\n    }\n    \n    toggleSearchField = () => {\n        const { showSearchField } = this.state;\n        this.setState({\n            showSearchField: showSearchField ? null : 1,\n        });\n    }\n\n    getList = id => this.state[id];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n            this.setState({\n                [source.droppableId]: items,\n                dogPositionUpdated: true,\n            });\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                dogsLeft: result.dogsLeft,\n                dogsRight: result.dogsRight,\n                dogPositionUpdated: true,\n            });\n        }\n    }\n\n    updateDogPositions = async () => {\n        const { dogsLeft = [], dogsRight = [] } = this.state;\n        const { object, updateField, isNew } = this.props;\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft.map(e => e.id), isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight.map(e => e.id), isNew, datatype: 'array' });\n        this.setState({ dogPositionUpdated: false });\n    }\n\n    resetDogPositions = async () => {\n        const { dogStore } = this.props.stores;\n        const { dogs = [] } = dogStore;\n        const { object, updateField, isNew } = this.props;\n        const dogFilter = (e) => object.dogs.indexOf(e.id) > -1;\n        const allDogs = toJS(dogs);\n\n        const dogsRight = allDogs.filter(dogFilter);\n        const n = Math.ceil(dogsRight.length / 2);\n        const dogsLeft = dogsRight.splice(0, n);\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft.map(e => e.id), isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight.map(e => e.id), isNew, datatype: 'array' });\n        this.setState({\n            dogsLeft,\n            dogsRight,\n            dogPositionUpdated: false,\n        });\n    }\n\n    clearDogPositions = async () => {\n        const { object, updateField, isNew } = this.props;\n        const dogsRight = [];\n        const dogsLeft = [];\n        await updateField({ id: object.id, field: 'dogsLeft', value: dogsLeft, isNew, datatype: 'array' });\n        await updateField({ id: object.id, field: 'dogsRight', value: dogsRight, isNew, datatype: 'array' });\n        this.setState({\n            dogsLeft,\n            dogsRight,\n            dogPositionUpdated: false,\n        });\n    }\n\n    changeFilter = (e) => {\n\t\tconst value = e.target.value;\n\t\tthis.setState({\n\t\t\tfilterby: value,\n\t\t});\n        util.set('dogs-filter', value);\n        this.loadDog();\n\t}\n\n    getFilteredDogs = (props = this.props) => {\n        const { filterby, filterText } = this.state;\n        const { object, filter = () => true } = props;\n        const { dogStore } = this.props.stores;\n\t\tconst { dogs = [] } = dogStore;\n\n        let dogFilter = filter;\n        if (object.dogs) {\n            switch (filterby) {\n                case 'all':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = () => true;\n                    }\n                    break;\n                case 'onlySelected':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = (e) => object.dogs.indexOf(e.id) > -1;\n                    }\n                    break;\n                case 'onlyTeam':\n                    if (filterText) {\n                        dogFilter = (e) => e.name.match(new RegExp(filterText, 'i')) || object.dogs.indexOf(e.id) > -1;\n                    } else {\n                        dogFilter = (e) => object.team === e.team || object.dogs.indexOf(e.id) > -1;\n                    }\n                    break;        \n                case 'leadOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.lead.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'pointOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.point.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'teamOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.team.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n                case 'wheelOnly':\n                    dogFilter = (e) => {\n                        if (object.dogs.indexOf(e.id) > -1) {\n                            return true;\n                        }\n                        if (util.getNestedValue(e, 'positions.wheel.distanceKm') > 0) {\n                            return true;\n                        }\n                        return false;\n                    };\n                    break;        \n            }\n        }\n        let filteredDogs = dogs.filter(dogFilter);\n        this.setState({\n            filteredDogs,\n        })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps);\n        if (nextProps.filter !== this.props.filter) {\n            this.getFilteredDogs(nextProps);\n        }\n    }\n\n    componentDidMount() {\n        this.loadDog();\n    }\n\n    render() {\n        const { filterby, filterText, showSearchField, dogsLeft = [], dogsRight = [], dogPositionUpdated, filteredDogs = [] } = this.state;\n        const { userStore, dogStore } = this.props.stores;\n\t\tconst { dogs = [] } = dogStore;\n        const { isAdmin, user } = userStore;\n        const { language = 'en' } = user;\n\n        const { saved = {}, object, field, title, icon, help, showPositions = false, currentTeam = {} } = this.props;\n        const value = toJS(object[field]) || [];\n\n        const allDogsInTeam = this.findAllDogsInTeams();\n        const teamNames = object.teams ? object.teams.map(e => userStore.findTeam(e)) : [];\n\n        return (\n            <div class={`form-group  mb-5 pb-1 border-bottom ${saved[`${field}.${object.id}`] ? 'is-valid' : ''}`}>\n                <span class='float-right' onClick={this.toggleSearchField}>\n                    <i class='fas fa-search' />\n                </span>\n                <button class='btn btn-sm btn-link float-right mr-5' onClick={this.clearAllDogs}>\n                    <i class='fas fa-eraser' /> <Text id='dog.dogs.remove-all-dogs'>Fjern alle hundene</Text>\n                </button>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                <div class='container-fluid px-0'>\n                    {showSearchField && <div class='row'>\n                        <div class='col-12'>\n                            <Localizer>\n                                <input\n                                    class='form-control form-control-sm'\n                                    type='text'\n                                    placeholder={<Text id='dog.dogs.search-for-dogs'>Søk etter hund</Text>}\n                                    value={filterText}\n                                    onInput={linkState(this, 'filterText')}\n                                />\n                            </Localizer>\n                        </div>\n                    </div>}\n                    <div class='row'>\n                        <div class='col-12'>\n                            <div class='form-row align-items-center'>\n                                <div class='col-auto my-2 mx-auto'>\n                                    <select class='custom-select'\n                                        style='background-color: inherit; border: none; padding-top: 0; padding-bottom: 0; height: 1.4em; font-size: 0.8em;'\n                                        onInput={this.changeFilter}\n                                    >\n                                        <option value='' selected={!filterby}>-- <Text id='dog.dogs.choose-filter'>Choose filter</Text> ---</option>\n                                        <option value='all' selected={filterby === 'all'}><Text id='dog.dogs.show-all'>Vis alle</Text></option>\n                                        <option value='onlySelected' selected={filterby === 'onlySelected'}><Text id='dog.dogs.show-only-selected'>Vis kun valgte</Text></option>\n                                        <option value='onlyTeam' selected={filterby === 'onlyTeam'}><Text id='dog.dogs.show-only-team-dogs'>Vis kun hundene i teamet</Text></option>\n                                        <option value='leadOnly' selected={filterby === 'leadOnly'}><Text id='dog.dogs.show-lead-dogs-only'>Vis kun lederhunder</Text></option>\n                                        <option value='pointOnly' selected={filterby === 'pointOnly'}><Text id='dog.dogs.show-point-dogs-only'>Vis kun pointhunder</Text></option>\n                                        <option value='teamOnly' selected={filterby === 'teamOnly'}><Text id='dog.dogs.show-team-dogs-only'>Vis kun teamhunder</Text></option>\n                                        <option value='wheelOnly' selected={filterby === 'wheelOnly'}><Text id='dog.dogs.show-wheel-dogs-only'>Vis kun wheelhunder</Text></option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='row'>\n                        {allDogsInTeam.length > 0 && <>\n                            <button class='btn btn-primary btn-block'\n                                onClick={this.addAllDogsInTeam}\n                            >\n                               <i class='fas fa-plus mr-2' /> <Text id='dog.dogs.add-all-in-team' fields={{ total: allDogsInTeam.length }}>Add all dogs in team</Text>{currentTeam.name ? `: ${currentTeam.name}` : ''}\n                               {teamNames && teamNames.length > 0 && <span class='font-weight-lighter'>\n                                    , {teamNames.map((name, idx) => <>{idx > 0 ? ', ' : ''}{name}</>)}\n                                </span>}\n                            </button>\n                        </>}\n\n                        {util.isArray(dogs) && filteredDogs.map(dog => {\n                            const dogStatus = userStore.findDogstatus({ status: dog.status, language });\n                            const dogPosition = userStore.findDogposition({ position: dog.position, language });\n                            const dogHistoryStatuses = dogStore.findHistoryStatuses(dog.id);\n                            return (\n                                <div class='col-6 col-sm-6 col-md-6 col-lg-6 mb-1'>\n                                    <div class={`border rounded px-3 pt-2 pb-1 ${value.indexOf(dog.id) > -1 ? 'bg-success' : ''} position-relative`}\n                                        onClick={this.toggleDog}\n                                        id='dogContainer'\n                                        data-id={dog.id}\n                                        style='padding: .3rem !important; line-height: 1.1em; cursor: pointer; pointer-events: inherit;'\n                                    >\n                                        {dogPosition && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-${dogPosition.class || 'primary'} mr-3`}>{dogPosition.icon && <i class={dogPosition.icon} />} {dogPosition.name}</span>\n                                        </small>}\n\n                                        {filterby === 'leadOnly' && util.getNestedValue(dog, 'positions.lead.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-lead'>Lead</Text>: {util.format(util.getNestedValue(dog, 'positions.lead.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'pointOnly' && util.getNestedValue(dog, 'positions.point.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-point'>Point</Text>: {util.format(util.getNestedValue(dog, 'positions.point.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'teamOnly' && util.getNestedValue(dog, 'positions.team.distanceKm')> 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-team'>Team</Text>: {util.format(util.getNestedValue(dog, 'positions.team.distanceKm'), 0)}km</span>\n                                        </small>}\n                                        {filterby === 'wheelOnly' && util.getNestedValue(dog, 'positions.wheel.distanceKm') > 0 && <small class='position-absolute' style='left:5px; top: 32px;'>\n                                            <span class={`badge badge-secondary mr-3`}><Text id='dogs.sort-wheel'>Wheel</Text>: {util.format(util.getNestedValue(dog, 'positions.wheel.distanceKm'), 0)}km</span>\n                                        </small>}\n\n                                        <div class='d-flex'>\n                                            <div class={`text-center border rounded-circle imageRounded imageRoundedSmall text-muted pt-2`} style={`${dog.image ? `background-image: url(\"${dog.image.s3ThumbLink}\");` : ''}`}>\n                                                {/* {!dog.image && <i class='fas fa-dog' style='font-size: 20px;' />} */}\n                                                {!dog.image && <span class='font-weight-lighter' style='font-size: 20px;'>{util.ucfirst(dog.name, true)}</span>}\n                                            </div>\n                                            <div class='flex-grow-1 pl-2 pr-1'\n                                                style={`border-right: 4px solid ${userStore.findHarness(dog.harness, 'colorNonstop')} !important; line-height: 0.9em;`}\n                                            >\n                                                <small>\n                                                    <small class='float-right'>\n                                                        {dog.birth && <span class='mr-1'>{util.age(dog.birth, dog.deceased)}</span>}\n                                                        {dog.gender === 'female' ? <i class='fas fa-venus' /> : <i class='fas fa-mars' />}\n                                                    </small>\n                                                    {dog.shortname || dog.name}<br />\n                                                    <div style='line-height: 0.8em;'><small>{userStore.findTeam(dog.team)}</small></div>\n                                                </small>\n                                                <small class='float-right'>\n                                                    {dogStatus && dogStatus.id && <span class={`badge badge-${dogStatus.class} mr-2 font-weight-light`}>{dogStatus.icon && <i class={dogStatus.icon} />} {dogStatus.name}</span>}\n                                                    {dog.specialNeeds && <span class={`badge badge-warning mr-2 font-weight-light`}><i class='fas fa-exclamation-triangle' /> {dog.specialNeeds}</span>}\n                                                    {dogHistoryStatuses && dogHistoryStatuses.map(v => (\n                                                        <span class={`badge badge-warning mr-2`} title={util.isoDate(v.endDate, false, false, true)}>{v.title}</span>\n                                                    ))}\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                {saved[`${field}.${object.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='dog.dogs.saved-changes'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n\n\n                {showPositions && <>\n                    <div class='container-fluid px-0 clearfix'>\n                        <div class='row'>\n                            <div class='col-12'>\n                                <h5><Text id='dog.dogs.dogs-positions'>Posisjoner i spannet</Text></h5>\n                            </div>\n                        </div>\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <div class='row'>\n                                <div class='col-6 pr-0' style='min-height: 100px;'>\n                                    <Droppable droppableId=\"dogsLeft\">\n                                        {(provided, snapshot) => (\n                                            <List provided={provided} snapshot={snapshot} innerRef={provided.innerRef} className='ml-auto'>\n                                                {dogsLeft && dogsLeft.map((dog, idx) =>\n                                                    <Draggable key={`${dog.id}-${dog.unique}`} draggableId={`dragId-${dog.id}-${dog.unique}`} index={idx}>\n                                                        {provided => (\n                                                            <Dog provided={provided} snapshot={snapshot} innerRef={provided.innerRef} dog={dog} removePlaceholder={this.removePlaceholder} idx={idx} list='dogsLeft' />\n                                                        )}\n                                                    </Draggable>\n                                                )}\n                                                {provided.placeholder}\n                                            </List>\n                                        )}\n                                    </Droppable>\n                                </div>\n                                <div class='col-6 pl-0' style='min-height: 100px;'>\n                                    <Droppable droppableId=\"dogsRight\">\n                                        {(provided, snapshot) => (\n                                            <List provided={provided} snapshot={snapshot} innerRef={provided.innerRef} className='mr-auto'>\n                                                {dogsRight && dogsRight.map((dog, idx) =>\n                                                    <Draggable key={`${dog.id}-${dog.unique}`} draggableId={`dragId-${dog.id}-${dog.unique}`} index={idx}>\n                                                        {provided => (\n                                                            <Dog provided={provided} snapshot={snapshot} innerRef={provided.innerRef} dog={dog} removePlaceholder={this.removePlaceholder} idx={idx} list='dogsRight' />\n                                                        )}\n                                                    </Draggable>\n                                                )}\n                                                {provided.placeholder}\n                                            </List>\n                                        )}\n                                    </Droppable>\n                                </div>\n                            </div>\n                        </DragDropContext>\n                        <div class='row mb-3 mt-2'>\n                            <div class='col-6 pr-0'>\n                                <button class='btn btn-sm btn-outline-secondary' onClick={this.addPlaceholderLeft}>\n                                    <i class='fas fa-plus-circle' /> <Text id='dog.dogs.addplaceholder'>Add placeholder</Text>\n                                </button>\n                            </div>\n                            <div class='col-6 pl-0'>\n                                <button class='float-right btn btn-sm btn-outline-secondary' onClick={this.addPlaceholderRight}>\n                                    <i class='fas fa-plus-circle' /> <Text id='dog.dogs.addplaceholder'>Add placeholder</Text>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='container-fluid px-0'>\n                        <div class='row'>\n                            <div class='col-6'>\n                                <button class={`btn btn-sm btn-${dogPositionUpdated ? 'primary' : 'secondary'}`} onClick={this.updateDogPositions}>\n                                    <i class='fas fa-save' /> <Text id='dog.dogs.saveDogPositions'>Save dog positions</Text>\n                                </button>\n                            </div>\n                            <div class='col-6'>\n                                <button class={`float-right btn btn-sm btn-warning`} onClick={this.resetDogPositions}>\n                                    <i class='fas fa-sync' /> <Text id='dog.dogs.resetDogPositions'>Reset dog positions</Text>\n                                </button>\n                            </div>\n                        </div>\n                        <div class='row mt-2'>\n                            <div class='col-6'>\n                                &nbsp;\n                            </div>\n                            <div class='col-6'>\n                                <button class={`float-right btn btn-sm btn-link`} onClick={this.clearDogPositions}>\n                                    <i class='fas fa-eraser' /> <Text id='dog.dogs.clearDogPositions'>Clear dog positions</Text>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n\n            </div>\n        );\n    }\n}\n\nexport default Dogs;\n"],"sourceRoot":""}