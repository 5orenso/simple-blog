{"version":3,"sources":["webpack:///./routes/settings/teamDetail.js"],"names":["initialState","searchText","showInfo","MARGIN_TOP_BACK","mu","marginTopBack","Settings","withText","public","id","publicHelp","publicWorkouts","publicWorkoutsHelp","publicWorkoutDetails","publicWorkoutDetailsHelp","publicWorkoutSummary","publicWorkoutSummaryHelp","publicTrophys","publicTrophysHelp","publicMemories","publicMemoriesHelp","publicDogs","publicDogsHelp","observer","Component","constructor","props","super","loadTeam","async","teamStore","stores","load","teamid","toggleInfo","e","name","target","closest","dataset","this","state","setState","toggleSetting","field","team","value","updateField","saveField","updateSetting","back","history","goBack","componentDidMount","render","userStore","teamTypes","teamAmbitions","user","language","settings","class","style","onClick","map","setting","idx","data-name","type","onInput","checked","for","className","activeClassName","data-value","lang","ambitions"],"mappings":"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","file":"107.chunk.46a3c.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport { Link } from 'preact-router/match';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport { route } from 'preact-router';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tsearchText: '',\n    showInfo: {},\n};\n\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\n\n@withText({\n    public: <Text id='teams.public'>Public visible</Text>,\n    publicHelp: <Text id='teams.public-help'>Should it be possible to follow your team? All follow-requests has to be approved by you.</Text>,\n    publicWorkouts: <Text id='teams.public-workouts'>Public workouts</Text>,\n    publicWorkoutsHelp: <Text id='teams.public-workouts-help'>Should your workouts be visible to your followers?</Text>,\n    publicWorkoutDetails: <Text id='teams.public-workouts-details'>Public workouts details</Text>,\n    publicWorkoutDetailsHelp: <Text id='teams.public-workouts-details-help'>Should your workouts details be visible to your followers?</Text>,\n    publicWorkoutSummary: <Text id='teams.public-workouts-summary'>Public workouts summary</Text>,\n    publicWorkoutSummaryHelp: <Text id='teams.public-workouts-summary-help'>Should your workout summary be visible to your followers?</Text>,\n    publicTrophys: <Text id='teams.public-trophys'>Public trophys</Text>,\n    publicTrophysHelp: <Text id='teams.public-trophys-help'>Should your trophys be visible to your followers?</Text>,\n    publicMemories: <Text id='teams.public-memories'>Public memories</Text>,\n    publicMemoriesHelp: <Text id='teams.public-memories-help'>Should your memories be visible to your followers?</Text>,\n    publicDogs: <Text id='teams.public-dogs'>Public dogs</Text>,\n    publicDogsHelp: <Text id='teams.public-dogs-help'>Should your dogs be visible to your followers?</Text>,\n})\n@observer\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    loadTeam = async (props = this.props) => {\n\t\tconst { teamStore, userStore, workoutStore } = props.stores;\n        await teamStore.load(props.teamid, false, {\n            // addData: ['dogs', 'users', 'followers', 'blockedFollowers'],\n        });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.loadTeam();\n\t}\n\n    toggleInfo = (e) => {\n        const { name } = e.target.closest('i').dataset;\n        const { showInfo } = this.state;\n        showInfo[name] = !showInfo[name];\n        this.setState({ showInfo });\n\t}\n\n    toggleSetting = async (field) => {\n        const { teamStore } = this.props.stores;\n\t\tconst { team } = teamStore;\n        const { id } = team;\n        const value = team[field] ? 0 : 1;\n        teamStore.updateField(id, field, value);\n        await teamStore.saveField(id, field, value);\n    }\n\n    updateSetting = async (field, value) => {\n        const { teamStore } = this.props.stores;\n\t\tconst { team } = teamStore;\n        const { id } = team;\n        teamStore.updateField(id, field, value);\n        await teamStore.saveField(id, field, value);\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\trender() {\n\t\tconst { teamStore, userStore } = this.props.stores;\n        const { teamTypes, teamAmbitions, user } = userStore;\n        const { language = 'en' } = user;\n        const { team } = teamStore;\n        const { searchText, showInfo = {}, settings = {} } = this.state;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style='margin-bottom: 200px; margin-top: 60px;'>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\n\t\t\t\t<div class='row m-2'>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t\t<h1><Text id='settings.team'>Team</Text></h1>\n                    </div>\n                </div>\n\n\t\t\t\t<div class='row m-2'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'>{team.name}</h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {['public'].map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting] || setting}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleSetting(setting)} checked={team[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2' style={`opacity: ${team.public ? 1.0 : 0.2};`}>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='teams.public-settings'>Public settings</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3 bg-light rounded-lg' style={`font-size: 1.2em; opacity: ${team.public ? 1.0 : 0.2};`}>\n                        {['publicWorkouts', 'publicWorkoutSummary', 'publicWorkoutDetails', 'publicTrophys', 'publicMemories', 'publicDogs'].map((setting, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1' style='line-height: 1.0em;'>\n                                        {this.props[setting] || setting}\n                                        {this.props[`${setting}Help`] && <i class='fas fa-info-circle text-muted ml-2' onClick={this.toggleInfo} data-name={setting} />}\n                                        {this.props[`${setting}Help`] && showInfo[setting] && <>\n                                            <br /><small class='text-muted'>{this.props[`${setting}Help`]}</small>\n                                        </>}\n                                    </span>\n                                    <div class='custom-control custom-switch custom-switch-lg mt-2 ml-3' style=\"transform: scale(1.8);\">\n                                        <input type='checkbox' class='custom-control-input' id={`settings${setting}`} onInput={() => this.toggleSetting(setting)} checked={team[setting]} />\n                                        <label class='custom-control-label' for={`settings${setting}`} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n                    \n\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-3 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='teams.type'>Type</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-0 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {teamTypes && teamTypes.map((type, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1'>\n                                        <Link className='stretched-link' activeClassName={'active'}\n                                            data-value={type.id}\n                                            onClick={() => this.updateSetting('type', type.id)}\n                                        >\n                                            {language === 'no' ? type.name : (type.lang[language] || type.name)}\n                                        </Link>\n                                        {/* <xmp>{JSON.stringify(type, null, 4)}</xmp> */}\n                                    </span>\n                                    {team.type === type.id && <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                        <i class='fas fa-check text-primary' />\n                                    </button>}\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n                        <small class='text-muted'><Text id='teams.type-help'>Type team</Text></small>\n                    </div>\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-5 mb-2'>\n\t\t\t\t\t\t<h5 class='m-0 text-muted'><Text id='teams.ambitions'>Ambisjoner</Text></h5>\n                    </div>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-0 bg-light rounded-lg' style='font-size: 1.2em;'>\n                        {teamAmbitions && teamAmbitions.map((type, idx) => <>\n                            <div class={`row ${idx > 0 ? 'border-top' : ''}`}>\n                                <div class='col-12 py-2 d-flex align-items-center position-relative'>\n                                    <span class='flex-grow-1'>\n                                        <Link className='stretched-link' activeClassName={'active'}\n                                            data-value={type.id}\n                                            onClick={() => this.updateSetting('ambitions', type.id)}\n                                        >\n                                            {language === 'no' ? type.name : (type.lang[language] || type.name)}\n                                        </Link>\n                                        {/* <xmp>{JSON.stringify(type, null, 4)}</xmp> */}\n                                    </span>\n                                    {team.ambitions === type.id && <button class='btn btn-link btn-lg py-0 px-1 mr-3'>\n                                        <i class='fas fa-check text-primary' />\n                                    </button>}\n                                </div>\n                            </div>\n                        </>)}\n\t\t\t\t\t</div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mb-3'>\n                        <small class='text-muted'><Text id='teams.ambitions-help'>Ambisjonsnivå til teamet.</Text></small>\n                    </div>\n\n                </div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Settings;\n"],"sourceRoot":""}