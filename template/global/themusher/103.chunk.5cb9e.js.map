{"version":3,"sources":["webpack:///./routes/users/editPassword.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","isCapsLock","passwordType","password","passwordConfirm","UserEdit","observer","props","togglePassword","state","setState","updateCapsLockStatus","changePassword","stores","userStore","status","passwordChanged","passwordChangeFailed","back","history","goBack","updateTimer","loadUser","this","getInfo","componentDidMount","render","email","user","passwordScore","util","scorePassword","passwordScoreNormalized","normalizeBetween","passwordStrength","checkPassStrength","passwordsAreEqual","isOkToChangePassword","class","style","onClick","id","href","for","type","autoComplete","onInput","linkState","value","onKeypress","e","role","disabled","Component"],"mappings":"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","file":"103.chunk.5cb9e.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {\n    isCapsLock: false,\n    passwordType: 'password',\n    password: '',\n    passwordConfirm: '',\n};\n\n@observer\nclass UserEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    async loadUser() {\n\t\tconst { userStore } = this.props.stores;\n        userStore.getInfo();\n    }\n\n    togglePassword = () => {\n        let { passwordType } = this.state;\n        if (passwordType === 'password') {\n            passwordType = 'text';\n        } else {\n            passwordType = 'password';\n        }\n        this.setState({ passwordType });\n    }\n\n    updateCapsLockStatus = (isCapsLock) => {\n        this.setState({\n            isCapsLock,\n        });\n    }\n\n    changePassword = async () => {\n        const { password, passwordConfirm } = this.state;\n        const { userStore } = this.props.stores;\n        const result = await userStore.changePassword({ password, passwordConfirm });\n        if (result.status === 200) {\n            this.setState({\n                password: '',\n                passwordConfirm: '',\n                passwordChanged: true,\n                passwordChangeFailed: false,\n            });\n        } else {\n            this.setState({\n                passwordChanged: false,\n                passwordChangeFailed: true,\n            });\n\n        }\n\n    }\n\n    back = () => {\n        const { history } = this.props.stores;\n        history.goBack();\n    }\n\n\tcomponentDidMount() {\n        this.loadUser();\n    }\n\n\trender() {\n        const { password, passwordConfirm, passwordType, isCapsLock, passwordChanged, passwordChangeFailed } = this.state;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n        const { email } = user;\n        const passwordScore = util.scorePassword(password);\n        const passwordScoreNormalized = util.normalizeBetween(passwordScore, 0, 80, 0, 100, 100);\n        const passwordStrength = util.checkPassStrength(password, ['bg-danger', 'bg-warning', 'bg-success', 'bg-success']);\n        const isValidPassword = passwordScoreNormalized > 30;\n        const passwordsAreEqual = password === passwordConfirm;\n        const isOkToChangePassword = passwordsAreEqual && isValidPassword;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <button class='btn btn-link pl-0 fixed-top text-primary'\n                    style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                    onClick={this.back}>\n                    <i class='fas fa-arrow-circle-left' />\n                </button>\n\t\t\t\t<div class='row'>\n\t\t\t\t\t<div class='offset-0 col-12 offset-sm-2 col-sm-8 offset-lg-4 col-lg-4' style='padding-left: 35px;'>\n\n                        {passwordChanged ? <div>\n                            <h5><Text id='users.edit-password-changed'>Passord er endret</Text>: {email}</h5>\n                            <a href='/users/'><i class='fas fa-arrow-circle-left' /><Text id='users.back-to-profile'>Tilbake til profilen</Text></a>\n                        </div> : <div>\n                            <h5><Text id='users.edit-password'>Endre passord</Text>: {email}</h5>\n\n                            <div class='form-group'>\n                                <label for='passwordInput'><i class='fas fa-key' /> <Text id='login.password'>Passord</Text></label>\n                                <div class='input-group'>\n                                    <input type={passwordType}\n                                        class={`form-control`}\n                                        id='passwordInput'\n                                        autoComplete='new-password'\n                                        onInput={linkState(this, 'password')}\n                                        value={password}\n                                        onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                    />\n                                    <div class='input-group-append'>\n                                        <button class='btn btn-outline-secondary' type='button'\n                                            onClick={this.togglePassword}\n                                        >\n                                            <i class={`fas fa-eye${passwordType === 'text' ? '-slash' : ''}`} />\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='progress' style='height: 2px;'>\n                                    <div class={`progress-bar ${passwordStrength}`} role='progressbar' style={`width: ${passwordScoreNormalized}%;`} />\n                                </div>\n                                <div class='invalid-feedback' style={`${passwordScoreNormalized > 0 && passwordScoreNormalized < 30 ? 'display: block' : ''}`}>\n                                    <Text id='register.password-too-weak'>Passordet ditt er for svakt. Forsøk et annet passord eller legg til flere bokstaver.</Text>\n                                </div>\n                                <div class='valid-feedback text-warning' style={`${passwordScoreNormalized >= 30 && passwordScoreNormalized < 70 ? 'display: block' : ''}`}>\n                                    <Text id='register.password-weak'>Passordet ditt er svakt, men vis skal gjøre vårt beste for å passe på deg.</Text>\n                                </div>\n                                <div class='valid-feedback' style={`${passwordScoreNormalized >= 70 ? 'display: block' : ''}`}>\n                                    <Text id='register.password-ok'>Passordet ditt ser bra ut.</Text>\n                                </div>\n                            </div>\n                            {isCapsLock && <div class='alert alert-danger' role='alert'>\n                                <Text id='login.caps-lock-on'>CAPS LOCK er på!</Text>\n                            </div>}\n\n                            <div class='form-group'>\n                                <label for='passwordInput'><i class='fas fa-key' /> <Text id='login.password-confirm'>Confirm passord</Text></label>\n                                <div class='input-group'>\n                                    <input type={passwordType}\n                                        class={`form-control`}\n                                        id='passwordInput'\n                                        autoComplete='new-password'\n                                        onInput={linkState(this, 'passwordConfirm')}\n                                        value={passwordConfirm}\n                                        onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                    />\n                                    <div class='input-group-append'>\n                                        <button class='btn btn-outline-secondary' type='button'\n                                            onClick={this.togglePassword}\n                                        >\n                                            <i class={`fas fa-eye${passwordType === 'text' ? '-slash' : ''}`} />\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class='valid-feedback' style={`${password && passwordsAreEqual ? 'display: block' : ''}`}>\n                                    <Text id='users.passwords-matches'>Passordene er like.</Text>\n                                </div>\n                            </div>\n                            \n                            <button class={`btn btn-${isOkToChangePassword ? '' : 'outline-'}success`}\n                                disabled={!isOkToChangePassword}\n                                onClick={this.changePassword}\n                            >\n                                <Text id='users.edit-password'>Endre passord</Text>\n                            </button>\n\n                        </div>}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UserEdit;\n"],"sourceRoot":""}