{"version":3,"sources":["webpack:///./routes/tv/top10.js","webpack:///./routes/tv/style.css"],"names":["byBib","a","b","aHas","musher","bib","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","isLoading","contentIsNotLoaded","reloadInSec","reloadLastEpoch","reloadIsActive","observer","Component","constructor","props","super","initComponent","Math","floor","Date","getTime","this","setState","tickReloadTimeer","state","updateTimer","now","clearTimeout","tick","setTimeout","componentDidMount","componentWillUnmount","render","reloadPercent","util","normalizeBetween","class","style","role","aria-valuenow","aria-valuemin","aria-valuemax","TvTop10","loadLiveRaceResults","async","teamIds","focusOnMushers","raceStore","stores","race","getRaceTrackerData","raceTrackerRace","getRaceTrackerActiveTeams","loadRaceResults","raceid","loadWorkoutSummary","getWorkoutSummaryActiveTeams","loadRace","appState","classid","load","selectedClassIds","selectedClassId","toggleSelectedClassId","allTeamIds","classes","filter","currentClass","id","contestants","length","map","team","flat","loadTeams","join","liveRace","getAllClassesSortedBy","getClassById","raceTrackerResults","getRacetrackerResults","reload","RELOAD_INTERVAL_IN_SEC","toggleFocusOnMusher","e","musherId","target","parentElement","dataset","musherid","inputRef","componentWillReceiveProps","nextProps","userStore","position","limit","user","teams","language","lastAllowedChangeDate","endDate","setHours","getHours","find","data","line","lineData","raceTrackerMapLine","parseInt","Bib","contestant","sort","slice","hoverElement","hoverelementonly","distance","data-id","href","title","colspan","idx","currentTeam","currentResults","normalizedDuration","isDone","totalWorkoutTimeUsedSec","getTotalsByTeamId","getRankingColor","onClick","data-musherid","indexOf","flag","firstname","lastname","nonstop","secToHms","duration","rest","src","height","module","exports"],"mappings":"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","file":"15.chunk.2a375.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport style from './style.css';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\nfunction byBib(a, b) {\n    const aHas = typeof a.musher !== 'undefined';\n    const bHas = typeof b.musher !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.musher.bib - b.musher.bib) || 0;\n}\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t\treloadLastEpoch,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n\t\tconst { reloadIsActive, reloadLastEpoch } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass TvTop10 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    // async loadRace(props = this.props) {\n\t// \tthis.setState({ isLoading: true });\n\t// \tconst { raceStore } = props.stores;\n\t// \tconst { raceid } = props;\n    //     await raceStore.load(raceid);\n    //     const { race } = raceStore;\n\t// \tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n    //         return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t// \t}).flat();\n\t// \tif (allTeamIds.length > 0 && raceid) {\n\t// \t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t// \t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t// \t\traceStore.getWorkoutSummaryActiveTeams();\n\t// \t}\n\t// \traceStore.getAllClassesSortedBy();\n\n\t// \t// Set reload timer\n\t// \tclearTimeout(this.updateTimer.reload);\n\t// \tthis.updateTimer.reload = setTimeout(async () => {\n\t// \t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \t\tthis.setState({ reloadLastEpoch });\n\t// \t\tthis.loadRace();\n\t// \t}, RELOAD_INTERVAL_IN_SEC * 1000);\n\n\t// \tthis.setState({\n\t// \t\tisLoading: false,\n\t// \t\tcontentIsNotLoaded: false,\n\t// \t});\n\t// }\n\n    loadLiveRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { race } = raceStore;\n        await raceStore.getRaceTrackerData(race.raceTrackerRace);\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers);\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n    }\n\n    loadRace = async (props = this.props) => {\n        this.setState({ isLoading: true });\n        const { raceStore, appState } = props.stores;\n        const { raceid, classid } = props;\n        await raceStore.load(raceid);\n        const { race } = raceStore;\n        const { focusOnMushers } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = classid || selectedClassIds[0];\n\n        if (classid) {\n            appState.toggleSelectedClassId(classid, true);\n        }\n\n        const allTeamIds = race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n            })\n            .flat();\n        if (allTeamIds.length > 0) {\n            await raceStore.loadTeams(allTeamIds.join(','));\n        }\n        if (race.liveRace > 0) {\n            await this.loadLiveRaceResults(this.props, allTeamIds, focusOnMushers);\n\n        } else {\n            await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n        }\n\n        // const allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n        //     return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n        // }).flat();\n\n        // if (allTeamIds.length > 0) {\n        //     await raceStore.loadTeams(allTeamIds.join(','));\n        //     if (race.liveRace > 0) {\n        //         await this.loadLiveRaceResults(props, allTeamIds, focusOnMushers);\n\n        //     } else {\n        //         await this.loadRaceResults(props, allTeamIds, focusOnMushers);\n        //     }\n        // }\n        raceStore.getAllClassesSortedBy();\n\n        const currentClass = raceStore.getClassById(selectedClassId);\n        if (currentClass && currentClass.raceTrackerResults) {\n            raceStore.getRacetrackerResults(currentClass.raceTrackerResults);\n        }\n\n        // Set reload timer\n        clearTimeout(this.updateTimer.reload);\n        this.updateTimer.reload = setTimeout(async () => {\n            const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n            this.setState({ reloadLastEpoch });\n            this.loadRace(props);\n        }, RELOAD_INTERVAL_IN_SEC * 1000);\n\n        this.setState({ isLoading: false });\n    }\n\n    toggleFocusOnMusher = (e) => {\n\t\tconst musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n\t\tconst { appState, raceStore } = this.props.stores;\n\t\tappState.toggleFocusOnMusher(musherId);\n\n\t\tconst { focusOnMushers } = appState;\n\n        const { race } = raceStore;\n        if (race.liveRace > 0) {\n            raceStore.getRaceTrackerActiveTeams(null, focusOnMushers);\n        } else {\n            raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers);\n        }\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid) {\n            this.loadRace(nextProps);\n        }\n\t}\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n        const { classid, position = 'right', limit = 10 } = this.props;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], focusOnMushers = [] } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers, raceTrackerResults } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n        const currentClass = race.classes ? race.classes.find(e => e.id === classid) || {} : {};\n\n        let contestants = [];\n        if (raceTrackerResults && raceTrackerResults.data) {\n            contestants = raceTrackerResults.data.map((line) => {\n                const lineData = raceStore.raceTrackerMapLine(line);\n                const bib = parseInt(lineData.Bib, 10);\n                let contestant = {};\n                if (classes && classes[currentClass.id].contestants) {\n                    contestant = classes[currentClass.id].contestants.find(e => e.musher.bib === bib) || {};\n                }\n                return contestant;\n            });\n        } else if (classes[currentClass.id] && classes[currentClass.id].contestants) {\n            contestants = classes[currentClass.id].contestants.sort(byBib).slice(0, limit).map(contestant => contestant);\n        }\n\n        return (<>\n            <div class={`fixed-top ${style.hoverElement}`} style='height: 100px;'>\n                <div class={`${style.hoverelementonly}`}>\n                    <div class={`row`}>\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                            <div class='col'>\n                                <a\n                                    class={`btn btn-block ${currentClass.id === classid ? 'btn-success' : 'btn-outline-success'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    data-id={currentClass.id}\n                                    href={`/tv/top10/${race.id}/${currentClass.id}/${position}`}\n                                >\n                                    Left: {currentClass.title}\n                                </a>\n                                <a\n                                    class={`btn btn-link text-nowrap ${position === 'left' ? 'float-right' : 'float-left'}`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    data-id={currentClass.id}\n                                    href={`/tv/top10/${race.id}/${currentClass.id}/${position === 'left' ? 'right' : 'left'}`}\n                                >\n                                    {position === 'left' ? <>\n                                        right <i class='fas fa-angle-right' />\n                                    </> : <>\n                                        <i class='fas fa-angle-left' /> left\n                                    </>}\n                                </a>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </div>\n\t\t\t<div class='container-fluid pt-5' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP}; height: calc(100% - ${MARGIN_BOTTOM} - ${MARGIN_TOP});`}>\n                <div class='row'>\n                    <div class={position === 'left' ? 'col-4 ml-5' : 'col-4 offset-8 mr-5'}\n                        style='font-size: 1.5em; line-height: 1.0em;'\n                    >\n                        {/* <div\n                            class='bg-light rounded-lg mr-5 p-4'\n                            style='font-size: 2.0em; line-height: 1.0em;'\n                        > */}\n\n                            {/* <div\n                                class=' text-center py-3 mb-3'\n                                style='background: linear-gradient(#b0b0b0, #e0e0e0, #808080); color: #000000;'\n                            >\n                                <strong>{race.title}</strong>\n                            </div> */}\n\n                            <table class='table table-sm table-borderless rounded-lg'>\n                                <thead>\n                                    <tr>\n                                        <td\n                                            colspan='2'\n                                            class='px-4 py-4 overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 10px 0 0 0; font-size: 1.4em;'\n                                        >\n                                            <nobr>{currentClass.title}</nobr>\n                                        </td>\n                                        <td\n                                            class='px-3 text-center py-4 overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 0 10px 0 0 ; font-size: 1.1em;'\n                                        >\n                                            Time\n                                        </td>\n                                    </tr>\n                                </thead>\n                                <tbody\n                                    style='\n                                        background-color: #1C1F4C;\n                                        background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                        background-size: cover !important;\n                                        background-position: 0 0;\n                                    '>\n                                    {contestants && contestants.map((contestant, idx) => {\n                                    // {raceTrackerResults && raceTrackerResults.data && raceTrackerResults.data.slice(0, limit).map((line, idx) => {\n                                    //     const lineData = raceStore.raceTrackerMapLine(line);\n                                    //     const bib = parseInt(lineData.Bib, 10);\n                                    //     let contestant = {};\n                                    //     if (classes && classes[currentClass.id].contestants) {\n                                    //         contestant = classes[currentClass.id].contestants.find(e => e.musher.bib === bib) || {};\n                                    //     }\n                                    // {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.slice(0, limit).map((contestant, idx) => {\n\n                                        const { musher = {}, currentTeam = {}, currentStages, currentResults = {}, completed, duration,\n                                            normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                            flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                            finishedDate, totalWorkoutTimeUsedSec,\n                                        } = contestant;\n\n                                        const totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n                                        return (<>\n                                            <tr style='border-bottom: 1px solid #7B312F;'>\n                                                <td\n                                                    class='text-center align-middle ml-0 pl-0'\n                                                    style='width: 50px; color: #ffffff; font-size: 1.2em; line-height: 1.2em;'\n                                                >\n                                                    <div class='d-flex justify-content-start'>\n                                                        <div class='pl-3 pr-2 w-100 clearfix rounded-pill-right' style={`background-color: ${mu.getRankingColor(idx + 1)}`}>\n                                                            {musher.bib || idx + 1}\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='px-3 py-3'\n                                                    style='color: #ffffff; font-size: 1.2em;'\n                                                >\n                                                    <div class='text-overflow' style='max-width: 368px; line-height: 1.1em;'>\n                                                        <span class='float-right' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-star text-warning' /> : <i class='far fa-star' />}</span>\n                                                        <nobr>\n                                                            {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                            {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                                        </nobr>\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='text-center align-middle'\n                                                    style='width: 150px; color: #ffffff; font-size: 1.2em;'\n                                                >\n\n                                                    {race.nonstop ? <>\n                                                        <nobr>{util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr> */}\n                                                    </> : <>\n                                                        {isDone === 1 ? <>\n                                                            <nobr>{util.secToHms(normalizedDuration) || 'n/a'}</nobr>\n                                                        </> : <>\n                                                            <nobr>{util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr>\n                                                        </>}\n\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr> */}\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr> */}\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br /> */}\n                                                        {/* {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>} */}\n                                                        {/* {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>} */}\n                                                    </>}\n                                                    {/* {raceStatus(musher)} */}\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                    {/* <tr>\n                                        <td\n                                            colspan='3'\n                                            class='text-center'\n                                        >\n                                            <img src='https://themusher.app/assets/logo-qpaws-dark.png' height='70' />\n                                        </td>\n                                    </tr> */}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td\n                                            colspan='3'\n                                            class='px-5 py-4 text-center overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 0 0 10px 10px; font-size: 1.1em;'\n                                        >\n                                            <nobr class='mr-4'>QPaws app</nobr>\n\n                                            <img src='https://themusher.app/assets/appstore-download.png' height='40' class='ml-5 mr-1' />\n                                            <img src='https://themusher.app/assets/playstore-download.png' height='40' class='mx-1' />\n\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n\n                        {/* </div> */}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default TvTop10;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__3_DrK\",\"hoverElement\":\"hoverElement__3ED7Q\",\"hoverelementhide\":\"hoverelementhide__2AP13\"};"],"sourceRoot":""}