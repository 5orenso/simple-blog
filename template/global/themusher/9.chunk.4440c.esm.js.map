{"version":3,"sources":["webpack:///./components/loading/index.js","webpack:///./components/public/trackmap.js","webpack:///./components/dog/scroller.js","webpack:///./components/public/raceTrackingMusherDetail.js","webpack:///./components/gauge/style.css","webpack:///./components/header/custom.js","webpack:///./components/states/index.js","webpack:///./components/gauge/index.js","webpack:///./components/races/liveCheckpointResult.js"],"names":["mu","marginTop","marginBottom","initialState","Loading","observer","Component","constructor","props","super","this","state","render","goto","gotoTitle","routerName","class","style","role","id","native","href","showAddComment","Trackmap","updateTimer","inputRef","showHeatmap","raceid","allTeamIds","adminStore","trackStore","raceStore","appState","stores","selectedClassIds","getPublicHeatmap","trackIds","getTrackIdsByClass","length","cleanupMemory","loadPublic","query","idin","componentDidMount","loadTrack","componentWillReceiveProps","nextProps","waypoints","waypoints2","waypoints3","zoomToMarkers","fullscreenMap","onMarkerClick","onMarker2Click","onMarker3Click","showTracks","showDistanceMarkers","groupWaypoints","focusOnMushers","geoJSONs","largeMarkers","isAnimatedMarkers","replaySpeed","tracks","publicHeatmap","heatmap","track","geojson","gpx","geoJSON","gpxInfo","minZoom","maxZoom","height","showTrackProfile","distanceMarkerSteps","showFullscreenControl","DogScroller","scrollImages","e","scrollLeft","clientWidth","target","imageIdx","nearestInt","Math","round","diff","abs","Number","isInteger","setState","sortByName","a","b","allDogs","dogA","find","dogB","name","dogs","size","onDogClick","onScroll","sort","map","dogId","dog","onTouchstart","stopPropagation","onTouchend","onTouchmove","filter","d","indexOf","className","showName","showPosition","RaceTrackingMusherDetail","wp","musher","userStore","totalTrackLength","raceClass","getClassByBib","bib","team","getTeamById","user","members","m","email","currentUser","totals","getTotalsByTeamId","totalDistancePercent","getImage","priority","fallback","image1","displayNameShort","util","format","totalDistanceOnTrack","restPercent","restTime","raceTime","xTicks","dataLeft","legendLeft","unitLeft","speeds","xTicksRange","range","timestamp","partSize","ceil","floor","i","l","push","formatDate","parseInputDate","locale","day","month","hour12","hour","minute","data","speed","x","y","followers","followRequests","findIndex","now","Date","getTime","rank","finishTime","diffToFirstFinishTime","secToHms","startTime","startDate","key","color","radius","showPercentText","percent","showCenterText","centerText","centerTextSize","centerTextY","states","duration","distanceToBehind","distanceToForward","distanceToFirst","distanceToFinish","width","showXTicks","paddingTop","paddingLeft","yTicksLeftWidth","lineFromXzero","lineFromXmax","dataFillLeft","showYTicksLeft","yTicksLeftPostfix","avgWindowLeft","smoothLeft","distanceKm","elevation","rest","module","exports","HeaderCustom","children","getStateColor","getStateIcon","States","hideDetail","preventDefault","stateDetail","idx","showStateDetail","closest","dataset","nextStateDetail","nextIdx","parseInt","nextState","distance","avgspeed","avgSpeed","statespeeds","stateSpeeds","point","start","end","normalizeBetween","prevStateDetail","prevIdx","prevState","showText","value","currentWidth","aria-valuenow","aria-valuemin","aria-valuemax","data-idx","data-state","data-duration","data-distance","data-avgspeed","data-statespeeds","data-point","data-start","data-end","data-percent","onClick","mouseData","Gauge","svgRef","heightAdd","prefix","centerTextX","total","totalY","totalX","totalTextAnchor","completed","completedY","completedX","completedTextAnchor","strokeWidth","innerRadius","strokeWidthGauge","circumference","PI","arc","dashArray","transform","offset","min","max","textSize","textSizeSmall","xmlns","svg","preserveAspectRatio","ref","c","gaugeBackground","cx","cy","r","strokeDasharray","strokeLinecap","gauge","stroke","strokeDashoffset","transition","gaugeText","dominant-baseline","text-anchor","font-size","secondary","fieldSorter","fields","o","dir","substring","reduce","p","n","RaceLiveCheckpointResult","chooseSubmenu","submenu","toggleInfo","showInfo","onClickNav","teams","language","currentClass","getClassById","selectedCheckpoint","checkpoints","sortedContestants","allResultsCp","results","slice","checkpoint","lastResultsIn","direction","lastResultsOut","lastResultsLegtimes","lastResultsScratched","prevCp","sortOrder","nextCp","prevResultsOut","nextResultsIn","image","topImage","shortname","headerImage","cellphone","facebook","asFacebookLink","instagram","asInstagramLink","description","onCLick","markdown","replaceImages","images","markdownOpts","getMarkdownOptions","totalDistance","isStartLine","distanceFromPrev","distanceToNext","requiredRestMinutes","timeEqualization","hideResults","type","data-submenu","res","selectedMusher","getMusherByBibId","resOut","resIn","resScratched","prevResOut","timeused","deltaSec","getRankingColor","flag","lastname","nextResIn","estTimeInNextCp","estTimeToNext","estTimeToCpMinutes","cpSortOrder","addDeltaSec","isFinishLine"],"mappings":"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","file":"9.chunk.4440c.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {};\n\n@observer\nclass Loading extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    render() {\n        const { goto, gotoTitle, routerName } = this.props;\n        return (\n            <div class='row h-100'>\n                <div class='col-12 text-center my-auto'>\n                    <div class='spinner-border text-primary' style='width: 8rem; height: 8rem;' role='status'>\n                        <span class='sr-only'><Text id='home.loading'>Loading...</Text></span>\n                    </div>\n                    <h3 class='mt-4'><Text id='home.loading'>Loading...</Text></h3>\n                    {goto && <>\n                        <a class='my-4 btn btn-primary btn-lg btn-block' native href={goto}>{gotoTitle} <i class='fas fa-angle-double-right ml-2' /></a>\n                        <small class='text-muted'>{routerName}</small>\n                    </>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Trackmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadTrack(props = this.props) {\n        const { showHeatmap, raceid, allTeamIds } = props;\n        const { adminStore, trackStore, raceStore, appState } = props.stores;\n        const { selectedClassIds = [] } = appState;\n\n\t\t// this.setState({ isLoading: true });\n        if (showHeatmap) {\n            await adminStore.getPublicHeatmap(raceid, allTeamIds);\n        }\n\n        // const classId = \n        const trackIds = raceStore.getTrackIdsByClass(selectedClassIds[0]);\n\n        if (trackIds && trackIds.length > 0) {\n            trackStore.cleanupMemory();\n            await trackStore.loadPublic({ query: { idin: trackIds } });\n        }\n\t\t// this.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadTrack();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.selectedClassIds !== nextProps.selectedClassIds) {\n            this.loadTrack(nextProps);\n        }\n\t}\n\n    render() {\n        const { trackStore, raceStore, appState, adminStore } = this.props.stores;\n        const { selectedClassIds = [] } = appState;\n        const {\n            waypoints, waypoints2, waypoints3, zoomToMarkers, mapid,\n            fullscreenMap,\n            onMarkerClick, onMarker2Click, onMarker3Click,\n            showHeatmap, showTracks,\n            showDistanceMarkers, groupWaypoints,\n            focusOnMushers, geoJSONs,\n            largeMarkers, isAnimatedMarkers, replaySpeed,\n        } = this.props;\n        const { tracks } = trackStore;\n        const { publicHeatmap: heatmap } = adminStore;\n        const track = tracks[0];\n        const trackIds = raceStore.getTrackIdsByClass();\n\n        // const heatmap = publicHeatmap.slice(0, 10);\n        // const heatmap = [[60.4433,8.8996,14],[61.384,9.1152,14],[60.42,8.9422,15]];\n\n        return (\n            <>\n                {/* heatmap: {`map-${mapid}`}<br /> */}\n                {/* {JSON.stringify(showTracks && track && track.gpx ? track.gpx.geoJSON : null)} */}\n                {/* {JSON.stringify(geoJSONs)} */}\n                <Map\n                    stores={this.props.stores}\n                    // mapId={mapid}\n                    heatmap={showHeatmap ? heatmap : null}\n                    track={track}\n                    geojson={showTracks && track && track.gpx ? track.gpx.geoJSON : null}\n                    gpxInfo={showTracks && track && (track.gpx || track.gpxInfo) ? (track.gpxInfo || track.gpx.gpxInfo) : null}\n                    minZoom={2}\n                    maxZoom={18}\n                    height={600}\n                    waypoints={waypoints}\n                    waypoints2={waypoints2}\n                    waypoints3={waypoints3}\n                    geoJSONs={geoJSONs}\n                    zoomToMarkers={zoomToMarkers}\n                    fullscreenMap={fullscreenMap}\n                    onMarkerClick={onMarkerClick}\n                    onMarker2Click={onMarker2Click}\n                    onMarker3Click={onMarker3Click}\n                    showTrackProfile={false}\n                    distanceMarkerSteps={'long'}\n                    showDistanceMarkers={showDistanceMarkers}\n                    groupWaypoints={groupWaypoints}\n                    focusOnMushers={focusOnMushers}\n                    showFullscreenControl={false}\n                    largeMarkers={largeMarkers}\n                    isAnimatedMarkers={isAnimatedMarkers}\n                    replaySpeed={replaySpeed}\n                    // key={`map-${mapid}-${util.getNestedValue(track, 'id')}-${trackIds.join('-')}-${selectedClassIds.join('-')}`}\n                    // key={`map-${util.getNestedValue(track, 'id')}`}\n                />\n            </>\n        );\n    }\n}\n\nexport default Trackmap;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DogSimplePublic from './simplePublic';\n\n@observer\nclass DogScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    sortByName = (a, b) => {\n        const { allDogs = [] } = this.props;\n        const dogA = allDogs.find(e => e.id === a);\n        const dogB = allDogs.find(e => e.id === b);\n        if (dogA && dogB) {\n            if (dogA.name > dogB.name) {\n                return 1;\n            }\n        }\n        return -1;\n    }\n\n    render() {\n        const { imageIdx } = this.state;\n        const { dogs, allDogs = [], size = 'medium', onDogClick = () => {} } = this.props;\n\n        return (\n            <div class='w-100'>\n                <div\n                    class='d-flex flex-row flex-nowrap no-scrollbar'\n                    style='overflow: auto; scroll-snap-type: x mandatory;'\n                    onScroll={this.scrollImages}\n                >\n                    {dogs && dogs.sort(this.sortByName).map((dogId, idx) => {\n                        const dog = allDogs.find(e => e.id === dogId);\n                        if (!dog) {\n                            return '';\n                        }\n                        return (\n                            <div class='col clearfix position-relative p-0 mx-2'>\n                                <div\n                                    class={`w-100 h-100 text-center rounded-lg imageContainer d-flex justify-content-center align-items-center`}\n                                    style={`\n                                        flex-wrap: wrap;\n                                        overflow-y: hidden;\n                                    `}\n                                    onTouchstart={(e) => { e.stopPropagation(); }}\n                                    onTouchend={(e) => { e.stopPropagation(); }}\n                                    onTouchmove={(e) => { e.stopPropagation(); }}\n                                >\n                                    <DogSimplePublic\n                                        stores={this.props.stores}\n                                        dog={dog}\n                                        dogs={allDogs.filter(d => dogs.indexOf(d.id) > -1).sort((a, b) => a.name > b.name ? 1 : -1)}\n                                        className='mx-auto'\n                                        showName={true}\n                                        showPosition={false}\n                                        size={size}\n                                        onDogClick={onDogClick} \n                                    />\n                                    {/* <xmp>{JSON.stringify(img, null, 4)}</xmp> */}\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DogScroller;\n","import { h, Component } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport Markdown from 'preact-markdown';\nimport linkstate from 'linkstate';\n\nimport Trackmap from '../../components/public/trackmap';\nimport Gauge from '../../components/gauge';\n\nimport DogScroller from '../../components/dog/scroller';\nimport ImageScroller from '../imageScroller';\n\nimport Overlay from '../../components/overlay/';\nimport Drawer from '../../components/drawer/';\nimport HeaderCustom from '../../components/header/custom';\nimport Loading from '../../components/loading/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\nimport DogPublicDetail from '../../routes/dogs/publicDetail';\nimport RaceLiveCheckpointResult from '../../components/races/liveCheckpointResult';\nimport LineGraph from '../../components/lineGraph';\nimport States from '../../components/states';\nimport PublicTeam from '../team/public';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass RaceTrackingMusherDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        const { wp, musher } = this.props;\n        const { raceStore, userStore } = this.props.stores;\n        const { waypoints, totalTrackLength } = raceStore;\n\n        const raceClass = raceStore.getClassByBib(wp.bib);\n\n        const team = raceStore.getTeamById(musher.team);\n        const user = team.members ? team.members.find(m => m.email === musher.email) : {};\n\n        const { isAdmin } = userStore;\n        const { user: currentUser = {} } = userStore;\n\n        const totals = raceStore.getTotalsByTeamId(musher.team);\n        const image = mu.getImage({ user, team, priority: 'user', fallback: musher.image1 });\n        const shortname = mu.displayNameShort(user) || mu.displayNameShort(musher);\n\n        const totalDistancePercent = util.format(wp.totalDistanceOnTrack / totalTrackLength * 100, 0);\n        const restPercent = util.format(wp.restTime / wp.raceTime * 100, 0);\n        const runPercent = 100 - restPercent;\n\n        const locale = 'en-GB';\n        const xTicks = [];\n        const dataLeft = [];\n        const legendLeft = [];\n        const unitLeft = [];\n        if (wp && wp.speeds && wp.speeds.length > 0) {\n            const xTicksRange = util.range(wp.speeds[0].timestamp, wp.speeds[wp.speeds.length - 1].timestamp, 600);\n            const partSize = Math.ceil(xTicksRange.length / 5);\n            const parts = Math.floor(xTicksRange.length / partSize);\n            // if (showDebug) {\n                // console.log({ xTicksRange, parts, partSize });\n            // }\n            for (let i = 0, l = xTicksRange.length; i < l; i += partSize) {\n                xTicks.push(\n                    mu.formatDate(util.parseInputDate(xTicksRange[i]), { locale, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })\n                );\n            }\n            xTicks.push(\n                mu.formatDate(util.parseInputDate(xTicksRange[xTicksRange.length - 1]), { locale, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })\n            );\n            // const smoothed = mu.smoothArray(elevations, 5);\n            const data = wp.speeds.map((speed) => ({\n                x: speed.timestamp,\n                y: speed.speed * 3.6,\n            }));\n            dataLeft.push(data);\n            legendLeft.push('Avg speed');\n            unitLeft.push('km/t');\n        }\n        const isYourTeam = team.members && team.members.indexOf(currentUser.id) > -1;\n        const isFollowing = team.followers && team.followers.indexOf(currentUser.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === currentUser.id) > -1;\n        // console.log({ xTicks });\n\n        const now = Math.floor(new Date().getTime() / 1000);\n\n        return (<>\n            <div class='d-flex justify-content-between'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-list' /> Ranking\n                        </small>\n                    </div>\n                    <div class='text-center' style='font-size: 2.0em;'>\n                        {wp.rank}\n                    </div>\n                </div>\n                {wp.finishTime < 9999999999 ? <>\n                    {wp.diffToFirstFinishTime > 0 ? <>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Diff to 1st\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 2.0em;'>\n                                {util.secToHms(wp.diffToFirstFinishTime)}\n                            </div>\n                        </div>\n                    </> : <>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Start time\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 1.5em;'>\n                                {util.formatDate(util.parseInputDate(musher.startTime || raceClass.startDate || wp.startTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Finish time\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 1.5em;'>\n                                {util.formatDate(util.parseInputDate(wp.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                    </>}\n                </> : <>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-tachometer-alt' /> Current speed\n                            </small>\n                        </div>\n                        <div class='text-center' style='font-size: 2.0em;'>\n                            {util.format(wp.speed || 0, 1)} <span class='text-muted' style='font-size: 0.5em;'>km/h</span>\n                        </div>\n                    </div>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-stopwatch' /> Last update\n                            </small>\n                        </div>\n                        <div class='text-center' style='font-size: 2.0em;'>\n                            {util.secToHms(now - wp.timestamp)}\n                        </div>\n                    </div>\n                </>}\n            </div>\n\n            <div class='d-flex justify-content-between mt-2'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-road' /> Total distance\n                        </small>\n                    </div>\n                    <div class='text-center mt-2'>\n                        <Gauge key={`gauge-reload-page`}\n                            color='primary'\n                            radius={40}\n                            showPercentText={false}\n                            percent={totalDistancePercent}\n                            showCenterText={true}\n                            centerText={`${totalDistancePercent}%`}\n                            centerTextSize={18}\n                            centerTextY={'55%'}\n                        />\n                    </div>\n                    <div class='text-center'>\n                        <small>\n                            {util.format(wp.totalDistanceOnTrack, 1)} / {util.format(totalTrackLength, 1)} <span class='text-muted'>km</span><br />\n                            <i class='fas fa-clock ml-2 text-muted' /> {util.secToHms(wp.raceTime)}\n                        </small>\n\n                    </div>\n                </div>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-bed' /> Rest\n                        </small>\n                    </div>\n                    <div class='text-center mt-2'>\n                        <Gauge key={`gauge-reload-page`}\n                            color={restPercent < 40 ? (restPercent < 30 ? 'danger' : 'warning') : 'success'}\n                            radius={40}\n                            showPercentText={false}\n                            percent={restPercent}\n                            showCenterText={true}\n                            centerText={`${restPercent}%`}\n                            centerTextSize={18}\n                            centerTextY={'55%'}\n                        />\n                    </div>\n                    <div class='text-center'>\n                        <small>\n                            {restPercent} <span class='text-muted'>%</span><br />\n                            <i class='fas fa-clock ml-2 text-muted' /> {util.secToHms(wp.restTime)}\n                        </small>\n                    </div>\n                </div>\n                {/* <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                    <div>\n                        <small class='text-muted'>\n                            Current speed\n                        </small>\n                    </div>\n                    <div class='text-center' style='font-size: 2.0em;'>\n                        {util.format(wp.speed || 0, 1)} <span class='text-muted' style='font-size: 0.5em;'>km/h</span>\n                    </div>\n                </div> */}\n            </div>\n\n            <div class='d-flex justify-content-between mt-2'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle w-100'>\n                    <States stores={this.props.stores} states={wp.states} duration={wp.raceTime} key={`state-${wp.bib}`} />\n                </div>\n            </div>\n\n            {wp.finishTime < 9999999999 ? <>\n                {wp.diffToFirstFinishTime > 0 ? <>\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Start time\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 1.5em;'>\n                                {util.formatDate(util.parseInputDate(musher.startTime || raceClass.startDate || wp.startTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-clock' /> Finish time\n                                </small>\n                            </div>\n                            <div class='text-center' style='font-size: 1.5em;'>\n                                {util.formatDate(util.parseInputDate(wp.finishTime), { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                    </div>\n                </> : <></>}\n            </> : <>\n                <div class='d-flex justify-content-between mt-2'>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-arrow-down' /> Behind\n                            </small>\n                        </div>\n                        <div class='text-center'>\n                            {util.format(wp.distanceToBehind, 1)} <span class='text-muted'>km</span>\n                        </div>\n                    </div>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                Team\n                            </small>\n                        </div>\n                        <div class='text-center'>\n                            <i class='fas fa-dog' />\n                        </div>\n                    </div>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-arrow-up' /> In front\n                            </small>\n                        </div>\n                        <div class='text-center'>\n                            {util.format(wp.distanceToForward, 1)} <span class='text-muted'>km</span>\n                        </div>\n                    </div>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-arrow-up' /> To first\n                            </small>\n                        </div>\n                        <div class='text-center'>\n                            {util.format(wp.distanceToFirst, 1)} <span class='text-muted'>km</span>\n                        </div>\n                    </div>\n                </div>\n                <div class='d-flex justify-content-between mt-2'>\n                    <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                        <div>\n                            <small class='text-muted'>\n                                <i class='fas fa-flag-checkered' /> Finish\n                            </small>\n                        </div>\n                        <div class='text-center' style='font-size: 2.0em;'>\n                            {util.format(wp.distanceToFinish, 1)} <span class='text-muted' style='font-size: 0.5em;'>km</span>\n                        </div>\n                    </div>\n                </div>\n            </>}\n\n            <div class='d-flex justify-content-between mt-2'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-clock' /> Racetime\n                        </small>\n                    </div>\n                    <div class='text-center' style='font-size: 2.0em;'>\n                        {util.secToHms(wp.raceTime)}\n                    </div>\n                </div>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle ml-2'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-bed' /> Resttime\n                        </small>\n                    </div>\n                    <div class='text-center' style='font-size: 2.0em;'>\n                        {util.secToHms(wp.restTime)}\n                    </div>\n                </div>\n            </div>\n\n\n            <div class='d-flex justify-content-between mt-2'>\n                <div class='flex-fill bg-light rounded-lg p-3 align-middle w-100'>\n                    <div>\n                        <small class='text-muted'>\n                            <i class='fas fa-tachometer-alt' /> Speed plot\n                        </small>\n                    </div>\n                    <div class='w-100 mt-2 overflow-auto'>\n                        <LineGraph\n                            stores={this.props.stores}\n                            width={1000}\n                            height={200}\n                            showXTicks={1}\n                            // xTicksVal={val => `${val}`}\n                            xTicks={xTicks}\n                            paddingTop={30}\n                            paddingLeft={50}\n                            yTicksLeftWidth={'50px'}\n                            lineFromXzero={true}\n                            lineFromXmax={true}\n                            // xTicksLink={'/workouts/week/'}\n\n                            // yMaxLeft={25}\n                            dataLeft={dataLeft}\n                            legendLeft={legendLeft}\n                            dataFillLeft={[1]}\n                            // yMaxLeft={30}\n                            // yMinLeft={0}\n                            showYTicksLeft={1}\n                            yTicksLeftPostfix={' km/t'}\n                            unitLeft={unitLeft}\n                            avgWindowLeft={[0, 0]}\n                            smoothLeft={[0, 0]}\n\n                            // dataRight={dataRight}\n                            // legendRight={legendRight}\n                            // // dataRight={[graphWorkoutSummaryWeekElevationCurrent, graphWorkoutSummaryWeekElevationPrev]}\n                            // // legendRight={[`${seasonStart} ${ascend}`, `${seasonStart - 1} ${ascend}`]}\n                            // showYTicksRight={dataRight.length > 0 ? 1 : 0}\n                            // yTicksRightPostfix={'km/t'}\n                            // unitRight={unitRight}\n                            // avgWindowRight={[0, 0, 0]}\n                            // smoothRight={[1, 1, 1]}\n\n                            // marker={week}\n                        />\n                        {/* {JSON.stringify(wp.speeds, null, 4)} */}\n                    </div>\n                </div>\n            </div>\n\n\n            {/* distanceToFinish: {JSON.stringify(wp.distanceToFinish, null, 4)}<br />\n            distanceToFirst: {JSON.stringify(wp.distanceToFirst, null, 4)}<br />\n            distanceToForward: {JSON.stringify(wp.distanceToForward, null, 4)}<br />\n            distanceToBehind: {JSON.stringify(wp.distanceToBehind, null, 4)}<br />\n            speed: {JSON.stringify(wp.speed, null, 4)}<br />\n            bearing: {JSON.stringify(wp.bearing, null, 4)}<br />\n            finishTime: {util.isoDate(wp.finishTime)}<br /> */}\n\n            {/*\n                \"lat\": 62.53911889158189,\n                \"lng\": 11.38222829438746,\n                \"icon\": null,\n                \"image\": \"https://themusher.app/220x/the-musher-90bc4d13-1204-49db-9a09-9e4d84775b00.jpeg\",\n                \"bib\": 3,\n                \"rank\": 1,\n                \"flag\": \"🇳🇴\",\n                \"title\": \"Wærner\",\n                \"body\": \"-0,0 km/t, -0,0 km\",\n                \"color\": \"#FA0007\",\n                \"totalDistanceOnTrack\": 619.146473819473,\n                \"bearing\": 0,\n                \"finishTime\": 1644169451\n            */}\n\n\n            {totals && totals.distanceKm && <>\n                <div class='table-responsive-lg'>\n                    <table class='table table-borderless'>\n                        <tbody>\n                            <tr>\n                                <td style='width: 5%;'><i class='fas fa-dog' /></td>\n                                <td style='width: 60%'><Text id='races.dogs'>Dogs</Text></td>\n                                <td style='width: 5%;'>&nbsp;</td>\n                                <td class='text-right' style='width: 30%;'>{team.dogs.length}</td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-road' /></td>\n                                <td><Text id='races.distance'>Distance</Text></td>\n                                <td>&nbsp;</td>\n                                <td class='text-right'><nobr>{totals.distanceKm ? `${util.format(totals.distanceKm, 1)} km` : 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-mountain' /></td>\n                                <td><Text id='races.ascend'>Ascending</Text></td>\n                                <td>&nbsp;</td>\n                                <td class='text-right'><nobr>{totals.elevation ? `${util.format(totals.elevation, 0)} m` : 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-stopwatch' /></td>\n                                <td><Text id='races.race-time'>Racetime</Text></td>\n                                <td><i class='fas fa-clock' /></td>\n                                <td class='text-right'><nobr>{util.secToHms(totals.duration) || 'n/a'}</nobr></td>\n                            </tr>\n                            <tr>\n                                <td><i class='fas fa-bed' /></td>\n                                <td><Text id='races.rest-time'>Rest</Text></td>\n                                <td><i class='fas fa-clock' /></td>\n                                <td class='text-right'><nobr>{util.secToHms(totals.rest) || 'n/a'}</nobr></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </>}\n        \n        </>);\n    }\n}\n\nexport default RaceTrackingMusherDetail;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gaugeBackground\":\"gaugeBackground__1UGxt\",\"gauge\":\"gauge__2ZDxd\",\"success\":\"success__3UQxg\",\"primary\":\"primary__3pPV6\",\"secondary\":\"secondary__-Vrk_\",\"info\":\"info__3t5zs\",\"warning\":\"warning__1jHlR\",\"danger\":\"danger__BLVC9\",\"gaugeText\":\"gaugeText__1on-w\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\n@observer\nclass HeaderCustom extends Component {\n    render() {\n        const { children, height = '65px' } = this.props;\n        return (\n            <nav\n\t\t\t\tclass={`navbar navbar-themed bg-light fixed-top py-0`}\n\t\t\t\tstyle={`height: ${height};`}\n\t\t\t>\n\n                {children}\n\n            </nav>\n        );\n    }\n}\n\nexport default HeaderCustom;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nfunction getStateColor(state) {\n\tswitch (state) {\n\t\tcase 'running':\n\t\t\treturn 'primary';\n\t\tcase 'rest':\n\t\t\treturn 'warning';\n\t\tcase 'restTrail':\n\t\t\treturn 'danger';\n\t}\n}\n\nfunction getStateIcon(state) {\n\tswitch (state) {\n\t\tcase 'running':\n\t\t\treturn 'fas fa-running';\n\t\tcase 'rest':\n\t\t\treturn 'fas fa-male';\n\t\tcase 'restTrail':\n\t\t\treturn 'fas fa-bed';\n\t}\n}\n\n@observer\nclass States extends Component {\n    hideDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n\t\t\tstateDetail: {\n\t\t\t\tstate: '',\n                idx: 0,\n\t\t\t},\n\t\t});\n    }\n\n\tshowStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\t\tconst data = e.target.closest('div').dataset;\n\t\tthis.setState({\n\t\t\tstateDetail: {\n\t\t\t\t...data,\n\t\t\t},\n\t\t});\n\t}\n\n    nextStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { states, duration } = this.props;\n        const { stateDetail = {} } = this.state;\n        const currentIdx = parseInt(stateDetail.idx, 10);\n        const nextIdx = currentIdx + 1;\n        const nextState = states[nextIdx];\n        if (nextState) {\n            this.setState({\n                stateDetail: {\n                    idx: nextIdx,\n                    state: nextState.state,\n                    duration: nextState.duration,\n                    distance: nextState.distance,\n                    avgspeed: nextState.avgSpeed,\n                    statespeeds: nextState.stateSpeeds,\n                    point: nextState.point,\n                    start: nextState.start,\n                    end: nextState.end,\n                    percent: util.normalizeBetween(nextState.duration, 0, duration, 0, 100),\n                },\n            });\n        }\n    }\n\n   prevStateDetail = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { states, duration } = this.props;\n        const { stateDetail = {} } = this.state;\n        const currentIdx = parseInt(stateDetail.idx, 10);\n        const prevIdx = currentIdx - 1;\n        const prevState = states[prevIdx];\n        if (prevState) {\n            this.setState({\n                stateDetail: {\n                    idx: prevIdx,\n                    state: prevState.state,\n                    duration: prevState.duration,\n                    distance: prevState.distance,\n                    avgspeed: prevState.avgSpeed,\n                    statespeeds: prevState.stateSpeeds,\n                    point: prevState.point,\n                    start: prevState.start,\n                    end: prevState.end,\n                    percent: util.normalizeBetween(prevState.duration, 0, duration, 0, 100),\n                },\n            });\n        }\n    }\n\n    render() {\n        const { states, duration, height = '20px', showText = true } = this.props;\n        const { stateDetail = {} } = this.state;\n        const locale = 'en-GB';\n\n        return (<>\n            <div class='row'>\n                {states && <div class='col-12 px-0'>\n                    <div class='progress' style={`height: ${(stateDetail && stateDetail.idx) ? '20px' : height};`}>\n                        {states.map((state, idx) => {\n                            const value = Math.ceil(util.normalizeBetween(state.duration, 0, duration, 0, 100));\n                            let currentWidth = value;\n                            if (stateDetail && stateDetail.idx == idx) {\n                                currentWidth = value < 10 ? 10 : value;\n                            }\n                            return (<>\n                                <div\n                                    class={`progress-bar bg-${getStateColor(state.state)}`}\n                                    role='progressbar'\n                                    style={`width: ${currentWidth}%`}\n                                    aria-valuenow={value}\n                                    aria-valuemin='0'\n                                    aria-valuemax='100'\n                                    data-idx={idx}\n                                    data-state={state.state}\n                                    data-duration={state.duration}\n                                    data-distance={state.distance}\n                                    data-avgspeed={state.avgSpeed}\n                                    data-statespeeds={state.stateSpeeds}\n                                    data-point={state.point}\n                                    data-start={state.start}\n                                    data-end={state.end}\n                                    data-percent={util.normalizeBetween(state.duration, 0, duration, 0, 100)}\n                                    onClick={this.showStateDetail}\n                                >\n                                    {showText ? <>\n                                        <nobr>\n                                            {value > 10 && <>\n                                                {state.state === 'rest' ? <>\n                                                    {util.secToHms(state.duration, true)}\n                                                </> : <>\n                                                    {util.format(state.distance / 1000, 0)}km\n                                                </>}\n                                            </>}\n                                            {(stateDetail && stateDetail.idx == idx) ? <i class={`fas fa-hand-point-down text-${state.state === 'rest' ? 'dark' : 'warning'} mx-2`} /> : ''}\n                                        </nobr>\n                                    </> : <>\n                                        {(stateDetail && stateDetail.idx == idx) ? <i class={`fas fa-hand-point-down text-${state.state === 'rest' ? 'dark' : 'warning'} mx-2`} /> : ''}\n                                    </>}\n                                </div>\n                            </>);\n                        })}\n                    </div>\n                    {stateDetail && stateDetail.state && <>\n                        <div class='card position-relative'>\n                            <span class='position-absolute' style='top: 0px; right: 5px;'>\n                                <small class='text-muted'>\n                                    <i class={getStateIcon(stateDetail.state)} /> {util.format(stateDetail.percent, 1)}%\n                                </small>\n                            </span>\n                            <div class='card-body'>\n                                {stateDetail.state === 'rest' ? <>\n                                    <div class='card-text row'>\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.duration'>Vargihet</Text>\n                                            </small>\n                                            <h6>\n                                                {util.secToHms(stateDetail.duration, true)}\n                                            </h6>\n                                        </div>\n                                        {stateDetail.point && <div class='col-8 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fa-map-marked ml-2' /> <Text id='workouts.position'>Position</Text>\n                                            </small>\n                                            <h6>\n                                                {stateDetail.point}\n                                            </h6>\n                                        </div>}\n                                    </div>\n                                    <div class='card-text row'>\n                                        {stateDetail.start && <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.starttime'>Start</Text>\n                                            </small>\n                                            <h6>\n                                                {mu.formatDate(util.parseInputDate(stateDetail.start), { locale, hour12: false, day: 'numeric', month: 'numeric', hour: '2-digit', minute: '2-digit' })}\n                                            </h6>\n                                        </div>}\n                                        {stateDetail.end && <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.endtime'>End</Text>\n                                            </small>\n                                            <h6>\n                                                {mu.formatDate(util.parseInputDate(stateDetail.end), { locale, hour12: false, day: 'numeric', month: 'numeric', hour: '2-digit', minute: '2-digit' })}\n                                            </h6>\n                                        </div>}\n                                    </div>\n                                </> : <>\n                                    <div class='card-text row'>\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-road ml-2' /> <Text id='workouts.distance'>Distanse</Text>\n                                            </small>\n                                            <h6>\n                                                <Distance stores={this.props.stores} value={stateDetail.distance / 1000} />\n                                            </h6>\n                                        </div>\n\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.duration'>Vargihet</Text>\n                                            </small>\n                                            <h6>\n                                                {util.secToHms(stateDetail.duration, true)}\n                                            </h6>\n                                        </div>\n\n                                        <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-tachometer-alt ml-2' /> <Text id='workouts.avgspeed'>Gj.fart</Text>\n                                            </small>\n                                            <h6>\n                                                <Speed stores={this.props.stores} value={stateDetail.distance / stateDetail.duration * 3.6} />\n                                            </h6>\n                                        </div>\n                                    </div>\n                                    <div class='card-text row'>\n                                        {stateDetail.start && <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.starttime'>Start</Text>\n                                            </small>\n                                            <h6>\n                                                {mu.formatDate(util.parseInputDate(stateDetail.start), { locale, hour12: false, day: 'numeric', month: 'numeric', hour: '2-digit', minute: '2-digit' })}\n                                            </h6>\n                                        </div>}\n                                        {stateDetail.end && <div class='col-4 text-nowrap text-overflow'>\n                                            <small class='text-muted'>\n                                                <i class='fas fa-clock ml-2' /> <Text id='workouts.endtime'>End</Text>\n                                            </small>\n                                            <h6>\n                                                {mu.formatDate(util.parseInputDate(stateDetail.end), { locale, hour12: false, day: 'numeric', month: 'numeric', hour: '2-digit', minute: '2-digit' })}\n                                            </h6>\n                                        </div>}\n                                    </div>\n                                </>}\n                            </div>\n                            <div class='float-right'>\n\n                            <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.hideDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-times' />\n                            </button>\n\n                            {stateDetail.idx < states.length - 1 && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.nextStateDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-angle-right' />\n                            </button>}\n                            {stateDetail.idx > 0 && <button class='btn btn-link text-primary mx-2 py-0 float-right' onClick={this.prevStateDetail} style='line-height: 1.0em; font-size: 2.0em;'>\n                                <i class='fas fa-angle-left' />\n                            </button>}\n\n                            </div>\n                        </div>\n                    </>}\n                </div>}\n            </div>\n        </>);\n    }\n}\n\nexport default States;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass Gauge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n    }\n\n    render() {\n        const {\n            radius = 50,\n            heightAdd = 0,\n            color = 'success',\n\n            showPercentText = true,\n            percent = 0,\n            prefix = '',\n\n            showCenterText= false,\n            centerText,\n            centerTextSize,\n            centerTextX,\n            centerTextY,\n\n            total = '',\n            totalY = '90%',\n            totalX = '50%',\n            totalTextAnchor = 'middle',\n                        \n            completed = '',\n            completedY = '65%',\n            completedX = '50%',\n            completedTextAnchor = 'middle',\n        } = this.props;\n        const strokeWidth = radius * 0.3;\n        const innerRadius = radius - strokeWidth / 2;\n\n        const strokeWidthGauge = radius * 0.3;\n\n        const circumference = innerRadius * 2 * Math.PI;\n        const arc = circumference * (270 / 360);\n        const dashArray = `${arc} ${circumference}`;\n        const transform = `rotate(135, ${radius}, ${radius})`;\n\n        const percentNormalized = Math.min(Math.max(percent, 0), 100);\n        const offset = arc - (percentNormalized / 100) * arc;\n\n        const textSize = centerTextSize || radius / 2.5;\n        const textSizeSmall = radius / 5;\n\n        return (\n            <>\n                <svg xmlns='http://www.w3.org/2000/svg' class={style.svg}\n                    // viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n                    width={radius * 2}\n                    height={radius * 2 + heightAdd}\n                    preserveAspectRatio='none'\n                    ref={c => this.svgRef = c}\n                >\n\n                    <circle\n                        class={`${style.gaugeBackground}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={dashArray}\n                        strokeLinecap='round'\n                        transform={transform}\n                    />\n                    \n                    <circle\n                        class={`${style[color]} ${style.gauge}`}\n                        cx={radius}\n                        cy={radius}\n                        r={innerRadius}\n                        stroke='url(#grad)'\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={offset}\n                        strokeLinecap='round'\n                        strokeWidth={strokeWidthGauge}\n                        style={{\n                            transition: 'stroke-dashoffset 0.3s',\n                        }}\n                        transform={transform}\n                    />\n                     \n                    {showPercentText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{percent} {prefix}</text>}\n\n                    {showCenterText && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={centerTextX || '50%'}\n                        y={centerTextY || '50%'}\n                        dominant-baseline='middle'\n                        text-anchor='middle'\n                        font-size={textSize}\n                    >{centerText}</text>}\n\n                    {completed && <text\n                        class={`${style.gaugeText} ${style[color]}`}\n                        x={completedX}\n                        y={completedY}\n                        dominant-baseline='middle'\n                        text-anchor={completedTextAnchor}\n                        font-size={textSizeSmall}\n                    >{completed}</text>}\n\n                    <text\n                        class={`${style.gaugeText} ${style.secondary}`}\n                        x={totalX}\n                        y={totalY}\n                        dominant-baseline='middle'\n                        text-anchor={totalTextAnchor}\n                        font-size={textSizeSmall}\n                    >{total}</text>\n\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default Gauge;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport mu from '../../lib/musher-util';\n\nconst fieldSorter = (fields) => (a, b) => fields.map(o => {\n    let dir = 1;\n    if (o[0] === '-') { dir = -1; o=o.substring(1); }\n    return a[o] > b[o] ? dir : a[o] < b[o] ? -(dir) : 0;\n}).reduce((p, n) => p ? p : n, 0);\n\n@observer\nclass RaceLiveCheckpointResult extends Component {\n    chooseSubmenu = (e) => {\n\t\tconst submenu = e.target.closest('button').dataset.submenu;\n\t\tthis.setState({ submenu });\n\t}\n\n    toggleInfo = (e) => {\n        const { showInfo } = this.state;\n\t\tthis.setState({ showInfo: !showInfo });\n\t}\n\n    render() {\n        const { id, onClickNav = () => {} } = this.props;\n        const { submenu = 'detailsIn', showInfo } = this.state;\n\n        const { appState, raceStore, userStore } = this.props.stores;\n        const { user: currentUser = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = currentUser;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = selectedClassIds[0];\n        const currentClass = raceStore.getClassById(selectedClassId);\n\n        let selectedCheckpoint = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.id === id) : null;\n        selectedCheckpoint = selectedCheckpoint ? selectedCheckpoint : {};\n        const { sortedContestants = [] } = raceStore;\n\n        const allResultsCp = currentClass.results ? currentClass.results.slice().sort(fieldSorter(['timestamp', '-direction'])).filter(e => e.checkpoint === id) : null;\n\n        const lastResultsIn = allResultsCp ? allResultsCp.filter(e => e.direction === 'in') : null;\n        const lastResultsOut = allResultsCp ? allResultsCp.filter(e => e.direction === 'out') : null;\n        const lastResultsLegtimes = allResultsCp ? allResultsCp.slice().sort(fieldSorter(['legTime', 'timestamp'])).filter(e => e.direction === 'in') : null;\n\n        const lastResultsScratched = allResultsCp ? allResultsCp.filter(e => e.direction === 'scratched') : null;\n\n        const prevCp = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.sortOrder === selectedCheckpoint.sortOrder - 1) : null;\n        const nextCp = currentClass.checkpoints ? currentClass.checkpoints.find(e => e.sortOrder === selectedCheckpoint.sortOrder + 1) : null;\n        const prevResultsOut = currentClass.results && prevCp ? currentClass.results.slice().filter(e => e.checkpoint === prevCp.id && e.direction === 'out') : null;\n        const nextResultsIn = currentClass.results && nextCp ? currentClass.results.slice().filter(e => e.checkpoint === nextCp.id && e.direction === 'in') : null;\n\n        const image = selectedCheckpoint.image;\n        const topImage = selectedCheckpoint.topImage;\n        const shortname = mu.displayNameShort(selectedCheckpoint);\n        const dotColor = ''; // mu.getRankingColor(selectedCheckpoint.sortOrder);\n\n        const defaultImage = './assets/checkpoint.png';\n        const headerImage = topImage ? topImage : defaultImage;\n\n        return (<>\n            <div class='w-100 position-absolute'\n                style={`z-index: -1; height: 18vh; top: 0px; left: 0px; background-size: cover; background-repeat: no-repeat; background-position: 50% 50%; background-color: #a0a0a0; ${headerImage ? `background-image: url(\"${headerImage}\");` : ''}`}\n            />\n\n            {nextCp && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(nextCp.id)}>\n                <i class='fas fa-angle-right' />\n            </button>}\n            {prevCp && <button class='btn btn-link text-primary float-right mr-2 py-0' style='font-size: 2.0em; line-height: 1.0em;' onClick={() => onClickNav(prevCp.id)}>\n                <i class='fas fa-angle-left' />\n            </button>}\n\n            <div class='d-flex position-relative' style='margin-top: 16vh;'>\n                <div\n                    class={`position-relative text-center border rounded-circle imageRounded`}\n                    style={`margin-top: -50px; ${image ? `background-image: url(\"${image}\"); background-size: cover;` : 'background-color: #c0c0c0;'}`}\n                >\n                    {!image && <div class='text-muted' style='font-size: 35px; padding-top: 10px;'>{shortname}</div>}\n                    <div\n                        class={`rounded-pill-both px-2 text-center position-absolute ${dotColor ? '' : 'bg-secondary'} font-weight-bold`}\n                        style={`bottom: -8px; right: 0; ${dotColor ? `background-color: ${dotColor};` : ''}`}\n                    >\n                        {selectedCheckpoint.sortOrder && selectedCheckpoint.sortOrder !== 'n/a' && <>{selectedCheckpoint.sortOrder}</>}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3 text-overflow mb-3' style='line-height: 1.2em;'>\n                    <h3 class='mb-2'>\n                        {selectedCheckpoint.name}\n                    </h3>\n                    <div>\n                        {selectedCheckpoint.cellphone && <><span class='text-muted'><i class='fas fa-phone' /></span> <a href={`tel:${selectedCheckpoint.cellphone}`}>{selectedCheckpoint.cellphone}</a></>}\n                        {selectedCheckpoint.email && <><a class='ml-3' href={`mailto:${selectedCheckpoint.email}`}><i class='fas fa-envelope' /></a></>}\n                        {selectedCheckpoint.facebook && <><a class='ml-3' href={`${mu.asFacebookLink(selectedCheckpoint.facebook)}`}><i class='fab fa-facebook' /></a></>}\n                        {selectedCheckpoint.instagram && <><a class='ml-3' href={`${mu.asInstagramLink(selectedCheckpoint.instagram)}`}><i class='fab fa-instagram' /></a></>}\n                        {selectedCheckpoint.description && <><a class='ml-3 text-primary' onCLick={this.toggleInfo}><i class='fas fa-info-circle' /></a></>}\n                    </div>\n                </div>\n            </div>\n            {showInfo && selectedCheckpoint.description && <div>\n                <Markdown markdown={mu.replaceImages(selectedCheckpoint.description, selectedCheckpoint.images)} markdownOpts={mu.getMarkdownOptions()} />\n            </div>}\n            <div class=''>\n                <div class=''>\n                    <div class='d-flex justify-content-between mt-2'>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-flag' /> Start\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {util.format(selectedCheckpoint.totalDistance || 0, 0)} <span class='text-muted'>km</span>\n                            </div>\n                        </div>\n                        {!selectedCheckpoint.isStartLine && <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-arrow-down' /> Prev\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.format(selectedCheckpoint.distanceFromPrev || 0, 0)} <span class='text-muted'>km</span></nobr>\n                            </div>\n                        </div>}\n                        {/* <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-campground' /> CP\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {selectedCheckpoint.name}\n                            </div>\n                        </div> */}\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-arrow-up' /> Next\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                {util.format(selectedCheckpoint.distanceToNext || 0, 0)} <span class='text-muted'>km</span>\n                            </div>\n                        </div>\n                        <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-flag-checkered' /> Finish\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.format(selectedCheckpoint.distanceToFinish || 0, 0)} <span class='text-muted'>km</span></nobr>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='d-flex justify-content-between mt-2'>\n                        {selectedCheckpoint.requiredRestMinutes && <div class='flex-fill bg-light rounded-lg p-3 align-middle'>\n                            <div>\n                                <small class='text-muted'>\n                                    <i class='fas fa-bed' /> Mandatory rest\n                                </small>\n                            </div>\n                            <div class='text-center'>\n                                <nobr>{util.secToHms(selectedCheckpoint.requiredRestMinutes * 60, true)}</nobr>\n                                {selectedCheckpoint.timeEqualization && <>\n                                    <span class='text-muted ml-2'>+</span> <i class='fas fa-user-clock' /> Time Equalization\n                                </>}\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n            </div>\n\n\n            {selectedCheckpoint.hideResults ? <></> : <>\n                <div class='d-flex justify-content-center mb-3'>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-left rounded-none ${submenu === 'detailsIn' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='detailsIn'\n                        >\n                            Details in\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-none ${submenu === 'detailsOut' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='detailsOut'\n                        >\n                            Detail out\n                        </button>\n                    </div>\n                    <div class='col px-0 pt-2'>\n                        <button\n                            type='button'\n                            class={`btn btn-block rounded-pill-right rounded-none ${submenu === 'legTimes' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n                            style='text-overflow: ellipsis; overflow: hidden;'\n                            onClick={this.chooseSubmenu}\n                            data-submenu='legTimes'\n                        >\n                            Leg times\n                        </button>\n                    </div>\n                </div>\n\n                <div\n                    class='w-100 overflow-auto position-relative'\n                    style='max-height: 60vh;'\n                >\n                    {/* {\n                        \"position\": [],\n                        \"id\": \"2e8f57cb-4bc0-4f5f-b41c-783944be9b8a\",\n                        \"bib\": 30,\n                        \"checkpoint\": \"e1f8e66f-1629-4ea6-b155-fa8fb3b377ab\",\n                        \"direction\": \"out\",\n                        \"dogs\": 10,\n                        \"timestamp\": \"2019-03-12T05:50:00.000Z\"\n                    }, */}\n\n                    <div class='table-responsive-lg'>\n                        <table class='table table-striped table-sm'>\n                            {submenu === 'detailsIn' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs in</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsIn && lastResultsIn.map((res, idx) => {\n                                    const bib = parseInt(res.bib, 10);\n                                    let selectedMusher = bib ? raceStore.getMusherByBibId(bib) : null;\n                                    // const team = raceStore.getTeamById(musher.team);\n                                    // let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n\n                                    selectedMusher = selectedMusher ? selectedMusher : {};\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let restTime;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                        restTime = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                    }\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>{res.dogs}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                            {submenu === 'detailsOut' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Rest in cp</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs out</th>\n                                        <th>Next CP</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsOut && lastResultsOut.map((res, idx) => {\n                                    const bib = parseInt(res.bib, 10);\n                                    let selectedMusher = bib ? raceStore.getMusherByBibId(bib) : null;\n                                    selectedMusher = selectedMusher ? selectedMusher : {};\n\n                                    // let selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    // selectedMusher = selectedMusher ? selectedMusher : {};\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const nextResIn = nextResultsIn && nextResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let restTime;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    if (resIn && resOut && resIn.timestamp && resOut.timestamp) {\n                                        restTime = mu.deltaSec(resIn.timestamp, resOut.timestamp);\n                                    }\n\n                                    let estTimeInNextCp;\n                                    let estTimeToNext = selectedCheckpoint.estTimeToCpMinutes || 0;\n                                    if (estTimeToNext && selectedMusher.cpSortOrder === selectedCheckpoint.sortOrder) {\n                                        estTimeInNextCp = mu.addDeltaSec(resOut.timestamp, estTimeToNext * 60);\n                                    }\n\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && restTime && <>\n                                                    <nobr>\n                                                        {util.secToHms(restTime, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut.dogs}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isFinishLine && nextResIn ? <>\n                                                    <nobr>\n                                                        {mu.formatDate(nextResIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </> : <>\n                                                    {estTimeInNextCp && <>\n                                                        <nobr class='text-muted'>\n                                                            {mu.formatDate(estTimeInNextCp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                        </nobr>\n                                                    </>}\n                                                </>}\n                                            </td>                                    \n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                            {submenu === 'legTimes' && <>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Musher</th>\n                                        <th>Time in</th>\n                                        <th>Time out</th>\n                                        <th>Time used</th>\n                                        <th>Avg speed</th>\n                                        <th>Dogs in</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {lastResultsLegtimes && lastResultsLegtimes.map((res, idx) => {\n                                    const bib = parseInt(res.bib, 10);\n                                    let selectedMusher = bib ? raceStore.getMusherByBibId(bib) : null;\n                                    selectedMusher = selectedMusher ? selectedMusher : {};                                    \n                                    // const selectedMusher = sortedContestants ? sortedContestants.find(e => e.bib === parseInt(res.bib, 10)) : null;\n                                    const resIn = lastResultsIn.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resOut = lastResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    const resScratched = lastResultsScratched.find(e => e.bib === parseInt(res.bib, 10));\n                                    const prevResOut = prevResultsOut && prevResultsOut.find(e => e.bib === parseInt(res.bib, 10));\n                                    let timeused;\n                                    let avgSpeed = 0;\n                                    if (prevResOut && res) {\n                                        timeused = mu.deltaSec(prevResOut.timestamp, res.timestamp);\n                                        avgSpeed = selectedCheckpoint.distanceFromPrev / (timeused / 3600);\n                                    }\n                                    return (<>\n                                        <tr>\n                                            <td class='text-center'>{idx + 1}</td>\n                                            <td>\n                                                <div class='d-flex flex-nowrap'>\n                                                    <div\n                                                        class='text-white font-weight-bolder pl-2 pr-1 py-0 rounded-pill-left rounded-none mr-2'\n                                                        style={`background-color: ${mu.getRankingColor(idx + 1)}; width: 45px;`}\n                                                    >\n                                                        {res.bib}\n                                                    </div>\n                                                    <div>\n                                                        <nobr>\n                                                            {selectedMusher.flag} {selectedMusher.lastname}\n                                                        </nobr>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resIn.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {resOut && <>\n                                                    <nobr>\n                                                        {mu.formatDate(resOut.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                                {resScratched && <>\n                                                    <nobr class='text-danger'>\n                                                        <i class='fas fa-times' />\n                                                        {mu.formatDate(resScratched.timestamp, { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.secToHms(timeused, true)}\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>\n                                                {!selectedCheckpoint.isStartLine && <>\n                                                    <nobr>\n                                                        {util.format(avgSpeed || 0, 1)} <span class='text-muted font-weight-lighter'>km/t</span>\n                                                    </nobr>\n                                                </>}\n                                            </td>\n                                            <td class='text-center'>{res.dogs}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td colspan='8'>\n                                                <xmp>{JSON.stringify(prevCp, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(prevResOut, null, 4)}</xmp>\n                                                <xmp>{JSON.stringify(selectedMusher, null, 4)}</xmp>\n                                            </td>\n                                        </tr> */}\n                                    </>);\n                                })}\n                                </tbody>\n                            </>}\n                        </table>\n                    </div>\n                </div>\n            \n            </>}\n\n\n\n            {/* <h3>RaceLiveCheckpointResult</h3> */}\n            {/* <h5>{id} {selectedCheckpoint.name}</h5> */}\n            {/* <xmp>{JSON.stringify(selectedCheckpoint, null, 4)}</xmp> */}\n            {/* <xmp>{JSON.stringify(selectedCheckpoint, null, 4)}</xmp> */}\n            {/* <xmp>{JSON.stringify(lastResultsIn, null, 4)}</xmp> */}\n        </>);\n    }\n}\n\nexport default RaceLiveCheckpointResult;\n"],"sourceRoot":""}