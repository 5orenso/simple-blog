{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/team/publicFeedLine.js","webpack:///./components/team/publicFeed.js","webpack:///./components/user/updateSettings.js","webpack:///./components/races/index.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","subMenuMarginTop","isLoading","submenu","Home","observer","Component","constructor","props","super","chooseSubmenu","e","this","setState","target","parentElement","dataset","menu","addNavigation","viewmenu","appState","stores","setSwipeRight","setSwipeLeft","route","state","userStore","getFingerprint","getInfo","getNotifications","componentDidMount","loadAll","componentWillUnmount","componentWillReceiveProps","nextProps","render","path","workoutStore","user","currentLocationGeocode","yrWeatherKeys","formatted_address","place","currentTeam","cordovaActiveTrackingParams","isRunning","totalDistance","currentSpeed","totalTime","class","style","role","util","secToHms","format","href","id","yrWeather","join","data-menu","showAddComment","likeWorkout","idxSuggestion","idxAd","limit","offset","hasFollowSugguestions","hasAd","sessionid","Date","getTime","TeamPublicFeedLine","toggleDate","stopPropagation","preventDefault","showDate","async","workoutId","parseInt","closest","setTimeout","response","status","addLikeToFeed","data","addCommentToFeed","type","workout","commentId","replyId","teamStore","addLikeToComment","addLikeToCommentReply","addCommentToWorkoutComment","addCommentToWorkout","addLikeToWorkout","toggleAddComment","inputRef","focus","shareLink","url","title","text","shareUrl","containerRef","feed","onTeamClick","onUserClick","isAdmin","language","hasShareApi","team","findPublicTeam","teamType","findTeamAmbition","ambition","ambitions","findTeamType","image","s3SmallLink","images","likes","comments","hasLikedWorkout","findIndex","totalFollowers","followers","length","isYourTeam","members","indexOf","isFollowing","hasRequestedFollow","followRequests","workoutEquipment","findEquipment","equipment","workoutEquipmentIcon","field","mapImage","push","imgs","toJS","views","getViews","statistics","adminData","getAdminData","name","public","uuidv4","onClick","date","formatDate","locale","hour12","hour","minute","formatDistance","dogs","track","sledWeight","temperature","count","ranking","isNumber","rankingTrend","getClassForTrend","durationAvg","durationAvgTrend","statisticsCurrent","totalInteractions","markdown","replaceImages","markdownOpts","getMarkdownOptions","comment","distanceKm","elevation","duration","speedAvg","dblClick","likeRef","buttonOnly","data-id","data-url","data-title","rel","c","inputRefObject","col","showAvatar","extraClass","callback","compact","dataFields","TeamPublicFeed","setLoadMore","loadTeamsPublicFeed","unsetLoadMore","insertTopRanked","publicTeamsFeed","topRankedWorkouts","topRankedRandomized","shuffleArray","i","l","randomPlace","randomInt","isObject","splice","localUpdateField","insertAds","wrapperClassNames","contentClassNames","insertTeamConfirm","idxConfirm","insertTeamSuggestions","teamid","showTeam","hideTeam","setupIntersection","handleIntersection","intersectionObserverCallback","scrollViewTimer","setInterval","postScrollview","getIntersectionObserverHistory","renderContent","obj","idx","loadPublicFeed","componentWillMount","clearInterval","darkmode","back","dataValues","toggleSetting","settings","updateSetting","hideSettings","forceShow","summaryEmails","infoEmails","partnerEmails","onInput","checked","for","line","isString","match","RegExp","exec","parsedLanguageText","replace","p1","p2","s3XXLargeLink","MARKDOWN_OPTIONS","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","raceStore","load","query","loadRace","newsStore","notifications","races","newsList","sort","a","b","startDate","reverse","map","race","today","endDate","signupStartDate","signupEndDate","active","src","s3MediumLink","ingress","classes","distance","currentClass"],"mappings":"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","file":"route-home.chunk.7354d.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\n\nimport PubSub, { topics } from '../../lib/pubsub';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nimport InviteFriend from '../../components/user/invite';\nimport UserUpdate from '../../components/user/updateSettings';\nimport Install from '../../components/install';\nimport Races from '../../components/races';\nimport WorkoutTotals from '../../components/workout/totals';\nimport WorkoutStatus from '../../components/workout/status';\nimport Teams from '../../components/team/teams';\nimport TeamPublicFeed from '../../components/team/publicFeed';\nimport StoryAdd from '../../components/story/add';\nimport StoryPublicFeed from '../../components/story/publicFeed';\nimport YrWeather from '../../components/yrweather/';\n\nconst initialState = {\n\tisLoading: false,\n\tsubmenu: 'lastWorkouts',\n};\n\n@observer\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\tasync loadAll() {\n\t\tconst { appState, userStore } = this.props.stores;\n\t\tthis.setState({ isLoading: true });\n        await appState.getFingerprint();\n        await userStore.getInfo();\n\t\tawait userStore.getNotifications();\n\n\t\tthis.setState({ isLoading: false });\n    }\n\n\tchooseSubmenu = (e) => {\n\t\tconst submenu = e.target.parentElement.dataset.menu || e.target.dataset.menu;\n\t\tthis.setState({ submenu });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.addNavigation();\n\t\tthis.loadAll();\n\t}\n\n\t// Swipe navigation\n\taddNavigation = (props = this.props) => {\n        const { viewmenu } = props;\n        const { appState } = this.props.stores;\n\t\tif (viewmenu === 'wall') {\n\t\t\tappState.setSwipeRight();\n\t\t\tappState.setSwipeLeft(() => {\n\t\t\t\tappState.setSwipeLeft();\n\t\t\t\troute(`/home-workout`);\n\t\t\t});\n\t\t}\n\t\tif (viewmenu === 'workout') {\n\t\t\tappState.setSwipeLeft();\n\t\t\tappState.setSwipeRight(() => {\n\t\t\t\tappState.setSwipeRight();\n\t\t\t\troute(`/`);\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { appState } = this.props.stores;\n\t\tappState.setSwipeRight();\n\t\tappState.setSwipeLeft();\n\t}\n\t// /Swipe navigation\n\n\tcomponentWillReceiveProps(nextProps) {\n        // console.log('componentWillReceiveProps', nextProps.viewmenu, this.props.viewmenu);\n        if (nextProps.viewmenu !== this.props.viewmenu) {\n            this.addNavigation(nextProps);\n        }\n    }\n\n\trender() {\n\t\tconst { isLoading, submenu } = this.state;\n\t\tconst { viewmenu, path } = this.props;\n\t\tconst { userStore, appState, workoutStore } = this.props.stores;\n\t\t// const { workoutPlan, workoutPlans } = workoutPlanStore;\n\t\tconst { darkmode, viewmode, apiServer } = appState;\n\t\tconst { isAdmin, user } = userStore;\n\t\tconst { currentLocationGeocode = {}, yrWeatherKeys = [] } = user;\n\t\tconst { formatted_address: place } = currentLocationGeocode;\n\n\t\tconst { currentTeam, cordovaActiveTrackingParams, isRunning, totalDistance, currentSpeed, totalTime } = workoutStore;\n\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n\t\t\t\t{isRunning && cordovaActiveTrackingParams && <>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom bg-light py-4'>\n\t\t\t\t\t\t\t<h1 class='text-success font-weight-bold'>\n\t\t\t\t\t\t\t\tTracking\n\t\t\t\t\t\t\t\t<div class='spinner-grow ml-3' role='status' />\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div class='row mb-3'>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.secToHms(totalTime)}</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(currentSpeed * 3.6, 1)} km/t</div>\n\t\t\t\t\t\t\t\t<div class='col-4 text-center font-weight-bold' style='font-size: 1.3em;'>{util.format(totalDistance / 1000, 2)} km</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class='btn btn-block btn-danger' href='/workouts/tracking'><Text id='workouts.go-to-tracking'>Go to tracking</Text></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t\t<div class=''>\n\t\t\t\t\t{user.id && <YrWeather stores={this.props.stores} place={place} yrWeather={yrWeatherKeys.join(',')} />}\n\t\t\t\t</div>\n\n\t\t\t\t{user.id && <StoryAdd stores={this.props.stores} />}\n\n\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-0 mb-2'>\n\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'wall' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tdata-menu='wall'\n\t\t\t\t\t\t\t\thref='/home-wall'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-comments' /> <Text id='home.wall'>Veggen</Text>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'workout' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tdata-menu='workout'\n\t\t\t\t\t\t\t\thref='/home-workout'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-running' />  <Text id='home.workouts'>Treninger</Text>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div class='col px-1 pt-2'>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclass={`btn btn-block ${viewmenu === 'totals' ? 'btn-primary' : 'btn-outline-primary'} text-nowrap`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tdata-menu='totals'\n\t\t\t\t\t\t\t\thref='/home-totals'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-tachometer-alt' /> <Text id='home.totals'>Totaler</Text>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t{viewmenu === 'wall' && <>\n\t\t\t\t\t<StoryPublicFeed stores={this.props.stores} path={path} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'workout' && <>\n\t\t\t\t\t<TeamPublicFeed stores={this.props.stores} />\n\t\t\t\t</>}\n\t\t\t\t{viewmenu === 'totals' && <>\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 border-bottom'>\n\t\t\t\t\t\t<Teams stores={this.props.stores} />\n\t\t\t\t\t\t<WorkoutTotals stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t\t<WorkoutStatus stores={this.props.stores} currentTeam={currentTeam} />\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport ImageScroller from '../imageScroller';\nimport WorkoutComments from '../workout/comments';\nimport WorkoutAddComment from '../workout/commentAdd';\n\nimport PublicTeam from '../team/public';\n\nimport LikesAndComments from '../feedback/likesAndComments';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distanceKm) {\n\tif (distanceKm < 5) {\n\t\treturn util.format(distanceKm, 2);\n\t}\n\tif (distanceKm < 10) {\n\t\treturn util.format(distanceKm, 1);\n\t}\n\treturn util.format(distanceKm, 1);\n}\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 15,\n    offset: 0,\n    hasFollowSugguestions: false, \n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\n@observer\nclass TeamPublicFeedLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.containerRef = null;\n    }\n\n    toggleDate = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { showDate } = this.state;\n        this.setState({ showDate: !showDate });\n    }\n\n\tlikeWorkout = async (e) => {\n        const workoutId = parseInt(e.target.closest('.imageContainer').dataset.id, 10);\n\t\tconst { workoutStore } = this.props.stores;\n\n        const { likeWorkout } = this.state;\n        likeWorkout[workoutId] = true;\n        this.setState({ likeWorkout });\n        setTimeout(() => {\n            const { likeWorkout } = this.state;\n            delete likeWorkout[workoutId];\n            this.setState({ likeWorkout });\n        }, 1200);\n\n\t\tconst response = await workoutStore.likeWorkout({ id: workoutId });\n        if (response && response.status === 200) {\n            this.addLikeToFeed(workoutId, response.data);\n\t\t}\n\t}\n\n    addCommentToFeed = ({ type, workout, response, commentId, replyId }) => {\n        // console.log('addCommentToFeed', { workout, response, commentId });\n        const { teamStore } = this.props.stores;\n        switch (type) {\n            case 'likeComment':\n                teamStore.addLikeToComment({ id: workout.id, data: response.data, commentId });\n                break;\n            case 'likeReply':\n                teamStore.addLikeToCommentReply({ id: workout.id, data: response.data, commentId, replyId });\n                break;\n        \n            default:\n                if (commentId) {\n                    teamStore.addCommentToWorkoutComment({ id: workout.id, data: response.data, commentId });\n                } else {\n                    teamStore.addCommentToWorkout({ id: workout.id, data: response.data });\n                }\n                break;\n        }\n    }\n\n    addLikeToFeed = (id, data) => {\n        const { teamStore } = this.props.stores;\n        teamStore.addLikeToWorkout({ id, data });\n    }\n\n\ttoggleAddComment = (e) => {\n\t\tconst workoutId = e.target.closest('button').dataset.id;\n\t\tconst { showAddComment } = this.state;\n        if (showAddComment[workoutId]) {\n            delete showAddComment[workoutId];\n        } else {\n            showAddComment[workoutId] = true;\n        }\n\t\tthis.setState({\n\t\t\tshowAddComment,\n\t\t}, () => {\n\t\t\tif (this.inputRef[workoutId]) {\n\t\t\t\tthis.inputRef[workoutId].focus();\n\t\t\t}\n\t\t});\n\t}\n\n    shareLink = (e) => {\n        const { url, title, text } = e.target.closest('button').dataset;\n        const { appState } = this.props.stores;\n        appState.shareUrl({ url, title, text });\n    }\n\n    render() {\n        const { feed, idx, onTeamClick = () => {}, onUserClick = () => {} } = this.props;\n        const { showAddComment, showDate, likeWorkout } = this.state;\n        const { teamStore, userStore, appState } = this.props.stores;\n        const { user, isAdmin } = userStore;\n        const { language = 'no' } = user;\n        const { darkmode, hasShareApi } = appState;\n\n        const team = teamStore.findPublicTeam(feed.team) || {};\n        const teamAmbition = userStore.findTeamAmbition({ ambition: team.ambitions, language });\n        const teamType = userStore.findTeamType({ type: team.type, language });\n\n        let image;\n        if (team.image && team.image.s3SmallLink) {\n            image = team.image;\n        } else if (team.images && team.images[0] && team.images[0].s3SmallLink) {\n            image = team.images[0];\n        }\n        const { likes, comments } = feed;\n        const hasLikedWorkout = feed.likes && feed.likes.findIndex(e => e.user === user.id) > -1;\n        const totalFollowers = team && team.followers ? team.followers.length : 0;\n\n        const isYourTeam = team.members && team.members.indexOf(user.id) > -1;\n        const isFollowing = team && team.followers && team.followers.indexOf(user.id) > -1;\n        const hasRequestedFollow = team.followRequests && team.followRequests.findIndex(e => e.id === user.id) > -1;\n        const workoutEquipment = userStore.findEquipment({ equipment: feed.equipment, language });\n        const workoutEquipmentIcon = userStore.findEquipment({ equipment: feed.equipment, field: 'icon' });\n\n        const images = [];\n        if (feed.mapImage) {\n            images.push({\n                ...feed.mapImage,\n                type: 'map',\n            });\n        }\n        if (feed.images) {\n            const imgs = toJS(feed.images);\n            images.push(...imgs);\n        }\n\n        const { currentLocationGeocode = {}, yrWeather = [] } = feed;\n        const views = mu.getViews(feed.statistics);\n        const adminData = mu.getAdminData(feed.statistics);\n\n        if (!team || !team.name) {\n            return '';\n        }\n\n        return (<>\n            <div class='d-flex position-relative'>\n                <div class='text-center'>\n                    <div\n                        class={`text-center border rounded-circle imageRounded imageRoundedSmall`}\n                        style={image ? `background-image: url(\"${image.s3SmallLink}\"); background-size: cover;` : ''}>\n                        {!image && <i class='fas fa-users text-muted mt-2' style='font-size: 20px;' />}\n                    </div>\n                </div>\n                <div class='flex-grow-1 pl-3' style='line-height: 1.2em;'>\n                    <span class='badge badge-pill badge-secondary float-right'>{teamType}</span>\n                    <h5 class='mb-1' style='line-height: 1.0em;'>\n                        {team.public ? <>\n                            <a href={`/teams/public/${team.uuidv4}`} onClick={(e) => onTeamClick(e, team.uuidv4)} class='stretched-link'>{team.name}</a>\n                        </> : <>\n                            {team.name}\n                        </>}\n                    </h5>\n                    <div>\n                        {feed.date && <small class='text-muted' onClick={this.toggleDate}>\n                            {showDate ? util.formatDate(feed.date, { locale: 'no-NB', hour12: false, hour: '2-digit', minute: '2-digit' }) : util.formatDistance(feed.date, new Date(), { locale: 'no-NB' })}\n                        </small>}\n                        {feed.public === 1 ? <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-globe-europe' />\n                            </small>\n                        </> : <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-users' /> ({util.format(totalFollowers)})\n                            </small>\n                        </>}\n                        <small class='text-muted'>\n                            {feed.equipment > 0 && <><i class={`${workoutEquipmentIcon} ml-2`} /> {workoutEquipment}</>}\n                            {/* {feed.distanceKm > 0 && <><i class='fas fa-road ml-2' /> {displayDistance(feed.distanceKm)}km</>}\n                            {feed.elevation > 0 && <><i class='fas fa-mountain ml-2' /> {util.format(feed.elevation, 0)}m</>}\n                            {feed.speedAvg > 0 && <><i class='fas fa-tachometer-alt ml-2' /> {util.format(feed.speedAvg, 1)}km/t</>} */}\n                            {feed.dogs > 0 && <><i class='fas fa-dog ml-2' /> {feed.dogs.length}</>}\n                            {feed.track > 0 && <><i class={`fas fa-map-marked text-${feed.track > 0 ? 'success' : 'danger'} ml-2`} /></>}\n                            {/* {feed.dogsLeft > 0 && <><i class={`fas fa-crosshairs text-${feed.dogsLeft && feed.dogsRight ? 'success' : 'danger'} ml-2`} /></>} */}\n                            {feed.sledWeight > 0 && <>\n                                <i class='fas fa-sleigh ml-2' /> {util.format(feed.sledWeight, 0)} kg\n                            </>}\n                            {feed.temperature !== 0 && <>\n                                <i class='fas fa-temperature-low ml-2' /> {util.format(feed.temperature, 1)}°C\n                            </>}\n                            {/* {feed.kcalBurnedTotal && <><i class='fas fa-balance-scale' /> {util.format(feed.kcalBurnedTotal)} kcal</>}\n                            {feed.kcalMeatGramsTotal && <><i class='fas fa-drumstick-bite ml-2' /> {util.format(feed.kcalMeatGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalSalmonGramsTotal && <><i class='fas fa-fish ml-2' /> {util.format(feed.kcalSalmonGramsTotal / 1000, 1)} kg</>}\n                            {feed.kcalFatGramsTotal && <><i class='fas fa-piggy-bank ml-2' /> {util.format(feed.kcalFatGramsTotal / 1000, 1)} kg</>} */}\n                        </small>\n                        {isAdmin && currentLocationGeocode && currentLocationGeocode.formatted_address && <>\n                            <small class='ml-2 text-muted'>\n                                <i class='fas fa-map-marker-alt' /> {currentLocationGeocode.formatted_address}\n                            </small>\n                        </>}\n                        {isAdmin && adminData && <>\n                            <br />\n                            {/* {JSON.stringify(adminData)}<br /> */}\n                            <small class='text-muted'>\n                                Admin:\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                Views: {adminData.count}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                Rank: {adminData.ranking} {util.isNumber(adminData.rankingTrend) && <><i class={mu.getClassForTrend(adminData.rankingTrend)} /></>}\n                            </small>\n                            <small class='ml-2 text-muted'>\n                                Dur: {util.format(adminData.durationAvg / 1000, 1)}s {util.isNumber(adminData.durationAvgTrend) && <><i class={mu.getClassForTrend(adminData.durationAvgTrend)} /></>}\n                            </small>\n                            {feed.statisticsCurrent && feed.statisticsCurrent.totalInteractions > 0 && <small class='ml-2 text-muted'>\n                                Score: {util.format(feed.statisticsCurrent.totalInteractions, 0)}\n                            </small>}\n                        </>}\n\n                    </div>\n                </div>\n            </div>\n\n            <div class='row mt-2'>\n                <div class='clearfix col-12 font-weight-bold' style='font-size: 1.2em;'>\n                    <Markdown markdown={mu.replaceImages(feed.name, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n                <div class='clearfix col-12'>\n                    <Markdown markdown={mu.replaceImages(feed.comment, feed.images, language)} markdownOpts={mu.getMarkdownOptions()} />\n                </div>\n            </div>\n\n            <div class='row mt-1'>\n                {feed.distanceKm > 0 && <div class='col-3'>\n                    <div class='text-overflow'>\n                        <small><i class='fas fa-road' /> <Text id='workout.calendar.distance'>Distanse</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {displayDistance(feed.distanceKm)}km\n                    </div>\n                </div>}\n                {feed.elevation > 0 && <div class='col-3'>\n                    <div class='text-overflow'>\n                        <small><i class='fas fa-mountain' /> <Text id='workout.calendar.ascend'>Høydemeter</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.format(feed.elevation, 0)}m\n                    </div>\n                </div>}\n                {feed.duration > 0 && <div class='col-3'>\n                    <div class='text-overflow'>\n                        <small><i class='fas fa-clock' /> <Text id='workout.calendar.duration'>Varighet</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.secToHms(feed.duration, true)}\n                    </div>\n                </div>}\n                {feed.speedAvg > 0 && <div class='col-3'>\n                    <div class='text-overflow'>\n                        <small><i class='fas fa-tachometer-alt' /> <Text id='workout.calendar.avg-speed'>Snittfart</Text></small>\n                    </div>\n                    <div class='text-overflow font-weight-light' style='font-size: 1.2em;'>\n                        {util.format(feed.speedAvg, 1)}km/t\n                    </div>\n                </div>}\n            </div>\n\n            {/* <div class='row'>\n                <div class='row mb-3'>\n                    {feed.gpxInfo && feed.gpxInfo.svgMap && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 300' style='width: 150px; height: 150px;'>\n                                <path d={`${feed.gpxInfo.svgMap}`} style='fill: none; stroke: #0275d8; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Track</small>\n                        </div>\n                    </>}\n                    {feed.gpxInfo && feed.gpxInfo.svgElevation && <>\n                        <div class='col-6 mt-auto text-center overflow-hidden'>\n                            <svg viewBox='0 0 300 200' style='width: 150px; height: 100px;'>\n                                <path d={`${feed.gpxInfo.svgElevation}`} style='fill: none; stroke: #5cb85c; stroke-width: 5; opacity: 0.5;' />\n                            </svg>\n                            <small class='text-muted'>Elevation</small>\n                        </div>\n                    </>}\n                </div>\n            </div> */}\n\n            <div class='container-fluid px-0 mt-1'>\n                <div class='row'>\n                    <ImageScroller stores={this.props.stores} images={images} id={feed.id} dblClick={this.likeWorkout} likeRef={likeWorkout} />\n                </div>\n            </div>\n\n            <div class='mt-2'>\n                <LikesAndComments \n                    stores={this.props.stores} \n                    likes={likes} \n                    comments={comments} \n                    type='team'\n                    onTeamClick={onTeamClick}\n                    onUserClick={onUserClick}\n                />\n            </div>\n\n            {!isYourTeam && !isFollowing && !hasRequestedFollow && <div class='clearfix mb-2'>\n                <PublicTeam stores={this.props.stores} team={team} buttonOnly={true} />\n            </div>}\n\n            <div>\n                <div class='row'>\n                    <div class='col text-center'>\n                        <button type='button' class={`imageContainer btn btn-sm btn-outline-${hasLikedWorkout ? 'primary' : 'secondary'} btn-lg btn-block ${hasLikedWorkout ? 'text-primary' : ''} text-overflow`}\n                            data-id={feed.id}\n                            onClick={this.likeWorkout}\n                            // disabled={hasLikedWorkout}\n                        >\n                            <i class={`${hasLikedWorkout ? 'text-primary fas' : 'far'} fa-thumbs-up`} /> <Text id='comments.like'>Lik</Text>\n                        </button>\n                    </div>\n                    <div class='col text-center'>\n                        <button type='button' class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                            data-id={feed.id}\n                            onClick={this.toggleAddComment}\n                        >\n                            <i class='fas fa-comment' /> <Text id='comments.comment-add'>Kommentar</Text>\n                        </button>\n                    </div>\n                    {hasShareApi ? <>\n                        <div class='col text-center'>\n                            <button class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                onClick={this.shareLink}\n                                data-url={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                data-title={`title: ${feed.title}`}\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </button>\n                        </div>\n                    </> : <>\n                        <div class='col text-center'>\n                            <a class='btn btn-sm btn-outline-secondary btn-lg btn-block text-overflow'\n                                href={`https://themusher.app/share/workout/${feed.uuidv4}`}\n                                target='_blank'\n                                rel='noreferrer'\n                            >\n                                <i class='fas fa-share' /> <Text id='story.share'>Del</Text>\n                            </a>\n                        </div>\n                    </>}\n                </div>\n            </div>\n\n            {views > 0 && <div>\n                <small class='ml-2 text-muted'>\n                    {views} <Text id='story.views'>views</Text>\n                </small>\n            </div>}\n\n            <div class='mt-2'>\n                {showAddComment[feed.id] && <WorkoutAddComment\n                    stores={this.props.stores}\n                    workout={feed}\n                    inputRef={c => this.inputRef[feed.id] = c}\n                    inputRefObject={this.inputRef}\n                    col='12'\n                    offset='0'\n                    showAvatar={true}\n                    extraClass='px-0'\n                    callback={this.addCommentToFeed}\n                />}\n                <WorkoutComments\n                    stores={this.props.stores}\n                    workout={feed}\n                    col='12'\n                    offset='0'\n                    compact={false}\n                    callback={this.addCommentToFeed}\n                />\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeedLine;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport TeamConnectBoxes from './connect-boxes';\nimport TeamConnectConfirm from './connect-confirm';\n\nimport Ad from '../ad/';\n\nimport FastList from './fastList';\n\nimport Overlay from '../overlay/';\nimport TeamsPublicDetail from '../../routes/teams/publicDetail';\n\nimport TeamPublicFeedLine from './publicFeedLine';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: {},\n    // viewImageIdx: {},\n    likeWorkout: {},\n    idxSuggestion: 0,\n    idxAd: 4,\n    limit: 10,\n    offset: 0,\n    hasFollowSugguestions: false, \n    hasAd: false,\n    sessionid: new Date().getTime(),\n};\n\nconst dataFields = ['id', 'type', 'user', 'team', 'title'];\n\n@observer\nclass TeamPublicFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadTeamsPublicFeed({ props = this.props, limit, offset }) {\n\t\tconst { teamStore } = props.stores;\n\t\tawait teamStore.loadPublicFeed({ limit, offset });\n\t}\n\n    setLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {\n            let { limit, offset } = this.state;\n            offset += limit;\n            this.setState({ offset });\n            this.loadTeamsPublicFeed({ limit, offset });\n        });\n    }\n\n    unsetLoadMore = () => {\n        const { teamStore } = this.props.stores;\n        teamStore.setLoadMore(() => {});\n    }\n\n    async loadAll() {\n        const { limit } = this.state;\n\t\tawait this.loadTeamsPublicFeed({ limit, offset: 0 });\n        this.insertTopRanked();\n        // this.insertAds();\n        // this.insertTeamConfirm();\n        // this.insertTeamSuggestions();\n    }\n\n    insertTopRanked = () => {\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed, topRankedWorkouts } = teamStore;\n        const topRankedRandomized = util.shuffleArray(topRankedWorkouts);\n        const feed = [...publicTeamsFeed];\n        for (let i = 0, l = 3; i < l; i += 1) {\n            const randomPlace = mu.randomInt(0, 7);\n            if (util.isObject(topRankedRandomized[i])) {\n                feed.splice(randomPlace, 0, topRankedRandomized[i]);\n            }\n        }\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertAds = () => {\n        const { idxAd } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxAd, 0, { type: 'ad', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamConfirm = () => {\n        const { idxConfirm } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxConfirm, 0, { type: 'teamConfirm', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    insertTeamSuggestions = () => {\n        const { idxSuggestion } = this.state;\n        const { teamStore } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const feed = [...publicTeamsFeed];\n        feed.splice(idxSuggestion, 0, { type: 'teamSuggestions', wrapperClassNames: '', contentClassNames: '' });\n        teamStore.localUpdateField('publicTeamsFeed', feed);\n    }\n\n    // Overlay functions\n    onTeamClick = (e, teamid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({\n            showTeam: teamid,\n        });\n        return false;\n    }\n\n    hideTeam = () => {\n        this.setState({\n            showTeam: null,\n        });\n    }\n\n    onUserClick = (e, userid) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n    // /Overlay functions\n\n    // Scroll views timer\n    setupIntersection = () => {\n        this.setState({\n            handleIntersection: mu.intersectionObserverCallback,\n        });\n        const { teamStore } = this.props.stores;\n        this.scrollViewTimer = setInterval(() => teamStore.postScrollview(mu.getIntersectionObserverHistory()), 30 * 1000);\n    }\n\n    componentWillMount() {\n        this.setupIntersection();\n    }\n\n    componentWillUnmount() {\n        this.unsetLoadMore();\n        const { teamStore } = this.props.stores;\n        teamStore.postScrollview(mu.getIntersectionObserverHistory());\n        clearInterval(this.scrollViewTimer);\n    }\n\n\tcomponentDidMount() {\n        this.loadAll();\n        this.setLoadMore();\n\t}\n\n    renderContent = ({ obj, idx }) => {\n        const { appState } = this.props.stores;\n        const { path } = appState;\n\n        if (obj.type === 'ad') {\n            return(<>\n                <Ad stores={this.props.stores} path={path} />\n            </>);\n        }\n        if (obj.type === 'teamConfirm') {\n            return(<>\n                <TeamConnectConfirm stores={this.props.stores} />\n            </>);\n        }\n        if (obj.type === 'teamSuggestions') {\n            return(<>\n                <TeamConnectBoxes stores={this.props.stores} />\n            </>);\n        }\n        return (<>\n            <TeamPublicFeedLine\n                stores={this.props.stores}\n                feed={obj}\n                idx={idx}\n                onTeamClick={this.onTeamClick}\n                onUserClick={this.onUserClick}\n            />\n        </>);\n    }\n\n    render() {\n        const { showTeam, handleIntersection, sessionid } = this.state;\n        const { teamStore, appState } = this.props.stores;\n        const { publicTeamsFeed } = teamStore;\n        const { path, darkmode } = appState;\n\n        return (<>\n            {showTeam && <Overlay>\n                <TeamsPublicDetail stores={this.props.stores} teamid={showTeam} marginTop={'0px;'} marginBottom={'0px;'} back={this.hideTeam} />\n            </Overlay>}\n\n            <div class='w-100'>\n                <TeamConnectConfirm stores={this.props.stores} />\n\n                <FastList\n                    data={publicTeamsFeed}\n                    wrapperClassNames={'row pb-4'}\n                    contentClassNames={`col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 my-1 position-relative rounded rounded-lg py-3 bg-${darkmode ? 'black' : 'white'} shadow-sm`}\n                    renderContent={this.renderContent}\n                    dataFields={dataFields}\n                    dataValues={{ type: '10' }}\n                    handleIntersection={handleIntersection}\n                    sessionid={sessionid}\n                />\n\n            </div>\n        </>);\n    }\n}\n\nexport default TeamPublicFeed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkState from 'linkstate';\n\n@observer\nclass UserSettings extends Component {\n    toggleSetting= async (field) => {\n        const { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n        await userStore.updateSetting({ [`settings.${field}`]: settings[field] === 1 ? 0 : 1 });\n    }\n\n    hideSettings = async () => {\n        const { userStore } = this.props.stores;\n        await userStore.updateSetting({ 'settings.hideSettings': 1 });\n        this.setState({\n            hideSettings: true,\n        });\n    }\n\n    render() {\n        const { hideSettings } = this.state;\n\t\tconst { userStore } = this.props.stores;\n        const { forceShow } = this.props;\n        const { user } = userStore;\n        const { settings = {} } = user;\n        if (hideSettings || settings.hideSettings) {\n            return '';\n        }\n        if (!forceShow && settings.summaryEmails && settings.infoEmails && settings.partnerEmails) {\n            return '';\n        }\n        return (\n           <div class='col-12 col-sm-8 col-lg-6 offset-sm-2 offset-lg-3 mt-4 mb-4 pt-4 pb-4 border-bottom border-top'>\n                <h5><Text id='users.settings'>Brukerinnstillinger</Text></h5>\n\n                {!settings.summaryEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-summary-email'>Oppsummeringer</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsSummaryEmails' onInput={() => this.toggleSetting('summaryEmails')} checked={settings.summaryEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsSummaryEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-summary-email'>Motta oppsummeringer via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.infoEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-info-email'>Info</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsInfoEmails' onInput={() => this.toggleSetting('infoEmails')} checked={settings.infoEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsInfoEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-info-email'>Motta info via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t\t{!settings.partnerEmails && <div class='row mt-4'>\n\t\t\t\t\t<div class='col-4 text-muted text-right'>\n\t\t\t\t\t\t<Text id='users.settings-partner-email'>Partners</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-8'>\n\t\t\t\t\t\t<div class='custom-control custom-switch'>\n\t\t\t\t\t\t\t<input type='checkbox' class='custom-control-input' id='settingsPartnerEmails' onInput={() => this.toggleSetting('partnerEmails')} checked={settings.partnerEmails} />\n\t\t\t\t\t\t\t<label class='custom-control-label' for='settingsPartnerEmails' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<small class='text-muted'><Text id='users.settings-receive-partner-email'>Motta tilbud fra våre partnere via e-post</Text></small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted'>\n                        <small>\n                            <a href='/users'>\n                                <i class='fas fa-sliders-h' /> <Text id='users.settings-text-info'>Innstillingene finner du inne på profilen din.</Text>\n                            </a>\n                        </small>\n                    </div>\n                </div>\n\n                <div class='row mt-4'>\n                    <div class='col-12 text-muted text-right'>\n                        <small>\n                            <button type='button' class='btn btn-sm btn-link mb-2' onClick={this.hideSettings}>\n                                <i class='fas fa-eye-slash' /> <Text id='users.hide-settings'>Skjul innstillingene</Text>\n                            </button>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserSettings;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nconst MARKDOWN_OPTIONS = {\n\tpedantic: false,\n\tgfm: true,\n\tbreaks: true,\n\tsanitize: false,\n\tsmartLists: true,\n\tsmartypants: true,\n\txhtml: true,\n};\n\nimport mu from '../../lib/musher-util';\n\nfunction replaceImages(line = '', images, language = 'no') {\n    function imageReplacer(match, p1, p2, p3, offset, string) {\n        // console.log({ match, p1, p2, p3, offset, string })\n        if (util.isObject(images[p1])) {\n            return `<img src=${images[p1].s3XXLargeLink} class='img-fluid float-right' style='width: ${p2 || 40}%;' />`;\n        }\n        return '';\n    }\n\n    if (util.isString(line)) {\n\t\tlet text = line;\n        const regex = new RegExp(`<${language}>(.*?)</${language}>`, 's');\n\t\tconst match = regex.exec(text);\n\t\tif (match) {\n\t\t\tconst parsedLanguageText = match[0];\n\t\t\tif (parsedLanguageText) {\n\t\t\t\ttext = parsedLanguageText;\n\t\t\t}\n\t\t}\n        return text.replace(/\\{\\{img\\.(\\d+)\\s*(\\d*)\\}\\}/g, imageReplacer);\n    }\n    return line;\n}\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Races extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n    async loadRace(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { raceStore } = props.stores;\n\t\tconst query = {};\n\t\tawait raceStore.load({ query });\n\t\tthis.setState({ isLoading: false });\n\t}\n\n    componentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.loadRace(nextProps);\n\t}\n\n    render() {\n        const { appState, userStore, raceStore, newsStore } = this.props.stores;\n\t\tconst { allUsers, isAdmin, user, notifications = [] } = userStore;\n\t\tconst { races } = raceStore;\n\t\tconst { newsList } = newsStore;\n\t\tconst news = newsList && newsList[0] ? newsList[0] : null;\n\t\tconst { darkmode, language = 'no' } = appState;\n\t\tconst { showNews } = this.state;\n\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <h5><Text id='races.homerun'>Homerun races</Text></h5>\n                </div>\n\n                {(races || races.length === 0) && <div class='col-12 text-center py-5'>\n                    <h5>No upcoming races!</h5>\n                    Take a look at the previous races:<br />\n                    <a href='https://homerunrace.no/' target='_blank' rel='noreferrer'>homerunrace.no</a>\n                </div>}\n\n                {races && races.sort((a, b) => a.startDate - b.startDate).reverse().map(race =>  {\n                    const today = new Date();\n                    let status = '';\n                    if (today >= new Date(race.startDate) && today <= new Date(race.endDate)) {\n                        status = 'race';\n                    } else if (today >= new Date(race.signupStartDate) && today <= new Date(race.signupEndDate)) {\n                        status = 'signup';\n                    } else if (today > new Date(race.endDate)) {\n                        return (<></>);\n                    }\n\n                    return (<>\n                        <div class='col-12 col-sm-12 col-md-6 col-lg-6 mb-3'>\n\n                            <div class='card position-relative'>\n                                <h5 class='position-absolute' style='top: 10px; right: 10px;'>\n                                    {status === 'signup' && <>\n                                        <div class='spinner-grow text-primary' role='status' />\n                                    </>}\n                                    {status === 'race' && <>\n                                        <div class='spinner-grow text-danger' role='status' />\n                                    </>}\n                                    {status === 'done' && <>\n                                        <span><i class='fas fa-check text-success' /></span>\n                                    </>}\n                                </h5>\n                                <h5 class='card-header'>\n                                    {isAdmin && <i class={`fas fa-eye${race.active ? ' text-success' : '-slash text-danger'} float-right`} />}\n                                    {race.title}\n                                </h5>\n                                <div class='list-thumb d-flex align-items-center position-relative'>\n                                    <h5 class='position-absolute' style='top: 3px; right: 5px;'>\n                                        {status === 'signup' && <>\n                                            <span class='badge badge-primary border border-white ml-2'><Text id='races.signup-open'>Påmelding åpen</Text></span>\n                                        </>}\n                                        {status === 'race' && <>\n                                            <span class='badge badge-danger border border-white ml-2'><Text id='races.race-in-progress'>Løp pågår</Text></span>\n                                        </>}\n                                        {status === 'done' && <>\n                                            <span class='badge badge-success border border-white ml-2'><Text id='races.race-finished'>Løp avsluttet</Text></span>\n                                        </>}\n                                    </h5>\n                                    {(race.images && race.images[0]) ? <img src={race.images[0].s3MediumLink} class='card-img-top' /> : ''}\n                                </div>\n                                <div class='card-body'>\n                                    <p class='card-text'>\n                                        <Markdown markdown={replaceImages(race.ingress, race.images, language)} markdownOpts={MARKDOWN_OPTIONS} />\t\t\t\t\t\t\t\t\n                                    </p>\n                                    {race.classes && <>\n                                        <div class='mb-3'>\n                                            <small class='font-weight-lighter mr-2'><Text id='races.classes'>Klasser</Text>: </small><br />\n                                            {race.classes.sort((a, b) => a.distance - b.distance).map(currentClass => <>\n                                                <span class='badge badge-pill badge-light mr-2 font-weight-light'>\n                                                    {currentClass.title}\n                                                    {/* <span class='badge badge-info ml-2 font-weight-light'>{currentClass.contestants.length}</span> */}\n                                                </span>\n                                            </>)}\t\t\t\t\t\t\t\t\t\t\t\n                                        </div>\n                                    </>}\n                                    <a href={`/app-races/${race.id}`} class='btn btn-primary stretched-link'><Text id='races.read-more'>Les mer</Text></a>\n                                </div>\n                                <div class='card-footer'>\n                                    <small class='text-muted'>\n                                        <Text id='races.race-days'>Løpsdager</Text>: {race.startDate && <>{util.formatDate(race.startDate, { locale: language })}</>}\n                                        {race.endDate && <> - {util.formatDate(race.endDate, { locale: language })}</>}\n                                    </small>\n                                </div>\n                            </div>\n\n                        </div>\t\t\t\t\t\t\n                    </>);\n                })}\n\n\n            </div>\n        );\n    }\n}\n\nexport default Races;\n"],"sourceRoot":""}