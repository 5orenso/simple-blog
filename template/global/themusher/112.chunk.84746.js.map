{"version":3,"sources":["webpack:///./routes/wizards/follow.js"],"names":["WizardStartup","observer","props","scrollImages","e","target","imageIdx","scrollLeft","clientWidth","nearestInt","Math","round","diff","abs","Number","isInteger","setState","state","loadNews","query","this","newsStore","stores","tag","userStore","isAdmin","showall","load","componentDidMount","render","appState","language","newsList","class","style","onScroll","map","news","editFields","mu","replaceFieldTags","ingress","onTouchstart","stopPropagation","onTouchend","onTouchmove","images","src","s3LargeLink","title","markdown","replaceImages","markdownOpts","getMarkdownOptions","field","name","type","help","body","img","idx","Component"],"mappings":"yOAaMA,EADLC,Y,cAEG,WAAYC,GAAO,aACf,cAAMA,IAAN,MAMJC,aAAe,SAACC,GAAM,MAG+BA,EAAEC,OAE7CC,EALY,EAGVC,WAHU,EAGeC,YAK3BC,EAAaC,KAAKC,MAAML,GACxBM,EAAOF,KAAKG,IAAIJ,EAAaH,IAE/BQ,OAAOC,UAAUT,IAAaM,EAAO,KACrC,EAAKI,SAAS,CACVV,SAAUG,KAlBlB,EAAKQ,MAAQ,CACTX,SAAU,GAHC,E,0HAyBbY,SAAN,SAAehB,GAAf,yCAGIiB,EAMN,YATE,IAAejB,MAAQkB,KAAKlB,OACtBmB,GADN,EAC+BnB,EAAMoB,QAA/BD,UAEFF,EAAQ,CACbI,IAAK,iBAJJ,EACiBC,UACXC,UAKPN,EAAMO,QAAU,GAEjB,gBAAML,EAAUM,KAAK,CAAER,WAAvB,MAA+B,sDAT7B,a,EAYHS,kBAAA,WACCR,KAAKF,Y,EAGHW,OAAA,WAAS,WACGvB,EAAac,KAAKH,MAAlBX,SADH,EAEgBc,KAAKlB,MAAMoB,OAAxBQ,SACAC,gBAHH,MAGc,KAHd,EAMHC,EADoBZ,KAAKlB,MAAMoB,OAAzBD,UACNW,SAIF,OACI,mBAAKC,MAAM,mBACP,mBAAKA,MAAM,OACP,mBAAKA,MAAM,eAAeC,MAAM,iBAC5B,mBACID,MAAM,iDACNC,MAAM,iDACNC,SAAUf,KAAKjB,cAEd6B,EAASI,KAAI,SAACC,GACX,IAAMC,EAAaC,IAAGC,iBAAiBH,EAAKI,SAC5C,OAAQ,mBACJ,mBAAKR,MAAM,yCACP,mBACIA,MAAK,0BACLC,MAAK,mQAKLQ,aAAc,SAACtC,GAAQA,EAAEuC,mBACzBC,WAAY,SAACxC,GAAQA,EAAEuC,mBACvBE,YAAa,SAACzC,GAAQA,EAAEuC,oBAExB,mBAAKV,MAAM,iGAAiGC,MAAM,gBAC5GG,EAAKS,QAAUT,EAAKS,OAAO,IAAO,mBAAKC,IAAKV,EAAKS,OAAO,GAAGE,YAAaf,MAAM,gBAGpF,mBAAKA,MAAM,qBAAqBC,MAAM,gBAClC,mBAAKD,MAAM,uFACP,sBAAKI,EAAKY,OACV,YAAC,IAAD,CAAUC,SAAUX,IAAGY,cAAcd,EAAKI,QAASJ,EAAKS,OAAQf,GAAU,GAAQqB,aAAcb,IAAGc,uBAEnG,mBAAKpB,MAAM,aACNK,GAAcA,EAAWF,KAAI,SAAAkB,GAAK,OAAI,mBACnC,YAAC,UAAD,CAAehC,OAAQ,EAAKpB,MAAMoB,OAAQgC,MAAOA,EAAMC,KAAMC,KAAMF,EAAME,KAAMP,MAAOK,EAAML,MAAOQ,KAAMH,EAAMG,YAGvH,yBAAO,YAAC,IAAD,CAAUP,SAAUX,IAAGY,cAAcd,EAAKqB,KAAMrB,EAAKS,OAAQf,GAAU,GAAQqB,aAAcb,IAAGc,iCAQnI,mBAAKpB,MAAM,yDAAyDC,MAAM,6BACtE,yBACI,yBACKF,EAASI,KAAI,SAACuB,EAAKC,GAAN,OAAc,mBACxB,iBAAG3B,OAAU2B,IAAQtD,EAAW,MAAQ,OAAhC,+B,GAtGpBuD,e,EAoHb7D,a","file":"112.chunk.84746.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport linkState from 'linkstate';\nimport { Text, Localizer, withText } from 'preact-i18n';\nimport Markdown from 'preact-markdown';\n\nimport UserEditField from '../users/edit';\n\nimport mu from '../../lib/musher-util';\n\n@observer\nclass WizardStartup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIdx: 0,\n        };\n    }\n\n    scrollImages = (e) => {\n        const { dogs } = this.props;\n\n        const { scrollLeft, scrollWidth, clientWidth } = e.target;\n        const imageStep = clientWidth;\n        const imageIdx = scrollLeft / imageStep;\n        // console.log({ e, imageStep, imageIdx, scrollLeft, scrollWidth, clientWidth });\n\n        const nearestInt = Math.round(imageIdx);\n        const diff = Math.abs(nearestInt - imageIdx);\n        // console.log({ nearestInt, diff });\n        if (Number.isInteger(imageIdx) || diff < 0.1) {\n            this.setState({\n                imageIdx: nearestInt,\n            });\n        }\n    }\n\n    async loadNews(props = this.props) {\n\t\tconst { newsStore, userStore } = props.stores;\n\t\tconst { isAdmin } = userStore;\n\t\tconst query = {\n\t\t\ttag: 'wizardStartup',\n\t\t};\n\t\tif (isAdmin) {\n\t\t\tquery.showall = 1;\n\t\t}\n\t\tawait newsStore.load({ query });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n    render() {\n        const { imageIdx } = this.state;\n        const { appState } = this.props.stores;\n        const { language = 'en' } = appState;\n\n        const { newsStore } = this.props.stores;\n\t\tconst { newsList } = newsStore;\n\n        const darkmode = true;\n\n        return (\n            <div class='container-fluid'>\n                <div class='row'>\n                    <div class='fixed-bottom' style='height: 90vh;'>\n                        <div\n                            class='d-flex flex-row flex-nowrap no-scrollbar h-100'\n                            style='overflow: auto; scroll-snap-type: x mandatory;'\n                            onScroll={this.scrollImages}\n                        >\n                            {newsList.map((news, idx) => {\n                                const editFields = mu.replaceFieldTags(news.ingress);\n                                return (<>\n                                    <div class='col-12 clearfix p-0 position-relative'>\n                                        <div\n                                            class={`w-100 h-100 text-center`}\n                                            style={`\n                                                flex-wrap: wrap;\n                                                overflow-y: hidden;\n                                                scroll-snap-align: start;\n                                            `}\n                                            onTouchstart={(e) => { e.stopPropagation(); }}\n                                            onTouchend={(e) => { e.stopPropagation(); }}\n                                            onTouchmove={(e) => { e.stopPropagation(); }}\n                                        >\n                                            <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 overflow-hidden' style='height: 25%;'>\n                                                {(news.images && news.images[0]) && <img src={news.images[0].s3LargeLink} class='img-fluid ' />}\n                                            </div>\n\n                                            <div class='bg-white text-dark' style='height: 75%;'>\n                                                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 pt-5'>\n                                                    <h3>{news.title}</h3>\n                                                    <Markdown markdown={mu.replaceImages(news.ingress, news.images, language, false)} markdownOpts={mu.getMarkdownOptions()} />\n\n                                                    <div class='text-left'>\n                                                        {editFields && editFields.map(field => <>\n                                                            <UserEditField stores={this.props.stores} field={field.name} type={field.type} title={field.title} help={field.help} />\n                                                        </>)}\n                                                    </div>\n                                                    <small><Markdown markdown={mu.replaceImages(news.body, news.images, language, false)} markdownOpts={mu.getMarkdownOptions()} /></small>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>);\n                            })}\n                        </div>\n                        <div class='w-100 text-center position-absolute bg-white text-dark' style='bottom: 20px; right: 0px;'>\n                            <small>\n                                <small>\n                                    {newsList.map((img, idx) => <>\n                                        <i class={`${idx === imageIdx ? 'fas' : 'far'} fa-circle mr-1`} />\n                                    </>)}\n                                </small>\n                            </small>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WizardStartup;\n"],"sourceRoot":""}