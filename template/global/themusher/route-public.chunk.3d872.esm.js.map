{"version":3,"sources":["webpack:///./components/public/heatmap.js","webpack:///./routes/public/index.js"],"names":["initialState","showAddComment","Heatmap","observer","Component","constructor","props","super","this","state","updateTimer","inputRef","setState","isLoading","adminStore","stores","raceid","getPublicHeatmap","componentDidMount","loadHeatmap","render","waypoints","zoomToMarkers","mapid","fullscreenMap","publicHeatmap","heatmap","mapId","length","minZoom","maxZoom","height","key","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","subMenuMarginTop","email","submenu","jwtToken","util","getJwtToken","Admin","class","style"],"mappings":"uhBAUA,MAAMA,EAAe,CACpBC,gBAAgB,G,IAIXC,EADLC,Y,EAAD,cACsBC,YAClBC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,M,+VAAL,IACOT,GAEPQ,KAAKE,YAAc,GACzBF,KAAKG,SAAW,GAGjB,oBACCH,KAAKI,SAAS,CAAEC,WAAW,IAC3B,MAAM,WAAEC,GAAeN,KAAKF,MAAMS,QACtB,OAAEC,GAAWR,KAAKF,YAClBQ,EAAWG,iBAAiBD,GACxCR,KAAKI,SAAS,CAAEC,WAAW,IAG5BK,oBACCV,KAAKW,cAOHC,SACI,MAAM,WAAEN,GAAeN,KAAKF,MAAMS,QAC5B,UAAEM,EAAF,cAAaC,EAAb,MAA4BC,EAA5B,cAAmCC,GAAkBhB,KAAKF,OACxDmB,cAAeC,GAAYZ,EAInC,OACI,mBAGI,YAAC,IAAD,CACIC,OAAQP,KAAKF,MAAMS,OACnBY,MAAOD,EAAQE,OACfF,QAASA,EACTG,QAAS,EACTC,QAAS,GACTC,OAAQ,IACRV,UAAWA,EACXC,cAAeA,EACfE,cAAeA,EACfQ,IAAM,OAAMT,S,EAOjBrB,Q,kgBC5Df,MAAM+B,EAAaC,IAAGC,WAAU,GAC1BC,EAAgBF,IAAGG,eAGnBrC,GAFsBkC,IAAGI,mBAEV,CACpBzB,WAAW,EACX0B,MAAO,GACPC,QAAS,MACTC,SAAUC,IAAKC,gB,IAIVC,EADLzC,Y,EAAD,cACoBC,YAChBC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,M,+VAAL,IACOT,GAIdoB,SACC,OACU,mBACI,mBAAKyB,MAAM,kBAAkBC,MAAQ,kBAAiBV,kBAA8BH,MAChF,mBAAKY,MAAM,qBACP,mBAAKA,MAAM,UACP,YAAC,IAAD,CAAS9B,OAAQP,KAAKF,MAAMS,iB,EASzC6B,a","file":"route-public.chunk.3d872.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport { toJS } from 'mobx'\n\nimport Map from '../../components/map';\n\nimport mu from '../../lib/musher-util';\n\nconst initialState = {\n\tshowAddComment: false,\n};\n\n@observer\nclass Heatmap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n\t\tthis.inputRef = {};\n    }\n\n\tasync loadHeatmap() {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { adminStore } = this.props.stores;\n        const { raceid } = this.props;\n        await adminStore.getPublicHeatmap(raceid);\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadHeatmap();\n\t}\n\n    // componentWillReceiveProps() {\n\t// \tthis.loadHeatmap();\n\t// }\n\n    render() {\n        const { adminStore } = this.props.stores;\n        const { waypoints, zoomToMarkers, mapid, fullscreenMap } = this.props;\n        const { publicHeatmap: heatmap } = adminStore;\n        // const heatmap = publicHeatmap.slice(0, 10);\n        // const heatmap = [[60.4433,8.8996,14],[61.384,9.1152,14],[60.42,8.9422,15]];\n\n        return (\n            <>\n                {/* heatmap: {`map-${mapid}`}<br /> */}\n                {/* {JSON.stringify(heatmap)} */}\n                <Map\n                    stores={this.props.stores}\n                    mapId={heatmap.length}\n                    heatmap={heatmap}\n                    minZoom={2}\n                    maxZoom={18}\n                    height={600}\n                    waypoints={waypoints}\n                    zoomToMarkers={zoomToMarkers}\n                    fullscreenMap={fullscreenMap}\n                    key={`map-${mapid}`}\n                />\n            </>\n        );\n    }\n}\n\nexport default Heatmap;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\nimport linkstate from 'linkstate';\n\nimport Heatmap from '../../components/public/heatmap';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst initialState = {\n\tisLoading: false,\n\temail: '',\n\tsubmenu: 'ads',\n\tjwtToken: util.getJwtToken(),\n};\n\n@observer\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n    }\n\n\trender() {\n\t\treturn (\n            <>\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <div class='row border-bottom'>\n                        <div class='col-12'>\n                            <Heatmap stores={this.props.stores} />\n                        </div>\n                    </div>\n                </div>\n            </>\n\t\t);\n\t}\n}\n\nexport default Admin;\n"],"sourceRoot":""}