{"version":3,"sources":["webpack:///../node_modules/preact-pwa-install/src/util.js","webpack:///../node_modules/preact-pwa-install/src/index.js","webpack:///./components/install/index.js","webpack:///./components/login/index.js","webpack:///./components/error/index.js"],"names":["getWindow","window","e","isStandalone","matchMedia","matches","navigator","standalone","dispatchToOnPrompt","CACHE","onPrompts","forEach","onPrompt","prompt","awaitInstallPrompt","installPromptListener","preventDefault","installPrompt","Promise","resolve","appInstalledListener","addEventListener","userChoice","then","choiceResult","outcome","success","removeEventListener","push","func","filter","reset","useInstaller","useState","setInstallPrompt","useEffect","cancel","installed","InstallButton","class","href","onclick","id","Login","observer","props","handleEmailInput","userStore","stores","email","target","value","setState","clearTimeout","checkEmailTimer","setTimeout","checkEmail","togglePassword","passwordType","state","updateCapsLockStatus","isCapsLock","login","checkLogin","password","token","resetLoginMessages","newUser","route","forgotten","changeLanguage","appState","setLanguage","validateLoginToken","response","loginToken","status","showToken","componentDidMount","this","util","isString","render","language","emailIsAvailable","twoFactorLogin","message","messageIcon","error","errorIcon","isValidEmail","validateEmail","isOkToLogin","src","height","icon","remove","type","onInput","onKeypress","placeholder","style","linkState","onClick","role","selected","disabled","Component","Error","componentDidUpdate","removeTimer","componentWillUnmount","className"],"mappings":"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","file":"31.chunk.5e0e2.js","sourcesContent":["/** Object.assign ponyfill (note: used by Rollup)\n *\t@private\n */\nexport function assign(obj) {\n\tfor (let i=1; i<arguments.length; i++) {\n\t\t// eslint-disable-next-line guard-for-in, prefer-rest-params\n\t\tfor (let p in arguments[i]) obj[p] = arguments[i][p];\n\t}\n\treturn obj;\n}\n\n\nexport function getWindow() {\n\ttry {\n\t\tif (window) return window;\n\t}\n\tcatch (e) {\n\t\treturn;\n\t}\n}\n\n","import { h, Component } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { assign, getWindow } from './util'; // eslint-disable-line no-unused-vars\n\n/**\n * Returns true if the application is running as an installed PWA.\n *\n * @example\n * let isStandalone = isStandAlone();\n *\n */\nexport function isStandalone() {\n\tlet window = getWindow();\n\tif (!window) return false;\n\n\treturn window.matchMedia && window.matchMedia('(display-mode: standalone)').matches && true ||\n            window.navigator && window.navigator.standalone === true || false;\n}\n\nconst CACHE = {\n\tprompt: null,\n\tinstallPromptListener: null,\n\tappInstalledListener: null,\n\tonPrompts: []\n};\n\n/**\n * Any window listeners and cached prompts that have been captured by awaitInstallPrompt() are removed.\n */\nexport function reset() {\n\tlet window = getWindow();\n\tif (CACHE.installPromptListener) {\n\t\twindow && window.removeEventListener && window.removeEventListener('beforeinstallprompt', CACHE.installPromptListener);\n\t\tCACHE.installPromptListener = null;\n\t}\n\tif (CACHE.appInstalledListener) {\n\t\twindow && window.removeEventListener && window.removeEventListener('appinstalled', CACHE.appInstalledListener);\n\t\tCACHE.appInstalledListener = null;\n\t}\n\tCACHE.prompt = null;\n\tCACHE.onPrompts = [];\n}\n\nfunction removeOnPrompt(func) {\n\tCACHE.onPrompts = CACHE.onPrompts.filter(onPrompt => onPrompt !== func);\n}\n\nfunction dispatchToOnPrompt() {\n\tCACHE.onPrompts.forEach(onPrompt => onPrompt(CACHE.prompt));\n}\n\n/**\n * This function allows you to listen to the browser for the install prompt\n * that allows you to install the application standalone.\n *\n * Different browsers have different criteria for when this prompt is made available.\n * Currently Chrome requires that  the user \"interact\" with the content on your domain\n * for at least 30 seconds.\n *\n * More info can be found here:\n * https://developers.google.com/web/fundamentals/app-install-banners/\n *\n * awaitInstallPrompt offers the following capabilities:\n * * Listen to the browser for an install prompt.\n * * Stop listening at any time.\n * * Trigger the prompt to request app installation.\n *\n * @param {Function} onPrompt (prompt, cancel) => {} A function that will be called when\n * the browser delivers a prompt that we can present. The first argument prompt is a function\n * you can call at any time the triggers the install process. cancel is another function\n * that allows you to stop listening for prompts.\n *\n * @returns {Function} An function that when called, will stop listening for incoming prompts from the browser.\n *\n * @example\n * let cancel = awaitInstallPrompt((prompt) => {\n *      prompt().then(\n *          success => console.log(\n *              success && 'Successfully installed app as PWA.'\n *                      || 'User abandoned install.'\n *          )\n *      )\n * })\n */\nexport function awaitInstallPrompt(onPrompt) {\n\tif (!CACHE.installPromptListener) {\n\t\tlet window = getWindow();\n\t\tif (!window || isStandalone()) return null;\n\t\tCACHE.installPromptListener = e => {\n\t\t\te.preventDefault();\n\t\t\tlet installPrompt = e;\n\t\t\tCACHE.prompt = () =>  new Promise(resolve => {\n\t\t\t\tCACHE.appInstalledListener = () => {\n\t\t\t\t\tresolve(true);\n\t\t\t\t};\n\t\t\t\twindow.addEventListener('appinstalled', CACHE.appInstalledListener);\n\t\t\t\tinstallPrompt.prompt();\n\t\t\t\tinstallPrompt.userChoice.then(choiceResult => {\n\t\t\t\t\tchoiceResult.outcome !== 'accepted' && resolve(false);\n\t\t\t\t});\n\t\t\t}).then(success => {\n\t\t\t\tinstallPrompt = null;\n\t\t\t\tCACHE.appInstalledListener && window.removeEventListener('appinstalled', CACHE.appInstalledListener);\n\t\t\t\tif (success) {\n\t\t\t\t\tCACHE.prompt = null;\n\t\t\t\t\tdispatchToOnPrompt();\n\t\t\t\t}\n\t\t\t\treturn success;\n\t\t\t});\n\t\t\tdispatchToOnPrompt();\n\t\t};\n\t\twindow.addEventListener('beforeinstallprompt', CACHE.installPromptListener);\n\t}\n\tif (onPrompt) {\n\t\tCACHE.onPrompts.push(onPrompt);\n\t\tCACHE.prompt && onPrompt(CACHE.prompt);\n\t\treturn () => removeOnPrompt(onPrompt);\n\t}\n\treturn () => reset();\n}\n\n/**\n * A Higher Order Component that implements the awaitInstallPrompt() lifecycle and provides\n * the wrapped component with only the meaning full artifacts as props:\n *\n * Props:\n * * isStandalone - true if the app is running in standalone mode.\n * * installPrompt - the prompt function that you call at any time.\n *\n * @example\n * export installer()(\n *      function({isStandalone, installPrompt}){\n *          return (\n *              isStandalone && <p>Running as Standalone</p> ||\n *              installPrompt && <a href=\"#\" onclick={installPrompt}>Install App</a>\n *          );\n *      }\n * );\n */\nexport function installer() {\n\treturn Child => {\n\t\tclass Installer extends Component {\n\n\t\t\tstatic getDerivedStateFromProps(props, state) {\n\t\t\t\treturn state.isStandalone === undefined && { isStandalone: isStandalone() };\n\t\t\t}\n\n\t\t\tcancel() {\n\t\t\t\tthis.setState({ prompt: null });\n\t\t\t\tthis.canceltoken && this.canceltoken();\n\t\t\t}\n        \n\t\t\tcomponentDidMount() {\n\t\t\t\tif (this.state.isStandalone === false) {\n\t\t\t\t\tthis.canceltoken = awaitInstallPrompt(prompt => {\n\t\t\t\t\t\tthis.setState({ prompt });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponentWillUnmount() {\n\t\t\t\tthis.cancel();\n\t\t\t}\n        \n\t\t\trender(props, { isStandalone, prompt }) {\n\t\t\t\treturn h(Child, { ...props, isStandalone, installPrompt: prompt } );\n\t\t\t}\n\t\t}\n\t\treturn Installer;\n\t};\n}\n\n/**\n * A Hook that implements the awaitInstallPrompt() lifecycle and returns\n * an object that contains the isStandalone and installPrompt props:\n *\n * @returns {Object}\n * * isStandalone - true if the app is running in standalone mode.\n * * installPrompt - the prompt function that you call at any time.\n */\nexport function useInstaller() {\n\tconst [standalone] = useState(isStandalone());\n\tconst [installPrompt, setInstallPrompt] = useState(null);\n\tuseEffect(() => awaitInstallPrompt((prompt, cancel) => {\n\t\tsetInstallPrompt({ prompt: () =>\n\t\t\tprompt().then(installed => {\n\t\t\t\tinstalled && cancel();\n\t\t\t\treturn installed;\n\t\t\t})\n\t\t});\n\t}));\n\treturn ({ isStandalone: standalone, installPrompt: installPrompt && installPrompt.prompt });\n}\n\nexport default useInstaller;\n","import { h } from 'preact';\nimport { useInstaller } from 'preact-pwa-install';\nimport { Text } from 'preact-i18n';\n\nexport default function InstallButton() {\n\tconst { installPrompt, isStandalone } = useInstaller();\n\treturn installPrompt && (\n        <div class='text-center'>\n            <a class='btn btn-success' href=\"#\" onclick={installPrompt}>\n                <Text id='install.install-app'>Install The Musher</Text>\n            </a>\n        </div>\n    ) || isStandalone && '';\n}\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport linkState from 'linkstate';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Error from '../error';\nimport Message from '../message';\nimport Install from '../install';\n\n@observer\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showToken: false,\n            isCapsLock: false,\n            passwordType: 'password',\n            email: this.props.email,\n        };\n    }\n\n    handleEmailInput = async (e) => {\n        const { userStore } = this.props.stores;\n        const email = e.target.value;\n        this.setState({ email });\n        clearTimeout(this.checkEmailTimer);\n        this.checkEmailTimer = setTimeout(() => userStore.checkEmail(email), 1000);\n    }\n\n    togglePassword = () => {\n        let { passwordType } = this.state;\n        if (passwordType === 'password') {\n            passwordType = 'text';\n        } else {\n            passwordType = 'password';\n        }\n        this.setState({ passwordType });\n    }\n\n    updateCapsLockStatus = (isCapsLock) => {\n        this.setState({\n            isCapsLock,\n        });\n    }\n\n    login = () => {\n        const { email, password, token } = this.state;\n        const { userStore } = this.props.stores;\n        userStore.checkLogin({ email, password, token });\n    }\n\n    resetLoginMessages = () => {\n        const { userStore } = this.props.stores;\n        userStore.resetLoginMessages();\n    }\n\n    newUser = () => {\n        const { email = '' } = this.state;\n        route(`/register/${email}`);\n    }\n\n    forgotten = () => {\n        const { email = '' } = this.state;\n        route(`/forgotten/${email}`);\n    }\n\n    // pwaInstallClick = (e) => {\n    //     // hide our user interface that shows our A2HS button\n    //     // addBtn.style.display = 'none';\n\n    //     // Show the prompt\n    //     this.deferredPrompt.prompt();\n    //     // Wait for the user to respond to the prompt\n    //     this.deferredPrompt.userChoice.then((choiceResult) => {\n    //         if (choiceResult.outcome === 'accepted') {\n    //             console.log('User accepted the A2HS prompt');\n    //         } else {\n    //             console.log('User dismissed the A2HS prompt');\n    //         }\n    //         this.deferredPrompt = null;\n    //     });\n    // }\n\n    // componentWillMount() {\n    //     window.addEventListener('beforeinstallprompt', (e) => {\n    //         // Prevent Chrome 67 and earlier from automatically showing the prompt\n    //         e.preventDefault();\n    //         // Stash the event so it can be triggered later.\n    //         this.deferredPrompt = e;\n\n    //         // // Update UI to notify the user they can add to home screen\n    //         // addBtn.style.display = 'block';\n    //     });\n    // }\n\n    changeLanguage = (e) => {\n        const lang = e.target.value;\n\t\tconst { appState } = this.props.stores;\n        appState.setLanguage(lang);\n    }\n\n    validateLoginToken = async () => {\n        const { userStore } = this.props.stores;\n        const { loginToken } = this.props;\n        // console.log(loginToken, util.isDefined(loginToken));\n        const response = await userStore.validateLoginToken(loginToken);\n        if (response && response.status === 200) {\n            route(`/`);\n        }\n    }\n\n    componentDidMount() {\n        const { userStore } = this.props.stores;\n        if (this.props.email) {\n            clearTimeout(this.checkEmailTimer);\n            this.checkEmailTimer = setTimeout(() => userStore.checkEmail(this.props.email), 1000);\n        }\n        const { loginToken } = this.props;\n        if (util.isString(loginToken)) {\n            this.validateLoginToken();\n        }\n    }\n\n    render() {\n        const { isCapsLock, email, password, token, passwordType } = this.state;\n        const { appState, userStore } = this.props.stores;\n        const { language = 'en' } = appState;\n\n        const { emailIsAvailable, login, twoFactorLogin } = userStore;\n        const { message, messageIcon, error, errorIcon } = login;\n        const isValidEmail = util.validateEmail(email);\n        const isOkToLogin = isValidEmail && password;\n\n        const darkmode = true;\n\n        return (\n            <div class='container-fluid'>\n                <div class='row'>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 pt-5'>\n\n                        {1 === 2 && util.isMobile() && !util.isStandalone() && (\n                            <div class='mt-5 alert alert-success'>\n                                <Text id='login.tip-1'>Appen kan installeres på telefonen din.</Text> <br />\n                                <br />\n                                <Text id='login.tip-2'>Bruk \"Legg til på hjemskjerm\"-funksjonen.</Text><br />\n                                <br />\n                                <Text id='login.tip-3'>Det er lurt å gjøre dette før du registrer deg.</Text>\n\n                                {/* <button class='btn btn-primary' onClick={this.pwaInstallClick}>\n                                    Legg til på hjemskjermen din\n                                </button> */}\n                            </div>\n                        )}\n\n                        <Install />\n\n                        <div class='d-flex justify-content-center mb-5 mt-5'>\n                            {darkmode ? <>\n                                <img src={`https://themusher.app/assets/logo-qpaws-dark.png`} height='100' />\n                            </> : <>\n                                <img src={`https://themusher.app/assets/logo-qpaws-light.png`} height='100' />\n                            </>}\n                        </div>\n                        {/* <div class='d-flex justify-content-center'>\n                            <h5 class='mt-3 mb-5'><Text id='login.login'>Logg inn</Text></h5>\n                        </div> */}\n\n                        <Error message={error} icon={errorIcon} remove={this.resetLoginMessages} />\n                        <Message message={message} icon={messageIcon} remove={this.resetLoginMessages}  />\n\n                        <div class='form-group'>\n                            {/* <label for='emailInput'><i class='far fa-envelope' /> <Text id='login.email'>E-post</Text></label> */}\n                            <Localizer>\n                                <input type='email'\n                                    class={`form-control form-control-lg ${email ? (isValidEmail && !emailIsAvailable ? 'is-valid' : 'is-invalid') : ''}`}\n                                    id='emailInput'\n                                    onInput={this.handleEmailInput}\n                                    value={email}\n                                    onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                    placeholder={<Text id='login.email'>Email</Text>}\n                                />\n                            </Localizer>\n                            {email && isValidEmail && emailIsAvailable && <div class='invalid-feedback' style={`display: block;`}>\n                                <Text id='login.email-not-found'>E-posten finnes ikke, men du kan registrere deg 😃</Text>\n                            </div>}\n                            {email && !isValidEmail && <div class=\"invalid-feedback\" style={'display: block;'}>\n                                <Text id='login.email-not-valid'>Hmm, e-posten ser ikke helt riktig ut. Kan det være en skrivefeil?</Text>\n                            </div>}\n                            {email && isValidEmail && !emailIsAvailable && <div class=\"valid-feedback\" style={'display: block;'}>\n                                <Text id='login.email-looks-good'>E-post ser bra ut.</Text>\n                            </div>}\n                        </div>\n\n                        <div class='form-group'>\n                            {/* <label for='passwordInput'><i class='fas fa-key' /> <Text id='login.password'>Passord</Text></label> */}\n                            <div class='input-group'>\n                                <Localizer>\n                                    <input type={passwordType}\n                                        class={`form-control form-control-lg`}\n                                        id='passwordInput'\n                                        onInput={linkState(this, 'password')}\n                                        value={password}\n                                        onKeypress={(e) => { util.isCapsLock(e, this.updateCapsLockStatus); }}\n                                        placeholder={<Text id='login.password'>Password</Text>}\n                                    />\n                                </Localizer>\n                                <div class='input-group-append'>\n                                    <button class='btn btn-lg btn-primary' type='button'\n                                        onClick={this.togglePassword}\n                                    >\n                                        <i class={`fas fa-eye${passwordType === 'text' ? '-slash' : ''}`} />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        {isCapsLock && <div class='alert alert-danger' role='alert'>\n                            <Text id='login.caps-lock-on'>CAPS LOCK er på!</Text>\n                        </div>}\n\n                        {twoFactorLogin && <>\n                            <div class='form-group'>\n                                {/* <label for='tokenInput'><i class='fas fa-unlock' /> <Text id='login.2fa-token'>2FA Token</Text></label> */}\n                                <Localizer>\n                                    <input type='number'\n                                        class='form-control form-control-lg'\n                                        id='tokenInput'\n                                        onInput={linkState(this, 'token')}\n                                        value={token}\n                                        placeholder={<Text id='login.2fa-token'>2FA Token</Text>}\n                                    />\n                                </Localizer>\n                            </div>\n                        </>}\n\n                        <div class='form-group'>\n                            <div class=\"input-group mb-2\">\n                                <div class=\"input-group-prepend\">\n                                    <div class=\"input-group-text\"><Text id='login.select-language'>Select language</Text></div>\n                                </div>\n                                <select\n                                    class='custom-select custom-select-lg border-0 text-white bg-primary'\n                                    onInput={this.changeLanguage}\n                                >\n                                    <option value='no' selected={language === 'no'}>🇳🇴 NO</option>\n                                    <option value='en' selected={language === 'en'}>🇬🇧 EN</option>\n                                    <option value='es' selected={language === 'es'}>🇪🇸 ES</option>\n                                    <option value='de' selected={language === 'de'}>🇩🇪 DE</option>\n                                    <option value='fr' selected={language === 'fr'}>🇫🇷 FR</option>\n                                    <option value='ru' selected={language === 'ru'}>🇷🇺 RU</option>\n                                    <option value='se' selected={language === 'se'}>🇸🇪 SE</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <button class={`btn btn-lg btn-block ${isOkToLogin ? 'btn-primary' : 'btn-primary'}`} type='button'\n                            onClick={this.login}\n                            disabled={!isOkToLogin}\n                        >\n                            <i class='fas fa-sign-in-alt mr-2' />\n                            <Text id='login.login'>Logg inn</Text>\n                        </button>\n\n                        <small class='form-text text-muted mt-1 text-right'>\n                            <button class='btn btn-small btn-link text-primary'\n                                onClick={this.forgotten}\n                            >\n                                <Text id='login.forgot-password'>Glemt passordet?</Text>\n                            </button>\n                        </small>\n\n                    </div>\n                </div>\n\n                <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 mt-4'>\n                    <div class='form-row align-items-center'>\n\n                        <button class='btn btn-link btn-block text-white' type='button'\n                            onClick={this.newUser}\n                        >\n                            <strong>\n                                <Text id='login.no-account'>No account?</Text>\n                            </strong><br />\n                            <i class='fas fa-plus mr-2' />\n                            <Text id='login.signup-free-account'>Please sign up for a free account here</Text>\n                        </button>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\n\nconst ERROR_DISPLAY_MS = 10000;\n\n@observer\nclass Error extends Component {\n    componentDidUpdate() {\n        const { remove = () => {} } = this.props;\n        clearTimeout(this.removeTimer);\n        this.removeTimer = setTimeout(() => remove(), ERROR_DISPLAY_MS);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.removeTimer);\n    }\n\n    render() {\n        const { message, icon, remove = () => {} } = this.props;\n\n        if (!message) {\n            return '';\n        }\n        return (\n            <div class='container'>\n                <div class='alert alert-danger row'>\n                    <div class={`col-12`}>\n                        <a href='#' onclick={remove} class='float-right'>\n                            <i className='fas fa-times' />\n                        </a>\n                        {icon && <h1 class='float-left mr-3'><i class={icon} /></h1>}\n                        {message && <span>{message}</span>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Error;\n"],"sourceRoot":""}