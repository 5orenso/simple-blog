{"version":3,"sources":["webpack:///./routes/news/edit.js","webpack:///./components/form/files.js","webpack:///./components/form/images.js","webpack:///./components/form/dragNdropFileupload.js"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_TOP_BACK","marginTopBack","MARGIN_BOTTOM","marginBottom","initialState","isLoading","Input","observer","Component","handleImageErrored","e","image","target","onerror","setTimeout","src","Date","removeImage","async","newsStore","props","stores","news","id","name","parentElement","dataset","removeMainImage","field","updateField","this","value","render","saved","type","rows","title","icon","help","onInput","max","min","step","maxValue","util","isoDate","undefined","class","for","images","map","img","s3SmallLink","onError","onClick","data-name","object","autoOpen","style","aria-describedby","data-id","data-field","InputNew","updateObjectKeyValue","newNews","NewsEdit","constructor","super","elementtype","fieldType","updateFieldValue","parseInt","datatype","skipTimer","newValue","localObjectValue","Array","isArray","split","parseFloat","doUpdateField","clearTimeout","updateTimer","insertNewNews","insert","back","createNew","route","state","setState","load","saveField","componentDidMount","loadNews","userStore","isAdmin","onclick","Files","handleAddImage","file","files","uploadStatus","before","after","apiUrl","height","width","Images","addToImages","push","DragNDropFileupload","dropRef","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","drag","handleDragOut","handleDrop","i","l","readLocalFile","handleAddFiles","event","el","handleEvent","handleUpload","fileObject","isFunction","formData","FormData","append","uploadMeta","progress","xhr","XMLHttpRequest","upload","addEventListener","updateProgress","fileObj","uploadDone","open","getApiServer","setRequestHeader","getJwtToken","send","filename","uploadedFilesData","imageNum","Promise","resolve","reject","reader","FileReader","error","photo","readAsDataURL","lengthComputable","percentComplete","loaded","total","readyState","status","JSON","parse","responseText","data","addFileToUpload","fileInput","loadingProgress","uploadedFiles","div","current","click","componentWillUnmount","removeEventListener","position","ref","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","multiple","onchange","c","Object","keys","key","isImage","match","result","formatBytes","role","aria-valuenow","aria-valuemin","aria-valuemax","children"],"mappings":"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","file":"35.chunk.defe2.esm.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport { Text, Localizer } from 'preact-i18n';\nimport { route } from 'preact-router';\nimport linkstate from 'linkstate';\n\nimport mu from '../../lib/musher-util';\n\nimport Images from '../../components/form/images';\nimport Files from '../../components/form/files';\n\nconst MARGIN_TOP = mu.marginTop(false);\nconst MARGIN_TOP_BACK = mu.marginTopBack(false);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nconst initialState = {\n\tisLoading: false,\n};\n\n@observer\nclass Input extends Component {\n    handleImageErrored = (e) => {\n        const image = e.target;\n        image.onerror = null;\n        setTimeout(() => {\n            image.src += `?${new Date()}`;\n        }, 1000);\n    }\n    \n    removeImage = async (e) => {\n        const { newsStore } = this.props.stores;\n        const { news } = this.props;\n        const imageName = e.target.parentElement.dataset.name || e.target.dataset.name;\n        newsStore.removeImage({\n            id: news.id,\n            name: imageName,\n        });\n    }\n\n    removeMainImage = () => {\n        const { news, field, updateField } = this.props;\n        updateField({ id: news.id, field, value: {} });\n    }\n\n    render() {\n        // const { saved, dog, type = 'text', datalist = [], min, max, step, field, title, icon, help, onInput, updateField } = this.props;\n        const { saved, news, type = 'text', rows, field, title, icon, help, onInput, updateField, max, min, step } = this.props;\n        let value = news[field];\n        let maxValue = max;\n        if (type === 'date') {\n            if (value) {\n                value = util.isoDate(news[field], false, false, true);\n            }\n            if (max === 'today') {\n                maxValue = util.isoDate(undefined, false, false, true);\n            }\n        }\n        if (type === 'image') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n\n                    <div class='container-fluid'>\n                        <div class='row'>\n                            {news.images && news.images.map(img => (\n                                <div class='col-3 p-1'>\n                                    <img src={img.s3SmallLink} class='img-fluid' onError={this.handleImageErrored} />\n                                    <button class='btn btn-sm btn-link'\n                                        onClick={this.removeImage}\n                                        data-name={img.name}\n                                    ><i class='fas fa-trash' /> Del</button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <Images saved={saved} object={news} field={field} updateField={updateField} autoOpen={false} />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'file') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <Files saved={saved} object={news} field={field} updateField={updateField} />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n        if (type === 'textarea') {\n            return (\n                <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                    <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                    <textarea type={type} class={`form-control ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                        value={value}\n                        rows={rows}\n                        data-id={news.id}\n                        data-field={field}\n                        onInput={onInput}\n                    />\n                    {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                        <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n                </div>\n            );\n        }\n\n        return (\n            <div class={`form-group ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`}>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type={type} class={`form-control ${saved[`${field}.${news.id}`] ? 'is-valid' : ''}`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    value={value}\n                    min={min}\n                    max={maxValue}\n                    step={step}\n                    data-id={news.id}\n                    data-field={field}\n                    onInput={onInput}\n                />\n                {saved[`${field}.${news.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='news.changes-saved'>Endringene er lagret</Text></div> : \n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass InputNew extends Component {\n    onInput = (e) => {\n        const { field } = this.props;\n        const value = e.target.value;\n        const { newsStore } = this.props.stores;\n        // console.log('adStore.newAd', adStore.newAd);\n        newsStore.updateObjectKeyValue('newNews', field, value);\n    }\n\n    render() {\n        const { field, icon, title, help } = this.props;\n        const { newsStore } = this.props.stores;\n        const { newNews } = newsStore;\n        return (\n            <div class='form-group'>\n                <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label>\n                <input type='text' class={`form-control`} id={`${field}Input`} aria-describedby={`${field}Help`}\n                    onInput={this.onInput}\n                    value={newNews[field]}\n                />\n                <small id={`${field}Help`} class='form-text text-muted'>{help}</small>\n            </div>\n        );\n    }\n}\n\n@observer\nclass NewsEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n\tasync loadNews(props = this.props) {\n\t\tthis.setState({ isLoading: true });\n\t\tconst { newsStore } = this.props.stores;\n\t\tawait newsStore.load(props.id);\n\t}\n\n    updateField = (e) => {\n        const { id, field, type, elementtype } = e.target.dataset;\n        const { value, type: fieldType, min, max } = e.target;\n        // console.log({ id, field, fieldType, type, elementtype, value, min, max });\n        if (fieldType === 'date') {\n            if (min && max) {\n                if (value >= min && value <= max) {\n                    this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n                }\n            } else {\n                this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n            }\n        } else {\n            this.updateFieldValue({ id: parseInt(id, 10), field, value, type, elementtype });\n        }\n    }\n\n    updateFieldValue = ({ id, field, value, datatype, elementtype, skipTimer = false }) => {\n        const { newsStore } = this.props.stores;\n        let newValue = value;\n\n        let localObjectValue = value;\n        const { news } = newsStore;\n        if (field === 'images') {\n            if (Array.isArray(news.images) && Array.isArray(value)) {\n                localObjectValue = [...news.images, ...value];\n            }\n        }\n    \n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n\n       \n        newsStore.updateField(id, field, localObjectValue);\n        if (skipTimer) {\n            this.doUpdateField(id, field, newValue);\n        } else {\n            clearTimeout(this.updateTimer[field]);\n            this.updateTimer[field] = setTimeout(async () => {\n                this.doUpdateField(id, field, newValue);\n            }, 500);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { newsStore } = this.props.stores;\n        await newsStore.saveField(id, field, value);\n    }\n\n    insertNewNews = async () => {\n        const { newsStore } = this.props.stores;\n\t\tconst { newNews } = newsStore;\n\t\tnewsStore.insert({ ...newNews });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n    back = () => {\n        const { createNew } = this.props;\n        const { newsStore } = this.props.stores;\n\t\tconst { news } = newsStore;\n        if (createNew) {\n            route(`/news/`);\n        } else {\n            route(`/news/${news.id}`);\n        }\n    }\n\n\trender() {\n        const { createNew } = this.props;\n\t\tconst { newsStore, userStore } = this.props.stores;\n        const { isAdmin } = userStore;\n        if (!isAdmin) {\n            return '';\n        }\n\t\tconst { news, saved } = newsStore;\n\t\treturn (\n\t\t\t<div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                <div class='d-flex justify-content-between mb-2'>\n                    <div>\n                        <button class='btn btn-link pl-0 fixed-top text-primary'\n                            style={`top: ${MARGIN_TOP_BACK}; left: 5px; font-size: 35px; width: 45px;`}\n                            onClick={this.back}>\n                            <i class='fas fa-arrow-circle-left' />\n                        </button>\n                    </div>\n                    <div>\n                        <h5 class='text-muted'>News and howto content</h5>\n                    </div>\n                    <div>\n                        &nbsp;\n                    </div>\n                </div>\n\n\t\t\t\t{createNew ? (\n                    <div class='row'>\n                        <div class='col-12'>\n                            <h5><Text id='news.add-new'>Lag nytt innhold</Text></h5>\n                            <InputNew stores={this.props.stores} field='title' icon='fas fa-heading'\n                                title={<Text id='news.title'>Tittel</Text>}\n                                help={<Text id='news.title-help'>Title of this news story</Text>} />\n                            <InputNew stores={this.props.stores} field='tag' icon='fas fa-eye'\n                                title={<Text id='news.tag'>Tag</Text>}\n                                help={<Text id='news.tag-help'>Tag of this news story</Text>}\n                                onInput={this.updateField} />\n                            <button\n                                type='button'\n                                class='btn btn-primary mb-2'\n                                onclick={this.insertNewNews}\n                            >Save news</button>\n                        </div>\n                    </div>\n                ) : (\n                    <div class='row'>\n                        <div class='col-12'>\n                            <Input saved={saved} news={news} field='title' icon='fas fa-heading'\n                                title={<Text id='news.title'>Title</Text>}\n                                help={<Text id='news.title-help'>Title of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input stores={this.props.stores} saved={saved} news={news} field='date' icon='fas fa-calendar' type='date' min='2010-01-01' max='today'\n                                title={<Text id='news.date'>Dato</Text>}\n                                help={<Text id='news.date-help'>Date for this news article. Format is: 'YYYY-MM-DD'.</Text>}\n                                onInput={this.updateField}\n                                updateField={this.updateFieldValue}\n                            />\n\n                            <Input saved={saved} news={news} field='active' icon='fas fa-heading'\n                                title={<Text id='news.active'>Active</Text>}\n                                help={<Text id='news.active-help'>Is this active yet?</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='sort' icon='fas fa-sort-amount-down'\n                                title={<Text id='news.sort'>Sort order</Text>}\n                                help={<Text id='news.sort-help'>Highest number on top.</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='tag' icon='fas fa-heading'\n                                title={<Text id='news.tag'>Tag</Text>}\n                                help={<Text id='news.tag-help'>Tag of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='ingress' icon='fas fa-quote-right'\n                                type='textarea'\n                                title={<Text id='news.ingress'>Ingress</Text>}\n                                help={<Text id='news.ingress-help'>Ingress of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='body' icon='fas fa-quote-right'\n                                type='textarea' rows={20}\n                                title={<Text id='news.body'>Body</Text>}\n                                help={<Text id='news.body-help'>Body of this news story</Text>}\n                                onInput={this.updateField} />\n\n                            <Input saved={saved} news={news} field='image' type='image' icon='fas fa-camera'\n                                stores={this.props.stores}\n                                title={<Text id='news.photo'>Bilder</Text>} \n                                help={<Text id='news.photo-help'>Images for this news story.</Text>}\n                                onInput={this.updateField} updateField={this.updateFieldValue} />\n    \t\t\t\t\t</div>\n    \t\t\t\t</div>\n                )}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewsEdit;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Files extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n        updateField({ id: object.id, field, value: file });\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        // images.push(file);\n        // updateField({ id: object.id, field: 'images', value: images });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = false } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <Text id='form.files.upload-file'>Last opp fil</Text>:<br />\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        apiUrl={'/api/fileupload'}\n                        uploadStatus={uploadStatus}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Files;\n","import { h, Component } from 'preact';\nimport { observer } from 'mobx-preact';\nimport { toJS } from 'mobx';\nimport util from 'preact-util';\n\nimport DragNDropFileupload from './dragNdropFileupload';\n\n@observer\nclass Images extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n    }\n    \n    handleAddImage = (file) => {\n        const { addToImages = true } = this.props;\n\n        // <Images saved={saved} object={dog} field={field} updateField={updateField} />\n        // updateFieldValue = ({ id, field, value, datatype, elementtype, isNew = false, skipTimer = false }) => {\n        const {\n            updateField,\n            object,\n            field,\n        } = this.props;\n\n        if (field) {\n            updateField({ id: object.id, field, value: file, skipTimer: true });\n        }\n\n        // let images = toJS(object.images);\n        // if (!util.isArray(images)) {\n        //     images = [];\n        // }\n        if (addToImages) {\n            const images = [];\n            images.push(file);\n            updateField({ id: object.id, field: 'images', value: images, skipTimer: true });\n        }\n        // const allImages = [];\n        // allImages.push(file);\n        // updateField({ id: object.id, field: 'allImages', value: allImages, skipTimer: true });\n    };\n\n    render() {\n        const { uploadStatus = () => {}, before = () => {}, after = () => {}, autoOpen = true } = this.props;\n        return (\n            <div class='row'>\n                <div class='col-12'>\n                    <DragNDropFileupload\n                        handleAddImage={this.handleAddImage}\n                        uploadStatus={uploadStatus}\n                        apiUrl={'/api/fileupload'}\n                        before={before}\n                        after={after}\n                        autoOpen={autoOpen}\n                    >\n                        <div style={{ height: 30, width: '100%' }}>\n                            {/* {files.map((file, idx) => (\n                                <div key={idx}>\n                                    {file.name}\n                                    Total: {util.asString(file, 'load', 'total')}\n                                    <img style='width: 48px;'\n                                        alt='Preview'\n                                        key={file.preview}\n                                        src={file.src}\n                                    />\n                                </div>\n                            ))} */}\n                        </div>\n                    </DragNDropFileupload>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Images;\n","import { h, Component, createRef } from 'preact';\nimport { observer } from 'mobx-preact';\nimport util from 'preact-util';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nconst debug = false;\nconst debugName = 'Images';\n\n@observer\nclass DragNDropFileupload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drag: false,\n            loadingProgress: 0,\n            uploadedFiles: [],\n            uploadedFilesData: {},\n        };\n    }\n\n    dropRef = createRef();\n\n    handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    handleDragIn = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter++;\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({ drag: true });\n        }\n    }\n\n    handleDragOut = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n            this.setState({ drag: false });\n        }\n    }\n\n    handleDrop = (e) => {\n        if (debug) {\n            console.log(`${debugName}.handleDrop: event`, e);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({ drag: false });\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            // this.props.handleDrop(e.dataTransfer.files);\n            // e.dataTransfer.clearData();\n            for (let i = 0, l = e.dataTransfer.files.length; i < l; i += 1) {\n                const photo = e.dataTransfer.files[i];\n                // if (photo.type.match('image.*')) {\n                this.readLocalFile(photo);\n                // }\n            }\n            this.dragCounter = 0;\n        }\n    }\n\n    // Upload\n    handleAddFiles = (event) => {\n        event.preventDefault();\n        const el = event.target;\n        if (debug) {\n            console.log(`${debugName}.handleAddFiles: event, el`, event, el);\n        }\n        for (let i = 0, l = el.files.length; i < l; i += 1) {\n            const photo = el.files[i];\n            // if (photo.type.match('image.*')) {\n            this.readLocalFile(photo);\n            // }\n        }\n    }\n\n    handleEvent = (e, fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleEvent[${fileObject.name}]: ${e.type}: `\n                + `${e.loaded} bytes transferred of ${e.total}. Is lengthComputable: ${e.lengthComputable}: `\n                + `${JSON.stringify(e)}`);\n        }\n    }\n\n    handleUpload = (fileObject) => {\n        if (debug) {\n            console.log(`${debugName}.handleUpload[${fileObject.name}]`);\n        }\n\n        const { uploadStatus = () => {}, before = () => {}, after = () => {} } = this.props;\n        uploadStatus(false);\n\n        if (util.isFunction(before)) {\n            before();\n        }\n\n        const formData = new FormData();\n        formData.append('files[]', fileObject);\n        const uploadMeta = {\n            progress: 1,\n        };\n\n        uploadMeta.xhr = new XMLHttpRequest();\n\n        uploadMeta.xhr.upload.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.updateProgress(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadstart', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('load', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('loadend', (event) => {\n            const fileObj = fileObject;\n            if (util.isFunction(after)) {\n                after();\n            }\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('progress', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('error', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('abort', (event) => {\n            const fileObj = fileObject;\n            this.handleEvent(event, fileObj);\n        });\n        uploadMeta.xhr.addEventListener('readystatechange', (event) => {\n            const fileObj = fileObject;\n            this.uploadDone(event, fileObj);\n        });\n\n        uploadMeta.xhr.open('POST', `${util.getApiServer()}${this.props.apiUrl}`);\n        uploadMeta.xhr.setRequestHeader('Authorization', `Bearer ${util.getJwtToken()}`);\n        uploadMeta.xhr.send(formData);\n\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        if (!uploadedFilesData[filename]) {\n            uploadedFilesData[filename] = {};\n        }\n        uploadedFilesData[filename].uploadMeta = uploadMeta;\n        uploadedFilesData[filename].imageNum = this.state.imageNum;\n        this.setState({ uploadedFilesData });\n    }\n\n    // eslint-disable-next-line\n    readLocalFile = (fileObject) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.addEventListener('error', (error) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: Error occurred reading file: ${fileObject.name}: ${error}`);\n                }\n                reject(error);\n            });\n\n            reader.addEventListener('load', (event) => {\n                if (debug) {\n                    console.log(`${debugName}.FileReader: File: ${fileObject.name} read successfully: `\n                        + `${JSON.stringify(event)}`);\n                }\n                const photo = fileObject;\n                const filename = photo.name;\n                const uploadedFilesData = this.state.uploadedFilesData;\n                if (!uploadedFilesData[filename]) {\n                    uploadedFilesData[filename] = {};\n                }\n                uploadedFilesData[filename].event = event;\n                this.setState({ uploadedFilesData });\n                this.handleUpload(photo);\n                resolve(event);\n            });\n\n            reader.readAsDataURL(fileObject);\n        });\n    }\n\n    updateProgress = (event, fileObject) => {\n        if (event.lengthComputable) {\n            const filename = fileObject.name;\n            const uploadedFilesData = this.state.uploadedFilesData;\n            const percentComplete = (event.loaded / event.total) * 100;\n            if (debug) {\n                console.log(`${debugName}.updateProgress[${filename}].progress`, percentComplete);\n            }\n            uploadedFilesData[filename].uploadMeta.progress = percentComplete;\n            this.setState({ uploadedFilesData });\n        }\n    }\n\n    uploadDone = (event, fileObject) => {\n        const filename = fileObject.name;\n        const uploadedFilesData = this.state.uploadedFilesData;\n        const uploadMeta = uploadedFilesData[filename].uploadMeta;\n        if (debug) {\n            console.log(`${debugName}.uploadDone[${filename}].uploadedFilesData`, uploadedFilesData);\n            console.log(`${debugName}.uploadDone[${filename}].uploadMeta`, uploadMeta);\n            console.log(`${debugName}.uploadDone.event`, event);\n        }\n\n        if (uploadMeta && uploadMeta.xhr.readyState === 4 && uploadMeta.xhr.status === 201) {\n            const response = JSON.parse(uploadMeta.xhr.responseText);\n            const files = response.data.files;\n            for (let i = 0; i < files.length; i += 1) {\n                const file = files[i];\n                this.addFileToUpload(file);\n                this.fileInput.value = '';\n            }\n        }\n    }\n\n    addFileToUpload(file) {\n        if (debug) {\n            console.log(`${debugName}.addFileToUpload[${file.name}]`);\n        }\n        const { uploadedFilesData } = this.state;\n        const { handleAddImage, uploadStatus = () => {} } = this.props;\n\n        delete uploadedFilesData[file.name];\n        this.setState({ uploadedFilesData });\n        handleAddImage(file);\n        uploadStatus(true);\n    }\n    // /Upload\n\n    componentDidMount() {\n        const div = this.dropRef.current;\n        div.addEventListener('dragenter', this.handleDragIn);\n        div.addEventListener('dragleave', this.handleDragOut);\n        div.addEventListener('dragover', this.handleDrag);\n        div.addEventListener('drop', this.handleDrop);\n\n        const { autoOpen } = this.props;\n\n        if (autoOpen) {\n            setTimeout(() => {\n                // console.log('[setTimeout]');\n                this.fileInput.click();\n            }, 10);\n        }\n    }\n\n    componentWillUnmount() {\n        const div = this.dropRef.current;\n        div.removeEventListener('dragenter', this.handleDragIn);\n        div.removeEventListener('dragleave', this.handleDragOut);\n        div.removeEventListener('dragover', this.handleDrag);\n        div.removeEventListener('drop', this.handleDrop);\n    }\n\n    render() {\n        const { uploadedFilesData } = this.state;\n\n        return (\n            <div style={{ position: 'relative' }} ref={this.dropRef}>\n                {this.state.drag &&\n                <div style={{\n                    border: 'dashed grey 4px',\n                    backgroundColor: 'rgba(255,255,255,.8)',\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    zIndex: 9999,\n                }}>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '50%',\n                            right: 0,\n                            left: 0,\n                            textAlign: 'center',\n                            color: 'grey',\n                            fontSize: 36,\n                        }}\n                    >\n                        <div><Text id='imageupload.drag-files-here'>drop your files here :)</Text></div>\n                    </div>\n                </div>}\n\n                <div>\n                    <input class='btn btn-info col-sm-12' multiple\n                        type='file'\n                        id='image-file'\n                        onchange={this.handleAddFiles}\n                        ref={(c) => {\n                            this.fileInput = c;\n                        }}\n                    />\n                </div>\n                <div>\n                    {Object.keys(uploadedFilesData).length > 0 ? (<h3><Text id='imageupload.upload-images'>Uploaded images</Text></h3>) : ''}\n                    <ul class='list-group'>\n                        {Object.keys(uploadedFilesData).map((key) => {\n                            const { uploadMeta = {} } = uploadedFilesData[key];\n                            const isImage = key.match(/(jpg|jpeg|png|gif|heic|heif|svg|webp|tif)/i);\n                            return (\n                                <li class='list-group-item list-group-item-action flex-column align-items-start'>\n                                    <div class='d-flex w-100 justify-content-between'>\n                                        {isImage && <img class='img-fluid mr-3'\n                                            src={uploadedFilesData[key].event.target.result}\n                                            style='max-height: 50px;'\n                                        />}\n                                        <small>{uploadedFilesData[key].event.uploadDone}</small>\n                                        <Text id='imageupload.uploading-image'>Laster opp bilde...</Text>\n                                        <small>{util.formatBytes(uploadedFilesData[key].event.total, 2)}</small>\n                                    </div>\n                                    <div class='progress mt-1' style='height: 4px;'>\n                                        <div\n                                            class='progress-bar progress-bar-striped progress-bar-animated bg-success'\n                                            role='progressbar'\n                                            style={`width: ${uploadMeta.progress}%; height: 4px;`}\n                                            aria-valuenow={uploadMeta.progress}\n                                            aria-valuemin='0'\n                                            aria-valuemax='100'\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DragNDropFileupload;\n"],"sourceRoot":""}