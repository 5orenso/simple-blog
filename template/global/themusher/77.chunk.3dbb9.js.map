{"version":3,"sources":["webpack:///./routes/tv/top10.js","webpack:///./routes/tv/style.css"],"names":["byBib","a","b","aHas","musher","bib","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","isLoading","contentIsNotLoaded","reloadInSec","reloadLastEpoch","reloadIsActive","TvTop10","observer","props","initComponent","Math","floor","Date","getTime","setState","tickReloadTimeer","state","updateTimer","this","now","clearTimeout","tick","setTimeout","componentDidMount","componentWillUnmount","render","reloadPercent","util","normalizeBetween","class","style","role","aria-valuenow","aria-valuemin","aria-valuemax","Component","loadLiveRaceResults","teamIds","focusOnMushers","raceStore","stores","getRaceTrackerData","race","raceTrackerRace","getRaceTrackerActiveTeams","loadRaceResults","loadWorkoutSummary","raceid","getWorkoutSummaryActiveTeams","loadRace","selectedClassId","allTeamIds","currentClass","appState","classid","load","selectedClassIds","toggleSelectedClassId","classes","filter","id","contestants","length","map","team","flat","loadTeams","join","getAllClassesSortedBy","getClassById","raceTrackerResults","getRacetrackerResults","reload","RELOAD_INTERVAL_IN_SEC","liveRace","toggleFocusOnMusher","e","target","parentElement","dataset","musherid","inputRef","componentWillReceiveProps","nextProps","position","limit","lastAllowedChangeDate","endDate","setHours","getHours","find","data","line","lineData","raceTrackerMapLine","parseInt","Bib","contestant","sort","slice","hoverElement","hoverelementonly","distance","data-id","href","title","colspan","idx","currentTeam","currentResults","normalizedDuration","isDone","totalWorkoutTimeUsedSec","getTotalsByTeamId","getRankingColor","onClick","data-musherid","indexOf","flag","firstname","lastname","nonstop","secToHms","duration","rest","src","height","module","exports"],"mappings":"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","file":"77.chunk.3dbb9.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport style from './style.css';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\nfunction byBib(a, b) {\n    const aHas = typeof a.musher !== 'undefined';\n    const bHas = typeof b.musher !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.musher.bib - b.musher.bib) || 0;\n}\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t\treloadLastEpoch,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n\t\tconst { reloadIsActive, reloadLastEpoch } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass TvTop10 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    // async loadRace(props = this.props) {\n\t// \tthis.setState({ isLoading: true });\n\t// \tconst { raceStore } = props.stores;\n\t// \tconst { raceid } = props;\n    //     await raceStore.load(raceid);\n    //     const { race } = raceStore;\n\t// \tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n    //         return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t// \t}).flat();\n\t// \tif (allTeamIds.length > 0 && raceid) {\n\t// \t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t// \t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t// \t\traceStore.getWorkoutSummaryActiveTeams();\n\t// \t}\n\t// \traceStore.getAllClassesSortedBy();\n\n\t// \t// Set reload timer\n\t// \tclearTimeout(this.updateTimer.reload);\n\t// \tthis.updateTimer.reload = setTimeout(async () => {\n\t// \t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \t\tthis.setState({ reloadLastEpoch });\n\t// \t\tthis.loadRace();\n\t// \t}, RELOAD_INTERVAL_IN_SEC * 1000);\n\n\t// \tthis.setState({\n\t// \t\tisLoading: false,\n\t// \t\tcontentIsNotLoaded: false,\n\t// \t});\n\t// }\n\n    loadLiveRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { race } = raceStore;\n        await raceStore.getRaceTrackerData(race.raceTrackerRace);\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers);\n    }\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n    }\n\n    loadRace = async (props = this.props) => {\n        this.setState({ isLoading: true });\n        const { raceStore, appState } = props.stores;\n        const { raceid, classid } = props;\n        await raceStore.load(raceid);\n        const { race } = raceStore;\n        const { focusOnMushers } = appState;\n\n        const { selectedClassIds = [] } = appState;\n        const selectedClassId = classid || selectedClassIds[0];\n\n        if (classid) {\n            appState.toggleSelectedClassId(classid, true);\n        }\n\n        const allTeamIds = race.classes\n            .filter(currentClass => currentClass.id === selectedClassId)\n            .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n            .map((currentClass) => {\n                return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n            })\n            .flat();\n        if (allTeamIds.length > 0) {\n            await raceStore.loadTeams(allTeamIds.join(','));\n        }\n        if (race.liveRace > 0) {\n            await this.loadLiveRaceResults(this.props, allTeamIds, focusOnMushers);\n\n        } else {\n            await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n        }\n\n        // const allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n        //     return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n        // }).flat();\n\n        // if (allTeamIds.length > 0) {\n        //     await raceStore.loadTeams(allTeamIds.join(','));\n        //     if (race.liveRace > 0) {\n        //         await this.loadLiveRaceResults(props, allTeamIds, focusOnMushers);\n\n        //     } else {\n        //         await this.loadRaceResults(props, allTeamIds, focusOnMushers);\n        //     }\n        // }\n        raceStore.getAllClassesSortedBy();\n\n        const currentClass = raceStore.getClassById(selectedClassId);\n        if (currentClass && currentClass.raceTrackerResults) {\n            raceStore.getRacetrackerResults(currentClass.raceTrackerResults);\n        }\n\n        // Set reload timer\n        clearTimeout(this.updateTimer.reload);\n        this.updateTimer.reload = setTimeout(async () => {\n            const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n            this.setState({ reloadLastEpoch });\n            this.loadRace(props);\n        }, RELOAD_INTERVAL_IN_SEC * 1000);\n\n        this.setState({ isLoading: false });\n    }\n\n    toggleFocusOnMusher = (e) => {\n\t\tconst musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n\t\tconst { appState, raceStore } = this.props.stores;\n\t\tappState.toggleFocusOnMusher(musherId);\n\n\t\tconst { focusOnMushers } = appState;\n\n        const { race } = raceStore;\n        if (race.liveRace > 0) {\n            raceStore.getRaceTrackerActiveTeams(null, focusOnMushers);\n        } else {\n            raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers);\n        }\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid) {\n            this.loadRace(nextProps);\n        }\n\t}\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n        const { classid, position = 'right', limit = 10 } = this.props;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], focusOnMushers = [] } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers, raceTrackerResults } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n        const currentClass = race.classes ? race.classes.find(e => e.id === classid) || {} : {};\n\n        let contestants = [];\n        if (raceTrackerResults && raceTrackerResults.data) {\n            contestants = raceTrackerResults.data.map((line) => {\n                const lineData = raceStore.raceTrackerMapLine(line);\n                const bib = parseInt(lineData.Bib, 10);\n                let contestant = {};\n                if (classes && classes[currentClass.id].contestants) {\n                    contestant = classes[currentClass.id].contestants.find(e => e.musher.bib === bib) || {};\n                }\n                return contestant;\n            });\n        } else if (classes[currentClass.id] && classes[currentClass.id].contestants) {\n            contestants = classes[currentClass.id].contestants.sort(byBib).slice(0, limit).map(contestant => contestant);\n        }\n\n        return (<>\n            <div class={`fixed-top ${style.hoverElement}`} style='height: 100px;'>\n                <div class={`${style.hoverelementonly}`}>\n                    <div class={`row`}>\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                            <div class='col'>\n                                <a\n                                    class={`btn btn-block ${currentClass.id === classid ? 'btn-success' : 'btn-outline-success'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    data-id={currentClass.id}\n                                    href={`/tv/top10/${race.id}/${currentClass.id}/${position}`}\n                                >\n                                    Left: {currentClass.title}\n                                </a>\n                                <a\n                                    class={`btn btn-link text-nowrap ${position === 'left' ? 'float-right' : 'float-left'}`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    data-id={currentClass.id}\n                                    href={`/tv/top10/${race.id}/${currentClass.id}/${position === 'left' ? 'right' : 'left'}`}\n                                >\n                                    {position === 'left' ? <>\n                                        right <i class='fas fa-angle-right' />\n                                    </> : <>\n                                        <i class='fas fa-angle-left' /> left\n                                    </>}\n                                </a>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </div>\n\t\t\t<div class='container-fluid pt-5' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP}; height: calc(100% - ${MARGIN_BOTTOM} - ${MARGIN_TOP});`}>\n                <div class='row'>\n                    <div class={position === 'left' ? 'col-4 ml-5' : 'col-4 offset-8 mr-5'}\n                        style='font-size: 1.5em; line-height: 1.0em;'\n                    >\n                        {/* <div\n                            class='bg-light rounded-lg mr-5 p-4'\n                            style='font-size: 2.0em; line-height: 1.0em;'\n                        > */}\n\n                            {/* <div\n                                class=' text-center py-3 mb-3'\n                                style='background: linear-gradient(#b0b0b0, #e0e0e0, #808080); color: #000000;'\n                            >\n                                <strong>{race.title}</strong>\n                            </div> */}\n\n                            <table class='table table-sm table-borderless rounded-lg'>\n                                <thead>\n                                    <tr>\n                                        <td\n                                            colspan='2'\n                                            class='px-4 py-4 overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 10px 0 0 0; font-size: 1.4em;'\n                                        >\n                                            <nobr>{currentClass.title}</nobr>\n                                        </td>\n                                        <td\n                                            class='px-3 text-center py-4 overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 0 10px 0 0 ; font-size: 1.1em;'\n                                        >\n                                            Time\n                                        </td>\n                                    </tr>\n                                </thead>\n                                <tbody\n                                    style='\n                                        background-color: #1C1F4C;\n                                        background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                        background-size: cover !important;\n                                        background-position: 0 0;\n                                    '>\n                                    {contestants && contestants.map((contestant, idx) => {\n                                    // {raceTrackerResults && raceTrackerResults.data && raceTrackerResults.data.slice(0, limit).map((line, idx) => {\n                                    //     const lineData = raceStore.raceTrackerMapLine(line);\n                                    //     const bib = parseInt(lineData.Bib, 10);\n                                    //     let contestant = {};\n                                    //     if (classes && classes[currentClass.id].contestants) {\n                                    //         contestant = classes[currentClass.id].contestants.find(e => e.musher.bib === bib) || {};\n                                    //     }\n                                    // {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.slice(0, limit).map((contestant, idx) => {\n\n                                        const { musher = {}, currentTeam = {}, currentStages, currentResults = {}, completed, duration,\n                                            normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                            flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                            finishedDate, totalWorkoutTimeUsedSec,\n                                        } = contestant;\n\n                                        const totals = raceStore.getTotalsByTeamId(currentTeam.id);\n\n                                        return (<>\n                                            <tr style='border-bottom: 1px solid #7B312F;'>\n                                                <td\n                                                    class='text-center align-middle ml-0 pl-0'\n                                                    style='width: 50px; color: #ffffff; font-size: 1.2em; line-height: 1.2em;'\n                                                >\n                                                    <div class='d-flex justify-content-start'>\n                                                        <div class='pl-3 pr-2 w-100 clearfix rounded-pill-right' style={`background-color: ${mu.getRankingColor(idx + 1)}`}>\n                                                            {musher.bib || idx + 1}\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='px-3 py-3'\n                                                    style='color: #ffffff; font-size: 1.2em;'\n                                                >\n                                                    <div class='text-overflow' style='max-width: 368px; line-height: 1.1em;'>\n                                                        <span class='float-right' onClick={this.toggleFocusOnMusher} data-musherid={musher.id}>{focusOnMushers.indexOf(musher.id) > -1 ? <i class='fas fa-star text-warning' /> : <i class='far fa-star' />}</span>\n                                                        <nobr>\n                                                            {musher.flag} {musher.firstname} {musher.lastname}<br />\n                                                            {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                                        </nobr>\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='text-center align-middle'\n                                                    style='width: 150px; color: #ffffff; font-size: 1.2em;'\n                                                >\n\n                                                    {race.nonstop ? <>\n                                                        <nobr>{util.secToHms(totalWorkoutTimeUsedSec) || 'n/a'}</nobr>\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(totals.totalRest) || 'n/a'}</nobr> */}\n                                                    </> : <>\n                                                        {isDone === 1 ? <>\n                                                            <nobr>{util.secToHms(normalizedDuration) || 'n/a'}</nobr>\n                                                        </> : <>\n                                                            <nobr>{util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr>\n                                                        </>}\n\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(currentResults.duration) || 'n/a'}</nobr> */}\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-moon text-muted' /> {util.secToHms(currentResults.rest) || 'n/a'}</nobr> */}\n                                                        {/* <nobr><i style='width: 20px;' class='fas fa-running text-muted' /> {util.secToHms(currentResults.duration - currentResults.rest) || 'n/a'}</nobr><br /> */}\n                                                        {/* {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized to race distance:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(normalizedDuration) || 'n/a'}</nobr><br /></>} */}\n                                                        {/* {isDone === 1 && <><nobr class='font-weight-bold'><span class='font-weight-lighter text-muted'>Normalized:</span> <i style='width: 20px;' class='fas fa-clock text-muted' /> {util.secToHms(weightedNormalizedDuration) || 'n/a'}</nobr><br /></>} */}\n                                                    </>}\n                                                    {/* {raceStatus(musher)} */}\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                    {/* <tr>\n                                        <td\n                                            colspan='3'\n                                            class='text-center'\n                                        >\n                                            <img src='https://themusher.app/assets/logo-qpaws-dark.png' height='70' />\n                                        </td>\n                                    </tr> */}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td\n                                            colspan='3'\n                                            class='px-5 py-4 text-center overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 0 0 10px 10px; font-size: 1.1em;'\n                                        >\n                                            <nobr class='mr-4'>QPaws app</nobr>\n\n                                            <img src='https://themusher.app/assets/appstore-download.png' height='40' class='ml-5 mr-1' />\n                                            <img src='https://themusher.app/assets/playstore-download.png' height='40' class='mx-1' />\n\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n\n                        {/* </div> */}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default TvTop10;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__3_DrK\",\"hoverElement\":\"hoverElement__3ED7Q\",\"hoverelementhide\":\"hoverelementhide__2AP13\"};"],"sourceRoot":""}