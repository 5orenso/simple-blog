{"version":3,"sources":["webpack:///./routes/tv/top10.js","webpack:///./routes/tv/style.css"],"names":["MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","initialState","isLoading","contentIsNotLoaded","reloadInSec","reloadLastEpoch","reloadIsActive","TvTop10","observer","props","initComponent","Math","floor","Date","getTime","setState","tickReloadTimeer","state","updateTimer","this","now","clearTimeout","tick","setTimeout","componentDidMount","componentWillUnmount","render","reloadPercent","util","normalizeBetween","class","style","role","aria-valuenow","aria-valuemin","aria-valuemax","Component","loadLiveRaceResults","classInfo","teamIds","focusOnMushers","bibs","userStore","stores","race","raceStore","historyPointIndex","replayHistory","timerRunning","showDrawerReplay","getClassById","classid","getRaceTrackerData","raceTrackerRace","history","startDate","endDate","isAdmin","getRaceTrackerActiveTeams","reload","console","log","RELOAD_INTERVAL_IN_SEC","loadRaceResults","loadWorkoutSummary","raceid","getWorkoutSummaryActiveTeams","loadRace","selectedClassId","allTeamIds","err","appState","load","selectedClassIds","toggleSelectedClassId","classes","filter","currentClass","id","contestants","length","map","musher","team","flat","bib","loadTeams","join","getAllClassesSortedBy","liveRace","toggleFocusOnMusher","e","target","parentElement","dataset","musherid","inputRef","componentWillReceiveProps","nextProps","position","limit","user","language","waypoints","lastAllowedChangeDate","setHours","getHours","find","hoverElement","hoverelementonly","sort","a","b","distance","data-id","href","title","colspan","slice","idx","flag","getRankingColor","finishTime","diffToFirstFinishTime","secToHms","formatDate","parseInputDate","locale","day","month","hour12","hour","minute","windDirection","bearing","format","speed","distanceToFinish","distanceToFirst","distanceToForward","distanceToBehind","src","height","module","exports"],"mappings":"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","file":"16.chunk.5cd83.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\n\nimport style from './style.css';\n\nconst initialState = {\n\tisLoading: false,\n\tcontentIsNotLoaded: true,\n\n\treloadInSec: null,\n\treloadLastEpoch: null,\n\treloadIsActive: false,\n};\n\nconst RELOAD_INTERVAL_IN_SEC = 60;\n\nfunction byBib(a, b) {\n    const aHas = typeof a.musher !== 'undefined';\n    const bHas = typeof b.musher !== 'undefined';\n    return (bHas - aHas) || (aHas === true && a.musher.bib - b.musher.bib) || 0;\n}\n\nfunction raceStatus(musher) {\n\tswitch (musher.raceStatus) {\n\t\tcase 'OK':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute rounded-lg' style='top: 10px; left: 0px;'><i class='fas fa-check text-success' /></span>\n\t\t\t</>);\n\t\tcase 'DNS':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNF':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DNQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DQ':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-danger text-white text-center px-2 rounded-lg border' style='top: 5px; left: -100px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tcase 'DC':\n\t\t\treturn (<>\n\t\t\t\t<span class='position-absolute bg-warning text-white text-center px-2 rounded-lg border' style='top: 5px; left: -150px; width: 80px'><i class='fas fa-info-circle' /> {musher.raceStatus}</span>\n\t\t\t</>);\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n\n\n@observer\nclass ReloadTimer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n\t\tthis.updateTimer = {};\n    }\n\n\tinitComponent = () => {\n\t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t\tthis.setState({\n\t\t\treloadIsActive: true,\n\t\t\treloadLastEpoch,\n\t\t}, () => this.tickReloadTimeer());\n\t}\n\n\ttickReloadTimeer() {\n\t\tconst { reloadIsActive, reloadLastEpoch } = this.state;\n        if (reloadIsActive) {\n\t\t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t\t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t\t\tthis.setState({ reloadInSec });\n\t\t\tclearTimeout(this.updateTimer.tick);\n\t\t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n        }\n\t\treturn false;\n    }\n\n\tcomponentDidMount() {\n\t\tthis.initComponent();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\trender() {\n\t\tconst { reloadInSec } = this.state;\n\t\tconst reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\treturn (<>\n\t\t\t<div class='progress fixed-top' style='height: 2px; z-index: 999999;'>\n\t\t\t\t<div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n\t\t\t</div>\n\t\t</>);\n\t}\n}\n\n@observer\nclass TvTop10 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.inputRef = {};\n        this.updateTimer = {};\n    }\n\n    // async loadRace(props = this.props) {\n\t// \tthis.setState({ isLoading: true });\n\t// \tconst { raceStore } = props.stores;\n\t// \tconst { raceid } = props;\n    //     await raceStore.load(raceid);\n    //     const { race } = raceStore;\n\t// \tconst allTeamIds = race.classes.filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0).map((currentClass) => {\n    //         return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n\t// \t}).flat();\n\t// \tif (allTeamIds.length > 0 && raceid) {\n\t// \t\tawait raceStore.loadTeams(allTeamIds.join(','));\n\t// \t\tawait raceStore.loadWorkoutSummary(allTeamIds.join(','), raceid);\n\t// \t\traceStore.getWorkoutSummaryActiveTeams();\n\t// \t}\n\t// \traceStore.getAllClassesSortedBy();\n\n\t// \t// Set reload timer\n\t// \tclearTimeout(this.updateTimer.reload);\n\t// \tthis.updateTimer.reload = setTimeout(async () => {\n\t// \t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \t\tthis.setState({ reloadLastEpoch });\n\t// \t\tthis.loadRace();\n\t// \t}, RELOAD_INTERVAL_IN_SEC * 1000);\n\n\t// \tthis.setState({\n\t// \t\tisLoading: false,\n\t// \t\tcontentIsNotLoaded: false,\n\t// \t});\n\t// }\n\n    // loadLiveRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n    //     const { raceStore } = props.stores;\n    //     const { race } = raceStore;\n    //     await raceStore.getRaceTrackerData(race.raceTrackerRace);\n    //     raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers);\n    // }\n\n    loadLiveRaceResults = async (props = this.props, { teamIds, focusOnMushers, bibs, classid }) => {\n        const { raceStore, userStore } = props.stores;\n        const { race } = raceStore;\n        const { historyPointIndex, replayHistory, timerRunning } = this.state;\n        const { showDrawerReplay } = this.props;\n        const classInfo = raceStore.getClassById(classid) || {};\n        const { isAdmin } = userStore;\n\n        await raceStore.getRaceTrackerData(race.raceTrackerRace, {\n            history: (replayHistory || showDrawerReplay),\n            bibs,\n            classid,\n            startDate: classInfo.startDate,\n            endDate: classInfo.endDate,\n            isAdmin,\n        });\n        raceStore.getRaceTrackerActiveTeams(teamIds, focusOnMushers, bibs, historyPointIndex);\n\n        // Set reload timer\n        if (timerRunning) {\n            clearTimeout(this.updateTimer.reload);\n            this.updateTimer.reload = setTimeout(() => {\n                console.log('loadLiveRaceResults.reloading...');\n                const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n                this.setState({ reloadLastEpoch });\n                // this.loadRace(props);\n                this.loadLiveRaceResults(this.props, { teamIds, focusOnMushers, bibs, classid });\n            }, RELOAD_INTERVAL_IN_SEC * 1000);\n        }\n    }\n\n\n    loadRaceResults = async (props = this.props, teamIds, focusOnMushers) => {\n        const { raceStore } = props.stores;\n        const { raceid } = props;\n\n        await raceStore.loadWorkoutSummary(teamIds, raceid);\n        raceStore.getWorkoutSummaryActiveTeams(teamIds, focusOnMushers);\n    }\n\n    loadRace = async (props = this.props) => {\n        try {\n            this.setState({ isLoading: true });\n            const { raceStore, appState } = props.stores;\n            const { raceid, classid } = props;\n            await raceStore.load(raceid);\n            const { race } = raceStore;\n            const { focusOnMushers } = appState;\n\n            const { selectedClassIds = [] } = appState;\n            const selectedClassId = classid || selectedClassIds[0];\n\n            if (classid) {\n                appState.toggleSelectedClassId(classid, true);\n            }\n            const allTeamIds = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.team > 0).map(musher => musher.team);\n                })\n                .flat();\n\n            const bibs = race.classes\n                .filter(currentClass => currentClass.id === selectedClassId)\n                .filter(currentClass => currentClass.contestants && currentClass.contestants.length > 0)\n                .map((currentClass) => {\n                    return currentClass.contestants.filter(musher => musher.bib > 0).map(musher => musher.bib);\n                })\n                .flat();\n\n            if (allTeamIds.length > 0) {\n                await raceStore.loadTeams(allTeamIds.join(','));\n            }\n            if (race.liveRace > 0) {\n                await this.loadLiveRaceResults(this.props, { teamIds: allTeamIds, focusOnMushers, bibs, classid: selectedClassId });\n            } else {\n                await this.loadRaceResults(this.props, allTeamIds, focusOnMushers);\n            }\n            raceStore.getAllClassesSortedBy();\n\n            this.setState({ isLoading: false });\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n    }\n\n    toggleFocusOnMusher = (e) => {\n\t\tconst musherId = e.target.parentElement.dataset.musherid || e.target.dataset.musherid;\n\t\tconst { appState, raceStore } = this.props.stores;\n\t\tappState.toggleFocusOnMusher(musherId);\n\n\t\tconst { focusOnMushers } = appState;\n\n        const { race } = raceStore;\n        if (race.liveRace > 0) {\n            raceStore.getRaceTrackerActiveTeams(null, focusOnMushers);\n        } else {\n            raceStore.getWorkoutSummaryActiveTeams(null, focusOnMushers);\n        }\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.updateTimer.reload);\n\t\tclearTimeout(this.updateTimer.tick);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadRace();\n\t}\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.classid !== nextProps.classid) {\n            this.loadRace(nextProps);\n        }\n\t}\n\n// componentWillReceiveProps(nextProps) {\n//         if (this.props.currentClass.id !== nextProps.currentClass.id || this.props.reloadLastEpoch !== nextProps.reloadLastEpoch) {\n//             const { currentClass } = this.props;\n//             const { raceStore } = this.props.stores;\n//             const { checkpoints = [], contestants = [], results = [] } = currentClass;\n//             raceStore.sortContestantsByResult({ contestants, results, checkpoints });\n//         }\n// \t}\n\n\n    render() {\n\t\tconst { contentIsNotLoaded, lockMessage } = this.state;\n\t\tconst { userStore, raceStore, appState } = this.props.stores;\n        const { classid, position = 'right', limit = 10 } = this.props;\n\t\tconst { user = {}, teams = [], isAdmin } = userStore;\n        const { language = 'en' } = user;\n\n        const { darkmode, displayDetails, editUserDetails, selectedClassIds = [], focusOnMushers = [] } = appState;\n\n\t\tconst { race = {}, teamList, classes = [] } = raceStore;\n\t\tconst { activeTeams, waypoints, zoomToMarkers, raceTrackerResults } = raceStore;\n\n\t\tconst lastAllowedChangeDate = new Date(race.endDate);\n\t\tlastAllowedChangeDate.setHours(lastAllowedChangeDate.getHours() + 2);\n\n        const currentClass = race.classes ? race.classes.find(e => e.id === classid) || {} : {};\n\n        // let contestants = [];\n        // if (raceTrackerResults && raceTrackerResults.data) {\n        //     contestants = raceTrackerResults.data.map((line) => {\n        //         const lineData = raceStore.raceTrackerMapLine(line);\n        //         const bib = parseInt(lineData.Bib, 10);\n        //         let contestant = {};\n        //         if (classes && classes[currentClass.id].contestants) {\n        //             contestant = classes[currentClass.id].contestants.find(e => e.musher.bib === bib) || {};\n        //         }\n        //         return contestant;\n        //     });\n        // } else if (classes[currentClass.id] && classes[currentClass.id].contestants) {\n        //     contestants = classes[currentClass.id].contestants.sort(byBib).slice(0, limit).map(contestant => contestant);\n        // }\n\n        // const { sortedContestants = [] } = raceStore;\n\n        return (<>\n            <div class={`fixed-top ${style.hoverElement}`} style='height: 100px;'>\n                <div class={`${style.hoverelementonly}`}>\n                    <div class={`row`}>\n                        {race.classes && race.classes.sort((a, b) => a.distance - b.distance).map((currentClass, idx) => <>\n                            <div class='col'>\n                                <a\n                                    class={`btn btn-block ${currentClass.id === classid ? 'btn-success' : 'btn-outline-success'} text-nowrap`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    data-id={currentClass.id}\n                                    href={`/tv/top10/${race.id}/${currentClass.id}/${position}`}\n                                >\n                                    Left: {currentClass.title}\n                                </a>\n                                <a\n                                    class={`btn btn-link text-nowrap ${position === 'left' ? 'float-right' : 'float-left'}`}\n                                    style='text-overflow: ellipsis; overflow: hidden;'\n                                    data-id={currentClass.id}\n                                    href={`/tv/top10/${race.id}/${currentClass.id}/${position === 'left' ? 'right' : 'left'}`}\n                                >\n                                    {position === 'left' ? <>\n                                        right <i class='fas fa-angle-right' />\n                                    </> : <>\n                                        <i class='fas fa-angle-left' /> left\n                                    </>}\n                                </a>\n                            </div>\n                        </>)}\n                    </div>\n                </div>\n            </div>\n\t\t\t<div class='container-fluid pt-5' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP}; height: calc(100% - ${MARGIN_BOTTOM} - ${MARGIN_TOP});`}>\n                <div class='row'>\n                    <div class={position === 'left' ? 'col-4 ml-5' : 'col-4 offset-8 mr-5'}\n                        style='font-size: 1.5em; line-height: 1.0em;'\n                    >\n                        {/* <div\n                            class='bg-light rounded-lg mr-5 p-4'\n                            style='font-size: 2.0em; line-height: 1.0em;'\n                        > */}\n\n                            {/* <div\n                                class=' text-center py-3 mb-3'\n                                style='background: linear-gradient(#b0b0b0, #e0e0e0, #808080); color: #000000;'\n                            >\n                                <strong>{race.title}</strong>\n                            </div> */}\n\n                            <table class='table table-sm table-borderless rounded-lg'>\n                                <thead>\n                                    <tr>\n                                        <td\n                                            colspan='3'\n                                            class='px-4 py-4 overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 10px 0 0 0; font-size: 1.4em;'\n                                        >\n                                            <nobr>{currentClass.title} / GPS Ranking</nobr>\n                                        </td>\n                                        <td\n                                            class='px-3 text-center py-4 overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 0 10px 0 0 ; font-size: 1.1em;'\n                                        >\n                                            Time\n                                        </td>\n                                    </tr>\n                                </thead>\n                                <tbody\n                                    style='\n                                        background-color: #1C1F4C;\n                                        background-image: url(\"https://themusher.app/assets/tv-single-background.jpg\");\n                                        background-size: cover !important;\n                                        background-position: 0 0;\n                                    '>\n                                    {waypoints && waypoints.slice(0, limit).map((musher, idx) => {\n                                    // {raceTrackerResults && raceTrackerResults.data && raceTrackerResults.data.slice(0, limit).map((line, idx) => {\n                                    //     const lineData = raceStore.raceTrackerMapLine(line);\n                                    //     const bib = parseInt(lineData.Bib, 10);\n                                    //     let contestant = {};\n                                    //     if (classes && classes[currentClass.id].contestants) {\n                                    //         contestant = classes[currentClass.id].contestants.find(e => e.musher.bib === bib) || {};\n                                    //     }\n                                    // {classes[currentClass.id] && classes[currentClass.id].contestants && classes[currentClass.id].contestants.slice(0, limit).map((contestant, idx) => {\n\n                                        // const { musher = {}, currentTeam = {}, currentStages, currentResults = {}, completed, duration,\n                                        //     normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                        //     flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                        //     finishedDate, totalWorkoutTimeUsedSec,\n                                        // } = contestant;\n                                        // const { musher = {}, currentTeam = {}, currentStages, currentResults = {}, completed, duration,\n                                        //     normalizedDuration, weightedNormalizedDuration, totalKcalRelated, weightedTotalKcal,\n                                        //     flatTotalKcal, percentHarder, loadIndex, raceDistance, isDone, normalizedKcal, normalizedFlatKcal,\n                                        //     finishedDate, totalWorkoutTimeUsedSec,\n                                        // } = contestant;\n\n                                        const {\n                                            bearing, bib, body, color, diffToFirstFinishTime, distanceToBehind, distanceToFinish,\n                                            distanceToFirst, distanceToForward, email, finishTime, flag, icon, image, lat, lng, rank,\n                                            speed, title, totalDistanceOnTrack,\n                                        } = musher;\n                                        return (<>\n                                            <tr style='border-bottom: 1px solid #7B312F;'>\n                                                <td\n                                                    class='pl-3 pr-1 py-3 text-center'\n                                                    style='color: #ffffff; font-size: 1.2em;'\n                                                >\n                                                    <div class='text-overflow' style='max-width: 100px; line-height: 1.1em;'>\n                                                        {idx + 1}\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='text-center align-middle ml-0 pl-0'\n                                                    style='width: 50px; color: #ffffff; font-size: 1.2em; line-height: 1.2em;'\n                                                >\n                                                    <div class='d-flex justify-content-start'>\n                                                        <div class='pl-3 pr-2 w-100 clearfix rounded-pill-right' style={`background-color: ${mu.getRankingColor(idx + 1)}`}>\n                                                            {bib || idx + 1}\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='px-3 py-3'\n                                                    style='color: #ffffff; font-size: 1.2em;'\n                                                >\n                                                    <div class='text-overflow' style='max-width: 348px; line-height: 1.1em;'>\n                                                        <nobr>\n                                                            {flag} {title}<br />\n                                                            {/* <small class='text-muted'>{musher.sportsClub}</small><br /> */}\n                                                            {/* {JSON.stringify(contestant, null, 4)} */}\n                                                        </nobr>\n                                                    </div>\n                                                </td>\n                                                <td\n                                                    class='text-center align-middle'\n                                                    style='width: 150px; color: #ffffff; font-size: 1.2em;'\n                                                >\n                                                    <nobr>\n                                                        {musher.finishTime < 9999999999 ? <>\n                                                            {musher.diffToFirstFinishTime > 0 ? <>\n                                                                {util.secToHms(musher.diffToFirstFinishTime)}\n                                                            </> : <>\n                                                                {mu.formatDate(util.parseInputDate(musher.finishTime), { locale: language, day: 'numeric', month: 'numeric', hour12: false, hour: '2-digit', minute: '2-digit' })}\n                                                            </>}\n                                                        </> : <>\n                                                            <span class='text-muted'><i class='fas fa-compass' /></span> {mu.windDirection(musher.bearing)}\n                                                            <span class='text-muted font-weight-light ml-3'><i class='fas fa-tachometer-alt' /></span> {util.format(musher.speed || 0, 1)} km/h<br />\n                                                            {/* {util.format(musher.totalDistanceOnTrack, 1)} km */}\n                                                            <span class='text-muted font-weight-light'><i class='fas fa-flag-checkered' /></span> {util.format(musher.distanceToFinish, 1)} km\n                                                            {musher.distanceToFinish !== musher.distanceToFirst && musher.distanceToFirst > 0 && <>\n                                                                <span class='text-muted font-weight-light ml-3'>1st:</span> {util.format(musher.distanceToFirst, 1)} km\n                                                            </>}\n                                                            {musher.distanceToFinish !== musher.distanceToForward && musher.distanceToForward > 0 && <>\n                                                                <span class='text-muted font-weight-light ml-3'><i class='fas fa-arrow-up' /></span> {util.format(musher.distanceToForward, 1)} km\n                                                            </>}\n                                                            {musher.distanceToBehind > 0 && <>\n                                                                <span class='text-muted font-weight-light ml-3'><i class='fas fa-arrow-down' /></span> {util.format(musher.distanceToBehind, 1)} km\n                                                            </>}\n                                                        </>}\n                                                    </nobr>\n                                                </td>\n                                            </tr>\n                                        </>);\n                                    })}\n                                    {/* <tr>\n                                        <td\n                                            colspan='3'\n                                            class='text-center'\n                                        >\n                                            <img src='https://themusher.app/assets/logo-qpaws-dark.png' height='70' />\n                                        </td>\n                                    </tr> */}\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td\n                                            colspan='4'\n                                            class='px-5 py-4 text-center overflow-hidden'\n                                            style='background-color: #FB4114; color: #ffffff; border-radius: 0 0 10px 10px; font-size: 1.1em;'\n                                        >\n                                            <nobr class='mr-4'>QPaws app</nobr>\n\n                                            <img src='https://themusher.app/assets/appstore-download.png' height='40' class='ml-5 mr-1' />\n                                            <img src='https://themusher.app/assets/playstore-download.png' height='40' class='mx-1' />\n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n\n                        {/* </div> */}\n                    </div>\n                </div>\n            </div>\n        </>);\n    }\n}\n\nexport default TvTop10;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverelementonly\":\"hoverelementonly__3_DrK\",\"hoverElement\":\"hoverElement__3ED7Q\",\"hoverelementhide\":\"hoverelementhide__2AP13\"};"],"sourceRoot":""}