{"version":3,"sources":["webpack:///./components/util/scrollIntoView.js","webpack:///./components/data/distance.js","webpack:///./routes/workouts/tracking.js","webpack:///./components/data/temperature.js","webpack:///./components/data/weight.js","webpack:///./components/data/elevation.js","webpack:///./components/data/speed.js","webpack:///./components/team/teams.js"],"names":["initialState","ScrollIntoView","observer","props","state","container","componentDidMount","this","horizontal","vertical","behavior","inline","block","scrollIntoView","render","ref","c","Component","displayDistance","distance","util","format","Distance","value","smallUnit","stores","userStore","user","settings","imperial","kmToMiles","class","MARGIN_TOP","mu","marginTop","MARGIN_BOTTOM","marginBottom","badGpsStatuses","subMenuMarginTop","isLoading","isSaving","hideProminentDisclosure","mapHeight","reloadLastEpoch","Types","updateTextField","e","type","isNew","target","dataset","field","updateField","id","parseInt","toggleType","typeId","workout","toJS","types","language","saved","help","hasRaces","raceStore","getSignupByUserEmail","email","length","filter","map","idx","style","onClick","icon","lang","name","role","WorkoutTracking","updateFieldValue","checkNested","totalDistance","gpx","gpxInfo","maxSpeed","avgSpeed","ascent","decent","rest","startLatlng","endLatlng","updateObject","duration","workoutStore","roundTo","distanceKm","speedmax","speedAvg","elevation","save","newValue","localObjectValue","datatype","elementtype","skipTimer","Array","isArray","images","split","parseFloat","updateObjectKeyValue","doUpdateField","clearTimeout","updateTimer","setTimeout","getState","cordovaGetCurrentPosition","backgroundGeoLocationReady","cordovaGetState","cordovaProviderState","cordovaIsPowerSaveMode","checkForErrors","currentTeam","totalTime","currentSpeed","isRunning","cordovaAuthorizationStatus","powerSaveStatus","providerState","geoLocationState","cordovaActiveTrackingParams","battery","pluginState","gpsPluginEnabled","enabled","hasAccessToGPS","indexOf","data","timestamp","Math","floor","Date","getTime","error","message","stack","JSON","stringify","deviceInfo","platformId","platformVersion","location","window","fetchApi","method","err","console","log","loadStartup","workoutid","appState","getFingerprint","getInfo","loadExistingWorkout","loadRaceInProgress","startEpoch","date","now","cordovaSetTimes","startTime","lastTime","calculatedTotalDistance","setTotalDistance","cordovaSetOdometer","setState","load","limit","startTracking","cordovaStartTracking","team","lastWorkout","lastWoutoutObject","response","newWorkout","isInProgress","query","skipUpdate","sort","dogs","dogsLeft","dogsRight","mushers","equipment","sledWeight","insert","isoDate","cordovaResetTracking","resumeTracking","cordovaResumeTracking","pauseTracking","cordovaPauseTracking","finishTracking","cordovaSaveTracking","route","confirmProminentDisclosure","updateSetting","cancelTracking","debug","saveField","batteryUsage","normalizeBetween","reloadInSec","activeTrackingWorkoutId","activeTrackingTeamId","coords","bgGeo","workoutInProgressId","heading","windDirection","isCordova","year","getYear","isAdmin","teamName","findTeam","workoutType","findWorkoutType","workoutTypeIcon","raceInProgress","raceTeams","musher","hasStarted","typeOfTracking","battegryLevelStart","battegryLevelEnd","prominentDisclosure","activeRace","race","title","callback","key","unsetTeamIfSelected","highlight","showAll","secToHms","altitude","params","aria-hidden","href","native","Temperature","celciusToFahrenheit","Weight","kgToPounds","Elevation","meterToFeet","Speed","kmtToMph","Teams","toggleTeam","dogStore","setCurrentTeam","undefined","isDefined","showAllTeams","teams"],"mappings":"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","file":"30.chunk.61064.js","sourcesContent":["import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nconst initialState = {};\n\n@observer\nclass ScrollIntoView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.container = null;\n    }\n\n    componentDidMount() {\n        const { horizontal, vertical = '' } = this.props;\n        const props = {\n            behavior: 'smooth',\n        };\n        if (horizontal) {\n            props.inline = horizontal;\n        }\n        if (vertical) {\n            props.block = vertical;\n        }\n\t\tthis.container.scrollIntoView(props);\n\t}\n\n    render() {\n        return (\n            <div ref={c => this.container = c}>&nbsp;</div>\n        );\n    }\n}\n\nexport default ScrollIntoView;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction displayDistance(distance) {\n\tif (distance < 5) {\n\t\treturn util.format(distance, 2);\n\t}\n\tif (distance < 10) {\n\t\treturn util.format(distance, 1);\n\t}\n\treturn util.format(distance, 1);\n}\n\nfunction kmToMiles(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Distance extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n\t\t\t\t\t{displayDistance(kmToMiles(value))} {smallUnit ? <><small><small><small class='ml-0 text-muted'>mi</small></small></small></> : <>mi</>}\n\t\t\t\t</nobr>\n            </>);\n        }\n\n\t\treturn (<>\n\t\t\t<nobr>\n\t            {displayDistance(value)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>km</small></small></small></> : <>km</>}\n\t\t\t</nobr>\n\t    </>);\n    }\n}\n\nexport default Distance;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { route } from 'preact-router';\nimport { toJS } from 'mobx';\nimport { Text, Localizer, withText } from 'preact-i18n';\n\nimport Speed from '../../components/data/speed';\nimport Elevation from '../../components/data/elevation';\nimport Weight from '../../components/data/weight';\nimport Distance from '../../components/data/distance';\nimport Temperature from '../../components/data/temperature';\n\nimport mu from '../../lib/musher-util';\n\nconst MARGIN_TOP = mu.marginTop(true);\nconst MARGIN_BOTTOM = mu.marginBottom();\nconst SUB_MENU_MARGIN_TOP = mu.subMenuMarginTop();\n\nconst badGpsStatuses = ['NOT DETERMINED', 'RESTRICTED', 'DENIED', 'WHEN_IN_USE'];\n\n// import Workout from '../../components/workout';\n// import WorkoutWeek from '../../components/workout/week';\nimport Teams from '../../components/team/teams';\n// import Map from '../../components/map';\n// import Gauge from '../../components/gauge';\n\nconst initialState = {\n\tisLoading: false,\n\tisSaving: false,\n    hideProminentDisclosure: false,\n    mapHeight: 300,\n    reloadLastEpoch: null,\n};\n\nconst BUTTON_SIZE = '80px';\nconst RELOAD_INTERVAL_IN_SEC = 300;\n\n@observer\nclass Types extends Component {\n    toggleType(typeId) {\n        const { workout, type, field, updateField, isNew } = this.props;\n        let value = toJS(workout[field]);\n        if (value === typeId) {\n            value = null;\n        } else {\n            value = typeId;\n        }\n        updateField({ id: workout.id, field, value, type, isNew });\n    }\n\n    updateTextField = (e) => {\n        const { type, updateField, isNew } = this.props;\n        const { id, field } = e.target.dataset;\n        const value = e.target.value;\n        updateField({ id: parseInt(id, 10), field, value, type, isNew });\n    }\n\n    render() {\n        const { userStore, raceStore } = this.props.stores;\n        const { types, user } = userStore;\n        const { language } = user;\n        const { saved, workout, field, title, icon, help, isNew } = this.props;\n        const value = workout[field];\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const hasRaces = raceInProgress.length > 0;\n\n        return (\n            <div class={`form-group pb-1 mt-4 ${saved[`${field}.${workout.id}`] ? 'is-valid' : ''}`}>\n                {/* <label for={`${field}Input`}>{icon && <i class={`${icon} text-muted`} />} {title}</label> */}\n                <div class='container-fluid px-1'>\n                    <div class='row'>\n                        {types && types.filter(e => e.id <= 2).map((type, idx) => (\n                            <div class='col-6 mb-1 px-0'>\n                                <button\n                                    class={`btn btn-sm btn-block rounded-none\n\t\t\t\t\t\t\t\t\t\t${idx === 0 ? 'rounded-pill-left' : (idx + 1 === 2 ? 'rounded-pill-right': '')}\n                                        clearfix ${value === type.id ? 'btn-info' : 'btn-outline-info'} text-nowrap`}\n\t\t                            style='text-overflow: ellipsis; overflow: hidden;'\n                                    onClick={() => this.toggleType(type.id)}\n                                >\n                                    {type.icon && <i class={type.icon} />} {language && type.lang && type.lang[language] ? type.lang[language] : type.name}\n                                    {hasRaces && type.id === 2 && <>\n                                        {value === type.id ? <>\n                                            <i class='fas fa-check float-right' />\n                                        </> : <>\n                                            <div class='spinner-grow text-warning float-right' role='status'>\n                                                <span class='sr-only'>Loading...</span>\n                                            </div>\n                                            <i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />\n                                        </>}\n                                    </>}\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {saved[`${field}.${workout.id}`] ? <div class={`valid-feedback`} style='display: block;'><Text id='workouts.changes-saved'>Endringene er lagret</Text></div> :\n                    <small id={`${field}Help`} class='form-text text-muted'>{help}</small>}\n            </div>\n        );\n    }\n}\n\n@observer\nclass WorkoutTracking extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.updateTimer = {};\n    }\n\n    updateFieldValue = async ({ id, field, value, datatype, elementtype, type, isNew = false, skipTimer = false }) => {\n        const { workoutStore } = this.props.stores;\n        let newValue = value;\n        let localObjectValue = value;\n        const { workout } = workoutStore;\n        if (field === 'images') {\n            if (Array.isArray(workout.images) && Array.isArray(value)) {\n                localObjectValue = [...workout.images, ...value];\n            }\n        }\n        if (datatype === 'array' && !Array.isArray(value)) {\n            if (elementtype === 'number') {\n                newValue = value.split(',').map(e => parseFloat(e) || e);\n            } else  {\n                newValue = value.split(',');\n            }\n            // console.log('updateFieldValue', id, field, value, datatype, elementtype);\n        }\n        if (isNew) {\n            workoutStore.updateObjectKeyValue('newWorkout', field, value);\n        } else {\n            workoutStore.updateField(id, field, localObjectValue);\n            if (skipTimer) {\n                await this.doUpdateField(id, field, newValue);\n            } else {\n                clearTimeout(this.updateTimer[field]);\n                this.updateTimer[field] = setTimeout(async () => {\n                    this.doUpdateField(id, field, newValue);\n                }, 500);\n            }\n        }\n\n        // GPX update stuff\n        if (field === 'gpx' && workout && util.checkNested(workout, 'gpx', 'gpxInfo')) {\n            const { totalDistance, maxSpeed, avgSpeed, ascent, decent, duration, rest, startLatlng, endLatlng } = workout.gpx.gpxInfo;\n            const updateObject = {};\n            if (duration) {\n                workoutStore.updateField(id, 'duration', duration);\n                updateObject.duration = duration;\n            }\n            if (rest) {\n                workoutStore.updateField(id, 'rest', rest);\n                updateObject.rest = rest;\n            }\n            if (totalDistance) {\n                workoutStore.updateField(id, 'distanceKm', util.roundTo(totalDistance, 10));\n                updateObject.distanceKm = util.roundTo(totalDistance, 10);\n            }\n            if (maxSpeed) {\n                workoutStore.updateField(id, 'speedmax', util.roundTo(maxSpeed, 10));\n                updateObject.speedmax = util.roundTo(maxSpeed, 10);\n            }\n            if (avgSpeed) {\n                workoutStore.updateField(id, 'speedAvg', util.roundTo(avgSpeed, 10));\n                updateObject.speedAvg = util.roundTo(avgSpeed, 10);\n            }\n            if (ascent) {\n                workoutStore.updateField(id, 'elevation', ascent);\n                updateObject.elevation = ascent;\n            }\n            if (decent) {\n                workoutStore.updateField(id, 'decent', decent);\n                updateObject.decent = decent;\n            }\n            if (startLatlng) {\n                workoutStore.updateField(id, 'startLatlng', startLatlng);\n                updateObject.startLatlng = startLatlng;\n            }\n            if (endLatlng) {\n                workoutStore.updateField(id, 'endLatlng', endLatlng);\n                updateObject.endLatlng = endLatlng;\n            }\n            await workoutStore.save(updateObject, workout.id);\n        }\n    }\n\n    async doUpdateField(id, field, value) {\n        const { workoutStore } = this.props.stores;\n        if (id && field) {\n            await workoutStore.saveField(id, field, value);\n        }\n    }\n\n\tgetState = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        const { backgroundGeoLocationReady } = workoutStore;\n\n        if (!backgroundGeoLocationReady) {\n            await workoutStore.cordovaGetState();\n            await workoutStore.cordovaProviderState();\n            await workoutStore.cordovaIsPowerSaveMode();\n        }\n\t\tawait workoutStore.cordovaGetCurrentPosition(true);\n\t}\n\n    checkForErrors = () => {\n        try{\n            const { workoutStore, userStore } = this.props.stores;\n            const { user } = userStore;\n            const {\n                currentTeam, totalTime = 0, currentSpeed = 0, totalDistance = 0,\n                isRunning, saved, workout, newWorkout, cordovaAuthorizationStatus, powerSaveStatus,\n                providerState, geoLocationState,\n                cordovaActiveTrackingParams,\n                activeTrackingWorkoutId, activeTrackingTeamId,\n                battery, activity, coords, bgGeo,\n                pluginState,\n            } = workoutStore;\n\n            const { enabled: gpsPluginEnabled, status: gpsPluginStatus, gps: gpsPluginGps, network: gpsPluginNetwork } = providerState;\n            const { workout: gpsPluginWorkout, team: gpsPluginTeam } = cordovaActiveTrackingParams;\n            const hasAccessToGPS = badGpsStatuses.indexOf(cordovaAuthorizationStatus) === -1;\n\n\n            if (gpsPluginEnabled && !powerSaveStatus && hasAccessToGPS) {\n                return false;\n            }\n\n            const data = {\n                timestamp: Math.floor(new Date().getTime() / 1000),\n                error: {\n                    name: 'BackgroundGeolocation',\n                    message: 'Problem with BackgroundGeolocation',\n                    stack: `Status:\nuser.email: ${JSON.stringify(user.email, null, 4)}\nuser.deviceInfo: ${JSON.stringify(user.deviceInfo, null, 4)}\nuser.platformId: ${JSON.stringify(user.platformId, null, 4)}\nuser.platformVersion: ${JSON.stringify(user.platformVersion, null, 4)}\ncurrentTeam: ${JSON.stringify(currentTeam, null, 4)}\nisRunning: ${JSON.stringify(isRunning, null, 4)}\ntotalTime: ${JSON.stringify(totalTime, null, 4)}\ncurrentSpeed: ${JSON.stringify(currentSpeed, null, 4)}\ntotalDistance: ${JSON.stringify(totalDistance, null, 4)}\ncordovaActiveTrackingParams: ${JSON.stringify(cordovaActiveTrackingParams)}\nhasAccessToGPS: ${JSON.stringify(hasAccessToGPS)}\n\nproviderState:\n${JSON.stringify(providerState, null, 4)}\n\npluginState:\n${JSON.stringify(pluginState, null, 4)}\n\ngeoLocationState:\n${JSON.stringify(geoLocationState, null, 4)}\n\npowerSaveStatus:\n${JSON.stringify(powerSaveStatus, null, 4)}\n\ncordovaAuthorizationStatus:\n${JSON.stringify(cordovaAuthorizationStatus, null, 4)}\n\nbattery:\n${JSON.stringify(battery, null, 4)}\n\n                    `,\n                },\n                location: window.location,\n            };\n            util.fetchApi('/api/errors/', { method: 'POST' }, data);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    loadStartup = async () => {\n\t\tconst { workoutStore, raceStore, appState, userStore } = this.props.stores;\n        const { workoutid } = this.props;\n        const { cordovaActiveTrackingParams } = workoutStore;\n\n        await appState.getFingerprint();\n        await userStore.getInfo();\n        await this.getState();\n\n        if (workoutid || cordovaActiveTrackingParams.workout) {\n            await this.loadExistingWorkout();\n        } else {\n            this.updateFieldValue({\n                field: 'type',\n                value: 1,\n                isNew: true,\n            });\n        }\n        await raceStore.loadRaceInProgress();\n        this.checkForErrors();\n    }\n\n    loadExistingWorkout = async () => {\n        this.setState({ isLoading: true });\n        const { workoutStore } = this.props.stores;\n        const { cordovaActiveTrackingParams } = workoutStore;\n        const { workoutid } = this.props;\n\n        if (cordovaActiveTrackingParams.workout || workoutid) {\n            await workoutStore.load(cordovaActiveTrackingParams.workout || workoutid, {}, { limit: 10 });\n        }\n        const { workout } = workoutStore;\n        if (workout && workout.id) {\n            const startEpoch = Math.floor(new Date(workout.date).getTime() / 1000);\n            const now = Math.floor(new Date().getTime() / 1000);\n            workoutStore.cordovaSetTimes({\n                startTime: startEpoch,\n                lastTime: now,\n                totalTime: now - startEpoch,\n            });\n            let distanceKm = workout.distanceKm;\n            if (distanceKm <= 0 && workout.gpxInfo && workout.gpxInfo.calculatedTotalDistance) {\n                distanceKm = workout.gpxInfo.calculatedTotalDistance;\n            }\n            workoutStore.setTotalDistance(distanceKm * 1000);\n            workoutStore.cordovaSetOdometer(distanceKm * 1000);\n        }\n        this.setState({ isLoading: false });\n    }\n\n    // loadWorkout = async () => {\n    //     const { workoutStore } = this.props.stores;\n    //     const { workout } = workoutStore;\n    //     if (workout.id) {\n    //         await workoutStore.load(workout.id);\n    //     }\n    // }\n\n    startTracking = async () => {\n        this.setState({ isLoading: true });\n\t\tconst { workoutStore } = this.props.stores;\n        const { workoutid } = this.props;\n        const { currentTeam, newWorkout = {} } = workoutStore;\n        if (workoutid) {\n            await workoutStore.load(workoutid);\n            const updateObject = {\n                isInProgress: 1,\n            };\n            await workoutStore.save(updateObject, workoutid);\n        } else {\n            const workouts = await workoutStore.load({ query: { team: currentTeam }, skipUpdate: 1, limit: 5, sort: '-createdDate' });\n            let lastWorkout = workouts[0];\n            const lastWoutoutObject = {};\n            if (lastWorkout) {\n                lastWoutoutObject.dogs = lastWorkout.dogs || [];\n                lastWoutoutObject.dogsLeft = [];\n                lastWoutoutObject.dogsRight = [];\n                lastWoutoutObject.mushers = lastWorkout.mushers;\n                lastWoutoutObject.type = lastWorkout.type || 2;\n                lastWoutoutObject.equipment = lastWorkout.equipment;\n                lastWoutoutObject.sledWeight = lastWorkout.sledWeight;\n            }\n\n            const response = await workoutStore.insert({\n                name: `New workout tracking ${util.isoDate()}`,\n                team: currentTeam,\n                isInProgress: 1,\n                ...lastWoutoutObject,\n                type: newWorkout.type || 1,\n            });\n\n            await workoutStore.cordovaResetTracking();\n            await workoutStore.load(response.data.id);\n        }\n\n        const { workout } = workoutStore;\n        workoutStore.cordovaStartTracking({ workout: workout.id, team: currentTeam });\n        // this.setTimers();\n        this.setState({ isLoading: false });\n    }\n\n    // tickReloadTimeer() {\n\t// \tconst { reloadIsActive, reloadLastEpoch } = this.state;\n    //     if (reloadIsActive) {\n\t// \t\tconst now = Math.floor(new Date().getTime() / 1000);\n\t// \t\tconst reloadInSec = RELOAD_INTERVAL_IN_SEC - (now - reloadLastEpoch);\n\t// \t\tthis.setState({ reloadInSec });\n\t// \t\tclearTimeout(this.updateTimer.tick);\n\t// \t\tthis.updateTimer.tick = setTimeout(() => this.tickReloadTimeer(), 1000);\n    //     }\n\t// \treturn false;\n    // }\n\n    // setTimers = () => {\n    //     // Set reload timer\n    //     const reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \tthis.setState({\n\t// \t\treloadIsActive: true,\n\t// \t\treloadLastEpoch,\n\t// \t}, () => this.tickReloadTimeer());\n\n\t// \tclearTimeout(this.updateTimer.reload);\n\t// \tthis.updateTimer.reload = setTimeout(async () => {\n\t// \t\tconst reloadLastEpoch = Math.floor(new Date().getTime() / 1000);\n\t// \t\tthis.setState({ reloadLastEpoch });\n\t// \t\tthis.loadWorkout();\n\t// \t}, RELOAD_INTERVAL_IN_SEC * 1000);\n    // }\n\n    resumeTracking = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        await workoutStore.cordovaResumeTracking();\n        const { workout, currentTeam } = workoutStore;\n        const updateObject = {\n            isInProgress: 1,\n            team: currentTeam,\n        };\n        await workoutStore.save(updateObject, workout.id);\n    }\n\n    pauseTracking = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        await workoutStore.cordovaPauseTracking();\n        const { workout } = workoutStore;\n        const updateObject = {\n            isInProgress: 2,\n        };\n        await workoutStore.save(updateObject, workout.id);\n    }\n\n    finishTracking = async () => {\n        this.setState({ isSaving: true });\n\t\tconst { workoutStore } = this.props.stores;\n        await workoutStore.cordovaSaveTracking();\n        await workoutStore.cordovaResetTracking();\n        const { workout, currentTeam } = workoutStore;\n        const updateObject = {\n            isInProgress: 0,\n            team: currentTeam,\n        };\n        await workoutStore.save(updateObject, workout.id);\n        this.setState({ isSaving: false });\n\n        route('/workouts/list');\n    }\n\n    confirmProminentDisclosure = async () => {\n        const { userStore } = this.props.stores;\n        this.setState({ hideProminentDisclosure: true })\n        await userStore.updateSetting({ 'settings.prominentDisclosure': 1 });\n        await userStore.getInfo();\n    }\n\n    cancelTracking = async () => {\n\t\tconst { workoutStore } = this.props.stores;\n        workoutStore.cordovaResetTracking();\n        route('/workouts/list');\n    }\n\n    componentDidMount() {\n        this.loadStartup();\n    }\n\n    debug = () => {\n        const { workoutStore } = this.props.stores;\n        const { currentTeam, newWorkout = {} } = workoutStore;\n        console.log({ currentTeam, newWorkout });\n    }\n\n\trender() {\n\t\tconst { isLoading, isSaving, hideProminentDisclosure, mapHeight, reloadLastEpoch, reloadInSec } = this.state;\n        const reloadPercent = Math.floor(util.normalizeBetween(reloadInSec, 0, RELOAD_INTERVAL_IN_SEC, 0, 100))\n\n\t\tconst { userStore, appState, workoutStore, raceStore } = this.props.stores;\n        const { currentTeam, totalTime = 0, currentSpeed = 0, totalDistance = 0,\n            isRunning, saved, workout, newWorkout, cordovaAuthorizationStatus, powerSaveStatus,\n            providerState, geoLocationState,\n            cordovaActiveTrackingParams,\n            activeTrackingWorkoutId, activeTrackingTeamId,\n            battery, activity, coords, bgGeo,\n            pluginState,\n        } = workoutStore;\n\n        const { enabled: gpsPluginEnabled, status: gpsPluginStatus, gps: gpsPluginGps, network: gpsPluginNetwork } = providerState;\n        const { workout: gpsPluginWorkout, team: gpsPluginTeam } = cordovaActiveTrackingParams;\n\n        const { workout: workoutInProgressId } = cordovaActiveTrackingParams;\n\n        const heading = mu.windDirection(coords.heading);\n\n        const { mapColorMode, mapRangeMin, mapRangeMax, isCordova } = appState;\n\t\tconst { week, year = util.getYear(), workoutid } = this.props;\n\t\tconst { user, isAdmin } = userStore;\n        const { settings = {}, language = 'en' } = user;\n        const teamName = userStore.findTeam(workout.team);\n        const workoutType = userStore.findWorkoutType({ type: workout.type, language });\n        const workoutTypeIcon = userStore.findWorkoutType({ type: workout.type, field: 'icon' });\n\n        const raceInProgress = raceStore.getSignupByUserEmail(user.email);\n        const hasRaces = raceInProgress.length > 0;\n        const raceTeams = raceInProgress.map(e => parseInt(e.musher.team, 10));\n\n        const hasStarted = user && user.email;\n\n        const isNew = !workout.id;\n\n        const typeOfTracking = isNew ? newWorkout.type : workout.type;\n\n        const hasAccessToGPS = badGpsStatuses.indexOf(cordovaAuthorizationStatus) === -1;\n\n        // if (!gpsPluginEnabled && workoutid !== 'debug') {\n        //     return (<>\n        //        <div class='container-fluid h-100 fixed-top bg-light' style='z-index: 10000;'>\n        //             <div class='row h-100'>\n        //                 <div class='col-12 text-center my-auto'>\n        //                     <div class='display-1 text-muted'>\n        //                         <i class='fas fa-bomb' />\n        //                     </div>\n        //                     <h3>Lost connection to the gps plugin...</h3>\n        //                     <p>Please restart the app to continue the tracking.</p>\n\n        //                     {isAdmin && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n        //                         <xmp>\n        //                             gpsPluginEnabled: {JSON.stringify(gpsPluginEnabled, null, 4)}<br />\n        //                             providerState: {JSON.stringify(providerState, null, 4)}<br />\n        //                             activeTrackingWorkoutId: {JSON.stringify(activeTrackingWorkoutId, null, 4)}<br />\n        //                             activeTrackingTeamId: {JSON.stringify(activeTrackingTeamId, null, 4)}<br />\n        //                             {bgGeo && <>bgGeo: {JSON.stringify(bgGeo.params, null, 4)}<br /></>}\n        //                         </xmp>\n        //                     </div>}\n\n        //                 </div>\n        //             </div>\n        //         </div>\n        //     </>);\n        // }\n\n        let batteryUsage;\n        if (workout && workout.gpxInfo && workout.gpxInfo.battegryLevelStart) {\n            batteryUsage = (workout.gpxInfo.battegryLevelStart - workout.gpxInfo.battegryLevelEnd) * 100;\n        }\n\n        if (hasStarted && !isLoading && !hideProminentDisclosure && !settings.prominentDisclosure) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <h5>Background Location Access</h5>\n                            <p>\n                                QPaws collects location data when a workout session is in progress.\n                                This is done to enable tracking your workouts, calculating distance and load index.\n                                The location data is collected even when the app is closed or not in use.\n                            </p>\n                            <p>\n                                The data will be uploaded to your account at themusher.app where you may\n                                view and/or delete your location history.\n                            </p>\n                            <p>\n                                The complete <a href='https://litt.no/v2/the-musher/privacy-policy-for-the-musher/247' native>PRIVACY POLICY FOR QPAWS</a> is located at the litt.no.\n                            </p>\n                        </div>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                            <button class='btn btn-primary float-right' onClick={this.confirmProminentDisclosure}>I understand</button>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (!hasStarted) {\n            return (\n                <div class='container-fluid' style={`margin-bottom: ${MARGIN_BOTTOM}; margin-top: ${MARGIN_TOP};`}>\n                    <div class='row'>\n                        <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-center mt-5 pt-5'>\n                            <div class='spinner-border text-primary mx-auto' role='status' style='width: 100px; height: 100px;'>\n                                <span class='sr-only'>Loading...</span>\n                            </div>\n                            <br />\n                            Loading user info and other stuff...\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\t\treturn (\n\t\t\t<div class='container-fluid fixed-top h-100' style={`\n                padding-bottom: ${MARGIN_BOTTOM};\n                padding-top: ${MARGIN_TOP};\n                height: calc(100vh) !important;\n                overflow-x: auto;\n                overflow-y: auto;\n                transition: .3s;\n                overscroll-behavior: contain;\n                z-index: 10000;\n            `}>\n                <div class={`navbar-themed fixed-top text-center bg-${isRunning ? 'success' : 'warning'} p-2`}>\n                    {isRunning ? <>\n                        <h1 class='text-white font-weight-bold'>\n                            Tracking\n                            <div class='spinner-grow ml-3' role='status' />\n                        </h1>\n                    </> : <>\n                        {totalTime > 0 ? <>\n                            <h1 class='text-white font-weight-bold'>\n                                Stopped\n                                <i class='fas fa-pause-circle text-warning ml-3' />\n                            </h1>\n                        </> : <>\n                            <h1 class={`text-${typeOfTracking === 2 ? 'primary' : 'white'} font-weight-bold`}>\n                                Ready to {typeOfTracking === 2 ? <>\n                                    race <i class='fas fa-flag-checkered' />\n                                </> : <>\n                                    start <i class='fas fa-running' />\n                                </>}\n                            </h1>\n                        </>}\n                    </>}\n                    {/* {reloadInSec >= 0 && <>\n                        <div class='progress' style='height: 2px;'>\n                            <div class='progress-bar' role='progressbar' style={`width: ${reloadPercent}%;`} aria-valuenow={reloadPercent} aria-valuemin='0' aria-valuemax='100' />\n                        </div>\n                    </>} */}\n                </div>\n\t\t\t\t<div class='row bg-light'>\n                    {/* <xmp>\n                    totalTime: {totalTime}<br />\n                    cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams)}<br />\n                    </xmp> */}\n\n                    {!isRunning && raceInProgress && raceInProgress.length > 0 && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n                        <div class='alert alert-warning'>\n                            <h5><Text id='races.race-in-progress'>Løp pågår</Text></h5>\n                            <ul>\n                                {raceInProgress.map(activeRace => <li>\n                                    {activeRace.race.title}\n                                </li>)}\n                            </ul>\n                            <i class='fas fa-exclamation-triangle' /> <Text id='races.choose-correct-team-and-type'>Velg riktig team og type for løpet.</Text>\n                        </div>\n                    </div>}\n\n\t\t\t\t\t{isRunning && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 font-weight-bold position-relative text-center bg-light'>\n                        {workout.name}\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 bg-light'>\n                        {isRunning ? <>\n                            <span class='float-left'>\n                                <i class={`fas fa-users text-muted`} /> {teamName}\n                            </span>\n                            <span class='float-right'>\n                                <i class={`${workoutTypeIcon} text-muted`} /> {workoutType}\n                            </span>\n                            {/* {JSON.stringify({ cordovaActiveTrackingParams, activeTrackingWorkoutId, activeTrackingTeamId })} */}\n                        </> : <>\n                            {/* <label for='teams'><i class={`fas fa-users text-muted`} /> Team</label> */}\n                            <Teams stores={this.props.stores} callback={this.debug} key={`teams-${currentTeam}`} unsetTeamIfSelected={false} highlight={raceTeams} showAll={false} />\n                            {!currentTeam && <>\n                                <div class='alert alert-danger' role='alert'>\n                                    <i class='fas fa-hand-point-up mr-4 float-left' style='font-size: 2.0em;' /> Please choose team before starting tracking.\n                                </div>\n                            </>}\n\n                            <Types\n                                stores={this.props.stores}\n                                saved={saved}\n                                workout={isNew ? newWorkout : workout}\n                                type='number'\n                                field='type'\n                                icon='fas fa-running'\n                                title={<Text id='workouts.type'>Type tur</Text>}\n                                updateField={this.updateFieldValue}\n                                isNew={isNew}\n                            />\n                            {isNew && !newWorkout.type && <>\n                                <div class='alert alert-danger' role='alert'>\n                                    <i class='fas fa-hand-point-up mr-4 float-left' style='font-size: 2.0em;' /> Please choose type before starting tracking.\n                                </div>\n                            </>}\n                        </>}\n\t\t\t\t\t</div>\n                </div>\n\t\t\t\t<div class='row'>\n                    {/* cordovaAuthorizationStatus: {cordovaAuthorizationStatus} */}\n                    {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3'>\n\t\t\t\t\t\t<WorkoutGraph stores={this.props.stores} isLoading={isLoading} />\n\t\t\t\t\t</div> */}\n\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 text-center'>\n                        <i class='fas fa-clock text-muted' /> Time\n                        {batteryUsage > 0 && <small class='text-muted ml-3'>\n                            <i class='fas fa-battery-three-quarters' /> {util.format(batteryUsage, 1)}% used\n                        </small>}\n                        <div class='display-3 my-0 py-0 font-weight-bold d-flex justify-content-center' style='line-height: 1.0em;'>\n                            {util.secToHms(totalTime).split(':').map((e, idx) => <>\n                                <div class='text-center' style='width: 100px;'>{e}</div>\n                                {idx < 2 && <div class='text-muted'>:</div>}\n                            </>)}\n                        </div>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <i class='fas fa-tachometer-alt text-muted' /> Speed\n                        <div class='display-3 my-0 py-0 font-weight-bold d-flex justify-content-center' style='line-height: 1.0em;'>\n                            {/* <div class='text-center w-50'>{util.format(currentSpeed * 3.6, 2)}</div>\n                            <div class='text-muted font-weight-lighter'>km/t</div> */}\n                            <Speed stores={this.props.stores} value={currentSpeed * 3.6} smallUnit={true} />\n                        </div>\n                    </div>\n                    <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <i class='fas fa-road text-muted' /> Distance\n                        <div class='display-3 my-0 py-0 font-weight-bold d-flex justify-content-center' style='line-height: 1.0em;'>\n                            {/* <div class='text-center w-50'>{util.format(totalDistance / 1000, 2)}</div>\n                            <div class='text-muted font-weight-lighter'>km</div> */}\n                            <Distance stores={this.props.stores} value={totalDistance / 1000} smallUnit={true} />\n                        </div>\n                    </div>\n                    <div class='col-6 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <i class='fas fa-compass text-muted' /> Direction\n                        <div class='display-4 my-0 py-0 d-flex justify-content-center' style='line-height: 1.0em;'>\n                            <div class='text-center mr-4'>{heading}</div>\n                        </div>\n                    </div>\n                    <div class='col-6 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <i class='fas fa-mountain text-muted' /> Elevation\n                        <div class='display-4 my-0 py-0 d-flex justify-content-center' style='line-height: 1.0em;'>\n                            {/* <div class='text-center mr-4'>\n                                {util.format(coords.altitude, 0)} <span class='text-muted font-weight-lighter'>m</span>\n                            </div> */}\n                            <Elevation stores={this.props.stores} value={coords.altitude} smallUnit={true} />\n                        </div>\n                        {/* {workout && workout.gpxInfo ? <svg viewBox='0 0 300 100' style='width: 180px; height: 60px; top: 0; left: 0;'>\n                            <path d={`${workout.gpxInfo.svgElevation}`} style='fill: #0063FF; stroke: #0063FF; stroke-width: 2; opacity: 0.2;' />\n                        </svg> : <div>-</div>}\n\n                        {workout && workout.gpxInfo ? <svg viewBox='0 0 300 300' style='width: 180px; height: 180px; top: 0; left: 0;'>\n                            <path d={`${workout.gpxInfo.svgMap}`} style='fill: none; stroke: #FF6300; stroke-width: 5; opacity: 0.2;' />\n                        </svg> : <div>-</div>} */}\n\n                    </div>\n\n                    {isAdmin && <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        <xmp>\n                            gpsPluginEnabled: {JSON.stringify(gpsPluginEnabled, null, 4)}<br />\n                            pluginState: {JSON.stringify(pluginState, null, 4)}<br />\n                            cordovaActiveTrackingParams: {JSON.stringify(cordovaActiveTrackingParams, null, 4)}<br />\n                            activeTrackingWorkoutId: {JSON.stringify(activeTrackingWorkoutId, null, 4)}<br />\n                            activeTrackingTeamId: {JSON.stringify(activeTrackingTeamId, null, 4)}<br />\n                            {bgGeo && <>bgGeo: {JSON.stringify(bgGeo.params, null, 4)}<br /></>}\n                        </xmp>\n                    </div>}\n\n                    {/* <div class='col-12 offset-0 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 mt-2 text-center'>\n                        {isRunning && workout && workout.gpx && <>\n\t\t\t\t\t\t\t<div style={`height: ${mapHeight}px;`}>\n\t\t\t\t\t\t\t\t<Map\n\t\t\t\t\t\t\t\t\tstores={this.props.stores}\n\t\t\t\t\t\t\t\t\tmapId={`${workout.id}-${mapHeight}`}\n\t\t\t\t\t\t\t\t\tgeojson={workout.gpx.geoJSON}\n\t\t\t\t\t\t\t\t\tskipGeojson={false}\n\t\t\t\t\t\t\t\t\tgpxInfo={workout.gpxInfo}\n\t\t\t\t\t\t\t\t\theight={mapHeight}\n\t\t\t\t\t\t\t\t\tmapColorMode={mapColorMode}\n\t\t\t\t\t\t\t\t\tmapRangeMin={mapRangeMin}\n\t\t\t\t\t\t\t\t\tmapRangeMax={mapRangeMax}\n\t\t\t\t\t\t\t\t\tkey={`workout-map-${reloadLastEpoch}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>}\n                    </div> */}\n\n                    <div class='navbar-themed fixed-bottom text-center pb-2'>\n                        {!isCordova && <>\n                            <div class='alert alert-danger' role='alert'>\n                                GPS tracking is not enabled!\n                            </div>\n                        </>}\n                        {!hasAccessToGPS && <>\n                            <div class='alert alert-danger' role='alert'>\n                                No access to GPS in background! Unable to track your workouts. Please go to settings and enable this.\n                            </div>\n                        </>}\n                        {powerSaveStatus && <>\n                            <div class='alert alert-danger' role='alert'>\n                                Powersave is enabled! Unable to track your workouts. Please go to settings and enable this.\n                            </div>\n                        </>}\n\n                        {settings.prominentDisclosure && isCordova && <>\n                            {isRunning ? <>\n                                <button class='btn btn-link' onClick={this.pauseTracking}>\n                                    <i class='fas fa-pause-circle text-danger' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                    <small>Pause</small>\n                                </button>\n                            </> : <>\n                                {workoutInProgressId ? <>\n                                    {isSaving ? <>\n                                        <span class='spinner-border spinner-border-sm' style={`width: ${BUTTON_SIZE}; height: ${BUTTON_SIZE};`} role='status' aria-hidden='true' />\n                                    </> : <>\n                                        <button class='btn btn-link' onClick={this.resumeTracking}>\n                                            <i class='fas fa-play-circle text-danger' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                            <small>Resume</small>\n                                        </button>\n                                        <button class='btn btn-link'  onClick={this.finishTracking}>\n                                            <i class='fas fa-check-circle text-success' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                            <small>Finish</small>\n                                        </button>\n                                    </>}\n                                </> : <>\n                                    {isLoading ? <>\n                                        <span class='spinner-border spinner-border-sm' style={`width: ${BUTTON_SIZE}; height: ${BUTTON_SIZE};`} role='status' aria-hidden='true' />\n                                    </> : <>\n                                        <button class='btn btn-link' onClick={this.startTracking}>\n                                            <i class='fas fa-play-circle text-danger' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                            <small>Start</small>\n                                        </button>\n                                        <button class='btn btn-link'  onClick={this.cancelTracking}>\n                                            <i class='fas fa-times-circle text-warning' style={`font-size: ${BUTTON_SIZE};`} /><br />\n                                            <small>Cancel</small>\n                                        </button>\n                                    </>}\n                                </>}\n                            </>}\n                        </>}\n                    </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WorkoutTracking;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction celciusToFahrenheit(value) {\n    return ((value * 9/5) + 32);\n}\n\n@observer\nclass Temperature extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(celciusToFahrenheit(value), 0)}°F\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)}°C\n            </nobr>\n        </>);\n    }\n}\n\nexport default Temperature;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kgToPounds(value) {\n    return 2.20462 * value;\n}\n\n@observer\nclass Weight extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kgToPounds(value), 0)} lb\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} kg\n            </nobr>\n        </>);\n    }\n}\n\nexport default Weight;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction meterToFeet(value) {\n    return 3.28084 * value;\n}\n\n@observer\nclass Elevation extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(meterToFeet(value), 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>ft</small></small></small></> : <>ft</>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 0)} {smallUnit ? <><small><small><small class='ml-0 text-muted'>m</small></small></small></> : <>m</>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Elevation;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport mu from '../../lib/musher-util';\n\nfunction kmtToMph(value) {\n    return 0.621371 * value;\n}\n\n@observer\nclass Speed extends Component {\n    render() {\n\t\tconst { value = 0, smallUnit } = this.props;\n\t\tconst { userStore } = this.props.stores;\n\t\tconst { user } = userStore;\n\t\tconst { settings = {} } = user;\n\n        if (settings.imperial) {\n            return (<>\n                <nobr>\n                    {util.format(kmtToMph(value), 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.mph'>mph</Text></small></small></small></> : <><Text id='workouts.mph'>mph</Text></>}\n                </nobr>\n            </>);\n        }\n\n\t\treturn (<>\n            <nobr>\n                {util.format(value, 1)} {smallUnit ? <><small><small><small class='ml-0 text-muted'><Text id='workouts.kmt'>km/t</Text></small></small></small></> : <><Text id='workouts.kmt'>km/t</Text></>}\n            </nobr>\n        </>);\n    }\n}\n\nexport default Speed;\n","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\nimport { Text, Localizer } from 'preact-i18n';\n\nimport ScrollIntoView from '../../components/util/scrollIntoView';\n\n@observer\nclass Teams extends Component {\n    toggleTeam = (team) => {\n\t\tconst { callback, unsetTeamIfSelected = true } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tconst { currentTeam } = dogStore;\n\t\tif (unsetTeamIfSelected && team === currentTeam) {\n\t\t\tdogStore.setCurrentTeam(undefined);\n\t\t\tworkoutStore.setCurrentTeam(undefined);\n\t\t} else {\n\t\t\tdogStore.setCurrentTeam(team);\n\t\t\tworkoutStore.setCurrentTeam(team);\n\t\t}\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n    showAllTeams = () => {\n\t\tconst { callback } = this.props;\n        const { dogStore, workoutStore } = this.props.stores;\n\t\tdogStore.setCurrentTeam(undefined);\n\t\tworkoutStore.setCurrentTeam(undefined);\n\t\tif (util.isDefined(callback)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// componentDidMount() {\n\t// \tif (this.container) {\n\t// \t\tthis.container.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'center' });\n\t// \t}\n\t// }\n\n    render() {\n        const { userStore, dogStore } = this.props.stores;\n        const { teams } = userStore;\n\t\tconst { currentTeam } = dogStore;\n\t\tconst { highlight, showAll = true } = this.props;\n        return (\n\t\t\t<div class='row mt-2'>\n\t\t\t\t<div class='w-100 overflow-hidden'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='d-flex flex-row flex-nowrap pb-2 px-1'\n\t\t\t\t\t\tstyle='overflow: auto; scroll-snap-type: x mandatory;'\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* <xmp><br /><br /><br /><br />{JSON.stringify(teams, null, 4)}</xmp> */}\n\t\t\t\t\t\t{teams && teams.map((team, idx) => (\n\t\t\t\t\t\t\t<div class='col mb-0 px-0 clearfix' key={team.id}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass={`btn btn-sm btn-block \n\t\t\t\t\t\t\t\t\t\trounded-none ${idx === 0 ? 'rounded-pill-left' : (idx + 1 === teams.length ? 'rounded-pill-right': '')}\n\t\t\t\t\t\t\t\t\t\t${currentTeam === team.id ? 'btn-success' : 'btn-outline-success'}\n\t\t\t\t\t\t\t\t\t\ttext-nowrap clearfix`}\n\t\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\t\tonClick={() => this.toggleTeam(team.id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i class='fas fa-users' /> {team.name}\n\n\t\t\t\t\t\t\t\t\t{highlight && highlight.indexOf(team.id) > -1 && <>\n\t\t\t\t\t\t\t\t\t\t{currentTeam === team.id ? <>\n\t\t\t\t\t\t\t\t\t\t\t<i class='fas fa-check float-right' />\n\t\t\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-warning float-right' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<i class='far fa-hand-point-left float-right' style='font-size: 2.0em;' />   \n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/* {currentTeam === team.id && <ScrollIntoView horizontal={'center'} vertical={'end'} />} */}\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t{showAll && <div class='row'>\n\t\t\t\t\t\t<div class='col-12 mb-1 px-1 d-flex justify-content-center'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass={`btn btn-sm rounded-lg btn-link text-nowrap clearfix`}\n\t\t\t\t\t\t\t\tstyle='text-overflow: ellipsis; overflow: hidden;'\n\t\t\t\t\t\t\t\tonClick={this.showAllTeams}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class='fas fa-users' /> <Text id='teams.show-all'>Show all</Text>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n        );\n    }\n}\n\nexport default Teams;\n"],"sourceRoot":""}