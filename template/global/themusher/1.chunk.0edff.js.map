{"version":3,"sources":["webpack:///./components/lineGraph/style.css","webpack:///./components/lineGraph/index.js"],"names":["module","exports","getTicks","count","min","max","reverse","prefix","postfix","loop","Array","from","keys","range","Math","ceil","floor","map","d","parseInt","transformXTick","tick","fn","util","isFunction","match","msDiff","replace","now","epoch","isoDate","transformYTick","normalizeRange","val","newMin","newMax","round5","x","roundDown","sign","abs","findMinY","values","data","arr","isArray","isNumber","y","findMaxY","controlPoint","current","previous","next","pointA","pointB","lengthX","lengthY","o","length","sqrt","pow","angle","atan2","PI","cos","sin","bezierCommand","point","i","a","cpsX","cpsY","lineCommand","svgPath","points","command","opts","dPostfix","maxX","firstPoint","height","lastPoint","lineFromXmax","width","lineFromXzero","reduce","acc","makePaths","idx","yMin","yMax","xMin","xMax","yRangeMin","yRangeMax","offsetY","maxMinFixed","smooth","avgWindow","yMaxMinRound","dataMap","minY","maxY","minX","realHeight","fnX","dataVal","round","isDefined","xVal","fnY","yVal","dataArray","p","filter","e","finalDataArray","windowSize","getter","setter","value","get","result","leftOffeset","to","sum","j","smoothValues","l","ySmooth","dOriginal","makePath","undefined","avgWindowLeft","avgWindowRight","smoothLeft","smoothRight","initialState","mouseData","LineChart","observer","props","mouseMove","stores","getCoordsWithPadding","layerX","layerY","appState","setMousePosition","state","svgRef","svgContainerRef","this","PADDING_TOP","paddingTop","PADDING_BOTTOM","paddingBottom","showXTicks","svgHeight","clientHeight","paddingLeft","showYTicksLeft","clientWidth","getMouseCoordX","xPos","getCoordX","getTextBoxX","mousePos","align","subtractPadding","pos","getMouseData","key","opt","autoLimit","padding","isObject","dataMapCurrent","Object","rest","resto","componentDidMount","scrollToRight","showValueLeftLine","showValueRightLine","addEventListener","scrollLeft","scrollLeftMax","scrollWidth","componentWillUnmount","removeEventListener","render","paddingRight","tickCount","showYTicksRight","xTicks","xTicksVal","xTicksLink","yTicksLeft","yTicksLeftVal","yTicksLeftPrefix","yTicksLeftPostfix","yTicksLeftWidth","yTicksRight","yTicksRightVal","yTicksRightPrefix","yTicksRightPostfix","yTicksRightWidth","yMaxLeft","yMaxMinLeftRound","yMaxRight","yMinRight","yMaxMinRightRound","rangeMinLeft","rangeMaxLeft","rangeMinRight","rangeMaxRight","dataLeft","dataRight","legendLeft","legendRight","unitLeft","unitRight","dataFillLeft","dataFillRight","hoverValLeft","hoverValRight","legendFontSize","legendLineHeight","hoverFontSize","ticksFontSize","marker","markers","darkmode","PADDING_LEFT","PADDING_RIGHT","LEGEND_LINE_HEIGHT","LEGEND_FONT_SIZE","HOVER_FONT_SIZE","TICKS_FONT_SIZE","common","MIN_Y_LEFT","yMinLeft","MAX_Y_LEFT","MIN_Y_RIGHT","MAX_Y_RIGHT","MIN_X","concat","MAX_X","findMaxX","pathLeft","pathRight","TOTAL_GRAPHS_LEFT","TOTAL_GRAPHS_RIGHT","TOTAL_GRAPHS","X_TICKS","Y_TICKS_LEFT","Y_TICKS_RIGHT","markerX","class","style","lineChart","ref","c","onTouchstart","mu","captureEvents","onTouchend","onTouchmove","onScroll","xmlns","svg","viewBox","preserveAspectRatio","path","fill-rule","x1","x2","y1","y2","mouseLine","currentStyleIdx","className","classFillLeft","pathOriginal","m","mX","rx","ry","mouseHoverBox","font-size","mouseHoverDarkmode","mouseHover","hoverVal","dy","text-anchor","left","bottom","v","data-value","href","legend","legendOriginal","pathText","top","Component"],"mappings":"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","file":"1.chunk.0edff.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineChart\":\"lineChart__1V7gu\",\"svg\":\"svg__2VZNe\",\"pathText\":\"pathText__2RfbE\",\"pathOriginal\":\"pathOriginal__9eH9i\",\"legendOriginal\":\"legendOriginal__2ZbOt\",\"pathLeft0\":\"pathLeft0__3tOjN\",\"pathLeftFill0\":\"pathLeftFill0__3QXUB\",\"legendLeft0\":\"legendLeft0__H5zqB\",\"pathLeft1\":\"pathLeft1__3XeI-\",\"legendLeft1\":\"legendLeft1__1vXUq\",\"pathLeft2\":\"pathLeft2__Jskj_\",\"legendLeft2\":\"legendLeft2__38D1t\",\"pathLeft3\":\"pathLeft3__vtNwg\",\"legendLeft3\":\"legendLeft3__tROYd\",\"pathLeft4\":\"pathLeft4__ZfOXV\",\"legendLeft4\":\"legendLeft4__1d0WE\",\"pathLeft5\":\"pathLeft5__1V5kT\",\"legendLeft5\":\"legendLeft5__3PSRY\",\"pathLeft6\":\"pathLeft6__3g2rw\",\"legendLeft6\":\"legendLeft6__2gdN9\",\"pathLeft7\":\"pathLeft7__2aVhq\",\"legendLeft7\":\"legendLeft7__3n5R1\",\"pathLeft8\":\"pathLeft8__3LkIB\",\"legendLeft8\":\"legendLeft8__1cA-J\",\"pathLeft9\":\"pathLeft9__1eWVE\",\"legendLeft9\":\"legendLeft9__1g73E\",\"pathRight0\":\"pathRight0__3sPo3\",\"legendRight0\":\"legendRight0__2sF9z\",\"pathRight1\":\"pathRight1__16EJJ\",\"legendRight1\":\"legendRight1__1ryhw\",\"pathRight2\":\"pathRight2__1giMc\",\"legendRight2\":\"legendRight2__1Aub9\",\"pathRight3\":\"pathRight3__yhWxI\",\"legendRight3\":\"legendRight3__2TdGl\",\"pathRight4\":\"pathRight4__3M2kd\",\"legendRight4\":\"legendRight4__2ySNI\",\"pathRight5\":\"pathRight5__1IsUE\",\"legendRight5\":\"legendRight5__3amxo\",\"pathRight6\":\"pathRight6__37j9X\",\"legendRight6\":\"legendRight6__q3gxO\",\"pathRight7\":\"pathRight7__2k1bu\",\"legendRight7\":\"legendRight7__1gMWB\",\"pathRight8\":\"pathRight8__xUK7j\",\"legendRight8\":\"legendRight8__1MmGE\",\"pathRight9\":\"pathRight9__rL-jI\",\"legendRight9\":\"legendRight9__1z3dO\",\"x-axis\":\"x-axis__1601s\",\"y-axis-left\":\"y-axis-left__3tpCF\",\"y-axis-right\":\"y-axis-right__3gWmK\",\"marker\":\"marker__2peOe\",\"markers\":\"markers__2lso3\",\"mouseHover\":\"mouseHover__2B4N6\",\"mouseHoverDarkmode\":\"mouseHoverDarkmode__3VPOP\",\"mouseHoverBox\":\"mouseHoverBox__3fJuY\",\"mouseLine\":\"mouseLine__1cdau\"};","import { h, Component } from 'preact';\nimport util from 'preact-util';\nimport { observer } from 'mobx-preact';\n\nimport style from './style.css';\n\nimport mu from '../../lib/musher-util';\n\nconst TEXT_BOX_PADDING_X = 10;\nconst TEXT_PADDING_X = 20;\n\nfunction getTicks(count, min, max, reverse = false, prefix = '', postfix = '') {\n    let loop = Array.from(Array(count).keys());\n    if (reverse) {\n        loop = loop.reverse();\n    }\n    const range = Math.ceil(max) - Math.floor(min);\n    if (prefix === '' && postfix === '') {\n        return loop.map(d => parseInt((range / (count - 1) * d), 10) + Math.floor(min));\n    }\n    return loop.map(d => `${prefix}${parseInt((range / (count - 1) * d), 10) + Math.floor(min)}${postfix}`);\n}\n\nfunction transformXTick(tick, fn) {\n    if (util.isFunction(fn)) {\n        return fn(tick);\n    }\n    if (typeof tick === 'string') {\n        if (tick.match(/\\d+h/)) {\n            const msDiff = tick.replace(/h/g, '') * 3600 * 1000;\n            const now = util.epoch();\n            const then = now - msDiff;\n            return util.isoDate(then);\n        }\n    }\n    return tick;\n}\n\nfunction transformYTick(tick, fn) {\n    if (util.isFunction(fn)) {\n        return fn(tick);\n    }\n    return tick;\n}\n\nfunction normalizeRange(val, min, max, newMin, newMax) {\n    return newMin + (val - min) * (newMax - newMin) / (max - min);\n}\n\nfunction round5(x, roundDown = false) {\n    let sign = 1;\n    if (x < 0) {\n        sign = -1;\n    }\n    if (roundDown) {\n        if (sign === 1) {\n            return Math.floor(Math.abs(x) / 5) * 5 * sign;\n        }\n        return Math.ceil(Math.abs(x) / 5) * 5 * sign;\n    }\n    if (sign === 1) {\n        return Math.ceil(Math.abs(x) / 5) * 5 * sign;\n    }\n    return Math.floor(Math.abs(x) / 5) * 5 * sign;\n}\n\nfunction findMinX({ data, min }) {\n    const values = data.map((arr) => {\n        if (util.isArray(arr)) {\n            if (util.isNumber(min)) {\n                return Math.min(min, ...arr.map(d => d.x));\n            }\n            return Math.min(...arr.map(d => d.x));\n        }\n    });\n    return Math.min(...values);\n}\n\nfunction findMaxX({ data, max }) {\n    const values = data.map((arr) => {\n        if (util.isArray(arr)) {\n            if (util.isNumber(max)) {\n                return Math.max(max, ...arr.map(d => d.x));\n            }\n            return Math.max(...arr.map(d => d.x));\n        }\n    });\n    return Math.max(...values);\n}\n\nfunction findMinY({ data, min }) {\n    const values = data.map((arr) => {\n        if (util.isArray(arr)) {\n            if (util.isNumber(min)) {\n                return Math.min(min, ...arr.map(d => d.y));\n            }\n            return Math.min(...arr.map(d => d.y));\n        }\n    });\n    return Math.min(...values);\n}\n\nfunction findMaxY({ data, max }) {\n    const values = data.map((arr) => {\n        // console.log(arr);\n        if (util.isArray(arr)) {\n            if (util.isNumber(max)) {\n                return Math.max(max, ...arr.map(d => d.y));\n            }\n            return Math.max(...arr.map(d => d.y));\n        }\n    });\n    return Math.max(...values);\n}\n\nfunction smoothValues(arr, windowSize = 2, getter = (value) => value, setter) {\n    const get = getter\n    const result = []\n    for (let i = 0; i < arr.length; i += 1) {\n        const leftOffeset = i - windowSize\n        const from = leftOffeset >= 0 ? leftOffeset : 0\n        const to = i + windowSize + 1\n        let count = 0\n        let sum = 0\n        for (let j = from; j < to && j < arr.length; j += 1) {\n            sum += get(arr[j])\n            count += 1\n        }\n        result[i] = setter ? setter(arr[i], sum / count) : sum / count\n    }\n    return result\n}\n\n\n// Properties of a line\n// I:  - pointA (array) [x,y]: coordinates\n//     - pointB (array) [x,y]: coordinates\n// O:  - (object) { length: l, angle: a }: properties of the line\nfunction lineProperties(pointA, pointB) {\n    const lengthX = pointB[0] - pointA[0];\n    const lengthY = pointB[1] - pointA[1];\n    return {\n        length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n        angle: Math.atan2(lengthY, lengthX),\n    };\n}\n\n// Position of a control point\n// I:  - current (array) [x, y]: current point coordinates\n//     - previous (array) [x, y]: previous point coordinates\n//     - next (array) [x, y]: next point coordinates\n//     - reverse (boolean, optional): sets the direction\n// O:  - (array) [x,y]: a tuple of coordinates\nfunction controlPoint(current, previous, next, reverse) {\n    // When 'current' is the first or last point of the array\n    // 'previous' or 'next' don't exist.\n    // Replace with 'current'\n    const p = previous || current;\n    const n = next || current;\n\n    // The smoothing ratio\n    const smoothing = 0.2;\n\n    // Properties of the opposed-line\n    const o = lineProperties(p, n);\n\n    // If is end-control-point, add PI to the angle to go backward\n    const angle = o.angle + (reverse ? Math.PI : 0);\n    const length = o.length * smoothing;\n\n    // The control point position is relative to the current point\n    const x = current[0] + Math.cos(angle) * length;\n    const y = current[1] + Math.sin(angle) * length;\n    return [x, y]\n}\n\n// Create the bezier curve command\n// I:  - point (array) [x,y]: current point coordinates\n//     - i (integer): index of 'point' in the array 'a'\n//     - a (array): complete array of points coordinates\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\nfunction bezierCommand(point, i, a) {\n    // start control point\n    const [cpsX, cpsY] = controlPoint(a[i - 1], a[i - 2], point)  // end control point\n    const [cpeX, cpeY] = controlPoint(point, a[i - 1], a[i + 1], true);\n    return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`\n}\n\n// Svg path line command\n// I:  - point (array) [x, y]: coordinates\n// O:  - (string) 'L x,y': svg line command\nfunction lineCommand(point) {\n    if (point[1] === null) {\n        return `M ${point[0]} ${point[1]}`;\n    }\n    return `L ${point[0]} ${point[1]}`;\n}\n\n// Render the svg <path> element\n// I:  - points (array): points coordinates\n//     - command (function)\n//       I:  - point (array) [x,y]: current point coordinates\n//           - i (integer): index of 'point' in the array 'a'\n//           - a (array): complete array of points coordinates\n//       O:  - (string) a svg path command\n// O:  - (string): a Svg <path> element\nfunction svgPath(points, command, opts = {}) {\n    // build the d attributes by looping over the points\n    const maxX = Math.max(...points.map(d => d[0]));\n    const minX = Math.min(...points.map(d => d[0]));\n    const firstPoint = points[0] || [[0, opts.height]];\n    const lastPoint = points[points.length - 1] || [[maxX, opts.height]];\n\n    let dPrefix;\n    if (opts.lineFromXzero) {\n        dPrefix = `M ${0},${opts.height} L ${firstPoint[0] - 20},${opts.height - 1}`;\n    } else {\n        dPrefix = `M ${firstPoint[0]},${firstPoint[1]} L ${firstPoint[0]},${firstPoint[1]}`;\n    }\n    let dPostfix;\n    if (opts.lineFromXmax) {\n        dPostfix = `L ${lastPoint[0] + 10},${opts.height} L ${opts.width},${opts.height - 1}`;\n    } else {\n        dPostfix = `L ${lastPoint[0]},${lastPoint[1]} L ${lastPoint[0]},${lastPoint[1]}`;\n    }\n\n    const d = points.reduce((acc, point, i, a) => i === 0\n        // if first point\n        ? `L ${point[0]},${point[1]}`\n        // else\n        : `${acc} ${command(point, i, a)}`\n    , '');\n\n    return `${dPrefix} ${d} ${dPostfix}`;\n}\n\nfunction makePaths(opts) {\n    return opts.data.map((d, idx) => makePath({\n        ...opts,\n        data: d,\n        yRangeMin: util.isArray(opts.yRangeMin) ? opts.yRangeMin[idx] : undefined,\n        yRangeMax: util.isArray(opts.yRangeMax) ? opts.yRangeMax[idx] : undefined,\n        avgWindow: util.isArray(opts.avgWindowLeft) ? opts.avgWindowLeft[idx] : (util.isArray(opts.avgWindowRight) ? opts.avgWindowRight[idx] : undefined),\n        smooth: util.isArray(opts.smoothLeft) ? opts.smoothLeft[idx] : (util.isArray(opts.smoothRight) ? opts.smoothRight[idx] : undefined),\n    }));\n}\n\nfunction makePath({ data, yMin, yMax, xMin, xMax, width, height, yRangeMin, yRangeMax,\n    offsetY = 0, maxMinFixed = false, smooth = false, avgWindow = 0, lineFromXzero, lineFromXmax,\n    yMaxMinRound,\n}) {\n    const dataMap = {};\n    if (data && data.length) {\n        const minX = xMin || Math.min(...data.map(d => d.x), xMin);\n        const maxX = xMax || Math.max(...data.map(d => d.x), xMax);\n\n        let minY;\n        let maxY;\n        if (maxMinFixed) {\n            minY = util.isNumber(yMin) ? yMin : findMinY({ data });\n        } else {\n            minY = util.isNumber(yMin) ? findMinY({ data, min: yMin }) : findMinY({ data });\n            if (yMaxMinRound) {\n                minY = round5(minY, true);\n            }\n        }\n        if (maxMinFixed) {\n            maxY = util.isNumber(yMax) ? yMax : findMaxY({ data });\n        } else {\n            maxY = util.isNumber(yMax) ? findMaxY({ data, max: yMax }) : findMaxY({ data });\n            if (yMaxMinRound) {\n                maxY = round5(maxY);\n            }\n        }\n\n        const realHeight = height;\n        const fnX = (val, idx) => {\n            if (val === -1) {\n                return -1;\n            }\n\n            const dataVal = normalizeRange(val, minX, maxX, minX, maxX);\n            const x = Math.round(normalizeRange(dataVal, minX, maxX, 0, width));\n            // const x = Math.round(val / maxX * width);\n            if (util.isDefined(idx)) {\n                if (!dataMap[idx]) {\n                    dataMap[idx] = {};\n                }\n                dataMap[idx].x = x;\n                dataMap[idx].xVal = val;\n            }\n            return x;\n        }\n\n        const fnY = (val, idx) => {\n            if (val === -1) {\n                return height;\n            }\n            let dataVal = val;\n            if (util.isNumber(yRangeMin) && util.isNumber(yRangeMax)) {\n                dataVal = normalizeRange(dataVal, minY, maxY, yRangeMin, yRangeMax);\n                return realHeight - normalizeRange(dataVal, yRangeMin, yRangeMax, 0, height - offsetY);\n            }\n            if (dataVal === null) {\n                return null;\n            }\n            dataVal = normalizeRange(dataVal, minY, maxY, minY, maxY);\n            const y = Math.round(realHeight - normalizeRange(dataVal, minY, maxY, 0, height - offsetY));\n            if (util.isDefined(idx)) {\n                if (!dataMap[idx]) { dataMap[idx] = {}; }\n                dataMap[idx].y = y;\n                dataMap[idx].yVal = dataVal;\n            }\n            return y;\n        };\n\n        const dataArray = data.map((p, idx) => [fnX(p.x, idx + 1), fnY(p.y, idx + 1)]).filter(e => e[1] !== null);\n        const finalDataArray = avgWindow > 0 ? smoothValues(dataArray, avgWindow, (e) => e[1], (e, val) => [e[0], val]) : dataArray;\n        for (let i = 0, l = finalDataArray.length; i < l; i += 1) {\n            if (util.isDefined(dataMap[i])) {\n                dataMap[i + 1].ySmooth = finalDataArray[i][1];\n            }\n        }\n\n        const d = svgPath(finalDataArray, smooth ? bezierCommand : lineCommand, {\n            height,\n            width,\n            lineFromXzero,\n            lineFromXmax,\n        });\n        const dOriginal = svgPath(dataArray, lineCommand, { height });\n        return { d, maxX, maxY, minY, dOriginal, dataMap };\n    }\n    return {};\n}\n\nconst initialState = {\n    mouseData: {},\n};\n\n@observer\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState,\n        };\n        this.svgRef = null;\n        this.svgContainerRef = null;\n    }\n\n    mouseMove = (e) => {\n        if (this.props.stores) {\n            const { x, y } = this.getCoordsWithPadding(e.layerX, e.layerY);\n            const { appState } = this.props.stores;\n            appState.setMousePosition([x, y]);\n        }\n    };\n\n    getCoordsWithPadding(xVal, yVal) {\n        if (!this.svgRef) {\n            return {};\n        }\n\n        const {\n            width = 600,\n            height = 200,\n            paddingLeft,\n            // paddingRight,\n            paddingTop,\n            paddingBottom,\n            showYTicksLeft,\n            // showYTicksRight,\n            showXTicks,\n        } = this.props;\n\n        const PADDING_LEFT = paddingLeft || (showYTicksLeft ? 35 : 0);\n        const PADDING_RIGHT = 0; //paddingRight || (showYTicksRight ? 35 : 0);\n        const PADDING_TOP = paddingTop;\n        const PADDING_BOTTOM = paddingBottom || (showXTicks ? 20 : 0);\n        // console.log({ PADDING_LEFT, PADDING_RIGHT, PADDING_TOP, PADDING_BOTTOM });\n\n        const svgWidth = this.svgRef.clientWidth;\n        const svgHeight = this.svgRef.clientHeight;\n\n        const x = parseInt(normalizeRange(xVal, PADDING_LEFT, svgWidth, PADDING_RIGHT, width), 10);\n        const y = parseInt(normalizeRange(yVal, PADDING_TOP, svgHeight, PADDING_BOTTOM, height), 10);\n\n        return { x, y };\n    }\n\n    getMouseCoordX(maxX, xPos) {\n        const { width = 600 } = this.props;\n        return parseInt(normalizeRange(xPos, 0, width, 0, maxX), 10) + 1;\n    }\n\n    getCoordX(minX, maxX, x) {\n        const { width = 600 } = this.props;\n        return normalizeRange(x, minX, maxX, 0, width);\n    }\n\n    getTextBoxX(mousePos, align, subtractPadding = 0) {\n        const RIGHT_TEXT_OFFSET = 150;\n        const LEFT_SIDE_OF_MOUSE_LINE = 180;\n        const { width = 600 } = this.props;\n\n        const pos = (mousePos / width * 100) > 75 ? mousePos - LEFT_SIDE_OF_MOUSE_LINE : mousePos;\n        if (align === 'right') {\n            return pos + TEXT_PADDING_X - subtractPadding + RIGHT_TEXT_OFFSET;\n        }\n        return pos + TEXT_PADDING_X - subtractPadding;\n    }\n\n    getMouseData(minX, maxX, dataMap, xPos, key, opt = { autoLimit: false, padding: 0 }) {\n        const { width = 600 } = this.props;\n        const x = parseInt(normalizeRange(xPos, 0, width, minX, maxX), 10) + 1;\n        if (!util.isObject(dataMap)) {\n            return null;\n        }\n        // Find closest value to current mouse position.\n        const dataMapArr = Object.values(dataMap);\n        const dataMapCurrent = dataMapArr.reduce(({ xVal, ...resto }, { xVal: a, ...rest }) =>\n            Math.abs(x - a) < Math.abs(x - xVal) ? { xVal: a, ...rest } : { xVal, ...resto }\n        );\n\n\n        if (util.isObject(dataMapCurrent)) {\n            if (!key) {\n                return dataMapCurrent;\n            }\n            // if (opt.autoLimit && key === 'y') {\n            //     const val = dataMapCurrent.yVal;\n            //     if (val > height / 2) {\n            //         return val - 70 - opt.padding;\n            //     }\n            //     return val + 20 - opt.padding;\n            // }\n            // if (opt.autoLimit && key === 'x') {\n            //     const val = dataMapCurrent.x;\n            //     if (val > width / 2) {\n            //         // console.log(`autoLimit=${autoLimit}, key=${key}, val=${val}, width=${width}`)\n            //         return val - 160 - opt.padding;\n            //     }\n            //     return val + 20 - opt.padding;\n            // }\n            const val = dataMapCurrent[key];\n            return val;\n        }\n    }\n\n    componentDidMount() {\n        const { showValueLeftLine, showValueRightLine, scrollToRight = false } = this.props;\n        if(showValueLeftLine || showValueRightLine) {\n            this.svgRef.addEventListener('mousemove', this.mouseMove);\n        }\n        if (this.svgContainerRef && scrollToRight) {\n            const maxScroll = this.svgContainerRef.scrollLeftMax || (this.svgContainerRef.scrollWidth - this.svgContainerRef.clientWidth);\n            this.svgContainerRef.scrollLeft = maxScroll;\n        }\n        // onMouseMove={this.mouseMove}\n    }\n\n    componentWillUnmount() {\n        const { showValueLeftLine, showValueRightLine } = this.props;\n        if(showValueLeftLine || showValueRightLine) {\n            this.svgRef.removeEventListener('mousemove', this.mouseMove);\n        }\n    }\n\n    render() {\n        const {\n            width = 600,         // Width of svg.\n            height = 200,        // Height of svg.\n            offsetY = 0,         // Data plot offset y axis.\n            paddingLeft = 0,     // Make room for yTicksLeft.\n            paddingRight = 0,    // Make room for yTicksRight.\n            paddingTop = 0,      // Make room for legends.\n            paddingBottom = 0,   // Make room for xTicks.\n            tickCount = 6,       // Number of ticks to show\n\n            showXTicks,          // Show X ticks.\n            showYTicksLeft,      // Show Y ticks left.\n            showYTicksRight,     // Show Y ticks right.\n\n            xTicks,              // xTicks array to use instead of values. JSON.stringified and backslash escaped.\n            xTicksVal,           // Function used to show x ticks\n            xTicksLink,          // Link to xticks valuies.\n\n            yTicksLeft,          // yTicks array to use instead of values. JSON.stringified and backslash escaped.\n            yTicksLeftVal,       // Function used to show y ticks\n            yTicksLeftPrefix,\n            yTicksLeftPostfix,\n            yTicksLeftWidth,\n\n            yTicksRight,         // yTicks array to use instead of values. JSON.stringified and backslash escaped.\n            yTicksRightVal,      // Function used to show y ticks\n            yTicksRightPrefix,\n            yTicksRightPostfix,\n            yTicksRightWidth,\n\n            xMin,\n            xMax,\n\n            yMaxLeft,            // Y max value to use for yTicks\n            yMinLeft,            // Y min value to use for yTicks\n            yMaxMinLeftRound = true, // Y min max value to use for yTicks\n\n            yMaxRight,           // Y max value to use for yTicks\n            yMinRight,           // Y min value to use for yTicks\n            yMaxMinRightRound = true, // Y min max value to use for yTicks\n\n            rangeMinLeft = [],\n            rangeMaxLeft = [],\n\n            rangeMinRight = [],\n            rangeMaxRight = [],\n\n            dataLeft = [],\n            dataRight = [],\n\n            legendLeft = [],\n            legendRight = [],\n\n            unitLeft = [],\n            unitRight = [],\n\n            dataFillLeft = [],\n            dataFillRight = [],\n\n            avgWindowLeft = [],\n            avgWindowRight = [],\n\n            smoothLeft = [],\n            smoothRight = [],\n\n            hoverValLeft = [],   // Function used to show value for hover.\n            hoverValRight = [],  // Function used to show value for hover.\n\n            showValueLeftLine = true,\n            showValueRightLine = true,\n\n            lineFromXzero,\n            lineFromXmax,\n\n            legendFontSize = '14px',\n            legendLineHeight = 14,\n\n            hoverFontSize = '12px',\n            ticksFontSize = '12px',\n\n            marker,\n            markers = [],\n        } = this.props;\n        const { appState = {} } = this.props.stores || {};\n        const { mousePos = [], darkmode } = appState;\n\n        const PADDING_LEFT = paddingLeft || (showYTicksLeft ? 35 : 0);\n        const PADDING_RIGHT = paddingRight || (showYTicksRight ? 20 : 0);\n        const PADDING_TOP = paddingTop;\n        const PADDING_BOTTOM = paddingBottom || (showXTicks ? 20 : 0);\n        // console.log({ PADDING_LEFT, PADDING_RIGHT, PADDING_TOP, PADDING_BOTTOM });\n        const LEGEND_LINE_HEIGHT = legendLineHeight;\n        const LEGEND_FONT_SIZE = legendFontSize;\n\n        const HOVER_FONT_SIZE = hoverFontSize;\n        const TICKS_FONT_SIZE = ticksFontSize;\n\n        const common = {\n            width,\n            height,\n            offsetY,\n        };\n\n        // console.table(xTicks);\n        // console.table(yTicks);\n        const MIN_Y_LEFT = round5(findMinY({ data: dataLeft, min: yMinLeft }), true);\n        const MAX_Y_LEFT = round5(findMaxY({ data: dataLeft, max: yMaxLeft }), false);\n        const MIN_Y_RIGHT = round5(findMinY({ data: dataRight, min: yMinRight }), true);\n        const MAX_Y_RIGHT = round5(findMaxY({ data: dataRight, max: yMaxRight }), false);\n\n        const MIN_X = findMinX({ data: dataLeft.concat(dataRight), min: xMin });\n        const MAX_X = findMaxX({ data: dataLeft.concat(dataRight), max: xMax });\n        // console.log({ MIN_Y_LEFT, MAX_Y_LEFT, MIN_Y_RIGHT, MAX_Y_RIGHT, MIN_X, MAX_X });\n\n        const pathLeft = makePaths({\n            ...common,\n            data: dataLeft,\n            xMin: MIN_X,\n            xMax: MAX_X,\n            yMin: MIN_Y_LEFT,\n            yMax: MAX_Y_LEFT,\n            yRangeMin: rangeMinLeft,\n            yRangeMax: rangeMaxLeft,\n            maxMinFixed: true,\n            smoothLeft,\n            avgWindowLeft,\n            offsetY: PADDING_TOP,\n            lineFromXzero,\n            lineFromXmax,\n            yMaxMinRound: yMaxMinLeftRound,\n        });\n\n        const pathRight = makePaths({\n            ...common,\n            data: dataRight,\n            xMin: MIN_X,\n            xMax: MAX_X,\n            yMin: MIN_Y_RIGHT,\n            yMax: MAX_Y_RIGHT,\n            yRangeMin: rangeMinRight,\n            yRangeMax: rangeMaxRight,\n            maxMinFixed: true,\n            smoothRight,\n            avgWindowRight,\n            offsetY: PADDING_TOP,\n            lineFromXzero,\n            lineFromXmax,\n            yMaxMinRound: yMaxMinRightRound,\n        });\n        // console.log(pathLeft);\n\n        const TOTAL_GRAPHS_LEFT = pathLeft.length;\n        const TOTAL_GRAPHS_RIGHT = pathRight.length;\n        const TOTAL_GRAPHS = TOTAL_GRAPHS_LEFT + TOTAL_GRAPHS_RIGHT;\n        const X_TICKS = xTicks || getTicks(tickCount, MIN_X, MAX_X);\n        const Y_TICKS_LEFT = yTicksLeft || getTicks(tickCount, MIN_Y_LEFT, MAX_Y_LEFT, true, yTicksLeftPrefix, yTicksLeftPostfix);\n        const Y_TICKS_RIGHT = yTicksRight || getTicks(tickCount, MIN_Y_RIGHT, MAX_Y_RIGHT, true, yTicksRightPrefix, yTicksRightPostfix);\n        const markerX = this.getCoordX(MIN_X, MAX_X, marker);\n        return (\n            <div class={style.lineChart} style={`height: ${height}px; overflow: hidden;`}>\n                <div\n                    class='overflow-auto position-relative w-100 h-100'\n                    style='overflow-y: hidden !important;'\n                    ref={c => this.svgContainerRef = c}\n                    onTouchstart={mu.captureEvents}\n\t\t\t\t\tonTouchend={mu.captureEvents}\n\t\t\t\t\tonTouchmove={mu.captureEvents}\n\t\t\t\t\tonScroll={mu.captureEvents}\n                >\n                    <svg xmlns='http://www.w3.org/2000/svg' class={style.svg} viewBox={`0 0 ${width} ${height}`}\n                        preserveAspectRatio='none'\n                        style={`padding-left: ${PADDING_LEFT}px; padding-right: ${PADDING_RIGHT}px; padding-bottom: ${PADDING_BOTTOM}px; width: ${width}px; min-width: 100%; max-height: 100%;`}\n                        ref={c => this.svgRef = c}\n                    >\n                        {pathRight && pathRight.reverse().map((path, idx) => {\n                            let mouseData;\n                            if (mousePos && mousePos.length > 0) {\n                                mouseData = this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0]);\n                            }\n                            return (\n                                <>\n                                    <path d={path.d}\n                                        class={`${style[TOTAL_GRAPHS_RIGHT > 20 ? 'pathOriginal' : `pathRight${TOTAL_GRAPHS_RIGHT - idx - 1}`]}\n                                            ${dataFillRight[TOTAL_GRAPHS_RIGHT - idx - 1] ? style[`pathRightFill${TOTAL_GRAPHS_RIGHT - idx - 1}`] : ''}`}\n                                        fill-rule='evenodd'\n                                    />\n                                    {showValueRightLine && mousePos && mousePos.length > 0 && path.dataMap\n                                        && mouseData && mouseData.yVal\n                                        && <line\n                                            x1={this.getCoordX(MIN_X, MAX_X, MAX_X)}\n                                            x2={mouseData.x}\n                                            y1={mouseData.ySmooth}\n                                            y2={mouseData.ySmooth}\n                                            class={`${style.mouseLine} ${style[`pathRight${TOTAL_GRAPHS_RIGHT - idx - 1}`]}`} />}\n                                </>\n                            );\n                        })}\n                        {pathLeft && pathLeft.reverse().map((path, idx) => {\n                            let mouseData;\n                            if (mousePos && mousePos.length > 0) {\n                                mouseData = this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0]);\n                            }\n                            const currentStyleIdx = TOTAL_GRAPHS_LEFT - idx - 1;\n                            let className = style[`pathLeft${currentStyleIdx}`];\n                            let classFillLeft = style[dataFillLeft[currentStyleIdx] ? style[`pathLeftFill${currentStyleIdx}`] : ''];\n                            if (currentStyleIdx > 9) {\n                                className = style.pathOriginal;\n                            }\n                            return (\n                                <>\n                                    <path d={path.d}\n                                        class={`${className} ${classFillLeft}`}\n                                        fill-rule='evenodd'\n                                    />\n                                    {showValueLeftLine && mousePos && mousePos.length > 0 && path.dataMap\n                                        && mouseData && mouseData.yVal\n                                        && <line\n                                            x1={this.getCoordX(MIN_X, MAX_X, MIN_X)}\n                                            x2={mouseData.x}\n                                            y1={mouseData.ySmooth}\n                                            y2={mouseData.ySmooth}\n                                            class={`${style.mouseLine} ${style[`pathLeft${TOTAL_GRAPHS_LEFT - idx - 1}`]}`} />}\n                                </>\n                            );\n                        })}\n\n                        {/* {dCold && dCold.map(o => <line x1={o[0].x} y1={o[0].y} x2={o[1].x} y2={o[1].y} class={style.pathCold} />)};\n                        {dWarm && dWarm.map(o => <line x1={o[0].x} y1={o[0].y} x2={o[1].x} y2={o[1].y} class={style.pathWarm} />)}; */}\n\n                        {mousePos && mousePos.length > 0 && <line x1={mousePos[0]} y1={height} x2={mousePos[0]} y2='0' class={style.mouseLine} />}\n                        {markerX && <line x1={markerX} y1={height} x2={markerX} y2='0' class={style.marker} />}\n\n                        {markers && markers.map(m => {\n                            const mX = this.getCoordX(MIN_X, MAX_X, m);\n                            return (\n                                <line x1={mX} y1={height} x2={mX} y2='0' class={style.markers} />\n                            );\n                        })}\n\n                        {(showValueLeftLine || showValueRightLine) && pathLeft && mousePos && mousePos.length > 0 && <rect\n                            x={this.getTextBoxX(mousePos[0], '', TEXT_BOX_PADDING_X)}\n                            y={height / 2}\n                            width='165' height={TOTAL_GRAPHS * 15 + 25} rx='5' ry='5' class={style.mouseHoverBox}\n                        />}\n                        {(showValueLeftLine || showValueRightLine) && mousePos && mousePos.length > 0\n                            && <text\n                                x={this.getTextBoxX(mousePos[0])}\n                                y={height / 2}\n                                font-size={HOVER_FONT_SIZE}\n                                class={darkmode ? style.mouseHoverDarkmode : style.mouseHover}\n                                style='border: #ff0000 solid 2px;'\n                            >\n                                {showValueLeftLine && pathLeft && pathLeft.reverse().map((path, idx) => {\n                                    const hoverVal = util.isArray(hoverValLeft) && util.isFunction(hoverValLeft[idx]) ? hoverValLeft[idx] : (val) => val;\n                                    const mouseData = this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0]);\n                                    return (\n                                        <>\n                                            {mouseData && idx === 0 && <tspan\n                                                x={this.getTextBoxX(mousePos[0])}\n                                                dy='1.2em'\n                                            >\n                                                {transformXTick(mouseData.xVal, xTicksVal)}\n                                            </tspan>}\n                                            {path.d && path.dataMap && util.isNumber(mouseData.yVal) &&\n                                            <tspan\n                                                // x={this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0], 'x', { autoLimit: true, padding: 0, maxX: MAX_X })}\n                                                // x={this.getCoordX(MIN_X, MAX_X, mouseData.xVal)}\n                                                x={this.getTextBoxX(mousePos[0])}\n                                                dy='1.2em'\n                                                text-anchor='start'\n                                            >\n                                                <tspan class={style[`pathLeft${idx}`]}>--</tspan> {legendLeft[idx]}: {hoverVal(mouseData.yVal)} {unitLeft[idx]}\n                                            </tspan>}\n                                        </>\n                                    );\n                                })}\n                                {showValueRightLine && pathRight && pathRight.reverse().map((path, idx) => {\n                                    const hoverVal = util.isArray(hoverValRight) && util.isFunction(hoverValRight[idx]) ? hoverValRight[idx] : (val) => val;\n                                    let mouseData;\n                                    if (mousePos && mousePos.length > 0) {\n                                        mouseData = this.getMouseData(MIN_X, MAX_X, path.dataMap, mousePos[0]);\n                                    }\n                                    return (\n                                        <>\n                                            {path.d && path.dataMap && util.isNumber(mouseData.yVal) &&\n                                            <tspan\n                                                x={this.getTextBoxX(mousePos[0], 'right')}\n                                                dy='1.2em'\n                                                text-anchor='end'\n                                            >\n                                                {legendRight[idx]}: {hoverVal(mouseData.yVal)} {unitRight[idx]} <tspan class={style[`pathRight${idx}`]}>--</tspan>\n                                            </tspan>}\n                                        </>\n                                    );\n                                })}\n                            </text>}\n                    </svg>\n\n                    {showXTicks && (\n                        <div class={`${style['x-axis']}`}\n                            style={{\n                                left: `${PADDING_LEFT}px`,\n                                bottom: `0px`,\n                                width: `calc(${width}px - ${PADDING_LEFT}px)`,\n                                'font-size': TICKS_FONT_SIZE,\n                            }}\n                        >\n                            {xTicksLink ? (\n                                <>\n                                    {X_TICKS.map(v => <div data-value={transformXTick(v, xTicksVal)} class='position-relative'><a href={`${xTicksLink}${v}`} class='stretched-link'>&nbsp;</a></div>)}\n                                </>\n                            ): (\n                                <>\n                                    {X_TICKS.map(v => <div data-value={transformXTick(v, xTicksVal)} />)}\n                                </>\n                            )}\n                        </div>\n                    )}\n                </div>\n\n                <div\n                    class='position-absolute'\n                    style={`top: 0; left: ${PADDING_LEFT + 20}px;`}\n                >\n                    {legendLeft && legendLeft.map((legend, idx) => {\n                        const currentStyleIdx = idx;\n                        let className = style[`legendLeft${currentStyleIdx}`];\n                        if (currentStyleIdx > 9) {\n                            className = style.legendOriginal;\n                        }\n                        return (\n                            <div class='d-flex align-items-center'>\n                                <span \n                                    class={`${className}`}\n                                />\n                                <small\n                                    class={style.pathText}\n                                    x='35' y={15 + LEGEND_LINE_HEIGHT * idx}\n                                    font-size={LEGEND_FONT_SIZE}\n                                >{legend}</small>\n                            </div>\n                        );\n                    })}\n                </div>\n                <div\n                    class='position-absolute'\n                    style={`top: 0; right: ${PADDING_RIGHT + 70}px;`}\n                >\n                    {legendRight && legendRight.map((legend, idx) => (\n                        <div class='d-flex align-items-center'>\n                            <span\n                                class={`${style[`legendRight${idx}`]}`}\n                                x1={width - 150} y1={10 + LEGEND_LINE_HEIGHT * idx}\n                                x2={width - 130} y2={10 + LEGEND_LINE_HEIGHT * idx}\n                            />\n                            <small\n                                class={style.pathText}\n                                x={width - 125} y={15 + LEGEND_LINE_HEIGHT * idx}\n                                font-size={LEGEND_FONT_SIZE}\n                            >{legend}</small>\n                        </div>\n                    ))}\n                </div>\n\n                {showYTicksLeft && (\n                    <div\n                        class={style['y-axis-left']}\n                        style={{\n                            top: `${PADDING_TOP}px`,\n                            bottom: `${PADDING_BOTTOM}px`,\n                            'font-size': TICKS_FONT_SIZE,\n                            width: `${yTicksLeftWidth}`,\n                        }}\n                    >\n                        {Y_TICKS_LEFT.map(v => <div data-value={transformYTick(v, yTicksLeftVal)} />)}\n                    </div>\n                )}\n                {showYTicksRight && (\n                    <div\n                        class={style['y-axis-right']}\n                        style={{\n                            top: `${PADDING_TOP}px`,\n                            bottom: `${PADDING_BOTTOM}px`,\n                            'font-size': TICKS_FONT_SIZE,\n                            width: `${yTicksRightWidth}`,\n                        }}\n                    >\n                        {Y_TICKS_RIGHT.map(v => <div data-value={transformYTick(v, yTicksRightVal)} />)}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default LineChart;\n"],"sourceRoot":""}